
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xd0008180

Program Header:
    LOAD off    0x00001000 vaddr 0xd0008000 paddr 0xd0008000 align 2**12
         filesz 0x00005f6c memsz 0x00005f6c flags r-x
    LOAD off    0x00000000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00000000 memsz 0x0000246c flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .vectors          00000180  d0008000  d0008000  00001000  2**8  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .crt              00000680  d0008180  d0008180  00001180  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             000049b8  d0008800  d0008800  00001800  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .shutdown         00000298  d000d1b8  d000d1b8  000061b8  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata           00000b0c  d000d460  d000d460  00006460  2**5  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .static_critical  00001fc4  e0000000  e0000000  00007000  2**2  ALLOC
  6 .bss              000004a4  e0001fc8  e0001fc8  00007000  2**3  ALLOC
  7 .logs.fields      00000000  00000000  00000000  00006f6c  2**0  CONTENTS
  8 .riscv.attributes 00000026  00000000  00000000  00006f6c  2**0  CONTENTS, READONLY
  9 .debug_info       00011d8b  00000000  00000000  00006f92  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00003a2a  00000000  00000000  00018d1d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000088  00000000  00000000  0001c747  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line       0000b77c  00000000  00000000  0001c7cf  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loc        000095d8  00000000  00000000  00027f4b  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_ranges     00000ea0  00000000  00000000  00031523  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str        00006d91  00000000  00000000  000323c3  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_frame      00001004  00000000  00000000  00039154  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
d0008000 l    d  .vectors       00000000 .vectors
d0008180 l    d  .crt   00000000 .crt
d0008800 l    d  .text  00000000 .text
d000d1b8 l    d  .shutdown      00000000 .shutdown
d000d460 l    d  .rodata        00000000 .rodata
e0000000 l    d  .static_critical       00000000 .static_critical
e0001fc8 l    d  .bss   00000000 .bss
00000000 l    d  .logs.fields   00000000 .logs.fields
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    df *ABS*  00000000 rom_start.o
c0001073 l       *ABS*  00000000 UNIMP
00030d40 l       *ABS*  00000000 WDOG_BITE_THOLD
00036ee8 l       *ABS*  00000000 WDOG_BARK_THOLD
d0008000 l       .vectors       00000000 
d0008000 l       .vectors       00000000 
d0008080 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008180 l       .crt   00000000 
d0008180 l       .crt   00000000 
d0008194 l       .crt   00000000 kRomStartBootMaybeHalt
d0008194 l       .crt   00000000 
d00081a4 l       .crt   00000000 
d00081a6 l       .crt   00000000 kRomStartBootExecEn
d00081a6 l       .crt   00000000 
d00081a6 l       .crt   00000000 
d00081d8 l       .crt   00000000 kRomStartStoreT1ToBiteThold
d00081d8 l       .crt   00000000 
d00081e2 l       .crt   00000000 kRomStartWatchdogEnabled
d00081e2 l       .crt   00000000 
00000000 l       .debug_info    00000000 
00000000 l       .debug_abbrev  00000000 
d0008180 l       .vectors       00000000 
d000838c l       .crt   00000000 
00000000 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 rom.c
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008802 l       .text  00000000 
d0008810 l       .text  00000000 
d0008818 l       .text  00000000 
d000881c l       .text  00000000 
d000881c l       .text  00000000 
d000881c l       .text  00000000 
d000881c l       .text  00000000 
d0008838 l       .text  00000000 
d0008838 l       .text  00000000 
d000883a l       .text  00000000 
d000883a l       .text  00000000 
d000883e l       .text  00000000 
d000883e l       .text  00000000 
d0008842 l       .text  00000000 
d0008842 l       .text  00000000 
d0008842 l       .text  00000000 
d0008842 l       .text  00000000 
d0008862 l       .text  00000000 
d0008862 l       .text  00000000 
d0008862 l       .text  00000000 
d0008862 l       .text  00000000 
d000887e l       .text  00000000 
d000887e l       .text  00000000 
d000887e l       .text  00000000 
d000887e l       .text  00000000 
d0008882 l       .text  00000000 
d0008882 l       .text  00000000 
d0008886 l       .text  00000000 
d0008886 l       .text  00000000 
d0008890 l       .text  00000000 
d0008894 l       .text  00000000 
d0008894 l       .text  00000000 
d0008898 l       .text  00000000 
d000889c l       .text  00000000 
d00088a0 l       .text  00000000 
d00088a0 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088ac l       .text  00000000 
d00088ac l       .text  00000000 
d00088b0 l       .text  00000000 
d00088b0 l       .text  00000000 
d00088b2 l       .text  00000000 
d00088b2 l       .text  00000000 
d00088b6 l       .text  00000000 
d00088ba l       .text  00000000 
d00088ba l       .text  00000000 
d00088c4 l       .text  00000000 
d00088c8 l       .text  00000000 
d00088c8 l       .text  00000000 
d00088ca l       .text  00000000 
d00088ce l       .text  00000000 
d00088ce l       .text  00000000 
d00088d6 l       .text  00000000 
d00088d8 l       .text  00000000 
d00088d8 l       .text  00000000 
d00088da l       .text  00000000 
d00088da l       .text  00000000 
d00088de l       .text  00000000 
d00088de l       .text  00000000 
d00088e2 l       .text  00000000 
d00088e4 l       .text  00000000 
d00088e4 l       .text  00000000 
d00088e4 l       .text  00000000 
d00088e4 l       .text  00000000 
d00088e8 l       .text  00000000 
d00088e8 l       .text  00000000 
d00088ec l       .text  00000000 
d00088f8 l       .text  00000000 
d00088f8 l       .text  00000000 
d00088fc l       .text  00000000 
d00088fc l       .text  00000000 
d00088fe l       .text  00000000 
d0008900 l       .text  00000000 
d0008904 l       .text  00000000 
d0008908 l       .text  00000000 
d0008908 l       .text  00000000 
d000890e l       .text  00000000 
d000890e l       .text  00000000 
d0008910 l       .text  00000000 
d0008910 l       .text  00000000 
d0008914 l       .text  00000000 
d0008914 l       .text  00000000 
d0008918 l       .text  00000000 
d0008924 l       .text  00000000 
d0008924 l       .text  00000000 
d0008928 l       .text  00000000 
d000892a l       .text  00000000 
d000892a l       .text  00000000 
d0008932 l       .text  00000000 
d0008932 l       .text  00000000 
d0008936 l       .text  00000000 
d0008936 l       .text  00000000 
d000893a l       .text  00000000 
d000893a l       .text  00000000 
d000893c l       .text  00000000 
d0008940 l       .text  00000000 
d0008940 l       .text  00000000 
d0008944 l       .text  00000000 
d0008944 l       .text  00000000 
d0008948 l       .text  00000000 
d000894e l       .text  00000000 
d000894e l       .text  00000000 
d0008952 l       .text  00000000 
d0008952 l       .text  00000000 
d0008956 l       .text  00000000 
d0008956 l       .text  00000000 
d000895a l       .text  00000000 
d000895a l       .text  00000000 
d0008960 l       .text  00000000 
d0008960 l       .text  00000000 
d0008982 l       .text  00000000 
d0008982 l       .text  00000000 
d0008984 l       .text  00000000 
d0008984 l       .text  00000000 
d0008986 l       .text  00000000 
d0008986 l       .text  00000000 
d0008988 l       .text  00000000 
d0008988 l       .text  00000000 
d000898c l       .text  00000000 
d000898c l       .text  00000000 
d0008990 l       .text  00000000 
d000899c l       .text  00000000 
d0008a4c l     F .text  000000f8 rom_bootstrap_message
d000899c l       .text  00000000 
d000899e l       .text  00000000 
d000899e l       .text  00000000 
d00089be l       .text  00000000 
d00089be l       .text  00000000 
d00089be l       .text  00000000 
d00089be l       .text  00000000 
d00089c2 l       .text  00000000 
d00089c8 l       .text  00000000 
d00089d4 l       .text  00000000 
d00089d8 l       .text  00000000 
d00089d8 l       .text  00000000 
d00089da l       .text  00000000 
d00089da l       .text  00000000 
d00089de l       .text  00000000 
d00089de l       .text  00000000 
d00089ea l       .text  00000000 
d00089ec l       .text  00000000 
d00089ec l       .text  00000000 
d00089f0 l       .text  00000000 
d00089f0 l       .text  00000000 
d00089f4 l       .text  00000000 
d00089f4 l       .text  00000000 
d00089f8 l       .text  00000000 
d00089f8 l       .text  00000000 
d00089fe l       .text  00000000 
d00089fe l       .text  00000000 
d0008a02 l       .text  00000000 
d0008a02 l       .text  00000000 
d0008a06 l       .text  00000000 
d0008a1e l       .text  00000000 
d0008a1e l       .text  00000000 
d0008a22 l       .text  00000000 
d0008a22 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a46 l       .text  00000000 
d0008a46 l       .text  00000000 
d0008a46 l       .text  00000000 
d0008b44 l     F .text  00000224 rom_try_boot
d0008a46 l       .text  00000000 
d0008a48 l       .text  00000000 
d0008a48 l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4e l       .text  00000000 
d0008a4e l       .text  00000000 
d0008a50 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a68 l       .text  00000000 
d0008a68 l       .text  00000000 
d0008a70 l       .text  00000000 
d0008a70 l       .text  00000000 
d0008a78 l       .text  00000000 
d0008a78 l       .text  00000000 
d0008a80 l       .text  00000000 
d0008a80 l       .text  00000000 
d0008a88 l       .text  00000000 
d0008a88 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a96 l       .text  00000000 
d0008a96 l       .text  00000000 
d0008a9c l       .text  00000000 
d0008a9c l       .text  00000000 
d0008aa4 l       .text  00000000 
d0008aa4 l       .text  00000000 
d0008aac l       .text  00000000 
d0008aac l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008abc l       .text  00000000 
d0008abc l       .text  00000000 
d0008ac4 l       .text  00000000 
d0008ac4 l       .text  00000000 
d0008acc l       .text  00000000 
d0008acc l       .text  00000000 
d0008ad4 l       .text  00000000 
d0008ad4 l       .text  00000000 
d0008adc l       .text  00000000 
d0008adc l       .text  00000000 
d0008ae4 l       .text  00000000 
d0008ae4 l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008af4 l       .text  00000000 
d0008af4 l       .text  00000000 
d0008afc l       .text  00000000 
d0008afc l       .text  00000000 
d0008b04 l       .text  00000000 
d0008b04 l       .text  00000000 
d0008b0c l       .text  00000000 
d0008b0c l       .text  00000000 
d0008b14 l       .text  00000000 
d0008b14 l       .text  00000000 
d0008b1c l       .text  00000000 
d0008b1c l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b2c l       .text  00000000 
d0008b2c l       .text  00000000 
d0008b34 l       .text  00000000 
d0008b34 l       .text  00000000 
d0008b3a l       .text  00000000 
d0008b3a l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b44 l       .text  00000000 
d0008b46 l       .text  00000000 
d0008b54 l       .text  00000000 
d0008b58 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b84 l       .text  00000000 
d0008b84 l       .text  00000000 
d0008b86 l       .text  00000000 
d0008b86 l       .text  00000000 
d0008b8a l       .text  00000000 
d0008b8a l       .text  00000000 
d0008b8e l       .text  00000000 
d0008b9a l       .text  00000000 
d0008b9a l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9e l       .text  00000000 
d0008ba4 l       .text  00000000 
d0008bb8 l       .text  00000000 
d0008bb8 l       .text  00000000 
d0008bbc l       .text  00000000 
d0008bbc l       .text  00000000 
d0008bc0 l       .text  00000000 
d0008bc0 l       .text  00000000 
d0008bc0 l       .text  00000000 
d0008bc0 l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bc6 l       .text  00000000 
d0008bd4 l       .text  00000000 
d0008bd6 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bde l       .text  00000000 
d0008bde l       .text  00000000 
d0008bde l       .text  00000000 
d0008bde l       .text  00000000 
d0008d68 l     F .text  0000014e rom_verify
d0008be4 l       .text  00000000 
d0008be4 l       .text  00000000 
d0008bf8 l       .text  00000000 
d0008bfe l       .text  00000000 
d0008bfe l       .text  00000000 
d0008bfe l       .text  00000000 
d0008bfe l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c08 l       .text  00000000 
d0008c14 l       .text  00000000 
d0008c16 l       .text  00000000 
d0008c16 l       .text  00000000 
d0008c1a l       .text  00000000 
d0008c2a l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c48 l       .text  00000000 
d0008c48 l       .text  00000000 
d0008c48 l       .text  00000000 
d0008c48 l       .text  00000000 
d0008c5e l       .text  00000000 
d0008c5e l       .text  00000000 
d0008c5e l       .text  00000000 
d0008c5e l       .text  00000000 
d0008c60 l       .text  00000000 
d0008eb6 l     F .text  000003ce rom_boot
d0008c64 l       .text  00000000 
d0008c64 l       .text  00000000 
d0008c66 l       .text  00000000 
d0008c66 l       .text  00000000 
d0008c6a l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c7a l       .text  00000000 
d0008c7a l       .text  00000000 
d0008c7e l       .text  00000000 
d0008c92 l       .text  00000000 
d0008c92 l       .text  00000000 
d0008c92 l       .text  00000000 
d0008c92 l       .text  00000000 
d0008c96 l       .text  00000000 
d0008c96 l       .text  00000000 
d0008c96 l       .text  00000000 
d0008c96 l       .text  00000000 
d0008c98 l       .text  00000000 
d0008c9c l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb6 l       .text  00000000 
d0008cb6 l       .text  00000000 
d0008cb8 l       .text  00000000 
d0008cb8 l       .text  00000000 
d0008cbc l       .text  00000000 
d0008cbc l       .text  00000000 
d0008cc0 l       .text  00000000 
d0008ccc l       .text  00000000 
d0008ccc l       .text  00000000 
d0008cce l       .text  00000000 
d0008cce l       .text  00000000 
d0008cd2 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce8 l       .text  00000000 
d0008cec l       .text  00000000 
d0008cf8 l       .text  00000000 
d0008d12 l       .text  00000000 
d0008d12 l       .text  00000000 
d0008d16 l       .text  00000000 
d0008d16 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d34 l       .text  00000000 
d0008d38 l       .text  00000000 
d0008d38 l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d3e l       .text  00000000 
d0008d3e l       .text  00000000 
d0008d42 l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d68 l       .text  00000000 
d0008d68 l       .text  00000000 
d000838c l       .crt   00000000 
d000838c l       .crt   00000000 
d000838c l       .crt   00000000 
d000838c l       .crt   00000000 
d0008390 l       .crt   00000000 
d0008390 l       .crt   00000000 
d0008394 l       .crt   00000000 
d0008396 l       .crt   00000000 
d0008398 l       .crt   00000000 
d000839a l       .crt   00000000 
d00083a6 l       .crt   00000000 
d00083a6 l       .crt   00000000 
d00083aa l       .crt   00000000 
d00083aa l       .crt   00000000 
d0008d68 l       .text  00000000 
d0008d68 l       .text  00000000 
d0008d68 l       .text  00000000 
d0008d6a l       .text  00000000 
d0008d7a l       .text  00000000 
d0008d7a l       .text  00000000 
d0008d7e l       .text  00000000 
d0008d94 l       .text  00000000 
d0008d94 l       .text  00000000 
d0008d96 l       .text  00000000 
d0008d96 l       .text  00000000 
d0008d9c l       .text  00000000 
d0008d9c l       .text  00000000 
d0008d9c l       .text  00000000 
d0008d9c l       .text  00000000 
d0008da0 l       .text  00000000 
d0008da0 l       .text  00000000 
d0008daa l       .text  00000000 
d0008daa l       .text  00000000 
d0008dac l       .text  00000000 
d0008dac l       .text  00000000 
d0008db0 l       .text  00000000 
d0008db0 l       .text  00000000 
d0008db4 l       .text  00000000 
d0008dc0 l       .text  00000000 
d0008dc0 l       .text  00000000 
d0008dc4 l       .text  00000000 
d0008dc4 l       .text  00000000 
d0008dd0 l       .text  00000000 
d0008dd6 l       .text  00000000 
d0008dd6 l       .text  00000000 
d0008dd8 l       .text  00000000 
d0008dd8 l       .text  00000000 
d0008ddc l       .text  00000000 
d0008ddc l       .text  00000000 
d0008de4 l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df4 l       .text  00000000 
d0008df4 l       .text  00000000 
d0008df6 l       .text  00000000 
d0008e02 l       .text  00000000 
d0008e02 l       .text  00000000 
d0008e06 l       .text  00000000 
d0008e08 l       .text  00000000 
d0008e08 l       .text  00000000 
d0008e0a l       .text  00000000 
d0008e0a l       .text  00000000 
d0008e0e l       .text  00000000 
d0008e0e l       .text  00000000 
d0008e12 l       .text  00000000 
d0008e12 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e1a l       .text  00000000 
d0008e1e l       .text  00000000 
d0008e20 l       .text  00000000 
d0008e20 l       .text  00000000 
d0008e22 l       .text  00000000 
d0008e22 l       .text  00000000 
d0008e2a l       .text  00000000 
d0008e2a l       .text  00000000 
d0008e2e l       .text  00000000 
d0008e3e l       .text  00000000 
d0008e42 l       .text  00000000 
d0008e48 l       .text  00000000 
d0008e48 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e56 l       .text  00000000 
d0008e5a l       .text  00000000 
d0008e5a l       .text  00000000 
d0008e60 l       .text  00000000 
d0008e60 l       .text  00000000 
d0008e66 l       .text  00000000 
d0008e66 l       .text  00000000 
d0008e78 l       .text  00000000 
d0008e78 l       .text  00000000 
d0008e92 l       .text  00000000 
d0008e92 l       .text  00000000 
d0008e92 l       .text  00000000 
d0008e92 l       .text  00000000 
d0008e94 l       .text  00000000 
d0008e94 l       .text  00000000 
d0008e98 l       .text  00000000 
d0008ea2 l       .text  00000000 
d0008ea2 l       .text  00000000 
d0008ea4 l       .text  00000000 
d0008eac l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eb8 l       .text  00000000 
d0008ece l       .text  00000000 
d0008ece l       .text  00000000 
d0008ed2 l       .text  00000000 
d0008eec l       .text  00000000 
d0008eec l       .text  00000000 
d0008eee l       .text  00000000 
d0008eee l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008efc l       .text  00000000 
d0008efc l       .text  00000000 
d0008efe l       .text  00000000 
d0008efe l       .text  00000000 
d0008f02 l       .text  00000000 
d0008f02 l       .text  00000000 
d0008f06 l       .text  00000000 
d0008f12 l       .text  00000000 
d0008f12 l       .text  00000000 
d0008f16 l       .text  00000000 
d0008f16 l       .text  00000000 
d0008f1a l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f20 l       .text  00000000 
d0008f20 l       .text  00000000 
d0008f24 l       .text  00000000 
d0008f24 l       .text  00000000 
d0008f28 l       .text  00000000 
d0008f34 l       .text  00000000 
d0008f34 l       .text  00000000 
d0008f3c l       .text  00000000 
d0008f3e l       .text  00000000 
d0008f42 l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f52 l       .text  00000000 
d0008f56 l       .text  00000000 
d0008f56 l       .text  00000000 
d0008f5a l       .text  00000000 
d0008f5e l       .text  00000000 
d0008f5e l       .text  00000000 
d0008f66 l       .text  00000000 
d0008f70 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f7a l       .text  00000000 
d0008f7a l       .text  00000000 
d0008f7e l       .text  00000000 
d0008f82 l       .text  00000000 
d0008f82 l       .text  00000000 
d0008f86 l       .text  00000000 
d0008f86 l       .text  00000000 
d0008f86 l       .text  00000000 
d0008f8a l       .text  00000000 
d0008f8a l       .text  00000000 
d0008f8e l       .text  00000000 
d0008f8e l       .text  00000000 
d0008fa0 l       .text  00000000 
d0008fa0 l       .text  00000000 
d0008fa2 l       .text  00000000 
d0008fa6 l       .text  00000000 
d0008faa l       .text  00000000 
d0008fba l       .text  00000000 
d0008fba l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fde l       .text  00000000 
d0008fde l       .text  00000000 
d0008fe2 l       .text  00000000 
d0008fe2 l       .text  00000000 
d0008fe4 l       .text  00000000 
d0008fe4 l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fec l       .text  00000000 
d0008ff8 l       .text  00000000 
d0008ff8 l       .text  00000000 
d0008ffe l       .text  00000000 
d0009002 l       .text  00000000 
d0009002 l       .text  00000000 
d0009006 l       .text  00000000 
d0009006 l       .text  00000000 
d0009008 l       .text  00000000 
d0009008 l       .text  00000000 
d000900c l       .text  00000000 
d000900c l       .text  00000000 
d0009010 l       .text  00000000 
d0009010 l       .text  00000000 
d0009014 l       .text  00000000 
d0009018 l       .text  00000000 
d0009018 l       .text  00000000 
d0009024 l       .text  00000000 
d0009024 l       .text  00000000 
d0009026 l       .text  00000000 
d000902a l       .text  00000000 
d000902a l       .text  00000000 
d000902e l       .text  00000000 
d000902e l       .text  00000000 
d0009030 l       .text  00000000 
d0009030 l       .text  00000000 
d0009034 l       .text  00000000 
d0009034 l       .text  00000000 
d0009038 l       .text  00000000 
d0009044 l       .text  00000000 
d0009044 l       .text  00000000 
d0009048 l       .text  00000000 
d0009048 l       .text  00000000 
d000904c l       .text  00000000 
d0009064 l       .text  00000000 
d0009064 l       .text  00000000 
d0009068 l       .text  00000000 
d0009068 l       .text  00000000 
d000906c l       .text  00000000 
d000906c l       .text  00000000 
d000906c l       .text  00000000 
d000906c l       .text  00000000 
d000908c l       .text  00000000 
d000908c l       .text  00000000 
d000908c l       .text  00000000 
d000908c l       .text  00000000 
d00090a8 l       .text  00000000 
d00090a8 l       .text  00000000 
d00090a8 l       .text  00000000 
d00090a8 l       .text  00000000 
d00090b6 l       .text  00000000 
d00090b6 l       .text  00000000 
d00090b8 l       .text  00000000 
d00090b8 l       .text  00000000 
d00090bc l       .text  00000000 
d00090c8 l       .text  00000000 
d00090c8 l       .text  00000000 
d00090cc l       .text  00000000 
d00090cc l       .text  00000000 
d00090d0 l       .text  00000000 
d00090e8 l       .text  00000000 
d00090e8 l       .text  00000000 
d00090e8 l       .text  00000000 
d00090e8 l       .text  00000000 
d00090ec l       .text  00000000 
d00090ec l       .text  00000000 
d00090ee l       .text  00000000 
d00090ee l       .text  00000000 
d00090f0 l       .text  00000000 
d00090f4 l       .text  00000000 
d00090f4 l       .text  00000000 
d0009100 l       .text  00000000 
d0009104 l       .text  00000000 
d0009104 l       .text  00000000 
d0009108 l       .text  00000000 
d0009120 l       .text  00000000 
d0009120 l       .text  00000000 
d0009120 l       .text  00000000 
d0009120 l       .text  00000000 
d0009128 l       .text  00000000 
d0009128 l       .text  00000000 
d000912a l       .text  00000000 
d000912a l       .text  00000000 
d000912e l       .text  00000000 
d000912e l       .text  00000000 
d0009132 l       .text  00000000 
d0009132 l       .text  00000000 
d000913e l       .text  00000000 
d0009142 l       .text  00000000 
d0009142 l       .text  00000000 
d0009146 l       .text  00000000 
d000915e l       .text  00000000 
d000915e l       .text  00000000 
d000915e l       .text  00000000 
d000915e l       .text  00000000 
d0009166 l       .text  00000000 
d0009166 l       .text  00000000 
d000916a l       .text  00000000 
d000916a l       .text  00000000 
d000916e l       .text  00000000 
d000916e l       .text  00000000 
d0009170 l       .text  00000000 
d0009170 l       .text  00000000 
d0009174 l       .text  00000000 
d0009174 l       .text  00000000 
d0009180 l       .text  00000000 
d0009184 l       .text  00000000 
d0009184 l       .text  00000000 
d0009188 l       .text  00000000 
d0009188 l       .text  00000000 
d000919c l       .text  00000000 
d00091a4 l       .text  00000000 
d00091a4 l       .text  00000000 
d00091a4 l       .text  00000000 
d00091a4 l       .text  00000000 
d00091aa l       .text  00000000 
d00091aa l       .text  00000000 
d00091ca l       .text  00000000 
d00091ca l       .text  00000000 
d00091ca l       .text  00000000 
d00091ca l       .text  00000000 
d00091ce l       .text  00000000 
d00091d2 l       .text  00000000 
d00091ea l       .text  00000000 
d00091ea l       .text  00000000 
d00091ea l       .text  00000000 
d00091ea l       .text  00000000 
d00091ee l       .text  00000000 
d00091f2 l       .text  00000000 
d00091fe l       .text  00000000 
d0009204 l       .text  00000000 
d0009204 l       .text  00000000 
d000920e l       .text  00000000 
d0009212 l       .text  00000000 
d0009212 l       .text  00000000 
d0009216 l       .text  00000000 
d0009216 l       .text  00000000 
d000921c l       .text  00000000 
d000921c l       .text  00000000 
d000923c l       .text  00000000 
d000923c l       .text  00000000 
d000923c l       .text  00000000 
d000923c l       .text  00000000 
d000923e l       .text  00000000 
d000923e l       .text  00000000 
d0009246 l       .text  00000000 
d0009246 l       .text  00000000 
d0009256 l       .text  00000000 
d0009260 l       .text  00000000 
d0009260 l       .text  00000000 
d0009264 l       .text  00000000 
d0009264 l       .text  00000000 
d000926c l       .text  00000000 
d000926c l       .text  00000000 
d0009274 l       .text  00000000 
d0009274 l       .text  00000000 
d000927c l       .text  00000000 
d000927c l       .text  00000000 
d0009284 l       .text  00000000 
d0009284 l       .text  00000000 
d0009284 l       .text  00000000 
00000000 l       .debug_loc     00000000 
0000001b l       .debug_loc     00000000 
00000041 l       .debug_loc     00000000 
00000064 l       .debug_loc     00000000 
0000007f l       .debug_loc     00000000 
000000b0 l       .debug_loc     00000000 
000000d6 l       .debug_loc     00000000 
000000f1 l       .debug_loc     00000000 
00000117 l       .debug_loc     00000000 
00000132 l       .debug_loc     00000000 
0000014d l       .debug_loc     00000000 
00000168 l       .debug_loc     00000000 
0000018e l       .debug_loc     00000000 
000001b4 l       .debug_loc     00000000 
000001da l       .debug_loc     00000000 
00000200 l       .debug_loc     00000000 
00000226 l       .debug_loc     00000000 
00000241 l       .debug_loc     00000000 
0000026e l       .debug_loc     00000000 
000002b8 l       .debug_loc     00000000 
000002de l       .debug_loc     00000000 
00000304 l       .debug_loc     00000000 
0000032a l       .debug_loc     00000000 
00000345 l       .debug_loc     00000000 
0000036b l       .debug_loc     00000000 
00000386 l       .debug_loc     00000000 
000003ac l       .debug_loc     00000000 
000003c7 l       .debug_loc     00000000 
000003e2 l       .debug_loc     00000000 
000003fd l       .debug_loc     00000000 
0000044f l       .debug_loc     00000000 
000004a1 l       .debug_loc     00000000 
000004c7 l       .debug_loc     00000000 
000004e2 l       .debug_loc     00000000 
00000517 l       .debug_loc     00000000 
0000053d l       .debug_loc     00000000 
00000558 l       .debug_loc     00000000 
0000058b l       .debug_loc     00000000 
000005b1 l       .debug_loc     00000000 
000005da l       .debug_loc     00000000 
00000607 l       .debug_loc     00000000 
0000066f l       .debug_loc     00000000 
000006d7 l       .debug_loc     00000000 
000006fd l       .debug_loc     00000000 
00000718 l       .debug_loc     00000000 
00000754 l       .debug_loc     00000000 
0000077a l       .debug_loc     00000000 
000007a0 l       .debug_loc     00000000 
00000871 l       .debug_loc     00000000 
000008ec l       .debug_loc     00000000 
00000912 l       .debug_loc     00000000 
0000092d l       .debug_loc     00000000 
00000953 l       .debug_loc     00000000 
0000096e l       .debug_loc     00000000 
00000994 l       .debug_loc     00000000 
000009af l       .debug_loc     00000000 
000009d5 l       .debug_loc     00000000 
000009fb l       .debug_loc     00000000 
00000a21 l       .debug_loc     00000000 
00000a47 l       .debug_loc     00000000 
00000a6d l       .debug_loc     00000000 
00000a93 l       .debug_loc     00000000 
00000ab5 l       .debug_loc     00000000 
00000adb l       .debug_loc     00000000 
00000b01 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000a8 l       .debug_ranges  00000000 
000000a7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
000001de l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002510 l       .debug_str     00000000 
00001960 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000018a l       .debug_str     00000000 
000001a7 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000001ea l       .debug_str     00000000 
000001fa l       .debug_str     00000000 
0000020a l       .debug_str     00000000 
0000021c l       .debug_str     00000000 
0000022f l       .debug_str     00000000 
00000247 l       .debug_str     00000000 
00000257 l       .debug_str     00000000 
00000265 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
0000027d l       .debug_str     00000000 
0000028b l       .debug_str     00000000 
0000029a l       .debug_str     00000000 
000002ae l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
0000070b l       .debug_str     00000000 
00000720 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000752 l       .debug_str     00000000 
0000077c l       .debug_str     00000000 
0000079f l       .debug_str     00000000 
000007c4 l       .debug_str     00000000 
000007dd l       .debug_str     00000000 
000007f9 l       .debug_str     00000000 
00000817 l       .debug_str     00000000 
0000083a l       .debug_str     00000000 
0000092b l       .debug_str     00000000 
00000850 l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087f l       .debug_str     00000000 
0000089c l       .debug_str     00000000 
000008b4 l       .debug_str     00000000 
000008ca l       .debug_str     00000000 
000008e5 l       .debug_str     00000000 
000008fd l       .debug_str     00000000 
00000919 l       .debug_str     00000000 
00000939 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
0000094d l       .debug_str     00000000 
0000095f l       .debug_str     00000000 
00000970 l       .debug_str     00000000 
0000098b l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c1 l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ea l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a3b l       .debug_str     00000000 
00000a5a l       .debug_str     00000000 
00000a7a l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
00000ab3 l       .debug_str     00000000 
00000a9e l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00000ad4 l       .debug_str     00000000 
00000ae8 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000af2 l       .debug_str     00000000 
00000b07 l       .debug_str     00000000 
00000b13 l       .debug_str     00000000 
00000b21 l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
000011bb l       .debug_str     00000000 
00001211 l       .debug_str     00000000 
00000040 l       .debug_ranges  00000000 
00000028 l       .debug_ranges  00000000 
00000b7a l       .debug_str     00000000 
00000b88 l       .debug_str     00000000 
00000b94 l       .debug_str     00000000 
00000b9e l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00000bb4 l       .debug_str     00000000 
00000bc8 l       .debug_str     00000000 
00000be2 l       .debug_str     00000000 
00000bf0 l       .debug_str     00000000 
00000bfe l       .debug_str     00000000 
00000c0e l       .debug_str     00000000 
00000c22 l       .debug_str     00000000 
00000c2c l       .debug_str     00000000 
00000c3e l       .debug_str     00000000 
00000c52 l       .debug_str     00000000 
00000c85 l       .debug_str     00000000 
00000c65 l       .debug_str     00000000 
00000c76 l       .debug_str     00000000 
00000c94 l       .debug_str     00000000 
00000ca8 l       .debug_str     00000000 
00000cc2 l       .debug_str     00000000 
00000cd8 l       .debug_str     00000000 
000011c4 l       .debug_str     00000000 
00000cf0 l       .debug_str     00000000 
00000d04 l       .debug_str     00000000 
00000d15 l       .debug_str     00000000 
00000d1f l       .debug_str     00000000 
000011da l       .debug_str     00000000 
00000ee2 l       .debug_str     00000000 
00001247 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00000d31 l       .debug_str     00000000 
00000d3e l       .debug_str     00000000 
00000d4d l       .debug_str     00000000 
00000ed6 l       .debug_str     00000000 
00000d67 l       .debug_str     00000000 
00000ecb l       .debug_str     00000000 
00000ec2 l       .debug_str     00000000 
00000d6f l       .debug_str     00000000 
00000e1d l       .debug_str     00000000 
0000613f l       .debug_str     00000000 
00000e4c l       .debug_str     00000000 
00000e60 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00000e75 l       .debug_str     00000000 
00000e83 l       .debug_str     00000000 
00000e94 l       .debug_str     00000000 
00000aa5 l       .debug_str     00000000 
00000e9e l       .debug_str     00000000 
00000eae l       .debug_str     00000000 
00000eb9 l       .debug_str     00000000 
00000adc l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000e2f l       .debug_str     00000000 
00000e14 l       .debug_str     00000000 
00000da5 l       .debug_str     00000000 
00000dbd l       .debug_str     00000000 
00000ddd l       .debug_str     00000000 
00000df1 l       .debug_str     00000000 
00000e03 l       .debug_str     00000000 
00000dc7 l       .debug_str     00000000 
00000db3 l       .debug_str     00000000 
000011fd l       .debug_str     00000000 
00001252 l       .debug_str     00000000 
0000126c l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
0000128b l       .debug_str     00000000 
00000f3e l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00001299 l       .debug_str     00000000 
00001208 l       .debug_str     00000000 
000012a4 l       .debug_str     00000000 
000012bc l       .debug_str     00000000 
000012d4 l       .debug_str     00000000 
00000058 l       .debug_ranges  00000000 
00000070 l       .debug_ranges  00000000 
00000090 l       .debug_ranges  00000000 
00000eec l       .debug_str     00000000 
00000efa l       .debug_str     00000000 
000011e7 l       .debug_str     00000000 
00000f01 l       .debug_str     00000000 
00000f1a l       .debug_str     00000000 
00000f4c l       .debug_str     00000000 
00000f35 l       .debug_str     00000000 
0000624a l       .debug_str     00000000 
00000f65 l       .debug_str     00000000 
00000f80 l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000fc0 l       .debug_str     00000000 
00000fd3 l       .debug_str     00000000 
00000ff3 l       .debug_str     00000000 
00001005 l       .debug_str     00000000 
0000100c l       .debug_str     00000000 
00001021 l       .debug_str     00000000 
00001046 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
0000625a l       .debug_str     00000000 
00001054 l       .debug_str     00000000 
0000106d l       .debug_str     00000000 
00001080 l       .debug_str     00000000 
0000108f l       .debug_str     00000000 
0000109c l       .debug_str     00000000 
000010a8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010e4 l       .debug_str     00000000 
000010f7 l       .debug_str     00000000 
0000110d l       .debug_str     00000000 
00001128 l       .debug_str     00000000 
0000113e l       .debug_str     00000000 
0000114f l       .debug_str     00000000 
00001169 l       .debug_str     00000000 
00001184 l       .debug_str     00000000 
00001197 l       .debug_str     00000000 
000011a7 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
0000122f l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
d0008a4c l       .text  00000000 
d0008b44 l       .text  00000000 
d0008d68 l       .text  00000000 
d00083aa l       .crt   00000000 
d0008eb6 l       .text  00000000 
d0009284 l       .text  00000000 
00000000 l    df *ABS*  00000000 irq_asm.o
d00083ac l       .crt   00000000 
d00083ac l       .crt   00000000 
d00083c2 l       .crt   00000000 
00005827 l       .debug_info    00000000 
00000e5d l       .debug_abbrev  00000000 
d00083c4 l       .crt   00000000 
00000000 l    df *ABS*  00000000 crt.o
d00083c4 l       .crt   00000000 
d00083c4 l       .crt   00000000 
d00083e6 l       .crt   00000000 
d00083e8 l       .crt   00000000 
d00083e8 l       .crt   00000000 
0000c669 l       .debug_info    00000000 
0000234c l       .debug_abbrev  00000000 
d0008422 l       .crt   00000000 
00000000 l    df *ABS*  00000000 rom_epmp_init.o
d0008424 l       .crt   00000000 
d0008424 l       .crt   00000000 
0000cf46 l       .debug_info    00000000 
00002652 l       .debug_abbrev  00000000 
d00084b0 l       .crt   00000000 
00000000 l    df *ABS*  00000000 boot_policy.c
d0009284 l       .text  00000000 
d0009284 l       .text  00000000 
d0009284 l       .text  00000000 
d0009288 l       .text  00000000 
d0009290 l       .text  00000000 
d0009294 l       .text  00000000 
d0009298 l       .text  00000000 
d000929c l       .text  00000000 
d000929e l       .text  00000000 
d00092a6 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092a8 l       .text  00000000 
d00092b4 l       .text  00000000 
d00092b8 l       .text  00000000 
d00092bc l       .text  00000000 
d00092ca l       .text  00000000 
d00092ce l       .text  00000000 
d00092d0 l       .text  00000000 
d00092d4 l       .text  00000000 
d00092d8 l       .text  00000000 
d00092dc l       .text  00000000 
d00092dc l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e4 l       .text  00000000 
d00092f0 l       .text  00000000 
d00092fc l       .text  00000000 
d0009308 l       .text  00000000 
d0009316 l       .text  00000000 
d000931a l       .text  00000000 
d0009326 l       .text  00000000 
d0009332 l       .text  00000000 
d0009332 l       .text  00000000 
d0009336 l       .text  00000000 
d0009336 l       .text  00000000 
d0009336 l       .text  00000000 
d0009336 l       .text  00000000 
d0009338 l       .text  00000000 
d0009338 l       .text  00000000 
d000933c l       .text  00000000 
d0009340 l       .text  00000000 
d0009342 l       .text  00000000 
d0009346 l       .text  00000000 
d000934c l       .text  00000000 
d000934c l       .text  00000000 
d0009350 l       .text  00000000 
d0009362 l       .text  00000000 
d0009362 l       .text  00000000 
00000b27 l       .debug_loc     00000000 
00000b6e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000012e0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000e0 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000ecb l       .debug_str     00000000 
00000ec2 l       .debug_str     00000000 
00000d6f l       .debug_str     00000000 
00000e1d l       .debug_str     00000000 
0000613f l       .debug_str     00000000 
00000e4c l       .debug_str     00000000 
00001960 l       .debug_str     00000000 
00000e60 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00000e75 l       .debug_str     00000000 
00000e83 l       .debug_str     00000000 
00000e94 l       .debug_str     00000000 
00000aa5 l       .debug_str     00000000 
00000e9e l       .debug_str     00000000 
00000eae l       .debug_str     00000000 
00000eb9 l       .debug_str     00000000 
00000adc l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000e2f l       .debug_str     00000000 
00000e14 l       .debug_str     00000000 
00000da5 l       .debug_str     00000000 
00000dbd l       .debug_str     00000000 
00000ddd l       .debug_str     00000000 
00000df1 l       .debug_str     00000000 
00000e03 l       .debug_str     00000000 
00000dc7 l       .debug_str     00000000 
00000db3 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000ab3 l       .debug_str     00000000 
00000a9e l       .debug_str     00000000 
00000d4d l       .debug_str     00000000 
0000130c l       .debug_str     00000000 
00001313 l       .debug_str     00000000 
00000f71 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000f65 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
0000131a l       .debug_str     00000000 
0000122f l       .debug_str     00000000 
00000ed6 l       .debug_str     00000000 
00000d67 l       .debug_str     00000000 
000001de l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002510 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000018a l       .debug_str     00000000 
000001a7 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000000d8 l       .debug_frame   00000000 
d00092a8 l       .text  00000000 
d0009362 l       .text  00000000 
00000000 l    df *ABS*  00000000 boot_data.c
d0009362 l       .text  00000000 
d0009362 l       .text  00000000 
d0009362 l       .text  00000000 
d0009364 l       .text  00000000 
d000936c l       .text  00000000 
d000936e l       .text  00000000 
d0009370 l       .text  00000000 
d0009370 l       .text  00000000 
d000953c l     F .text  0000039a boot_data_active_page_find
d0009374 l       .text  00000000 
d0009376 l       .text  00000000 
d0009376 l       .text  00000000 
d0009378 l       .text  00000000 
d0009378 l       .text  00000000 
d000937c l       .text  00000000 
d000937c l       .text  00000000 
d0009380 l       .text  00000000 
d000938c l       .text  00000000 
d000938c l       .text  00000000 
d000938e l       .text  00000000 
d000938e l       .text  00000000 
d0009390 l       .text  00000000 
d0009390 l       .text  00000000 
d0009394 l       .text  00000000 
d0009394 l       .text  00000000 
d0009398 l       .text  00000000 
d0009398 l       .text  00000000 
d00093a4 l       .text  00000000 
d00093a4 l       .text  00000000 
d00093ac l       .text  00000000 
d00093ac l       .text  00000000 
d00093b4 l       .text  00000000 
d00093b4 l       .text  00000000 
d00093b4 l       .text  00000000 
d00093b4 l       .text  00000000 
d00093b6 l       .text  00000000 
d00093b6 l       .text  00000000 
d00093b6 l       .text  00000000 
d00093b6 l       .text  00000000 
d00093b8 l       .text  00000000 
d00093b8 l       .text  00000000 
d00093c0 l       .text  00000000 
d00093c0 l       .text  00000000 
d00093c4 l       .text  00000000 
d00093c4 l       .text  00000000 
d00093c8 l       .text  00000000 
d00093cc l       .text  00000000 
d00093d4 l       .text  00000000 
d00093d8 l       .text  00000000 
d00093e8 l       .text  00000000 
d00093e8 l       .text  00000000 
d00093ee l       .text  00000000 
d00093f2 l       .text  00000000 
d00093f6 l       .text  00000000 
d0009404 l       .text  00000000 
d0009404 l       .text  00000000 
d000940c l       .text  00000000 
d000940c l       .text  00000000 
d0009410 l       .text  00000000 
d000941c l       .text  00000000 
d000941c l       .text  00000000 
d000941e l       .text  00000000 
d000941e l       .text  00000000 
d0009422 l       .text  00000000 
d0009422 l       .text  00000000 
d0009426 l       .text  00000000 
d0009426 l       .text  00000000 
d0009436 l       .text  00000000 
d0009436 l       .text  00000000 
d000943c l       .text  00000000 
d0009440 l       .text  00000000 
d0009444 l       .text  00000000 
d000945a l       .text  00000000 
d000945a l       .text  00000000 
d0009462 l       .text  00000000 
d0009466 l       .text  00000000 
d0009472 l       .text  00000000 
d0009472 l       .text  00000000 
d0009474 l       .text  00000000 
d0009474 l       .text  00000000 
d0009478 l       .text  00000000 
d0009478 l       .text  00000000 
d000947c l       .text  00000000 
d000947c l       .text  00000000 
d000948c l       .text  00000000 
d000948c l       .text  00000000 
d0009492 l       .text  00000000 
d0009496 l       .text  00000000 
d000949a l       .text  00000000 
d000949e l       .text  00000000 
d00094b2 l       .text  00000000 
d00094b2 l       .text  00000000 
d00094b6 l       .text  00000000 
d00094b6 l       .text  00000000 
d00094b8 l       .text  00000000 
d00094b8 l       .text  00000000 
d00094bc l       .text  00000000 
d00094bc l       .text  00000000 
d00094c0 l       .text  00000000 
d00094cc l       .text  00000000 
d00094cc l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d2 l       .text  00000000 
d00094e2 l       .text  00000000 
d00094e8 l       .text  00000000 
d00094ec l       .text  00000000 
d00094f4 l       .text  00000000 
d00094f4 l       .text  00000000 
d00094f8 l       .text  00000000 
d0009500 l       .text  00000000 
d0009500 l       .text  00000000 
d0009504 l       .text  00000000 
d0009504 l       .text  00000000 
d0009508 l       .text  00000000 
d0009508 l       .text  00000000 
d0009512 l       .text  00000000 
d0009512 l       .text  00000000 
d0009518 l       .text  00000000 
d0009518 l       .text  00000000 
d000951c l       .text  00000000 
d0009526 l       .text  00000000 
d0009526 l       .text  00000000 
d000952c l       .text  00000000 
d0009534 l       .text  00000000 
d0009534 l       .text  00000000 
d000953c l       .text  00000000 
d000953c l       .text  00000000 
d000953c l       .text  00000000 
d000953c l       .text  00000000 
d000953c l       .text  00000000 
d000953c l       .text  00000000 
d000953e l       .text  00000000 
d0009560 l       .text  00000000 
d0009562 l       .text  00000000 
d0009562 l       .text  00000000 
d0009564 l       .text  00000000 
d0009564 l       .text  00000000 
d0009580 l       .text  00000000 
d0009580 l       .text  00000000 
d0009580 l       .text  00000000 
d0009580 l       .text  00000000 
d0009584 l       .text  00000000 
d0009586 l       .text  00000000 
d0009586 l       .text  00000000 
d000958a l       .text  00000000 
d000958a l       .text  00000000 
d000958c l       .text  00000000 
d000d460 l     O .rodata        00000008 kPages
d00095b2 l       .text  00000000 
d00095b2 l       .text  00000000 
d00095be l       .text  00000000 
d00095be l       .text  00000000 
d00095c0 l       .text  00000000 
d00095ce l       .text  00000000 
d00095ce l       .text  00000000 
d00095d2 l       .text  00000000 
d00095d2 l       .text  00000000 
d00095d6 l       .text  00000000 
d00095d6 l       .text  00000000 
d00095dc l       .text  00000000 
d00095dc l       .text  00000000 
d00095e2 l       .text  00000000 
d00095e2 l       .text  00000000 
d00095ec l       .text  00000000 
d00095ec l       .text  00000000 
d00095f0 l       .text  00000000 
d00095f4 l       .text  00000000 
d00095f8 l       .text  00000000 
d00095f8 l       .text  00000000 
d0009602 l       .text  00000000 
d0009604 l       .text  00000000 
d0009604 l       .text  00000000 
d0009606 l       .text  00000000 
d0009606 l       .text  00000000 
d000960a l       .text  00000000 
d000960a l       .text  00000000 
d000960e l       .text  00000000 
d000961a l       .text  00000000 
d000961a l       .text  00000000 
d000961c l       .text  00000000 
d000961e l       .text  00000000 
d0009620 l       .text  00000000 
d0009622 l       .text  00000000 
d0009624 l       .text  00000000 
d000962a l       .text  00000000 
d000962a l       .text  00000000 
d000962c l       .text  00000000 
d000962e l       .text  00000000 
d000962e l       .text  00000000 
d0009630 l       .text  00000000 
d0009630 l       .text  00000000 
d0009634 l       .text  00000000 
d0009640 l       .text  00000000 
d0009640 l       .text  00000000 
d0009646 l       .text  00000000 
d0009646 l       .text  00000000 
d0009652 l       .text  00000000 
d0009654 l       .text  00000000 
d0009654 l       .text  00000000 
d0009654 l       .text  00000000 
d0009654 l       .text  00000000 
d0009658 l       .text  00000000 
d0009658 l       .text  00000000 
d000965e l       .text  00000000 
d000965e l       .text  00000000 
d000966a l       .text  00000000 
d000966a l       .text  00000000 
d000966a l       .text  00000000 
d000966a l       .text  00000000 
d0009670 l       .text  00000000 
d0009670 l       .text  00000000 
d0009676 l       .text  00000000 
d0009676 l       .text  00000000 
d0009678 l       .text  00000000 
d0009678 l       .text  00000000 
d000967a l       .text  00000000 
d000967c l       .text  00000000 
d000967e l       .text  00000000 
d000967e l       .text  00000000 
d0009680 l       .text  00000000 
d0009680 l       .text  00000000 
d0009682 l       .text  00000000 
d0009688 l       .text  00000000 
d0009688 l       .text  00000000 
d000968c l       .text  00000000 
d000968c l       .text  00000000 
d0009698 l       .text  00000000 
d0009698 l       .text  00000000 
d000969a l       .text  00000000 
d000969a l       .text  00000000 
d000969e l       .text  00000000 
d000969e l       .text  00000000 
d00096a4 l       .text  00000000 
d00096a4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b6 l       .text  00000000 
d00096b6 l       .text  00000000 
d00096ba l       .text  00000000 
d00096ba l       .text  00000000 
d00096c6 l       .text  00000000 
d00096c8 l       .text  00000000 
d00096c8 l       .text  00000000 
d00096ca l       .text  00000000 
d00096ca l       .text  00000000 
d00096d0 l       .text  00000000 
d00096d0 l       .text  00000000 
d00096dc l       .text  00000000 
d00096dc l       .text  00000000 
d00096de l       .text  00000000 
d00096e6 l       .text  00000000 
d00096e6 l       .text  00000000 
d00096f2 l       .text  00000000 
d00096f2 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f8 l       .text  00000000 
d00096f8 l       .text  00000000 
d00096fa l       .text  00000000 
d00096fa l       .text  00000000 
d000970c l       .text  00000000 
d000970c l       .text  00000000 
d000970e l       .text  00000000 
d000970e l       .text  00000000 
d0009712 l       .text  00000000 
d0009712 l       .text  00000000 
d0009716 l       .text  00000000 
d000971c l       .text  00000000 
d000971c l       .text  00000000 
d0009728 l       .text  00000000 
d000972a l       .text  00000000 
d000972a l       .text  00000000 
d000972a l       .text  00000000 
d000972a l       .text  00000000 
d000972e l       .text  00000000 
d000973a l       .text  00000000 
d000973a l       .text  00000000 
d000973e l       .text  00000000 
d000973e l       .text  00000000 
d0009740 l       .text  00000000 
d0009740 l       .text  00000000 
d0009744 l       .text  00000000 
d0009744 l       .text  00000000 
d0009752 l       .text  00000000 
d0009752 l       .text  00000000 
d0009754 l       .text  00000000 
d0009754 l       .text  00000000 
d0009756 l       .text  00000000 
d0009756 l       .text  00000000 
d0009758 l       .text  00000000 
d0009758 l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009766 l       .text  00000000 
d000976a l       .text  00000000 
d000976a l       .text  00000000 
d0009776 l       .text  00000000 
d0009776 l       .text  00000000 
d0009778 l       .text  00000000 
d0009778 l       .text  00000000 
d000977c l       .text  00000000 
d000977c l       .text  00000000 
d0009780 l       .text  00000000 
d0009780 l       .text  00000000 
d0009790 l       .text  00000000 
d0009794 l       .text  00000000 
d0009794 l       .text  00000000 
d0009794 l       .text  00000000 
d0009794 l       .text  00000000 
d000979c l       .text  00000000 
d00097a0 l       .text  00000000 
d00097ac l       .text  00000000 
d00097c0 l       .text  00000000 
d00097c8 l       .text  00000000 
d00097d0 l       .text  00000000 
d00097d6 l       .text  00000000 
d00097d6 l       .text  00000000 
d00097d6 l       .text  00000000 
d00097d6 l       .text  00000000 
d00097da l       .text  00000000 
d00097dc l       .text  00000000 
d00097dc l       .text  00000000 
d00097dc l       .text  00000000 
d00097dc l       .text  00000000 
d00097e0 l       .text  00000000 
d00097e4 l       .text  00000000 
d00097f8 l       .text  00000000 
d000980a l       .text  00000000 
d000981e l       .text  00000000 
d0009826 l       .text  00000000 
d000983a l       .text  00000000 
d000984c l       .text  00000000 
d000984c l       .text  00000000 
d0009852 l       .text  00000000 
d0009852 l       .text  00000000 
d0009860 l       .text  00000000 
d0009860 l       .text  00000000 
d0009868 l       .text  00000000 
d000986e l       .text  00000000 
d000986e l       .text  00000000 
d0009870 l       .text  00000000 
d0009870 l       .text  00000000 
d0009874 l       .text  00000000 
d0009874 l       .text  00000000 
d0009876 l       .text  00000000 
d0009876 l       .text  00000000 
d0009882 l       .text  00000000 
d0009882 l       .text  00000000 
d0009884 l       .text  00000000 
d0009884 l       .text  00000000 
d000988c l       .text  00000000 
d000988c l       .text  00000000 
d000989c l       .text  00000000 
d000989c l       .text  00000000 
d000989e l       .text  00000000 
d00098ae l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d8 l       .text  00000000 
d00098e0 l       .text  00000000 
d00098e2 l       .text  00000000 
d00098e2 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098ea l       .text  00000000 
d00098f2 l       .text  00000000 
d00098f2 l       .text  00000000 
d00098fa l       .text  00000000 
d00098fa l       .text  00000000 
d00098fc l       .text  00000000 
d00098fc l       .text  00000000 
d000990a l       .text  00000000 
d000990a l       .text  00000000 
d000990e l       .text  00000000 
d000990e l       .text  00000000 
d0009910 l       .text  00000000 
d000d468 l     O .rodata        00000024 kCheckShares
d0009920 l       .text  00000000 
d0009920 l       .text  00000000 
d0009922 l       .text  00000000 
d0009924 l       .text  00000000 
d0009928 l       .text  00000000 
d000992a l       .text  00000000 
d000992a l       .text  00000000 
d000992c l       .text  00000000 
d000992e l       .text  00000000 
d0009932 l       .text  00000000 
d0009932 l       .text  00000000 
d0009934 l       .text  00000000 
d0009934 l       .text  00000000 
d000993e l       .text  00000000 
d000993e l       .text  00000000 
d0009940 l       .text  00000000 
d000994c l       .text  00000000 
d0009950 l       .text  00000000 
d000995c l       .text  00000000 
d000995c l       .text  00000000 
d000995e l       .text  00000000 
d000995e l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d0009966 l       .text  00000000 
d0009966 l       .text  00000000 
d0009974 l       .text  00000000 
d0009976 l       .text  00000000 
d0009980 l       .text  00000000 
d0009980 l       .text  00000000 
00000b9f l       .debug_loc     00000000 
00000bd0 l       .debug_loc     00000000 
00000c01 l       .debug_loc     00000000 
00000c27 l       .debug_loc     00000000 
00000c42 l       .debug_loc     00000000 
00000c68 l       .debug_loc     00000000 
00000c99 l       .debug_loc     00000000 
00000cca l       .debug_loc     00000000 
00000cf5 l       .debug_loc     00000000 
00000d47 l       .debug_loc     00000000 
00000d6d l       .debug_loc     00000000 
00000db4 l       .debug_loc     00000000 
00000dda l       .debug_loc     00000000 
00000e00 l       .debug_loc     00000000 
00000e26 l       .debug_loc     00000000 
00000e62 l       .debug_loc     00000000 
00000ea1 l       .debug_loc     00000000 
00000ede l       .debug_loc     00000000 
00000f10 l       .debug_loc     00000000 
00000f38 l       .debug_loc     00000000 
00000f69 l       .debug_loc     00000000 
00000f8f l       .debug_loc     00000000 
00000fcc l       .debug_loc     00000000 
00001030 l       .debug_loc     00000000 
0000106f l       .debug_loc     00000000 
00001097 l       .debug_loc     00000000 
000010bd l       .debug_loc     00000000 
000010e3 l       .debug_loc     00000000 
000010fe l       .debug_loc     00000000 
00001124 l       .debug_loc     00000000 
0000113f l       .debug_loc     00000000 
0000115a l       .debug_loc     00000000 
00001180 l       .debug_loc     00000000 
000011a6 l       .debug_loc     00000000 
000011c1 l       .debug_loc     00000000 
000011fe l       .debug_loc     00000000 
00001233 l       .debug_loc     00000000 
0000126a l       .debug_loc     00000000 
0000129d l       .debug_loc     00000000 
000012d2 l       .debug_loc     00000000 
000012f8 l       .debug_loc     00000000 
0000131e l       .debug_loc     00000000 
0000135c l       .debug_loc     00000000 
00001393 l       .debug_loc     00000000 
000013b9 l       .debug_loc     00000000 
000013f5 l       .debug_loc     00000000 
0000141b l       .debug_loc     00000000 
00001441 l       .debug_loc     00000000 
0000145c l       .debug_loc     00000000 
00001482 l       .debug_loc     00000000 
000014a8 l       .debug_loc     00000000 
000014ce l       .debug_loc     00000000 
000014e9 l       .debug_loc     00000000 
0000150f l       .debug_loc     00000000 
0000152a l       .debug_loc     00000000 
00001550 l       .debug_loc     00000000 
0000156b l       .debug_loc     00000000 
00001586 l       .debug_loc     00000000 
000015a1 l       .debug_loc     00000000 
000015bc l       .debug_loc     00000000 
000015d7 l       .debug_loc     00000000 
00001600 l       .debug_loc     00000000 
0000161b l       .debug_loc     00000000 
00001636 l       .debug_loc     00000000 
00001651 l       .debug_loc     00000000 
00001677 l       .debug_loc     00000000 
0000169d l       .debug_loc     00000000 
000016c3 l       .debug_loc     00000000 
000016e9 l       .debug_loc     00000000 
00001704 l       .debug_loc     00000000 
0000171f l       .debug_loc     00000000 
0000173a l       .debug_loc     00000000 
00001755 l       .debug_loc     00000000 
00001770 l       .debug_loc     00000000 
0000178b l       .debug_loc     00000000 
000017a6 l       .debug_loc     00000000 
000017d7 l       .debug_loc     00000000 
00001818 l       .debug_loc     00000000 
00001855 l       .debug_loc     00000000 
0000187c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001327 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000238 l       .debug_ranges  00000000 
00001351 l       .debug_str     00000000 
000015f1 l       .debug_str     00000000 
000015dc l       .debug_str     00000000 
00001358 l       .debug_str     00000000 
00001374 l       .debug_str     00000000 
00001394 l       .debug_str     00000000 
000013b2 l       .debug_str     00000000 
000013d4 l       .debug_str     00000000 
000013f6 l       .debug_str     00000000 
00001418 l       .debug_str     00000000 
00001439 l       .debug_str     00000000 
0000145a l       .debug_str     00000000 
0000147b l       .debug_str     00000000 
0000149c l       .debug_str     00000000 
000014b8 l       .debug_str     00000000 
000014d4 l       .debug_str     00000000 
000014f1 l       .debug_str     00000000 
0000150e l       .debug_str     00000000 
00001530 l       .debug_str     00000000 
00001552 l       .debug_str     00000000 
00001577 l       .debug_str     00000000 
00001596 l       .debug_str     00000000 
000015b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001608 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00001615 l       .debug_str     00000000 
00001629 l       .debug_str     00000000 
0000163d l       .debug_str     00000000 
00001653 l       .debug_str     00000000 
0000166e l       .debug_str     00000000 
00001680 l       .debug_str     00000000 
00001693 l       .debug_str     00000000 
000016a6 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000016be l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
00000752 l       .debug_str     00000000 
0000077c l       .debug_str     00000000 
0000079f l       .debug_str     00000000 
000007c4 l       .debug_str     00000000 
000007dd l       .debug_str     00000000 
000007f9 l       .debug_str     00000000 
00000817 l       .debug_str     00000000 
0000083a l       .debug_str     00000000 
00001781 l       .debug_str     00000000 
00001796 l       .debug_str     00000000 
000017a5 l       .debug_str     00000000 
00000939 l       .debug_str     00000000 
000017b7 l       .debug_str     00000000 
000017f9 l       .debug_str     00000000 
000017c9 l       .debug_str     00000000 
000017e1 l       .debug_str     00000000 
0000180f l       .debug_str     00000000 
00001827 l       .debug_str     00000000 
0000183f l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00001854 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001611 l       .debug_str     00000000 
0000186a l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000001de l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002510 l       .debug_str     00000000 
00001960 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000018a l       .debug_str     00000000 
000001a7 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
00000ae8 l       .debug_str     00000000 
0000187a l       .debug_str     00000000 
00000d3e l       .debug_str     00000000 
00001a9e l       .debug_str     00000000 
000000f8 l       .debug_ranges  00000000 
00001a5d l       .debug_str     00000000 
000018f8 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00000118 l       .debug_ranges  00000000 
00000200 l       .debug_ranges  00000000 
00000138 l       .debug_ranges  00000000 
00000150 l       .debug_ranges  00000000 
00000168 l       .debug_ranges  00000000 
00000180 l       .debug_ranges  00000000 
00000198 l       .debug_ranges  00000000 
000001b0 l       .debug_ranges  00000000 
000001d0 l       .debug_ranges  00000000 
000001e8 l       .debug_ranges  00000000 
00000ba9 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000fc0 l       .debug_str     00000000 
00000ff3 l       .debug_str     00000000 
00001893 l       .debug_str     00000000 
00001aa5 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00001902 l       .debug_str     00000000 
000018f1 l       .debug_str     00000000 
000018ae l       .debug_str     00000000 
000018be l       .debug_str     00000000 
000018d0 l       .debug_str     00000000 
000018e0 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00001915 l       .debug_str     00000000 
00001935 l       .debug_str     00000000 
00001943 l       .debug_str     00000000 
00001947 l       .debug_str     00000000 
00001949 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00001959 l       .debug_str     00000000 
00006a94 l       .debug_str     00000000 
0000196b l       .debug_str     00000000 
00001980 l       .debug_str     00000000 
0000198a l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
0000199b l       .debug_str     00000000 
000019c6 l       .debug_str     00000000 
00002387 l       .debug_str     00000000 
00000b3d l       .debug_str     00000000 
00001f0f l       .debug_str     00000000 
000019b5 l       .debug_str     00000000 
000019d7 l       .debug_str     00000000 
00001197 l       .debug_str     00000000 
0000126c l       .debug_str     00000000 
00000220 l       .debug_ranges  00000000 
000019ec l       .debug_str     00000000 
00001a78 l       .debug_str     00000000 
00001aaa l       .debug_str     00000000 
00001ab4 l       .debug_str     00000000 
0000131a l       .debug_str     00000000 
00001abf l       .debug_str     00000000 
00001a88 l       .debug_str     00000000 
00001a07 l       .debug_str     00000000 
00001a1d l       .debug_str     00000000 
00001a38 l       .debug_str     00000000 
00001a40 l       .debug_str     00000000 
00001a56 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000010c l       .debug_frame   00000000 
d000953c l       .text  00000000 
d00098d6 l       .text  00000000 
d0009980 l       .text  00000000 
00000000 l    df *ABS*  00000000 bootstrap.c
d0009980 l       .text  00000000 
d0009980 l       .text  00000000 
d0009980 l       .text  00000000 
d0009982 l       .text  00000000 
d0009982 l       .text  00000000 
d0009984 l       .text  00000000 
d000998c l       .text  00000000 
d000998e l       .text  00000000 
d000998e l       .text  00000000 
d0009990 l       .text  00000000 
d0009990 l       .text  00000000 
d0009998 l       .text  00000000 
d0009998 l       .text  00000000 
d000999c l       .text  00000000 
d000999c l       .text  00000000 
d00099ac l       .text  00000000 
d00099ac l       .text  00000000 
d00099b2 l       .text  00000000 
d00099b2 l       .text  00000000 
d00099b4 l       .text  00000000 
d00099b8 l       .text  00000000 
d00099b8 l       .text  00000000 
d00099ba l       .text  00000000 
d00099ba l       .text  00000000 
d00099be l       .text  00000000 
d00099be l       .text  00000000 
d00099c2 l       .text  00000000 
d00099d0 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d8 l       .text  00000000 
d00099d8 l       .text  00000000 
d0009a0c l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a10 l       .text  00000000 
d0009a10 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a18 l       .text  00000000 
d0009a18 l       .text  00000000 
d0009a24 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a86 l       .text  00000000 
d0009a86 l       .text  00000000 
d0009a88 l       .text  00000000 
d0009a88 l       .text  00000000 
d0009a8c l       .text  00000000 
d0009a90 l       .text  00000000 
d0009a94 l       .text  00000000 
d0009a98 l       .text  00000000 
d0009aa4 l       .text  00000000 
d0009aa4 l       .text  00000000 
d0009ab0 l       .text  00000000 
d0009ab0 l       .text  00000000 
d0009ab4 l       .text  00000000 
d0009ab4 l       .text  00000000 
d0009ab8 l       .text  00000000 
d0009ab8 l       .text  00000000 
d0009aba l       .text  00000000 
d0009aba l       .text  00000000 
d0009abc l       .text  00000000 
d0009abc l       .text  00000000 
d0009ac0 l       .text  00000000 
d0009ac0 l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ac6 l       .text  00000000 
d0009d6c l     F .text  0000005e bootstrap_chip_erase
d0009ad2 l       .text  00000000 
d0009ad4 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009ada l       .text  00000000 
d0009ae8 l       .text  00000000 
d0009ae8 l       .text  00000000 
d0009aea l       .text  00000000 
d0009aea l       .text  00000000 
d0009af6 l       .text  00000000 
d0009af6 l       .text  00000000 
d0009b02 l       .text  00000000 
d0009b02 l       .text  00000000 
d0009b06 l       .text  00000000 
d0009b08 l       .text  00000000 
d0009b08 l       .text  00000000 
d0009b0c l       .text  00000000 
d0009b0c l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b12 l       .text  00000000 
d0009b14 l       .text  00000000 
d0009b14 l       .text  00000000 
d0009b16 l       .text  00000000 
d0009b16 l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b1e l       .text  00000000 
d0009b20 l       .text  00000000 
d0009b20 l       .text  00000000 
d0009b24 l       .text  00000000 
d0009b3a l       .text  00000000 
d0009b3c l       .text  00000000 
d0009b3c l       .text  00000000 
d0009b46 l       .text  00000000 
d0009b4c l       .text  00000000 
d0009b4c l       .text  00000000 
d0009b50 l       .text  00000000 
d0009b62 l       .text  00000000 
d0009b62 l       .text  00000000 
d0009b6c l       .text  00000000 
d0009b6e l       .text  00000000 
d0009b6e l       .text  00000000 
d0009b74 l       .text  00000000 
d0009b7a l       .text  00000000 
d0009b7c l       .text  00000000 
d0009b7c l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b90 l       .text  00000000 
d0009b90 l       .text  00000000 
d0009b94 l       .text  00000000 
d0009b94 l       .text  00000000 
d0009ba2 l       .text  00000000 
d0009ba2 l       .text  00000000 
d0009bb2 l       .text  00000000 
d0009bbe l       .text  00000000 
d0009bbe l       .text  00000000 
d0009bca l       .text  00000000 
d0009bd2 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009bde l       .text  00000000 
d0009bde l       .text  00000000 
d0009be0 l       .text  00000000 
d0009be0 l       .text  00000000 
d0009be4 l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf2 l       .text  00000000 
d0009bf2 l       .text  00000000 
d0009bf6 l       .text  00000000 
d0009c02 l       .text  00000000 
d0009c02 l       .text  00000000 
d0009c04 l       .text  00000000 
d0009c04 l       .text  00000000 
d0009c06 l       .text  00000000 
d0009c08 l       .text  00000000 
d0009c10 l       .text  00000000 
d0009c10 l       .text  00000000 
d0009c14 l       .text  00000000 
d0009c16 l       .text  00000000 
d0009c18 l       .text  00000000 
d0009c18 l       .text  00000000 
d0009c1a l       .text  00000000 
d0009c1a l       .text  00000000 
d0009c1c l       .text  00000000 
d0009c1c l       .text  00000000 
d0009c1e l       .text  00000000 
d0009c26 l       .text  00000000 
d0009c26 l       .text  00000000 
d0009c28 l       .text  00000000 
d0009c28 l       .text  00000000 
d0009c2c l       .text  00000000 
d0009c2c l       .text  00000000 
d0009c2e l       .text  00000000 
d0009c2e l       .text  00000000 
d0009c3a l       .text  00000000 
d0009c3a l       .text  00000000 
d0009c3c l       .text  00000000 
d0009c3c l       .text  00000000 
d0009c40 l       .text  00000000 
d0009c40 l       .text  00000000 
d0009c42 l       .text  00000000 
d0009c44 l       .text  00000000 
d0009c48 l       .text  00000000 
d0009c4a l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c56 l       .text  00000000 
d0009c58 l       .text  00000000 
d0009c5c l       .text  00000000 
d0009c5c l       .text  00000000 
d0009c60 l       .text  00000000 
d0009c60 l       .text  00000000 
d0009c62 l       .text  00000000 
d0009c74 l       .text  00000000 
d0009c74 l       .text  00000000 
d0009c78 l       .text  00000000 
d0009c78 l       .text  00000000 
d0009c7c l       .text  00000000 
d0009c7e l       .text  00000000 
d0009c7e l       .text  00000000 
d0009c86 l       .text  00000000 
d0009c86 l       .text  00000000 
d0009c88 l       .text  00000000 
d0009c88 l       .text  00000000 
d0009c8a l       .text  00000000 
d0009c8e l       .text  00000000 
d0009c90 l       .text  00000000 
d0009c90 l       .text  00000000 
d0009c9a l       .text  00000000 
d0009c9c l       .text  00000000 
d0009c9c l       .text  00000000 
d0009ca0 l       .text  00000000 
d0009ca4 l       .text  00000000 
d0009cac l       .text  00000000 
d0009cac l       .text  00000000 
d0009cb0 l       .text  00000000 
d0009cb0 l       .text  00000000 
d0009cb4 l       .text  00000000 
d0009cb4 l       .text  00000000 
d0009cbc l       .text  00000000 
d0009cbe l       .text  00000000 
d0009cbe l       .text  00000000 
d0009cc0 l       .text  00000000 
d0009cd2 l       .text  00000000 
d0009cd2 l       .text  00000000 
d0009cd4 l       .text  00000000 
d0009cd4 l       .text  00000000 
d0009cd8 l       .text  00000000 
d0009ce6 l       .text  00000000 
d0009ce6 l       .text  00000000 
d0009cf2 l       .text  00000000 
d0009cf2 l       .text  00000000 
d0009cf4 l       .text  00000000 
d0009cf4 l       .text  00000000 
d0009cf8 l       .text  00000000 
d0009d04 l       .text  00000000 
d0009d04 l       .text  00000000 
d0009d06 l       .text  00000000 
d0009d06 l       .text  00000000 
d0009d08 l       .text  00000000 
d0009d08 l       .text  00000000 
d0009d0c l       .text  00000000 
d0009d1a l       .text  00000000 
d0009d1a l       .text  00000000 
d0009d20 l       .text  00000000 
d0009d20 l       .text  00000000 
d0009d26 l       .text  00000000 
d0009d26 l       .text  00000000 
d0009d2a l       .text  00000000 
d0009d2e l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d6e l       .text  00000000 
d0009d6e l       .text  00000000 
d0009d76 l       .text  00000000 
d0009d82 l       .text  00000000 
d0009d82 l       .text  00000000 
d0009d8a l       .text  00000000 
d0009d92 l       .text  00000000 
d0009d94 l       .text  00000000 
d0009d94 l       .text  00000000 
d0009d9e l       .text  00000000 
d0009da0 l       .text  00000000 
d0009da0 l       .text  00000000 
d0009da8 l       .text  00000000 
d0009da8 l       .text  00000000 
d0009daa l       .text  00000000 
d0009daa l       .text  00000000 
d0009dae l       .text  00000000 
d0009dbc l       .text  00000000 
d0009dbc l       .text  00000000 
d0009dca l       .text  00000000 
d0009dca l       .text  00000000 
000018a2 l       .debug_loc     00000000 
000018c8 l       .debug_loc     00000000 
000018ee l       .debug_loc     00000000 
00001914 l       .debug_loc     00000000 
0000193a l       .debug_loc     00000000 
00001960 l       .debug_loc     00000000 
00001988 l       .debug_loc     00000000 
000019e5 l       .debug_loc     00000000 
00001a0b l       .debug_loc     00000000 
00001a26 l       .debug_loc     00000000 
00001a41 l       .debug_loc     00000000 
00001a69 l       .debug_loc     00000000 
00001a8f l       .debug_loc     00000000 
00001aaa l       .debug_loc     00000000 
00001ac5 l       .debug_loc     00000000 
00001b1f l       .debug_loc     00000000 
00001b45 l       .debug_loc     00000000 
00001b60 l       .debug_loc     00000000 
00001b7b l       .debug_loc     00000000 
00001ba1 l       .debug_loc     00000000 
00001bbc l       .debug_loc     00000000 
00001be2 l       .debug_loc     00000000 
00001bfd l       .debug_loc     00000000 
00001c23 l       .debug_loc     00000000 
00001c6a l       .debug_loc     00000000 
00001c90 l       .debug_loc     00000000 
00001cc1 l       .debug_loc     00000000 
00001ce7 l       .debug_loc     00000000 
00001d06 l       .debug_loc     00000000 
00001d22 l       .debug_loc     00000000 
00001d48 l       .debug_loc     00000000 
00001d7c l       .debug_loc     00000000 
00001da2 l       .debug_loc     00000000 
00001dc8 l       .debug_loc     00000000 
00001dff l       .debug_loc     00000000 
00001e25 l       .debug_loc     00000000 
00001e4b l       .debug_loc     00000000 
00001e71 l       .debug_loc     00000000 
00001e8c l       .debug_loc     00000000 
00001ea7 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001ac8 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002b0 l       .debug_ranges  00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
00001b39 l       .debug_str     00000000 
00001af2 l       .debug_str     00000000 
00001b07 l       .debug_str     00000000 
00001b22 l       .debug_str     00000000 
00001c3a l       .debug_str     00000000 
00001b49 l       .debug_str     00000000 
00001b64 l       .debug_str     00000000 
00001b80 l       .debug_str     00000000 
00001b99 l       .debug_str     00000000 
00001bb3 l       .debug_str     00000000 
00001bcf l       .debug_str     00000000 
00001beb l       .debug_str     00000000 
00001c01 l       .debug_str     00000000 
00001c1d l       .debug_str     00000000 
00001c4c l       .debug_str     00000000 
00001c67 l       .debug_str     00000000 
00001c80 l       .debug_str     00000000 
00001c9c l       .debug_str     00000000 
00001cba l       .debug_str     00000000 
00001cd8 l       .debug_str     00000000 
000017f9 l       .debug_str     00000000 
000017c9 l       .debug_str     00000000 
000017e1 l       .debug_str     00000000 
00001ce9 l       .debug_str     00000000 
00001cf5 l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
00001d03 l       .debug_str     00000000 
00001d12 l       .debug_str     00000000 
00001d25 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00000cf0 l       .debug_str     00000000 
00001611 l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00001d48 l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
00001db3 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
0000131a l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00001d5f l       .debug_str     00000000 
00001db7 l       .debug_str     00000000 
00001da8 l       .debug_str     00000000 
00001c45 l       .debug_str     00000000 
00001d85 l       .debug_str     00000000 
00001d8d l       .debug_str     00000000 
00001da0 l       .debug_str     00000000 
00001d71 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00001ddc l       .debug_str     00000000 
00001df5 l       .debug_str     00000000 
00001e0c l       .debug_str     00000000 
00001e12 l       .debug_str     00000000 
00001e18 l       .debug_str     00000000 
00001e36 l       .debug_str     00000000 
00001d95 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00001e4d l       .debug_str     00000000 
00001e65 l       .debug_str     00000000 
00001e74 l       .debug_str     00000000 
00001e8b l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002078 l       .debug_str     00000000 
00000d15 l       .debug_str     00000000 
00000cfa l       .debug_str     00000000 
00000268 l       .debug_ranges  00000000 
00000290 l       .debug_ranges  00000000 
00001e9e l       .debug_str     00000000 
00001eae l       .debug_str     00000000 
00001ec1 l       .debug_str     00000000 
00001f93 l       .debug_str     00000000 
00001edd l       .debug_str     00000000 
000019c6 l       .debug_str     00000000 
00002387 l       .debug_str     00000000 
00000b3d l       .debug_str     00000000 
00001f0f l       .debug_str     00000000 
000019b5 l       .debug_str     00000000 
00001eff l       .debug_str     00000000 
00001f15 l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f50 l       .debug_str     00000000 
00001f66 l       .debug_str     00000000 
00001f73 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
000001cc l       .debug_frame   00000000 
d00099d6 l       .text  00000000 
d0009d6c l       .text  00000000 
d0009dca l       .text  00000000 
00000000 l    df *ABS*  00000000 spi_device.c
d0009dca l       .text  00000000 
d0009dca l       .text  00000000 
d0009dca l       .text  00000000 
d0009dcc l       .text  00000000 
d0009dcc l       .text  00000000 
d0009dd2 l       .text  00000000 
d0009dd2 l       .text  00000000 
d0009de4 l       .text  00000000 
d0009de4 l       .text  00000000 
d0009dec l       .text  00000000 
d0009dec l       .text  00000000 
d0009dee l       .text  00000000 
d0009dee l       .text  00000000 
d0009df4 l       .text  00000000 
d0009df4 l       .text  00000000 
d0009df8 l       .text  00000000 
d0009dfc l       .text  00000000 
d0009dfe l       .text  00000000 
d0009dfe l       .text  00000000 
d0009e00 l       .text  00000000 
d0009e00 l       .text  00000000 
d0009e02 l       .text  00000000 
d0009e02 l       .text  00000000 
d0009e06 l       .text  00000000 
d0009e08 l       .text  00000000 
d0009e08 l       .text  00000000 
d0009e10 l       .text  00000000 
d0009e10 l       .text  00000000 
d0009e12 l       .text  00000000 
d0009e12 l       .text  00000000 
d0009e14 l       .text  00000000 
d0009e14 l       .text  00000000 
d0009e20 l       .text  00000000 
d0009e20 l       .text  00000000 
d0009e24 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e2a l       .text  00000000 
d0009e2a l       .text  00000000 
d0009e2c l       .text  00000000 
d0009e2c l       .text  00000000 
d0009e2e l       .text  00000000 
d0009e2e l       .text  00000000 
d0009e32 l       .text  00000000 
d0009e32 l       .text  00000000 
d0009e3a l       .text  00000000 
d0009e3c l       .text  00000000 
d0009e40 l       .text  00000000 
d0009e40 l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e46 l       .text  00000000 
d0009e46 l       .text  00000000 
d0009e48 l       .text  00000000 
d0009e48 l       .text  00000000 
d0009e4c l       .text  00000000 
d0009e52 l       .text  00000000 
d0009e52 l       .text  00000000 
d0009e56 l       .text  00000000 
d0009e56 l       .text  00000000 
d0009e58 l       .text  00000000 
d0009e58 l       .text  00000000 
d0009e5c l       .text  00000000 
d0009e5c l       .text  00000000 
d0009e60 l       .text  00000000 
d0009e60 l       .text  00000000 
d0009e64 l       .text  00000000 
d0009e64 l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e78 l       .text  00000000 
d0009e78 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e90 l       .text  00000000 
d0009e90 l       .text  00000000 
d0009e98 l       .text  00000000 
d0009e98 l       .text  00000000 
d0009ea0 l       .text  00000000 
d0009ea0 l       .text  00000000 
d0009ea8 l       .text  00000000 
d0009ea8 l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb6 l       .text  00000000 
d0009eb6 l       .text  00000000 
d0009eba l       .text  00000000 
d0009eba l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec8 l       .text  00000000 
d0009ec8 l       .text  00000000 
d0009eca l       .text  00000000 
d0009eca l       .text  00000000 
d0009ece l       .text  00000000 
d0009ece l       .text  00000000 
d0009eda l       .text  00000000 
d0009eda l       .text  00000000 
d0009edc l       .text  00000000 
d0009edc l       .text  00000000 
d0009ede l       .text  00000000 
d0009ede l       .text  00000000 
d0009ee0 l       .text  00000000 
d0009ee0 l       .text  00000000 
d0009ee2 l       .text  00000000 
d0009ee4 l       .text  00000000 
d0009ee4 l       .text  00000000 
d0009ee6 l       .text  00000000 
d0009ee6 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009eea l       .text  00000000 
d0009eea l       .text  00000000 
d0009eec l       .text  00000000 
d0009ef0 l       .text  00000000 
d0009ef0 l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef4 l       .text  00000000 
d0009ef8 l       .text  00000000 
d0009ef8 l       .text  00000000 
d0009efa l       .text  00000000 
d0009efa l       .text  00000000 
d0009efe l       .text  00000000 
d0009efe l       .text  00000000 
d0009f04 l       .text  00000000 
d0009f10 l       .text  00000000 
d0009f10 l       .text  00000000 
d0009f16 l       .text  00000000 
d0009f18 l       .text  00000000 
d0009f18 l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f26 l       .text  00000000 
d0009f26 l       .text  00000000 
d0009f2a l       .text  00000000 
d0009f2a l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f30 l       .text  00000000 
d0009f32 l       .text  00000000 
d0009f32 l       .text  00000000 
d0009f34 l       .text  00000000 
d0009f36 l       .text  00000000 
d0009f3c l       .text  00000000 
d0009f3c l       .text  00000000 
d0009f40 l       .text  00000000 
d0009f44 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f4c l       .text  00000000 
d0009f4c l       .text  00000000 
d0009f50 l       .text  00000000 
d0009f50 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f56 l       .text  00000000 
d0009f56 l       .text  00000000 
d0009f58 l       .text  00000000 
d0009f58 l       .text  00000000 
d0009f5a l       .text  00000000 
d0009f5a l       .text  00000000 
00001ecd l       .debug_loc     00000000 
00001f5c l       .debug_loc     00000000 
00001f83 l       .debug_loc     00000000 
00001fb1 l       .debug_loc     00000000 
00001fd3 l       .debug_loc     00000000 
00001ff5 l       .debug_loc     00000000 
00002019 l       .debug_loc     00000000 
0000205d l       .debug_loc     00000000 
00002081 l       .debug_loc     00000000 
000020aa l       .debug_loc     00000000 
000020dd l       .debug_loc     00000000 
00002142 l       .debug_loc     00000000 
0000215d l       .debug_loc     00000000 
0000219c l       .debug_loc     00000000 
000021c9 l       .debug_loc     00000000 
000021ff l       .debug_loc     00000000 
0000223d l       .debug_loc     00000000 
0000227f l       .debug_loc     00000000 
000022c5 l       .debug_loc     00000000 
0000230b l       .debug_loc     00000000 
00002351 l       .debug_loc     00000000 
00002397 l       .debug_loc     00000000 
000023b2 l       .debug_loc     00000000 
000023e3 l       .debug_loc     00000000 
00002407 l       .debug_loc     00000000 
0000242e l       .debug_loc     00000000 
0000244b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001fa8 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002e8 l       .debug_ranges  00000000 
00001fdb l       .debug_str     00000000 
00002108 l       .debug_str     00000000 
000020f2 l       .debug_str     00000000 
00002034 l       .debug_str     00000000 
00002059 l       .debug_str     00000000 
000020db l       .debug_str     00000000 
00002040 l       .debug_str     00000000 
00002029 l       .debug_str     00000000 
00000d6f l       .debug_str     00000000 
00001fef l       .debug_str     00000000 
00001ffe l       .debug_str     00000000 
0000200d l       .debug_str     00000000 
00002019 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000020b6 l       .debug_str     00000000 
0000209e l       .debug_str     00000000 
00002065 l       .debug_str     00000000 
00002072 l       .debug_str     00000000 
00002083 l       .debug_str     00000000 
00002091 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000020e0 l       .debug_str     00000000 
000020d0 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00002126 l       .debug_str     00000000 
00002139 l       .debug_str     00000000 
0000214a l       .debug_str     00000000 
00002159 l       .debug_str     00000000 
00002168 l       .debug_str     00000000 
00002178 l       .debug_str     00000000 
0000218b l       .debug_str     00000000 
0000219e l       .debug_str     00000000 
000021b2 l       .debug_str     00000000 
000021c5 l       .debug_str     00000000 
000021d8 l       .debug_str     00000000 
000021e8 l       .debug_str     00000000 
000021f8 l       .debug_str     00000000 
0000220a l       .debug_str     00000000 
0000221c l       .debug_str     00000000 
00002234 l       .debug_str     00000000 
00002251 l       .debug_str     00000000 
00002268 l       .debug_str     00000000 
0000227f l       .debug_str     00000000 
00002296 l       .debug_str     00000000 
000022b2 l       .debug_str     00000000 
00001c4c l       .debug_str     00000000 
00001c67 l       .debug_str     00000000 
00001c80 l       .debug_str     00000000 
00001c9c l       .debug_str     00000000 
00001cba l       .debug_str     00000000 
00001cd8 l       .debug_str     00000000 
00001c3a l       .debug_str     00000000 
00001b49 l       .debug_str     00000000 
00001b64 l       .debug_str     00000000 
00001b80 l       .debug_str     00000000 
00001b99 l       .debug_str     00000000 
00001bb3 l       .debug_str     00000000 
00001bcf l       .debug_str     00000000 
00001beb l       .debug_str     00000000 
00001c01 l       .debug_str     00000000 
00001c1d l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000022d7 l       .debug_str     00000000 
000022e4 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
0000231b l       .debug_str     00000000 
000022ed l       .debug_str     00000000 
000022f8 l       .debug_str     00000000 
00001d85 l       .debug_str     00000000 
00002300 l       .debug_str     00000000 
0000230d l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00001e9e l       .debug_str     00000000 
0000236f l       .debug_str     00000000 
00002102 l       .debug_str     00000000 
000023a8 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
000002d0 l       .debug_ranges  00000000 
00002326 l       .debug_str     00000000 
00002365 l       .debug_str     00000000 
0000233b l       .debug_str     00000000 
0000235c l       .debug_str     00000000 
00002353 l       .debug_str     00000000 
00002344 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
0000238c l       .debug_str     00000000 
00001eae l       .debug_str     00000000 
00001db3 l       .debug_str     00000000 
000023ad l       .debug_str     00000000 
000023b1 l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001ec1 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00002395 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00001db7 l       .debug_str     00000000 
00001da8 l       .debug_str     00000000 
00001c45 l       .debug_str     00000000 
00001d8d l       .debug_str     00000000 
00001da0 l       .debug_str     00000000 
00001d71 l       .debug_str     00000000 
00000244 l       .debug_frame   00000000 
d0009ec4 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f5a l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_keys.c
d0009f5a l       .text  00000000 
d0009f5a l       .text  00000000 
d0009f5a l       .text  00000000 
d0009f5c l       .text  00000000 
d0009f74 l       .text  00000000 
d0009f76 l       .text  00000000 
d0009f78 l       .text  00000000 
d0009f7a l       .text  00000000 
d0009f7a l       .text  00000000 
d0009f7e l       .text  00000000 
d0009f7e l       .text  00000000 
d0009f8a l       .text  00000000 
d0009f8a l       .text  00000000 
d0009f8c l       .text  00000000 
d0009f8c l       .text  00000000 
d0009f96 l       .text  00000000 
d0009f9a l       .text  00000000 
d0009fa6 l       .text  00000000 
d0009faa l       .text  00000000 
d0009fac l       .text  00000000 
d0009fb4 l       .text  00000000 
d0009fb4 l       .text  00000000 
d0009fbe l       .text  00000000 
d0009fbe l       .text  00000000 
d0009fc0 l       .text  00000000 
d0009fc0 l       .text  00000000 
d0009fc4 l       .text  00000000 
d0009fc4 l       .text  00000000 
d0009fc6 l       .text  00000000 
d0009fc6 l       .text  00000000 
d0009fca l       .text  00000000 
d0009fd6 l       .text  00000000 
d0009fd8 l       .text  00000000 
d000a088 l     F .text  000001ae key_is_valid
d0009fdc l       .text  00000000 
d0009fdc l       .text  00000000 
d0009fde l       .text  00000000 
d0009fde l       .text  00000000 
d0009fe2 l       .text  00000000 
d0009fe2 l       .text  00000000 
d0009fee l       .text  00000000 
d0009fee l       .text  00000000 
d0009ff0 l       .text  00000000 
d0009ff0 l       .text  00000000 
d0009ff4 l       .text  00000000 
d0009ff4 l       .text  00000000 
d0009ff6 l       .text  00000000 
d0009ff6 l       .text  00000000 
d0009ff8 l       .text  00000000 
d0009ff8 l       .text  00000000 
d0009ffc l       .text  00000000 
d0009ffc l       .text  00000000 
d0009ffe l       .text  00000000 
d000a002 l       .text  00000000 
d000a002 l       .text  00000000 
d000a004 l       .text  00000000 
d000a004 l       .text  00000000 
d000a010 l       .text  00000000 
d000a010 l       .text  00000000 
d000a012 l       .text  00000000 
d000a012 l       .text  00000000 
d000a018 l       .text  00000000 
d000a018 l       .text  00000000 
d000a01a l       .text  00000000 
d000a01a l       .text  00000000 
d000a026 l       .text  00000000 
d000a026 l       .text  00000000 
d000a028 l       .text  00000000 
d000a028 l       .text  00000000 
d000a02c l       .text  00000000 
d000a02c l       .text  00000000 
d000a030 l       .text  00000000 
d000a030 l       .text  00000000 
d000a03c l       .text  00000000 
d000a048 l       .text  00000000 
d000a04e l       .text  00000000 
d000a04e l       .text  00000000 
d000a052 l       .text  00000000 
d000a05e l       .text  00000000 
d000a064 l       .text  00000000 
d000a064 l       .text  00000000 
d000a06c l       .text  00000000 
d000a078 l       .text  00000000 
d000a07c l       .text  00000000 
d000a07e l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a08a l       .text  00000000 
d000a08a l       .text  00000000 
d000a092 l       .text  00000000 
d000a092 l       .text  00000000 
d000a096 l       .text  00000000 
d000a096 l       .text  00000000 
d000a09a l       .text  00000000 
d000a09e l       .text  00000000 
d000a0a6 l       .text  00000000 
d000a0aa l       .text  00000000 
d000a0b6 l       .text  00000000 
d000a0b6 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c4 l       .text  00000000 
d000a0c4 l       .text  00000000 
d000a0cc l       .text  00000000 
d000a0d0 l       .text  00000000 
d000a0de l       .text  00000000 
d000a0de l       .text  00000000 
d000a0e6 l       .text  00000000 
d000a0ea l       .text  00000000 
d000a0f8 l       .text  00000000 
d000a100 l       .text  00000000 
d000a10c l       .text  00000000 
d000a10c l       .text  00000000 
d000a10e l       .text  00000000 
d000a10e l       .text  00000000 
d000a10e l       .text  00000000 
d000a116 l       .text  00000000 
d000a116 l       .text  00000000 
d000a11a l       .text  00000000 
d000a11a l       .text  00000000 
d000a122 l       .text  00000000 
d000a126 l       .text  00000000 
d000a134 l       .text  00000000 
d000a134 l       .text  00000000 
d000a13c l       .text  00000000 
d000a140 l       .text  00000000 
d000a14c l       .text  00000000 
d000a14e l       .text  00000000 
d000a236 l     F .text  00000062 key_is_valid_in_lc_state_prod
d000a150 l       .text  00000000 
d000a154 l       .text  00000000 
d000a158 l       .text  00000000 
d000a15c l       .text  00000000 
d000a168 l       .text  00000000 
d000a168 l       .text  00000000 
d000a16a l       .text  00000000 
d000a16a l       .text  00000000 
d000a16a l       .text  00000000 
d000a172 l       .text  00000000 
d000a172 l       .text  00000000 
d000a176 l       .text  00000000 
d000a176 l       .text  00000000 
d000a17e l       .text  00000000 
d000a182 l       .text  00000000 
d000a190 l       .text  00000000 
d000a190 l       .text  00000000 
d000a19e l       .text  00000000 
d000a19e l       .text  00000000 
d000a1ac l       .text  00000000 
d000a1ac l       .text  00000000 
d000a1ba l       .text  00000000 
d000a1ba l       .text  00000000 
d000a1c2 l       .text  00000000 
d000a1c2 l       .text  00000000 
d000a1c6 l       .text  00000000 
d000a1d2 l       .text  00000000 
d000a1d2 l       .text  00000000 
d000a1d4 l       .text  00000000 
d000a298 l     F .text  0000004a key_is_valid_in_otp
d000a1d6 l       .text  00000000 
d000a1da l       .text  00000000 
d000a1de l       .text  00000000 
d000a1de l       .text  00000000 
d000a1e2 l       .text  00000000 
d000a1ee l       .text  00000000 
d000a1ee l       .text  00000000 
d000a1f2 l       .text  00000000 
d000a1f6 l       .text  00000000 
d000a1f8 l       .text  00000000 
d000a1f8 l       .text  00000000 
d000a200 l       .text  00000000 
d000a200 l       .text  00000000 
d000a204 l       .text  00000000 
d000a210 l       .text  00000000 
d000a210 l       .text  00000000 
d000a214 l       .text  00000000 
d000a214 l       .text  00000000 
d000a216 l       .text  00000000 
d000a216 l       .text  00000000 
d000a21e l       .text  00000000 
d000a21e l       .text  00000000 
d000a226 l       .text  00000000 
d000a226 l       .text  00000000 
d000a22e l       .text  00000000 
d000a22e l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a236 l       .text  00000000 
d000a238 l       .text  00000000 
d000a238 l       .text  00000000 
d000a240 l       .text  00000000 
d000a240 l       .text  00000000 
d000a244 l       .text  00000000 
d000a244 l       .text  00000000 
d000a24c l       .text  00000000 
d000a250 l       .text  00000000 
d000a25c l       .text  00000000 
d000a25e l       .text  00000000 
d000a260 l       .text  00000000 
d000a260 l       .text  00000000 
d000a26e l       .text  00000000 
d000a272 l       .text  00000000 
d000a276 l       .text  00000000 
d000a27a l       .text  00000000 
d000a286 l       .text  00000000 
d000a28a l       .text  00000000 
d000a28e l       .text  00000000 
d000a290 l       .text  00000000 
d000a290 l       .text  00000000 
d000a298 l       .text  00000000 
d000a298 l       .text  00000000 
d000a298 l       .text  00000000 
d000a298 l       .text  00000000 
d000a298 l       .text  00000000 
d000a29a l       .text  00000000 
d000a29a l       .text  00000000 
d000a29e l       .text  00000000 
d000a2a4 l       .text  00000000 
d000a2a4 l       .text  00000000 
d000a2a8 l       .text  00000000 
d000a2aa l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2b6 l       .text  00000000 
d000a2b6 l       .text  00000000 
d000a2b8 l       .text  00000000 
d000a2b8 l       .text  00000000 
d000a2bc l       .text  00000000 
d000a2bc l       .text  00000000 
d000a2c0 l       .text  00000000 
d000a2c0 l       .text  00000000 
d000a2d0 l       .text  00000000 
d000a2d0 l       .text  00000000 
d000a2d2 l       .text  00000000 
d000a2d6 l       .text  00000000 
d000a2da l       .text  00000000 
d000a2e2 l       .text  00000000 
d000a2e2 l       .text  00000000 
00002471 l       .debug_loc     00000000 
000024a2 l       .debug_loc     00000000 
000024d3 l       .debug_loc     00000000 
00002504 l       .debug_loc     00000000 
0000254f l       .debug_loc     00000000 
00002581 l       .debug_loc     00000000 
000025b4 l       .debug_loc     00000000 
000025e5 l       .debug_loc     00000000 
0000260b l       .debug_loc     00000000 
00002626 l       .debug_loc     00000000 
0000264c l       .debug_loc     00000000 
00002667 l       .debug_loc     00000000 
0000268d l       .debug_loc     00000000 
000026b3 l       .debug_loc     00000000 
000026ce l       .debug_loc     00000000 
0000270a l       .debug_loc     00000000 
00002751 l       .debug_loc     00000000 
0000278d l       .debug_loc     00000000 
000027b3 l       .debug_loc     00000000 
000027d9 l       .debug_loc     00000000 
000027ff l       .debug_loc     00000000 
0000283b l       .debug_loc     00000000 
00002861 l       .debug_loc     00000000 
0000289d l       .debug_loc     00000000 
000028d9 l       .debug_loc     00000000 
000028ff l       .debug_loc     00000000 
0000293b l       .debug_loc     00000000 
0000296c l       .debug_loc     00000000 
00002987 l       .debug_loc     00000000 
000029ad l       .debug_loc     00000000 
000029c8 l       .debug_loc     00000000 
000029e8 l       .debug_loc     00000000 
00002a03 l       .debug_loc     00000000 
00002a23 l       .debug_loc     00000000 
00002a3e l       .debug_loc     00000000 
00002a64 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000023bd l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000003b8 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000242d l       .debug_str     00000000 
000023ec l       .debug_str     00000000 
00002402 l       .debug_str     00000000 
00002418 l       .debug_str     00000000 
00002440 l       .debug_str     00000000 
0000248c l       .debug_str     00000000 
0000245f l       .debug_str     00000000 
00002475 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000f01 l       .debug_str     00000000 
0000613f l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000f80 l       .debug_str     00000000 
0000254b l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
00002552 l       .debug_str     00000000 
00002561 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00000310 l       .debug_ranges  00000000 
00000328 l       .debug_ranges  00000000 
000002c1 l       .debug_str     00000000 
00002590 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00000b9e l       .debug_str     00000000 
0000250c l       .debug_str     00000000 
00002437 l       .debug_str     00000000 
00002557 l       .debug_str     00000000 
00000340 l       .debug_ranges  00000000 
00000368 l       .debug_ranges  00000000 
00000390 l       .debug_ranges  00000000 
0000249f l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
000024bc l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
000024d1 l       .debug_str     00000000 
000024ee l       .debug_str     00000000 
00002519 l       .debug_str     00000000 
00002537 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002510 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
0000257c l       .debug_str     00000000 
0000256a l       .debug_str     00000000 
00002595 l       .debug_str     00000000 
000002a4 l       .debug_frame   00000000 
d000a088 l       .text  00000000 
d000a236 l       .text  00000000 
d000a298 l       .text  00000000 
d000a2e2 l       .text  00000000 
00000000 l    df *ABS*  00000000 shutdown.c
d000a2e2 l       .text  00000000 
d000a2e2 l       .text  00000000 
d000a2e2 l       .text  00000000 
d000a2e4 l       .text  00000000 
d000a2fe l       .text  00000000 
d000a300 l       .text  00000000 
d000a300 l       .text  00000000 
d000a300 l       .text  00000000 
d000a300 l       .text  00000000 
d000a308 l       .text  00000000 
d000a308 l       .text  00000000 
d000a30c l       .text  00000000 
d000a30c l       .text  00000000 
d000a310 l       .text  00000000 
d000a314 l       .text  00000000 
d000a31c l       .text  00000000 
d000a320 l       .text  00000000 
d000a32e l       .text  00000000 
d000a32e l       .text  00000000 
d000a330 l       .text  00000000 
d000a330 l       .text  00000000 
d000a332 l       .text  00000000 
d000a33a l       .text  00000000 
d000a33e l       .text  00000000 
d000a34c l       .text  00000000 
d000a34c l       .text  00000000 
d000a34e l       .text  00000000 
d000a34e l       .text  00000000 
d000a350 l       .text  00000000 
d000a358 l       .text  00000000 
d000a366 l       .text  00000000 
d000a366 l       .text  00000000 
d000a368 l       .text  00000000 
d000a368 l       .text  00000000 
d000a36c l       .text  00000000 
d000a36c l       .text  00000000 
d000a36e l       .text  00000000 
d000a376 l       .text  00000000 
d000a37a l       .text  00000000 
d000a37a l       .text  00000000 
d000a37e l       .text  00000000 
d000a37e l       .text  00000000 
d000a38a l       .text  00000000 
d000a38a l       .text  00000000 
d000a38a l       .text  00000000 
d000a38a l       .text  00000000 
d000a38e l       .text  00000000 
d000a38e l       .text  00000000 
d000a396 l       .text  00000000 
d000a398 l       .text  00000000 
d000a398 l       .text  00000000 
d000a3a0 l       .text  00000000 
d000a3a0 l       .text  00000000 
d000a3a2 l       .text  00000000 
d000a3a2 l       .text  00000000 
d000a3a8 l       .text  00000000 
d000a3a8 l       .text  00000000 
d000a3ac l       .text  00000000 
d000a3ac l       .text  00000000 
d000a3b6 l       .text  00000000 
d000a3b6 l       .text  00000000 
d000a3ba l       .text  00000000 
d000a3be l       .text  00000000 
d000a3be l       .text  00000000 
d000a3c0 l       .text  00000000 
d000a3c0 l       .text  00000000 
d000a3c4 l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3ca l       .text  00000000 
d000a3ca l       .text  00000000 
d000a3cc l       .text  00000000 
d000a3cc l       .text  00000000 
d000a3ce l       .text  00000000 
d000a3d8 l       .text  00000000 
d000a3d8 l       .text  00000000 
d000a3da l       .text  00000000 
d000a3de l       .text  00000000 
d000a3e2 l       .text  00000000 
d000a3e4 l       .text  00000000 
d000a3e4 l       .text  00000000 
d000a3e6 l       .text  00000000 
d000a3e6 l       .text  00000000 
d000a3ea l       .text  00000000 
d000a3ea l       .text  00000000 
d000a3ee l       .text  00000000 
d000a3ee l       .text  00000000 
d000a3f4 l       .text  00000000 
d000a40c l       .text  00000000 
d000a40c l       .text  00000000 
d000a412 l       .text  00000000 
d000a412 l       .text  00000000 
d000a416 l       .text  00000000 
d000a416 l       .text  00000000 
d000a41a l       .text  00000000 
d000a41a l       .text  00000000 
d000a41e l       .text  00000000 
d000a426 l       .text  00000000 
d000a426 l       .text  00000000 
d000a434 l       .text  00000000 
d000a43a l       .text  00000000 
d000a43e l       .text  00000000 
d000a43e l       .text  00000000 
d000a442 l       .text  00000000 
d000a442 l       .text  00000000 
d000a444 l       .text  00000000 
d000a446 l       .text  00000000 
d000a446 l       .text  00000000 
d000a448 l       .text  00000000 
d000a448 l       .text  00000000 
d000a44e l       .text  00000000 
d000a44e l       .text  00000000 
d000a452 l       .text  00000000 
d000a456 l       .text  00000000 
d000a458 l       .text  00000000 
d000a45a l       .text  00000000 
d000a45a l       .text  00000000 
d000a45c l       .text  00000000 
d000a45c l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a462 l       .text  00000000 
d000a462 l       .text  00000000 
d000a47e l       .text  00000000 
d000a47e l       .text  00000000 
d000a484 l       .text  00000000 
d000a484 l       .text  00000000 
d000a488 l       .text  00000000 
d000a488 l       .text  00000000 
d000a48c l       .text  00000000 
d000a48c l       .text  00000000 
d000a490 l       .text  00000000 
d000a498 l       .text  00000000 
d000a498 l       .text  00000000 
d000a4a6 l       .text  00000000 
d000a4ac l       .text  00000000 
d000a4b0 l       .text  00000000 
d000a4b0 l       .text  00000000 
d000a4b4 l       .text  00000000 
d000a4b4 l       .text  00000000 
d000a4b6 l       .text  00000000 
d000a4b8 l       .text  00000000 
d000a4b8 l       .text  00000000 
d000a4ba l       .text  00000000 
d000a4ba l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4ca l       .text  00000000 
d000a4ca l       .text  00000000 
d000a4cc l       .text  00000000 
d000a4cc l       .text  00000000 
d000a4ce l       .text  00000000 
d000a4ce l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4da l       .text  00000000 
d000a4e2 l       .text  00000000 
d000a4e6 l       .text  00000000 
d000a4e8 l       .text  00000000 
d000a4ee l       .text  00000000 
d000a4f2 l       .text  00000000 
d000a4fa l       .text  00000000 
d000a506 l       .text  00000000 
d000a506 l       .text  00000000 
d000a510 l       .text  00000000 
d000a516 l       .text  00000000 
d000a518 l       .text  00000000 
d000a51a l       .text  00000000 
d000a51e l       .text  00000000 
d000a522 l       .text  00000000 
d000a522 l       .text  00000000 
d000a524 l       .text  00000000 
d000a528 l       .text  00000000 
d000a52c l       .text  00000000 
d000a52c l       .text  00000000 
d000a52e l       .text  00000000 
d000a52e l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a532 l       .text  00000000 
d000a532 l       .text  00000000 
d000a536 l       .text  00000000 
d000a536 l       .text  00000000 
d000a53e l       .text  00000000 
d000a53e l       .text  00000000 
d000a544 l       .text  00000000 
d000a544 l       .text  00000000 
d000a548 l       .text  00000000 
d000a548 l       .text  00000000 
d000a54a l       .text  00000000 
d000a54a l       .text  00000000 
d000a554 l       .text  00000000 
d000a554 l       .text  00000000 
d000a55a l       .text  00000000 
d000a55c l       .text  00000000 
d000a562 l       .text  00000000 
d000a562 l       .text  00000000 
d000a568 l       .text  00000000 
d000a56c l       .text  00000000 
d000a56c l       .text  00000000 
d000a56e l       .text  00000000 
d000a56e l       .text  00000000 
d000a572 l       .text  00000000 
d000a572 l       .text  00000000 
d000a574 l       .text  00000000 
d000a576 l       .text  00000000 
d000a576 l       .text  00000000 
d000a578 l       .text  00000000 
d000a578 l       .text  00000000 
d000a57e l       .text  00000000 
d000a57e l       .text  00000000 
d000a580 l       .text  00000000 
d000a584 l       .text  00000000 
d000a586 l       .text  00000000 
d000a588 l       .text  00000000 
d000a58a l       .text  00000000 
d000a592 l       .text  00000000 
d000a596 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5c4 l       .text  00000000 
d000a5c4 l       .text  00000000 
d000a5cc l       .text  00000000 
d000a5cc l       .text  00000000 
d000d1b8 l       .shutdown      00000000 
d000d1b8 l       .shutdown      00000000 
d000d1b8 l       .shutdown      00000000 
d000d1bc l       .shutdown      00000000 
d000d1bc l       .shutdown      00000000 
d000d1be l       .shutdown      00000000 
d000d1be l       .shutdown      00000000 
d000d1c4 l       .shutdown      00000000 
d000d1c4 l       .shutdown      00000000 
d000d1c8 l       .shutdown      00000000 
d000d1c8 l       .shutdown      00000000 
d000d1d8 l       .shutdown      00000000 
d000d1d8 l       .shutdown      00000000 
d000d1dc l       .shutdown      00000000 
d000d1dc l       .shutdown      00000000 
d000d1e4 l       .shutdown      00000000 
d000d1e8 l       .shutdown      00000000 
d000d1f0 l       .shutdown      00000000 
d000d1f4 l       .shutdown      00000000 
d000d1fc l       .shutdown      00000000 
d000d200 l       .shutdown      00000000 
d000d216 l       .shutdown      00000000 
d000d21a l       .shutdown      00000000 
d000d222 l       .shutdown      00000000 
d000d226 l       .shutdown      00000000 
d000d22e l       .shutdown      00000000 
d000d232 l       .shutdown      00000000 
d000d23a l       .shutdown      00000000 
d000d240 l       .shutdown      00000000 
d000d244 l       .shutdown      00000000 
d000d248 l       .shutdown      00000000 
d000d250 l       .shutdown      00000000 
d000d254 l       .shutdown      00000000 
d000d266 l       .shutdown      00000000 
d000d26a l       .shutdown      00000000 
d000d272 l       .shutdown      00000000 
d000d276 l       .shutdown      00000000 
d000d27e l       .shutdown      00000000 
d000d282 l       .shutdown      00000000 
d000d286 l       .shutdown      00000000 
d000d286 l       .shutdown      00000000 
d000d28c l       .shutdown      00000000 
d000d28c l       .shutdown      00000000 
d000d294 l       .shutdown      00000000 
d000d298 l       .shutdown      00000000 
d000d298 l       .shutdown      00000000 
d000d29c l       .shutdown      00000000 
d000d29e l       .shutdown      00000000 
d000d2a0 l       .shutdown      00000000 
d000d2a8 l       .shutdown      00000000 
d000d2ac l       .shutdown      00000000 
d000d2b4 l       .shutdown      00000000 
d000d2b8 l       .shutdown      00000000 
d000d2c0 l       .shutdown      00000000 
d000d2c4 l       .shutdown      00000000 
d000d2c8 l       .shutdown      00000000 
d000d2cc l       .shutdown      00000000 
d000d2cc l       .shutdown      00000000 
d000d2ce l       .shutdown      00000000 
d000d2ce l       .shutdown      00000000 
d000d2d4 l       .shutdown      00000000 
d000d2d4 l       .shutdown      00000000 
d000d2d6 l       .shutdown      00000000 
d000d2d8 l       .shutdown      00000000 
d000d2da l       .shutdown      00000000 
d000d2e0 l       .shutdown      00000000 
d000d2e0 l       .shutdown      00000000 
d000d2e2 l       .shutdown      00000000 
d000d2e2 l       .shutdown      00000000 
d000d2e4 l       .shutdown      00000000 
d000d2e4 l       .shutdown      00000000 
d000d2e8 l       .shutdown      00000000 
d000d2e8 l       .shutdown      00000000 
d000d2f2 l       .shutdown      00000000 
d000d2f2 l       .shutdown      00000000 
d000d2fc l       .shutdown      00000000 
d000d2fc l       .shutdown      00000000 
d000d304 l       .shutdown      00000000 
d000d304 l       .shutdown      00000000 
d000d30c l       .shutdown      00000000 
d000d30c l       .shutdown      00000000 
d000d312 l       .shutdown      00000000 
d000d312 l       .shutdown      00000000 
d000d314 l       .shutdown      00000000 
d000d314 l       .shutdown      00000000 
d000d31c l       .shutdown      00000000 
d000d31e l       .shutdown      00000000 
d000d31e l       .shutdown      00000000 
d000d322 l       .shutdown      00000000 
d000d322 l       .shutdown      00000000 
d000d326 l       .shutdown      00000000 
d000d328 l       .shutdown      00000000 
d000d328 l       .shutdown      00000000 
d000d32a l       .shutdown      00000000 
d000d32e l       .shutdown      00000000 
d000d32e l       .shutdown      00000000 
d000d330 l       .shutdown      00000000 
d000d330 l       .shutdown      00000000 
d000d332 l       .shutdown      00000000 
d000d332 l       .shutdown      00000000 
d000d334 l       .shutdown      00000000 
d000d334 l       .shutdown      00000000 
d000d336 l       .shutdown      00000000 
d000d33a l       .shutdown      00000000 
d000d33a l       .shutdown      00000000 
d000d33c l       .shutdown      00000000 
d000d33c l       .shutdown      00000000 
d000d342 l       .shutdown      00000000 
d000d342 l       .shutdown      00000000 
d000d348 l       .shutdown      00000000 
d000d348 l       .shutdown      00000000 
d000d34e l       .shutdown      00000000 
d000d34e l       .shutdown      00000000 
d000d350 l       .shutdown      00000000 
d000d350 l       .shutdown      00000000 
d000d354 l       .shutdown      00000000 
d000d354 l       .shutdown      00000000 
d000d358 l       .shutdown      00000000 
d000d358 l       .shutdown      00000000 
d000d358 l       .shutdown      00000000 
d000d358 l       .shutdown      00000000 
d000d35c l       .shutdown      00000000 
d000d35c l       .shutdown      00000000 
d000d364 l       .shutdown      00000000 
d000d364 l       .shutdown      00000000 
d000d368 l       .shutdown      00000000 
d000d36a l       .shutdown      00000000 
d000d36a l       .shutdown      00000000 
d000d36c l       .shutdown      00000000 
d000d370 l       .shutdown      00000000 
d000d370 l       .shutdown      00000000 
d000d372 l       .shutdown      00000000 
d000d372 l       .shutdown      00000000 
d000d374 l       .shutdown      00000000 
d000d374 l       .shutdown      00000000 
d000d376 l       .shutdown      00000000 
d000d376 l       .shutdown      00000000 
d000d378 l       .shutdown      00000000 
d000d37c l       .shutdown      00000000 
d000d37c l       .shutdown      00000000 
d000d380 l       .shutdown      00000000 
d000d380 l       .shutdown      00000000 
d000d384 l       .shutdown      00000000 
d000d384 l       .shutdown      00000000 
d000d386 l       .shutdown      00000000 
d000d386 l       .shutdown      00000000 
d000d38a l       .shutdown      00000000 
d000d38a l       .shutdown      00000000 
d000d394 l       .shutdown      00000000 
d000d394 l       .shutdown      00000000 
d000d396 l       .shutdown      00000000 
d000d396 l       .shutdown      00000000 
d000d39a l       .shutdown      00000000 
d000d39a l       .shutdown      00000000 
d000d39c l       .shutdown      00000000 
d000d3a0 l       .shutdown      00000000 
d000d3a0 l       .shutdown      00000000 
d000d3a4 l       .shutdown      00000000 
d000d3a4 l       .shutdown      00000000 
d000d3a6 l       .shutdown      00000000 
d000d3a6 l       .shutdown      00000000 
d000d3a8 l       .shutdown      00000000 
d000d3a8 l       .shutdown      00000000 
d000d3ac l       .shutdown      00000000 
d000d3ac l       .shutdown      00000000 
d000d3b8 l       .shutdown      00000000 
d000d3b8 l       .shutdown      00000000 
d000d3ba l       .shutdown      00000000 
d000d3be l       .shutdown      00000000 
d000d3be l       .shutdown      00000000 
d000d3c0 l       .shutdown      00000000 
d000d3c0 l       .shutdown      00000000 
d000d3c8 l       .shutdown      00000000 
d000d3c8 l       .shutdown      00000000 
d000d3d0 l       .shutdown      00000000 
d000d3d0 l       .shutdown      00000000 
d000d3d8 l       .shutdown      00000000 
d000d3d8 l       .shutdown      00000000 
d000d3dc l       .shutdown      00000000 
d000d3dc l       .shutdown      00000000 
d000d3f0 l       .shutdown      00000000 
d000d3f0 l       .shutdown      00000000 
d000d450 l       .shutdown      00000000 
d000d450 l       .shutdown      00000000 
d000d450 l       .shutdown      00000000 
00002a8a l       .debug_loc     00000000 
00002ac6 l       .debug_loc     00000000 
00002aec l       .debug_loc     00000000 
00002b13 l       .debug_loc     00000000 
00002b5e l       .debug_loc     00000000 
00002b85 l       .debug_loc     00000000 
00002bac l       .debug_loc     00000000 
00002bd2 l       .debug_loc     00000000 
00002bee l       .debug_loc     00000000 
00002c78 l       .debug_loc     00000000 
00002ce3 l       .debug_loc     00000000 
00002cfe l       .debug_loc     00000000 
00002d46 l       .debug_loc     00000000 
00002d61 l       .debug_loc     00000000 
00002d9f l       .debug_loc     00000000 
00002ddd l       .debug_loc     00000000 
00002e1a l       .debug_loc     00000000 
00002e3d l       .debug_loc     00000000 
00002e58 l       .debug_loc     00000000 
00002e73 l       .debug_loc     00000000 
00002e8e l       .debug_loc     00000000 
00002ecb l       .debug_loc     00000000 
00002eee l       .debug_loc     00000000 
00002f09 l       .debug_loc     00000000 
00002f24 l       .debug_loc     00000000 
00002f3f l       .debug_loc     00000000 
00002f7c l       .debug_loc     00000000 
00002fc5 l       .debug_loc     00000000 
0000300c l       .debug_loc     00000000 
00003027 l       .debug_loc     00000000 
00003058 l       .debug_loc     00000000 
0000307e l       .debug_loc     00000000 
000030a4 l       .debug_loc     00000000 
000030ca l       .debug_loc     00000000 
000030f0 l       .debug_loc     00000000 
00003115 l       .debug_loc     00000000 
00003139 l       .debug_loc     00000000 
00003160 l       .debug_loc     00000000 
0000317b l       .debug_loc     00000000 
00003196 l       .debug_loc     00000000 
000031bc l       .debug_loc     00000000 
000031ed l       .debug_loc     00000000 
0000321e l       .debug_loc     00000000 
00003244 l       .debug_loc     00000000 
0000326b l       .debug_loc     00000000 
0000329c l       .debug_loc     00000000 
000032c2 l       .debug_loc     00000000 
000032e8 l       .debug_loc     00000000 
00003303 l       .debug_loc     00000000 
00003329 l       .debug_loc     00000000 
0000334e l       .debug_loc     00000000 
00003372 l       .debug_loc     00000000 
00003398 l       .debug_loc     00000000 
000033ba l       .debug_loc     00000000 
000033d5 l       .debug_loc     00000000 
000033fb l       .debug_loc     00000000 
0000342d l       .debug_loc     00000000 
00003460 l       .debug_loc     00000000 
00003493 l       .debug_loc     00000000 
000034d2 l       .debug_loc     00000000 
000034ed l       .debug_loc     00000000 
0000352b l       .debug_loc     00000000 
00003552 l       .debug_loc     00000000 
00003591 l       .debug_loc     00000000 
000035ac l       .debug_loc     00000000 
000035c7 l       .debug_loc     00000000 
000035e2 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000025aa l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000004d8 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000bf0 l       .debug_str     00000000 
000025d3 l       .debug_str     00000000 
000025e0 l       .debug_str     00000000 
000025f0 l       .debug_str     00000000 
000025fc l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00002b4e l       .debug_str     00000000 
000029d1 l       .debug_str     00000000 
00005b5b l       .debug_str     00000000 
00002a76 l       .debug_str     00000000 
00002a7f l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00002a8f l       .debug_str     00000000 
00002a9c l       .debug_str     00000000 
00002ab1 l       .debug_str     00000000 
000003e0 l       .debug_ranges  00000000 
000003f8 l       .debug_ranges  00000000 
00000410 l       .debug_ranges  00000000 
00006aa0 l       .debug_str     00000000 
00002232 l       .debug_str     00000000 
0000286e l       .debug_str     00000000 
00000428 l       .debug_ranges  00000000 
00000440 l       .debug_ranges  00000000 
00002aab l       .debug_str     00000000 
00000458 l       .debug_ranges  00000000 
00002640 l       .debug_str     00000000 
00002608 l       .debug_str     00000000 
00002619 l       .debug_str     00000000 
0000262d l       .debug_str     00000000 
000026b3 l       .debug_str     00000000 
0000264c l       .debug_str     00000000 
0000265f l       .debug_str     00000000 
00002674 l       .debug_str     00000000 
00002689 l       .debug_str     00000000 
0000269e l       .debug_str     00000000 
00002702 l       .debug_str     00000000 
000026c1 l       .debug_str     00000000 
000026ce l       .debug_str     00000000 
000026db l       .debug_str     00000000 
000026e8 l       .debug_str     00000000 
000026f5 l       .debug_str     00000000 
00002773 l       .debug_str     00000000 
0000270d l       .debug_str     00000000 
00002726 l       .debug_str     00000000 
00002740 l       .debug_str     00000000 
0000275b l       .debug_str     00000000 
00002789 l       .debug_str     00000000 
00002794 l       .debug_str     00000000 
000027a1 l       .debug_str     00000000 
000027ab l       .debug_str     00000000 
000027f1 l       .debug_str     00000000 
000027b9 l       .debug_str     00000000 
000027d5 l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
00002805 l       .debug_str     00000000 
00002813 l       .debug_str     00000000 
0000281f l       .debug_str     00000000 
0000282e l       .debug_str     00000000 
0000283f l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000284d l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00002865 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00002872 l       .debug_str     00000000 
00002882 l       .debug_str     00000000 
00002898 l       .debug_str     00000000 
000028ed l       .debug_str     00000000 
000028ae l       .debug_str     00000000 
000028b6 l       .debug_str     00000000 
000028c1 l       .debug_str     00000000 
000028d1 l       .debug_str     00000000 
000028e0 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000028fe l       .debug_str     00000000 
00000932 l       .debug_str     00000000 
00002915 l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00002a3a l       .debug_str     00000000 
00000478 l       .debug_ranges  00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002927 l       .debug_str     00000000 
00002945 l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
00000490 l       .debug_ranges  00000000 
0000294f l       .debug_str     00000000 
00002a5a l       .debug_str     00000000 
00002965 l       .debug_str     00000000 
00002974 l       .debug_str     00000000 
00002982 l       .debug_str     00000000 
00005995 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
000010a8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00002989 l       .debug_str     00000000 
000027fe l       .debug_str     00000000 
000029ae l       .debug_str     00000000 
000029b8 l       .debug_str     00000000 
00002998 l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
000029bf l       .debug_str     00000000 
000029da l       .debug_str     00000000 
000029f4 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00002a09 l       .debug_str     00000000 
00002a18 l       .debug_str     00000000 
00002a2c l       .debug_str     00000000 
00000d1f l       .debug_str     00000000 
000004a8 l       .debug_ranges  00000000 
000004c0 l       .debug_ranges  00000000 
00002a61 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000031c l       .debug_frame   00000000 
d000a5cc l       .text  00000000 
d000d450 l       .shutdown      00000000 
00000000 l    df *ABS*  00000000 alert.c
d000a5cc l       .text  00000000 
d000a5cc l       .text  00000000 
d000a5cc l       .text  00000000 
d000a5d0 l       .text  00000000 
d000a5d4 l       .text  00000000 
d000a5d8 l       .text  00000000 
d000a5dc l       .text  00000000 
d000a5de l       .text  00000000 
d000a5de l       .text  00000000 
d000a5e6 l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5f2 l       .text  00000000 
d000a5f6 l       .text  00000000 
d000a5fa l       .text  00000000 
d000a5fe l       .text  00000000 
d000a602 l       .text  00000000 
d000a606 l       .text  00000000 
d000a60a l       .text  00000000 
d000a60e l       .text  00000000 
d000a612 l       .text  00000000 
d000a612 l       .text  00000000 
d000a616 l       .text  00000000 
d000a61c l       .text  00000000 
d000a61c l       .text  00000000 
d000a620 l       .text  00000000 
d000a624 l       .text  00000000 
d000a628 l       .text  00000000 
d000a62c l       .text  00000000 
d000a630 l       .text  00000000 
d000a630 l       .text  00000000 
d000a634 l       .text  00000000 
d000a634 l       .text  00000000 
d000a638 l       .text  00000000 
d000a638 l       .text  00000000 
d000a63c l       .text  00000000 
d000a63c l       .text  00000000 
d000a640 l       .text  00000000 
d000a640 l       .text  00000000 
d000a65c l       .text  00000000 
d000a662 l       .text  00000000 
d000a662 l       .text  00000000 
d000a666 l       .text  00000000 
d000a66a l       .text  00000000 
d000a66a l       .text  00000000 
d000a66e l       .text  00000000 
d000a66e l       .text  00000000 
d000a670 l       .text  00000000 
d000a670 l       .text  00000000 
d000a676 l       .text  00000000 
d000a676 l       .text  00000000 
d000a67c l       .text  00000000 
d000a67c l       .text  00000000 
d000a680 l       .text  00000000 
d000a684 l       .text  00000000 
d000a684 l       .text  00000000 
d000a686 l       .text  00000000 
d000a686 l       .text  00000000 
d000a68c l       .text  00000000 
d000a68c l       .text  00000000 
d000a68c l       .text  00000000 
d000a68c l       .text  00000000 
d000a68c l       .text  00000000 
d000a68e l       .text  00000000 
d000a692 l       .text  00000000 
d000a696 l       .text  00000000 
d000a69a l       .text  00000000 
d000a69c l       .text  00000000 
d000a69c l       .text  00000000 
d000a6a4 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6b0 l       .text  00000000 
d000a6b4 l       .text  00000000 
d000a6b8 l       .text  00000000 
d000a6bc l       .text  00000000 
d000a6c0 l       .text  00000000 
d000a6c4 l       .text  00000000 
d000a6c8 l       .text  00000000 
d000a6cc l       .text  00000000 
d000a6d0 l       .text  00000000 
d000a6d0 l       .text  00000000 
d000a6d4 l       .text  00000000 
d000a6da l       .text  00000000 
d000a6da l       .text  00000000 
d000a6de l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e6 l       .text  00000000 
d000a6ea l       .text  00000000 
d000a6ee l       .text  00000000 
d000a6ee l       .text  00000000 
d000a6f2 l       .text  00000000 
d000a6f2 l       .text  00000000 
d000a6f6 l       .text  00000000 
d000a6f6 l       .text  00000000 
d000a6fa l       .text  00000000 
d000a6fa l       .text  00000000 
d000a6fe l       .text  00000000 
d000a6fe l       .text  00000000 
d000a71a l       .text  00000000 
d000a720 l       .text  00000000 
d000a720 l       .text  00000000 
d000a724 l       .text  00000000 
d000a728 l       .text  00000000 
d000a728 l       .text  00000000 
d000a72c l       .text  00000000 
d000a72c l       .text  00000000 
d000a72e l       .text  00000000 
d000a72e l       .text  00000000 
d000a734 l       .text  00000000 
d000a734 l       .text  00000000 
d000a73a l       .text  00000000 
d000a73a l       .text  00000000 
d000a73e l       .text  00000000 
d000a742 l       .text  00000000 
d000a742 l       .text  00000000 
d000a744 l       .text  00000000 
d000a744 l       .text  00000000 
d000a74a l       .text  00000000 
d000a74a l       .text  00000000 
d000a74a l       .text  00000000 
d000a74a l       .text  00000000 
d000a74a l       .text  00000000 
d000a74c l       .text  00000000 
d000a754 l       .text  00000000 
d000a758 l       .text  00000000 
d000a75c l       .text  00000000 
d000a760 l       .text  00000000 
d000a764 l       .text  00000000 
d000a768 l       .text  00000000 
d000a76c l       .text  00000000 
d000a76c l       .text  00000000 
d000a772 l       .text  00000000 
d000a776 l       .text  00000000 
d000a77a l       .text  00000000 
d000a77e l       .text  00000000 
d000a782 l       .text  00000000 
d000a78a l       .text  00000000 
d000a78c l       .text  00000000 
d000a790 l       .text  00000000 
d000a790 l       .text  00000000 
d000a798 l       .text  00000000 
d000a79c l       .text  00000000 
d000a7a0 l       .text  00000000 
d000a7a4 l       .text  00000000 
d000a7a8 l       .text  00000000 
d000a7ac l       .text  00000000 
d000a7b2 l       .text  00000000 
d000a7b4 l       .text  00000000 
d000a7be l       .text  00000000 
d000a7be l       .text  00000000 
d000a7cc l       .text  00000000 
d000a7d0 l       .text  00000000 
d000a7d4 l       .text  00000000 
d000a7d8 l       .text  00000000 
d000a7dc l       .text  00000000 
d000a7e0 l       .text  00000000 
d000a7e4 l       .text  00000000 
d000a7e8 l       .text  00000000 
d000a7e8 l       .text  00000000 
d000a7ea l       .text  00000000 
d000a7ea l       .text  00000000 
d000a7ee l       .text  00000000 
d000a7f2 l       .text  00000000 
d000a7f6 l       .text  00000000 
d000a7fa l       .text  00000000 
d000a7fa l       .text  00000000 
d000a7fe l       .text  00000000 
d000a7fe l       .text  00000000 
d000a802 l       .text  00000000 
d000a802 l       .text  00000000 
d000a806 l       .text  00000000 
d000a806 l       .text  00000000 
d000a80a l       .text  00000000 
d000a80a l       .text  00000000 
d000a812 l       .text  00000000 
d000a812 l       .text  00000000 
d000a814 l       .text  00000000 
d000a814 l       .text  00000000 
d000a818 l       .text  00000000 
d000a81c l       .text  00000000 
d000a81c l       .text  00000000 
d000a81e l       .text  00000000 
d000a81e l       .text  00000000 
d000a822 l       .text  00000000 
d000a826 l       .text  00000000 
d000a826 l       .text  00000000 
d000a828 l       .text  00000000 
d000a828 l       .text  00000000 
d000a82a l       .text  00000000 
d000a82a l       .text  00000000 
d000a82e l       .text  00000000 
d000a836 l       .text  00000000 
d000a836 l       .text  00000000 
d000a838 l       .text  00000000 
d000a838 l       .text  00000000 
d000a83a l       .text  00000000 
d000a83a l       .text  00000000 
d000a844 l       .text  00000000 
d000a844 l       .text  00000000 
d000a846 l       .text  00000000 
d000a846 l       .text  00000000 
d000a848 l       .text  00000000 
d000a848 l       .text  00000000 
d000a84a l       .text  00000000 
d000a84a l       .text  00000000 
d000a84e l       .text  00000000 
d000a84e l       .text  00000000 
d000a856 l       .text  00000000 
d000a85a l       .text  00000000 
d000a85a l       .text  00000000 
d000a85e l       .text  00000000 
d000a85e l       .text  00000000 
d000a860 l       .text  00000000 
d000a860 l       .text  00000000 
d000a868 l       .text  00000000 
d000a86a l       .text  00000000 
d000a86a l       .text  00000000 
d000a86a l       .text  00000000 
d000a86a l       .text  00000000 
d000a86a l       .text  00000000 
d000a86c l       .text  00000000 
d000a87c l       .text  00000000 
d000a884 l       .text  00000000 
d000a888 l       .text  00000000 
d000a888 l       .text  00000000 
d000a88e l       .text  00000000 
d000a88e l       .text  00000000 
d000a892 l       .text  00000000 
d000a894 l       .text  00000000 
d000a894 l       .text  00000000 
d000a898 l       .text  00000000 
d000a898 l       .text  00000000 
d000a89a l       .text  00000000 
d000a89a l       .text  00000000 
d000a89e l       .text  00000000 
d000a89e l       .text  00000000 
d000a8a4 l       .text  00000000 
d000a8a4 l       .text  00000000 
d000a8a8 l       .text  00000000 
d000a8ac l       .text  00000000 
d000a8ac l       .text  00000000 
d000a8b0 l       .text  00000000 
d000a8b0 l       .text  00000000 
d000a8b2 l       .text  00000000 
d000a8b2 l       .text  00000000 
d000a8b6 l       .text  00000000 
d000a8b6 l       .text  00000000 
d000a8bc l       .text  00000000 
d000a8bc l       .text  00000000 
d000a8c0 l       .text  00000000 
d000a8c4 l       .text  00000000 
d000a8c4 l       .text  00000000 
d000a8c8 l       .text  00000000 
d000a8c8 l       .text  00000000 
d000a8ca l       .text  00000000 
d000a8ca l       .text  00000000 
d000a8ce l       .text  00000000 
d000a8ce l       .text  00000000 
d000a8d2 l       .text  00000000 
d000a8d2 l       .text  00000000 
d000a8d6 l       .text  00000000 
d000a8da l       .text  00000000 
d000a8da l       .text  00000000 
d000a8de l       .text  00000000 
d000a8de l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e4 l       .text  00000000 
d000a8e4 l       .text  00000000 
d000a8e8 l       .text  00000000 
d000a8e8 l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8f0 l       .text  00000000 
d000a8f0 l       .text  00000000 
d000a8f4 l       .text  00000000 
d000a8f4 l       .text  00000000 
d000a8f6 l       .text  00000000 
d000a8f6 l       .text  00000000 
d000a8fa l       .text  00000000 
d000a8fa l       .text  00000000 
d000a8fe l       .text  00000000 
d000a8fe l       .text  00000000 
d000a902 l       .text  00000000 
d000a906 l       .text  00000000 
d000a906 l       .text  00000000 
d000a90a l       .text  00000000 
d000a90a l       .text  00000000 
d000a90c l       .text  00000000 
d000a90c l       .text  00000000 
d000a910 l       .text  00000000 
d000a910 l       .text  00000000 
d000a922 l       .text  00000000 
d000a922 l       .text  00000000 
d000a926 l       .text  00000000 
d000a926 l       .text  00000000 
d000a92a l       .text  00000000 
d000a92a l       .text  00000000 
d000a92e l       .text  00000000 
d000a92e l       .text  00000000 
d000a930 l       .text  00000000 
d000a932 l       .text  00000000 
d000a932 l       .text  00000000 
d000a936 l       .text  00000000 
d000a936 l       .text  00000000 
d000a93a l       .text  00000000 
d000a93a l       .text  00000000 
d000a93e l       .text  00000000 
d000a93e l       .text  00000000 
d000a942 l       .text  00000000 
d000a942 l       .text  00000000 
d000a946 l       .text  00000000 
d000a946 l       .text  00000000 
d000a94a l       .text  00000000 
d000a94a l       .text  00000000 
d000a94c l       .text  00000000 
d000a94c l       .text  00000000 
d000a950 l       .text  00000000 
d000a952 l       .text  00000000 
d000a952 l       .text  00000000 
d000a956 l       .text  00000000 
d000a956 l       .text  00000000 
d000a958 l       .text  00000000 
d000a958 l       .text  00000000 
d000a95c l       .text  00000000 
d000a95c l       .text  00000000 
d000a95e l       .text  00000000 
d000a966 l       .text  00000000 
d000a966 l       .text  00000000 
d000a96a l       .text  00000000 
d000a96a l       .text  00000000 
d000a97e l       .text  00000000 
d000a97e l       .text  00000000 
d000a97e l       .text  00000000 
d000a97e l       .text  00000000 
d000a97e l       .text  00000000 
d000a980 l       .text  00000000 
d000a986 l       .text  00000000 
d000a988 l       .text  00000000 
d000a988 l       .text  00000000 
d000a98a l       .text  00000000 
d000a98a l       .text  00000000 
d000a98c l       .text  00000000 
d000a98c l       .text  00000000 
d000a994 l       .text  00000000 
d000a994 l       .text  00000000 
d000a996 l       .text  00000000 
d000a996 l       .text  00000000 
d000a99a l       .text  00000000 
d000a99a l       .text  00000000 
d000a99e l       .text  00000000 
d000a9a2 l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9ae l       .text  00000000 
d000a9ba l       .text  00000000 
d000a9c0 l       .text  00000000 
d000a9c8 l       .text  00000000 
d000a9cc l       .text  00000000 
d000a9d8 l       .text  00000000 
d000a9de l       .text  00000000 
d000a9e6 l       .text  00000000 
d000a9f2 l       .text  00000000 
d000a9f8 l       .text  00000000 
d000aa00 l       .text  00000000 
d000aa04 l       .text  00000000 
d000aa10 l       .text  00000000 
d000aa14 l       .text  00000000 
d000aa18 l       .text  00000000 
d000aa1c l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa20 l       .text  00000000 
d000aa20 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa28 l       .text  00000000 
d000aa28 l       .text  00000000 
d000aa36 l       .text  00000000 
d000aa3a l       .text  00000000 
d000aa3e l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa42 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa50 l       .text  00000000 
d000aa54 l       .text  00000000 
d000aa64 l       .text  00000000 
d000aa66 l       .text  00000000 
d000aa68 l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa70 l       .text  00000000 
00003602 l       .debug_loc     00000000 
00003633 l       .debug_loc     00000000 
00003685 l       .debug_loc     00000000 
000036b6 l       .debug_loc     00000000 
000036e7 l       .debug_loc     00000000 
00003739 l       .debug_loc     00000000 
0000376a l       .debug_loc     00000000 
000037a6 l       .debug_loc     00000000 
000037d7 l       .debug_loc     00000000 
00003832 l       .debug_loc     00000000 
000038a3 l       .debug_loc     00000000 
000038c5 l       .debug_loc     00000000 
000038e7 l       .debug_loc     00000000 
00003909 l       .debug_loc     00000000 
0000392b l       .debug_loc     00000000 
0000396a l       .debug_loc     00000000 
0000399d l       .debug_loc     00000000 
000039d9 l       .debug_loc     00000000 
00003a0c l       .debug_loc     00000000 
00003a4a l       .debug_loc     00000000 
00003a7d l       .debug_loc     00000000 
00003abb l       .debug_loc     00000000 
00003aee l       .debug_loc     00000000 
00003b2c l       .debug_loc     00000000 
00003b5f l       .debug_loc     00000000 
00003b9d l       .debug_loc     00000000 
00003bd0 l       .debug_loc     00000000 
00003c0e l       .debug_loc     00000000 
00003c2c l       .debug_loc     00000000 
00003c47 l       .debug_loc     00000000 
00003c64 l       .debug_loc     00000000 
00003c97 l       .debug_loc     00000000 
00003cc8 l       .debug_loc     00000000 
00003cee l       .debug_loc     00000000 
00003d14 l       .debug_loc     00000000 
00003d3a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002aba l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000518 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002702 l       .debug_str     00000000 
000026c1 l       .debug_str     00000000 
000026ce l       .debug_str     00000000 
000026db l       .debug_str     00000000 
000026e8 l       .debug_str     00000000 
000026f5 l       .debug_str     00000000 
00002640 l       .debug_str     00000000 
00002608 l       .debug_str     00000000 
00002619 l       .debug_str     00000000 
0000262d l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
000026b3 l       .debug_str     00000000 
0000264c l       .debug_str     00000000 
0000265f l       .debug_str     00000000 
00002674 l       .debug_str     00000000 
00002689 l       .debug_str     00000000 
0000269e l       .debug_str     00000000 
00002b55 l       .debug_str     00000000 
00002ae8 l       .debug_str     00000000 
00005c97 l       .debug_str     00000000 
00002b68 l       .debug_str     00000000 
00002b6e l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001184 l       .debug_str     00000000 
00002af3 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001611 l       .debug_str     00000000 
00002b62 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000029da l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002872 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
0000286e l       .debug_str     00000000 
000028ae l       .debug_str     00000000 
00002882 l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000010a8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00002898 l       .debug_str     00000000 
00005b5b l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00006a94 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00000500 l       .debug_ranges  00000000 
00002b43 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002af9 l       .debug_str     00000000 
00002b07 l       .debug_str     00000000 
00002b16 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00002b1f l       .debug_str     00000000 
00002b2a l       .debug_str     00000000 
00002b36 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
0000283f l       .debug_str     00000000 
0000281f l       .debug_str     00000000 
00002a61 l       .debug_str     00000000 
000028ed l       .debug_str     00000000 
000028b6 l       .debug_str     00000000 
000028c1 l       .debug_str     00000000 
000028d1 l       .debug_str     00000000 
000028e0 l       .debug_str     00000000 
0000282e l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000390 l       .debug_frame   00000000 
d000a68c l       .text  00000000 
d000a74a l       .text  00000000 
d000a86a l       .text  00000000 
d000a97e l       .text  00000000 
d000aa70 l       .text  00000000 
00000000 l    df *ABS*  00000000 crc32.c
d000aa70 l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa72 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa76 l       .text  00000000 
d000aa76 l       .text  00000000 
d000aa76 l       .text  00000000 
d000aa76 l       .text  00000000 
d000aa76 l       .text  00000000 
d000aa78 l       .text  00000000 
d000aa8c l       .text  00000000 
d000aa8c l       .text  00000000 
d000aa90 l       .text  00000000 
d000aa90 l       .text  00000000 
d000aa94 l       .text  00000000 
d000aa94 l       .text  00000000 
d000aa98 l       .text  00000000 
d000aa9a l       .text  00000000 
d000aa9c l       .text  00000000 
d000aa9e l       .text  00000000 
d000aa9e l       .text  00000000 
d000aaa0 l       .text  00000000 
d000aaa0 l       .text  00000000 
d000aaa2 l       .text  00000000 
d000aaa2 l       .text  00000000 
d000aaa4 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaac l       .text  00000000 
d000aab2 l       .text  00000000 
d000aab2 l       .text  00000000 
d000aab4 l       .text  00000000 
d000aab4 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aaba l       .text  00000000 
d000aaba l       .text  00000000 
d000aabe l       .text  00000000 
d000aac0 l       .text  00000000 
d000aac0 l       .text  00000000 
00003d60 l       .debug_loc     00000000 
00003d7b l       .debug_loc     00000000 
00003db4 l       .debug_loc     00000000 
00003dcf l       .debug_loc     00000000 
00003dea l       .debug_loc     00000000 
00003e05 l       .debug_loc     00000000 
00003e3e l       .debug_loc     00000000 
00003e64 l       .debug_loc     00000000 
00003e8a l       .debug_loc     00000000 
00003eb0 l       .debug_loc     00000000 
00003ecb l       .debug_loc     00000000 
00003ee6 l       .debug_loc     00000000 
00003f1f l       .debug_loc     00000000 
00003f3a l       .debug_loc     00000000 
00003f73 l       .debug_loc     00000000 
00003f8e l       .debug_loc     00000000 
00003fb4 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002b7a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000005d0 l       .debug_ranges  00000000 
00002ba0 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
00000550 l       .debug_ranges  00000000 
00002bab l       .debug_str     00000000 
00005c97 l       .debug_str     00000000 
00002bb6 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
0000206e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00002bbb l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00002b2a l       .debug_str     00000000 
0000129f l       .debug_str     00000000 
00006b09 l       .debug_str     00000000 
00000568 l       .debug_ranges  00000000 
00001993 l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00002bc4 l       .debug_str     00000000 
00001943 l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00000580 l       .debug_ranges  00000000 
000005a0 l       .debug_ranges  00000000 
000005b8 l       .debug_ranges  00000000 
00002b1f l       .debug_str     00000000 
00002b36 l       .debug_str     00000000 
00002b62 l       .debug_str     00000000 
00000424 l       .debug_frame   00000000 
d000aa76 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aac0 l       .text  00000000 
00000000 l    df *ABS*  00000000 ast.c
d000aac0 l       .text  00000000 
d000aac0 l       .text  00000000 
d000aac0 l       .text  00000000 
d000aac2 l       .text  00000000 
d000aac2 l       .text  00000000 
d000aac2 l       .text  00000000 
d000aac4 l       .text  00000000 
d000aac6 l       .text  00000000 
d000aac6 l       .text  00000000 
d000aace l       .text  00000000 
d000aace l       .text  00000000 
d000aad2 l       .text  00000000 
d000aad2 l       .text  00000000 
d000aad6 l       .text  00000000 
d000aada l       .text  00000000 
d000aae2 l       .text  00000000 
d000aae6 l       .text  00000000 
d000aaf4 l       .text  00000000 
d000aafc l       .text  00000000 
d000ab00 l       .text  00000000 
d000ab0e l       .text  00000000 
d000ab16 l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab2c l       .text  00000000 
d000ab30 l       .text  00000000 
d000ab3c l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab46 l       .text  00000000 
d000ab46 l       .text  00000000 
d000ab48 l       .text  00000000 
d000ab48 l       .text  00000000 
d000ab4c l       .text  00000000 
d000ab4c l       .text  00000000 
d000ab5a l       .text  00000000 
d000ab5a l       .text  00000000 
d000ab5e l       .text  00000000 
d000ab5e l       .text  00000000 
d000ab76 l       .text  00000000 
d000ab76 l       .text  00000000 
d000ab7a l       .text  00000000 
d000ab7a l       .text  00000000 
d000ab7c l       .text  00000000 
d000ab7c l       .text  00000000 
d000ab84 l       .text  00000000 
d000ab84 l       .text  00000000 
d000ab86 l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8c l       .text  00000000 
d000ab8c l       .text  00000000 
d000ab92 l       .text  00000000 
d000ab96 l       .text  00000000 
d000ab96 l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba6 l       .text  00000000 
d000aba8 l       .text  00000000 
d000abb4 l       .text  00000000 
d000abbc l       .text  00000000 
d000abc0 l       .text  00000000 
d000abcc l       .text  00000000 
d000abcc l       .text  00000000 
d000abd0 l       .text  00000000 
d000abd6 l       .text  00000000 
d000abd6 l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
00003fda l       .debug_loc     00000000 
0000400b l       .debug_loc     00000000 
00004031 l       .debug_loc     00000000 
00004057 l       .debug_loc     00000000 
00004072 l       .debug_loc     00000000 
000040a8 l       .debug_loc     00000000 
000040dc l       .debug_loc     00000000 
000040f7 l       .debug_loc     00000000 
00004112 l       .debug_loc     00000000 
0000413b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002bce l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000608 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002bfa l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00002c07 l       .debug_str     00000000 
00001611 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00000c22 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000279e l       .debug_str     00000000 
00002982 l       .debug_str     00000000 
00002c0b l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000004b4 l       .debug_frame   00000000 
d000abde l       .text  00000000 
00000000 l    df *ABS*  00000000 flash_ctrl.c
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abe0 l       .text  00000000 
d000abe8 l       .text  00000000 
d000abee l       .text  00000000 
d000abee l       .text  00000000 
d000abf0 l       .text  00000000 
d000abf0 l       .text  00000000 
d000abf8 l       .text  00000000 
d000abf8 l       .text  00000000 
d000abfc l       .text  00000000 
d000abfc l       .text  00000000 
d000ac00 l       .text  00000000 
d000ac04 l       .text  00000000 
d000ac04 l       .text  00000000 
d000ac06 l       .text  00000000 
d000ac06 l       .text  00000000 
d000ac0a l       .text  00000000 
d000ac0a l       .text  00000000 
d000ac12 l       .text  00000000 
d000ac14 l       .text  00000000 
d000ac14 l       .text  00000000 
d000ac1c l       .text  00000000 
d000ac1c l       .text  00000000 
d000ac20 l       .text  00000000 
d000ac20 l       .text  00000000 
d000ac24 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac2a l       .text  00000000 
d000ac2a l       .text  00000000 
d000ac2e l       .text  00000000 
d000ac2e l       .text  00000000 
d000ac40 l       .text  00000000 
d000ac40 l       .text  00000000 
d000ac52 l       .text  00000000 
d000ac52 l       .text  00000000 
d000ac54 l       .text  00000000 
d000ac56 l       .text  00000000 
d000ac58 l       .text  00000000 
d000ac5e l       .text  00000000 
d000ac5e l       .text  00000000 
d000ac5e l       .text  00000000 
d000ac5e l       .text  00000000 
d000ac5e l       .text  00000000 
d000ac60 l       .text  00000000 
d000ac66 l       .text  00000000 
d000ac68 l       .text  00000000 
d000ac70 l       .text  00000000 
d000ac76 l       .text  00000000 
d000ac76 l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac82 l       .text  00000000 
d000ac82 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac86 l       .text  00000000 
d000ac88 l       .text  00000000 
d000ac88 l       .text  00000000 
d000ac8a l       .text  00000000 
d000ac8a l       .text  00000000 
d000ac8c l       .text  00000000 
d000ac8e l       .text  00000000 
d000ac8e l       .text  00000000 
d000ac90 l       .text  00000000 
d000ac90 l       .text  00000000 
d000ac92 l       .text  00000000 
d000ac94 l       .text  00000000 
d000ac96 l       .text  00000000 
d000ac96 l       .text  00000000 
d000ac9c l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca4 l       .text  00000000 
d000aca6 l       .text  00000000 
d000acac l       .text  00000000 
d000acae l       .text  00000000 
d000b2d8 l     F .text  00000366 info_cfg_regs
d000acae l       .text  00000000 
d000acb0 l       .text  00000000 
d000acb2 l       .text  00000000 
d000acb2 l       .text  00000000 
d000acb8 l       .text  00000000 
d000acb8 l       .text  00000000 
d000acbc l       .text  00000000 
d000acc0 l       .text  00000000 
d000acc0 l       .text  00000000 
d000acc2 l       .text  00000000 
d000acc2 l       .text  00000000 
d000acc4 l       .text  00000000 
d000acc4 l       .text  00000000 
d000acc6 l       .text  00000000 
d000acc6 l       .text  00000000 
d000acc8 l       .text  00000000 
d000acc8 l       .text  00000000 
d000acca l       .text  00000000 
d000acca l       .text  00000000 
d000accc l       .text  00000000 
d000acce l       .text  00000000 
d000acce l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd2 l       .text  00000000 
d000acd2 l       .text  00000000 
d000acd4 l       .text  00000000 
d000acd4 l       .text  00000000 
d000acdc l       .text  00000000 
d000acdc l       .text  00000000 
d000ace0 l       .text  00000000 
d000ace2 l       .text  00000000 
d000acea l       .text  00000000 
d000acea l       .text  00000000 
d000acea l       .text  00000000 
d000acea l     F .text  0000007c transaction_start
d000acea l       .text  00000000 
d000acea l       .text  00000000 
d000acea l       .text  00000000 
d000acea l       .text  00000000 
d000acf0 l       .text  00000000 
d000acf0 l       .text  00000000 
d000acf2 l       .text  00000000 
d000acf2 l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf6 l       .text  00000000 
d000acf6 l       .text  00000000 
d000acf6 l       .text  00000000 
d000acfe l       .text  00000000 
d000acfe l       .text  00000000 
d000ad02 l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad14 l       .text  00000000 
d000ad1c l       .text  00000000 
d000ad20 l       .text  00000000 
d000ad32 l       .text  00000000 
d000ad32 l       .text  00000000 
d000ad34 l       .text  00000000 
d000ad36 l       .text  00000000 
d000ad36 l       .text  00000000 
d000ad38 l       .text  00000000 
d000ad3c l       .text  00000000 
d000ad3c l       .text  00000000 
d000ad3e l       .text  00000000 
d000ad3e l       .text  00000000 
d000ad40 l       .text  00000000 
d000ad40 l       .text  00000000 
d000ad44 l       .text  00000000 
d000ad48 l       .text  00000000 
d000ad48 l       .text  00000000 
d000ad4c l       .text  00000000 
d000ad4c l       .text  00000000 
d000ad4e l       .text  00000000 
d000ad4e l       .text  00000000 
d000ad50 l       .text  00000000 
d000ad50 l       .text  00000000 
d000ad56 l       .text  00000000 
d000ad56 l       .text  00000000 
d000ad5a l       .text  00000000 
d000ad5a l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad5e l       .text  00000000 
d000ad5e l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad68 l       .text  00000000 
d000ad70 l       .text  00000000 
d000ad72 l       .text  00000000 
d000ad74 l       .text  00000000 
d000ad76 l       .text  00000000 
d000add8 l     F .text  000002b8 info_page_addr
d000ad76 l       .text  00000000 
d000ad78 l       .text  00000000 
d000ad78 l       .text  00000000 
d000ad7a l       .text  00000000 
d000ad7a l       .text  00000000 
d000ad82 l       .text  00000000 
d000ad82 l       .text  00000000 
d000ad86 l       .text  00000000 
d000ad92 l       .text  00000000 
d000ad92 l       .text  00000000 
d000ad94 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad9c l       .text  00000000 
d000ad9c l       .text  00000000 
d000ad9e l       .text  00000000 
d000ad9e l       .text  00000000 
d000ada0 l       .text  00000000 
d000ada2 l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada8 l       .text  00000000 
d000ada8 l       .text  00000000 
d000adac l       .text  00000000 
d000adac l       .text  00000000 
d000adb0 l       .text  00000000 
d000adb0 l       .text  00000000 
d000adb2 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adba l       .text  00000000 
d000adba l       .text  00000000 
d000adc2 l       .text  00000000 
d000adc2 l       .text  00000000 
d000adc4 l       .text  00000000 
d000adcc l       .text  00000000 
d000adce l       .text  00000000 
d000add8 l       .text  00000000 
d000add8 l       .text  00000000 
d000add8 l       .text  00000000 
d000add8 l       .text  00000000 
d000add8 l       .text  00000000 
d000add8 l       .text  00000000 
d000adda l       .text  00000000 
d000adda l       .text  00000000 
d000ade2 l       .text  00000000 
d000ade2 l       .text  00000000 
d000ade6 l       .text  00000000 
d000ade6 l       .text  00000000 
d000adee l       .text  00000000 
d000adf2 l       .text  00000000 
d000adfa l       .text  00000000 
d000adfe l       .text  00000000 
d000ae02 l       .text  00000000 
d000ae06 l       .text  00000000 
d000ae0e l       .text  00000000 
d000ae12 l       .text  00000000 
d000ae12 l       .text  00000000 
d000ae12 l       .text  00000000 
d000ae12 l       .text  00000000 
d000ae22 l       .text  00000000 
d000ae22 l       .text  00000000 
d000ae2a l       .text  00000000 
d000ae2e l       .text  00000000 
d000ae36 l       .text  00000000 
d000ae3a l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae42 l       .text  00000000 
d000ae4a l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae5e l       .text  00000000 
d000ae5e l       .text  00000000 
d000ae66 l       .text  00000000 
d000ae6a l       .text  00000000 
d000ae6e l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae7a l       .text  00000000 
d000ae7e l       .text  00000000 
d000ae7e l       .text  00000000 
d000ae7e l       .text  00000000 
d000ae7e l       .text  00000000 
d000ae90 l       .text  00000000 
d000ae90 l       .text  00000000 
d000ae98 l       .text  00000000 
d000ae9c l       .text  00000000 
d000aea0 l       .text  00000000 
d000aea4 l       .text  00000000 
d000aeac l       .text  00000000 
d000aeb0 l       .text  00000000 
d000aeb0 l       .text  00000000 
d000aeb0 l       .text  00000000 
d000aeb0 l       .text  00000000 
d000aec0 l       .text  00000000 
d000aec0 l       .text  00000000 
d000aec8 l       .text  00000000 
d000aecc l       .text  00000000 
d000aece l       .text  00000000 
d000aece l       .text  00000000 
d000aece l       .text  00000000 
d000aece l       .text  00000000 
d000aedc l       .text  00000000 
d000aedc l       .text  00000000 
d000aee4 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aef8 l       .text  00000000 
d000aef8 l       .text  00000000 
d000af00 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af16 l       .text  00000000 
d000af16 l       .text  00000000 
d000af1e l       .text  00000000 
d000af22 l       .text  00000000 
d000af22 l       .text  00000000 
d000af22 l       .text  00000000 
d000af22 l       .text  00000000 
d000af34 l       .text  00000000 
d000af34 l       .text  00000000 
d000af34 l       .text  00000000 
d000af34 l       .text  00000000 
d000af3c l       .text  00000000 
d000af3c l       .text  00000000 
d000af4a l       .text  00000000 
d000af4c l       .text  00000000 
d000af4c l       .text  00000000 
d000af4c l       .text  00000000 
d000af4c l       .text  00000000 
d000af54 l       .text  00000000 
d000af54 l       .text  00000000 
d000af66 l       .text  00000000 
d000af66 l       .text  00000000 
d000af66 l       .text  00000000 
d000af66 l       .text  00000000 
d000af6e l       .text  00000000 
d000af6e l       .text  00000000 
d000af80 l       .text  00000000 
d000af80 l       .text  00000000 
d000af80 l       .text  00000000 
d000af80 l       .text  00000000 
d000af88 l       .text  00000000 
d000af88 l       .text  00000000 
d000af96 l       .text  00000000 
d000af98 l       .text  00000000 
d000afa0 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afbe l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afd2 l       .text  00000000 
d000afd2 l       .text  00000000 
d000afda l       .text  00000000 
d000afde l       .text  00000000 
d000afde l       .text  00000000 
d000afde l       .text  00000000 
d000afde l       .text  00000000 
d000aff0 l       .text  00000000 
d000aff0 l       .text  00000000 
d000aff8 l       .text  00000000 
d000affc l       .text  00000000 
d000affc l       .text  00000000 
d000affc l       .text  00000000 
d000affc l       .text  00000000 
d000b00e l       .text  00000000 
d000b00e l       .text  00000000 
d000b016 l       .text  00000000 
d000b01a l       .text  00000000 
d000b01a l       .text  00000000 
d000b01a l       .text  00000000 
d000b01a l       .text  00000000 
d000b02c l       .text  00000000 
d000b02c l       .text  00000000 
d000b034 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b048 l       .text  00000000 
d000b048 l       .text  00000000 
d000b050 l       .text  00000000 
d000b054 l       .text  00000000 
d000b054 l       .text  00000000 
d000b054 l       .text  00000000 
d000b054 l       .text  00000000 
d000b064 l       .text  00000000 
d000b064 l       .text  00000000 
d000b06c l       .text  00000000 
d000b070 l       .text  00000000 
d000b070 l       .text  00000000 
d000b070 l       .text  00000000 
d000b070 l       .text  00000000 
d000b080 l       .text  00000000 
d000b084 l       .text  00000000 
d000b088 l       .text  00000000 
d000b088 l       .text  00000000 
d000b090 l       .text  00000000 
d000b090 l       .text  00000000 
d000b090 l       .text  00000000 
d000b090 l       .text  00000000 
d000b090 l       .text  00000000 
d000b09a l       .text  00000000 
d000b09c l       .text  00000000 
d000b09c l       .text  00000000 
d000b0a0 l     F .text  000000ae write
d000b0a0 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b0a2 l       .text  00000000 
d000b0a2 l       .text  00000000 
d000b0b6 l       .text  00000000 
d000b0b6 l       .text  00000000 
d000b0b8 l       .text  00000000 
d000b0ba l       .text  00000000 
d000b0bc l       .text  00000000 
d000b0be l       .text  00000000 
d000b0c0 l       .text  00000000 
d000b0c2 l       .text  00000000 
d000b0c4 l       .text  00000000 
d000b0c4 l       .text  00000000 
d000b0c6 l       .text  00000000 
d000b0c6 l       .text  00000000 
d000b0c8 l       .text  00000000 
d000b0cc l       .text  00000000 
d000b0cc l       .text  00000000 
d000b0da l       .text  00000000 
d000b0dc l       .text  00000000 
d000b0e0 l       .text  00000000 
d000b0e2 l       .text  00000000 
d000b0e2 l       .text  00000000 
d000b0f0 l       .text  00000000 
d000b0f0 l       .text  00000000 
d000b0f4 l       .text  00000000 
d000b0f4 l       .text  00000000 
d000b0f6 l       .text  00000000 
d000b0f6 l       .text  00000000 
d000b0fa l       .text  00000000 
d000b0fa l       .text  00000000 
d000b0fc l       .text  00000000 
d000b0fe l       .text  00000000 
d000b100 l       .text  00000000 
d000b100 l       .text  00000000 
d000b104 l       .text  00000000 
d000b104 l       .text  00000000 
d000b108 l       .text  00000000 
d000b108 l       .text  00000000 
d000b10a l       .text  00000000 
d000b10a l       .text  00000000 
d000b10e l       .text  00000000 
d000b10e l       .text  00000000 
d000b11a l       .text  00000000 
d000b11a l       .text  00000000 
d000b11c l       .text  00000000 
d000b122 l       .text  00000000 
d000b126 l       .text  00000000 
d000b128 l       .text  00000000 
d000b12a l       .text  00000000 
d000b12e l       .text  00000000 
d000b130 l       .text  00000000 
d000b130 l       .text  00000000 
d000b132 l       .text  00000000 
d000b132 l       .text  00000000 
d000b136 l       .text  00000000 
d000b14e l       .text  00000000 
d000b14e l       .text  00000000 
d000b14e l       .text  00000000 
d000b14e l       .text  00000000 
d000b14e l       .text  00000000 
d000b150 l       .text  00000000 
d000b150 l       .text  00000000 
d000b152 l       .text  00000000 
d000b156 l       .text  00000000 
d000b164 l       .text  00000000 
d000b164 l       .text  00000000 
d000b168 l       .text  00000000 
d000b168 l       .text  00000000 
d000b16c l       .text  00000000 
d000b16c l       .text  00000000 
d000b170 l       .text  00000000 
d000b170 l       .text  00000000 
d000b172 l       .text  00000000 
d000b176 l       .text  00000000 
d000b176 l       .text  00000000 
d000b17a l       .text  00000000 
d000b17a l       .text  00000000 
d000b182 l       .text  00000000 
d000b182 l       .text  00000000 
d000b184 l       .text  00000000 
d000b18c l       .text  00000000 
d000b192 l       .text  00000000 
d000b192 l       .text  00000000 
d000b192 l       .text  00000000 
d000b192 l       .text  00000000 
d000b192 l       .text  00000000 
d000b192 l       .text  00000000 
d000b194 l       .text  00000000 
d000b194 l       .text  00000000 
d000b19c l       .text  00000000 
d000b19c l       .text  00000000 
d000b1a0 l       .text  00000000 
d000b1a0 l       .text  00000000 
d000b1b0 l       .text  00000000 
d000b1b0 l       .text  00000000 
d000b1b6 l       .text  00000000 
d000b1b8 l       .text  00000000 
d000b1c0 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1d8 l       .text  00000000 
d000b1d8 l       .text  00000000 
d000b1da l       .text  00000000 
d000b1da l       .text  00000000 
d000b1dc l       .text  00000000 
d000b1dc l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e8 l       .text  00000000 
d000b1ec l       .text  00000000 
d000b1f0 l       .text  00000000 
d000b1f0 l       .text  00000000 
d000b1f4 l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1f8 l       .text  00000000 
d000b1f8 l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fc l       .text  00000000 
d000b1fc l       .text  00000000 
d000b1fe l       .text  00000000 
d000b1fe l       .text  00000000 
d000b204 l       .text  00000000 
d000b204 l       .text  00000000 
d000b208 l       .text  00000000 
d000b208 l       .text  00000000 
d000b214 l       .text  00000000 
d000b214 l       .text  00000000 
d000b216 l       .text  00000000 
d000b216 l       .text  00000000 
d000b21a l       .text  00000000 
d000b21a l       .text  00000000 
d000b222 l       .text  00000000 
d000b224 l       .text  00000000 
d000b226 l       .text  00000000 
d000b232 l       .text  00000000 
d000b236 l       .text  00000000 
d000b238 l       .text  00000000 
d000b23a l       .text  00000000 
d000b23a l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b24a l       .text  00000000 
d000b24a l       .text  00000000 
d000b24e l       .text  00000000 
d000b252 l       .text  00000000 
d000b252 l       .text  00000000 
d000b252 l       .text  00000000 
d000b252 l       .text  00000000 
d000b252 l       .text  00000000 
d000b252 l       .text  00000000 
d000b254 l       .text  00000000 
d000b25a l       .text  00000000 
d000b25c l       .text  00000000 
d000b264 l       .text  00000000 
d000b26a l       .text  00000000 
d000b26a l       .text  00000000 
d000b26e l       .text  00000000 
d000b26e l       .text  00000000 
d000b270 l       .text  00000000 
d000b270 l       .text  00000000 
d000b272 l       .text  00000000 
d000b272 l       .text  00000000 
d000b274 l       .text  00000000 
d000b276 l       .text  00000000 
d000b276 l       .text  00000000 
d000b278 l       .text  00000000 
d000b278 l       .text  00000000 
d000b27a l       .text  00000000 
d000b27e l       .text  00000000 
d000b280 l       .text  00000000 
d000b280 l       .text  00000000 
d000b282 l       .text  00000000 
d000b284 l       .text  00000000 
d000b286 l       .text  00000000 
d000b286 l       .text  00000000 
d000b28c l       .text  00000000 
d000b294 l       .text  00000000 
d000b294 l       .text  00000000 
d000b294 l       .text  00000000 
d000b294 l       .text  00000000 
d000b294 l       .text  00000000 
d000b294 l       .text  00000000 
d000b296 l       .text  00000000 
d000b29c l       .text  00000000 
d000b29e l       .text  00000000 
d000b29e l       .text  00000000 
d000b2a0 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a8 l       .text  00000000 
d000b2a8 l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2ae l       .text  00000000 
d000b2ae l       .text  00000000 
d000b2b0 l       .text  00000000 
d000b2b0 l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2b4 l       .text  00000000 
d000b2b4 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2ba l       .text  00000000 
d000b2bc l       .text  00000000 
d000b2bc l       .text  00000000 
d000b2be l       .text  00000000 
d000b2c0 l       .text  00000000 
d000b2c0 l       .text  00000000 
d000b2c2 l       .text  00000000 
d000b2c2 l       .text  00000000 
d000b2ca l       .text  00000000 
d000b2ca l       .text  00000000 
d000b2ce l       .text  00000000 
d000b2d0 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b2da l       .text  00000000 
d000b2da l       .text  00000000 
d000b2e2 l       .text  00000000 
d000b2e2 l       .text  00000000 
d000b2e6 l       .text  00000000 
d000b2e6 l       .text  00000000 
d000b2ee l       .text  00000000 
d000b2f2 l       .text  00000000 
d000b2fa l       .text  00000000 
d000b2fe l       .text  00000000 
d000b302 l       .text  00000000 
d000b306 l       .text  00000000 
d000b30e l       .text  00000000 
d000b312 l       .text  00000000 
d000b312 l       .text  00000000 
d000b312 l       .text  00000000 
d000b312 l       .text  00000000 
d000b32a l       .text  00000000 
d000b32c l       .text  00000000 
d000b32c l       .text  00000000 
d000b334 l       .text  00000000 
d000b338 l       .text  00000000 
d000b340 l       .text  00000000 
d000b344 l       .text  00000000 
d000b348 l       .text  00000000 
d000b34c l       .text  00000000 
d000b354 l       .text  00000000 
d000b358 l       .text  00000000 
d000b358 l       .text  00000000 
d000b358 l       .text  00000000 
d000b358 l       .text  00000000 
d000b370 l       .text  00000000 
d000b372 l       .text  00000000 
d000b372 l       .text  00000000 
d000b37a l       .text  00000000 
d000b37e l       .text  00000000 
d000b382 l       .text  00000000 
d000b386 l       .text  00000000 
d000b38e l       .text  00000000 
d000b392 l       .text  00000000 
d000b392 l       .text  00000000 
d000b392 l       .text  00000000 
d000b392 l       .text  00000000 
d000b3aa l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3b4 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3c0 l       .text  00000000 
d000b3c8 l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3e4 l       .text  00000000 
d000b3e6 l       .text  00000000 
d000b3e6 l       .text  00000000 
d000b3ee l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b40a l       .text  00000000 
d000b40c l       .text  00000000 
d000b40c l       .text  00000000 
d000b414 l       .text  00000000 
d000b418 l       .text  00000000 
d000b418 l       .text  00000000 
d000b418 l       .text  00000000 
d000b418 l       .text  00000000 
d000b430 l       .text  00000000 
d000b432 l       .text  00000000 
d000b432 l       .text  00000000 
d000b43a l       .text  00000000 
d000b43e l       .text  00000000 
d000b43e l       .text  00000000 
d000b43e l       .text  00000000 
d000b43e l       .text  00000000 
d000b456 l       .text  00000000 
d000b458 l       .text  00000000 
d000b458 l       .text  00000000 
d000b460 l       .text  00000000 
d000b464 l       .text  00000000 
d000b464 l       .text  00000000 
d000b464 l       .text  00000000 
d000b464 l       .text  00000000 
d000b47c l       .text  00000000 
d000b47e l       .text  00000000 
d000b47e l       .text  00000000 
d000b47e l       .text  00000000 
d000b47e l       .text  00000000 
d000b486 l       .text  00000000 
d000b486 l       .text  00000000 
d000b496 l       .text  00000000 
d000b49e l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a8 l       .text  00000000 
d000b4a8 l       .text  00000000 
d000b4b8 l       .text  00000000 
d000b4c0 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4ca l       .text  00000000 
d000b4ca l       .text  00000000 
d000b4da l       .text  00000000 
d000b4e2 l       .text  00000000 
d000b4e4 l       .text  00000000 
d000b4e4 l       .text  00000000 
d000b4e4 l       .text  00000000 
d000b4e4 l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4fc l       .text  00000000 
d000b504 l       .text  00000000 
d000b506 l       .text  00000000 
d000b506 l       .text  00000000 
d000b50e l       .text  00000000 
d000b512 l       .text  00000000 
d000b512 l       .text  00000000 
d000b512 l       .text  00000000 
d000b512 l       .text  00000000 
d000b52a l       .text  00000000 
d000b52c l       .text  00000000 
d000b52c l       .text  00000000 
d000b534 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b550 l       .text  00000000 
d000b552 l       .text  00000000 
d000b552 l       .text  00000000 
d000b55a l       .text  00000000 
d000b55e l       .text  00000000 
d000b55e l       .text  00000000 
d000b55e l       .text  00000000 
d000b55e l       .text  00000000 
d000b576 l       .text  00000000 
d000b578 l       .text  00000000 
d000b578 l       .text  00000000 
d000b580 l       .text  00000000 
d000b584 l       .text  00000000 
d000b584 l       .text  00000000 
d000b584 l       .text  00000000 
d000b584 l       .text  00000000 
d000b59c l       .text  00000000 
d000b59e l       .text  00000000 
d000b59e l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5c2 l       .text  00000000 
d000b5c4 l       .text  00000000 
d000b5c4 l       .text  00000000 
d000b5cc l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5e8 l       .text  00000000 
d000b5ea l       .text  00000000 
d000b5ea l       .text  00000000 
d000b5f2 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b60e l       .text  00000000 
d000b610 l       .text  00000000 
d000b610 l       .text  00000000 
d000b618 l       .text  00000000 
d000b61c l       .text  00000000 
d000b61c l       .text  00000000 
d000b61c l       .text  00000000 
d000b61c l       .text  00000000 
d000b634 l       .text  00000000 
d000b636 l       .text  00000000 
d000b636 l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b640 l       .text  00000000 
d000b640 l       .text  00000000 
d000b644 l       .text  00000000 
d000b644 l       .text  00000000 
d000b648 l       .text  00000000 
d000b648 l       .text  00000000 
d000b64a l       .text  00000000 
d000b656 l       .text  00000000 
d000b656 l       .text  00000000 
d000b658 l       .text  00000000 
d000b65c l       .text  00000000 
d000b660 l       .text  00000000 
d000b66e l       .text  00000000 
d000b66e l       .text  00000000 
d000b672 l       .text  00000000 
d000b676 l       .text  00000000 
d000b67a l       .text  00000000 
d000b67a l       .text  00000000 
d000b682 l       .text  00000000 
d000b682 l       .text  00000000 
00004156 l       .debug_loc     00000000 
0000417a l       .debug_loc     00000000 
000041a0 l       .debug_loc     00000000 
000041c4 l       .debug_loc     00000000 
00004214 l       .debug_loc     00000000 
00004238 l       .debug_loc     00000000 
00004253 l       .debug_loc     00000000 
00004277 l       .debug_loc     00000000 
0000429b l       .debug_loc     00000000 
000042fc l       .debug_loc     00000000 
00004320 l       .debug_loc     00000000 
0000433b l       .debug_loc     00000000 
00004363 l       .debug_loc     00000000 
00004399 l       .debug_loc     00000000 
000043b4 l       .debug_loc     00000000 
000043d6 l       .debug_loc     00000000 
000043ff l       .debug_loc     00000000 
0000441f l       .debug_loc     00000000 
00004441 l       .debug_loc     00000000 
0000445c l       .debug_loc     00000000 
0000447e l       .debug_loc     00000000 
00004499 l       .debug_loc     00000000 
000044b4 l       .debug_loc     00000000 
000044dc l       .debug_loc     00000000 
000044f7 l       .debug_loc     00000000 
0000453f l       .debug_loc     00000000 
00004561 l       .debug_loc     00000000 
00004583 l       .debug_loc     00000000 
0000459e l       .debug_loc     00000000 
000045b9 l       .debug_loc     00000000 
000045db l       .debug_loc     00000000 
000045fd l       .debug_loc     00000000 
00004618 l       .debug_loc     00000000 
0000463a l       .debug_loc     00000000 
00004655 l       .debug_loc     00000000 
00004670 l       .debug_loc     00000000 
0000468b l       .debug_loc     00000000 
000046b1 l       .debug_loc     00000000 
000046d7 l       .debug_loc     00000000 
000046f3 l       .debug_loc     00000000 
0000470e l       .debug_loc     00000000 
00004729 l       .debug_loc     00000000 
00004744 l       .debug_loc     00000000 
0000476c l       .debug_loc     00000000 
000047ac l       .debug_loc     00000000 
000047de l       .debug_loc     00000000 
00004805 l       .debug_loc     00000000 
00004820 l       .debug_loc     00000000 
0000483c l       .debug_loc     00000000 
0000485e l       .debug_loc     00000000 
00004879 l       .debug_loc     00000000 
00004898 l       .debug_loc     00000000 
000048ba l       .debug_loc     00000000 
000048de l       .debug_loc     00000000 
000048fc l       .debug_loc     00000000 
0000491e l       .debug_loc     00000000 
00004940 l       .debug_loc     00000000 
0000495b l       .debug_loc     00000000 
00004981 l       .debug_loc     00000000 
000049a7 l       .debug_loc     00000000 
000049cd l       .debug_loc     00000000 
000049e8 l       .debug_loc     00000000 
00004a04 l       .debug_loc     00000000 
00004a1f l       .debug_loc     00000000 
00004a3a l       .debug_loc     00000000 
00004a55 l       .debug_loc     00000000 
00004b4c l       .debug_loc     00000000 
00004b72 l       .debug_loc     00000000 
00004b98 l       .debug_loc     00000000 
00004bbe l       .debug_loc     00000000 
00004bd9 l       .debug_loc     00000000 
00004bff l       .debug_loc     00000000 
00004c25 l       .debug_loc     00000000 
00004c40 l       .debug_loc     00000000 
00004c66 l       .debug_loc     00000000 
00004cb8 l       .debug_loc     00000000 
00004cd3 l       .debug_loc     00000000 
00004cee l       .debug_loc     00000000 
00004d14 l       .debug_loc     00000000 
00004d45 l       .debug_loc     00000000 
00004d76 l       .debug_loc     00000000 
00004d91 l       .debug_loc     00000000 
00004dac l       .debug_loc     00000000 
00004dc7 l       .debug_loc     00000000 
00004de2 l       .debug_loc     00000000 
00004e13 l       .debug_loc     00000000 
00004e44 l       .debug_loc     00000000 
00004e6a l       .debug_loc     00000000 
00004ec3 l       .debug_loc     00000000 
00004eec l       .debug_loc     00000000 
00004f21 l       .debug_loc     00000000 
00004f54 l       .debug_loc     00000000 
00004f91 l       .debug_loc     00000000 
00004fac l       .debug_loc     00000000 
00004fd2 l       .debug_loc     00000000 
00004fed l       .debug_loc     00000000 
00005013 l       .debug_loc     00000000 
0000502e l       .debug_loc     00000000 
00005049 l       .debug_loc     00000000 
0000507a l       .debug_loc     00000000 
000050a2 l       .debug_loc     00000000 
000050c8 l       .debug_loc     00000000 
000050ea l       .debug_loc     00000000 
00005113 l       .debug_loc     00000000 
0000512e l       .debug_loc     00000000 
00005150 l       .debug_loc     00000000 
0000516b l       .debug_loc     00000000 
0000518d l       .debug_loc     00000000 
000051a8 l       .debug_loc     00000000 
000051c3 l       .debug_loc     00000000 
000051eb l       .debug_loc     00000000 
00005206 l       .debug_loc     00000000 
0000524e l       .debug_loc     00000000 
00005270 l       .debug_loc     00000000 
00005292 l       .debug_loc     00000000 
000052ad l       .debug_loc     00000000 
000052c8 l       .debug_loc     00000000 
000052ea l       .debug_loc     00000000 
00005305 l       .debug_loc     00000000 
00005327 l       .debug_loc     00000000 
00005342 l       .debug_loc     00000000 
00005439 l       .debug_loc     00000000 
0000545f l       .debug_loc     00000000 
00005485 l       .debug_loc     00000000 
000054ab l       .debug_loc     00000000 
000054d2 l       .debug_loc     00000000 
00005511 l       .debug_loc     00000000 
0000552c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002c15 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000760 l       .debug_ranges  00000000 
00002c48 l       .debug_str     00000000 
000015f1 l       .debug_str     00000000 
000015dc l       .debug_str     00000000 
00001358 l       .debug_str     00000000 
00001374 l       .debug_str     00000000 
00001394 l       .debug_str     00000000 
000013b2 l       .debug_str     00000000 
000013d4 l       .debug_str     00000000 
000013f6 l       .debug_str     00000000 
00001418 l       .debug_str     00000000 
00001439 l       .debug_str     00000000 
0000145a l       .debug_str     00000000 
0000147b l       .debug_str     00000000 
0000149c l       .debug_str     00000000 
000014b8 l       .debug_str     00000000 
000014d4 l       .debug_str     00000000 
000014f1 l       .debug_str     00000000 
0000150e l       .debug_str     00000000 
00001530 l       .debug_str     00000000 
00001552 l       .debug_str     00000000 
00001577 l       .debug_str     00000000 
00001596 l       .debug_str     00000000 
000015b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
000017f9 l       .debug_str     00000000 
000017c9 l       .debug_str     00000000 
000017e1 l       .debug_str     00000000 
00002cc3 l       .debug_str     00000000 
00002c60 l       .debug_str     00000000 
00002c78 l       .debug_str     00000000 
00002c91 l       .debug_str     00000000 
00002caa l       .debug_str     00000000 
00001781 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00000b3d l       .debug_str     00000000 
00002cd8 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002cce l       .debug_str     00000000 
00002078 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00002f64 l       .debug_str     00000000 
0000131a l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00000bfe l       .debug_str     00000000 
00002e30 l       .debug_str     00000000 
00002e38 l       .debug_str     00000000 
00002e7b l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00002d85 l       .debug_str     00000000 
00002e85 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00000620 l       .debug_ranges  00000000 
00002da5 l       .debug_str     00000000 
000015e7 l       .debug_str     00000000 
00002d5e l       .debug_str     00000000 
00000638 l       .debug_ranges  00000000 
00000650 l       .debug_ranges  00000000 
00000668 l       .debug_ranges  00000000 
00000b2c l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
00002d67 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002dbd l       .debug_str     00000000 
00002ee1 l       .debug_str     00000000 
00002ede l       .debug_str     00000000 
00002d0a l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
0000238c l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
000065e9 l       .debug_str     00000000 
00002d14 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00002dd3 l       .debug_str     00000000 
00002de8 l       .debug_str     00000000 
00002f2b l       .debug_str     00000000 
00002f47 l       .debug_str     00000000 
00002f52 l       .debug_str     00000000 
00002f5c l       .debug_str     00000000 
00000680 l       .debug_ranges  00000000 
00000698 l       .debug_ranges  00000000 
000006b0 l       .debug_ranges  00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000010a8 l       .debug_str     00000000 
000019d7 l       .debug_str     00000000 
00006a94 l       .debug_str     00000000 
00002dfa l       .debug_str     00000000 
00001f50 l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
00002d1e l       .debug_str     00000000 
00001a07 l       .debug_str     00000000 
00001eff l       .debug_str     00000000 
00001804 l       .debug_str     00000000 
00001f15 l       .debug_str     00000000 
00001d95 l       .debug_str     00000000 
000006c8 l       .debug_ranges  00000000 
000006e0 l       .debug_ranges  00000000 
0000129f l       .debug_str     00000000 
00001a40 l       .debug_str     00000000 
000011a7 l       .debug_str     00000000 
00002f76 l       .debug_str     00000000 
00001edd l       .debug_str     00000000 
000019d1 l       .debug_str     00000000 
00000700 l       .debug_ranges  00000000 
0000199b l       .debug_str     00000000 
00000718 l       .debug_ranges  00000000 
00000730 l       .debug_ranges  00000000 
00000748 l       .debug_ranges  00000000 
00001f73 l       .debug_str     00000000 
00002b4e l       .debug_str     00000000 
00002d29 l       .debug_str     00000000 
00002d43 l       .debug_str     00000000 
00002b11 l       .debug_str     00000000 
00002d75 l       .debug_str     00000000 
00002d51 l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00002e6a l       .debug_str     00000000 
00002e5b l       .debug_str     00000000 
00002e49 l       .debug_str     00000000 
00002e54 l       .debug_str     00000000 
00002e58 l       .debug_str     00000000 
000019b5 l       .debug_str     00000000 
00002eca l       .debug_str     00000000 
00002eb8 l       .debug_str     00000000 
00002e89 l       .debug_str     00000000 
00002e91 l       .debug_str     00000000 
00002e9a l       .debug_str     00000000 
00002ea4 l       .debug_str     00000000 
00002eaf l       .debug_str     00000000 
00002f32 l       .debug_str     00000000 
00002f1f l       .debug_str     00000000 
00002ee8 l       .debug_str     00000000 
00002ef0 l       .debug_str     00000000 
00002f08 l       .debug_str     00000000 
00002f7f l       .debug_str     00000000 
000019c6 l       .debug_str     00000000 
00002387 l       .debug_str     00000000 
00001f0f l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
000004f0 l       .debug_frame   00000000 
d000ac5e l       .text  00000000 
d000aca4 l       .text  00000000 
d000acea l       .text  00000000 
d000ad66 l       .text  00000000 
d000add8 l       .text  00000000 
d000b090 l       .text  00000000 
d000b0a0 l       .text  00000000 
d000b14e l       .text  00000000 
d000b192 l       .text  00000000 
d000b242 l       .text  00000000 
d000b252 l       .text  00000000 
d000b294 l       .text  00000000 
d000b2d8 l       .text  00000000 
d000b63e l       .text  00000000 
d000b682 l       .text  00000000 
00000000 l    df *ABS*  00000000 ibex.c
d000b682 l       .text  00000000 
d000b682 l       .text  00000000 
d000b682 l       .text  00000000 
d000b684 l       .text  00000000 
d000b68c l       .text  00000000 
d000b68e l       .text  00000000 
d000b68e l       .text  00000000 
d000b692 l       .text  00000000 
d000b694 l       .text  00000000 
d000b698 l       .text  00000000 
d000b698 l       .text  00000000 
d000b6a0 l       .text  00000000 
d000b6a0 l       .text  00000000 
d000b6a6 l       .text  00000000 
d000b6a6 l       .text  00000000 
d000b6aa l       .text  00000000 
d000b6b0 l       .text  00000000 
d000b6b0 l       .text  00000000 
d000b6b4 l       .text  00000000 
d000b6ba l       .text  00000000 
d000b6ba l       .text  00000000 
d000b6be l       .text  00000000 
d000b6c4 l       .text  00000000 
d000b6c4 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6ce l       .text  00000000 
d000b6ce l       .text  00000000 
d000b6d2 l       .text  00000000 
d000b6d8 l       .text  00000000 
d000b6d8 l       .text  00000000 
d000b6dc l       .text  00000000 
d000b6dc l       .text  00000000 
d000b6de l       .text  00000000 
d000b6e0 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
00005566 l       .debug_loc     00000000 
00005581 l       .debug_loc     00000000 
000055a7 l       .debug_loc     00000000 
000055c2 l       .debug_loc     00000000 
000055dd l       .debug_loc     00000000 
000055f8 l       .debug_loc     00000000 
0000561e l       .debug_loc     00000000 
00005639 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002f92 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000808 l       .debug_ranges  00000000 
00002120 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002fd1 l       .debug_str     00000000 
00002fbf l       .debug_str     00000000 
00001128 l       .debug_str     00000000 
00002ff9 l       .debug_str     00000000 
00003007 l       .debug_str     00000000 
0000683e l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
00002fe3 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
000006dc l       .debug_frame   00000000 
d000b6e8 l       .text  00000000 
00000000 l    df *ABS*  00000000 keymgr.c
d000b6e8 l     F .text  0000005e expected_state_check
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6f2 l       .text  00000000 
d000b6f4 l       .text  00000000 
d000b6fa l       .text  00000000 
d000b6fa l       .text  00000000 
d000b6fe l       .text  00000000 
d000b6fe l       .text  00000000 
d000b702 l       .text  00000000 
d000b702 l       .text  00000000 
d000b706 l       .text  00000000 
d000b706 l       .text  00000000 
d000b70a l       .text  00000000 
d000b70a l       .text  00000000 
d000b70e l       .text  00000000 
d000b712 l       .text  00000000 
d000b712 l       .text  00000000 
d000b716 l       .text  00000000 
d000b716 l       .text  00000000 
d000b71e l       .text  00000000 
d000b71e l       .text  00000000 
d000b722 l       .text  00000000 
d000b722 l       .text  00000000 
d000b72a l       .text  00000000 
d000b72a l       .text  00000000 
d000b732 l       .text  00000000 
d000b73a l       .text  00000000 
d000b73c l       .text  00000000 
d000b73e l       .text  00000000 
d000b740 l       .text  00000000 
d000b746 l       .text  00000000 
d000b746 l       .text  00000000 
d000b746 l       .text  00000000 
d000b746 l       .text  00000000 
d000b746 l       .text  00000000 
d000b748 l       .text  00000000 
d000b754 l       .text  00000000 
d000b756 l       .text  00000000 
d000b758 l       .text  00000000 
d000b766 l       .text  00000000 
d000b766 l       .text  00000000 
d000b770 l       .text  00000000 
d000b774 l       .text  00000000 
d000b774 l       .text  00000000 
d000b776 l       .text  00000000 
d000b776 l       .text  00000000 
d000b77a l       .text  00000000 
d000b77a l       .text  00000000 
d000b780 l       .text  00000000 
d000b780 l       .text  00000000 
d000b78e l       .text  00000000 
d000b792 l       .text  00000000 
d000b792 l       .text  00000000 
d000b794 l       .text  00000000 
d000b794 l       .text  00000000 
d000b798 l       .text  00000000 
d000b798 l       .text  00000000 
d000b7a0 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7b6 l       .text  00000000 
d000b7ba l       .text  00000000 
d000b7bc l       .text  00000000 
d000b7c4 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7cc l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
00005654 l       .debug_loc     00000000 
0000567a l       .debug_loc     00000000 
00005695 l       .debug_loc     00000000 
000056b0 l       .debug_loc     00000000 
000056d6 l       .debug_loc     00000000 
000056f1 l       .debug_loc     00000000 
0000570c l       .debug_loc     00000000 
00005727 l       .debug_loc     00000000 
00005742 l       .debug_loc     00000000 
00005768 l       .debug_loc     00000000 
0000578e l       .debug_loc     00000000 
000057c1 l       .debug_loc     00000000 
000057f4 l       .debug_loc     00000000 
0000581a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003012 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000828 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
0000094d l       .debug_str     00000000 
0000095f l       .debug_str     00000000 
00000970 l       .debug_str     00000000 
0000098b l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c1 l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ea l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00003041 l       .debug_str     00000000 
000030b2 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
0000131a l       .debug_str     00000000 
0000304d l       .debug_str     00000000 
000030ca l       .debug_str     00000000 
00002d14 l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
000030e9 l       .debug_str     00000000 
000030f4 l       .debug_str     00000000 
00002d29 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
000010f7 l       .debug_str     00000000 
000030fe l       .debug_str     00000000 
00003114 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
00003062 l       .debug_str     00000000 
0000110d l       .debug_str     00000000 
0000312e l       .debug_str     00000000 
00003080 l       .debug_str     00000000 
000029da l       .debug_str     00000000 
0000309d l       .debug_str     00000000 
000010e4 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00002353 l       .debug_str     00000000 
00002344 l       .debug_str     00000000 
00000ab3 l       .debug_str     00000000 
00000a9e l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
0000313a l       .debug_str     00000000 
00000738 l       .debug_frame   00000000 
d000b746 l       .text  00000000 
d000b7b4 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7da l       .text  00000000 
00000000 l    df *ABS*  00000000 pinmux.c
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7dc l       .text  00000000 
d000b7dc l       .text  00000000 
d000b7de l       .text  00000000 
d000b7e6 l       .text  00000000 
d000b7e6 l       .text  00000000 
d000b7e8 l       .text  00000000 
d000b7e8 l       .text  00000000 
d000b7ec l       .text  00000000 
d000b7ec l       .text  00000000 
d000b7f0 l       .text  00000000 
d000b7f0 l       .text  00000000 
d000b800 l       .text  00000000 
d000b800 l       .text  00000000 
d000b802 l       .text  00000000 
d000b802 l       .text  00000000 
d000b806 l       .text  00000000 
d000b806 l       .text  00000000 
d000b80a l       .text  00000000 
d000b80a l       .text  00000000 
d000b810 l       .text  00000000 
d000b810 l       .text  00000000 
d000b816 l       .text  00000000 
d000b816 l       .text  00000000 
d000b820 l       .text  00000000 
d000b820 l       .text  00000000 
d000b822 l       .text  00000000 
d000b822 l       .text  00000000 
d000b828 l       .text  00000000 
d000b828 l       .text  00000000 
d000b830 l       .text  00000000 
d000b830 l       .text  00000000 
d000b834 l       .text  00000000 
d000b834 l       .text  00000000 
d000b83a l       .text  00000000 
d000b83a l       .text  00000000 
00005840 l       .debug_loc     00000000 
0000585e l       .debug_loc     00000000 
00005871 l       .debug_loc     00000000 
0000588b l       .debug_loc     00000000 
000058a5 l       .debug_loc     00000000 
000058bf l       .debug_loc     00000000 
000058da l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003149 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003178 l       .debug_str     00000000 
0000462e l       .debug_str     00000000 
00004621 l       .debug_str     00000000 
00003187 l       .debug_str     00000000 
000040df l       .debug_str     00000000 
00004101 l       .debug_str     00000000 
00003b16 l       .debug_str     00000000 
00003af4 l       .debug_str     00000000 
0000318e l       .debug_str     00000000 
000031b6 l       .debug_str     00000000 
000031de l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
0000322e l       .debug_str     00000000 
00003256 l       .debug_str     00000000 
0000327e l       .debug_str     00000000 
000032a6 l       .debug_str     00000000 
000032ce l       .debug_str     00000000 
000032f6 l       .debug_str     00000000 
0000331e l       .debug_str     00000000 
00003347 l       .debug_str     00000000 
00003370 l       .debug_str     00000000 
00003399 l       .debug_str     00000000 
000033c2 l       .debug_str     00000000 
000033eb l       .debug_str     00000000 
00003414 l       .debug_str     00000000 
0000343d l       .debug_str     00000000 
00003466 l       .debug_str     00000000 
0000348f l       .debug_str     00000000 
000034b8 l       .debug_str     00000000 
000034e1 l       .debug_str     00000000 
0000350a l       .debug_str     00000000 
00003533 l       .debug_str     00000000 
0000355c l       .debug_str     00000000 
00003585 l       .debug_str     00000000 
000035ae l       .debug_str     00000000 
000035d7 l       .debug_str     00000000 
00003600 l       .debug_str     00000000 
00003629 l       .debug_str     00000000 
00003652 l       .debug_str     00000000 
0000367b l       .debug_str     00000000 
000036a4 l       .debug_str     00000000 
000036ca l       .debug_str     00000000 
000036f0 l       .debug_str     00000000 
00003716 l       .debug_str     00000000 
0000373c l       .debug_str     00000000 
00003762 l       .debug_str     00000000 
00003788 l       .debug_str     00000000 
000037b2 l       .debug_str     00000000 
000037dc l       .debug_str     00000000 
00003806 l       .debug_str     00000000 
00003830 l       .debug_str     00000000 
00003856 l       .debug_str     00000000 
0000387c l       .debug_str     00000000 
000038a2 l       .debug_str     00000000 
000038c8 l       .debug_str     00000000 
000038f6 l       .debug_str     00000000 
00003921 l       .debug_str     00000000 
0000394c l       .debug_str     00000000 
00003977 l       .debug_str     00000000 
000039ac l       .debug_str     00000000 
000039de l       .debug_str     00000000 
00003a10 l       .debug_str     00000000 
00003a42 l       .debug_str     00000000 
00003a74 l       .debug_str     00000000 
00003aa7 l       .debug_str     00000000 
00003ad1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000040e5 l       .debug_str     00000000 
000040cb l       .debug_str     00000000 
00003b3a l       .debug_str     00000000 
00003b5e l       .debug_str     00000000 
00003b81 l       .debug_str     00000000 
00003b9d l       .debug_str     00000000 
00003bb9 l       .debug_str     00000000 
00003bd5 l       .debug_str     00000000 
00003bf1 l       .debug_str     00000000 
00003c0d l       .debug_str     00000000 
00003c29 l       .debug_str     00000000 
00003c45 l       .debug_str     00000000 
00003c61 l       .debug_str     00000000 
00003c7d l       .debug_str     00000000 
00003c99 l       .debug_str     00000000 
00003cb5 l       .debug_str     00000000 
00003cd1 l       .debug_str     00000000 
00003ced l       .debug_str     00000000 
00003d09 l       .debug_str     00000000 
00003d25 l       .debug_str     00000000 
00003d41 l       .debug_str     00000000 
00003d5d l       .debug_str     00000000 
00003d79 l       .debug_str     00000000 
00003d95 l       .debug_str     00000000 
00003db2 l       .debug_str     00000000 
00003dcf l       .debug_str     00000000 
00003dec l       .debug_str     00000000 
00003e08 l       .debug_str     00000000 
00003e24 l       .debug_str     00000000 
00003e40 l       .debug_str     00000000 
00003e5c l       .debug_str     00000000 
00003e78 l       .debug_str     00000000 
00003e94 l       .debug_str     00000000 
00003eb0 l       .debug_str     00000000 
00003ecc l       .debug_str     00000000 
00003ee8 l       .debug_str     00000000 
00003f04 l       .debug_str     00000000 
00003f21 l       .debug_str     00000000 
00003f3e l       .debug_str     00000000 
00003f5b l       .debug_str     00000000 
00003f77 l       .debug_str     00000000 
00003f93 l       .debug_str     00000000 
00003faf l       .debug_str     00000000 
00003fcb l       .debug_str     00000000 
00003fe7 l       .debug_str     00000000 
00004003 l       .debug_str     00000000 
0000401f l       .debug_str     00000000 
0000403b l       .debug_str     00000000 
00004058 l       .debug_str     00000000 
00004075 l       .debug_str     00000000 
00004092 l       .debug_str     00000000 
000040af l       .debug_str     00000000 
00004607 l       .debug_str     00000000 
000045ef l       .debug_str     00000000 
00004105 l       .debug_str     00000000 
0000411f l       .debug_str     00000000 
00004139 l       .debug_str     00000000 
00004153 l       .debug_str     00000000 
0000416d l       .debug_str     00000000 
00004187 l       .debug_str     00000000 
000041a1 l       .debug_str     00000000 
000041bb l       .debug_str     00000000 
000041d5 l       .debug_str     00000000 
000041ef l       .debug_str     00000000 
00004209 l       .debug_str     00000000 
00004223 l       .debug_str     00000000 
0000423d l       .debug_str     00000000 
00004257 l       .debug_str     00000000 
00004271 l       .debug_str     00000000 
0000428b l       .debug_str     00000000 
000042a5 l       .debug_str     00000000 
000042bf l       .debug_str     00000000 
000042d9 l       .debug_str     00000000 
000042f3 l       .debug_str     00000000 
0000430e l       .debug_str     00000000 
00004329 l       .debug_str     00000000 
00004344 l       .debug_str     00000000 
0000435e l       .debug_str     00000000 
00004378 l       .debug_str     00000000 
00004392 l       .debug_str     00000000 
000043ac l       .debug_str     00000000 
000043c6 l       .debug_str     00000000 
000043e0 l       .debug_str     00000000 
000043fa l       .debug_str     00000000 
00004414 l       .debug_str     00000000 
0000442e l       .debug_str     00000000 
00004448 l       .debug_str     00000000 
00004463 l       .debug_str     00000000 
0000447e l       .debug_str     00000000 
00004499 l       .debug_str     00000000 
000044b3 l       .debug_str     00000000 
000044cd l       .debug_str     00000000 
000044e7 l       .debug_str     00000000 
00004501 l       .debug_str     00000000 
0000451b l       .debug_str     00000000 
00004535 l       .debug_str     00000000 
0000454f l       .debug_str     00000000 
00004569 l       .debug_str     00000000 
00004584 l       .debug_str     00000000 
0000459f l       .debug_str     00000000 
000045ba l       .debug_str     00000000 
000045d5 l       .debug_str     00000000 
0000463d l       .debug_str     00000000 
0000464c l       .debug_str     00000000 
0000465b l       .debug_str     00000000 
00004667 l       .debug_str     00000000 
000057d5 l       .debug_str     00000000 
000057c7 l       .debug_str     00000000 
00005e3a l       .debug_str     00000000 
000057a3 l       .debug_str     00000000 
00004c0a l       .debug_str     00000000 
00004bee l       .debug_str     00000000 
00004674 l       .debug_str     00000000 
00004691 l       .debug_str     00000000 
000046ae l       .debug_str     00000000 
000046cb l       .debug_str     00000000 
000046e8 l       .debug_str     00000000 
00004705 l       .debug_str     00000000 
00004722 l       .debug_str     00000000 
0000473f l       .debug_str     00000000 
0000475c l       .debug_str     00000000 
00004779 l       .debug_str     00000000 
00004796 l       .debug_str     00000000 
000047b3 l       .debug_str     00000000 
000047d0 l       .debug_str     00000000 
000047ed l       .debug_str     00000000 
0000480a l       .debug_str     00000000 
00004827 l       .debug_str     00000000 
00004844 l       .debug_str     00000000 
00004861 l       .debug_str     00000000 
0000487e l       .debug_str     00000000 
0000489b l       .debug_str     00000000 
000048b9 l       .debug_str     00000000 
000048d7 l       .debug_str     00000000 
000048f5 l       .debug_str     00000000 
00004912 l       .debug_str     00000000 
0000492f l       .debug_str     00000000 
0000494c l       .debug_str     00000000 
00004969 l       .debug_str     00000000 
00004986 l       .debug_str     00000000 
000049a3 l       .debug_str     00000000 
000049c0 l       .debug_str     00000000 
000049dd l       .debug_str     00000000 
000049fa l       .debug_str     00000000 
00004a17 l       .debug_str     00000000 
00004a35 l       .debug_str     00000000 
00004a53 l       .debug_str     00000000 
00004a71 l       .debug_str     00000000 
00004a8e l       .debug_str     00000000 
00004aab l       .debug_str     00000000 
00004ac8 l       .debug_str     00000000 
00004ae5 l       .debug_str     00000000 
00004b02 l       .debug_str     00000000 
00004b1f l       .debug_str     00000000 
00004b3c l       .debug_str     00000000 
00004b59 l       .debug_str     00000000 
00004b77 l       .debug_str     00000000 
00004b95 l       .debug_str     00000000 
00004bb3 l       .debug_str     00000000 
00004bd1 l       .debug_str     00000000 
000057aa l       .debug_str     00000000 
0000578f l       .debug_str     00000000 
00004c28 l       .debug_str     00000000 
00004c4d l       .debug_str     00000000 
00004c71 l       .debug_str     00000000 
00004c97 l       .debug_str     00000000 
00004cb9 l       .debug_str     00000000 
00004cdb l       .debug_str     00000000 
00004cfd l       .debug_str     00000000 
00004d1f l       .debug_str     00000000 
00004d41 l       .debug_str     00000000 
00004d63 l       .debug_str     00000000 
00004d85 l       .debug_str     00000000 
00004da7 l       .debug_str     00000000 
00004dc9 l       .debug_str     00000000 
00004deb l       .debug_str     00000000 
00004e0e l       .debug_str     00000000 
00004e31 l       .debug_str     00000000 
00004e54 l       .debug_str     00000000 
00004e77 l       .debug_str     00000000 
00004e9a l       .debug_str     00000000 
00004ebd l       .debug_str     00000000 
00004ee0 l       .debug_str     00000000 
00004f03 l       .debug_str     00000000 
00004f26 l       .debug_str     00000000 
00004f49 l       .debug_str     00000000 
00004f6c l       .debug_str     00000000 
00004f8f l       .debug_str     00000000 
00004fb2 l       .debug_str     00000000 
00004fd5 l       .debug_str     00000000 
00004ff8 l       .debug_str     00000000 
0000501b l       .debug_str     00000000 
0000503e l       .debug_str     00000000 
00005061 l       .debug_str     00000000 
00005084 l       .debug_str     00000000 
000050a7 l       .debug_str     00000000 
000050ca l       .debug_str     00000000 
000050ed l       .debug_str     00000000 
0000510d l       .debug_str     00000000 
0000512d l       .debug_str     00000000 
0000514d l       .debug_str     00000000 
0000516d l       .debug_str     00000000 
0000518d l       .debug_str     00000000 
000051ad l       .debug_str     00000000 
000051d1 l       .debug_str     00000000 
000051f5 l       .debug_str     00000000 
00005219 l       .debug_str     00000000 
0000523d l       .debug_str     00000000 
0000525d l       .debug_str     00000000 
0000527d l       .debug_str     00000000 
0000529d l       .debug_str     00000000 
000052bd l       .debug_str     00000000 
000052e3 l       .debug_str     00000000 
00005309 l       .debug_str     00000000 
0000532f l       .debug_str     00000000 
00005355 l       .debug_str     00000000 
00005379 l       .debug_str     00000000 
0000539d l       .debug_str     00000000 
000053c2 l       .debug_str     00000000 
000053f1 l       .debug_str     00000000 
00005420 l       .debug_str     00000000 
0000544f l       .debug_str     00000000 
0000547e l       .debug_str     00000000 
000054ad l       .debug_str     00000000 
000054dc l       .debug_str     00000000 
0000550b l       .debug_str     00000000 
0000553a l       .debug_str     00000000 
00005569 l       .debug_str     00000000 
0000558c l       .debug_str     00000000 
000055af l       .debug_str     00000000 
000055d2 l       .debug_str     00000000 
000055f5 l       .debug_str     00000000 
00005618 l       .debug_str     00000000 
0000563b l       .debug_str     00000000 
00005660 l       .debug_str     00000000 
00005690 l       .debug_str     00000000 
000056bd l       .debug_str     00000000 
000056ea l       .debug_str     00000000 
00005717 l       .debug_str     00000000 
00005744 l       .debug_str     00000000 
00005772 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000057e5 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
000057f6 l       .debug_str     00000000 
00005800 l       .debug_str     00000000 
00005806 l       .debug_str     00000000 
00005810 l       .debug_str     00000000 
00000b88 l       .debug_str     00000000 
00005817 l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00000804 l       .debug_frame   00000000 
d000b83a l       .text  00000000 
00000000 l    df *ABS*  00000000 retention_sram.c
d000b83a l       .text  00000000 
d000b83a l       .text  00000000 
d000b83a l       .text  00000000 
d000b83a l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b846 l       .text  00000000 
d000b846 l       .text  00000000 
d000b848 l       .text  00000000 
d000b848 l       .text  00000000 
d000b84a l       .text  00000000 
d000b84a l       .text  00000000 
00000000 l       .debug_str     00000000 
00005824 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000870 l       .debug_ranges  00000000 
00002120 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000585b l       .debug_str     00000000 
00000c85 l       .debug_str     00000000 
00000b13 l       .debug_str     00000000 
00000c65 l       .debug_str     00000000 
00000c76 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000c52 l       .debug_str     00000000 
00005873 l       .debug_str     00000000 
0000586c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00000c3e l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00005888 l       .debug_str     00000000 
000067f5 l       .debug_str     00000000 
00000830 l       .debug_frame   00000000 
d000b840 l       .text  00000000 
d000b84a l       .text  00000000 
00000000 l    df *ABS*  00000000 rstmgr.c
d000b84a l       .text  00000000 
d000b84a l       .text  00000000 
d000b84a l       .text  00000000 
d000b84e l       .text  00000000 
d000b84e l       .text  00000000 
d000b850 l       .text  00000000 
d000b850 l       .text  00000000 
d000b854 l       .text  00000000 
d000b854 l       .text  00000000 
d000b85a l       .text  00000000 
d000b85a l       .text  00000000 
d000b85c l       .text  00000000 
d000b864 l       .text  00000000 
d000b864 l       .text  00000000 
d000b868 l       .text  00000000 
d000b868 l       .text  00000000 
d000b86a l       .text  00000000 
d000b86a l       .text  00000000 
d000b86c l       .text  00000000 
d000b86c l       .text  00000000 
d000b86e l       .text  00000000 
d000b870 l       .text  00000000 
d000b872 l       .text  00000000 
d000b876 l       .text  00000000 
d000b87a l       .text  00000000 
d000b87a l       .text  00000000 
d000b87c l       .text  00000000 
d000b87c l       .text  00000000 
d000b87e l       .text  00000000 
d000b87e l       .text  00000000 
d000b87e l       .text  00000000 
d000b87e l       .text  00000000 
d000b87e l       .text  00000000 
d000b882 l       .text  00000000 
d000b882 l       .text  00000000 
d000b884 l       .text  00000000 
d000b884 l       .text  00000000 
d000b886 l       .text  00000000 
d000b886 l       .text  00000000 
d000b886 l       .text  00000000 
d000b886 l       .text  00000000 
d000b886 l       .text  00000000 
d000b88e l       .text  00000000 
d000b88e l       .text  00000000 
d000b890 l       .text  00000000 
d000b890 l       .text  00000000 
d000b894 l       .text  00000000 
d000b894 l       .text  00000000 
d000b896 l       .text  00000000 
d000b896 l       .text  00000000 
000058f5 l       .debug_loc     00000000 
00005917 l       .debug_loc     00000000 
0000593e l       .debug_loc     00000000 
00005960 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000058a0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000898 l       .debug_ranges  00000000 
000058cf l       .debug_str     00000000 
000058f1 l       .debug_str     00000000 
000058e1 l       .debug_str     00000000 
00000e60 l       .debug_str     00000000 
000022e8 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00001772 l       .debug_str     00000000 
000016d2 l       .debug_str     00000000 
000016e5 l       .debug_str     00000000 
000016f9 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
00001734 l       .debug_str     00000000 
00001749 l       .debug_str     00000000 
0000175d l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00005905 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00000c2c l       .debug_str     00000000 
00000c94 l       .debug_str     00000000 
00000b19 l       .debug_str     00000000 
00005932 l       .debug_str     00000000 
0000591f l       .debug_str     00000000 
00001f66 l       .debug_str     00000000 
00000884 l       .debug_frame   00000000 
d000b87e l       .text  00000000 
d000b886 l       .text  00000000 
d000b896 l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000b896 l       .text  00000000 
d000b896 l       .text  00000000 
d000b896 l       .text  00000000 
d000b89a l       .text  00000000 
d000b89a l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a2 l       .text  00000000 
d000b8a2 l       .text  00000000 
d000b8a6 l       .text  00000000 
d000b8a6 l       .text  00000000 
d000b8aa l       .text  00000000 
d000b8aa l       .text  00000000 
d000b8b0 l       .text  00000000 
d000b8b0 l       .text  00000000 
d000b8b2 l       .text  00000000 
d000b8b2 l       .text  00000000 
d000b8b4 l       .text  00000000 
d000b8b4 l       .text  00000000 
d000b8b8 l       .text  00000000 
d000b8b8 l       .text  00000000 
d000b8ba l       .text  00000000 
d000b8ba l       .text  00000000 
d000b8be l       .text  00000000 
d000b8be l       .text  00000000 
d000b8c2 l       .text  00000000 
d000b8c2 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c8 l       .text  00000000 
d000b8c8 l       .text  00000000 
d000b8ca l       .text  00000000 
d000b8ca l       .text  00000000 
d000b8cc l       .text  00000000 
d000b8cc l       .text  00000000 
d000b8ce l       .text  00000000 
d000b8ce l       .text  00000000 
d000b8d6 l       .text  00000000 
d000b8d6 l       .text  00000000 
d000b8d8 l       .text  00000000 
d000b8d8 l       .text  00000000 
d000b8da l       .text  00000000 
d000b8da l       .text  00000000 
d000b8dc l       .text  00000000 
d000b8dc l       .text  00000000 
d000b8de l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e0 l       .text  00000000 
00005987 l       .debug_loc     00000000 
000059a2 l       .debug_loc     00000000 
000059be l       .debug_loc     00000000 
000059e5 l       .debug_loc     00000000 
00005a0a l       .debug_loc     00000000 
00005a31 l       .debug_loc     00000000 
00005a53 l       .debug_loc     00000000 
00005a6e l       .debug_loc     00000000 
00005a89 l       .debug_loc     00000000 
00005aa4 l       .debug_loc     00000000 
00005abf l       .debug_loc     00000000 
00005ada l       .debug_loc     00000000 
00005b0b l       .debug_loc     00000000 
00005b31 l       .debug_loc     00000000 
00005b4c l       .debug_loc     00000000 
00005b67 l       .debug_loc     00000000 
00005b82 l       .debug_loc     00000000 
00005b9d l       .debug_loc     00000000 
00005bb8 l       .debug_loc     00000000 
00005bde l       .debug_loc     00000000 
00005c04 l       .debug_loc     00000000 
00005c1f l       .debug_loc     00000000 
00005c3a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000594b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008c0 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00005978 l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
000010a8 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00000b94 l       .debug_str     00000000 
000059b8 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00005983 l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
00005990 l       .debug_str     00000000 
00000d31 l       .debug_str     00000000 
00002bb6 l       .debug_str     00000000 
0000599d l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
000059a8 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
000059ae l       .debug_str     00000000 
000059ca l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
000001d1 l       .debug_str     00000000 
000008d8 l       .debug_frame   00000000 
d000b8c4 l       .text  00000000 
d000b8e0 l       .text  00000000 
00000000 l    df *ABS*  00000000 watchdog.c
d000b8e0 l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e2 l       .text  00000000 
d000b8e2 l       .text  00000000 
d000b8e6 l       .text  00000000 
d000b8e6 l       .text  00000000 
d000b8e6 l       .text  00000000 
d000b8e8 l       .text  00000000 
d000b8e8 l       .text  00000000 
d000b8f0 l       .text  00000000 
d000b8f0 l       .text  00000000 
d000b8f4 l       .text  00000000 
d000b8f4 l       .text  00000000 
d000b8f8 l       .text  00000000 
d000b8fc l       .text  00000000 
d000b904 l       .text  00000000 
d000b908 l       .text  00000000 
d000b916 l       .text  00000000 
d000b91e l       .text  00000000 
d000b922 l       .text  00000000 
d000b930 l       .text  00000000 
d000b938 l       .text  00000000 
d000b946 l       .text  00000000 
d000b94e l       .text  00000000 
d000b952 l       .text  00000000 
d000b95e l       .text  00000000 
d000b96c l       .text  00000000 
d000b970 l       .text  00000000 
d000b97c l       .text  00000000 
d000b980 l       .text  00000000 
d000b980 l       .text  00000000 
d000b984 l       .text  00000000 
d000b988 l       .text  00000000 
d000b988 l       .text  00000000 
d000b98a l       .text  00000000 
d000b98a l       .text  00000000 
d000b98c l       .text  00000000 
d000b98c l       .text  00000000 
d000b98e l       .text  00000000 
d000b99e l       .text  00000000 
d000b9a4 l       .text  00000000 
d000b9a6 l       .text  00000000 
d000b9ae l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b2 l       .text  00000000 
d000b9b8 l       .text  00000000 
d000b9b8 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c2 l       .text  00000000 
d000b9c8 l       .text  00000000 
d000b9ca l       .text  00000000 
d000b9d2 l       .text  00000000 
d000b9d8 l       .text  00000000 
d000b9d8 l       .text  00000000 
d000b9da l       .text  00000000 
d000b9da l       .text  00000000 
d000b9e4 l       .text  00000000 
d000b9e4 l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9ee l       .text  00000000 
d000b9ee l       .text  00000000 
d000b9f0 l       .text  00000000 
d000b9f0 l       .text  00000000 
d000b9f2 l       .text  00000000 
d000b9f2 l       .text  00000000 
d000b9f8 l       .text  00000000 
d000b9fc l       .text  00000000 
d000b9fc l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba06 l       .text  00000000 
d000ba16 l       .text  00000000 
d000ba16 l       .text  00000000 
d000ba18 l       .text  00000000 
d000ba1c l       .text  00000000 
d000ba20 l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba36 l       .text  00000000 
d000ba3a l       .text  00000000 
d000ba3a l       .text  00000000 
d000ba40 l       .text  00000000 
d000ba40 l       .text  00000000 
d000ba42 l       .text  00000000 
d000ba42 l       .text  00000000 
d000ba46 l       .text  00000000 
d000ba4c l       .text  00000000 
d000ba4c l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba5a l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba60 l       .text  00000000 
00005c55 l       .debug_loc     00000000 
00005c7b l       .debug_loc     00000000 
00005ca1 l       .debug_loc     00000000 
00005cd8 l       .debug_loc     00000000 
00005cfe l       .debug_loc     00000000 
00005d19 l       .debug_loc     00000000 
00005d4d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000059cf l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008e8 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00005a00 l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00005a16 l       .debug_str     00000000 
00005a22 l       .debug_str     00000000 
00005a2e l       .debug_str     00000000 
00005add l       .debug_str     00000000 
00005a3b l       .debug_str     00000000 
00005a74 l       .debug_str     00000000 
00005ab3 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000be2 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00002b4e l       .debug_str     00000000 
00005b48 l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00005b07 l       .debug_str     00000000 
00005b5b l       .debug_str     00000000 
000067f5 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
00000d04 l       .debug_str     00000000 
00005b1a l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00005b27 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
00005b62 l       .debug_str     00000000 
00005b52 l       .debug_str     00000000 
00005b34 l       .debug_str     00000000 
00005b43 l       .debug_str     00000000 
0000092c l       .debug_frame   00000000 
d000b9c0 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba60 l       .text  00000000 
00000000 l    df *ABS*  00000000 rom_epmp.c
d000ba60 l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba62 l       .text  00000000 
d000ba62 l       .text  00000000 
d000ba68 l       .text  00000000 
d000ba68 l       .text  00000000 
d000ba68 l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba72 l       .text  00000000 
d000ba72 l       .text  00000000 
d000ba76 l       .text  00000000 
d000ba76 l       .text  00000000 
d000ba7a l       .text  00000000 
d000ba7e l       .text  00000000 
d000ba86 l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba98 l       .text  00000000 
d000baa0 l       .text  00000000 
d000baa4 l       .text  00000000 
d000bab2 l       .text  00000000 
d000baba l       .text  00000000 
d000bac8 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad4 l       .text  00000000 
d000bae0 l       .text  00000000 
d000bae2 l       .text  00000000 
d000bae8 l       .text  00000000 
d000baf0 l       .text  00000000 
d000baf4 l       .text  00000000 
d000bb00 l       .text  00000000 
d000bb02 l       .text  00000000 
d000bb06 l       .text  00000000 
d000bb0e l       .text  00000000 
d000bb1a l       .text  00000000 
d000bb1a l       .text  00000000 
d000bb22 l       .text  00000000 
d000bb24 l       .text  00000000 
d000bb26 l       .text  00000000 
d000bb2e l       .text  00000000 
d000bb30 l       .text  00000000 
d000bb32 l       .text  00000000 
d000bb32 l       .text  00000000 
d000bb34 l       .text  00000000 
d000bb3a l       .text  00000000 
d000bb3a l       .text  00000000 
d000bb44 l       .text  00000000 
d000bb44 l       .text  00000000 
d000bb46 l       .text  00000000 
d000bb4e l       .text  00000000 
d000bb50 l       .text  00000000 
d000bb50 l       .text  00000000 
d000bb58 l       .text  00000000 
d000bb58 l       .text  00000000 
d000bb5e l       .text  00000000 
d000bb5e l       .text  00000000 
d000bb64 l       .text  00000000 
d000bb64 l       .text  00000000 
d000bb6a l       .text  00000000 
d000bb6a l       .text  00000000 
d000bb70 l       .text  00000000 
d000bb70 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb78 l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7e l       .text  00000000 
d000bb7e l       .text  00000000 
d000bb82 l       .text  00000000 
d000bb82 l       .text  00000000 
d000bb8a l       .text  00000000 
d000bb8c l       .text  00000000 
d000bb94 l       .text  00000000 
d000bb94 l       .text  00000000 
d000bb9a l       .text  00000000 
d000bb9a l       .text  00000000 
d000bb9c l       .text  00000000 
d000bb9c l       .text  00000000 
d000bb9e l       .text  00000000 
d000bb9e l       .text  00000000 
d000bba2 l       .text  00000000 
d000bbac l       .text  00000000 
d000bbac l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb6 l       .text  00000000 
d000bbb6 l       .text  00000000 
d000bbbe l       .text  00000000 
d000bbc0 l       .text  00000000 
d000bbc0 l       .text  00000000 
d000bbc2 l       .text  00000000 
d000bbc2 l       .text  00000000 
d000bbc8 l       .text  00000000 
d000bbc8 l       .text  00000000 
d000bbcc l       .text  00000000 
d000bbcc l       .text  00000000 
d000bbd0 l       .text  00000000 
d000bbd8 l       .text  00000000 
d000bbdc l       .text  00000000 
d000bbe0 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbe8 l       .text  00000000 
d000bbe8 l       .text  00000000 
d000bbea l       .text  00000000 
d000bbea l       .text  00000000 
d000bbec l       .text  00000000 
d000bbec l       .text  00000000 
d000bbee l       .text  00000000 
d000bbee l       .text  00000000 
d000bbf6 l       .text  00000000 
d000bbfc l       .text  00000000 
d000bbfc l       .text  00000000 
d000bc00 l       .text  00000000 
d000bc00 l       .text  00000000 
d000bc08 l       .text  00000000 
d000bc10 l       .text  00000000 
d000bc14 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc1a l       .text  00000000 
d000bc24 l       .text  00000000 
d000bc28 l       .text  00000000 
d000bc28 l       .text  00000000 
d000bc2a l       .text  00000000 
d000bc2a l       .text  00000000 
d000bc32 l       .text  00000000 
d000bc32 l       .text  00000000 
d000bc36 l       .text  00000000 
d000bc36 l       .text  00000000 
d000bc3a l       .text  00000000 
d000bc3e l       .text  00000000 
d000bc46 l       .text  00000000 
d000bc4a l       .text  00000000 
d000bc58 l       .text  00000000 
d000bc60 l       .text  00000000 
d000bc64 l       .text  00000000 
d000bc72 l       .text  00000000 
d000bc7a l       .text  00000000 
d000bc88 l       .text  00000000 
d000bc90 l       .text  00000000 
d000bc94 l       .text  00000000 
d000bca0 l       .text  00000000 
d000bca2 l       .text  00000000 
d000bca6 l       .text  00000000 
d000bca8 l       .text  00000000 
d000bcb0 l       .text  00000000 
d000bcb4 l       .text  00000000 
d000bcc0 l       .text  00000000 
d000bcc2 l       .text  00000000 
d000bcc6 l       .text  00000000 
d000bcc6 l       .text  00000000 
d000bcca l       .text  00000000 
d000bccc l       .text  00000000 
d000bccc l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
00005d98 l       .debug_loc     00000000 
00005dc9 l       .debug_loc     00000000 
00005def l       .debug_loc     00000000 
00005e4b l       .debug_loc     00000000 
00005ea7 l       .debug_loc     00000000 
00005ef5 l       .debug_loc     00000000 
00005f2d l       .debug_loc     00000000 
00005f89 l       .debug_loc     00000000 
00005fb5 l       .debug_loc     00000000 
00005fe1 l       .debug_loc     00000000 
00006005 l       .debug_loc     00000000 
0000603b l       .debug_loc     00000000 
0000605f l       .debug_loc     00000000 
00006083 l       .debug_loc     00000000 
000060b9 l       .debug_loc     00000000 
000060dd l       .debug_loc     00000000 
0000611d l       .debug_loc     00000000 
00006141 l       .debug_loc     00000000 
0000615f l       .debug_loc     00000000 
0000617b l       .debug_loc     00000000 
0000619f l       .debug_loc     00000000 
000061c3 l       .debug_loc     00000000 
000061ec l       .debug_loc     00000000 
00006210 l       .debug_loc     00000000 
0000622d l       .debug_loc     00000000 
00006263 l       .debug_loc     00000000 
00006287 l       .debug_loc     00000000 
000062ab l       .debug_loc     00000000 
000062cb l       .debug_loc     00000000 
000062f7 l       .debug_loc     00000000 
0000631b l       .debug_loc     00000000 
00006348 l       .debug_loc     00000000 
00006375 l       .debug_loc     00000000 
00006390 l       .debug_loc     00000000 
000063b4 l       .debug_loc     00000000 
000063e5 l       .debug_loc     00000000 
0000640b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005cd0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000948 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00005d8f l       .debug_str     00000000 
00005cf9 l       .debug_str     00000000 
00005d0b l       .debug_str     00000000 
00005d23 l       .debug_str     00000000 
00005d3b l       .debug_str     00000000 
00005d54 l       .debug_str     00000000 
00005d6f l       .debug_str     00000000 
00005dcf l       .debug_str     00000000 
00005d99 l       .debug_str     00000000 
00005da6 l       .debug_str     00000000 
00005db3 l       .debug_str     00000000 
00005dc0 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00005dd9 l       .debug_str     00000000 
000018da l       .debug_str     00000000 
0000103f l       .debug_str     00000000 
00005d94 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00001046 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
0000624a l       .debug_str     00000000 
0000625a l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
00005df2 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00005dfe l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00005e19 l       .debug_str     00000000 
00000c0e l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00000bde l       .debug_str     00000000 
00005e32 l       .debug_str     00000000 
00005e39 l       .debug_str     00000000 
00000bd8 l       .debug_str     00000000 
00001be7 l       .debug_str     00000000 
00005e3e l       .debug_str     00000000 
00005e4f l       .debug_str     00000000 
00005e58 l       .debug_str     00000000 
00000918 l       .debug_ranges  00000000 
00000930 l       .debug_ranges  00000000 
0000586c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001169 l       .debug_str     00000000 
00005e64 l       .debug_str     00000000 
0000114f l       .debug_str     00000000 
00000bc8 l       .debug_str     00000000 
00005c33 l       .debug_str     00000000 
00005c2c l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000009a4 l       .debug_frame   00000000 
d000bbb4 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bcd4 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify.c
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd6 l       .text  00000000 
d000bcf2 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcf6 l       .text  00000000 
d000bcfa l       .text  00000000 
d000bcfa l       .text  00000000 
d000bcfc l       .text  00000000 
d000bcfc l       .text  00000000 
d000bd06 l       .text  00000000 
d000bd08 l       .text  00000000 
d000bd0a l       .text  00000000 
d000bd0a l       .text  00000000 
d000bd0e l       .text  00000000 
d000bd0e l       .text  00000000 
d000bd12 l       .text  00000000 
d000bd16 l       .text  00000000 
d000bd1e l       .text  00000000 
d000bd22 l       .text  00000000 
d000bd30 l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd3c l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd52 l       .text  00000000 
d000bd60 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd6c l       .text  00000000 
d000bd78 l       .text  00000000 
d000bd80 l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd88 l       .text  00000000 
d000bd8c l       .text  00000000 
d000bd90 l       .text  00000000 
d000bd90 l       .text  00000000 
d000bd94 l       .text  00000000 
d000bd98 l       .text  00000000 
d000bd98 l       .text  00000000 
d000bd9e l       .text  00000000 
d000bda6 l       .text  00000000 
d000bda6 l       .text  00000000 
d000bdaa l       .text  00000000 
d000bdb6 l       .text  00000000 
d000bdb6 l       .text  00000000 
d000bdbe l       .text  00000000 
d000bdbe l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdc6 l       .text  00000000 
d000bdc6 l       .text  00000000 
d000bdc8 l       .text  00000000 
d000bdc8 l       .text  00000000 
d000bdcc l       .text  00000000 
d000bdcc l       .text  00000000 
d000bdd0 l       .text  00000000 
d000bdd0 l       .text  00000000 
d000bdd4 l       .text  00000000 
d000da0c l     O .rodata        00000180 kSigverifyShares
d000bdde l       .text  00000000 
d000bdde l       .text  00000000 
d000bde0 l       .text  00000000 
d000bde2 l       .text  00000000 
d000bde4 l       .text  00000000 
d000bde6 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bdea l       .text  00000000 
d000bdec l       .text  00000000 
d000bdec l       .text  00000000 
d000bdee l       .text  00000000 
d000bdee l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdfa l       .text  00000000 
d000bdfa l       .text  00000000 
d000bdfc l       .text  00000000 
d000bdfc l       .text  00000000 
d000be00 l       .text  00000000 
d000be08 l       .text  00000000 
d000db8c l     O .rodata        00000014 sigverify_encoded_message_check.kEncodedSha256
d000be14 l       .text  00000000 
d000be1e l       .text  00000000 
d000be1e l       .text  00000000 
d000be20 l       .text  00000000 
d000be22 l       .text  00000000 
d000be24 l       .text  00000000 
d000be26 l       .text  00000000 
d000be2a l       .text  00000000 
d000be2a l       .text  00000000 
d000be2c l       .text  00000000 
d000be2c l       .text  00000000 
d000be2e l       .text  00000000 
d000be38 l       .text  00000000 
d000be38 l       .text  00000000 
d000be3e l       .text  00000000 
d000be3e l       .text  00000000 
d000be42 l       .text  00000000 
d000be4a l       .text  00000000 
d000be4a l       .text  00000000 
d000be4e l       .text  00000000 
d000be56 l       .text  00000000 
d000be66 l       .text  00000000 
d000be66 l       .text  00000000 
d000be68 l       .text  00000000 
d000be72 l       .text  00000000 
d000be72 l       .text  00000000 
d000be74 l       .text  00000000 
d000be74 l       .text  00000000 
d000be76 l       .text  00000000 
d000be7e l       .text  00000000 
d000be7e l       .text  00000000 
d000be8e l       .text  00000000 
d000be90 l       .text  00000000 
d000be92 l       .text  00000000 
d000be92 l       .text  00000000 
d000be94 l       .text  00000000 
d000be94 l       .text  00000000 
d000bea4 l       .text  00000000 
d000beb0 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb6 l       .text  00000000 
d000beb6 l       .text  00000000 
d000beba l       .text  00000000 
d000beba l       .text  00000000 
d000bec2 l       .text  00000000 
d000bec2 l       .text  00000000 
d000bec4 l       .text  00000000 
d000bec6 l       .text  00000000 
d000bec8 l       .text  00000000 
d000beca l       .text  00000000 
d000bece l       .text  00000000 
d000bed2 l       .text  00000000 
d000bed4 l       .text  00000000 
d000bed8 l       .text  00000000 
d000beda l       .text  00000000 
d000bedc l       .text  00000000 
d000bede l       .text  00000000 
d000bee0 l       .text  00000000 
d000bee4 l       .text  00000000 
d000bee4 l       .text  00000000 
d000bee6 l       .text  00000000 
d000bee6 l       .text  00000000 
d000beee l       .text  00000000 
d000beee l       .text  00000000 
d000bef2 l       .text  00000000 
d000befe l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf0a l       .text  00000000 
d000bf0c l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf14 l       .text  00000000 
d000bf14 l       .text  00000000 
d000bf18 l       .text  00000000 
d000bf18 l       .text  00000000 
d000bf1c l       .text  00000000 
d000bf1c l       .text  00000000 
d000bf2a l       .text  00000000 
d000bf2a l       .text  00000000 
d000bf32 l       .text  00000000 
d000bf36 l       .text  00000000 
d000bf3e l       .text  00000000 
d000bf42 l       .text  00000000 
d000bf52 l       .text  00000000 
d000bf52 l       .text  00000000 
d000bf5a l       .text  00000000 
d000bf5a l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf6c l       .text  00000000 
d000bf6e l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf72 l       .text  00000000 
d000bf76 l       .text  00000000 
d000bf7c l       .text  00000000 
d000bf7c l       .text  00000000 
d000bf84 l       .text  00000000 
d000bf84 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf90 l       .text  00000000 
d000bf90 l       .text  00000000 
d000bf94 l       .text  00000000 
d000bf98 l       .text  00000000 
d000bf98 l       .text  00000000 
d000bf9a l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfae l       .text  00000000 
d000bfae l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb2 l       .text  00000000 
d000bfb4 l       .text  00000000 
d000bfb6 l       .text  00000000 
d000bfba l       .text  00000000 
d000bfba l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfc0 l       .text  00000000 
d000bfc8 l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfd0 l       .text  00000000 
d000bfd0 l       .text  00000000 
d000bfd2 l       .text  00000000 
d000bfda l       .text  00000000 
d000bfde l       .text  00000000 
d000bfde l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfec l       .text  00000000 
d000bff0 l       .text  00000000 
d000bff2 l       .text  00000000 
d000bff4 l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
00006435 l       .debug_loc     00000000 
00006492 l       .debug_loc     00000000 
000064ef l       .debug_loc     00000000 
00006520 l       .debug_loc     00000000 
00006551 l       .debug_loc     00000000 
000065ae l       .debug_loc     00000000 
000065d4 l       .debug_loc     00000000 
00006605 l       .debug_loc     00000000 
0000662b l       .debug_loc     00000000 
00006646 l       .debug_loc     00000000 
00006661 l       .debug_loc     00000000 
000066a8 l       .debug_loc     00000000 
000066c3 l       .debug_loc     00000000 
0000670a l       .debug_loc     00000000 
00006751 l       .debug_loc     00000000 
000067ec l       .debug_loc     00000000 
00006813 l       .debug_loc     00000000 
00006850 l       .debug_loc     00000000 
0000688f l       .debug_loc     00000000 
000068d4 l       .debug_loc     00000000 
0000690d l       .debug_loc     00000000 
0000694c l       .debug_loc     00000000 
00006989 l       .debug_loc     00000000 
000069b0 l       .debug_loc     00000000 
000069d6 l       .debug_loc     00000000 
000069f1 l       .debug_loc     00000000 
00006a17 l       .debug_loc     00000000 
00006a3d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005eea l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000009f8 l       .debug_ranges  00000000 
00005f1e l       .debug_str     00000000 
00005f2d l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00005f34 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00005f45 l       .debug_str     00000000 
00005f60 l       .debug_str     00000000 
00005f82 l       .debug_str     00000000 
00005fa3 l       .debug_str     00000000 
00005fc9 l       .debug_str     00000000 
00005fed l       .debug_str     00000000 
000016be l       .debug_str     00000000 
00006010 l       .debug_str     00000000 
00006025 l       .debug_str     00000000 
0000603b l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00006051 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000606d l       .debug_str     00000000 
0000608d l       .debug_str     00000000 
0000126c l       .debug_str     00000000 
00001247 l       .debug_str     00000000 
00006095 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
000060a1 l       .debug_str     00000000 
000060a6 l       .debug_str     00000000 
00001947 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
0000100c l       .debug_str     00000000 
00000d6f l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
000060f3 l       .debug_str     00000000 
00000970 l       .debug_ranges  00000000 
0000131a l       .debug_str     00000000 
00000990 l       .debug_ranges  00000000 
000009a8 l       .debug_ranges  00000000 
000009c0 l       .debug_ranges  00000000 
000009d8 l       .debug_ranges  00000000 
00000ba9 l       .debug_str     00000000 
000060ad l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
000060c4 l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00000fd3 l       .debug_str     00000000 
00000da5 l       .debug_str     00000000 
00000e1d l       .debug_str     00000000 
000060db l       .debug_str     00000000 
00000db3 l       .debug_str     00000000 
00000dbd l       .debug_str     00000000 
00000bb4 l       .debug_str     00000000 
00000f01 l       .debug_str     00000000 
0000613f l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000e2f l       .debug_str     00000000 
00000e14 l       .debug_str     00000000 
00000ddd l       .debug_str     00000000 
00000df1 l       .debug_str     00000000 
00000e03 l       .debug_str     00000000 
00000dc7 l       .debug_str     00000000 
00000a04 l       .debug_frame   00000000 
d000bf62 l       .text  00000000 
d000bffc l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_ibex.c
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffe l       .text  00000000 
d000c01a l       .text  00000000 
d000c01c l       .text  00000000 
d000c01e l       .text  00000000 
d000c020 l       .text  00000000 
d000c034 l       .text  00000000 
d000c034 l       .text  00000000 
d000c03a l       .text  00000000 
d000c040 l       .text  00000000 
d000c040 l       .text  00000000 
d000c044 l       .text  00000000 
d000c046 l       .text  00000000 
d000c046 l       .text  00000000 
d000c04e l       .text  00000000 
d000c04e l       .text  00000000 
d000c052 l       .text  00000000 
d000c05e l       .text  00000000 
d000c05e l       .text  00000000 
d000c06e l       .text  00000000 
d000c06e l       .text  00000000 
d000c072 l       .text  00000000 
d000c072 l       .text  00000000 
d000c078 l       .text  00000000 
d000c07e l       .text  00000000 
d000c082 l       .text  00000000 
d000c082 l       .text  00000000 
d000c086 l       .text  00000000 
d000c086 l       .text  00000000 
d000c08a l       .text  00000000 
d000c08c l       .text  00000000 
d000c08c l       .text  00000000 
d000c090 l       .text  00000000 
d000c090 l       .text  00000000 
d000c092 l       .text  00000000 
d000c092 l       .text  00000000 
d000c094 l       .text  00000000 
d000c094 l       .text  00000000 
d000c098 l       .text  00000000 
d000c098 l       .text  00000000 
d000c0ac l       .text  00000000 
d000c0ac l       .text  00000000 
d000c0b0 l       .text  00000000 
d000c0b0 l       .text  00000000 
d000c0b4 l       .text  00000000 
d000c0b4 l       .text  00000000 
d000c0b8 l       .text  00000000 
d000c0bc l       .text  00000000 
d000c0c4 l       .text  00000000 
d000c0c6 l       .text  00000000 
d000c0c6 l       .text  00000000 
d000c0ca l       .text  00000000 
d000c0ca l       .text  00000000 
d000c0cc l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d2 l       .text  00000000 
d000c0d6 l       .text  00000000 
d000c0d6 l       .text  00000000 
d000c0da l       .text  00000000 
d000c0da l       .text  00000000 
d000c0de l       .text  00000000 
d000c0de l       .text  00000000 
d000c0e6 l       .text  00000000 
d000c0e6 l       .text  00000000 
d000c0ec l       .text  00000000 
d000c0f2 l       .text  00000000 
d000c0f2 l       .text  00000000 
d000c0f6 l       .text  00000000 
d000c0f8 l       .text  00000000 
d000c0f8 l       .text  00000000 
d000c100 l       .text  00000000 
d000c100 l       .text  00000000 
d000c104 l       .text  00000000 
d000c108 l       .text  00000000 
d000c108 l       .text  00000000 
d000c10e l       .text  00000000 
d000c114 l       .text  00000000 
d000c118 l       .text  00000000 
d000c118 l       .text  00000000 
d000c11c l       .text  00000000 
d000c120 l       .text  00000000 
d000c120 l       .text  00000000 
d000c122 l       .text  00000000 
d000c122 l       .text  00000000 
d000c126 l       .text  00000000 
d000c126 l       .text  00000000 
d000c128 l       .text  00000000 
d000c128 l       .text  00000000 
d000c12a l       .text  00000000 
d000c12a l       .text  00000000 
d000c12e l       .text  00000000 
d000c12e l       .text  00000000 
d000c132 l       .text  00000000 
d000c138 l       .text  00000000 
d000c138 l       .text  00000000 
d000c13a l       .text  00000000 
d000c13e l       .text  00000000 
d000c13e l       .text  00000000 
d000c218 l     F .text  00000132 mont_mul
d000c148 l       .text  00000000 
d000c148 l       .text  00000000 
d000c152 l       .text  00000000 
d000c152 l       .text  00000000 
d000c15c l       .text  00000000 
d000c15c l       .text  00000000 
d000c166 l       .text  00000000 
d000c166 l       .text  00000000 
d000c170 l       .text  00000000 
d000c170 l       .text  00000000 
d000c17a l       .text  00000000 
d000c17a l       .text  00000000 
d000c17c l       .text  00000000 
d000c17c l       .text  00000000 
d000c186 l       .text  00000000 
d000c186 l       .text  00000000 
d000c190 l       .text  00000000 
d000c190 l       .text  00000000 
d000c192 l       .text  00000000 
d000c192 l       .text  00000000 
d000c194 l       .text  00000000 
d000c194 l       .text  00000000 
d000c19e l       .text  00000000 
d000c19e l       .text  00000000 
d000c1ae l       .text  00000000 
d000c1ae l       .text  00000000 
d000c1b0 l       .text  00000000 
d000c1b2 l       .text  00000000 
d000c1b2 l       .text  00000000 
d000c1b6 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1c2 l       .text  00000000 
d000c1c2 l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1d4 l       .text  00000000 
d000c1da l       .text  00000000 
d000c1de l       .text  00000000 
d000c1de l       .text  00000000 
d000c1e2 l       .text  00000000 
d000c1e2 l       .text  00000000 
d000c1e6 l       .text  00000000 
d000c1e8 l       .text  00000000 
d000c1e8 l       .text  00000000 
d000c1ec l       .text  00000000 
d000c1ec l       .text  00000000 
d000c1ee l       .text  00000000 
d000c1ee l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f4 l       .text  00000000 
d000c1f4 l       .text  00000000 
d000c1f8 l       .text  00000000 
d000c1fc l       .text  00000000 
d000c200 l       .text  00000000 
d000c208 l       .text  00000000 
d000c218 l       .text  00000000 
d000c218 l       .text  00000000 
d000c218 l       .text  00000000 
d000c218 l       .text  00000000 
d000c218 l       .text  00000000 
d000c21a l       .text  00000000 
d000c22c l       .text  00000000 
d000c22e l       .text  00000000 
d000c230 l       .text  00000000 
d000c232 l       .text  00000000 
d000c234 l       .text  00000000 
d000c236 l       .text  00000000 
d000c246 l       .text  00000000 
d000c246 l       .text  00000000 
d000c248 l       .text  00000000 
d000c248 l       .text  00000000 
d000c258 l       .text  00000000 
d000c258 l       .text  00000000 
d000c264 l       .text  00000000 
d000c268 l       .text  00000000 
d000c26e l       .text  00000000 
d000c276 l       .text  00000000 
d000c278 l       .text  00000000 
d000c278 l       .text  00000000 
d000c27c l       .text  00000000 
d000c280 l       .text  00000000 
d000c286 l       .text  00000000 
d000c286 l       .text  00000000 
d000c28a l       .text  00000000 
d000c28a l       .text  00000000 
d000c28e l       .text  00000000 
d000c292 l       .text  00000000 
d000c292 l       .text  00000000 
d000c294 l       .text  00000000 
d000c298 l       .text  00000000 
d000c29c l       .text  00000000 
d000c29c l       .text  00000000 
d000c29e l       .text  00000000 
d000c29e l       .text  00000000 
d000c2a4 l       .text  00000000 
d000c2aa l       .text  00000000 
d000c2b2 l       .text  00000000 
d000c2ba l       .text  00000000 
d000c2ba l       .text  00000000 
d000c2bc l       .text  00000000 
d000c2c2 l       .text  00000000 
d000c2c4 l       .text  00000000 
d000c2ca l       .text  00000000 
d000c2ca l       .text  00000000 
d000c2d2 l       .text  00000000 
d000c2d6 l       .text  00000000 
d000c2d6 l       .text  00000000 
d000c2e0 l       .text  00000000 
d000c2e2 l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ec l       .text  00000000 
d000c2ec l       .text  00000000 
d000c2f0 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f6 l       .text  00000000 
d000c2f6 l       .text  00000000 
d000c2f8 l       .text  00000000 
d000c2f8 l       .text  00000000 
d000c2fc l       .text  00000000 
d000c2fc l       .text  00000000 
d000c300 l       .text  00000000 
d000c304 l       .text  00000000 
d000c306 l       .text  00000000 
d000c308 l       .text  00000000 
d000c308 l       .text  00000000 
d000c30e l       .text  00000000 
d000c314 l       .text  00000000 
d000c318 l       .text  00000000 
d000c318 l       .text  00000000 
d000c31c l       .text  00000000 
d000c31c l       .text  00000000 
d000c320 l       .text  00000000 
d000c322 l       .text  00000000 
d000c322 l       .text  00000000 
d000c326 l       .text  00000000 
d000c326 l       .text  00000000 
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
d000c32a l       .text  00000000 
d000c32a l       .text  00000000 
d000c32e l       .text  00000000 
d000c32e l       .text  00000000 
d000c330 l       .text  00000000 
d000c334 l       .text  00000000 
d000c334 l       .text  00000000 
d000c336 l       .text  00000000 
d000c338 l       .text  00000000 
d000c33e l       .text  00000000 
d000c340 l       .text  00000000 
d000c34a l       .text  00000000 
d000c34a l       .text  00000000 
00006a58 l       .debug_loc     00000000 
00006a7e l       .debug_loc     00000000 
00006aa4 l       .debug_loc     00000000 
00006aca l       .debug_loc     00000000 
00006af0 l       .debug_loc     00000000 
00006b23 l       .debug_loc     00000000 
00006b49 l       .debug_loc     00000000 
00006b64 l       .debug_loc     00000000 
00006ba2 l       .debug_loc     00000000 
00006bcc l       .debug_loc     00000000 
00006be7 l       .debug_loc     00000000 
00006c0d l       .debug_loc     00000000 
00006c33 l       .debug_loc     00000000 
00006c66 l       .debug_loc     00000000 
00006c81 l       .debug_loc     00000000 
00006cba l       .debug_loc     00000000 
00006ced l       .debug_loc     00000000 
00006d13 l       .debug_loc     00000000 
00006d46 l       .debug_loc     00000000 
00006d61 l       .debug_loc     00000000 
00006d87 l       .debug_loc     00000000 
00006dad l       .debug_loc     00000000 
00006dd3 l       .debug_loc     00000000 
00006df9 l       .debug_loc     00000000 
00006e20 l       .debug_loc     00000000 
00006e95 l       .debug_loc     00000000 
00006eb0 l       .debug_loc     00000000 
00006f1a l       .debug_loc     00000000 
00006f50 l       .debug_loc     00000000 
00006f76 l       .debug_loc     00000000 
00006fa9 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000060fa l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000a78 l       .debug_ranges  00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00006131 l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
00001311 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00006147 l       .debug_str     00000000 
000060a6 l       .debug_str     00000000 
00001943 l       .debug_str     00000000 
0000209a l       .debug_str     00000000 
00006155 l       .debug_str     00000000 
00006166 l       .debug_str     00000000 
0000616d l       .debug_str     00000000 
00006172 l       .debug_str     00000000 
000060ad l       .debug_str     00000000 
00006186 l       .debug_str     00000000 
00000a18 l       .debug_ranges  00000000 
00000a30 l       .debug_ranges  00000000 
00000a48 l       .debug_ranges  00000000 
0000586c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000617d l       .debug_str     00000000 
00003854 l       .debug_str     00000000 
00002a5f l       .debug_str     00000000 
0000618a l       .debug_str     00000000 
0000618f l       .debug_str     00000000 
00006193 l       .debug_str     00000000 
00001947 l       .debug_str     00000000 
00000a60 l       .debug_ranges  00000000 
00000afb l       .debug_str     00000000 
00000a68 l       .debug_frame   00000000 
d000c218 l       .text  00000000 
d000c34a l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_otbn.c
d000c34a l       .text  00000000 
d000c34a l       .text  00000000 
d000c34a l       .text  00000000 
d000c34c l       .text  00000000 
d000c358 l       .text  00000000 
d000c35a l       .text  00000000 
d000c35c l       .text  00000000 
d000c35e l       .text  00000000 
d000c35e l       .text  00000000 
d000c362 l       .text  00000000 
d000dba0 l     O .rodata        00000010 kOtbnAppRsa
d000c362 l       .text  00000000 
d000c36a l       .text  00000000 
d000c36a l       .text  00000000 
d000c380 l       .text  00000000 
d000c380 l       .text  00000000 
d000c382 l       .text  00000000 
d000c382 l       .text  00000000 
d000c386 l       .text  00000000 
d000c386 l       .text  00000000 
d000c38a l       .text  00000000 
d000c396 l       .text  00000000 
d000c396 l       .text  00000000 
d000c39a l       .text  00000000 
d000c3a4 l       .text  00000000 
d000c3a4 l       .text  00000000 
d000c3a6 l       .text  00000000 
d000c3a6 l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3ba l       .text  00000000 
d000c3ba l       .text  00000000 
d000c3be l       .text  00000000 
d000c3c8 l       .text  00000000 
d000c3c8 l       .text  00000000 
d000c3ca l       .text  00000000 
d000c3ca l       .text  00000000 
d000c3ce l       .text  00000000 
d000c3da l       .text  00000000 
d000c3da l       .text  00000000 
d000c3de l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3ea l       .text  00000000 
d000c3ea l       .text  00000000 
d000c3ee l       .text  00000000 
d000c3ee l       .text  00000000 
d000c3f2 l       .text  00000000 
d000c3fe l       .text  00000000 
d000c3fe l       .text  00000000 
d000c400 l       .text  00000000 
d000c402 l       .text  00000000 
d000c402 l       .text  00000000 
d000c404 l       .text  00000000 
d000c404 l       .text  00000000 
d000c408 l       .text  00000000 
d000c414 l       .text  00000000 
d000c414 l       .text  00000000 
d000c416 l       .text  00000000 
d000c418 l       .text  00000000 
d000c418 l       .text  00000000 
d000c41a l       .text  00000000 
d000c41a l       .text  00000000 
d000c42a l       .text  00000000 
d000c42a l       .text  00000000 
d000c42e l       .text  00000000 
d000c42e l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c438 l       .text  00000000 
d000c438 l       .text  00000000 
d000c43c l       .text  00000000 
d000c43c l       .text  00000000 
d000c444 l       .text  00000000 
d000c450 l       .text  00000000 
d000c45c l       .text  00000000 
d000c45c l       .text  00000000 
d000c460 l       .text  00000000 
d000c46a l       .text  00000000 
d000c46a l       .text  00000000 
d000c46c l       .text  00000000 
d000c470 l       .text  00000000 
d000c472 l       .text  00000000 
d000c47a l       .text  00000000 
d000c47a l       .text  00000000 
d000c47a l       .text  00000000 
d000c47a l       .text  00000000 
d000c47a l       .text  00000000 
d000c47c l       .text  00000000 
d000c484 l       .text  00000000 
d000c486 l       .text  00000000 
d000c488 l       .text  00000000 
d000c48a l       .text  00000000 
d000c48a l       .text  00000000 
d000c492 l       .text  00000000 
d000c492 l       .text  00000000 
d000c496 l       .text  00000000 
d000c49e l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a2 l       .text  00000000 
d000c4a8 l       .text  00000000 
d000c4a8 l       .text  00000000 
d000c4b0 l       .text  00000000 
d000c4b2 l       .text  00000000 
d000c4b4 l       .text  00000000 
d000c4b6 l       .text  00000000 
d000c4bc l       .text  00000000 
d000c4bc l       .text  00000000 
00006fc4 l       .debug_loc     00000000 
00007021 l       .debug_loc     00000000 
0000707e l       .debug_loc     00000000 
000070db l       .debug_loc     00000000 
00007101 l       .debug_loc     00000000 
0000711c l       .debug_loc     00000000 
00007137 l       .debug_loc     00000000 
0000715d l       .debug_loc     00000000 
00007178 l       .debug_loc     00000000 
00007193 l       .debug_loc     00000000 
000071b9 l       .debug_loc     00000000 
000071d4 l       .debug_loc     00000000 
000071fa l       .debug_loc     00000000 
00007215 l       .debug_loc     00000000 
0000723b l       .debug_loc     00000000 
00007256 l       .debug_loc     00000000 
0000727c l       .debug_loc     00000000 
00007297 l       .debug_loc     00000000 
000072bd l       .debug_loc     00000000 
000072d8 l       .debug_loc     00000000 
00007309 l       .debug_loc     00000000 
0000733a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006198 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000a90 l       .debug_ranges  00000000 
000061cf l       .debug_str     00000000 
000061e0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000061ec l       .debug_str     00000000 
000061fd l       .debug_str     00000000 
0000620e l       .debug_str     00000000 
00006220 l       .debug_str     00000000 
00006267 l       .debug_str     00000000 
0000625e l       .debug_str     00000000 
0000622c l       .debug_str     00000000 
00006237 l       .debug_str     00000000 
00006240 l       .debug_str     00000000 
00006250 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00006272 l       .debug_str     00000000 
00006287 l       .debug_str     00000000 
0000629d l       .debug_str     00000000 
000062b5 l       .debug_str     00000000 
00006010 l       .debug_str     00000000 
00006025 l       .debug_str     00000000 
0000603b l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000062cd l       .debug_str     00000000 
00006397 l       .debug_str     00000000 
000023ad l       .debug_str     00000000 
00006308 l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00006301 l       .debug_str     00000000 
0000633c l       .debug_str     00000000 
000062e8 l       .debug_str     00000000 
000062f6 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000630c l       .debug_str     00000000 
000063a4 l       .debug_str     00000000 
000063bd l       .debug_str     00000000 
00000d6f l       .debug_str     00000000 
000063c8 l       .debug_str     00000000 
0000207d l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00006328 l       .debug_str     00000000 
00006332 l       .debug_str     00000000 
00006340 l       .debug_str     00000000 
00006357 l       .debug_str     00000000 
00006368 l       .debug_str     00000000 
00006383 l       .debug_str     00000000 
000060c4 l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
00006186 l       .debug_str     00000000 
000060a6 l       .debug_str     00000000 
0000639c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
00000ac8 l       .debug_frame   00000000 
d000c47a l       .text  00000000 
d000c4bc l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn_util.c
d000c4bc l       .text  00000000 
d000c4bc l       .text  00000000 
d000c4bc l       .text  00000000 
d000c4bc l       .text  00000000 
d000c4d6 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4da l       .text  00000000 
d000c4ec l       .text  00000000 
d000c4ee l       .text  00000000 
d000c4ee l       .text  00000000 
d000c4f0 l       .text  00000000 
d000c4f4 l       .text  00000000 
d000c4f4 l       .text  00000000 
d000c4fc l       .text  00000000 
d000c500 l       .text  00000000 
d000c502 l       .text  00000000 
d000c504 l       .text  00000000 
d000c504 l       .text  00000000 
d000c508 l       .text  00000000 
d000c508 l       .text  00000000 
d000c50a l       .text  00000000 
d000c50c l       .text  00000000 
d000c50c l       .text  00000000 
d000c50c l       .text  00000000 
d000c50c l       .text  00000000 
d000c510 l       .text  00000000 
d000c510 l       .text  00000000 
d000c514 l       .text  00000000 
d000c520 l       .text  00000000 
d000c520 l       .text  00000000 
d000c524 l       .text  00000000 
d000c528 l       .text  00000000 
d000c528 l       .text  00000000 
d000c52c l       .text  00000000 
d000c530 l       .text  00000000 
d000c534 l       .text  00000000 
d000c538 l       .text  00000000 
d000c538 l       .text  00000000 
d000c53a l       .text  00000000 
d000c53c l       .text  00000000 
d000c53c l       .text  00000000 
d000c53c l       .text  00000000 
d000c53c l       .text  00000000 
d000c540 l       .text  00000000 
d000c540 l       .text  00000000 
d000c544 l       .text  00000000 
d000c550 l       .text  00000000 
d000c550 l       .text  00000000 
d000c552 l       .text  00000000 
d000c552 l       .text  00000000 
d000c556 l       .text  00000000 
d000c55a l       .text  00000000 
d000c55a l       .text  00000000 
d000c55e l       .text  00000000 
d000c560 l       .text  00000000 
d000c560 l       .text  00000000 
d000c560 l       .text  00000000 
d000c560 l       .text  00000000 
d000c564 l       .text  00000000 
d000c570 l       .text  00000000 
d000c570 l       .text  00000000 
d000c572 l       .text  00000000 
d000c572 l       .text  00000000 
d000c574 l       .text  00000000 
d000c574 l       .text  00000000 
d000c578 l       .text  00000000 
d000c578 l       .text  00000000 
d000c580 l       .text  00000000 
d000c58c l       .text  00000000 
d000c58c l       .text  00000000 
d000c58e l       .text  00000000 
d000c58e l       .text  00000000 
d000c592 l       .text  00000000 
d000c596 l       .text  00000000 
d000c596 l       .text  00000000 
d000c598 l       .text  00000000 
d000c598 l       .text  00000000 
d000c59c l       .text  00000000 
d000c59c l       .text  00000000 
d000c5a0 l       .text  00000000 
d000c5ac l       .text  00000000 
d000c5ac l       .text  00000000 
d000c5c4 l       .text  00000000 
d000c5ca l       .text  00000000 
d000c5cc l       .text  00000000 
d000c5da l       .text  00000000 
d000c5de l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5e6 l       .text  00000000 
d000c5e6 l       .text  00000000 
d000c5e8 l       .text  00000000 
d000c5ea l       .text  00000000 
d000c5ea l       .text  00000000 
d000c5ea l       .text  00000000 
d000c5ee l       .text  00000000 
d000c5ee l       .text  00000000 
d000c5f2 l       .text  00000000 
d000c5f4 l       .text  00000000 
d000c600 l       .text  00000000 
d000c602 l       .text  00000000 
d000c602 l       .text  00000000 
d000c60a l       .text  00000000 
d000c60c l       .text  00000000 
d000c612 l       .text  00000000 
d000c612 l       .text  00000000 
d000c616 l       .text  00000000 
d000c61a l       .text  00000000 
d000c620 l       .text  00000000 
d000c620 l       .text  00000000 
d000c620 l       .text  00000000 
d000c620 l       .text  00000000 
d000c620 l       .text  00000000 
d000c622 l       .text  00000000 
d000c624 l       .text  00000000 
d000c624 l       .text  00000000 
d000c626 l       .text  00000000 
d000c628 l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c62c l       .text  00000000 
d000c62e l       .text  00000000 
d000c62e l       .text  00000000 
d000c630 l       .text  00000000 
d000c632 l       .text  00000000 
d000c632 l       .text  00000000 
d000c632 l       .text  00000000 
0000736b l       .debug_loc     00000000 
00007391 l       .debug_loc     00000000 
000073b9 l       .debug_loc     00000000 
000073df l       .debug_loc     00000000 
000073fa l       .debug_loc     00000000 
00007436 l       .debug_loc     00000000 
00007451 l       .debug_loc     00000000 
00007477 l       .debug_loc     00000000 
00007492 l       .debug_loc     00000000 
000074b8 l       .debug_loc     00000000 
000074d3 l       .debug_loc     00000000 
000074f9 l       .debug_loc     00000000 
00007514 l       .debug_loc     00000000 
0000753a l       .debug_loc     00000000 
00007555 l       .debug_loc     00000000 
0000757b l       .debug_loc     00000000 
00007596 l       .debug_loc     00000000 
000075b1 l       .debug_loc     00000000 
000075e2 l       .debug_loc     00000000 
00007608 l       .debug_loc     00000000 
0000762e l       .debug_loc     00000000 
00007649 l       .debug_loc     00000000 
0000766f l       .debug_loc     00000000 
00007695 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000063da l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000ac0 l       .debug_ranges  00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006585 l       .debug_str     00000000 
00006404 l       .debug_str     00000000 
00006418 l       .debug_str     00000000 
00006430 l       .debug_str     00000000 
00006448 l       .debug_str     00000000 
0000645e l       .debug_str     00000000 
00006476 l       .debug_str     00000000 
00006487 l       .debug_str     00000000 
000064a5 l       .debug_str     00000000 
000064c3 l       .debug_str     00000000 
000064e0 l       .debug_str     00000000 
000064fd l       .debug_str     00000000 
0000651d l       .debug_str     00000000 
0000653a l       .debug_str     00000000 
0000655a l       .debug_str     00000000 
00006574 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
00006593 l       .debug_str     00000000 
000065a7 l       .debug_str     00000000 
00006328 l       .debug_str     00000000 
00005c97 l       .debug_str     00000000 
000065c6 l       .debug_str     00000000 
0000633c l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00006267 l       .debug_str     00000000 
0000625e l       .debug_str     00000000 
0000622c l       .debug_str     00000000 
00006237 l       .debug_str     00000000 
00006240 l       .debug_str     00000000 
00006250 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00006332 l       .debug_str     00000000 
00006659 l       .debug_str     00000000 
00006668 l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00000aa8 l       .debug_ranges  00000000 
000065df l       .debug_str     00000000 
000065f7 l       .debug_str     00000000 
0000660a l       .debug_str     00000000 
0000661a l       .debug_str     00000000 
0000662d l       .debug_str     00000000 
00006357 l       .debug_str     00000000 
00006677 l       .debug_str     00000000 
0000663d l       .debug_str     00000000 
00006340 l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
000023ad l       .debug_str     00000000 
000023a8 l       .debug_str     00000000 
00006383 l       .debug_str     00000000 
0000667b l       .debug_str     00000000 
0000664a l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00006301 l       .debug_str     00000000 
00006397 l       .debug_str     00000000 
000062e8 l       .debug_str     00000000 
000062f6 l       .debug_str     00000000 
0000121f l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
000061e0 l       .debug_str     00000000 
00000b18 l       .debug_frame   00000000 
d000c4d8 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c620 l       .text  00000000 
d000c62a l       .text  00000000 
d000c632 l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn.c
d000c632 l       .text  00000000 
d000c632 l       .text  00000000 
d000c632 l       .text  00000000 
d000c634 l       .text  00000000 
d000c634 l       .text  00000000 
d000c634 l       .text  00000000 
d000c634 l       .text  00000000 
d000c638 l       .text  00000000 
d000c638 l       .text  00000000 
d000c638 l       .text  00000000 
d000c638 l       .text  00000000 
d000c640 l       .text  00000000 
d000c640 l       .text  00000000 
d000c642 l       .text  00000000 
d000c642 l       .text  00000000 
d000c644 l       .text  00000000 
d000c644 l       .text  00000000 
d000c646 l       .text  00000000 
d000c646 l       .text  00000000 
d000c648 l       .text  00000000 
d000c648 l       .text  00000000 
d000c64c l       .text  00000000 
d000c64c l       .text  00000000 
d000c64e l       .text  00000000 
d000c652 l       .text  00000000 
d000c652 l       .text  00000000 
d000c654 l       .text  00000000 
d000c654 l       .text  00000000 
d000c658 l       .text  00000000 
d000c658 l       .text  00000000 
d000c65c l       .text  00000000 
d000c65c l       .text  00000000 
d000c66c l       .text  00000000 
d000c66c l       .text  00000000 
d000c66e l       .text  00000000 
d000c66e l       .text  00000000 
d000c678 l       .text  00000000 
d000c67a l       .text  00000000 
d000c67e l       .text  00000000 
d000c682 l       .text  00000000 
d000c684 l       .text  00000000 
d000c684 l       .text  00000000 
d000c684 l       .text  00000000 
d000c684 l       .text  00000000 
d000c684 l       .text  00000000 
d000c686 l       .text  00000000 
d000c686 l       .text  00000000 
d000c686 l       .text  00000000 
d000c688 l       .text  00000000 
d000c68e l       .text  00000000 
d000c694 l       .text  00000000 
d000c694 l       .text  00000000 
d000c69c l       .text  00000000 
d000c69c l       .text  00000000 
d000c6a6 l     F .text  00000076 otbn_cmd_run
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a8 l       .text  00000000 
d000c6a8 l       .text  00000000 
d000c6b0 l       .text  00000000 
d000c6b0 l       .text  00000000 
d000c6b2 l       .text  00000000 
d000c6b2 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b8 l       .text  00000000 
d000c6b8 l       .text  00000000 
d000c6bc l       .text  00000000 
d000c6bc l       .text  00000000 
d000c6c8 l       .text  00000000 
d000c6c8 l       .text  00000000 
d000c6ca l       .text  00000000 
d000c6ca l       .text  00000000 
d000c6ce l       .text  00000000 
d000c6ce l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6d2 l       .text  00000000 
d000c6d6 l       .text  00000000 
d000c6d6 l       .text  00000000 
d000c6e2 l       .text  00000000 
d000c6e2 l       .text  00000000 
d000c6e4 l       .text  00000000 
d000c6e4 l       .text  00000000 
d000c6e6 l       .text  00000000 
d000c6e6 l       .text  00000000 
d000c6e8 l       .text  00000000 
d000c6e8 l       .text  00000000 
d000c6ea l       .text  00000000 
d000c6ea l       .text  00000000 
d000c6ec l       .text  00000000 
d000c6ec l       .text  00000000 
d000c6ec l       .text  00000000 
d000c6f0 l       .text  00000000 
d000c6f0 l       .text  00000000 
d000c6f4 l       .text  00000000 
d000c6f4 l       .text  00000000 
d000c6f4 l       .text  00000000 
d000c6f4 l       .text  00000000 
d000c6f6 l       .text  00000000 
d000c6fa l       .text  00000000 
d000c70a l       .text  00000000 
d000c70a l       .text  00000000 
d000c70c l       .text  00000000 
d000c70c l       .text  00000000 
d000c718 l       .text  00000000 
d000c718 l       .text  00000000 
d000c71a l       .text  00000000 
d000c71c l       .text  00000000 
d000c71c l       .text  00000000 
d000c71c l       .text  00000000 
d000c71c l       .text  00000000 
d000c71c l       .text  00000000 
d000c720 l       .text  00000000 
d000c720 l       .text  00000000 
d000c722 l       .text  00000000 
d000c722 l       .text  00000000 
d000c724 l       .text  00000000 
d000c724 l       .text  00000000 
d000c724 l       .text  00000000 
d000c724 l       .text  00000000 
d000c724 l       .text  00000000 
d000c72c l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c732 l       .text  00000000 
d000c732 l       .text  00000000 
d000c732 l       .text  00000000 
d000c734 l       .text  00000000 
d000c738 l       .text  00000000 
d000c746 l       .text  00000000 
d000c74e l       .text  00000000 
d000c74e l       .text  00000000 
d000c75c l       .text  00000000 
d000c75c l       .text  00000000 
d000c75e l       .text  00000000 
d000c75e l       .text  00000000 
d000c762 l       .text  00000000 
d000c762 l       .text  00000000 
d000c766 l       .text  00000000 
d000c776 l       .text  00000000 
d000c776 l       .text  00000000 
d000c778 l       .text  00000000 
d000c786 l     F .text  00000068 otbn_write
d000c778 l       .text  00000000 
d000c77a l       .text  00000000 
d000c77a l       .text  00000000 
d000c77e l       .text  00000000 
d000c786 l       .text  00000000 
d000c786 l       .text  00000000 
d000c786 l       .text  00000000 
d000c786 l       .text  00000000 
d000c786 l       .text  00000000 
d000c788 l       .text  00000000 
d000c790 l       .text  00000000 
d000c792 l       .text  00000000 
d000c794 l       .text  00000000 
d000c796 l       .text  00000000 
d000c796 l       .text  00000000 
d000c798 l       .text  00000000 
d000c798 l       .text  00000000 
d000c79a l       .text  00000000 
d000c79a l       .text  00000000 
d000c79c l       .text  00000000 
d000c79c l       .text  00000000 
d000c7a0 l       .text  00000000 
d000c7a0 l       .text  00000000 
d000c7a2 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7aa l       .text  00000000 
d000c7b0 l       .text  00000000 
d000c7b2 l       .text  00000000 
d000c7b4 l       .text  00000000 
d000c7b4 l       .text  00000000 
d000c7b6 l       .text  00000000 
d000c7b6 l       .text  00000000 
d000c7b8 l       .text  00000000 
d000c7b8 l       .text  00000000 
d000c7ba l       .text  00000000 
d000c7ba l       .text  00000000 
d000c7be l       .text  00000000 
d000c7be l       .text  00000000 
d000c7c0 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c4 l       .text  00000000 
d000c7d0 l       .text  00000000 
d000c7d0 l       .text  00000000 
d000c7d2 l       .text  00000000 
d000c7d2 l       .text  00000000 
d000c7d6 l       .text  00000000 
d000c7d6 l       .text  00000000 
d000c7e2 l       .text  00000000 
d000c7e4 l       .text  00000000 
d000c7e6 l       .text  00000000 
d000c7e8 l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7f6 l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fe l       .text  00000000 
d000c7fe l       .text  00000000 
d000c7fe l       .text  00000000 
d000c800 l       .text  00000000 
d000c804 l       .text  00000000 
d000c816 l       .text  00000000 
d000c81e l       .text  00000000 
d000c81e l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c82e l       .text  00000000 
d000c82e l       .text  00000000 
d000c832 l       .text  00000000 
d000c832 l       .text  00000000 
d000c836 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c848 l       .text  00000000 
d000c848 l       .text  00000000 
d000c84a l       .text  00000000 
d000c84a l       .text  00000000 
d000c84e l       .text  00000000 
d000c856 l       .text  00000000 
d000c856 l       .text  00000000 
d000c856 l       .text  00000000 
d000c856 l       .text  00000000 
d000c856 l       .text  00000000 
d000c856 l       .text  00000000 
d000c85a l       .text  00000000 
d000c86c l       .text  00000000 
d000c874 l       .text  00000000 
d000c874 l       .text  00000000 
d000c882 l       .text  00000000 
d000c882 l       .text  00000000 
d000c884 l       .text  00000000 
d000c884 l       .text  00000000 
d000c888 l       .text  00000000 
d000c888 l       .text  00000000 
d000c88e l       .text  00000000 
d000c88e l       .text  00000000 
d000c89a l       .text  00000000 
d000c89a l       .text  00000000 
d000c89a l       .text  00000000 
d000c89a l       .text  00000000 
d000c89c l       .text  00000000 
d000c89c l       .text  00000000 
d000c8a0 l       .text  00000000 
d000c8a0 l       .text  00000000 
d000c8a6 l       .text  00000000 
d000c8a8 l       .text  00000000 
d000c8a8 l       .text  00000000 
d000c8aa l       .text  00000000 
d000c8aa l       .text  00000000 
d000c8ac l       .text  00000000 
d000c8ae l       .text  00000000 
d000c8ae l       .text  00000000 
d000c8b0 l       .text  00000000 
d000c8b0 l       .text  00000000 
d000c8b8 l       .text  00000000 
d000c8b8 l       .text  00000000 
d000c8c6 l       .text  00000000 
d000c8c6 l       .text  00000000 
d000c8c8 l       .text  00000000 
d000c8c8 l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8cc l       .text  00000000 
000076bb l       .debug_loc     00000000 
000076e3 l       .debug_loc     00000000 
00007709 l       .debug_loc     00000000 
0000772f l       .debug_loc     00000000 
00007755 l       .debug_loc     00000000 
0000777b l       .debug_loc     00000000 
000077a1 l       .debug_loc     00000000 
000077e1 l       .debug_loc     00000000 
000077fc l       .debug_loc     00000000 
00007822 l       .debug_loc     00000000 
00007849 l       .debug_loc     00000000 
00007870 l       .debug_loc     00000000 
000078ac l       .debug_loc     00000000 
000078c7 l       .debug_loc     00000000 
000078ed l       .debug_loc     00000000 
00007908 l       .debug_loc     00000000 
00007923 l       .debug_loc     00000000 
0000793e l       .debug_loc     00000000 
00007959 l       .debug_loc     00000000 
00007974 l       .debug_loc     00000000 
0000799a l       .debug_loc     00000000 
000079c0 l       .debug_loc     00000000 
000079e6 l       .debug_loc     00000000 
00007a0c l       .debug_loc     00000000 
00007a33 l       .debug_loc     00000000 
00007a6f l       .debug_loc     00000000 
00007aa0 l       .debug_loc     00000000 
00007ac6 l       .debug_loc     00000000 
00007ae1 l       .debug_loc     00000000 
00007afc l       .debug_loc     00000000 
00007b17 l       .debug_loc     00000000 
00007b32 l       .debug_loc     00000000 
00007b58 l       .debug_loc     00000000 
00007b7e l       .debug_loc     00000000 
00007ba4 l       .debug_loc     00000000 
00007bbf l       .debug_loc     00000000 
00007be5 l       .debug_loc     00000000 
00007c22 l       .debug_loc     00000000 
00007c49 l       .debug_loc     00000000 
00007c86 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006685 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b78 l       .debug_ranges  00000000 
000066b2 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000066c5 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00006761 l       .debug_str     00000000 
000066d8 l       .debug_str     00000000 
000066e8 l       .debug_str     00000000 
000066ff l       .debug_str     00000000 
0000671a l       .debug_str     00000000 
00006735 l       .debug_str     00000000 
0000674f l       .debug_str     00000000 
000067a5 l       .debug_str     00000000 
0000676d l       .debug_str     00000000 
0000677d l       .debug_str     00000000 
00006791 l       .debug_str     00000000 
00006585 l       .debug_str     00000000 
00006404 l       .debug_str     00000000 
00006418 l       .debug_str     00000000 
00006430 l       .debug_str     00000000 
00006448 l       .debug_str     00000000 
0000645e l       .debug_str     00000000 
00006476 l       .debug_str     00000000 
00006487 l       .debug_str     00000000 
000064a5 l       .debug_str     00000000 
000064c3 l       .debug_str     00000000 
000064e0 l       .debug_str     00000000 
000064fd l       .debug_str     00000000 
0000651d l       .debug_str     00000000 
0000653a l       .debug_str     00000000 
0000655a l       .debug_str     00000000 
00006574 l       .debug_str     00000000 
00006843 l       .debug_str     00000000 
000067ae l       .debug_str     00000000 
000067bd l       .debug_str     00000000 
00001db3 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
00001611 l       .debug_str     00000000 
0000658a l       .debug_str     00000000 
00002ee1 l       .debug_str     00000000 
00000af0 l       .debug_ranges  00000000 
00006850 l       .debug_str     00000000 
000067c9 l       .debug_str     00000000 
00006875 l       .debug_str     00000000 
000023ad l       .debug_str     00000000 
0000666d l       .debug_str     00000000 
00002561 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00000b10 l       .debug_ranges  00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
000065df l       .debug_str     00000000 
000067cf l       .debug_str     00000000 
00002b4e l       .debug_str     00000000 
000067f1 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
0000663d l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000067fa l       .debug_str     00000000 
0000680c l       .debug_str     00000000 
00006368 l       .debug_str     00000000 
000065f7 l       .debug_str     00000000 
0000681c l       .debug_str     00000000 
0000682d l       .debug_str     00000000 
0000683a l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
0000660a l       .debug_str     00000000 
00001320 l       .debug_str     00000000 
00000b9e l       .debug_str     00000000 
0000661a l       .debug_str     00000000 
0000662d l       .debug_str     00000000 
0000664a l       .debug_str     00000000 
000023a8 l       .debug_str     00000000 
00000b28 l       .debug_ranges  00000000 
00000b40 l       .debug_ranges  00000000 
0000685b l       .debug_str     00000000 
00000b60 l       .debug_ranges  00000000 
0000686a l       .debug_str     00000000 
00000b9c l       .debug_frame   00000000 
d000c684 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c71c l       .text  00000000 
d000c724 l       .text  00000000 
d000c730 l       .text  00000000 
d000c786 l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7fc l       .text  00000000 
d000c856 l       .text  00000000 
d000c8cc l       .text  00000000 
00000000 l    df *ABS*  00000000 rnd.c
d000c8cc l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8ce l       .text  00000000 
d000c8ce l       .text  00000000 
d000c8d0 l       .text  00000000 
d000c8d6 l       .text  00000000 
d000c8d6 l       .text  00000000 
d000c8da l       .text  00000000 
d000c8de l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8e4 l       .text  00000000 
d000c8e4 l       .text  00000000 
d000c8e6 l       .text  00000000 
d000c8ea l       .text  00000000 
d000c8ea l       .text  00000000 
d000c8ee l       .text  00000000 
d000c8ee l       .text  00000000 
d000c8f0 l       .text  00000000 
d000c8f0 l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8f8 l       .text  00000000 
00007cad l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000687f l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000006fd l       .debug_str     00000000 
000006d8 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00000b9e l       .debug_str     00000000 
00002982 l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00000ca4 l       .debug_frame   00000000 
d000c8f8 l       .text  00000000 
00000000 l    df *ABS*  00000000 epmp_state.c
d000c8f8 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8fc l       .text  00000000 
d000c8fc l       .text  00000000 
d000c904 l       .text  00000000 
d000c908 l       .text  00000000 
d000c90c l       .text  00000000 
d000c90c l       .text  00000000 
d000c910 l       .text  00000000 
d000c910 l       .text  00000000 
d000c914 l       .text  00000000 
d000c914 l       .text  00000000 
d000c918 l       .text  00000000 
d000c918 l       .text  00000000 
d000c91a l       .text  00000000 
d000c91e l       .text  00000000 
d000c920 l       .text  00000000 
d000c924 l       .text  00000000 
d000c926 l       .text  00000000 
d000c928 l       .text  00000000 
d000c928 l       .text  00000000 
d000c92c l       .text  00000000 
d000c92c l       .text  00000000 
d000c92e l       .text  00000000 
d000c932 l       .text  00000000 
d000c934 l       .text  00000000 
d000c938 l       .text  00000000 
d000c93a l       .text  00000000 
d000c93c l       .text  00000000 
d000c93c l       .text  00000000 
d000c940 l       .text  00000000 
d000c940 l       .text  00000000 
d000c942 l       .text  00000000 
d000c946 l       .text  00000000 
d000c948 l       .text  00000000 
d000c94c l       .text  00000000 
d000c94e l       .text  00000000 
d000c950 l       .text  00000000 
d000c950 l       .text  00000000 
d000c954 l       .text  00000000 
d000c954 l       .text  00000000 
d000c956 l       .text  00000000 
d000c95a l       .text  00000000 
d000c95c l       .text  00000000 
d000c960 l       .text  00000000 
d000c962 l       .text  00000000 
d000c964 l       .text  00000000 
d000c964 l       .text  00000000 
d000c968 l       .text  00000000 
d000c968 l       .text  00000000 
d000c96a l       .text  00000000 
d000c96e l       .text  00000000 
d000c970 l       .text  00000000 
d000c974 l       .text  00000000 
d000c976 l       .text  00000000 
d000c978 l       .text  00000000 
d000c978 l       .text  00000000 
d000c97c l       .text  00000000 
d000c97c l       .text  00000000 
d000c97e l       .text  00000000 
d000c982 l       .text  00000000 
d000c984 l       .text  00000000 
d000c988 l       .text  00000000 
d000c98a l       .text  00000000 
d000c98c l       .text  00000000 
d000c98c l       .text  00000000 
d000c990 l       .text  00000000 
d000c990 l       .text  00000000 
d000c992 l       .text  00000000 
d000c996 l       .text  00000000 
d000c998 l       .text  00000000 
d000c99c l       .text  00000000 
d000c99e l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a4 l       .text  00000000 
d000c9a4 l       .text  00000000 
d000c9a6 l       .text  00000000 
d000c9aa l       .text  00000000 
d000c9ac l       .text  00000000 
d000c9b0 l       .text  00000000 
d000c9b2 l       .text  00000000 
d000c9b4 l       .text  00000000 
d000c9b4 l       .text  00000000 
d000c9b8 l       .text  00000000 
d000c9b8 l       .text  00000000 
d000c9ba l       .text  00000000 
d000c9be l       .text  00000000 
d000c9c0 l       .text  00000000 
d000c9c4 l       .text  00000000 
d000c9c6 l       .text  00000000 
d000c9c8 l       .text  00000000 
d000c9c8 l       .text  00000000 
d000c9cc l       .text  00000000 
d000c9cc l       .text  00000000 
d000c9ce l       .text  00000000 
d000c9d2 l       .text  00000000 
d000c9d4 l       .text  00000000 
d000c9d8 l       .text  00000000 
d000c9da l       .text  00000000 
d000c9dc l       .text  00000000 
d000c9dc l       .text  00000000 
d000c9e0 l       .text  00000000 
d000c9e0 l       .text  00000000 
d000c9e2 l       .text  00000000 
d000c9e6 l       .text  00000000 
d000c9e8 l       .text  00000000 
d000c9ec l       .text  00000000 
d000c9ee l       .text  00000000 
d000c9f0 l       .text  00000000 
d000c9f0 l       .text  00000000 
d000c9f4 l       .text  00000000 
d000c9f4 l       .text  00000000 
d000c9f6 l       .text  00000000 
d000c9fa l       .text  00000000 
d000c9fc l       .text  00000000 
d000ca00 l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca04 l       .text  00000000 
d000ca04 l       .text  00000000 
d000ca08 l       .text  00000000 
d000ca08 l       .text  00000000 
d000ca0a l       .text  00000000 
d000ca0e l       .text  00000000 
d000ca10 l       .text  00000000 
d000ca14 l       .text  00000000 
d000ca16 l       .text  00000000 
d000ca18 l       .text  00000000 
d000ca18 l       .text  00000000 
d000ca1c l       .text  00000000 
d000ca1c l       .text  00000000 
d000ca1e l       .text  00000000 
d000ca22 l       .text  00000000 
d000ca24 l       .text  00000000 
d000ca28 l       .text  00000000 
d000ca2a l       .text  00000000 
d000ca2c l       .text  00000000 
d000ca2c l       .text  00000000 
d000ca30 l       .text  00000000 
d000ca30 l       .text  00000000 
d000ca32 l       .text  00000000 
d000ca36 l       .text  00000000 
d000ca38 l       .text  00000000 
d000ca3c l       .text  00000000 
d000ca3e l       .text  00000000 
d000ca40 l       .text  00000000 
d000ca40 l       .text  00000000 
d000ca44 l       .text  00000000 
d000ca44 l       .text  00000000 
d000ca46 l       .text  00000000 
d000ca4a l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca50 l       .text  00000000 
d000ca52 l       .text  00000000 
d000ca54 l       .text  00000000 
d000ca54 l       .text  00000000 
d000ca58 l       .text  00000000 
d000ca58 l       .text  00000000 
d000ca5a l       .text  00000000 
d000ca5e l       .text  00000000 
d000ca60 l       .text  00000000 
d000ca64 l       .text  00000000 
d000ca66 l       .text  00000000 
d000ca68 l       .text  00000000 
d000ca68 l       .text  00000000 
d000ca6c l       .text  00000000 
d000ca6c l       .text  00000000 
d000ca6e l       .text  00000000 
d000ca72 l       .text  00000000 
d000ca74 l       .text  00000000 
d000ca78 l       .text  00000000 
d000ca7a l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca80 l       .text  00000000 
d000ca80 l       .text  00000000 
d000ca82 l       .text  00000000 
d000ca86 l       .text  00000000 
d000ca88 l       .text  00000000 
d000ca8c l       .text  00000000 
d000ca8e l       .text  00000000 
d000ca90 l       .text  00000000 
d000ca90 l       .text  00000000 
d000ca94 l       .text  00000000 
d000ca94 l       .text  00000000 
d000ca96 l       .text  00000000 
d000ca9a l       .text  00000000 
d000ca9c l       .text  00000000 
d000caa2 l       .text  00000000 
d000caa2 l       .text  00000000 
d000caa4 l       .text  00000000 
d000caa4 l       .text  00000000 
d000caa8 l       .text  00000000 
d000caa8 l       .text  00000000 
d000caaa l       .text  00000000 
d000caac l       .text  00000000 
d000caae l       .text  00000000 
d000cab2 l       .text  00000000 
d000cab4 l       .text  00000000 
d000cab4 l       .text  00000000 
d000cab6 l       .text  00000000 
d000cab6 l       .text  00000000 
d000cab8 l       .text  00000000 
d000cab8 l       .text  00000000 
d000cabc l       .text  00000000 
d000cabc l       .text  00000000 
d000cac8 l       .text  00000000 
d000cacc l       .text  00000000 
d000cacc l       .text  00000000 
d000cad0 l       .text  00000000 
d000cadc l       .text  00000000 
d000cade l       .text  00000000 
d000cade l       .text  00000000 
d000cae2 l       .text  00000000 
d000cae4 l       .text  00000000 
d000cae6 l       .text  00000000 
d000cae6 l       .text  00000000 
00007cc0 l       .debug_loc     00000000 
00007ce6 l       .debug_loc     00000000 
00007d0c l       .debug_loc     00000000 
00007d38 l       .debug_loc     00000000 
00007d58 l       .debug_loc     00000000 
00007d77 l       .debug_loc     00000000 
00007d97 l       .debug_loc     00000000 
00007dbd l       .debug_loc     00000000 
00007dd8 l       .debug_loc     00000000 
00007df3 l       .debug_loc     00000000 
00007e10 l       .debug_loc     00000000 
00007e30 l       .debug_loc     00000000 
00007e4f l       .debug_loc     00000000 
00007e6f l       .debug_loc     00000000 
00007e95 l       .debug_loc     00000000 
00007eb0 l       .debug_loc     00000000 
00007ecb l       .debug_loc     00000000 
00007ef8 l       .debug_loc     00000000 
00007f13 l       .debug_loc     00000000 
00007f33 l       .debug_loc     00000000 
00007f52 l       .debug_loc     00000000 
00007f72 l       .debug_loc     00000000 
00007f98 l       .debug_loc     00000000 
00007fd6 l       .debug_loc     00000000 
00007ff1 l       .debug_loc     00000000 
0000800c l       .debug_loc     00000000 
00008027 l       .debug_loc     00000000 
00008042 l       .debug_loc     00000000 
0000805d l       .debug_loc     00000000 
00008078 l       .debug_loc     00000000 
00008093 l       .debug_loc     00000000 
000080ae l       .debug_loc     00000000 
000080c9 l       .debug_loc     00000000 
000080e4 l       .debug_loc     00000000 
000080ff l       .debug_loc     00000000 
0000811a l       .debug_loc     00000000 
00008135 l       .debug_loc     00000000 
00008150 l       .debug_loc     00000000 
0000816b l       .debug_loc     00000000 
00008186 l       .debug_loc     00000000 
000081a1 l       .debug_loc     00000000 
000081bc l       .debug_loc     00000000 
000081d7 l       .debug_loc     00000000 
000081f2 l       .debug_loc     00000000 
0000820d l       .debug_loc     00000000 
00008233 l       .debug_loc     00000000 
0000826a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000068ab l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000be8 l       .debug_ranges  00000000 
00005c21 l       .debug_str     00000000 
00005c43 l       .debug_str     00000000 
00005c2c l       .debug_str     00000000 
00005c33 l       .debug_str     00000000 
00005c3b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000002ba l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002d1 l       .debug_str     00000000 
000002f2 l       .debug_str     00000000 
00000308 l       .debug_str     00000000 
00000324 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000355 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000385 l       .debug_str     00000000 
00000399 l       .debug_str     00000000 
000003ae l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003db l       .debug_str     00000000 
000003ef l       .debug_str     00000000 
000003ff l       .debug_str     00000000 
00000412 l       .debug_str     00000000 
0000042c l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
0000045d l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
000004ac l       .debug_str     00000000 
000004c2 l       .debug_str     00000000 
000004da l       .debug_str     00000000 
000004f2 l       .debug_str     00000000 
0000050b l       .debug_str     00000000 
00000524 l       .debug_str     00000000 
0000053d l       .debug_str     00000000 
00000556 l       .debug_str     00000000 
00000575 l       .debug_str     00000000 
00000593 l       .debug_str     00000000 
000005ad l       .debug_str     00000000 
000005c6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
00000600 l       .debug_str     00000000 
0000061c l       .debug_str     00000000 
00000638 l       .debug_str     00000000 
00000654 l       .debug_str     00000000 
0000066b l       .debug_str     00000000 
00000684 l       .debug_str     00000000 
0000069a l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
0000113e l       .debug_str     00000000 
000068d6 l       .debug_str     00000000 
000068e3 l       .debug_str     00000000 
0000296e l       .debug_str     00000000 
000068ea l       .debug_str     00000000 
00004605 l       .debug_str     00000000 
00000b0f l       .debug_str     00000000 
00005d8f l       .debug_str     00000000 
00005cf9 l       .debug_str     00000000 
00005d0b l       .debug_str     00000000 
00005d23 l       .debug_str     00000000 
00005d3b l       .debug_str     00000000 
00005d54 l       .debug_str     00000000 
00005d6f l       .debug_str     00000000 
00005dcf l       .debug_str     00000000 
00005d99 l       .debug_str     00000000 
00005da6 l       .debug_str     00000000 
00005db3 l       .debug_str     00000000 
00005dc0 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000b2c l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00005dd9 l       .debug_str     00000000 
000018da l       .debug_str     00000000 
0000103f l       .debug_str     00000000 
00005d94 l       .debug_str     00000000 
00005e19 l       .debug_str     00000000 
00005dfe l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000afb l       .debug_str     00000000 
00005df2 l       .debug_str     00000000 
00001046 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
0000624a l       .debug_str     00000000 
0000625a l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
00000cd0 l       .debug_frame   00000000 
d000cae6 l       .text  00000000 
00000000 l    df *ABS*  00000000 hmac.c
d000cae6 l       .text  00000000 
d000cae6 l       .text  00000000 
d000cae6 l       .text  00000000 
d000caea l       .text  00000000 
d000caea l       .text  00000000 
d000caee l       .text  00000000 
d000caee l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf8 l       .text  00000000 
d000caf8 l       .text  00000000 
d000cafc l       .text  00000000 
d000cafc l       .text  00000000 
d000cafe l       .text  00000000 
d000cafe l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb00 l       .text  00000000 
d000cb04 l       .text  00000000 
d000cb0e l       .text  00000000 
d000cb18 l       .text  00000000 
d000cb18 l       .text  00000000 
d000cb1c l       .text  00000000 
d000cb20 l       .text  00000000 
d000cb20 l       .text  00000000 
d000cb24 l       .text  00000000 
d000cb24 l       .text  00000000 
d000cb26 l       .text  00000000 
d000cb2a l       .text  00000000 
d000cb34 l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb3e l       .text  00000000 
d000cb40 l       .text  00000000 
d000cb44 l       .text  00000000 
d000cb4a l       .text  00000000 
d000cb4a l       .text  00000000 
d000cb4c l       .text  00000000 
d000cb4c l       .text  00000000 
d000cb50 l       .text  00000000 
d000cb50 l       .text  00000000 
d000cb52 l       .text  00000000 
d000cb52 l       .text  00000000 
d000cb54 l       .text  00000000 
d000cb54 l       .text  00000000 
d000cb58 l       .text  00000000 
d000cb58 l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb62 l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb66 l       .text  00000000 
d000cb66 l       .text  00000000 
d000cb6c l       .text  00000000 
d000cb6c l       .text  00000000 
d000cb6e l       .text  00000000 
d000cb6e l       .text  00000000 
d000cb6e l       .text  00000000 
d000cb6e l       .text  00000000 
d000cb6e l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb7a l       .text  00000000 
d000cb7a l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb80 l       .text  00000000 
d000cb80 l       .text  00000000 
d000cb82 l       .text  00000000 
d000cb88 l       .text  00000000 
d000cb88 l       .text  00000000 
d000cb8e l       .text  00000000 
d000cb8e l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb94 l       .text  00000000 
d000cb94 l       .text  00000000 
d000cb9a l       .text  00000000 
d000cb9a l       .text  00000000 
d000cb9c l       .text  00000000 
d000cb9e l       .text  00000000 
d000cba2 l       .text  00000000 
d000cba2 l       .text  00000000 
d000cba4 l       .text  00000000 
d000cba4 l       .text  00000000 
00008290 l       .debug_loc     00000000 
000082b8 l       .debug_loc     00000000 
000082de l       .debug_loc     00000000 
0000831a l       .debug_loc     00000000 
00008335 l       .debug_loc     00000000 
0000835c l       .debug_loc     00000000 
00008377 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000068ef l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000c28 l       .debug_ranges  00000000 
000001d6 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
0000691c l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000fc0 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
0000692c l       .debug_str     00000000 
00000c10 l       .debug_ranges  00000000 
00006936 l       .debug_str     00000000 
00001d38 l       .debug_str     00000000 
00001dc8 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000010bd l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010c7 l       .debug_str     00000000 
00000ff3 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000d24 l       .debug_frame   00000000 
d000cb00 l       .text  00000000 
d000cb6e l       .text  00000000 
d000cba4 l       .text  00000000 
00000000 l    df *ABS*  00000000 lifecycle.c
d000cba4 l       .text  00000000 
d000cba4 l       .text  00000000 
d000cba4 l       .text  00000000 
d000cba6 l       .text  00000000 
d000cba8 l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb8 l       .text  00000000 
d000cbb8 l       .text  00000000 
d000cbba l       .text  00000000 
d000cbba l       .text  00000000 
d000cbbc l       .text  00000000 
d000cbbc l       .text  00000000 
d000cbc4 l       .text  00000000 
d000cbc4 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbd0 l       .text  00000000 
d000cbd4 l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbe0 l       .text  00000000 
d000cbe8 l       .text  00000000 
d000cbec l       .text  00000000 
d000cbfa l       .text  00000000 
d000cc02 l       .text  00000000 
d000cc06 l       .text  00000000 
d000cc0e l       .text  00000000 
d000cc12 l       .text  00000000 
d000cc1a l       .text  00000000 
d000cc1e l       .text  00000000 
d000cc2c l       .text  00000000 
d000cc30 l       .text  00000000 
d000cc34 l       .text  00000000 
d000cc3c l       .text  00000000 
d000cc40 l       .text  00000000 
d000cc4e l       .text  00000000 
d000cc52 l       .text  00000000 
d000cc56 l       .text  00000000 
d000cc5e l       .text  00000000 
d000cc62 l       .text  00000000 
d000cc72 l       .text  00000000 
d000cc72 l       .text  00000000 
d000cc78 l       .text  00000000 
d000cc78 l       .text  00000000 
d000cc86 l       .text  00000000 
d000cc94 l       .text  00000000 
d000cc9c l       .text  00000000 
d000ccaa l       .text  00000000 
d000ccb2 l       .text  00000000 
d000ccc2 l       .text  00000000 
d000ccc2 l       .text  00000000 
d000ccc8 l       .text  00000000 
d000ccd0 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000cce2 l       .text  00000000 
d000ccea l       .text  00000000 
d000ccee l       .text  00000000 
d000ccfe l       .text  00000000 
d000ccfe l       .text  00000000 
d000cd04 l       .text  00000000 
d000cd0c l       .text  00000000 
d000cd10 l       .text  00000000 
d000cd1c l       .text  00000000 
d000cd20 l       .text  00000000 
d000cd24 l       .text  00000000 
d000cd2a l       .text  00000000 
d000cd2a l       .text  00000000 
d000cd32 l       .text  00000000 
d000cd36 l       .text  00000000 
d000cd46 l       .text  00000000 
d000cd46 l       .text  00000000 
d000cd4c l       .text  00000000 
d000cd4c l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd56 l       .text  00000000 
d000cd60 l       .text  00000000 
d000cd62 l       .text  00000000 
d000cd70 l       .text  00000000 
d000cd70 l       .text  00000000 
d000cd76 l       .text  00000000 
d000cd76 l       .text  00000000 
d000cd7a l       .text  00000000 
d000cd7c l       .text  00000000 
d000cd7c l       .text  00000000 
d000cd7e l       .text  00000000 
d000cd7e l       .text  00000000 
d000cd82 l       .text  00000000 
d000cd82 l       .text  00000000 
d000cd86 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cd92 l       .text  00000000 
d000cd96 l       .text  00000000 
d000cd98 l       .text  00000000 
d000cda0 l       .text  00000000 
d000cda2 l       .text  00000000 
d000cda2 l       .text  00000000 
d000cda6 l       .text  00000000 
d000cda6 l       .text  00000000 
d000cdae l       .text  00000000 
d000cdb0 l       .text  00000000 
d000cdb6 l       .text  00000000 
d000cdb6 l       .text  00000000 
000083aa l       .debug_loc     00000000 
000083d1 l       .debug_loc     00000000 
000083f7 l       .debug_loc     00000000 
00008449 l       .debug_loc     00000000 
00008470 l       .debug_loc     00000000 
0000848b l       .debug_loc     00000000 
000084b1 l       .debug_loc     00000000 
000084e4 l       .debug_loc     00000000 
0000850a l       .debug_loc     00000000 
0000852f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006943 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000c48 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002120 l       .debug_str     00000000 
00005f45 l       .debug_str     00000000 
00006975 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002376 l       .debug_str     00000000 
00000b43 l       .debug_str     00000000 
000030e3 l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000b4c l       .debug_str     00000000 
00000b27 l       .debug_str     00000000 
000018eb l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000bb4 l       .debug_str     00000000 
00002945 l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
000060db l       .debug_str     00000000 
00000dbd l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00002326 l       .debug_str     00000000 
0000236f l       .debug_str     00000000 
00002b03 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000dc7 l       .debug_str     00000000 
00000db3 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00002395 l       .debug_str     00000000 
00002365 l       .debug_str     00000000 
0000233b l       .debug_str     00000000 
0000235c l       .debug_str     00000000 
00002353 l       .debug_str     00000000 
00002344 l       .debug_str     00000000 
00000d68 l       .debug_frame   00000000 
d000cd54 l       .text  00000000 
d000cd90 l       .text  00000000 
d000cdb6 l       .text  00000000 
00000000 l    df *ABS*  00000000 otp.c
d000cdb6 l       .text  00000000 
d000cdb6 l       .text  00000000 
d000cdb6 l       .text  00000000 
d000cdba l       .text  00000000 
d000cdbc l       .text  00000000 
d000cdbc l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdbe l       .text  00000000 
0000854a l       .debug_loc     00000000 
00008565 l       .debug_loc     00000000 
00008580 l       .debug_loc     00000000 
0000859e l       .debug_loc     00000000 
000085da l       .debug_loc     00000000 
000085f5 l       .debug_loc     00000000 
0000861b l       .debug_loc     00000000 
00008641 l       .debug_loc     00000000 
0000865f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000698d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000c70 l       .debug_ranges  00000000 
00002120 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000ba9 l       .debug_str     00000000 
00001d85 l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
000069b9 l       .debug_str     00000000 
000022ed l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
000069c4 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
0000666d l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
000069cd l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00000de4 l       .debug_frame   00000000 
d000cdbe l       .text  00000000 
00000000 l    df *ABS*  00000000 sec_mmio.c
d000cdbe l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdc0 l       .text  00000000 
d000cdc0 l       .text  00000000 
d000cdc2 l       .text  00000000 
d000cdc2 l       .text  00000000 
d000cdc4 l       .text  00000000 
d000cdc4 l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdce l       .text  00000000 
d000cdd0 l       .text  00000000 
d000cdd0 l       .text  00000000 
d000cdd0 l       .text  00000000 
d000cdd0 l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd4 l       .text  00000000 
d000cdd4 l       .text  00000000 
d000cdd4 l       .text  00000000 
d000cdd4 l       .text  00000000 
d000cddc l       .text  00000000 
d000cddc l       .text  00000000 
d000cde4 l       .text  00000000 
d000cde6 l       .text  00000000 
d000cde6 l       .text  00000000 
d000cde8 l       .text  00000000 
d000cdea l       .text  00000000 
d000cdec l       .text  00000000 
d000cdec l       .text  00000000 
d000cdf4 l       .text  00000000 
d000cdf6 l       .text  00000000 
d000cdf6 l       .text  00000000 
d000cdf8 l       .text  00000000 
d000cdf8 l       .text  00000000 
d000cdfa l       .text  00000000 
d000cdfc l       .text  00000000 
d000ce0a l       .text  00000000 
d000ce0a l       .text  00000000 
d000ce16 l       .text  00000000 
d000ce18 l       .text  00000000 
d000ce18 l       .text  00000000 
d000ce18 l       .text  00000000 
d000ce18 l       .text  00000000 
d000ce18 l       .text  00000000 
d000ce1a l       .text  00000000 
d000ce24 l       .text  00000000 
d000ce26 l       .text  00000000 
d000ce26 l       .text  00000000 
d000ce2a l       .text  00000000 
d000ce2a l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce5e l     F .text  0000006e upsert_register
d000ce3c l       .text  00000000 
d000ce3c l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce4e l       .text  00000000 
d000ce54 l       .text  00000000 
d000ce56 l       .text  00000000 
d000ce58 l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce6a l       .text  00000000 
d000ce6a l       .text  00000000 
d000ce6c l       .text  00000000 
d000ce6c l       .text  00000000 
d000ce6e l       .text  00000000 
d000ce6e l       .text  00000000 
d000ce72 l       .text  00000000 
d000ce72 l       .text  00000000 
d000ce76 l       .text  00000000 
d000ce76 l       .text  00000000 
d000ce7e l       .text  00000000 
d000ce82 l       .text  00000000 
d000ce84 l       .text  00000000 
d000ce84 l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce8e l       .text  00000000 
d000ce8e l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce92 l       .text  00000000 
d000ce92 l       .text  00000000 
d000ce96 l       .text  00000000 
d000ce96 l       .text  00000000 
d000ce98 l       .text  00000000 
d000ce98 l       .text  00000000 
d000ce9c l       .text  00000000 
d000ce9c l       .text  00000000 
d000cea0 l       .text  00000000 
d000cea0 l       .text  00000000 
d000ceaa l       .text  00000000 
d000ceae l       .text  00000000 
d000ceb0 l       .text  00000000 
d000ceb4 l       .text  00000000 
d000ceba l       .text  00000000 
d000cebe l       .text  00000000 
d000ceca l       .text  00000000 
d000cecc l       .text  00000000 
d000cecc l       .text  00000000 
d000cecc l       .text  00000000 
d000cecc l       .text  00000000 
d000cecc l       .text  00000000 
d000cece l       .text  00000000 
d000ced6 l       .text  00000000 
d000ced8 l       .text  00000000 
d000ced8 l       .text  00000000 
d000cee2 l       .text  00000000 
d000cee2 l       .text  00000000 
d000cee6 l       .text  00000000 
d000cee6 l       .text  00000000 
d000cee6 l       .text  00000000 
d000cee6 l       .text  00000000 
d000ceea l       .text  00000000 
d000ceec l       .text  00000000 
d000ceec l       .text  00000000 
d000ceee l       .text  00000000 
d000ceee l       .text  00000000 
d000cefe l       .text  00000000 
d000cefe l       .text  00000000 
d000cf06 l       .text  00000000 
d000cf0c l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf1a l       .text  00000000 
d000cf22 l       .text  00000000 
d000cf24 l       .text  00000000 
d000cf24 l       .text  00000000 
d000cf26 l       .text  00000000 
d000cf26 l       .text  00000000 
d000cf30 l       .text  00000000 
d000cf30 l       .text  00000000 
d000cf34 l       .text  00000000 
d000cf34 l       .text  00000000 
d000cf34 l       .text  00000000 
d000cf34 l       .text  00000000 
d000cf38 l       .text  00000000 
d000cf3a l       .text  00000000 
d000cf3a l       .text  00000000 
d000cf3c l       .text  00000000 
d000cf3c l       .text  00000000 
d000cf4c l       .text  00000000 
d000cf4c l       .text  00000000 
d000cf54 l       .text  00000000 
d000cf5a l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf72 l       .text  00000000 
d000cf72 l       .text  00000000 
d000cf74 l       .text  00000000 
d000cf74 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf7a l       .text  00000000 
d000cf7a l       .text  00000000 
d000cf7c l       .text  00000000 
d000cf80 l       .text  00000000 
d000cf80 l       .text  00000000 
d000cf84 l       .text  00000000 
d000cf88 l       .text  00000000 
d000cf88 l       .text  00000000 
d000cf96 l       .text  00000000 
d000cf96 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cfa0 l       .text  00000000 
d000cfa0 l       .text  00000000 
d000cfa2 l       .text  00000000 
d000cfae l       .text  00000000 
d000cfb2 l       .text  00000000 
d000cfb2 l       .text  00000000 
d000cfb4 l       .text  00000000 
d000cfb6 l       .text  00000000 
d000cfb6 l       .text  00000000 
d000cfb8 l       .text  00000000 
d000cfb8 l       .text  00000000 
d000cfba l       .text  00000000 
d000cfba l       .text  00000000 
d000cfbe l       .text  00000000 
d000cfbe l       .text  00000000 
d000cfca l       .text  00000000 
d000cfd4 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfde l       .text  00000000 
d000cfde l       .text  00000000 
d000cfe0 l       .text  00000000 
d000cfe0 l       .text  00000000 
d000cfe8 l       .text  00000000 
d000cfea l       .text  00000000 
d000cfec l       .text  00000000 
d000cfee l       .text  00000000 
d000cfee l       .text  00000000 
d000cff0 l       .text  00000000 
d000cffc l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000d000 l       .text  00000000 
d000d002 l       .text  00000000 
d000d002 l       .text  00000000 
d000d002 l       .text  00000000 
d000d002 l       .text  00000000 
d000d01a l       .text  00000000 
d000d020 l       .text  00000000 
d000d022 l       .text  00000000 
d000d022 l       .text  00000000 
0000867b l       .debug_loc     00000000 
000086a2 l       .debug_loc     00000000 
000086c9 l       .debug_loc     00000000 
000086f0 l       .debug_loc     00000000 
0000872b l       .debug_loc     00000000 
0000875a l       .debug_loc     00000000 
00008775 l       .debug_loc     00000000 
0000879b l       .debug_loc     00000000 
000087b6 l       .debug_loc     00000000 
000087d1 l       .debug_loc     00000000 
000087ec l       .debug_loc     00000000 
00008829 l       .debug_loc     00000000 
00008850 l       .debug_loc     00000000 
0000886b l       .debug_loc     00000000 
00008891 l       .debug_loc     00000000 
000088b7 l       .debug_loc     00000000 
000088dd l       .debug_loc     00000000 
000088f8 l       .debug_loc     00000000 
00008913 l       .debug_loc     00000000 
00008939 l       .debug_loc     00000000 
00008954 l       .debug_loc     00000000 
0000896f l       .debug_loc     00000000 
0000898a l       .debug_loc     00000000 
000089c7 l       .debug_loc     00000000 
000089ee l       .debug_loc     00000000 
00008a09 l       .debug_loc     00000000 
00008a24 l       .debug_loc     00000000 
00008a3f l       .debug_loc     00000000 
00008a5a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000069e9 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000d58 l       .debug_ranges  00000000 
00005c8e l       .debug_str     00000000 
00005cc1 l       .debug_str     00000000 
00005c9b l       .debug_str     00000000 
00005caf l       .debug_str     00000000 
00005ca6 l       .debug_str     00000000 
00006aaf l       .debug_str     00000000 
00000cd1 l       .debug_str     00000000 
00005cbb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00006a17 l       .debug_str     00000000 
00006a27 l       .debug_str     00000000 
00006a37 l       .debug_str     00000000 
00000cc2 l       .debug_str     00000000 
000067c9 l       .debug_str     00000000 
00006a90 l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00006a94 l       .debug_str     00000000 
00000d28 l       .debug_ranges  00000000 
00000d40 l       .debug_ranges  00000000 
00006a9b l       .debug_str     00000000 
00006a46 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
00000b7a l       .debug_str     00000000 
000011a1 l       .debug_str     00000000 
00000c98 l       .debug_ranges  00000000 
00000cb0 l       .debug_ranges  00000000 
00000cc8 l       .debug_ranges  00000000 
00000ce0 l       .debug_ranges  00000000 
00006a5a l       .debug_str     00000000 
00000cf8 l       .debug_ranges  00000000 
00001d38 l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00000ae8 l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00006a83 l       .debug_str     00000000 
00006a73 l       .debug_str     00000000 
00000d10 l       .debug_ranges  00000000 
000022c6 l       .debug_str     00000000 
00002cf9 l       .debug_str     00000000 
00002d29 l       .debug_str     00000000 
00000cd8 l       .debug_str     00000000 
00006aa6 l       .debug_str     00000000 
000060a6 l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00000e50 l       .debug_frame   00000000 
d000ce18 l       .text  00000000 
d000ce5e l       .text  00000000 
d000cecc l       .text  00000000 
d000cf18 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000d022 l       .text  00000000 
00000000 l    df *ABS*  00000000 memory.c
d000d022 l       .text  00000000 
d000d022 l       .text  00000000 
d000d022 l       .text  00000000 
d000d022 l       .text  00000000 
d000d02a l       .text  00000000 
d000d02e l       .text  00000000 
d000d02e l       .text  00000000 
d000d032 l       .text  00000000 
d000d032 l       .text  00000000 
d000d036 l       .text  00000000 
d000d036 l       .text  00000000 
d000d042 l       .text  00000000 
d000d044 l       .text  00000000 
d000d044 l       .text  00000000 
d000d04a l       .text  00000000 
d000d04a l       .text  00000000 
d000d04e l       .text  00000000 
d000d050 l       .text  00000000 
d000d054 l       .text  00000000 
d000d054 l       .text  00000000 
d000d056 l       .text  00000000 
d000d056 l       .text  00000000 
d000d058 l       .text  00000000 
d000d058 l       .text  00000000 
d000d060 l       .text  00000000 
d000d064 l       .text  00000000 
d000d066 l       .text  00000000 
d000d06a l       .text  00000000 
d000d06e l       .text  00000000 
d000d06e l       .text  00000000 
d000d072 l       .text  00000000 
d000d072 l       .text  00000000 
d000d076 l       .text  00000000 
d000d078 l       .text  00000000 
d000d078 l       .text  00000000 
d000d07c l       .text  00000000 
d000d07c l       .text  00000000 
d000d07e l       .text  00000000 
d000d07e l       .text  00000000 
d000d080 l       .text  00000000 
d000d080 l       .text  00000000 
d000d084 l       .text  00000000 
d000d084 l       .text  00000000 
d000d088 l       .text  00000000 
d000d08a l       .text  00000000 
d000d090 l       .text  00000000 
d000d090 l       .text  00000000 
d000d094 l       .text  00000000 
d000d098 l       .text  00000000 
d000d0a0 l       .text  00000000 
d000d0a0 l       .text  00000000 
d000d0a2 l       .text  00000000 
d000d0a2 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0ae l       .text  00000000 
d000d0ae l       .text  00000000 
d000d0b2 l       .text  00000000 
d000d0b2 l       .text  00000000 
d000d0ba l       .text  00000000 
d000d0ba l       .text  00000000 
d000d0be l       .text  00000000 
d000d0c2 l       .text  00000000 
d000d0c2 l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0c8 l       .text  00000000 
d000d0c8 l       .text  00000000 
d000d0cc l       .text  00000000 
d000d0cc l       .text  00000000 
d000d0ce l       .text  00000000 
d000d0d0 l       .text  00000000 
d000d0d2 l       .text  00000000 
d000d0d2 l       .text  00000000 
d000d0d6 l       .text  00000000 
d000d0da l       .text  00000000 
d000d0ea l       .text  00000000 
d000d0ea l       .text  00000000 
d000d0ee l       .text  00000000 
d000d0ee l       .text  00000000 
d000d0f0 l       .text  00000000 
d000d0f0 l       .text  00000000 
d000d0f2 l       .text  00000000 
d000d0f2 l       .text  00000000 
d000d0f6 l       .text  00000000 
d000d0f6 l       .text  00000000 
d000d0fc l       .text  00000000 
d000d100 l       .text  00000000 
d000d100 l       .text  00000000 
d000d104 l       .text  00000000 
d000d108 l       .text  00000000 
d000d10a l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d110 l       .text  00000000 
d000d110 l       .text  00000000 
d000d114 l       .text  00000000 
d000d114 l       .text  00000000 
d000d122 l       .text  00000000 
d000d126 l       .text  00000000 
d000d126 l       .text  00000000 
d000d132 l       .text  00000000 
d000d132 l       .text  00000000 
d000d136 l       .text  00000000 
d000d138 l       .text  00000000 
d000d13c l       .text  00000000 
d000d13c l       .text  00000000 
d000d13e l       .text  00000000 
d000d13e l       .text  00000000 
d000d142 l       .text  00000000 
d000d142 l       .text  00000000 
d000d144 l       .text  00000000 
d000d14c l       .text  00000000 
d000d14c l       .text  00000000 
d000d150 l       .text  00000000 
d000d150 l       .text  00000000 
d000d158 l       .text  00000000 
d000d160 l       .text  00000000 
d000d164 l       .text  00000000 
d000d166 l       .text  00000000 
d000d166 l       .text  00000000 
d000d16c l       .text  00000000 
d000d16c l       .text  00000000 
d000d16e l       .text  00000000 
d000d170 l       .text  00000000 
d000d170 l       .text  00000000 
d000d174 l       .text  00000000 
d000d174 l       .text  00000000 
d000d178 l       .text  00000000 
d000d17a l       .text  00000000 
d000d17a l       .text  00000000 
d000d17e l       .text  00000000 
d000d180 l       .text  00000000 
d000d180 l       .text  00000000 
d000d184 l       .text  00000000 
d000d184 l       .text  00000000 
d000d186 l       .text  00000000 
d000d186 l       .text  00000000 
d000d18a l       .text  00000000 
d000d18e l       .text  00000000 
d000d190 l       .text  00000000 
d000d190 l       .text  00000000 
d000d198 l       .text  00000000 
d000d1a0 l       .text  00000000 
d000d1a4 l       .text  00000000 
d000d1a6 l       .text  00000000 
d000d1a6 l       .text  00000000 
d000d1aa l       .text  00000000 
d000d1aa l       .text  00000000 
d000d1ac l       .text  00000000 
d000d1ae l       .text  00000000 
d000d1b0 l       .text  00000000 
d000d1b0 l       .text  00000000 
d000d1b4 l       .text  00000000 
d000d1b6 l       .text  00000000 
d000d1b6 l       .text  00000000 
00008a80 l       .debug_loc     00000000 
00008aa6 l       .debug_loc     00000000 
00008acc l       .debug_loc     00000000 
00008af2 l       .debug_loc     00000000 
00008b18 l       .debug_loc     00000000 
00008b37 l       .debug_loc     00000000 
00008b56 l       .debug_loc     00000000 
00008b7c l       .debug_loc     00000000 
00008b97 l       .debug_loc     00000000 
00008be0 l       .debug_loc     00000000 
00008c06 l       .debug_loc     00000000 
00008c28 l       .debug_loc     00000000 
00008c43 l       .debug_loc     00000000 
00008c5e l       .debug_loc     00000000 
00008c79 l       .debug_loc     00000000 
00008c94 l       .debug_loc     00000000 
00008caf l       .debug_loc     00000000 
00008cca l       .debug_loc     00000000 
00008d1a l       .debug_loc     00000000 
00008d35 l       .debug_loc     00000000 
00008d50 l       .debug_loc     00000000 
00008d72 l       .debug_loc     00000000 
00008d8d l       .debug_loc     00000000 
00008da8 l       .debug_loc     00000000 
00008dc3 l       .debug_loc     00000000 
00008dde l       .debug_loc     00000000 
00008df9 l       .debug_loc     00000000 
00008e18 l       .debug_loc     00000000 
00008e37 l       .debug_loc     00000000 
00008e5d l       .debug_loc     00000000 
00008e78 l       .debug_loc     00000000 
00008ec1 l       .debug_loc     00000000 
00008ee7 l       .debug_loc     00000000 
00008f02 l       .debug_loc     00000000 
00008f1d l       .debug_loc     00000000 
00008f38 l       .debug_loc     00000000 
00008f53 l       .debug_loc     00000000 
00008f6e l       .debug_loc     00000000 
00008f89 l       .debug_loc     00000000 
00008fa4 l       .debug_loc     00000000 
00008fc3 l       .debug_loc     00000000 
00008fe2 l       .debug_loc     00000000 
00008ffd l       .debug_loc     00000000 
00009044 l       .debug_loc     00000000 
0000905f l       .debug_loc     00000000 
0000907a l       .debug_loc     00000000 
000090a0 l       .debug_loc     00000000 
000090bb l       .debug_loc     00000000 
000090d6 l       .debug_loc     00000000 
000090f1 l       .debug_loc     00000000 
0000910c l       .debug_loc     00000000 
00009127 l       .debug_loc     00000000 
0000914d l       .debug_loc     00000000 
00009168 l       .debug_loc     00000000 
0000918e l       .debug_loc     00000000 
000091b4 l       .debug_loc     00000000 
000091d1 l       .debug_loc     00000000 
0000922c l       .debug_loc     00000000 
00009247 l       .debug_loc     00000000 
0000926d l       .debug_loc     00000000 
00009293 l       .debug_loc     00000000 
000092ae l       .debug_loc     00000000 
000092d4 l       .debug_loc     00000000 
00009331 l       .debug_loc     00000000 
0000934c l       .debug_loc     00000000 
00009367 l       .debug_loc     00000000 
000093c4 l       .debug_loc     00000000 
000093e1 l       .debug_loc     00000000 
000093fc l       .debug_loc     00000000 
00009443 l       .debug_loc     00000000 
0000945e l       .debug_loc     00000000 
00009479 l       .debug_loc     00000000 
00009494 l       .debug_loc     00000000 
000094af l       .debug_loc     00000000 
000094ca l       .debug_loc     00000000 
000094f0 l       .debug_loc     00000000 
0000950b l       .debug_loc     00000000 
00009526 l       .debug_loc     00000000 
00009541 l       .debug_loc     00000000 
0000955c l       .debug_loc     00000000 
00009589 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006abb l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000e28 l       .debug_ranges  00000000 
00006ad7 l       .debug_str     00000000 
00006ae1 l       .debug_str     00000000 
00006aeb l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000001c8 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006af5 l       .debug_str     00000000 
00006bd8 l       .debug_str     00000000 
00006be2 l       .debug_str     00000000 
00006829 l       .debug_str     00000000 
00006b0f l       .debug_str     00000000 
00006b1a l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00002bbb l       .debug_str     00000000 
00006b26 l       .debug_str     00000000 
00006b38 l       .debug_str     00000000 
00006b48 l       .debug_str     00000000 
00006afd l       .debug_str     00000000 
0000666d l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
0000609d l       .debug_str     00000000 
00002f7b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000238c l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
00001005 l       .debug_str     00000000 
000023a8 l       .debug_str     00000000 
000023ad l       .debug_str     00000000 
00006ba7 l       .debug_str     00000000 
00006bad l       .debug_str     00000000 
00006b3c l       .debug_str     00000000 
00006191 l       .debug_str     00000000 
00006b4c l       .debug_str     00000000 
00000db8 l       .debug_ranges  00000000 
0000129f l       .debug_str     00000000 
00000da0 l       .debug_ranges  00000000 
0000586c l       .debug_str     00000000 
00006bb2 l       .debug_str     00000000 
00006bb9 l       .debug_str     00000000 
00000dd0 l       .debug_ranges  00000000 
00001a56 l       .debug_str     00000000 
00006bc1 l       .debug_str     00000000 
00006bc5 l       .debug_str     00000000 
00006bc9 l       .debug_str     00000000 
00006bce l       .debug_str     00000000 
00006bd3 l       .debug_str     00000000 
00006bdd l       .debug_str     00000000 
0000639c l       .debug_str     00000000 
0000625a l       .debug_str     00000000 
00006b6b l       .debug_str     00000000 
00006be8 l       .debug_str     00000000 
00000de8 l       .debug_ranges  00000000 
00006bed l       .debug_str     00000000 
00006b58 l       .debug_str     00000000 
00002bb6 l       .debug_str     00000000 
00006b72 l       .debug_str     00000000 
00000e00 l       .debug_ranges  00000000 
00006b7a l       .debug_str     00000000 
00002e04 l       .debug_str     00000000 
00006b96 l       .debug_str     00000000 
00006b9e l       .debug_str     00000000 
00006b8c l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000f0c l       .debug_frame   00000000 
d000d0aa l       .text  00000000 
d000d10c l       .text  00000000 
d000d1b6 l       .text  00000000 
00000000 l    df *ABS*  00000000 device_sim_verilator.c
d000d1b6 l       .text  00000000 
d000d1b6 l       .text  00000000 
d000d1b6 l       .text  00000000 
d000d1b6 l       .text  00000000 
d000d1b8 l       .text  00000000 
d000d1b8 l       .text  00000000 
000095a9 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006bf5 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000e88 l       .debug_ranges  00000000 
00006c1f l       .debug_str     00000000 
00006c7f l       .debug_str     00000000 
00006c73 l       .debug_str     00000000 
00006c2b l       .debug_str     00000000 
00006c38 l       .debug_str     00000000 
00006c4c l       .debug_str     00000000 
00006c5d l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006c8d l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00006c9d l       .debug_str     00000000 
00006cbb l       .debug_str     00000000 
00006cd2 l       .debug_str     00000000 
00006ce2 l       .debug_str     00000000 
00006cf2 l       .debug_str     00000000 
00006d00 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00006d0e l       .debug_str     00000000 
00006d23 l       .debug_str     00000000 
00006d3a l       .debug_str     00000000 
00000aca l       .debug_str     00000000 
00006d53 l       .debug_str     00000000 
00006d6f l       .debug_str     00000000 
000010de l       .debug_str     00000000 
00006d7e l       .debug_str     00000000 
00006d8c l       .debug_str     00000000 
00000ca8 l       .debug_str     00000000 
00000fd0 l       .debug_frame   00000000 
d000d1b8 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_rsa_keys_fake.c
00000000 l       .debug_str     00000000 
00005e6b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00005ead l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00005ec2 l       .debug_str     00000000 
00005ed8 l       .debug_str     00000000 
0000257c l       .debug_str     00000000 
0000256a l       .debug_str     00000000 
00000fab l       .debug_str     00000000 
00002437 l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00000f9d l       .debug_str     00000000 
000039dc l       .debug_str     00000000 
00000f96 l       .debug_str     00000000 
00000d8e l       .debug_str     00000000 
00000d79 l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000024bc l       .debug_str     00000000 
0000242d l       .debug_str     00000000 
000023ec l       .debug_str     00000000 
00002402 l       .debug_str     00000000 
00002418 l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/run_rsa_verify_3072_rr_modexp.s
d000dbb0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_run_rsa_verify_3072
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/vendor/veri-titan/gen/otbn_modexp.s
d000dc84 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_0
d000dca8 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_1
d000dce4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mont_loop
d000ddb0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw2
d000ddf4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw25
d000dda4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_2
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/rsa_verify_3072_rr.s
d000de38 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_subtract_modulus_var
d000de68 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_double_mod_var
d000debc l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sel_aa
00000000 l    df *ABS*  00000000 static_critical_boot_measurements.c
00000000 l       .debug_str     00000000 
00005b74 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00005bbb l       .debug_str     00000000 
00005bcd l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
00000ab3 l       .debug_str     00000000 
00000a9e l       .debug_str     00000000 
00000143 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_epmp_state.c
00000000 l       .debug_str     00000000 
00005be1 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00005c21 l       .debug_str     00000000 
00005c43 l       .debug_str     00000000 
00005c2c l       .debug_str     00000000 
00005c33 l       .debug_str     00000000 
00005c3b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_sec_mmio.c
00000000 l       .debug_str     00000000 
00005c50 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00005c8e l       .debug_str     00000000 
00005cc1 l       .debug_str     00000000 
00005c9b l       .debug_str     00000000 
00005caf l       .debug_str     00000000 
00005ca6 l       .debug_str     00000000 
00006aaf l       .debug_str     00000000 
00000cd1 l       .debug_str     00000000 
00005cbb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
d000ce18 g     F .text  00000046 sec_mmio_read32
e0002428 g     O .bss   00000044 rstmgr_alert_info
d000bcd4 g     F .text  0000028e sigverify_rsa_verify
e0001fc8 g     O .bss   00000004 lc_state
00080000 g       *ABS*  00000000 _rom_ext_virtual_size
d0008100 g     F .vectors       00000080 _rom_interrupt_vector_c
d000b14e g     F .text  00000044 flash_ctrl_data_erase
d000c8cc g     F .text  0000002c rnd_uint32
e00027c8 g       .bss   00000000 __global_pointer$
000003a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_end
e0000000 g     O .static_critical       00000020 boot_measurements
d000c47a g     F .text  00000042 sigverify_mod_exp_otbn
d000d518 g     O .rodata        00000004 kSigverifyRsaKeysCnt
d000ac5e g     F .text  00000046 flash_ctrl_data_default_cfg_set
d000c730 g     F .text  00000056 otbn_imem_write
d000d450 g       .shutdown      00000000 _text_end
d000cd54 g     F .text  0000003c lifecycle_device_id_get
d0009dca g     F .text  000000fa spi_device_init
d000dbb0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_start
d0009284 g     F .text  00000024 boot_policy_manifests_get
34002000 g       *ABS*  00000000 _epmp_text_tor_lo
d000b7b4 g     F .text  00000024 keymgr_creator_max_ver_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
38007000 g       *ABS*  00000000 _epmp_stack_guard_na4
d0010000 g       .vectors       00000000 _chip_info_end
d000bc16 g     F .text  000000be rom_epmp_config_debug_rom
d000df50 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_end
d000aab8 g     F .text  00000008 crc32_finish
000000fc g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_montmul
d000dbe4 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000a2e2 g     F .text  000002ea shutdown_init
d000a74a g     F .text  00000120 alert_class_configure
d000d022 g     F .text  00000088 memcpy
d000a5cc g     F .text  000000c0 alert_configure
d000d520 g     O .rodata        000004ec kSigverifyRsaKeys
d00099d6 g     F .text  00000396 bootstrap
d000838c g     F .crt   0000001e rom_interrupt_handler
00000000 g       *ABS*  00000000 __abi_shutdown$
d000a97e g     F .text  000000f2 alert_config_check
e0001fc8 g       .bss   00000000 _bss_start
d0008180 g     F .crt   0000020c _rom_start_boot
d000cfd6 g     F .text  0000004c sec_mmio_check_counters
00000000 g       *ABS*  00000000 __DYNAMIC
d000b252 g     F .text  00000042 flash_ctrl_data_default_perms_set
d000b682 g     F .text  00000066 ibex_addr_remap_0_set
d000aa76 g     F .text  00000042 crc32_add32
d000cb00 g     F .text  0000006e hmac_sha256_update
d000c71c g     F .text  00000008 otbn_instruction_count_get
d000aa70 g     F .text  00000006 crc32_init
d000838c g     F .crt   0000001e rom_exception_handler
d0008000 g       .vectors       00000000 _text_start
00000320 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_buf
d000cf66 g     F .text  00000070 sec_mmio_check_values
d000b192 g     F .text  000000b0 flash_ctrl_data_erase_verify
e0000020 g     O .static_critical       00000054 epmp_state
d00098d6 g     F .text  000000aa boot_data_check
d000aac0 g     F .text  0000011e ast_check
d000cecc g     F .text  0000004c sec_mmio_write32
d000c7fc g     F .text  0000005a otbn_dmem_write
d000abde g     F .text  00000080 flash_ctrl_init
d000b87e g     F .text  00000008 rstmgr_reason_clear
d000b746 g     F .text  0000006e keymgr_sw_binding_set
d000dec0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_compute_rr
e000246c g       .bss   00000000 _bss_end
d000b83a g     F .text  00000006 retention_sram_get
d000b242 g     F .text  00000010 flash_ctrl_exec_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000b84a g     F .text  00000034 rstmgr_reason_get
d000c34a g     F .text  00000130 run_otbn_rsa_3072_modexp
d000c5e4 g     F .text  0000003c otbn_execute_app
e0001fcc g     O .bss   00000400 _rom_shadow_stack
d000cdb6 g     F .text  00000008 otp_read32
00001fc4 g       *ABS*  00000000 _static_critical_size
d000df68 g     O .rodata        00000004 kAstCheckPollCpuCycles
e00023e8 g     O .bss   00000040 boot_data
d000cd90 g     F .text  00000026 lifecycle_hw_rev_get
d00083e8 g     F .crt   0000003a crt_section_copy
d0009f48 g     F .text  0000000a spi_device_flash_status_clear
d000c684 g     F .text  00000022 otbn_execute
d000b896 g     F .text  0000002e uart_init
d000c62a g     F .text  00000008 otbn_copy_data_from_otbn
d000cdbe g     F .text  0000005a sec_mmio_init
d000bf62 g     F .text  0000009a sigverify_usage_constraints_get
000001a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_rr
d000a86a g     F .text  00000114 alert_config_crc32
d000b7d8 g     F .text  00000002 keymgr_state_check
d0009ec4 g     F .text  00000084 spi_device_cmd_get
d0008000 g       .vectors       00000000 _rom_boot_address
d000aca4 g     F .text  00000046 flash_ctrl_info_cfg_set
000004a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_out_buf
d000a68c g     F .text  000000be alert_local_configure
d000cf18 g     F .text  0000004e sec_mmio_write32_shadowed
d000df64 g     O .rodata        00000004 kUartTxFifoCpuCycles
d0009980 g     F .text  00000056 bootstrap_requested
00004000 g       *ABS*  00000000 _stack_size
d000c4bc g     F .text  0000001c otbn_init
d000d51c g     O .rodata        00000004 kSigverifyRsaKeysStep
d000c620 g     F .text  0000000a otbn_copy_data_to_otbn
d000cae6 g     F .text  0000001a hmac_sha256_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_mod
e0000074 g     O .static_critical       00001f50 sec_mmio_ctx
d000d0aa g     F .text  00000062 memset
d000b63e g     F .text  00000044 flash_ctrl_bank_erase_perms_set
d000c4d8 g     F .text  0000010c otbn_load_app
e0020000 g       .vectors       00000000 _stack_end
d0009362 g     F .text  000001da boot_data_read
d000df60 g     O .rodata        00000004 kUartNCOValue
d000bbb4 g     F .text  0000002e rom_epmp_unlock_rom_ext_rx
d000ad66 g     F .text  00000072 flash_ctrl_info_read
d000d1b6 g     F .text  00000002 device_fpga_version_print
e001c000 g       *ABS*  00000000 _stack_start
d000cb6e g     F .text  00000036 hmac_sha256_final
d000b840 g     F .text  0000000a retention_sram_init
d00083c4 g     F .crt   00000024 crt_section_clear
d000c8f8 g     F .text  000001ee epmp_state_check
d000c856 g     F .text  00000076 otbn_dmem_read
00000000 g       *ABS*  00000000 _dv_log_offset
d000ff80 g       *ABS*  00000000 _chip_info_start
d000c724 g     F .text  0000000c otbn_imem_sec_wipe
d000b9c0 g     F .text  00000094 watchdog_configure
d000df60 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_start
d000d48c g     O .rodata        0000006c kSpiDeviceSfdpTable
e00023cc g     O .bss   00000018 rom_counters
d0009f52 g     F .text  00000008 spi_device_flash_status_get
00000800 g       *ABS*  00000000 _epmp_reset_rx_size
d00083ac g     F .crt   00000018 _asm_exception_handler
d000c632 g     F .text  00000052 otbn_busy_wait_for_done
d0008000 g     F .vectors       00000084 _rom_interrupt_vector_asm
d000ba60 g     F .text  00000154 rom_epmp_state_init
00000620 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_end
d0008800 g     F .text  0000024c rom_main
d000dcac g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_montmul
00000180 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_m0inv
00000080 g       *ABS*  00000000 _chip_info_size
d000ba54 g     F .text  0000000c watchdog_disable
d00092a8 g     F .text  000000ba boot_policy_manifest_check
00000310 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_compute_rr
00000000 g       *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000df60 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000bffc g     F .text  0000021c sigverify_mod_exp_ibex
d0008424 g     F .crt   0000008c rom_epmp_init
00000034 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000d10c g     F .text  000000aa memrcmp
d000b294 g     F .text  00000044 flash_ctrl_info_perms_set
d000c7ee g     F .text  0000000e otbn_dmem_sec_wipe
d000d1b8 g     F .shutdown      00000298 shutdown_finalize
d000b886 g     F .text  00000010 rstmgr_reset
d000bbe2 g     F .text  00000034 rom_epmp_unlock_rom_ext_r
90000000 g       .vectors       00000000 _rom_ext_virtual_start_address
d000b8e0 g     F .text  000000e0 watchdog_init
d000b090 g     F .text  00000010 flash_ctrl_data_write
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000b7da g     F .text  00000060 pinmux_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_start
d0009f5a g     F .text  0000012e sigverify_rsa_key_get
d000cba4 g     F .text  000001b0 lifecycle_state_get
d000b8c4 g     F .text  0000001c uart_putchar
d000838c g     F .crt   0000001e rom_nmi_handler
34003514 g       *ABS*  00000000 _epmp_text_tor_hi



Disassembly of section .vectors:

d0008000 <_rom_interrupt_vector_asm>:
_rom_interrupt_vector_asm():
d0008000:       3ac0006f                j       d00083ac <_asm_exception_handler>
d0008004:       3a80006f                j       d00083ac <_asm_exception_handler>
d0008008:       3a40006f                j       d00083ac <_asm_exception_handler>
d000800c:       3a00006f                j       d00083ac <_asm_exception_handler>
d0008010:       39c0006f                j       d00083ac <_asm_exception_handler>
d0008014:       3980006f                j       d00083ac <_asm_exception_handler>
d0008018:       3940006f                j       d00083ac <_asm_exception_handler>
d000801c:       3900006f                j       d00083ac <_asm_exception_handler>
d0008020:       38c0006f                j       d00083ac <_asm_exception_handler>
d0008024:       3880006f                j       d00083ac <_asm_exception_handler>
d0008028:       3840006f                j       d00083ac <_asm_exception_handler>
d000802c:       3800006f                j       d00083ac <_asm_exception_handler>
d0008030:       37c0006f                j       d00083ac <_asm_exception_handler>
d0008034:       3780006f                j       d00083ac <_asm_exception_handler>
d0008038:       3740006f                j       d00083ac <_asm_exception_handler>
d000803c:       3700006f                j       d00083ac <_asm_exception_handler>
d0008040:       36c0006f                j       d00083ac <_asm_exception_handler>
d0008044:       3680006f                j       d00083ac <_asm_exception_handler>
d0008048:       3640006f                j       d00083ac <_asm_exception_handler>
d000804c:       3600006f                j       d00083ac <_asm_exception_handler>
d0008050:       35c0006f                j       d00083ac <_asm_exception_handler>
d0008054:       3580006f                j       d00083ac <_asm_exception_handler>
d0008058:       3540006f                j       d00083ac <_asm_exception_handler>
d000805c:       3500006f                j       d00083ac <_asm_exception_handler>
d0008060:       34c0006f                j       d00083ac <_asm_exception_handler>
d0008064:       3480006f                j       d00083ac <_asm_exception_handler>
d0008068:       3440006f                j       d00083ac <_asm_exception_handler>
d000806c:       3400006f                j       d00083ac <_asm_exception_handler>
d0008070:       33c0006f                j       d00083ac <_asm_exception_handler>
d0008074:       3380006f                j       d00083ac <_asm_exception_handler>
d0008078:       3340006f                j       d00083ac <_asm_exception_handler>
d000807c:       3300006f                j       d00083ac <_asm_exception_handler>
d0008080:       1000006f                j       d0008180 <_rom_start_boot>
d0008084:       c0001073                unimp
d0008088:       c0001073                unimp
d000808c:       c0001073                unimp
d0008090:       c0001073                unimp
d0008094:       c0001073                unimp
d0008098:       c0001073                unimp
d000809c:       c0001073                unimp
d00080a0:       c0001073                unimp
d00080a4:       c0001073                unimp
d00080a8:       c0001073                unimp
d00080ac:       c0001073                unimp
d00080b0:       c0001073                unimp
d00080b4:       c0001073                unimp
d00080b8:       c0001073                unimp
d00080bc:       c0001073                unimp
d00080c0:       c0001073                unimp
d00080c4:       c0001073                unimp
d00080c8:       c0001073                unimp
d00080cc:       c0001073                unimp
d00080d0:       c0001073                unimp
d00080d4:       c0001073                unimp
d00080d8:       c0001073                unimp
d00080dc:       c0001073                unimp
d00080e0:       c0001073                unimp
d00080e4:       c0001073                unimp
d00080e8:       c0001073                unimp
d00080ec:       c0001073                unimp
d00080f0:       c0001073                unimp
d00080f4:       c0001073                unimp
d00080f8:       c0001073                unimp
d00080fc:       c0001073                unimp

d0008100 <_rom_interrupt_vector_c>:
_rom_interrupt_vector_c():
d0008100:       28c0006f                j       d000838c <rom_exception_handler>
d0008104:       2880006f                j       d000838c <rom_exception_handler>
d0008108:       2840006f                j       d000838c <rom_exception_handler>
d000810c:       2800006f                j       d000838c <rom_exception_handler>
d0008110:       27c0006f                j       d000838c <rom_exception_handler>
d0008114:       2780006f                j       d000838c <rom_exception_handler>
d0008118:       2740006f                j       d000838c <rom_exception_handler>
d000811c:       2700006f                j       d000838c <rom_exception_handler>
d0008120:       26c0006f                j       d000838c <rom_exception_handler>
d0008124:       2680006f                j       d000838c <rom_exception_handler>
d0008128:       2640006f                j       d000838c <rom_exception_handler>
d000812c:       2600006f                j       d000838c <rom_exception_handler>
d0008130:       25c0006f                j       d000838c <rom_exception_handler>
d0008134:       2580006f                j       d000838c <rom_exception_handler>
d0008138:       2540006f                j       d000838c <rom_exception_handler>
d000813c:       2500006f                j       d000838c <rom_exception_handler>
d0008140:       24c0006f                j       d000838c <rom_exception_handler>
d0008144:       2480006f                j       d000838c <rom_exception_handler>
d0008148:       2440006f                j       d000838c <rom_exception_handler>
d000814c:       2400006f                j       d000838c <rom_exception_handler>
d0008150:       23c0006f                j       d000838c <rom_exception_handler>
d0008154:       2380006f                j       d000838c <rom_exception_handler>
d0008158:       2340006f                j       d000838c <rom_exception_handler>
d000815c:       2300006f                j       d000838c <rom_exception_handler>
d0008160:       22c0006f                j       d000838c <rom_exception_handler>
d0008164:       2280006f                j       d000838c <rom_exception_handler>
d0008168:       2240006f                j       d000838c <rom_exception_handler>
d000816c:       2200006f                j       d000838c <rom_exception_handler>
d0008170:       21c0006f                j       d000838c <rom_exception_handler>
d0008174:       2180006f                j       d000838c <rom_exception_handler>
d0008178:       2140006f                j       d000838c <rom_exception_handler>
d000817c:       2100006f                j       d000838c <rom_exception_handler>

Disassembly of section .crt:

d0008180 <_rom_start_boot>:
_rom_start_boot():
d0008180:       ff000537                lui     a0,0xff000
d0008184:       01452283                lw      t0,20(a0) # ff000014 <_stack_end+0x1efe0014>
d0008188:       00029c63                bnez    t0,d00081a0 <kRomStartBootMaybeHalt+0xc>
d000818c:       0fffa197                auipc   gp,0xfffa
d0008190:       63c18193                addi    gp,gp,1596 # e00027c8 <__global_pointer$>

d0008194 <kRomStartBootMaybeHalt>:
d0008194:           c0131537            lui     a0,0xc0131
d0008198:           10852283            lw      t0,264(a0) # c0131108 <_stack_end+0xe0111108>
d000819c:           00029563            bnez    t0,d00081a6 <kRomStartBootExecEn>
d00081a0:       /-> 10500073            wfi
d00081a4:       \-- bff5                        j       d00081a0 <kRomStartBootMaybeHalt+0xc>

d00081a6 <kRomStartBootExecEn>:
d00081a6:       c11f02b7                lui     t0,0xc11f0
d00081aa:       4309                    li      t1,2
d00081ac:       0462a623                sw      t1,76(t0) # c11f004c <_stack_end+0xe11d004c>
d00081b0:       c04002b7                lui     t0,0xc0400
d00081b4:       537d                    li      t1,-1
d00081b6:       0262a623                sw      t1,44(t0) # c040002c <_stack_end+0xe03e002c>
d00081ba:       4305                    li      t1,1
d00081bc:       0062ac23                sw      t1,24(t0)
d00081c0:       c04702b7                lui     t0,0xc0470
d00081c4:       00037337                lui     t1,0x37
d00081c8:       ee830313                addi    t1,t1,-280 # 36ee8 <WDOG_BARK_THOLD>
d00081cc:       0062ac23                sw      t1,24(t0) # c0470018 <_stack_end+0xe0450018>
d00081d0:       00031337                lui     t1,0x31
d00081d4:       d4030313                addi    t1,t1,-704 # 30d40 <WDOG_BITE_THOLD>

d00081d8 <kRomStartStoreT1ToBiteThold>:
d00081d8:       0062ae23                sw      t1,28(t0)
d00081dc:       4305                    li      t1,1
d00081de:       0062aa23                sw      t1,20(t0)

d00081e2 <kRomStartWatchdogEnabled>:
d00081e2:              72c5                     lui     t0,0xffff1
d00081e4:              88828293                 addi    t0,t0,-1912 # ffff0888 <_stack_end+0x1ffd0888>
d00081e8:              3042b073                 csrc    mie,t0
d00081ec:              c0131537                 lui     a0,0xc0131
d00081f0:              0dc52283                 lw      t0,220(a0) # c01310dc <_stack_end+0xe01110dc>
d00081f4:              4319                     li      t1,6
d00081f6:          /-- 02629563                 bne     t0,t1,d0008220 <kRomStartWatchdogEnabled+0x3e>
d00081fa:          |   c0480537                 lui     a0,0xc0480
d00081fe:          |   c04805b7                 lui     a1,0xc0480
d0008202:          |   09c58593                 addi    a1,a1,156 # c048009c <_stack_end+0xe046009c>
d0008206:          |   c0131637                 lui     a2,0xc0131
d000820a:          |   04060613                 addi    a2,a2,64 # c0131040 <_stack_end+0xe0111040>
d000820e:          |   2ae9                     jal     d00083e8 <crt_section_copy>
d0008210:          |   c0131537                 lui     a0,0xc0131
d0008214:          |   0fc52283                 lw      t0,252(a0) # c01310fc <_stack_end+0xe01110fc>
d0008218:          |   c0420537                 lui     a0,0xc0420
d000821c:          |   00552a23                 sw      t0,20(a0) # c0420014 <_stack_end+0xe0400014>
d0008220:          \-> c0131537                 lui     a0,0xc0131
d0008224:              11c52283                 lw      t0,284(a0) # c013111c <_stack_end+0xe011111c>
d0008228:              73900f93                 li      t6,1849
d000822c:       /----- 0bf29f63                 bne     t0,t6,d00082ea <kRomStartWatchdogEnabled+0x108>
d0008230:       |      c01315b7                 lui     a1,0xc0131
d0008234:       |      11c5a303                 lw      t1,284(a1) # c013111c <_stack_end+0xe011111c>
d0008238:       |  /-- 01f30663                 beq     t1,t6,d0008244 <kRomStartWatchdogEnabled+0x62>
d000823c:       |  |   0000                     unimp
d000823e:       |  |   0000                     unimp
d0008240:       |  |   0000                     unimp
d0008242:       |  |   0000                     unimp
d0008244:       |  \-> c0460537                 lui     a0,0xc0460
d0008248:       |      40050513                 addi    a0,a0,1024 # c0460400 <_stack_end+0xe0440400>
d000824c:       |      42b1                     li      t0,12
d000824e:       |      04552c23                 sw      t0,88(a0)
d0008252:       |      4291                     li      t0,4
d0008254:       |      04552e23                 sw      t0,92(a0)
d0008258:       |      06552023                 sw      t0,96(a0)
d000825c:       |      c0460537                 lui     a0,0xc0460
d0008260:       |      0e850513                 addi    a0,a0,232 # c04600e8 <_stack_end+0xe04400e8>
d0008264:       |      42e1                     li      t0,24
d0008266:       |      04552c23                 sw      t0,88(a0)
d000826a:       |      42e5                     li      t0,25
d000826c:       |      04552e23                 sw      t0,92(a0)
d0008270:       |      42e9                     li      t0,26
d0008272:       |      06552023                 sw      t0,96(a0)
d0008276:       |      c0040537                 lui     a0,0xc0040
d000827a:       |      01052283                 lw      t0,16(a0) # c0040010 <_stack_end+0xe0020010>
d000827e:       |      01c00f37                 lui     t5,0x1c00
d0008282:       |      01e2f2b3                 and     t0,t0,t5
d0008286:       |      01800eb7                 lui     t4,0x1800
d000828a:       |      739e8e93                 addi    t4,t4,1849 # 1800739 <_rom_ext_virtual_size+0x1780739>
d000828e:       |      01d2c2b3                 xor     t0,t0,t4
d0008292:       +----- 05f29c63                 bne     t0,t6,d00082ea <kRomStartWatchdogEnabled+0x108>
d0008296:       |      73900f93                 li      t6,1849
d000829a:       |      c00405b7                 lui     a1,0xc0040
d000829e:       |      0105a303                 lw      t1,16(a1) # c0040010 <_stack_end+0xe0020010>
d00082a2:       |      01e37333                 and     t1,t1,t5
d00082a6:       |      01d34333                 xor     t1,t1,t4
d00082aa:       |  /-- 01f30663                 beq     t1,t6,d00082b6 <kRomStartWatchdogEnabled+0xd4>
d00082ae:       |  |   0000                     unimp
d00082b0:       |  |   0000                     unimp
d00082b2:       |  |   0000                     unimp
d00082b4:       |  |   0000                     unimp
d00082b6:       |  \-> b0001073                 csrw    mcycle,zero
d00082ba:       |      c0470537                 lui     a0,0xc0470
d00082be:       |      00052a23                 sw      zero,20(a0) # c0470014 <_stack_end+0xe0450014>
d00082c2:       |  /-> c0131537                 lui     a0,0xc0131
d00082c6:       |  |   12052283                 lw      t0,288(a0) # c0131120 <_stack_end+0xe0111120>
d00082ca:       |  |   b0002373                 csrr    t1,mcycle
d00082ce:       |  \-- fe536ae3                 bltu    t1,t0,d00082c2 <kRomStartWatchdogEnabled+0xe0>
d00082d2:       |  /-> c0140537                 lui     a0,0xc0140
d00082d6:       |  |   00452283                 lw      t0,4(a0) # c0140004 <_stack_end+0xe0120004>
d00082da:       |  |   0022f293                 andi    t0,t0,2
d00082de:       |  \-- fe028ae3                 beqz    t0,d00082d2 <kRomStartWatchdogEnabled+0xf0>
d00082e2:       |      0000                     unimp
d00082e4:       |      0000                     unimp
d00082e6:       |      0000                     unimp
d00082e8:       |      0000                     unimp
d00082ea:       \----> c1160537                 lui     a0,0xc1160
d00082ee:              009092b7                 lui     t0,0x909
d00082f2:              09928293                 addi    t0,t0,153 # 909099 <_rom_ext_virtual_size+0x889099>
d00082f6:              02552223                 sw      t0,36(a0) # c1160024 <_stack_end+0xe1140024>
d00082fa:              4299                     li      t0,6
d00082fc:              02552023                 sw      t0,32(a0)
d0008300:              c1150537                 lui     a0,0xc1150
d0008304:              66600293                 li      t0,1638
d0008308:              00552a23                 sw      t0,20(a0) # c1150014 <_stack_end+0xe1130014>
d000830c:              c1170537                 lui     a0,0xc1170
d0008310:              62a9                     lui     t0,0xa
d0008312:              96628293                 addi    t0,t0,-1690 # 9966 <_stack_size+0x5966>
d0008316:              00552a23                 sw      t0,20(a0) # c1170014 <_stack_end+0xe1150014>
d000831a:              c11c0537                 lui     a0,0xc11c0
d000831e:              458d                     li      a1,3
d0008320:              c94c                     sw      a1,20(a0)
d0008322:              4081                     li      ra,0
d0008324:              4101                     li      sp,0
d0008326:              4201                     li      tp,0
d0008328:              4281                     li      t0,0
d000832a:              4301                     li      t1,0
d000832c:              4381                     li      t2,0
d000832e:              4401                     li      s0,0
d0008330:              4481                     li      s1,0
d0008332:              4501                     li      a0,0
d0008334:              4581                     li      a1,0
d0008336:              4601                     li      a2,0
d0008338:              4681                     li      a3,0
d000833a:              4701                     li      a4,0
d000833c:              4781                     li      a5,0
d000833e:              4801                     li      a6,0
d0008340:              4881                     li      a7,0
d0008342:              4901                     li      s2,0
d0008344:              4981                     li      s3,0
d0008346:              4a01                     li      s4,0
d0008348:              4a81                     li      s5,0
d000834a:              4b01                     li      s6,0
d000834c:              4b81                     li      s7,0
d000834e:              4c01                     li      s8,0
d0008350:              4c81                     li      s9,0
d0008352:              4d01                     li      s10,0
d0008354:              4d81                     li      s11,0
d0008356:              4e01                     li      t3,0
d0008358:              4e81                     li      t4,0
d000835a:              4f01                     li      t5,0
d000835c:              4f81                     li      t6,0
d000835e:              20d9                     jal     d0008424 <rom_epmp_init>
d0008360:              0fffa517                 auipc   a0,0xfffa
d0008364:              c6850513                 addi    a0,a0,-920 # e0001fc8 <lc_state>
d0008368:              ca418593                 addi    a1,gp,-860 # e000246c <_bss_end>
d000836c:              28a1                     jal     d00083c4 <crt_section_clear>
d000836e:              10018117                 auipc   sp,0x10018
d0008372:              c8210113                 addi    sp,sp,-894 # e001fff0 <_stack_start+0x3ff0>
d0008376:              0fffa917                 auipc   s2,0xfffa
d000837a:              c5690913                 addi    s2,s2,-938 # e0001fcc <_rom_shadow_stack>
d000837e:              00000297                 auipc   t0,0x0
d0008382:              d8328293                 addi    t0,t0,-637 # d0008101 <_rom_interrupt_vector_c+0x1>
d0008386:              30529073                 csrw    mtvec,t0
d000838a:              a99d                     j       d0008800 <rom_main>

d000838c <rom_exception_handler>:
rom_irq_error():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:110
static dif_spi_host_t spi_host;

OT_ALWAYS_INLINE
static rom_error_t rom_irq_error(void) {
  uint32_t mcause;
  CSR_READ(CSR_REG_MCAUSE, &mcause);
d000838c:       34202573                csrr    a0,mcause
d0008390:       800005b7                lui     a1,0x80000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:121
  //
  // Preserve the MSB and shift the 7 LSBs into the upper byte.
  // (we preserve 7 instead of 5 because the verilog hardcodes the unused bits
  // as zero and those would be the next bits used should the number of
  // interrupt causes increase).
  mcause = (mcause & 0x80000000) | ((mcause & 0x7f) << 24);
d0008394:       8de9                    and     a1,a1,a0
d0008396:       0566                    slli    a0,a0,0x19
d0008398:       8105                    srli    a0,a0,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:122
  return kErrorInterrupt + mcause;
d000839a:       8d4d                    or      a0,a0,a1
d000839c:       004955b7                lui     a1,0x495
d00083a0:       20258593                addi    a1,a1,514 # 495202 <_rom_ext_virtual_size+0x415202>
d00083a4:       8d4d                    or      a0,a0,a1
rom_interrupt_handler():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:520
  shutdown_finalize(rom_try_boot());
}

void rom_interrupt_handler(void) {
  register rom_error_t error asm("a0") = rom_irq_error();
  asm volatile("tail shutdown_finalize;" ::"r"(error));
d00083a6:       6130406f                j       d000d1b8 <shutdown_finalize>
d00083aa:       0000                    unimp

d00083ac <_asm_exception_handler>:
_asm_exception_handler():
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:29
  .global _asm_exception_handler
  .type _asm_exception_handler, @function
_asm_exception_handler:
.L_exception_loop:
  // Request a system reset.
  li t0, TOP_EARLGREY_RSTMGR_AON_BASE_ADDR
d00083ac:       /-> c04102b7            lui     t0,0xc0410
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:30
  li t1, MULTIBIT_ASM_BOOL4_TRUE
d00083b0:       |   4319                        li      t1,6
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:31
  sw t1, RSTMGR_RESET_REQ_REG_OFFSET(t0)
d00083b2:       |   0062a223            sw      t1,4(t0) # c0410004 <_stack_end+0xe03f0004>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:37

  // Disable access to flash.
  //
  // This is done after requesting a reset so that this function will
  // work even if it is in flash.
  li t0, TOP_EARLGREY_FLASH_CTRL_CORE_BASE_ADDR
d00083b6:       |   c10002b7            lui     t0,0xc1000
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:38
  sw zero, FLASH_CTRL_DIS_REG_OFFSET(t0)
d00083ba:       |   0002a823            sw      zero,16(t0) # c1000010 <_stack_end+0xe0fe0010>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:40

  wfi
d00083be:       |   10500073            wfi
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:41
  j   .L_exception_loop
d00083c2:       \-- b7ed                        j       d00083ac <_asm_exception_handler>

d00083c4 <crt_section_clear>:
crt_section_clear():
/proc/self/cwd/sw/device/lib/crt/crt.S:41
  .global crt_section_clear
  .type crt_section_clear, @function
crt_section_clear:

  // Check that start is before end.
  bgeu a0, a1, .L_clear_nothing
d00083c4:       /-------- 00b57e63              bgeu    a0,a1,d00083e0 <crt_section_clear+0x1c>
/proc/self/cwd/sw/device/lib/crt/crt.S:44

  // Check that start and end are word aligned.
  or   t0, a0, a1
d00083c8:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:45
  andi t0, t0, 0x3
d00083cc:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:46
  bnez t0, .L_clear_error
d00083d0:       |  /----- 00029b63              bnez    t0,d00083e6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:51

.L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
d00083d4:       |  |  /-> 00052023              sw      zero,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:52
  addi a0, a0, 4
d00083d8:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:53
  bltu a0, a1, .L_clear_loop
d00083da:       |  |  \-- feb56de3              bltu    a0,a1,d00083d4 <crt_section_clear+0x10>
/proc/self/cwd/sw/device/lib/crt/crt.S:54
  ret
d00083de:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:59

.L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_clear_error
d00083e0:       \--+----X 00b51363              bne     a0,a1,d00083e6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:60
  ret
d00083e4:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:63

.L_clear_error:
  unimp
d00083e6:          \----> 0000                  unimp

d00083e8 <crt_section_copy>:
crt_section_copy():
/proc/self/cwd/sw/device/lib/crt/crt.S:95
  .global crt_section_copy
  .type crt_section_copy, @function
crt_section_copy:

  // Check that start is before end.
  bgeu a0, a1, .L_copy_nothing
d00083e8:       /-------- 02b57963              bgeu    a0,a1,d000841a <crt_section_copy+0x32>
/proc/self/cwd/sw/device/lib/crt/crt.S:98

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
d00083ec:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:99
  or   t0, t0, a2
d00083f0:       |         00c2e2b3              or      t0,t0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:100
  andi t0, t0, 0x3
d00083f4:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:101
  bnez t0, .L_copy_error
d00083f8:       |  /----- 02029463              bnez    t0,d0008420 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:118
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
d00083fc:       |  |      40c502b3              sub     t0,a0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:119
  sub  t1, a1, a0           // end - start
d0008400:       |  |      40a58333              sub     t1,a1,a0
/proc/self/cwd/sw/device/lib/crt/crt.S:120
  bltu t0, t1, .L_copy_error
d0008404:       |  +----- 0062ee63              bltu    t0,t1,d0008420 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:125

.L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
d0008408:       |  |  /-> 00062283              lw      t0,0(a2)
/proc/self/cwd/sw/device/lib/crt/crt.S:126
  addi a2, a2, 4
d000840c:       |  |  |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/lib/crt/crt.S:127
  sw   t0, 0(a0)
d000840e:       |  |  |   00552023              sw      t0,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:128
  addi a0, a0, 4
d0008412:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:129
  bltu a0, a1, .L_copy_loop
d0008414:       |  |  \-- feb56ae3              bltu    a0,a1,d0008408 <crt_section_copy+0x20>
/proc/self/cwd/sw/device/lib/crt/crt.S:130
  ret
d0008418:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:135

.L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_copy_error
d000841a:       \--+----X 00b51363              bne     a0,a1,d0008420 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:136
  ret
d000841e:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:139

.L_copy_error:
  unimp
d0008420:          \----> 0000                  unimp
d0008422:                 0000                  unimp

d0008424 <rom_epmp_init>:
rom_epmp_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:59
  .extern _epmp_stack_guard_na4

  // Setup PMP address registers.

  // ROM TEXT
  la   t0, _epmp_text_tor_lo
d0008424:       63ffa297                auipc   t0,0x63ffa
d0008428:       bdc28293                addi    t0,t0,-1060 # 34002000 <_stack_end+0x53fe2000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:60
  csrw pmpaddr0, t0
d000842c:       3b029073                csrw    pmpaddr0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:61
  la   t0, _epmp_text_tor_hi
d0008430:       63ffb297                auipc   t0,0x63ffb
d0008434:       0e428293                addi    t0,t0,228 # 34003514 <_stack_end+0x53fe3514>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:62
  csrw pmpaddr1, t0
d0008438:       3b129073                csrw    pmpaddr1,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:65

  // ROM
  li   t0, NAPOT(TOP_EARLGREY_ROM_BASE_ADDR, TOP_EARLGREY_ROM_SIZE_BYTES)
d000843c:       340032b7                lui     t0,0x34003
d0008440:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:66
  csrw pmpaddr2, t0
d0008442:       3b229073                csrw    pmpaddr2,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:69

  // ROM_EXT TEXT (configured after signature verification)
  csrw pmpaddr3, zero // ROM_EXT TEXT low
d0008446:       3b301073                csrw    pmpaddr3,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:70
  csrw pmpaddr4, zero // ROM_EXT TEXT high
d000844a:       3b401073                csrw    pmpaddr4,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:73

  // eFLASH
  li   t0, NAPOT(TOP_EARLGREY_EFLASH_BASE_ADDR, TOP_EARLGREY_EFLASH_SIZE_BYTES)
d000844e:       3c0202b7                lui     t0,0x3c020
d0008452:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:74
  csrw pmpaddr5, t0
d0008454:       3b529073                csrw    pmpaddr5,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:77

  // MMIO
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR)
d0008458:       6291                    lui     t0,0x4
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:78
  csrw pmpaddr10, t0
d000845a:       3ba29073                csrw    pmpaddr10,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:79
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR + TOP_EARLGREY_MMIO_SIZE_BYTES)
d000845e:       340002b7                lui     t0,0x34000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:80
  csrw pmpaddr11, t0
d0008462:       3bb29073                csrw    pmpaddr11,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:83

  // Debug ROM
  li   t0, NAPOT(TOP_EARLGREY_RV_DM_MEM_BASE_ADDR, TOP_EARLGREY_RV_DM_MEM_SIZE_BYTES)
d0008466:       1ff00293                li      t0,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:84
  csrw pmpaddr13, t0
d000846a:       3bd29073                csrw    pmpaddr13,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:87

  // Stack guard
  la   t0, _epmp_stack_guard_na4
d000846e:       67fff297                auipc   t0,0x67fff
d0008472:       b9228293                addi    t0,t0,-1134 # 38007000 <_stack_end+0x57fe7000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:88
  csrw pmpaddr14, t0
d0008476:       3be29073                csrw    pmpaddr14,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:91

  // RAM
  li   t0, NAPOT(TOP_EARLGREY_RAM_MAIN_BASE_ADDR, TOP_EARLGREY_RAM_MAIN_SIZE_BYTES)
d000847a:       380042b7                lui     t0,0x38004
d000847e:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:92
  csrw pmpaddr15, t0
d0008480:       3bf29073                csrw    pmpaddr15,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:95

  // Set PMP configuration registers.
  li   t0, CFG_INDEX(1  % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRX) | /* ROM TEXT    */ \
d0008484:       009992b7                lui     t0,0x999
d0008488:       d0028293                addi    t0,t0,-768 # 998d00 <_rom_ext_virtual_size+0x918d00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:97
           CFG_INDEX(2  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* ROM         */
  li   t1, CFG_INDEX(5  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* eFLASH      */
d000848c:       6329                    lui     t1,0xa
d000848e:       90030313                addi    t1,t1,-1792 # 9900 <_stack_size+0x5900>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:98
  li   t2, CFG_INDEX(11 % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRW)   /* MMIO        */
d0008492:       8b0003b7                lui     t2,0x8b000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:99
  li   t3, CFG_INDEX(13 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRWX)| /* Debug ROM   */ \
d0008496:       9b90ae37                lui     t3,0x9b90a
d000849a:       f00e0e13                addi    t3,t3,-256 # 9b909f00 <_stack_end+0xbb8e9f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:104
           CFG_INDEX(14 % 4, EPMP_CFG_A_NA4   | EPMP_CFG_L)   | /* Stack Guard */ \
           CFG_INDEX(15 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRW)   /* RAM         */
  //li   t4, 0x6

  csrw pmpcfg0, t0
d000849e:       3a029073                csrw    pmpcfg0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:105
  csrw pmpcfg1, t1
d00084a2:       3a131073                csrw    pmpcfg1,t1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:106
  csrw pmpcfg2, t2
d00084a6:       3a239073                csrw    pmpcfg2,t2
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:107
  csrw pmpcfg3, t3
d00084aa:       3a3e1073                csrw    pmpcfg3,t3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:110
  //csrw EPMP_MSECCFG , t4      

  ret
d00084ae:       8082                    ret
d00084b0:       0000                    unimp
d00084b2:       0000                    unimp
d00084b4:       0000                    unimp
d00084b6:       0000                    unimp
d00084b8:       0000                    unimp
d00084ba:       0000                    unimp
d00084bc:       0000                    unimp
d00084be:       0000                    unimp
d00084c0:       0000                    unimp
d00084c2:       0000                    unimp
d00084c4:       0000                    unimp
d00084c6:       0000                    unimp
d00084c8:       0000                    unimp
d00084ca:       0000                    unimp
d00084cc:       0000                    unimp
d00084ce:       0000                    unimp
d00084d0:       0000                    unimp
d00084d2:       0000                    unimp
d00084d4:       0000                    unimp
d00084d6:       0000                    unimp
d00084d8:       0000                    unimp
d00084da:       0000                    unimp
d00084dc:       0000                    unimp
d00084de:       0000                    unimp
d00084e0:       0000                    unimp
d00084e2:       0000                    unimp
d00084e4:       0000                    unimp
d00084e6:       0000                    unimp
d00084e8:       0000                    unimp
d00084ea:       0000                    unimp
d00084ec:       0000                    unimp
d00084ee:       0000                    unimp
d00084f0:       0000                    unimp
d00084f2:       0000                    unimp
d00084f4:       0000                    unimp
d00084f6:       0000                    unimp
d00084f8:       0000                    unimp
d00084fa:       0000                    unimp
d00084fc:       0000                    unimp
d00084fe:       0000                    unimp
d0008500:       0000                    unimp
d0008502:       0000                    unimp
d0008504:       0000                    unimp
d0008506:       0000                    unimp
d0008508:       0000                    unimp
d000850a:       0000                    unimp
d000850c:       0000                    unimp
d000850e:       0000                    unimp
d0008510:       0000                    unimp
d0008512:       0000                    unimp
d0008514:       0000                    unimp
d0008516:       0000                    unimp
d0008518:       0000                    unimp
d000851a:       0000                    unimp
d000851c:       0000                    unimp
d000851e:       0000                    unimp
d0008520:       0000                    unimp
d0008522:       0000                    unimp
d0008524:       0000                    unimp
d0008526:       0000                    unimp
d0008528:       0000                    unimp
d000852a:       0000                    unimp
d000852c:       0000                    unimp
d000852e:       0000                    unimp
d0008530:       0000                    unimp
d0008532:       0000                    unimp
d0008534:       0000                    unimp
d0008536:       0000                    unimp
d0008538:       0000                    unimp
d000853a:       0000                    unimp
d000853c:       0000                    unimp
d000853e:       0000                    unimp
d0008540:       0000                    unimp
d0008542:       0000                    unimp
d0008544:       0000                    unimp
d0008546:       0000                    unimp
d0008548:       0000                    unimp
d000854a:       0000                    unimp
d000854c:       0000                    unimp
d000854e:       0000                    unimp
d0008550:       0000                    unimp
d0008552:       0000                    unimp
d0008554:       0000                    unimp
d0008556:       0000                    unimp
d0008558:       0000                    unimp
d000855a:       0000                    unimp
d000855c:       0000                    unimp
d000855e:       0000                    unimp
d0008560:       0000                    unimp
d0008562:       0000                    unimp
d0008564:       0000                    unimp
d0008566:       0000                    unimp
d0008568:       0000                    unimp
d000856a:       0000                    unimp
d000856c:       0000                    unimp
d000856e:       0000                    unimp
d0008570:       0000                    unimp
d0008572:       0000                    unimp
d0008574:       0000                    unimp
d0008576:       0000                    unimp
d0008578:       0000                    unimp
d000857a:       0000                    unimp
d000857c:       0000                    unimp
d000857e:       0000                    unimp
d0008580:       0000                    unimp
d0008582:       0000                    unimp
d0008584:       0000                    unimp
d0008586:       0000                    unimp
d0008588:       0000                    unimp
d000858a:       0000                    unimp
d000858c:       0000                    unimp
d000858e:       0000                    unimp
d0008590:       0000                    unimp
d0008592:       0000                    unimp
d0008594:       0000                    unimp
d0008596:       0000                    unimp
d0008598:       0000                    unimp
d000859a:       0000                    unimp
d000859c:       0000                    unimp
d000859e:       0000                    unimp
d00085a0:       0000                    unimp
d00085a2:       0000                    unimp
d00085a4:       0000                    unimp
d00085a6:       0000                    unimp
d00085a8:       0000                    unimp
d00085aa:       0000                    unimp
d00085ac:       0000                    unimp
d00085ae:       0000                    unimp
d00085b0:       0000                    unimp
d00085b2:       0000                    unimp
d00085b4:       0000                    unimp
d00085b6:       0000                    unimp
d00085b8:       0000                    unimp
d00085ba:       0000                    unimp
d00085bc:       0000                    unimp
d00085be:       0000                    unimp
d00085c0:       0000                    unimp
d00085c2:       0000                    unimp
d00085c4:       0000                    unimp
d00085c6:       0000                    unimp
d00085c8:       0000                    unimp
d00085ca:       0000                    unimp
d00085cc:       0000                    unimp
d00085ce:       0000                    unimp
d00085d0:       0000                    unimp
d00085d2:       0000                    unimp
d00085d4:       0000                    unimp
d00085d6:       0000                    unimp
d00085d8:       0000                    unimp
d00085da:       0000                    unimp
d00085dc:       0000                    unimp
d00085de:       0000                    unimp
d00085e0:       0000                    unimp
d00085e2:       0000                    unimp
d00085e4:       0000                    unimp
d00085e6:       0000                    unimp
d00085e8:       0000                    unimp
d00085ea:       0000                    unimp
d00085ec:       0000                    unimp
d00085ee:       0000                    unimp
d00085f0:       0000                    unimp
d00085f2:       0000                    unimp
d00085f4:       0000                    unimp
d00085f6:       0000                    unimp
d00085f8:       0000                    unimp
d00085fa:       0000                    unimp
d00085fc:       0000                    unimp
d00085fe:       0000                    unimp
d0008600:       0000                    unimp
d0008602:       0000                    unimp
d0008604:       0000                    unimp
d0008606:       0000                    unimp
d0008608:       0000                    unimp
d000860a:       0000                    unimp
d000860c:       0000                    unimp
d000860e:       0000                    unimp
d0008610:       0000                    unimp
d0008612:       0000                    unimp
d0008614:       0000                    unimp
d0008616:       0000                    unimp
d0008618:       0000                    unimp
d000861a:       0000                    unimp
d000861c:       0000                    unimp
d000861e:       0000                    unimp
d0008620:       0000                    unimp
d0008622:       0000                    unimp
d0008624:       0000                    unimp
d0008626:       0000                    unimp
d0008628:       0000                    unimp
d000862a:       0000                    unimp
d000862c:       0000                    unimp
d000862e:       0000                    unimp
d0008630:       0000                    unimp
d0008632:       0000                    unimp
d0008634:       0000                    unimp
d0008636:       0000                    unimp
d0008638:       0000                    unimp
d000863a:       0000                    unimp
d000863c:       0000                    unimp
d000863e:       0000                    unimp
d0008640:       0000                    unimp
d0008642:       0000                    unimp
d0008644:       0000                    unimp
d0008646:       0000                    unimp
d0008648:       0000                    unimp
d000864a:       0000                    unimp
d000864c:       0000                    unimp
d000864e:       0000                    unimp
d0008650:       0000                    unimp
d0008652:       0000                    unimp
d0008654:       0000                    unimp
d0008656:       0000                    unimp
d0008658:       0000                    unimp
d000865a:       0000                    unimp
d000865c:       0000                    unimp
d000865e:       0000                    unimp
d0008660:       0000                    unimp
d0008662:       0000                    unimp
d0008664:       0000                    unimp
d0008666:       0000                    unimp
d0008668:       0000                    unimp
d000866a:       0000                    unimp
d000866c:       0000                    unimp
d000866e:       0000                    unimp
d0008670:       0000                    unimp
d0008672:       0000                    unimp
d0008674:       0000                    unimp
d0008676:       0000                    unimp
d0008678:       0000                    unimp
d000867a:       0000                    unimp
d000867c:       0000                    unimp
d000867e:       0000                    unimp
d0008680:       0000                    unimp
d0008682:       0000                    unimp
d0008684:       0000                    unimp
d0008686:       0000                    unimp
d0008688:       0000                    unimp
d000868a:       0000                    unimp
d000868c:       0000                    unimp
d000868e:       0000                    unimp
d0008690:       0000                    unimp
d0008692:       0000                    unimp
d0008694:       0000                    unimp
d0008696:       0000                    unimp
d0008698:       0000                    unimp
d000869a:       0000                    unimp
d000869c:       0000                    unimp
d000869e:       0000                    unimp
d00086a0:       0000                    unimp
d00086a2:       0000                    unimp
d00086a4:       0000                    unimp
d00086a6:       0000                    unimp
d00086a8:       0000                    unimp
d00086aa:       0000                    unimp
d00086ac:       0000                    unimp
d00086ae:       0000                    unimp
d00086b0:       0000                    unimp
d00086b2:       0000                    unimp
d00086b4:       0000                    unimp
d00086b6:       0000                    unimp
d00086b8:       0000                    unimp
d00086ba:       0000                    unimp
d00086bc:       0000                    unimp
d00086be:       0000                    unimp
d00086c0:       0000                    unimp
d00086c2:       0000                    unimp
d00086c4:       0000                    unimp
d00086c6:       0000                    unimp
d00086c8:       0000                    unimp
d00086ca:       0000                    unimp
d00086cc:       0000                    unimp
d00086ce:       0000                    unimp
d00086d0:       0000                    unimp
d00086d2:       0000                    unimp
d00086d4:       0000                    unimp
d00086d6:       0000                    unimp
d00086d8:       0000                    unimp
d00086da:       0000                    unimp
d00086dc:       0000                    unimp
d00086de:       0000                    unimp
d00086e0:       0000                    unimp
d00086e2:       0000                    unimp
d00086e4:       0000                    unimp
d00086e6:       0000                    unimp
d00086e8:       0000                    unimp
d00086ea:       0000                    unimp
d00086ec:       0000                    unimp
d00086ee:       0000                    unimp
d00086f0:       0000                    unimp
d00086f2:       0000                    unimp
d00086f4:       0000                    unimp
d00086f6:       0000                    unimp
d00086f8:       0000                    unimp
d00086fa:       0000                    unimp
d00086fc:       0000                    unimp
d00086fe:       0000                    unimp
d0008700:       0000                    unimp
d0008702:       0000                    unimp
d0008704:       0000                    unimp
d0008706:       0000                    unimp
d0008708:       0000                    unimp
d000870a:       0000                    unimp
d000870c:       0000                    unimp
d000870e:       0000                    unimp
d0008710:       0000                    unimp
d0008712:       0000                    unimp
d0008714:       0000                    unimp
d0008716:       0000                    unimp
d0008718:       0000                    unimp
d000871a:       0000                    unimp
d000871c:       0000                    unimp
d000871e:       0000                    unimp
d0008720:       0000                    unimp
d0008722:       0000                    unimp
d0008724:       0000                    unimp
d0008726:       0000                    unimp
d0008728:       0000                    unimp
d000872a:       0000                    unimp
d000872c:       0000                    unimp
d000872e:       0000                    unimp
d0008730:       0000                    unimp
d0008732:       0000                    unimp
d0008734:       0000                    unimp
d0008736:       0000                    unimp
d0008738:       0000                    unimp
d000873a:       0000                    unimp
d000873c:       0000                    unimp
d000873e:       0000                    unimp
d0008740:       0000                    unimp
d0008742:       0000                    unimp
d0008744:       0000                    unimp
d0008746:       0000                    unimp
d0008748:       0000                    unimp
d000874a:       0000                    unimp
d000874c:       0000                    unimp
d000874e:       0000                    unimp
d0008750:       0000                    unimp
d0008752:       0000                    unimp
d0008754:       0000                    unimp
d0008756:       0000                    unimp
d0008758:       0000                    unimp
d000875a:       0000                    unimp
d000875c:       0000                    unimp
d000875e:       0000                    unimp
d0008760:       0000                    unimp
d0008762:       0000                    unimp
d0008764:       0000                    unimp
d0008766:       0000                    unimp
d0008768:       0000                    unimp
d000876a:       0000                    unimp
d000876c:       0000                    unimp
d000876e:       0000                    unimp
d0008770:       0000                    unimp
d0008772:       0000                    unimp
d0008774:       0000                    unimp
d0008776:       0000                    unimp
d0008778:       0000                    unimp
d000877a:       0000                    unimp
d000877c:       0000                    unimp
d000877e:       0000                    unimp
d0008780:       0000                    unimp
d0008782:       0000                    unimp
d0008784:       0000                    unimp
d0008786:       0000                    unimp
d0008788:       0000                    unimp
d000878a:       0000                    unimp
d000878c:       0000                    unimp
d000878e:       0000                    unimp
d0008790:       0000                    unimp
d0008792:       0000                    unimp
d0008794:       0000                    unimp
d0008796:       0000                    unimp
d0008798:       0000                    unimp
d000879a:       0000                    unimp
d000879c:       0000                    unimp
d000879e:       0000                    unimp
d00087a0:       0000                    unimp
d00087a2:       0000                    unimp
d00087a4:       0000                    unimp
d00087a6:       0000                    unimp
d00087a8:       0000                    unimp
d00087aa:       0000                    unimp
d00087ac:       0000                    unimp
d00087ae:       0000                    unimp
d00087b0:       0000                    unimp
d00087b2:       0000                    unimp
d00087b4:       0000                    unimp
d00087b6:       0000                    unimp
d00087b8:       0000                    unimp
d00087ba:       0000                    unimp
d00087bc:       0000                    unimp
d00087be:       0000                    unimp
d00087c0:       0000                    unimp
d00087c2:       0000                    unimp
d00087c4:       0000                    unimp
d00087c6:       0000                    unimp
d00087c8:       0000                    unimp
d00087ca:       0000                    unimp
d00087cc:       0000                    unimp
d00087ce:       0000                    unimp
d00087d0:       0000                    unimp
d00087d2:       0000                    unimp
d00087d4:       0000                    unimp
d00087d6:       0000                    unimp
d00087d8:       0000                    unimp
d00087da:       0000                    unimp
d00087dc:       0000                    unimp
d00087de:       0000                    unimp
d00087e0:       0000                    unimp
d00087e2:       0000                    unimp
d00087e4:       0000                    unimp
d00087e6:       0000                    unimp
d00087e8:       0000                    unimp
d00087ea:       0000                    unimp
d00087ec:       0000                    unimp
d00087ee:       0000                    unimp
d00087f0:       0000                    unimp
d00087f2:       0000                    unimp
d00087f4:       0000                    unimp
d00087f6:       0000                    unimp
d00087f8:       0000                    unimp
d00087fa:       0000                    unimp
d00087fc:       0000                    unimp
d00087fe:       0000                    unimp

Disassembly of section .text:

d0008800 <rom_main>:
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:492
void rom_main(void) {
d0008800:                 1101                  addi    sp,sp,-32
d0008802:                 ce06                  sw      ra,28(sp)
d0008804:                 cc22                  sw      s0,24(sp)
d0008806:                 ca26                  sw      s1,20(sp)
d0008808:                 c84a                  sw      s2,16(sp)
d000880a:                 c64e                  sw      s3,12(sp)
d000880c:                 c452                  sw      s4,8(sp)
d000880e:                 c256                  sw      s5,4(sp)
d0008810:                 c0418a93              addi    s5,gp,-1020 # e00023cc <rom_counters>
d0008814:                 1a500513              li      a0,421
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:494
  CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomMain);
d0008818:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 1, kCfiRomInit);
d000881c:                 000aa583              lw      a1,0(s5)
d0008820:             /-- 00a58663              beq     a1,a0,d000882c <rom_main+0x2c>
d0008824:             |   0000                  unimp
d0008826:             |   0000                  unimp
d0008828:             |   0000                  unimp
d000882a:             |   0000                  unimp
d000882c:             \-> 000aa503              lw      a0,0(s5)
d0008830:                 05a50513              addi    a0,a0,90
d0008834:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
 * loop; however, the barriers in each loop iteration force a particular order
 * is observed.
 *
 * @param val A value to create a barrier for.
 */
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008838:                 6505                  lui     a0,0x1
d000883a:                 83650513              addi    a0,a0,-1994 # 836 <_epmp_reset_rx_size+0x36>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
d000883e:                 00aaa223              sw      a0,4(s5)
d0008842:                 000aa583              lw      a1,0(s5)
d0008846:                 1ff00613              li      a2,511
d000884a:             /-- 00c58663              beq     a1,a2,d0008856 <rom_main+0x56>
d000884e:             |   0000                  unimp
d0008850:             |   0000                  unimp
d0008852:             |   0000                  unimp
d0008854:             |   0000                  unimp
d0008856:             \-> 000aa583              lw      a1,0(s5)
d000885a:                 05a58593              addi    a1,a1,90
d000885e:                 00baa023              sw      a1,0(s5)
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:167
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 1);
d0008862:                 004aa583              lw      a1,4(s5)
d0008866:             /-- 00a58663              beq     a1,a0,d0008872 <rom_main+0x72>
d000886a:             |   0000                  unimp
d000886c:             |   0000                  unimp
d000886e:             |   0000                  unimp
d0008870:             |   0000                  unimp
d0008872:             \-> 004aa503              lw      a0,4(s5)
d0008876:                 05a50513              addi    a0,a0,90
d000887a:                 00aaa223              sw      a0,4(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:168
  sec_mmio_init();
d000887e:                 540040ef              jal     ra,d000cdbe <sec_mmio_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:170
  pinmux_init();
d0008882:                 759020ef              jal     ra,d000b7da <pinmux_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:172
  uart_init(kUartNCOValue);
d0008886:                 00005517              auipc   a0,0x5
d000888a:                 6da50513              addi    a0,a0,1754 # d000df60 <kUartNCOValue>
d000888e:                 4108                  lw      a0,0(a0)
d0008890:                 006030ef              jal     ra,d000b896 <uart_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:186
  CSR_WRITE(CSR_REG_SECURESEED, rnd_uint32());
d0008894:                 038040ef              jal     ra,d000c8cc <rnd_uint32>
d0008898:                 7c151073              csrw    0x7c1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:190
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d000889c:                 7c002473              csrr    s0,0x7c0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:193
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET));
d00088a0:                 10c00513              li      a0,268
d00088a4:                 512040ef              jal     ra,d000cdb6 <otp_read32>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
 */
OT_WARN_UNUSED_RESULT
inline uint32_t bitfield_field32_write(uint32_t bitfield,
                                       bitfield_field32_t field,
                                       uint32_t value) {
  bitfield &= ~(field.mask << field.index);
d00088a8:                 fc047593              andi    a1,s0,-64
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d00088ac:                 03f57513              andi    a0,a0,63
d00088b0:                 8d4d                  or      a0,a0,a1
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:194
  CSR_WRITE(CSR_REG_CPUCTRL, cpuctrl_csr);
d00088b2:                 7c051073              csrw    0x7c0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:196
  lc_state = lifecycle_state_get();
d00088b6:                 2ee040ef              jal     ra,d000cba4 <lifecycle_state_get>
d00088ba:                 0fff9417              auipc   s0,0xfff9
d00088be:                 70e40413              addi    s0,s0,1806 # e0001fc8 <lc_state>
d00088c2:                 c008                  sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:199
  rom_epmp_config_debug_rom(lc_state);
d00088c4:                 352030ef              jal     ra,d000bc16 <rom_epmp_config_debug_rom>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:202
  watchdog_init(lc_state);
d00088c8:                 4008                  lw      a0,0(s0)
d00088ca:                 016030ef              jal     ra,d000b8e0 <watchdog_init>
d00088ce:                 0fff7497              auipc   s1,0xfff7
d00088d2:                 7a648493              addi    s1,s1,1958 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:203
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d00088d6:                 448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:206
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d00088d8:                 4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:203
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d00088da:                 0591                  addi    a1,a1,4
d00088dc:                 c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:206
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d00088de:                 205010ef              jal     ra,d000a2e2 <shutdown_init>
d00088e2:                 8a2a                  mv      s4,a0
d00088e4:                 73900993              li      s3,1849
d00088e8:       /-------- 09351f63              bne     a0,s3,d0008986 <rom_main+0x186>
d00088ec:       |     /-- 013a0663              beq     s4,s3,d00088f8 <rom_main+0xf8>
d00088f0:       |     |   0000                  unimp
d00088f2:       |     |   0000                  unimp
d00088f4:       |     |   0000                  unimp
d00088f6:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:208
  flash_ctrl_init();
d00088f8:       |     \-> 2e6020ef              jal     ra,d000abde <flash_ctrl_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:209
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d00088fc:       |         448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:212
  rom_epmp_state_init(lc_state);
d00088fe:       |         4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:209
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008900:       |         058d                  addi    a1,a1,3
d0008902:       |         c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:212
  rom_epmp_state_init(lc_state);
d0008904:       |         15c030ef              jal     ra,d000ba60 <rom_epmp_state_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:215
  HARDENED_RETURN_IF_ERROR(ast_check(lc_state));
d0008908:       |         4008                  lw      a0,0(s0)
d000890a:       |         1b6020ef              jal     ra,d000aac0 <ast_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d000890e:       |         85aa                  mv      a1,a0
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:215
d0008910:       |  /----- 07359a63              bne     a1,s3,d0008984 <rom_main+0x184>
d0008914:       |  |      73900a13              li      s4,1849
d0008918:       |  |  /-- 01450663              beq     a0,s4,d0008924 <rom_main+0x124>
d000891c:       |  |  |   0000                  unimp
d000891e:       |  |  |   0000                  unimp
d0008920:       |  |  |   0000                  unimp
d0008922:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:219
  uint32_t reset_reasons = rstmgr_reason_get();
d0008924:       |  |  \-> 727020ef              jal     ra,d000b84a <rstmgr_reason_get>
d0008928:       |  |      892a                  mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:222
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RET_RAM_RESET_MASK_OFFSET);
d000892a:       |  |      10000513              li      a0,256
d000892e:       |  |      488040ef              jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:221
      (1 << kRstmgrReasonPowerOn) |
d0008932:       |  |      00156513              ori     a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:223
  if ((reset_reasons & reset_mask) != 0) {
d0008936:       |  |      01257533              and     a0,a0,s2
d000893a:       |  |  /-- c119                  beqz    a0,d0008940 <rom_main+0x140>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:224
    retention_sram_init();
d000893c:       |  |  |   705020ef              jal     ra,d000b840 <retention_sram_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:227
  retention_sram_get()->reset_reasons = reset_reasons;
d0008940:       |  |  \-> 6fb020ef              jal     ra,d000b83a <retention_sram_get>
d0008944:       |  |      01252023              sw      s2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:228
  rstmgr_reason_clear(reset_reasons);
d0008948:       |  |      854a                  mv      a0,s2
d000894a:       |  |      735020ef              jal     ra,d000b87e <rstmgr_reason_clear>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:231
  device_fpga_version_print();
d000894e:       |  |      069040ef              jal     ra,d000d1b6 <device_fpga_version_print>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:233
  sec_mmio_check_values(rnd_uint32());
d0008952:       |  |      77b030ef              jal     ra,d000c8cc <rnd_uint32>
d0008956:       |  |      610040ef              jal     ra,d000cf66 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:234
  sec_mmio_check_counters(/*expected_check_count=*/1);
d000895a:       |  |      4505                  li      a0,1
d000895c:       |  |      67a040ef              jal     ra,d000cfd6 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:236
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 2);
d0008960:       |  |      004aa503              lw      a0,4(s5)
d0008964:       |  |      6585                  lui     a1,0x1
d0008966:       |  |      89058593              addi    a1,a1,-1904 # 890 <_epmp_reset_rx_size+0x90>
d000896a:       |  |  /-- 00b50663              beq     a0,a1,d0008976 <rom_main+0x176>
d000896e:       |  |  |   0000                  unimp
d0008970:       |  |  |   0000                  unimp
d0008972:       |  |  |   0000                  unimp
d0008974:       |  |  |   0000                  unimp
d0008976:       |  |  \-> 004aa503              lw      a0,4(s5)
d000897a:       |  |      05a50513              addi    a0,a0,90
d000897e:       |  |      00aaa223              sw      a0,4(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008982:       +--|----- a011                  j       d0008986 <rom_main+0x186>
d0008984:       |  \----> 8a2a                  mv      s4,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008986:       \-------> 8552                  mv      a0,s4
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:496
  SHUTDOWN_IF_ERROR(rom_init());
d0008988:       /-------- 07351863              bne     a0,s3,d00089f8 <rom_main+0x1f8>
d000898c:       |         73900413              li      s0,1849
d0008990:       |     /-- 008a0663              beq     s4,s0,d000899c <rom_main+0x19c>
d0008994:       |     |   0000                  unimp
d0008996:       |     |   0000                  unimp
d0008998:       |     |   0000                  unimp
d000899a:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:498
  rom_bootstrap_message();
d000899c:       |     \-> 2845                  jal     d0008a4c <rom_bootstrap_message>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:500
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomMain, 3);
d000899e:       |         000aa503              lw      a0,0(s5)
d00089a2:       |         25900593              li      a1,601
d00089a6:       |     /-- 00b50663              beq     a0,a1,d00089b2 <rom_main+0x1b2>
d00089aa:       |     |   0000                  unimp
d00089ac:       |     |   0000                  unimp
d00089ae:       |     |   0000                  unimp
d00089b0:       |     |   0000                  unimp
d00089b2:       |     \-> 000aa503              lw      a0,0(s5)
d00089b6:       |         05a50513              addi    a0,a0,90
d00089ba:       |         00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:501
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomInit, 3);
d00089be:       |         004aa503              lw      a0,4(s5)
d00089c2:       |         6585                  lui     a1,0x1
d00089c4:       |         8ea58593              addi    a1,a1,-1814 # 8ea <_epmp_reset_rx_size+0xea>
d00089c8:       |     /-- 00b50663              beq     a0,a1,d00089d4 <rom_main+0x1d4>
d00089cc:       |     |   0000                  unimp
d00089ce:       |     |   0000                  unimp
d00089d0:       |     |   0000                  unimp
d00089d2:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:503
  hardened_bool_t bootstrap_req = bootstrap_requested();
d00089d4:       |     \-> 7ad000ef              jal     ra,d0009980 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00089d8:       |         85aa                  mv      a1,a0
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:504
  if (launder32(bootstrap_req) == kHardenedBoolTrue) {
d00089da:       |  /----- 02859263              bne     a1,s0,d00089fe <rom_main+0x1fe>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:505
    HARDENED_CHECK_EQ(bootstrap_req, kHardenedBoolTrue);
d00089de:       |  |  /-- 00850663              beq     a0,s0,d00089ea <rom_main+0x1ea>
d00089e2:       |  |  |   0000                  unimp
d00089e4:       |  |  |   0000                  unimp
d00089e6:       |  |  |   0000                  unimp
d00089e8:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:506
    rom_bootstrap_message();
d00089ea:       |  |  \-> 208d                  jal     d0008a4c <rom_bootstrap_message>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:507
    watchdog_disable();
d00089ec:       |  |      068030ef              jal     ra,d000ba54 <watchdog_disable>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:508
    shutdown_finalize(bootstrap());
d00089f0:       |  |      7e7000ef              jal     ra,d00099d6 <bootstrap>
d00089f4:       |  |      7c4040ef              jal     ra,d000d1b8 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:496
  SHUTDOWN_IF_ERROR(rom_init());
d00089f8:       \--|----> 8552                  mv      a0,s4
d00089fa:          |      7be040ef              jal     ra,d000d1b8 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:512
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 4, kCfiRomTryBoot);
d00089fe:          \----> 000aa503              lw      a0,0(s5)
d0008a02:                 2b300593              li      a1,691
d0008a06:             /-- 00b50663              beq     a0,a1,d0008a12 <rom_main+0x212>
d0008a0a:             |   0000                  unimp
d0008a0c:             |   0000                  unimp
d0008a0e:             |   0000                  unimp
d0008a10:             |   0000                  unimp
d0008a12:             \-> 000aa503              lw      a0,0(s5)
d0008a16:                 05a50513              addi    a0,a0,90
d0008a1a:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008a1e:                 28f00513              li      a0,655
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:512
d0008a22:                 00aaa623              sw      a0,12(s5)
d0008a26:                 000aa503              lw      a0,0(s5)
d0008a2a:                 30d00593              li      a1,781
d0008a2e:             /-- 00b50663              beq     a0,a1,d0008a3a <rom_main+0x23a>
d0008a32:             |   0000                  unimp
d0008a34:             |   0000                  unimp
d0008a36:             |   0000                  unimp
d0008a38:             |   0000                  unimp
d0008a3a:             \-> 000aa503              lw      a0,0(s5)
d0008a3e:                 05a50513              addi    a0,a0,90
d0008a42:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:515
  shutdown_finalize(rom_try_boot());
d0008a46:                 28fd                  jal     d0008b44 <rom_try_boot>
d0008a48:                 770040ef              jal     ra,d000d1b8 <shutdown_finalize>

d0008a4c <rom_bootstrap_message>:
rom_bootstrap_message():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:128
static void rom_bootstrap_message(void) {
d0008a4c:       1141                    addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:129
  uart_putchar('c');
d0008a4e:       c606                    sw      ra,12(sp)
d0008a50:       06300513                li      a0,99
d0008a54:       671020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:130
  uart_putchar('o');
d0008a58:       06f00513                li      a0,111
d0008a5c:       669020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:131
  uart_putchar('c');
d0008a60:       06300513                li      a0,99
d0008a64:       661020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:132
  uart_putchar('h');
d0008a68:       06800513                li      a0,104
d0008a6c:       659020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:133
  uart_putchar('i');
d0008a70:       06900513                li      a0,105
d0008a74:       651020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:134
  uart_putchar('n');
d0008a78:       06e00513                li      a0,110
d0008a7c:       649020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:135
  uart_putchar('a');
d0008a80:       06100513                li      a0,97
d0008a84:       641020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:136
  uart_putchar('?');
d0008a88:       03f00513                li      a0,63
d0008a8c:       639020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:137
  uart_putchar('\r');
d0008a90:       4535                    li      a0,13
d0008a92:       633020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:138
  uart_putchar('\n');
d0008a96:       4529                    li      a0,10
d0008a98:       62d020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:139
  uart_putchar('a');
d0008a9c:       06100513                li      a0,97
d0008aa0:       625020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:140
  uart_putchar('a');
d0008aa4:       06100513                li      a0,97
d0008aa8:       61d020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:141
  uart_putchar('a');
d0008aac:       06100513                li      a0,97
d0008ab0:       615020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:142
  uart_putchar('h');
d0008ab4:       06800513                li      a0,104
d0008ab8:       60d020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:143
  uart_putchar(',');
d0008abc:       02c00513                li      a0,44
d0008ac0:       605020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:144
  uart_putchar(' ');
d0008ac4:       02000513                li      a0,32
d0008ac8:       5fd020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:145
  uart_putchar('b');
d0008acc:       06200513                li      a0,98
d0008ad0:       5f5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:146
  uart_putchar('e');
d0008ad4:       06500513                li      a0,101
d0008ad8:       5ed020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:147
  uart_putchar('l');
d0008adc:       06c00513                li      a0,108
d0008ae0:       5e5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:148
  uart_putchar('l');
d0008ae4:       06c00513                li      a0,108
d0008ae8:       5dd020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:149
  uart_putchar('a');
d0008aec:       06100513                li      a0,97
d0008af0:       5d5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:150
  uart_putchar(' ');
d0008af4:       02000513                li      a0,32
d0008af8:       5cd020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:151
  uart_putchar('f');
d0008afc:       06600513                li      a0,102
d0008b00:       5c5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:152
  uart_putchar('r');
d0008b04:       07200513                li      a0,114
d0008b08:       5bd020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:153
  uart_putchar('e');
d0008b0c:       06500513                li      a0,101
d0008b10:       5b5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:154
  uart_putchar('s');
d0008b14:       07300513                li      a0,115
d0008b18:       5ad020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:155
  uart_putchar('c');
d0008b1c:       06300513                li      a0,99
d0008b20:       5a5020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:156
  uart_putchar('a');
d0008b24:       06100513                li      a0,97
d0008b28:       59d020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:157
  uart_putchar('!');
d0008b2c:       02100513                li      a0,33
d0008b30:       595020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:158
  uart_putchar('\r');
d0008b34:       4535                    li      a0,13
d0008b36:       58f020ef                jal     ra,d000b8c4 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:159
  uart_putchar('\n');
d0008b3a:       4529                    li      a0,10
d0008b3c:       40b2                    lw      ra,12(sp)
d0008b3e:       0141                    addi    sp,sp,16
d0008b40:       5850206f                j       d000b8c4 <uart_putchar>

d0008b44 <rom_try_boot>:
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:460
static rom_error_t rom_try_boot(void) {
d0008b44:                    1101                       addi    sp,sp,-32
d0008b46:                    ce06                       sw      ra,28(sp)
d0008b48:                    cc22                       sw      s0,24(sp)
d0008b4a:                    ca26                       sw      s1,20(sp)
d0008b4c:                    c84a                       sw      s2,16(sp)
d0008b4e:                    c64e                       sw      s3,12(sp)
d0008b50:                    c452                       sw      s4,8(sp)
d0008b52:                    c256                       sw      s5,4(sp)
d0008b54:                    c0418413           addi    s0,gp,-1020 # e00023cc <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:461
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 1);
d0008b58:                    4448                       lw      a0,12(s0)
d0008b5a:                    28f00593           li      a1,655
d0008b5e:                /-- 00b50663           beq     a0,a1,d0008b6a <rom_try_boot+0x26>
d0008b62:                |   0000                       unimp
d0008b64:                |   0000                       unimp
d0008b66:                |   0000                       unimp
d0008b68:                |   0000                       unimp
d0008b6a:                \-> 4448                       lw      a0,12(s0)
d0008b6c:                    05a50513           addi    a0,a0,90
d0008b70:                    c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:464
  HARDENED_RETURN_IF_ERROR(boot_data_read(lc_state, &boot_data));
d0008b72:                    0fff9517           auipc   a0,0xfff9
d0008b76:                    45650513           addi    a0,a0,1110 # e0001fc8 <lc_state>
d0008b7a:                    4108                       lw      a0,0(a0)
d0008b7c:                    c2018593           addi    a1,gp,-992 # e00023e8 <boot_data>
d0008b80:                    7e2000ef           jal     ra,d0009362 <boot_data_read>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008b84:                    85aa                       mv      a1,a0
d0008b86:                    73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:464
d0008b8a:       /----------- 1c959663           bne     a1,s1,d0008d56 <rom_try_boot+0x212>
d0008b8e:       |        /-- 00950663           beq     a0,s1,d0008b9a <rom_try_boot+0x56>
d0008b92:       |        |   0000                       unimp
d0008b94:       |        |   0000                       unimp
d0008b96:       |        |   0000                       unimp
d0008b98:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:466
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008b9a:       |        \-> 25ed                       jal     d0009284 <boot_policy_manifests_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:469
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008b9c:       |            4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:467
  uint32_t flash_exec = 0;
d0008b9e:       |            c002                       sw      zero,0(sp)
d0008ba0:       |            2e900993           li      s3,745
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:469
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008ba4:       |        /-- 01360663           beq     a2,s3,d0008bb0 <rom_try_boot+0x6c>
d0008ba8:       |        |   0000                       unimp
d0008baa:       |        |   0000                       unimp
d0008bac:       |        |   0000                       unimp
d0008bae:       |        |   0000                       unimp
d0008bb0:       |        \-> 4450                       lw      a2,12(s0)
d0008bb2:       |            05a60613           addi    a2,a2,90
d0008bb6:       |            c450                       sw      a2,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008bb8:       |            60100a93           li      s5,1537
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:469
d0008bbc:       |            01542423           sw      s5,8(s0)
d0008bc0:       |            4450                       lw      a2,12(s0)
d0008bc2:       |            34300693           li      a3,835
d0008bc6:       |        /-- 00d60663           beq     a2,a3,d0008bd2 <rom_try_boot+0x8e>
d0008bca:       |        |   0000                       unimp
d0008bcc:       |        |   0000                       unimp
d0008bce:       |        |   0000                       unimp
d0008bd0:       |        |   0000                       unimp
d0008bd2:       |        \-> 4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:466
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008bd4:       |            8a2a                       mv      s4,a0
d0008bd6:       |            892e                       mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:469
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008bd8:       |            05a60513           addi    a0,a2,90
d0008bdc:       |            c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:470
  rom_error_t error = rom_verify(manifests.ordered[0], &flash_exec);
d0008bde:       |            858a                       mv      a1,sp
d0008be0:       |            8552                       mv      a0,s4
d0008be2:       |            2259                       jal     d0008d68 <rom_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:471
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 4);
d0008be4:       |            444c                       lw      a1,12(s0)
d0008be6:       |            39d00613           li      a2,925
d0008bea:       |        /-- 00c58663           beq     a1,a2,d0008bf6 <rom_try_boot+0xb2>
d0008bee:       |        |   0000                       unimp
d0008bf0:       |        |   0000                       unimp
d0008bf2:       |        |   0000                       unimp
d0008bf4:       |        |   0000                       unimp
d0008bf6:       |        \-> 444c                       lw      a1,12(s0)
d0008bf8:       |            05a58593           addi    a1,a1,90
d0008bfc:       |            c44c                       sw      a1,12(s0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008bfe:       |            85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:473
  if (launder32(error) == kErrorOk) {
d0008c00:       |     /----- 06959c63           bne     a1,s1,d0008c78 <rom_try_boot+0x134>
d0008c04:       |     |      73900493           li      s1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:474
    HARDENED_CHECK_EQ(error, kErrorOk);
d0008c08:       |     |  /-- 00950663           beq     a0,s1,d0008c14 <rom_try_boot+0xd0>
d0008c0c:       |     |  |   0000                       unimp
d0008c0e:       |     |  |   0000                       unimp
d0008c10:       |     |  |   0000                       unimp
d0008c12:       |     |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:475
    CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008c14:       |     |  \-> 4408                       lw      a0,8(s0)
d0008c16:       |     |      6b500593           li      a1,1717
d0008c1a:       |     |  /-- 00b50663           beq     a0,a1,d0008c26 <rom_try_boot+0xe2>
d0008c1e:       |     |  |   0000                       unimp
d0008c20:       |     |  |   0000                       unimp
d0008c22:       |     |  |   0000                       unimp
d0008c24:       |     |  |   0000                       unimp
d0008c26:       |     |  \-> 28f00513           li      a0,655
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:476
    CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomTryBoot);
d0008c2a:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:477
    CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 1, kCfiRomBoot);
d0008c2c:       |     |      444c                       lw      a1,12(s0)
d0008c2e:       |     |  /-- 00a58663           beq     a1,a0,d0008c3a <rom_try_boot+0xf6>
d0008c32:       |     |  |   0000                       unimp
d0008c34:       |     |  |   0000                       unimp
d0008c36:       |     |  |   0000                       unimp
d0008c38:       |     |  |   0000                       unimp
d0008c3a:       |     |  \-> 4448                       lw      a0,12(s0)
d0008c3c:       |     |      05a50513           addi    a0,a0,90
d0008c40:       |     |      c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008c42:       |     |      33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:477
d0008c46:       |     |      c848                       sw      a0,20(s0)
d0008c48:       |     |      4448                       lw      a0,12(s0)
d0008c4a:       |     |  /-- 01350663           beq     a0,s3,d0008c56 <rom_try_boot+0x112>
d0008c4e:       |     |  |   0000                       unimp
d0008c50:       |     |  |   0000                       unimp
d0008c52:       |     |  |   0000                       unimp
d0008c54:       |     |  |   0000                       unimp
d0008c56:       |     |  \-> 4448                       lw      a0,12(s0)
d0008c58:       |     |      05a50513           addi    a0,a0,90
d0008c5c:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:478
    HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[0], flash_exec));
d0008c5e:       |     |      4582                       lw      a1,0(sp)
d0008c60:       |     |      8552                       mv      a0,s4
d0008c62:       |     |      2c91                       jal     d0008eb6 <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008c64:       |     |      85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:478
d0008c66:       +-----|----- 0e959863           bne     a1,s1,d0008d56 <rom_try_boot+0x212>
d0008c6a:       |     |  /-- 00950663           beq     a0,s1,d0008c76 <rom_try_boot+0x132>
d0008c6e:       |     |  |   0000                       unimp
d0008c70:       |     |  |   0000                       unimp
d0008c72:       |     |  |   0000                       unimp
d0008c74:       |     |  |   0000                       unimp
d0008c76:       |  /--|--\-X a8e1                       j       d0008d4e <rom_try_boot+0x20a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:482
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 5, kCfiRomVerify);
d0008c78:       |  |  \----> 4448                       lw      a0,12(s0)
d0008c7a:       |  |         3f700593           li      a1,1015
d0008c7e:       |  |     /-- 00b50663           beq     a0,a1,d0008c8a <rom_try_boot+0x146>
d0008c82:       |  |     |   0000                       unimp
d0008c84:       |  |     |   0000                       unimp
d0008c86:       |  |     |   0000                       unimp
d0008c88:       |  |     |   0000                       unimp
d0008c8a:       |  |     \-> 4448                       lw      a0,12(s0)
d0008c8c:       |  |         05a50513           addi    a0,a0,90
d0008c90:       |  |         c448                       sw      a0,12(s0)
d0008c92:       |  |         01542423           sw      s5,8(s0)
d0008c96:       |  |         4448                       lw      a0,12(s0)
d0008c98:       |  |         45100593           li      a1,1105
d0008c9c:       |  |     /-- 00b50663           beq     a0,a1,d0008ca8 <rom_try_boot+0x164>
d0008ca0:       |  |     |   0000                       unimp
d0008ca2:       |  |     |   0000                       unimp
d0008ca4:       |  |     |   0000                       unimp
d0008ca6:       |  |     |   0000                       unimp
d0008ca8:       |  |     \-> 4448                       lw      a0,12(s0)
d0008caa:       |  |         05a50513           addi    a0,a0,90
d0008cae:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:483
  HARDENED_RETURN_IF_ERROR(rom_verify(manifests.ordered[1], &flash_exec));
d0008cb0:       |  |         858a                       mv      a1,sp
d0008cb2:       |  |         854a                       mv      a0,s2
d0008cb4:       |  |         2855                       jal     d0008d68 <rom_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008cb6:       |  |         85aa                       mv      a1,a0
d0008cb8:       |  |         73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:483
d0008cbc:       +--|-------- 08959d63           bne     a1,s1,d0008d56 <rom_try_boot+0x212>
d0008cc0:       |  |     /-- 00950663           beq     a0,s1,d0008ccc <rom_try_boot+0x188>
d0008cc4:       |  |     |   0000                       unimp
d0008cc6:       |  |     |   0000                       unimp
d0008cc8:       |  |     |   0000                       unimp
d0008cca:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:484
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 7);
d0008ccc:       |  |     \-> 4448                       lw      a0,12(s0)
d0008cce:       |  |         4ab00593           li      a1,1195
d0008cd2:       |  |     /-- 00b50663           beq     a0,a1,d0008cde <rom_try_boot+0x19a>
d0008cd6:       |  |     |   0000                       unimp
d0008cd8:       |  |     |   0000                       unimp
d0008cda:       |  |     |   0000                       unimp
d0008cdc:       |  |     |   0000                       unimp
d0008cde:       |  |     \-> 4448                       lw      a0,12(s0)
d0008ce0:       |  |         05a50513           addi    a0,a0,90
d0008ce4:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:485
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008ce6:       |  |         4408                       lw      a0,8(s0)
d0008ce8:       |  |         6b500593           li      a1,1717
d0008cec:       |  |     /-- 00b50663           beq     a0,a1,d0008cf8 <rom_try_boot+0x1b4>
d0008cf0:       |  |     |   0000                       unimp
d0008cf2:       |  |     |   0000                       unimp
d0008cf4:       |  |     |   0000                       unimp
d0008cf6:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:487
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 8, kCfiRomBoot);
d0008cf8:       |  |     \-> 4448                       lw      a0,12(s0)
d0008cfa:       |  |         50500593           li      a1,1285
d0008cfe:       |  |     /-- 00b50663           beq     a0,a1,d0008d0a <rom_try_boot+0x1c6>
d0008d02:       |  |     |   0000                       unimp
d0008d04:       |  |     |   0000                       unimp
d0008d06:       |  |     |   0000                       unimp
d0008d08:       |  |     |   0000                       unimp
d0008d0a:       |  |     \-> 4448                       lw      a0,12(s0)
d0008d0c:       |  |         05a50513           addi    a0,a0,90
d0008d10:       |  |         c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008d12:       |  |         33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:487
d0008d16:       |  |         c848                       sw      a0,20(s0)
d0008d18:       |  |         4448                       lw      a0,12(s0)
d0008d1a:       |  |         55f00593           li      a1,1375
d0008d1e:       |  |     /-- 00b50663           beq     a0,a1,d0008d2a <rom_try_boot+0x1e6>
d0008d22:       |  |     |   0000                       unimp
d0008d24:       |  |     |   0000                       unimp
d0008d26:       |  |     |   0000                       unimp
d0008d28:       |  |     |   0000                       unimp
d0008d2a:       |  |     \-> 4448                       lw      a0,12(s0)
d0008d2c:       |  |         05a50513           addi    a0,a0,90
d0008d30:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:488
  HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[1], flash_exec));
d0008d32:       |  |         4582                       lw      a1,0(sp)
d0008d34:       |  |         854a                       mv      a0,s2
d0008d36:       |  |         2241                       jal     d0008eb6 <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008d38:       |  |         85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:488
d0008d3a:       +--|-------- 00959e63           bne     a1,s1,d0008d56 <rom_try_boot+0x212>
d0008d3e:       |  |         73900593           li      a1,1849
d0008d42:       |  +-------- 00b50663           beq     a0,a1,d0008d4e <rom_try_boot+0x20a>
d0008d46:       |  |         0000                       unimp
d0008d48:       |  |         0000                       unimp
d0008d4a:       |  |         0000                       unimp
d0008d4c:       |  |         0000                       unimp
d0008d4e:       |  \-------> 014d5537           lui     a0,0x14d5
d0008d52:       |            20950513           addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1455209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:490
}
d0008d56:       \----------> 4a92                       lw      s5,4(sp)
d0008d58:                    4a22                       lw      s4,8(sp)
d0008d5a:                    49b2                       lw      s3,12(sp)
d0008d5c:                    4942                       lw      s2,16(sp)
d0008d5e:                    44d2                       lw      s1,20(sp)
d0008d60:                    4462                       lw      s0,24(sp)
d0008d62:                    40f2                       lw      ra,28(sp)
d0008d64:                    6105                       addi    sp,sp,32
d0008d66:                    8082                       ret

d0008d68 <rom_verify>:
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:251
                              uint32_t *flash_exec) {
d0008d68:              7119                     addi    sp,sp,-128
d0008d6a:              de86                     sw      ra,124(sp)
d0008d6c:              dca2                     sw      s0,120(sp)
d0008d6e:              daa6                     sw      s1,116(sp)
d0008d70:              d8ca                     sw      s2,112(sp)
d0008d72:              d6ce                     sw      s3,108(sp)
d0008d74:              d4d2                     sw      s4,104(sp)
d0008d76:              d2d6                     sw      s5,100(sp)
d0008d78:              d0da                     sw      s6,96(sp)
d0008d7a:              c0418413                 addi    s0,gp,-1020 # e00023cc <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:252
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 1);
d0008d7e:              4410                     lw      a2,8(s0)
d0008d80:              60100693                 li      a3,1537
d0008d84:          /-- 00d60663                 beq     a2,a3,d0008d90 <rom_verify+0x28>
d0008d88:          |   0000                     unimp
d0008d8a:          |   0000                     unimp
d0008d8c:          |   0000                     unimp
d0008d8e:          |   0000                     unimp
d0008d90:          \-> 4410                     lw      a2,8(s0)
d0008d92:              892e                     mv      s2,a1
d0008d94:              8b2a                     mv      s6,a0
d0008d96:              05a60513                 addi    a0,a2,90
d0008d9a:              c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:253
  *flash_exec = 0;
d0008d9c:              0005a023                 sw      zero,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:254
  HARDENED_RETURN_IF_ERROR(boot_policy_manifest_check(manifest, &boot_data));
d0008da0:              c2018a13                 addi    s4,gp,-992 # e00023e8 <boot_data>
d0008da4:              855a                     mv      a0,s6
d0008da6:              85d2                     mv      a1,s4
d0008da8:              2301                     jal     d00092a8 <boot_policy_manifest_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008daa:              85aa                     mv      a1,a0
d0008dac:              73900493                 li      s1,1849
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:254
d0008db0:       /----- 0e959963                 bne     a1,s1,d0008ea2 <rom_verify+0x13a>
d0008db4:       |  /-- 00950663                 beq     a0,s1,d0008dc0 <rom_verify+0x58>
d0008db8:       |  |   0000                     unimp
d0008dba:       |  |   0000                     unimp
d0008dbc:       |  |   0000                     unimp
d0008dbe:       |  |   0000                     unimp
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
 * @param key An RSA public key.
 * @return ID of the key.
 */
inline uint32_t sigverify_rsa_key_id_get(
    const sigverify_rsa_buffer_t *modulus) {
  return modulus->data[0];
d0008dc0:       |  \-> 1b0b2503                 lw      a0,432(s6)
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:257
  HARDENED_RETURN_IF_ERROR(sigverify_rsa_key_get(
d0008dc4:       |      0fff9a97                 auipc   s5,0xfff9
d0008dc8:       |      204a8a93                 addi    s5,s5,516 # e0001fc8 <lc_state>
d0008dcc:       |      000aa583                 lw      a1,0(s5)
d0008dd0:       |      08f0                     addi    a2,sp,92
d0008dd2:       |      188010ef                 jal     ra,d0009f5a <sigverify_rsa_key_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008dd6:       |      85aa                     mv      a1,a0
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:257
d0008dd8:       +----- 0c959563                 bne     a1,s1,d0008ea2 <rom_verify+0x13a>
d0008ddc:       |      1b0b0993                 addi    s3,s6,432
d0008de0:       |      73900593                 li      a1,1849
d0008de4:       |  /-- 00b50663                 beq     a0,a1,d0008df0 <rom_verify+0x88>
d0008de8:       |  |   0000                     unimp
d0008dea:       |  |   0000                     unimp
d0008dec:       |  |   0000                     unimp
d0008dee:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:260
  uint32_t clobber_value = rnd_uint32();
d0008df0:       |  \-> 2dd030ef                 jal     ra,d000c8cc <rnd_uint32>
d0008df4:       |      4581                     li      a1,0
d0008df6:       |      0fff7617                 auipc   a2,0xfff7
d0008dfa:       |      20a60613                 addi    a2,a2,522 # e0000000 <boot_measurements>
d0008dfe:       |      02000693                 li      a3,32
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:262
    boot_measurements.rom_ext.data[i] = clobber_value;
d0008e02:       |  /-> 00c58733                 add     a4,a1,a2
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:261
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0008e06:       |  |   0591                     addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:262
    boot_measurements.rom_ext.data[i] = clobber_value;
d0008e08:       |  |   c308                     sw      a0,0(a4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:261
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0008e0a:       |  \-- fed59ce3                 bne     a1,a3,d0008e02 <rom_verify+0x9a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:265
  hmac_sha256_init();
d0008e0e:       |      4d9030ef                 jal     ra,d000cae6 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:268
  if (launder32(manifest->security_version) <
d0008e12:       |      344b2583                 lw      a1,836(s6)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:269
      boot_data.min_security_version_rom_ext) {
d0008e16:       |      030a2503                 lw      a0,48(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:268
  if (launder32(manifest->security_version) <
d0008e1a:       |  /-- 00a5fa63                 bgeu    a1,a0,d0008e2e <rom_verify+0xc6>
d0008e1e:       |  |   557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:270
    uint32_t extra_word = UINT32_MAX;
d0008e20:       |  |   d42a                     sw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:271
    hmac_sha256_update(&extra_word, sizeof(extra_word));
d0008e22:       |  |   1028                     addi    a0,sp,40
d0008e24:       |  |   4591                     li      a1,4
d0008e26:       |  |   4db030ef                 jal     ra,d000cb00 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:273
  HARDENED_CHECK_GE(manifest->security_version,
d0008e2a:       |  |   030a2503                 lw      a0,48(s4)
d0008e2e:       |  \-> 344b2583                 lw      a1,836(s6)
d0008e32:       |  /-- 00a5f663                 bgeu    a1,a0,d0008e3e <rom_verify+0xd6>
d0008e36:       |  |   0000                     unimp
d0008e38:       |  |   0000                     unimp
d0008e3a:       |  |   0000                     unimp
d0008e3c:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:278
  sigverify_usage_constraints_get(manifest->usage_constraints.selector_bits,
d0008e3e:       |  \-> 180b2503                 lw      a0,384(s6)
d0008e42:       |      102c                     addi    a1,sp,40
d0008e44:       |      11e030ef                 jal     ra,d000bf62 <sigverify_usage_constraints_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:280
  hmac_sha256_update(&usage_constraints_from_hw,
d0008e48:       |      1028                     addi    a0,sp,40
d0008e4a:       |      03000593                 li      a1,48
d0008e4e:       |      4b3030ef                 jal     ra,d000cb00 <hmac_sha256_update>
manifest_digest_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:296
    kDigestRegionOffset =
        sizeof(manifest->signature) + sizeof(manifest->usage_constraints),
  };
  return (manifest_digest_region_t){
      .start = (const char *)manifest + kDigestRegionOffset,
      .length = manifest->length - kDigestRegionOffset,
d0008e52:       |      338b2503                 lw      a0,824(s6)
d0008e56:       |      e5050593                 addi    a1,a0,-432
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:285
  hmac_sha256_update(digest_region.start, digest_region.length);
d0008e5a:       |      854e                     mv      a0,s3
d0008e5c:       |      4a5030ef                 jal     ra,d000cb00 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:288
  hmac_sha256_final(&act_digest);
d0008e60:       |      0028                     addi    a0,sp,8
d0008e62:       |      50d030ef                 jal     ra,d000cb6e <hmac_sha256_final>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:292
  memcpy(&boot_measurements.rom_ext, &act_digest,
d0008e66:       |      0fff7517                 auipc   a0,0xfff7
d0008e6a:       |      19a50513                 addi    a0,a0,410 # e0000000 <boot_measurements>
d0008e6e:       |      002c                     addi    a1,sp,8
d0008e70:       |      02000613                 li      a2,32
d0008e74:       |      1ae040ef                 jal     ra,d000d022 <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:295
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 2);
d0008e78:       |      4408                     lw      a0,8(s0)
d0008e7a:       |      65b00593                 li      a1,1627
d0008e7e:       |  /-- 00b50663                 beq     a0,a1,d0008e8a <rom_verify+0x122>
d0008e82:       |  |   0000                     unimp
d0008e84:       |  |   0000                     unimp
d0008e86:       |  |   0000                     unimp
d0008e88:       |  |   0000                     unimp
d0008e8a:       |  \-> 4408                     lw      a0,8(s0)
d0008e8c:       |      05a50513                 addi    a0,a0,90
d0008e90:       |      c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:296
  return sigverify_rsa_verify(&manifest->signature, key, &act_digest, lc_state,
d0008e92:       |      45f6                     lw      a1,92(sp)
d0008e94:       |      000aa683                 lw      a3,0(s5)
d0008e98:       |      0030                     addi    a2,sp,8
d0008e9a:       |      855a                     mv      a0,s6
d0008e9c:       |      874a                     mv      a4,s2
d0008e9e:       |      637020ef                 jal     ra,d000bcd4 <sigverify_rsa_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:298
}
d0008ea2:       \----> 5b06                     lw      s6,96(sp)
d0008ea4:              5a96                     lw      s5,100(sp)
d0008ea6:              5a26                     lw      s4,104(sp)
d0008ea8:              59b6                     lw      s3,108(sp)
d0008eaa:              5946                     lw      s2,112(sp)
d0008eac:              54d6                     lw      s1,116(sp)
d0008eae:              5466                     lw      s0,120(sp)
d0008eb0:              50f6                     lw      ra,124(sp)
d0008eb2:              6109                     addi    sp,sp,128
d0008eb4:              8082                     ret

d0008eb6 <rom_boot>:
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:376
static rom_error_t rom_boot(const manifest_t *manifest, uint32_t flash_exec) {
d0008eb6:                             7179                      addi    sp,sp,-48
d0008eb8:                             d606                      sw      ra,44(sp)
d0008eba:                             d422                      sw      s0,40(sp)
d0008ebc:                             d226                      sw      s1,36(sp)
d0008ebe:                             d04a                      sw      s2,32(sp)
d0008ec0:                             ce4e                      sw      s3,28(sp)
d0008ec2:                             cc52                      sw      s4,24(sp)
d0008ec4:                             ca56                      sw      s5,20(sp)
d0008ec6:                             c85a                      sw      s6,16(sp)
d0008ec8:                             c65e                      sw      s7,12(sp)
d0008eca:                             c462                      sw      s8,8(sp)
d0008ecc:                             c266                      sw      s9,4(sp)
d0008ece:                             c0418a13                  addi    s4,gp,-1020 # e00023cc <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:377
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 1);
d0008ed2:                             014a2603                  lw      a2,20(s4)
d0008ed6:                             33c00693                  li      a3,828
d0008eda:                         /-- 00d60663                  beq     a2,a3,d0008ee6 <rom_boot+0x30>
d0008ede:                         |   0000                      unimp
d0008ee0:                         |   0000                      unimp
d0008ee2:                         |   0000                      unimp
d0008ee4:                         |   0000                      unimp
d0008ee6:                         \-> 014a2603                  lw      a2,20(s4)
d0008eea:                             892e                      mv      s2,a1
d0008eec:                             84aa                      mv      s1,a0
d0008eee:                             05a60513                  addi    a0,a2,90
d0008ef2:                             00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:378
  HARDENED_RETURN_IF_ERROR(keymgr_state_check(kKeymgrStateReset));
d0008ef6:                             4501                      li      a0,0
d0008ef8:                             0e1020ef                  jal     ra,d000b7d8 <keymgr_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008efc:                             85aa                      mv      a1,a0
d0008efe:                             73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:378
d0008f02:       /-------------------- 34859263                  bne     a1,s0,d0009246 <rom_boot+0x390>
d0008f06:       |                 /-- 00850663                  beq     a0,s0,d0008f12 <rom_boot+0x5c>
d0008f0a:       |                 |   0000                      unimp
d0008f0c:       |                 |   0000                      unimp
d0008f0e:       |                 |   0000                      unimp
d0008f10:       |                 |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:381
      &manifest->binding_value;
d0008f12:       |                 \-> 35048993                  addi    s3,s1,848
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:383
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_KEYMGR_ROM_EXT_MEAS_EN_OFFSET);
d0008f16:       |                     56400513                  li      a0,1380
d0008f1a:       |                     69d030ef                  jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008f1e:       |                     85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:384
  if (launder32(use_rom_ext_measurement) == kHardenedBoolTrue) {
d0008f20:       |           /-------- 00859f63                  bne     a1,s0,d0008f3e <rom_boot+0x88>
d0008f24:       |           |         73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:385
    HARDENED_CHECK_EQ(use_rom_ext_measurement, kHardenedBoolTrue);
d0008f28:       |           |     /-- 00b50663                  beq     a0,a1,d0008f34 <rom_boot+0x7e>
d0008f2c:       |           |     |   0000                      unimp
d0008f2e:       |           |     |   0000                      unimp
d0008f30:       |           |     |   0000                      unimp
d0008f32:       |           |     |   0000                      unimp
d0008f34:       |           |     \-> 0fff7597                  auipc   a1,0xfff7
d0008f38:       |           |         0cc58593                  addi    a1,a1,204 # e0000000 <boot_measurements>
d0008f3c:       |           |  /----- a811                      j       d0008f50 <rom_boot+0x9a>
d0008f3e:       |           \--|----> 73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:389
    HARDENED_CHECK_NE(use_rom_ext_measurement, kHardenedBoolTrue);
d0008f42:       |              |  /-- 00b51663                  bne     a0,a1,d0008f4e <rom_boot+0x98>
d0008f46:       |              |  |   0000                      unimp
d0008f48:       |              |  |   0000                      unimp
d0008f4a:       |              |  |   0000                      unimp
d0008f4c:       |              |  |   0000                      unimp
d0008f4e:       |              |  \-> 85ce                      mv      a1,s3
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:391
  keymgr_sw_binding_set(&manifest->binding_value, attestation_measurement);
d0008f50:       |              \----> 854e                      mv      a0,s3
d0008f52:       |                     7f4020ef                  jal     ra,d000b746 <keymgr_sw_binding_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:392
  keymgr_creator_max_ver_set(manifest->max_key_version);
d0008f56:       |                     3704a503                  lw      a0,880(s1)
d0008f5a:       |                     05b020ef                  jal     ra,d000b7b4 <keymgr_creator_max_ver_set>
d0008f5e:       |                     0fff7a97                  auipc   s5,0xfff7
d0008f62:       |                     116a8a93                  addi    s5,s5,278 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:393
  SEC_MMIO_WRITE_INCREMENT(kKeymgrSecMmioSwBindingSet +
d0008f66:       |                     008aa503                  lw      a0,8(s5)
d0008f6a:       |                     054d                      addi    a0,a0,19
d0008f6c:       |                     00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:396
  sec_mmio_check_counters(/*expected_check_count=*/2);
d0008f70:       |                     4509                      li      a0,2
d0008f72:       |                     064040ef                  jal     ra,d000cfd6 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:404
  switch (launder32(manifest->address_translation)) {
d0008f76:       |                     3304a503                  lw      a0,816(s1)
manifest_code_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:308
 * @param manifest A manifest.
 * return Executable region of the image.
 */
inline epmp_region_t manifest_code_region_get(const manifest_t *manifest) {
  return (epmp_region_t){
      .start = (uintptr_t)manifest + manifest->code_start,
d0008f7a:       |                     3744ab83                  lw      s7,884(s1)
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:309
      .end = (uintptr_t)manifest + manifest->code_end,
d0008f7e:       |                     3784ac03                  lw      s8,888(s1)
manifest_entry_point_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:325
 *
 * @param manfiest A manifest.
 * return Entry point address.
 */
inline uintptr_t manifest_entry_point_get(const manifest_t *manifest) {
  return (uintptr_t)manifest + manifest->entry_point;
d0008f82:       |                     37c4ab03                  lw      s6,892(s1)
d0008f86:       |                     1d400593                  li      a1,468
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:404
d0008f8a:       |              /----- 00b51c63                  bne     a0,a1,d0008fa2 <rom_boot+0xec>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:425
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolFalse);
d0008f8e:       |              |      3304a503                  lw      a0,816(s1)
d0008f92:       |              |  /-- 00b50663                  beq     a0,a1,d0008f9e <rom_boot+0xe8>
d0008f96:       |              |  |   0000                      unimp
d0008f98:       |              |  |   0000                      unimp
d0008f9a:       |              |  |   0000                      unimp
d0008f9c:       |              |  |   0000                      unimp
d0008f9e:       |              |  \-> 89a6                      mv      s3,s1
d0008fa0:       |           /--|----- a08d                      j       d0009002 <rom_boot+0x14c>
d0008fa2:       |           |  \----> 73900c93                  li      s9,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:404
  switch (launder32(manifest->address_translation)) {
d0008fa6:       |  /--------|-------- 2b951f63                  bne     a0,s9,d0009264 <rom_boot+0x3ae>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:406
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolTrue);
d0008faa:       |  |        |         3304a503                  lw      a0,816(s1)
d0008fae:       |  |        |     /-- 01950663                  beq     a0,s9,d0008fba <rom_boot+0x104>
d0008fb2:       |  |        |     |   0000                      unimp
d0008fb4:       |  |        |     |   0000                      unimp
d0008fb6:       |  |        |     |   0000                      unimp
d0008fb8:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:407
      ibex_addr_remap_0_set((uintptr_t)_rom_ext_virtual_start_address,
d0008fba:       |  |        |     \-> bfff7997                  auipc   s3,0xbfff7
d0008fbe:       |  |        |         04698993                  addi    s3,s3,70 # 90000000 <_rom_ext_virtual_start_address>
d0008fc2:       |  |        |         30077417                  auipc   s0,0x30077
d0008fc6:       |  |        |         03e40413                  addi    s0,s0,62 # 80000 <_stack_end+0x20060000>
d0008fca:       |  |        |         854e                      mv      a0,s3
d0008fcc:       |  |        |         85a6                      mv      a1,s1
d0008fce:       |  |        |         8622                      mv      a2,s0
d0008fd0:       |  |        |         6b2020ef                  jal     ra,d000b682 <ibex_addr_remap_0_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:409
      SEC_MMIO_WRITE_INCREMENT(kAddressTranslationSecMmioConfigure);
d0008fd4:       |  |        |         008aa503                  lw      a0,8(s5)
d0008fd8:       |  |        |         0519                      addi    a0,a0,6
d0008fda:       |  |        |         00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:412
      HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0008fde:       |  |        |         11b030ef                  jal     ra,d000c8f8 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008fe2:       |  |        |         85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:412
d0008fe4:       +--|--------|-------- 27959163                  bne     a1,s9,d0009246 <rom_boot+0x390>
d0008fe8:       |  |        |         73900593                  li      a1,1849
d0008fec:       |  |        |     /-- 00b50663                  beq     a0,a1,d0008ff8 <rom_boot+0x142>
d0008ff0:       |  |        |     |   0000                      unimp
d0008ff2:       |  |        |     |   0000                      unimp
d0008ff4:       |  |        |     |   0000                      unimp
d0008ff6:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:413
      rom_epmp_unlock_rom_ext_r(
d0008ff8:       |  |        |     \-> 008985b3                  add     a1,s3,s0
d0008ffc:       |  |        |         854e                      mv      a0,s3
d0008ffe:       |  |        |         3e5020ef                  jal     ra,d000bbe2 <rom_epmp_unlock_rom_ext_r>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:432
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009002:       |  |        \-------> 0f7030ef                  jal     ra,d000c8f8 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009006:       |  |                  85aa                      mv      a1,a0
d0009008:       |  |                  73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:432
d000900c:       +--|----------------- 22859d63                  bne     a1,s0,d0009246 <rom_boot+0x390>
d0009010:       |  |                  018985b3                  add     a1,s3,s8
d0009014:       |  |                  01798633                  add     a2,s3,s7
d0009018:       |  |              /-- 00850663                  beq     a0,s0,d0009024 <rom_boot+0x16e>
d000901c:       |  |              |   0000                      unimp
d000901e:       |  |              |   0000                      unimp
d0009020:       |  |              |   0000                      unimp
d0009022:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:433
  rom_epmp_unlock_rom_ext_rx(text_region);
d0009024:       |  |              \-> 8532                      mv      a0,a2
d0009026:       |  |                  38f020ef                  jal     ra,d000bbb4 <rom_epmp_unlock_rom_ext_rx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:434
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d000902a:       |  |                  0cf030ef                  jal     ra,d000c8f8 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000902e:       |  |                  85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:434
d0009030:       +--|----------------- 20859b63                  bne     a1,s0,d0009246 <rom_boot+0x390>
d0009034:       |  |                  73900413                  li      s0,1849
d0009038:       |  |              /-- 00850663                  beq     a0,s0,d0009044 <rom_boot+0x18e>
d000903c:       |  |              |   0000                      unimp
d000903e:       |  |              |   0000                      unimp
d0009040:       |  |              |   0000                      unimp
d0009042:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:436
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomBoot, 2, kCfiRomPreBootCheck);
d0009044:       |  |              \-> 014a2503                  lw      a0,20(s4)
d0009048:       |  |                  39600593                  li      a1,918
d000904c:       |  |              /-- 00b50663                  beq     a0,a1,d0009058 <rom_boot+0x1a2>
d0009050:       |  |              |   0000                      unimp
d0009052:       |  |              |   0000                      unimp
d0009054:       |  |              |   0000                      unimp
d0009056:       |  |              |   0000                      unimp
d0009058:       |  |              \-> 014a2503                  lw      a0,20(s4)
d000905c:       |  |                  05a50513                  addi    a0,a0,90
d0009060:       |  |                  00aa2a23                  sw      a0,20(s4)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0009064:       |  |                  49400513                  li      a0,1172
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:436
d0009068:       |  |                  00aa2823                  sw      a0,16(s4)
d000906c:       |  |                  014a2583                  lw      a1,20(s4)
d0009070:       |  |                  3f000613                  li      a2,1008
d0009074:       |  |              /-- 00c58663                  beq     a1,a2,d0009080 <rom_boot+0x1ca>
d0009078:       |  |              |   0000                      unimp
d000907a:       |  |              |   0000                      unimp
d000907c:       |  |              |   0000                      unimp
d000907e:       |  |              |   0000                      unimp
d0009080:       |  |              \-> 014a2583                  lw      a1,20(s4)
d0009084:       |  |                  05a58593                  addi    a1,a1,90
d0009088:       |  |                  00ba2a23                  sw      a1,20(s4)
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:326
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 1);
d000908c:       |  |                  010a2583                  lw      a1,16(s4)
d0009090:       |  |              /-- 00a58663                  beq     a1,a0,d000909c <rom_boot+0x1e6>
d0009094:       |  |              |   0000                      unimp
d0009096:       |  |              |   0000                      unimp
d0009098:       |  |              |   0000                      unimp
d000909a:       |  |              |   0000                      unimp
d000909c:       |  |              \-> 010a2503                  lw      a0,16(s4)
d00090a0:       |  |                  05a50513                  addi    a0,a0,90
d00090a4:       |  |                  00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:329
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d00090a8:       |  |                  0fff9497                  auipc   s1,0xfff9
d00090ac:       |  |                  f2048493                  addi    s1,s1,-224 # e0001fc8 <lc_state>
d00090b0:       |  |                  4088                      lw      a0,0(s1)
d00090b2:       |  |                  0cd010ef                  jal     ra,d000a97e <alert_config_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d00090b6:       |  |                  85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:329
d00090b8:       |  |  /-------------- 1a859463                  bne     a1,s0,d0009260 <rom_boot+0x3aa>
d00090bc:       |  |  |           /-- 00850663                  beq     a0,s0,d00090c8 <rom_boot+0x212>
d00090c0:       |  |  |           |   0000                      unimp
d00090c2:       |  |  |           |   0000                      unimp
d00090c4:       |  |  |           |   0000                      unimp
d00090c6:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:330
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 2);
d00090c8:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d00090cc:       |  |  |               4ee00593                  li      a1,1262
d00090d0:       |  |  |           /-- 00b50663                  beq     a0,a1,d00090dc <rom_boot+0x226>
d00090d4:       |  |  |           |   0000                      unimp
d00090d6:       |  |  |           |   0000                      unimp
d00090d8:       |  |  |           |   0000                      unimp
d00090da:       |  |  |           |   0000                      unimp
d00090dc:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d00090e0:       |  |  |               05a50513                  addi    a0,a0,90
d00090e4:       |  |  |               00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:333
  lifecycle_state_t lc_state_check = lifecycle_state_get();
d00090e8:       |  |  |               2bd030ef                  jal     ra,d000cba4 <lifecycle_state_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00090ec:       |  |  |               85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:334
  if (launder32(lc_state_check) != lc_state) {
d00090ee:       |  |  |               4090                      lw      a2,0(s1)
d00090f0:       |  |  |  /----------- 16c59e63                  bne     a1,a2,d000926c <rom_boot+0x3b6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:337
  HARDENED_CHECK_EQ(lc_state_check, lc_state);
d00090f4:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d0009100 <rom_boot+0x24a>
d00090f8:       |  |  |  |        |   0000                      unimp
d00090fa:       |  |  |  |        |   0000                      unimp
d00090fc:       |  |  |  |        |   0000                      unimp
d00090fe:       |  |  |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:338
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 3);
d0009100:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d0009104:       |  |  |  |            54800593                  li      a1,1352
d0009108:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d0009114 <rom_boot+0x25e>
d000910c:       |  |  |  |        |   0000                      unimp
d000910e:       |  |  |  |        |   0000                      unimp
d0009110:       |  |  |  |        |   0000                      unimp
d0009112:       |  |  |  |        |   0000                      unimp
d0009114:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d0009118:       |  |  |  |            05a50513                  addi    a0,a0,90
d000911c:       |  |  |  |            00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:341
  rom_error_t boot_data_ok = boot_data_check(&boot_data);
d0009120:       |  |  |  |            c2018513                  addi    a0,gp,-992 # e00023e8 <boot_data>
d0009124:       |  |  |  |            7b2000ef                  jal     ra,d00098d6 <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009128:       |  |  |  |            862a                      mv      a2,a0
d000912a:       |  |  |  |            73900593                  li      a1,1849
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:342
  if (launder32(boot_data_ok) != kErrorOk) {
d000912e:       |  |  |  |  /-------- 14b61363                  bne     a2,a1,d0009274 <rom_boot+0x3be>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:345
  HARDENED_CHECK_EQ(boot_data_ok, kErrorOk);
d0009132:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d000913e <rom_boot+0x288>
d0009136:       |  |  |  |  |     |   0000                      unimp
d0009138:       |  |  |  |  |     |   0000                      unimp
d000913a:       |  |  |  |  |     |   0000                      unimp
d000913c:       |  |  |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:346
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 4);
d000913e:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d0009142:       |  |  |  |  |         5a200593                  li      a1,1442
d0009146:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d0009152 <rom_boot+0x29c>
d000914a:       |  |  |  |  |     |   0000                      unimp
d000914c:       |  |  |  |  |     |   0000                      unimp
d000914e:       |  |  |  |  |     |   0000                      unimp
d0009150:       |  |  |  |  |     |   0000                      unimp
d0009152:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d0009156:       |  |  |  |  |         05a50513                  addi    a0,a0,90
d000915a:       |  |  |  |  |         00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:351
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET);
d000915e:       |  |  |  |  |         10c00513                  li      a0,268
d0009162:       |  |  |  |  |         455030ef                  jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:352
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d0009166:       |  |  |  |  |         7c0025f3                  csrr    a1,0x7c0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000916a:       |  |  |  |  |         eff5f593                  andi    a1,a1,-257
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000916e:       |  |  |  |  |         862e                      mv      a2,a1
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:356
  if (launder32(cpuctrl_csr) != cpuctrl_otp) {
d0009170:       |  |  |  |  |  /----- 10a61663                  bne     a2,a0,d000927c <rom_boot+0x3c6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:359
  HARDENED_CHECK_EQ(cpuctrl_csr, cpuctrl_otp);
d0009174:       |  |  |  |  |  |  /-- 00a58663                  beq     a1,a0,d0009180 <rom_boot+0x2ca>
d0009178:       |  |  |  |  |  |  |   0000                      unimp
d000917a:       |  |  |  |  |  |  |   0000                      unimp
d000917c:       |  |  |  |  |  |  |   0000                      unimp
d000917e:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:360
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 5);
d0009180:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d0009184:       |  |  |  |  |  |      5fc00593                  li      a1,1532
d0009188:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009194 <rom_boot+0x2de>
d000918c:       |  |  |  |  |  |  |   0000                      unimp
d000918e:       |  |  |  |  |  |  |   0000                      unimp
d0009190:       |  |  |  |  |  |  |   0000                      unimp
d0009192:       |  |  |  |  |  |  |   0000                      unimp
d0009194:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d0009198:       |  |  |  |  |  |      01698433                  add     s0,s3,s6
d000919c:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00091a0:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:362
  sec_mmio_check_counters(/*expected_check_count=*/3);
d00091a4:       |  |  |  |  |  |      450d                      li      a0,3
d00091a6:       |  |  |  |  |  |      631030ef                  jal     ra,d000cfd6 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:363
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 6);
d00091aa:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d00091ae:       |  |  |  |  |  |      65600593                  li      a1,1622
d00091b2:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00091be <rom_boot+0x308>
d00091b6:       |  |  |  |  |  |  |   0000                      unimp
d00091b8:       |  |  |  |  |  |  |   0000                      unimp
d00091ba:       |  |  |  |  |  |  |   0000                      unimp
d00091bc:       |  |  |  |  |  |  |   0000                      unimp
d00091be:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00091c2:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00091c6:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:438
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 4);
d00091ca:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d00091ce:       |  |  |  |  |  |      44a00593                  li      a1,1098
d00091d2:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00091de <rom_boot+0x328>
d00091d6:       |  |  |  |  |  |  |   0000                      unimp
d00091d8:       |  |  |  |  |  |  |   0000                      unimp
d00091da:       |  |  |  |  |  |  |   0000                      unimp
d00091dc:       |  |  |  |  |  |  |   0000                      unimp
d00091de:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d00091e2:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00091e6:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:439
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomPreBootCheck, 7);
d00091ea:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d00091ee:       |  |  |  |  |  |      6b000593                  li      a1,1712
d00091f2:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00091fe <rom_boot+0x348>
d00091f6:       |  |  |  |  |  |  |   0000                      unimp
d00091f8:       |  |  |  |  |  |  |   0000                      unimp
d00091fa:       |  |  |  |  |  |  |   0000                      unimp
d00091fc:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:442
  flash_ctrl_exec_set(flash_exec);
d00091fe:       |  |  |  |  |  |  \-> 854a                      mv      a0,s2
d0009200:       |  |  |  |  |  |      042020ef                  jal     ra,d000b242 <flash_ctrl_exec_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:443
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioExecSet);
d0009204:       |  |  |  |  |  |      008aa503                  lw      a0,8(s5)
d0009208:       |  |  |  |  |  |      0505                      addi    a0,a0,1
d000920a:       |  |  |  |  |  |      00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:445
  sec_mmio_check_values(rnd_uint32());
d000920e:       |  |  |  |  |  |      6be030ef                  jal     ra,d000c8cc <rnd_uint32>
d0009212:       |  |  |  |  |  |      555030ef                  jal     ra,d000cf66 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:446
  sec_mmio_check_counters(/*expected_check_count=*/5);
d0009216:       |  |  |  |  |  |      4515                      li      a0,5
d0009218:       |  |  |  |  |  |      5bf030ef                  jal     ra,d000cfd6 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:449
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 5);
d000921c:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d0009220:       |  |  |  |  |  |      4a400593                  li      a1,1188
d0009224:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009230 <rom_boot+0x37a>
d0009228:       |  |  |  |  |  |  |   0000                      unimp
d000922a:       |  |  |  |  |  |  |   0000                      unimp
d000922c:       |  |  |  |  |  |  |   0000                      unimp
d000922e:       |  |  |  |  |  |  |   0000                      unimp
d0009230:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d0009234:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009238:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:450
  ((rom_ext_entry_point *)entry_point)();
d000923c:       |  |  |  |  |  |      9402                      jalr    s0
d000923e:       |  |  |  |  |  |      014d5537                  lui     a0,0x14d5
d0009242:       |  |  |  |  |  |      20950513                  addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1455209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:453
}
d0009246:       \--|--|--|--|--|----> 4c92                      lw      s9,4(sp)
d0009248:          |  |  |  |  |      4c22                      lw      s8,8(sp)
d000924a:          |  |  |  |  |      4bb2                      lw      s7,12(sp)
d000924c:          |  |  |  |  |      4b42                      lw      s6,16(sp)
d000924e:          |  |  |  |  |      4ad2                      lw      s5,20(sp)
d0009250:          |  |  |  |  |      4a62                      lw      s4,24(sp)
d0009252:          |  |  |  |  |      49f2                      lw      s3,28(sp)
d0009254:          |  |  |  |  |      5902                      lw      s2,32(sp)
d0009256:          |  |  |  |  |      5492                      lw      s1,36(sp)
d0009258:          |  |  |  |  |      5422                      lw      s0,40(sp)
d000925a:          |  |  |  |  |      50b2                      lw      ra,44(sp)
d000925c:          |  |  |  |  |      6145                      addi    sp,sp,48
d000925e:          |  |  |  |  |      8082                      ret
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:329
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d0009260:          |  \--|--|--|----> 759030ef                  jal     ra,d000d1b8 <shutdown_finalize>
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:428
      HARDENED_UNREACHABLE();
d0009264:          \-----|--|--|----> 0000                      unimp
d0009266:                |  |  |      0000                      unimp
d0009268:                |  |  |      0000                      unimp
d000926a:                |  |  |      0000                      unimp
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:335
    HARDENED_UNREACHABLE();
d000926c:                \--|--|----> 0000                      unimp
d000926e:                   |  |      0000                      unimp
d0009270:                   |  |      0000                      unimp
d0009272:                   |  |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:343
    HARDENED_UNREACHABLE();
d0009274:                   \--|----> 0000                      unimp
d0009276:                      |      0000                      unimp
d0009278:                      |      0000                      unimp
d000927a:                      |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:357
    HARDENED_UNREACHABLE();
d000927c:                      \----> 0000                      unimp
d000927e:                             0000                      unimp
d0009280:                             0000                      unimp
d0009282:                             0000                      unimp

d0009284 <boot_policy_manifests_get>:
boot_policy_manifests_get():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:15
#include "sw/device/silicon_creator/lib/drivers/lifecycle.h"
#include "sw/device/silicon_creator/lib/error.h"
#include "sw/device/silicon_creator/lib/shutdown.h"
#include "sw/device/silicon_creator/rom/boot_policy_ptrs.h"

boot_policy_manifests_t boot_policy_manifests_get(void) {
d0009284:           f0000537            lui     a0,0xf0000
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:18
  const manifest_t *slot_a = boot_policy_manifest_a_get();
  const manifest_t *slot_b = boot_policy_manifest_b_get();
  if (slot_a->security_version >= slot_b->security_version) {
d0009288:           34452503            lw      a0,836(a0) # f0000344 <_stack_end+0xffe0344>
d000928c:           f00805b7            lui     a1,0xf0080
d0009290:           3445a603            lw      a2,836(a1) # f0080344 <_stack_end+0x10060344>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:26
    };
  }
  return (boot_policy_manifests_t){
      .ordered = {slot_b, slot_a},
  };
}
d0009294:       /-- 00c56563            bltu    a0,a2,d000929e <boot_policy_manifests_get+0x1a>
d0009298:       |   f0000537            lui     a0,0xf0000
d000929c:       |   8082                        ret
d000929e:       \-> f0080537            lui     a0,0xf0080
d00092a2:           f00005b7            lui     a1,0xf0000
d00092a6:           8082                        ret

d00092a8 <boot_policy_manifest_check>:
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:30

rom_error_t boot_policy_manifest_check(const manifest_t *manifest,
                                       const boot_data_t *boot_data) {
  if (manifest->identifier != CHIP_ROM_EXT_IDENTIFIER) {
d00092a8:                    33452603           lw      a2,820(a0)
d00092ac:                    455256b7           lui     a3,0x45525
d00092b0:                    44f68693           addi    a3,a3,1103 # 4552544f <_epmp_stack_guard_na4+0xd51e44f>
d00092b4:             /----- 00d61e63           bne     a2,a3,d00092d0 <boot_policy_manifest_check+0x28>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:33
    return kErrorBootPolicyBadIdentifier;
  }
  if (manifest->length < CHIP_ROM_EXT_SIZE_MIN ||
d00092b8:             |      33852783           lw      a5,824(a0)
d00092bc:             |      c8078613           addi    a2,a5,-896
d00092c0:             |      66c1                       lui     a3,0x10
d00092c2:             |      c8068693           addi    a3,a3,-896 # fc80 <_stack_size+0xbc80>
d00092c6:             |  /-- 00c6fb63           bgeu    a3,a2,d00092dc <boot_policy_manifest_check+0x34>
d00092ca:             |  |   02425537           lui     a0,0x2425
d00092ce:          /--|--|-- a019                       j       d00092d4 <boot_policy_manifest_check+0x2c>
d00092d0:          |  \--|-> 01425537           lui     a0,0x1425
d00092d4:          >-----|-> 00d50613           addi    a2,a0,13 # 142500d <_rom_ext_virtual_size+0x13a500d>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:46
    HARDENED_CHECK_GE(manifest->security_version,
                      boot_data->min_security_version_rom_ext);
    return kErrorOk;
  }
  return kErrorBootPolicyRollback;
}
d00092d8:       /--|-----|-> 8532                       mv      a0,a2
d00092da:       |  |     |   8082                       ret
manifest_check():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:260
  if (manifest->code_start >= manifest->code_end ||
d00092dc:       |  |     \-> 37452683           lw      a3,884(a0)
d00092e0:       |  |         37852803           lw      a6,888(a0)
d00092e4:       |  |         0106b633           sltu    a2,a3,a6
d00092e8:       |  |         00164613           xori    a2,a2,1
d00092ec:       |  |         3806b713           sltiu   a4,a3,896
d00092f0:       |  |         8f51                       or      a4,a4,a2
d00092f2:       |  |         024d4637           lui     a2,0x24d4
d00092f6:       |  |         10d60613           addi    a2,a2,269 # 24d410d <_rom_ext_virtual_size+0x245410d>
d00092fa:       +--|-------- ff79                       bnez    a4,d00092d8 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:262
      manifest->code_end > manifest->length ||
d00092fc:       |  |         0107b733           sltu    a4,a5,a6
d0009300:       |  |         0036f793           andi    a5,a3,3
d0009304:       |  |         00f037b3           snez    a5,a5
d0009308:       |  |         8f5d                       or      a4,a4,a5
d000930a:       |  |         00387793           andi    a5,a6,3
d000930e:       |  |         00f037b3           snez    a5,a5
d0009312:       |  |         8f5d                       or      a4,a4,a5
d0009314:       +--|-------- f371                       bnez    a4,d00092d8 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:268
  if (manifest->entry_point < manifest->code_start ||
d0009316:       |  |         37c52603           lw      a2,892(a0)
d000931a:       |  |         00d636b3           sltu    a3,a2,a3
d000931e:       |  |         01063733           sltu    a4,a2,a6
d0009322:       |  |         00174713           xori    a4,a4,1
d0009326:       |  |         8ed9                       or      a3,a3,a4
d0009328:       |  |         8a0d                       andi    a2,a2,3
d000932a:       |  |         00c03633           snez    a2,a2
d000932e:       |  |         8e55                       or      a2,a2,a3
d0009330:       |  |     /-- ea09                       bnez    a2,d0009342 <boot_policy_manifest_check+0x9a>
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d0009332:       |  |     |   34452603           lw      a2,836(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:40
      boot_data->min_security_version_rom_ext) {
d0009336:       |  |     |   598c                       lw      a1,48(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d0009338:       |  |  /--|-- 00b67a63           bgeu    a2,a1,d000934c <boot_policy_manifest_check+0xa4>
d000933c:       |  |  |  |   03425537           lui     a0,0x3425
d0009340:       |  \--|--|-- bf51                       j       d00092d4 <boot_policy_manifest_check+0x2c>
d0009342:       |     |  \-> 014d4537           lui     a0,0x14d4
d0009346:       |     |      10d50613           addi    a2,a0,269 # 14d410d <_rom_ext_virtual_size+0x145410d>
d000934a:       +-----|----- b779                       j       d00092d8 <boot_policy_manifest_check+0x30>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:41
    HARDENED_CHECK_GE(manifest->security_version,
d000934c:       |     \----> 34452503           lw      a0,836(a0)
d0009350:       |        /-- 00b57663           bgeu    a0,a1,d000935c <boot_policy_manifest_check+0xb4>
d0009354:       |        |   0000                       unimp
d0009356:       |        |   0000                       unimp
d0009358:       |        |   0000                       unimp
d000935a:       |        |   0000                       unimp
d000935c:       |        \-> 73900613           li      a2,1849
d0009360:       \----------- bfa5                       j       d00092d8 <boot_policy_manifest_check+0x30>

d0009362 <boot_data_read>:
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:543
  boot_data_digest_compute(boot_data, &boot_data->digest);

  return res;
}

rom_error_t boot_data_read(lifecycle_state_t lc_state, boot_data_t *boot_data) {
d0009362:                                   7179                        addi    sp,sp,-48
d0009364:                                   d606                        sw      ra,44(sp)
d0009366:                                   d422                        sw      s0,40(sp)
d0009368:                                   d226                        sw      s1,36(sp)
d000936a:                                   d04a                        sw      s2,32(sp)
d000936c:                                   892e                        mv      s2,a1
d000936e:                                   842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
  active_page_info_t active_page;
  HARDENED_RETURN_IF_ERROR(boot_data_active_page_find(&active_page, boot_data));
d0009370:                                   0028                        addi    a0,sp,8
d0009372:                                   22e9                        jal     d000953c <boot_data_active_page_find>
d0009374:                                   84aa                        mv      s1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009376:                                   85aa                        mv      a1,a0
d0009378:                                   73900513            li      a0,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
d000937c:       /-------------------------- 18a59e63            bne     a1,a0,d0009518 <boot_data_read+0x1b6>
d0009380:       |                       /-- 00a48663            beq     s1,a0,d000938c <boot_data_read+0x2a>
d0009384:       |                       |   0000                        unimp
d0009386:       |                       |   0000                        unimp
d0009388:       |                       |   0000                        unimp
d000938a:       |                       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d000938c:       |                       \-> 4552                        lw      a0,20(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000938e:       |                           85aa                        mv      a1,a0
d0009390:       |                           1d400613            li      a2,468
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
d0009394:       |                 /-------- 04c59d63            bne     a1,a2,d00093ee <boot_data_read+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:551
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
      return kErrorOk;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolFalse);
d0009398:       |                 |     /-- 00c50663            beq     a0,a2,d00093a4 <boot_data_read+0x42>
d000939c:       |                 |     |   0000                        unimp
d000939e:       |                 |     |   0000                        unimp
d00093a0:       |                 |     |   0000                        unimp
d00093a2:       |                 |     |   0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:490
  uint32_t allowed_in_prod = otp_read32(
d00093a4:       |                 |     \-> 11800513            li      a0,280
d00093a8:       |                 |         20f030ef            jal     ra,d000cdb6 <otp_read32>
d00093ac:       |                 |         014245b7            lui     a1,0x1424
d00093b0:       |                 |         40d58593            addi    a1,a1,1037 # 142440d <_rom_ext_virtual_size+0x13a440d>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:492
  rom_error_t res = lc_state ^ launder32(kErrorBootDataNotFound);
d00093b4:       |                 |         8da1                        xor     a1,a1,s0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00093b6:       |                 |         8622                        mv      a2,s0
d00093b8:       |                 |         cf8d06b7            lui     a3,0xcf8d0
d00093bc:       |                 |         aaa68713            addi    a4,a3,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00093c0:       |                 |  /----- 04c75263            bge     a4,a2,d0009404 <boot_data_read+0xa2>
d00093c4:       |                 |  |      aab68693            addi    a3,a3,-1365
d00093c8:       |              /--|--|----- 06d60a63            beq     a2,a3,d000943c <boot_data_read+0xda>
d00093cc:       |              |  |  |      0b5a76b7            lui     a3,0xb5a7
d00093d0:       |              |  |  |      5e068693            addi    a3,a3,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d00093d4:       |           /--|--|--|----- 08d61363            bne     a2,a3,d000945a <boot_data_read+0xf8>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:500
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d00093d8:       |           |  |  |  |  /-- 00d40663            beq     s0,a3,d00093e4 <boot_data_read+0x82>
d00093dc:       |           |  |  |  |  |   0000                        unimp
d00093de:       |           |  |  |  |  |   0000                        unimp
d00093e0:       |           |  |  |  |  |   0000                        unimp
d00093e2:       |           |  |  |  |  |   0000                        unimp
d00093e4:       |           |  |  |  |  \-> 0a183537            lui     a0,0xa183
d00093e8:       |           |  |  |  |      6d450513            addi    a0,a0,1748 # a1836d4 <_rom_ext_virtual_size+0xa1036d4>
d00093ec:       |        /--|--|--|--|----- a0d9                        j       d00094b2 <boot_data_read+0x150>
d00093ee:       |        |  |  |  \--|----> 73900493            li      s1,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d00093f2:       |  /-----|--|--|-----|----- 12959d63            bne     a1,s1,d000952c <boot_data_read+0x1ca>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:548
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
d00093f6:       |  |     |  |  |     |  /-- 00950663            beq     a0,s1,d0009402 <boot_data_read+0xa0>
d00093fa:       |  |     |  |  |     |  |   0000                        unimp
d00093fc:       |  |     |  |  |     |  |   0000                        unimp
d00093fe:       |  |     |  |  |     |  |   0000                        unimp
d0009400:       |  |     |  |  |     |  |   0000                        unimp
d0009402:       +--|-----|--|--|-----|--\-X aa19                        j       d0009518 <boot_data_read+0x1b6>
d0009404:       |  |     |  |  |     \----> 91b9b6b7            lui     a3,0x91b9b
d0009408:       |  |     |  |  |            68a68693            addi    a3,a3,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000940c:       |  |     |  |  |     /----- 08d61363            bne     a2,a3,d0009492 <boot_data_read+0x130>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:512
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d0009410:       |  |     |  |  |     |  /-- 00d40663            beq     s0,a3,d000941c <boot_data_read+0xba>
d0009414:       |  |     |  |  |     |  |   0000                        unimp
d0009416:       |  |     |  |  |     |  |   0000                        unimp
d0009418:       |  |     |  |  |     |  |   0000                        unimp
d000941a:       |  |     |  |  |     |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000941c:       |  |     |  |  |     |  \-> 872a                        mv      a4,a0
d000941e:       |  |     |  |  |     |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:514
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d0009422:       |  |  /--|--|--|-----|----- 10c71263            bne     a4,a2,d0009526 <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:515
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d0009426:       |  |  |  |  |  |     |  /-- 00c50663            beq     a0,a2,d0009432 <boot_data_read+0xd0>
d000942a:       |  |  |  |  |  |     |  |   0000                        unimp
d000942c:       |  |  |  |  |  |     |  |   0000                        unimp
d000942e:       |  |  |  |  |  |     |  |   0000                        unimp
d0009430:       |  |  |  |  |  |     |  |   0000                        unimp
d0009432:       |  |  |  |  |  |     |  \-> 90fbf537            lui     a0,0x90fbf
d0009436:       |  |  |  |  |  |     |      5be50513            addi    a0,a0,1470 # 90fbf5be <_stack_end+0xb0f9f5be>
d000943a:       |  |  |  +--|--|-----|----- a8a5                        j       d00094b2 <boot_data_read+0x150>
d000943c:       |  |  |  |  |  \-----|----> cf8d0537            lui     a0,0xcf8d0
d0009440:       |  |  |  |  |        |      aab50513            addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:520
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d0009444:       |  |  |  |  |        |  /-- 00a40663            beq     s0,a0,d0009450 <boot_data_read+0xee>
d0009448:       |  |  |  |  |        |  |   0000                        unimp
d000944a:       |  |  |  |  |        |  |   0000                        unimp
d000944c:       |  |  |  |  |        |  |   0000                        unimp
d000944e:       |  |  |  |  |        |  |   0000                        unimp
d0009450:       |  |  |  |  |        |  \-> cecec537            lui     a0,0xcecec
d0009454:       |  |  |  |  |        |      99f50513            addi    a0,a0,-1633 # ceceb99f <_stack_end+0xeeccb99f>
d0009458:       |  |  |  +--|--------|----- a8a9                        j       d00094b2 <boot_data_read+0x150>
d000945a:       |  |  |  |  \--------|----> 65f256b7            lui     a3,0x65f25
d000945e:       |  |  |  |           |      20f68693            addi    a3,a3,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d0009462:       |  |  |  |        /--|----- 0cd61963            bne     a2,a3,d0009534 <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:504
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d0009466:       |  |  |  |        |  |  /-- 00d40663            beq     s0,a3,d0009472 <boot_data_read+0x110>
d000946a:       |  |  |  |        |  |  |   0000                        unimp
d000946c:       |  |  |  |        |  |  |   0000                        unimp
d000946e:       |  |  |  |        |  |  |   0000                        unimp
d0009470:       |  |  |  |        |  |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009472:       |  |  |  |        |  |  \-> 872a                        mv      a4,a0
d0009474:       |  |  |  |        |  |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:506
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d0009478:       |  |  +--|--------|--|----- 0ac71763            bne     a4,a2,d0009526 <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:507
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d000947c:       |  |  |  |        |  |  /-- 00c50663            beq     a0,a2,d0009488 <boot_data_read+0x126>
d0009480:       |  |  |  |        |  |  |   0000                        unimp
d0009482:       |  |  |  |        |  |  |   0000                        unimp
d0009484:       |  |  |  |        |  |  |   0000                        unimp
d0009486:       |  |  |  |        |  |  |   0000                        unimp
d0009488:       |  |  |  |        |  |  \-> 64b01537            lui     a0,0x64b01
d000948c:       |  |  |  |        |  |      13b50513            addi    a0,a0,315 # 64b0113b <_epmp_stack_guard_na4+0x2cafa13b>
d0009490:       |  |  |  +--------|--|----- a00d                        j       d00094b2 <boot_data_read+0x150>
d0009492:       |  |  |  |        |  \----> b2866537            lui     a0,0xb2866
d0009496:       |  |  |  |        |         fbb50513            addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000949a:       |  |  |  |        +-------- 08a61d63            bne     a2,a0,d0009534 <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:496
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000949e:       |  |  |  |        |     /-- 00a40663            beq     s0,a0,d00094aa <boot_data_read+0x148>
d00094a2:       |  |  |  |        |     |   0000                        unimp
d00094a4:       |  |  |  |        |     |   0000                        unimp
d00094a6:       |  |  |  |        |     |   0000                        unimp
d00094a8:       |  |  |  |        |     |   0000                        unimp
d00094aa:       |  |  |  |        |     \-> b3c42537            lui     a0,0xb3c42
d00094ae:       |  |  |  |        |         c8f50513            addi    a0,a0,-881 # b3c41c8f <_stack_end+0xd3c21c8f>
d00094b2:       |  |  |  \--------|-------> 00a5c4b3            xor     s1,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00094b6:       |  |  |           |  /----> 85a6                        mv      a1,s1
d00094b8:       |  |  |           |  |      73900513            li      a0,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:527
  HARDENED_RETURN_IF_ERROR(res);
d00094bc:       +--|--|-----------|--|----- 04a59e63            bne     a1,a0,d0009518 <boot_data_read+0x1b6>
d00094c0:       |  |  |           |  |  /-- 00a48663            beq     s1,a0,d00094cc <boot_data_read+0x16a>
d00094c4:       |  |  |           |  |  |   0000                        unimp
d00094c6:       |  |  |           |  |  |   0000                        unimp
d00094c8:       |  |  |           |  |  |   0000                        unimp
d00094ca:       |  |  |           |  |  |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:529
  boot_data->is_valid = kBootDataValidEntry;
d00094cc:       |  |  |           |  |  \-> 02090413            addi    s0,s2,32
d00094d0:       |  |  |           |  |      557d                        li      a0,-1
d00094d2:       |  |  |           |  |      02a92223            sw      a0,36(s2)
d00094d6:       |  |  |           |  |      02a92023            sw      a0,32(s2)
d00094da:       |  |  |           |  |      41445537            lui     a0,0x41445
d00094de:       |  |  |           |  |      f4250513            addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:530
  boot_data->identifier = kBootDataIdentifier;
d00094e2:       |  |  |           |  |      02a92423            sw      a0,40(s2)
d00094e6:       |  |  |           |  |      4515                        li      a0,5
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:531
  boot_data->counter = kBootDataDefaultCounterVal;
d00094e8:       |  |  |           |  |      02a92623            sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:533
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_ROM_EXT_OFFSET);
d00094ec:       |  |  |           |  |      11000513            li      a0,272
d00094f0:       |  |  |           |  |      0c7030ef            jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:532
  boot_data->min_security_version_rom_ext =
d00094f4:       |  |  |           |  |      02a92823            sw      a0,48(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:535
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_BL0_OFFSET);
d00094f8:       |  |  |           |  |      11400513            li      a0,276
d00094fc:       |  |  |           |  |      0bb030ef            jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:534
  boot_data->min_security_version_bl0 =
d0009500:       |  |  |           |  |      02a92a23            sw      a0,52(s2)
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d0009504:       |  |  |           |  |      5e2030ef            jal     ra,d000cae6 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009508:       |  |  |           |  |      02000593            li      a1,32
d000950c:       |  |  |           |  |      8522                        mv      a0,s0
d000950e:       |  |  |           |  |      5f2030ef            jal     ra,d000cb00 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d0009512:       |  |  |           |  |      854a                        mv      a0,s2
d0009514:       |  |  |           |  |      65a030ef            jal     ra,d000cb6e <hmac_sha256_final>
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:556
      return boot_data_default_get(lc_state, boot_data);
    default:
      HARDENED_UNREACHABLE();
  }
}
d0009518:       \--|--|-----------|--|----> 8526                        mv      a0,s1
d000951a:          |  |           |  |      5902                        lw      s2,32(sp)
d000951c:          |  |           |  |      5492                        lw      s1,36(sp)
d000951e:          |  |           |  |      5422                        lw      s0,40(sp)
d0009520:          |  |           |  |      50b2                        lw      ra,44(sp)
d0009522:          |  |           |  |      6145                        addi    sp,sp,48
d0009524:          |  |           |  |      8082                        ret
d0009526:          |  \-----------|--|----> 00d5c4b3            xor     s1,a1,a3
d000952a:          |              |  \----- b771                        j       d00094b6 <boot_data_read+0x154>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:554
      HARDENED_UNREACHABLE();
d000952c:          \--------------|-------> 0000                        unimp
d000952e:                         |         0000                        unimp
d0009530:                         |         0000                        unimp
d0009532:                         |         0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:524
      HARDENED_UNREACHABLE();
d0009534:                         \-------> 0000                        unimp
d0009536:                                   0000                        unimp
d0009538:                                   0000                        unimp
d000953a:                                   0000                        unimp

d000953c <boot_data_active_page_find>:
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:457
                                              boot_data_t *boot_data) {
d000953c:                                         716d                  addi    sp,sp,-272
d000953e:                                         10112623              sw      ra,268(sp)
d0009542:                                         10812423              sw      s0,264(sp)
d0009546:                                         10912223              sw      s1,260(sp)
d000954a:                                         11212023              sw      s2,256(sp)
d000954e:                                         dfce                  sw      s3,252(sp)
d0009550:                                         ddd2                  sw      s4,248(sp)
d0009552:                                         dbd6                  sw      s5,244(sp)
d0009554:                                         d9da                  sw      s6,240(sp)
d0009556:                                         d7de                  sw      s7,236(sp)
d0009558:                                         d5e2                  sw      s8,232(sp)
d000955a:                                         d3e6                  sw      s9,228(sp)
d000955c:                                         d1ea                  sw      s10,224(sp)
d000955e:                                         cfee                  sw      s11,220(sp)
d0009560:                                         8b2a                  mv      s6,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009562:                                         4501                  li      a0,0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:458
  *page_info = (active_page_info_t){
d0009564:                                         000b2023              sw      zero,0(s6)
d0009568:                                         1d400913              li      s2,468
d000956c:                                         012b2223              sw      s2,4(s6)
d0009570:                                         02000c13              li      s8,32
d0009574:                                         018b2423              sw      s8,8(s6)
d0009578:                                         012b2623              sw      s2,12(s6)
d000957c:                                         018b2823              sw      s8,16(s6)
d0009580:                                         4605                  li      a2,1
d0009582:                                         c02e                  sw      a1,0(sp)
d0009584:                                         4b81                  li      s7,0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009586:       /-------------------------------- 30a66b63              bltu    a2,a0,d000989c <boot_data_active_page_find+0x360>
d000958a:       |                                 4b81                  li      s7,0
d000958c:       |                                 00004517              auipc   a0,0x4
d0009590:       |                                 ed450513              addi    a0,a0,-300 # d000d460 <kPages>
d0009594:       |                                 c22a                  sw      a0,4(sp)
d0009596:       |                                 44a5                  li      s1,9
d0009598:       |                                 73900d13              li      s10,1849
d000959c:       |                                 4cc1                  li      s9,16
d000959e:       |                                 41445537              lui     a0,0x41445
d00095a2:       |                                 f4250513              addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
d00095a6:       |                                 c62a                  sw      a0,12(sp)
d00095a8:       |                                 03424537              lui     a0,0x3424
d00095ac:       |                                 40d50513              addi    a0,a0,1037 # 342440d <_rom_ext_virtual_size+0x33a440d>
d00095b0:       |                                 c42a                  sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d00095b2:       |  /----------------------------> 002b9513              slli    a0,s7,0x2
d00095b6:       |  |                              4592                  lw      a1,4(sp)
d00095b8:       |  |                              952e                  add     a0,a0,a1
d00095ba:       |  |                              00052a03              lw      s4,0(a0)
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:429
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d00095be:       |  |                              4519                  li      a0,6
d00095c0:       |  |                              c8aa                  sw      a0,80(sp)
d00095c2:       |  |                              caa6                  sw      s1,84(sp)
d00095c4:       |  |                              cca6                  sw      s1,88(sp)
d00095c6:       |  |                              088c                  addi    a1,sp,80
d00095c8:       |  |                              8552                  mv      a0,s4
d00095ca:       |  |                              4cb010ef              jal     ra,d000b294 <flash_ctrl_info_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095ce:       |  |                              4501                  li      a0,0
d00095d0:       |  |                              4d81                  li      s11,0
d00095d2:       |  |                              1d400993              li      s3,468
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d00095d6:       |  |                              45fd                  li      a1,31
d00095d8:       |  |              /-------------- 10a5e263              bltu    a1,a0,d00096dc <boot_data_active_page_find+0x1a0>
d00095dc:       |  |              |               4d81                  li      s11,0
d00095de:       |  |              |               1d400993              li      s3,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d00095e2:       |  |              |  /----------> 002d9513              slli    a0,s11,0x2
d00095e6:       |  |              |  |            088c                  addi    a1,sp,80
d00095e8:       |  |              |  |            00a584b3              add     s1,a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:126
  *masked_identifier = 0;
d00095ec:       |  |              |  |            0004a023              sw      zero,0(s1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:128
  const uint32_t offset = index * sizeof(boot_data_t) + kIsValidOffset;
d00095f0:       |  |              |  |            006d9a93              slli    s5,s11,0x6
d00095f4:       |  |              |  |            020ae593              ori     a1,s5,32
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
  HARDENED_RETURN_IF_ERROR(flash_ctrl_info_read(page, offset, 3, buf));
d00095f8:       |  |              |  |            460d                  li      a2,3
d00095fa:       |  |              |  |            0994                  addi    a3,sp,208
d00095fc:       |  |              |  |            8552                  mv      a0,s4
d00095fe:       |  |              |  |            768010ef              jal     ra,d000ad66 <flash_ctrl_info_read>
d0009602:       |  |              |  |            842a                  mv      s0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009604:       |  |              |  |            85aa                  mv      a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
d0009606:       |  |              |  |     /----- 03a59363              bne     a1,s10,d000962c <boot_data_active_page_find+0xf0>
d000960a:       |  |              |  |     |      73900513              li      a0,1849
d000960e:       |  |              |  |     |  /-- 00a40663              beq     s0,a0,d000961a <boot_data_active_page_find+0xde>
d0009612:       |  |              |  |     |  |   0000                  unimp
d0009614:       |  |              |  |     |  |   0000                  unimp
d0009616:       |  |              |  |     |  |   0000                  unimp
d0009618:       |  |              |  |     |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:130
  *masked_identifier = buf[0] & buf[1] & buf[2];
d000961a:       |  |              |  |     |  \-> 454e                  lw      a0,208(sp)
d000961c:       |  |              |  |     |      45de                  lw      a1,212(sp)
d000961e:       |  |              |  |     |      466e                  lw      a2,216(sp)
d0009620:       |  |              |  |     |      8d6d                  and     a0,a0,a1
d0009622:       |  |              |  |     |      8d71                  and     a0,a0,a2
d0009624:       |  |              |  |     |      c088                  sw      a0,0(s1)
d0009626:       |  |              |  |     |      73900413              li      s0,1849
d000962a:       |  |              |  |     |  /-- a011                  j       d000962e <boot_data_active_page_find+0xf2>
d000962c:       |  |              |  |     \--|-> 4501                  li      a0,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000962e:       |  |              |  |        \-> 85a2                  mv      a1,s0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d0009630:       |  |  /-----------|--|----------- 23a59063              bne     a1,s10,d0009850 <boot_data_active_page_find+0x314>
d0009634:       |  |  |           |  |        /-- 01a40663              beq     s0,s10,d0009640 <boot_data_active_page_find+0x104>
d0009638:       |  |  |           |  |        |   0000                  unimp
d000963a:       |  |  |           |  |        |   0000                  unimp
d000963c:       |  |  |           |  |        |   0000                  unimp
d000963e:       |  |  |           |  |        |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:335
    if (sniff_results[i] == kFlashCtrlErasedWord) {
d0009640:       |  |  |           |  |        \-> 55fd                  li      a1,-1
d0009642:       |  |  |           |  |  /-------- 08b51263              bne     a0,a1,d00096c6 <boot_data_active_page_find+0x18a>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d0009646:       |  |  |           |  |  |         4641                  li      a2,16
d0009648:       |  |  |           |  |  |         0814                  addi    a3,sp,16
d000964a:       |  |  |           |  |  |         8552                  mv      a0,s4
d000964c:       |  |  |           |  |  |         85d6                  mv      a1,s5
d000964e:       |  |  |           |  |  |         718010ef              jal     ra,d000ad66 <flash_ctrl_info_read>
d0009652:       |  |  |           |  |  |         842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d0009654:       |  |  +-----------|--|--|-------- 1fa51e63              bne     a0,s10,d0009850 <boot_data_active_page_find+0x314>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009658:       |  |  |           |  |  |         4581                  li      a1,0
d000965a:       |  |  |           |  |  |         73900513              li      a0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
d000965e:       |  |  |           |  |  |     /-- 00a40663              beq     s0,a0,d000966a <boot_data_active_page_find+0x12e>
d0009662:       |  |  |           |  |  |     |   0000                  unimp
d0009664:       |  |  |           |  |  |     |   0000                  unimp
d0009666:       |  |  |           |  |  |     |   0000                  unimp
d0009668:       |  |  |           |  |  |     |   0000                  unimp
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d000966a:       |  |  |           |  |  |     \-> 463d                  li      a2,15
d000966c:       |  |  |           |  |  |  /----- 00b66e63              bltu    a2,a1,d0009688 <boot_data_active_page_find+0x14c>
d0009670:       |  |  |           |  |  |  |      4601                  li      a2,0
d0009672:       |  |  |           |  |  |  |      55fd                  li      a1,-1
d0009674:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considered a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d0009676:       |  |  |           |  |  |  |  /-> 4298                  lw      a4,0(a3)
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:84
    res &= read_32(boot_data);
d0009678:       |  |  |           |  |  |  |  |   8df9                  and     a1,a1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d000967a:       |  |  |           |  |  |  |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:85
    is_empty &= read_32(boot_data);
d000967c:       |  |  |           |  |  |  |  |   8d79                  and     a0,a0,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000967e:       |  |  |           |  |  |  |  |   8732                  mv      a4,a2
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:86
    boot_data = (char *)boot_data + sizeof(uint32_t);
d0009680:       |  |  |           |  |  |  |  |   0691                  addi    a3,a3,4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d0009682:       |  |  |           |  |  |  |  \-- ff976ae3              bltu    a4,s9,d0009676 <boot_data_active_page_find+0x13a>
d0009686:       |  |  |           |  |  |  |  /-- a019                  j       d000968c <boot_data_active_page_find+0x150>
d0009688:       |  |  |           |  |  |  \--|-> 4601                  li      a2,0
d000968a:       |  |  |           |  |  |     |   55fd                  li      a1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:88
  HARDENED_CHECK_EQ(i, kBootDataNumWords);
d000968c:       |  |  |           |  |  |  /--\-X 01960663              beq     a2,s9,d0009698 <boot_data_active_page_find+0x15c>
d0009690:       |  |  |           |  |  |  |      0000                  unimp
d0009692:       |  |  |           |  |  |  |      0000                  unimp
d0009694:       |  |  |           |  |  |  |      0000                  unimp
d0009696:       |  |  |           |  |  |  |      0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009698:       |  |  |           |  |  |  \----> 862e                  mv      a2,a1
d000969a:       |  |  |           |  |  |         1d400993              li      s3,468
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:89
  if (launder32(res) == kFlashCtrlErasedWord) {
d000969e:       |  |  |           |  |  |         56fd                  li      a3,-1
d00096a0:       |  |  |           |  |  |  /----- 00d61a63              bne     a2,a3,d00096b4 <boot_data_active_page_find+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:90
    HARDENED_CHECK_EQ(res, kFlashCtrlErasedWord);
d00096a4:       |  |  |           |  |  |  |      567d                  li      a2,-1
d00096a6:       |  |  |           |  |  |  |  /-- 00c58663              beq     a1,a2,d00096b2 <boot_data_active_page_find+0x176>
d00096aa:       |  |  |           |  |  |  |  |   0000                  unimp
d00096ac:       |  |  |           |  |  |  |  |   0000                  unimp
d00096ae:       |  |  |           |  |  |  |  |   0000                  unimp
d00096b0:       |  |  |           |  |  |  |  |   0000                  unimp
d00096b2:       |  |  |           |  |  |  |  \-> 89aa                  mv      s3,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096b4:       |  |  |           |  |  |  \----> 854e                  mv      a0,s3
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:338
      if (launder32(has_empty_entry) == kHardenedBoolTrue) {
d00096b6:       |  |  |           |  |  |     /-- 01a50d63              beq     a0,s10,d00096d0 <boot_data_active_page_find+0x194>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:342
      HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolFalse);
d00096ba:       |  |  |           |  |  +-----|-- 01298663              beq     s3,s2,d00096c6 <boot_data_active_page_find+0x18a>
d00096be:       |  |  |           |  |  |     |   0000                  unimp
d00096c0:       |  |  |           |  |  |     |   0000                  unimp
d00096c2:       |  |  |           |  |  |     |   0000                  unimp
d00096c4:       |  |  |           |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d00096c6:       |  |  |           |  |  \-----|-> 0d85                  addi    s11,s11,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096c8:       |  |  |           |  |        |   856e                  mv      a0,s11
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
d00096ca:       |  |  |           |  \--------|-- f1856ce3              bltu    a0,s8,d00095e2 <boot_data_active_page_find+0xa6>
d00096ce:       |  |  |           +-----------|-- a039                  j       d00096dc <boot_data_active_page_find+0x1a0>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:339
        HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolTrue);
d00096d0:       |  |  |           +-----------\-X 01a98663              beq     s3,s10,d00096dc <boot_data_active_page_find+0x1a0>
d00096d4:       |  |  |           |               0000                  unimp
d00096d6:       |  |  |           |               0000                  unimp
d00096d8:       |  |  |           |               0000                  unimp
d00096da:       |  |  |           |               0000                  unimp
d00096dc:       |  |  |           \-------------> 895a                  mv      s2,s6
d00096de:       |  |  |                           02000513              li      a0,32
d00096e2:       |  |  |                           fffd8c13              addi    s8,s11,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:347
  HARDENED_CHECK_LE(i, kBootDataEntriesPerPage);
d00096e6:       |  |  |                       /-- 01b57663              bgeu    a0,s11,d00096f2 <boot_data_active_page_find+0x1b6>
d00096ea:       |  |  |                       |   0000                  unimp
d00096ec:       |  |  |                       |   0000                  unimp
d00096ee:       |  |  |                       |   0000                  unimp
d00096f0:       |  |  |                       |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096f2:       |  |  |                       \-> 8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d00096f4:       |  |  |           /-------------- 07b57863              bgeu    a0,s11,d0009764 <boot_data_active_page_find+0x228>
d00096f8:       |  |  |           |               4b01                  li      s6,0
d00096fa:       |  |  |           |               006d9513              slli    a0,s11,0x6
d00096fe:       |  |  |           |               fc050493              addi    s1,a0,-64
d0009702:       |  |  |           |               002d9513              slli    a0,s11,0x2
d0009706:       |  |  |           |               00ec                  addi    a1,sp,76
d0009708:       |  |  |           |               00a58ab3              add     s5,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000970c:       |  |  |           |     /-------> 855a                  mv      a0,s6
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
d000970e:       |  |  |           |  /--|-------- 05b57c63              bgeu    a0,s11,d0009766 <boot_data_active_page_find+0x22a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:357
    if (sniff_results[i] == kBootDataIdentifier) {
d0009712:       |  |  |           |  |  |         000aa503              lw      a0,0(s5)
d0009716:       |  |  |           |  |  |         45b2                  lw      a1,12(sp)
d0009718:       |  |  |           |  |  |  /----- 02b51d63              bne     a0,a1,d0009752 <boot_data_active_page_find+0x216>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d000971c:       |  |  |           |  |  |  |      4641                  li      a2,16
d000971e:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
d0009720:       |  |  |           |  |  |  |      8552                  mv      a0,s4
d0009722:       |  |  |           |  |  |  |      85a6                  mv      a1,s1
d0009724:       |  |  |           |  |  |  |      642010ef              jal     ra,d000ad66 <flash_ctrl_info_read>
d0009728:       |  |  |           |  |  |  |      842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:358
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d000972a:       |  |  |        /--|--|--|--|----- 0ba51263              bne     a0,s10,d00097ce <boot_data_active_page_find+0x292>
d000972e:       |  |  |        |  |  |  |  |  /-- 01a40663              beq     s0,s10,d000973a <boot_data_active_page_find+0x1fe>
d0009732:       |  |  |        |  |  |  |  |  |   0000                  unimp
d0009734:       |  |  |        |  |  |  |  |  |   0000                  unimp
d0009736:       |  |  |        |  |  |  |  |  |   0000                  unimp
d0009738:       |  |  |        |  |  |  |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:359
      rom_error_t is_valid = boot_data_check(&buf);
d000973a:       |  |  |        |  |  |  |  |  \-> 0808                  addi    a0,sp,16
d000973c:       |  |  |        |  |  |  |  |      2a69                  jal     d00098d6 <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000973e:       |  |  |        |  |  |  |  |      85aa                  mv      a1,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:360
      if (launder32(is_valid) == kErrorOk) {
d0009740:       |  |  |  /-----|--|--|--|--|----- 15a58663              beq     a1,s10,d000988c <boot_data_active_page_find+0x350>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:367
      HARDENED_CHECK_EQ(is_valid, kErrorBootDataInvalid);
d0009744:       |  |  |  |     |  |  |  |  |      45a2                  lw      a1,8(sp)
d0009746:       |  |  |  |     |  |  |  |  +----- 00b50663              beq     a0,a1,d0009752 <boot_data_active_page_find+0x216>
d000974a:       |  |  |  |     |  |  |  |  |      0000                  unimp
d000974c:       |  |  |  |     |  |  |  |  |      0000                  unimp
d000974e:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009750:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009752:       |  |  |  |     |  |  |  |  \----> 1c7d                  addi    s8,s8,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:355
       --i, ++j) {
d0009754:       |  |  |  |     |  |  |  |         0b05                  addi    s6,s6,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009756:       |  |  |  |     |  |  |  |         8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d0009758:       |  |  |  |     |  |  |  |         fc048493              addi    s1,s1,-64
d000975c:       |  |  |  |     |  |  |  |         1af1                  addi    s5,s5,-4
d000975e:       |  |  |  |     |  |  |  \-------- fbb567e3              bltu    a0,s11,d000970c <boot_data_active_page_find+0x1d0>
d0009762:       |  |  |  |     |  |  +----------- a011                  j       d0009766 <boot_data_active_page_find+0x22a>
d0009764:       |  |  |  |     |  \--|----------> 4b01                  li      s6,0
d0009766:       |  |  |  |     |     \----------> 1d400593              li      a1,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:373
  HARDENED_CHECK_LE(j, first_empty_index);
d000976a:       |  |  |  |  /--|--------------/-X 016df663              bgeu    s11,s6,d0009776 <boot_data_active_page_find+0x23a>
d000976e:       |  |  |  |  |  |              |   0000                  unimp
d0009770:       |  |  |  |  |  |              |   0000                  unimp
d0009772:       |  |  |  |  |  |              |   0000                  unimp
d0009774:       |  |  |  |  |  |              |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009776:       |  |  |  |  |  |              \-> 852e                  mv      a0,a1
d0009778:       |  |  |  |  |  |                  73900413              li      s0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:375
  if (launder32(has_valid_entry) == kHardenedBoolTrue) {
d000977c:       |  |  |  |  |  +----------------- 04851963              bne     a0,s0,d00097ce <boot_data_active_page_find+0x292>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:376
    HARDENED_CHECK_EQ(has_valid_entry, kHardenedBoolTrue);
d0009780:       |  |  |  |  |  |              /-- 01a58663              beq     a1,s10,d000978c <boot_data_active_page_find+0x250>
d0009784:       |  |  |  |  |  |              |   0000                  unimp
d0009786:       |  |  |  |  |  |              |   0000                  unimp
d0009788:       |  |  |  |  |  |              |   0000                  unimp
d000978a:       |  |  |  |  |  |              |   0000                  unimp
d000978c:       |  |  |  |  |  |              \-> 8b4a                  mv      s6,s2
d000978e:       |  |  |  |  |  |                  86ae                  mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:377
    if (launder32(page_info->has_valid_entry) == kHardenedBoolFalse) {
d0009790:       |  |  |  |  |  |                  00c92583              lw      a1,12(s2)
d0009794:       |  |  |  |  |  |                  00c92503              lw      a0,12(s2)
d0009798:       |  |  |  |  |  |                  1d400913              li      s2,468
d000979c:       |  |  |  |  |  |           /----- 03259d63              bne     a1,s2,d00097d6 <boot_data_active_page_find+0x29a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:379
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolFalse);
d00097a0:       |  |  |  |  |  |           |  /-- 01250663              beq     a0,s2,d00097ac <boot_data_active_page_find+0x270>
d00097a4:       |  |  |  |  |  |           |  |   0000                  unimp
d00097a6:       |  |  |  |  |  |           |  |   0000                  unimp
d00097a8:       |  |  |  |  |  |           |  |   0000                  unimp
d00097aa:       |  |  |  |  |  |           |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:380
      *page_info = (active_page_info_t){
d00097ac:       |  |  |  |  |  |           |  \-> 014b2023              sw      s4,0(s6)
d00097b0:       |  |  |  |  |  |           |      013b2223              sw      s3,4(s6)
d00097b4:       |  |  |  |  |  |           |      01bb2423              sw      s11,8(s6)
d00097b8:       |  |  |  |  |  |           |      00db2623              sw      a3,12(s6)
d00097bc:       |  |  |  |  |  |           |      018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:387
      *boot_data = buf;
d00097c0:       |  |  |  |  |  |           |      080c                  addi    a1,sp,16
d00097c2:       |  |  |  |  |  |           |      04000613              li      a2,64
d00097c6:       |  |  |  |  |  |           |      4502                  lw      a0,0(sp)
d00097c8:       |  |  |  |  |  |     /-----|----> 05b030ef              jal     ra,d000d022 <memcpy>
d00097cc:       |  |  |  |  |  |  /--|-----|----- a041                  j       d000984c <boot_data_active_page_find+0x310>
d00097ce:       |  |  |  |  |  \--|--|-----|----> 8b4a                  mv      s6,s2
d00097d0:       |  |  |  |  |     |  |     |      1d400913              li      s2,468
d00097d4:       |  |  |  |  |     +--|-----|----- a8a5                  j       d000984c <boot_data_active_page_find+0x310>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d00097d6:       |  |  |  |  |     |  |  /--\----X 05a51863              bne     a0,s10,d0009826 <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:389
               launder32(buf.counter) > boot_data->counter) {
d00097da:       |  |  |  |  |     |  |  |         5572                  lw      a0,60(sp)
d00097dc:       |  |  |  |  |     |  |  |         4582                  lw      a1,0(sp)
d00097de:       |  |  |  |  |     |  |  |         55cc                  lw      a1,44(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d00097e0:       |  |  |  |  |     |  |  +-------- 04a5f363              bgeu    a1,a0,d0009826 <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:391
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d00097e4:       |  |  |  |  |     |  |  |         00cb2503              lw      a0,12(s6)
d00097e8:       |  |  |  |  |     |  |  |         73900413              li      s0,1849
d00097ec:       |  |  |  |  |     |  |  |     /-- 00850663              beq     a0,s0,d00097f8 <boot_data_active_page_find+0x2bc>
d00097f0:       |  |  |  |  |     |  |  |     |   0000                  unimp
d00097f2:       |  |  |  |  |     |  |  |     |   0000                  unimp
d00097f4:       |  |  |  |  |     |  |  |     |   0000                  unimp
d00097f6:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:392
      HARDENED_CHECK_GT(buf.counter, boot_data->counter);
d00097f8:       |  |  |  |  |     |  |  |     \-> 5672                  lw      a2,60(sp)
d00097fa:       |  |  |  |  |     |  |  |         4502                  lw      a0,0(sp)
d00097fc:       |  |  |  |  |     |  |  |         554c                  lw      a1,44(a0)
d00097fe:       |  |  |  |  |     |  |  |     /-- 00c5e663              bltu    a1,a2,d000980a <boot_data_active_page_find+0x2ce>
d0009802:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009804:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009806:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009808:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:393
      *page_info = (active_page_info_t){
d000980a:       |  |  |  |  |     |  |  |     \-> 014b2023              sw      s4,0(s6)
d000980e:       |  |  |  |  |     |  |  |         013b2223              sw      s3,4(s6)
d0009812:       |  |  |  |  |     |  |  |         01bb2423              sw      s11,8(s6)
d0009816:       |  |  |  |  |     |  |  |         00db2623              sw      a3,12(s6)
d000981a:       |  |  |  |  |     |  |  |         018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:400
      *boot_data = buf;
d000981e:       |  |  |  |  |     |  |  |         080c                  addi    a1,sp,16
d0009820:       |  |  |  |  |     |  |  |         04000613              li      a2,64
d0009824:       |  |  |  |  |     |  \--|-------- b755                  j       d00097c8 <boot_data_active_page_find+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:402
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009826:       |  |  |  |  |     |     \-------> 00cb2503              lw      a0,12(s6)
d000982a:       |  |  |  |  |     |               73900413              li      s0,1849
d000982e:       |  |  |  |  |     |           /-- 00850663              beq     a0,s0,d000983a <boot_data_active_page_find+0x2fe>
d0009832:       |  |  |  |  |     |           |   0000                  unimp
d0009834:       |  |  |  |  |     |           |   0000                  unimp
d0009836:       |  |  |  |  |     |           |   0000                  unimp
d0009838:       |  |  |  |  |     |           |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:405
      HARDENED_CHECK_LT(buf.counter, boot_data->counter);
d000983a:       |  |  |  |  |     |           \-> 5572                  lw      a0,60(sp)
d000983c:       |  |  |  |  |     |               4582                  lw      a1,0(sp)
d000983e:       |  |  |  |  |     |               55cc                  lw      a1,44(a1)
d0009840:       |  |  |  |  |     +-------------- 00b56663              bltu    a0,a1,d000984c <boot_data_active_page_find+0x310>
d0009844:       |  |  |  |  |     |               0000                  unimp
d0009846:       |  |  |  |  |     |               0000                  unimp
d0009848:       |  |  |  |  |     |               0000                  unimp
d000984a:       |  |  |  |  |     |               0000                  unimp
d000984c:       |  |  |  |  |     \-------------> 02000c13              li      s8,32
d0009850:       |  |  \--|--|-------------------> 44a5                  li      s1,9
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:436
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d0009852:       |  |     |  |                     c8a6                  sw      s1,80(sp)
d0009854:       |  |     |  |                     caa6                  sw      s1,84(sp)
d0009856:       |  |     |  |                     cca6                  sw      s1,88(sp)
d0009858:       |  |     |  |                     088c                  addi    a1,sp,80
d000985a:       |  |     |  |                     8552                  mv      a0,s4
d000985c:       |  |     |  |                     239010ef              jal     ra,d000b294 <flash_ctrl_info_perms_set>
d0009860:       |  |     |  |                     0fff7517              auipc   a0,0xfff7
d0009864:       |  |     |  |                     81450513              addi    a0,a0,-2028 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:441
  SEC_MMIO_WRITE_INCREMENT(2 * kFlashCtrlSecMmioInfoPermsSet);
d0009868:       |  |     |  |                     450c                  lw      a1,8(a0)
d000986a:       |  |     |  |                     0589                  addi    a1,a1,2
d000986c:       |  |     |  |                     c50c                  sw      a1,8(a0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000986e:       |  |     |  |                     8522                  mv      a0,s0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009870:       |  |     |  |              /----- 03a51f63              bne     a0,s10,d00098ae <boot_data_active_page_find+0x372>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009874:       |  |     |  |              |      0b85                  addi    s7,s7,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009876:       |  |     |  |              |  /-- 01a40663              beq     s0,s10,d0009882 <boot_data_active_page_find+0x346>
d000987a:       |  |     |  |              |  |   0000                  unimp
d000987c:       |  |     |  |              |  |   0000                  unimp
d000987e:       |  |     |  |              |  |   0000                  unimp
d0009880:       |  |     |  |              |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009882:       |  |     |  |              |  \-> 855e                  mv      a0,s7
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009884:       |  |     |  |              |      4589                  li      a1,2
d0009886:       |  \-----|--|--------------|----- d2b566e3              bltu    a0,a1,d00095b2 <boot_data_active_page_find+0x76>
d000988a:       +--------|--|--------------|----- a809                  j       d000989c <boot_data_active_page_find+0x360>
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:361
        HARDENED_CHECK_EQ(is_valid, kErrorOk);
d000988c:       |        \--|--------------|--/-X 01a50663              beq     a0,s10,d0009898 <boot_data_active_page_find+0x35c>
d0009890:       |           |              |  |   0000                  unimp
d0009892:       |           |              |  |   0000                  unimp
d0009894:       |           |              |  |   0000                  unimp
d0009896:       |           |              |  |   0000                  unimp
d0009898:       |           |              |  \-> 85aa                  mv      a1,a0
d000989a:       |           \--------------|----- bdc1                  j       d000976a <boot_data_active_page_find+0x22e>
d000989c:       \--------------------------|----> 4509                  li      a0,2
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:471
  HARDENED_CHECK_EQ(i, ARRAYSIZE(kPages));
d000989e:                                  |  /-- 00ab8663              beq     s7,a0,d00098aa <boot_data_active_page_find+0x36e>
d00098a2:                                  |  |   0000                  unimp
d00098a4:                                  |  |   0000                  unimp
d00098a6:                                  |  |   0000                  unimp
d00098a8:                                  |  |   0000                  unimp
d00098aa:                                  |  \-> 73900413              li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:474
}
d00098ae:                                  \----> 8522                  mv      a0,s0
d00098b0:                                         4dfe                  lw      s11,220(sp)
d00098b2:                                         5d0e                  lw      s10,224(sp)
d00098b4:                                         5c9e                  lw      s9,228(sp)
d00098b6:                                         5c2e                  lw      s8,232(sp)
d00098b8:                                         5bbe                  lw      s7,236(sp)
d00098ba:                                         5b4e                  lw      s6,240(sp)
d00098bc:                                         5ade                  lw      s5,244(sp)
d00098be:                                         5a6e                  lw      s4,248(sp)
d00098c0:                                         59fe                  lw      s3,252(sp)
d00098c2:                                         10012903              lw      s2,256(sp)
d00098c6:                                         10412483              lw      s1,260(sp)
d00098ca:                                         10812403              lw      s0,264(sp)
d00098ce:                                         10c12083              lw      ra,268(sp)
d00098d2:                                         6151                  addi    sp,sp,272
d00098d4:                                         8082                  ret

d00098d6 <boot_data_check>:
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:627
 * Checks whether the digest of a boot data entry is valid.
 *
 * @param boot_data A buffer that holds a boot data entry.
 * @return Whether the digest of the entry is valid.
 */
rom_error_t boot_data_check(const boot_data_t *boot_data) {
d00098d6:              7179                     addi    sp,sp,-48
d00098d8:              d606                     sw      ra,44(sp)
d00098da:              d422                     sw      s0,40(sp)
d00098dc:              d226                     sw      s1,36(sp)
d00098de:              d04a                     sw      s2,32(sp)
d00098e0:              892a                     mv      s2,a0
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d00098e2:              204030ef                 jal     ra,d000cae6 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d00098e6:              02090513                 addi    a0,s2,32
d00098ea:              02000593                 li      a1,32
d00098ee:              212030ef                 jal     ra,d000cb00 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d00098f2:              850a                     mv      a0,sp
d00098f4:              848a                     mv      s1,sp
d00098f6:              278030ef                 jal     ra,d000cb6e <hmac_sha256_final>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098fa:              4681                     li      a3,0
d00098fc:              03424737                 lui     a4,0x3424
d0009900:              40d70513                 addi    a0,a4,1037 # 342440d <_rom_ext_virtual_size+0x33a440d>
d0009904:              479d                     li      a5,7
d0009906:              4581                     li      a1,0
d0009908:              862a                     mv      a2,a0
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  rom_error_t error = kErrorBootDataInvalid;
  hmac_digest_t act_digest;
  boot_data_digest_compute(boot_data, &act_digest);

  size_t i = 0;
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d000990a:       /----- 02d7ea63                 bltu    a5,a3,d000993e <boot_data_check+0x68>
d000990e:       |      4581                     li      a1,0
d0009910:       |      00004697                 auipc   a3,0x4
d0009914:       |      b5868693                 addi    a3,a3,-1192 # d000d468 <kCheckShares>
d0009918:       |      40d70613                 addi    a2,a4,1037
d000991c:       |      4821                     li      a6,8
d000991e:       |      87ca                     mv      a5,s2
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:638
    error ^=
        boot_data->digest.digest[i] ^ act_digest.digest[i] ^ kCheckShares[i];
d0009920:       |  /-> 4380                     lw      s0,0(a5)
d0009922:       |  |   4098                     lw      a4,0(s1)
d0009924:       |  |   0006a883                 lw      a7,0(a3)
d0009928:       |  |   8e21                     xor     a2,a2,s0
d000992a:       |  |   8e39                     xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d000992c:       |  |   0585                     addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:637
    error ^=
d000992e:       |  |   01164633                 xor     a2,a2,a7
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009932:       |  |   872e                     mv      a4,a1
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009934:       |  |   0691                     addi    a3,a3,4
d0009936:       |  |   0791                     addi    a5,a5,4
d0009938:       |  |   0491                     addi    s1,s1,4
d000993a:       |  \-- ff0763e3                 bltu    a4,a6,d0009920 <boot_data_check+0x4a>
d000993e:       \----> 46a1                     li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:640
  }
  HARDENED_CHECK_EQ(i, kHmacDigestNumWords);
d0009940:          /-- 00d58663                 beq     a1,a3,d000994c <boot_data_check+0x76>
d0009944:          |   0000                     unimp
d0009946:          |   0000                     unimp
d0009948:          |   0000                     unimp
d000994a:          |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:641
  error ^= boot_data->identifier ^ kCheckShares[kHmacDigestNumWords];
d000994c:          \-> 02892583                 lw      a1,40(s2)
d0009950:              8db1                     xor     a1,a1,a2
d0009952:              381df637                 lui     a2,0x381df
d0009956:              e3a60613                 addi    a2,a2,-454 # 381dee3a <_epmp_stack_guard_na4+0x1d7e3a>
d000995a:              8db1                     xor     a1,a1,a2
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000995c:              86ae                     mv      a3,a1
d000995e:              73900613                 li      a2,1849
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:642
  if (launder32(error) == kErrorOk) {
d0009962:       /----- 00c69963                 bne     a3,a2,d0009974 <boot_data_check+0x9e>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:643
    HARDENED_CHECK_EQ(error, kErrorOk);
d0009966:       |  /-- 00c58663                 beq     a1,a2,d0009972 <boot_data_check+0x9c>
d000996a:       |  |   0000                     unimp
d000996c:       |  |   0000                     unimp
d000996e:       |  |   0000                     unimp
d0009970:       |  |   0000                     unimp
d0009972:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:648
    return error;
  }

  return kErrorBootDataInvalid;
}
d0009974:       \----> 5902                     lw      s2,32(sp)
d0009976:              5492                     lw      s1,36(sp)
d0009978:              5422                     lw      s0,40(sp)
d000997a:              50b2                     lw      ra,44(sp)
d000997c:              6145                     addi    sp,sp,48
d000997e:              8082                     ret

d0009980 <bootstrap_requested>:
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:335

  spi_device_flash_status_clear();
  return error;
}

hardened_bool_t bootstrap_requested(void) {
d0009980:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:337
  uint32_t res =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d0009982:              c606                     sw      ra,12(sp)
d0009984:              36400513                 li      a0,868
d0009988:              42e030ef                 jal     ra,d000cdb6 <otp_read32>
d000998c:              85aa                     mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000998e:              86aa                     mv      a3,a0
d0009990:              73900613                 li      a2,1849
d0009994:              1d400513                 li      a0,468
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:338
  if (launder32(res) != kHardenedBoolTrue) {
d0009998:       /----- 02c69c63                 bne     a3,a2,d00099d0 <bootstrap_requested+0x50>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:341
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d000999c:       |  /-- 00c58663                 beq     a1,a2,d00099a8 <bootstrap_requested+0x28>
d00099a0:       |  |   0000                     unimp
d00099a2:       |  |   0000                     unimp
d00099a4:       |  |   0000                     unimp
d00099a6:       |  |   0000                     unimp
d00099a8:       |  \-> c00406b7                 lui     a3,0xc0040
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
 * @param addr the address to read from.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t abs_mmio_read32(uint32_t addr) {
  return *((volatile uint32_t *)addr);
d00099ac:       |      4a94                     lw      a3,16(a3)
d00099ae:       |      01c00737                 lui     a4,0x1c00
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:347

  // A single read is sufficient since we expect strong pull-ups on the strap
  // pins.
  res ^= SW_STRAP_BOOTSTRAP;
  res ^=
      abs_mmio_read32(TOP_EARLGREY_GPIO_BASE_ADDR + GPIO_DATA_IN_REG_OFFSET) &
d00099b2:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:346
  res ^=
d00099b4:       |      8db5                     xor     a1,a1,a3
d00099b6:       |      8db9                     xor     a1,a1,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00099b8:       |      86ae                     mv      a3,a1
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:349
      SW_STRAP_MASK;
  if (launder32(res) != kHardenedBoolTrue) {
d00099ba:       +----- 00c69b63                 bne     a3,a2,d00099d0 <bootstrap_requested+0x50>
d00099be:       |      73900513                 li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:352
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d00099c2:       |  /-- 00a58663                 beq     a1,a0,d00099ce <bootstrap_requested+0x4e>
d00099c6:       |  |   0000                     unimp
d00099c8:       |  |   0000                     unimp
d00099ca:       |  |   0000                     unimp
d00099cc:       |  |   0000                     unimp
d00099ce:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:354
  return res;
}
d00099d0:       \----> 40b2                     lw      ra,12(sp)
d00099d2:              0141                     addi    sp,sp,16
d00099d4:              8082                     ret

d00099d6 <bootstrap>:
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:356

rom_error_t bootstrap(void) {
d00099d6:                                                  7149                 addi    sp,sp,-368
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:357
  hardened_bool_t requested = bootstrap_requested();
d00099d8:                                                  16112623             sw      ra,364(sp)
d00099dc:                                                  16812423             sw      s0,360(sp)
d00099e0:                                                  16912223             sw      s1,356(sp)
d00099e4:                                                  17212023             sw      s2,352(sp)
d00099e8:                                                  15312e23             sw      s3,348(sp)
d00099ec:                                                  15412c23             sw      s4,344(sp)
d00099f0:                                                  15512a23             sw      s5,340(sp)
d00099f4:                                                  15612823             sw      s6,336(sp)
d00099f8:                                                  15712623             sw      s7,332(sp)
d00099fc:                                                  15812423             sw      s8,328(sp)
d0009a00:                                                  15912223             sw      s9,324(sp)
d0009a04:                                                  15a12023             sw      s10,320(sp)
d0009a08:                                                  13b12e23             sw      s11,316(sp)
d0009a0c:                                                  3f95                 jal     d0009980 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009a0e:                                                  85aa                 mv      a1,a0
d0009a10:                                                  73900493             li      s1,1849
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:358
  if (launder32(requested) != kHardenedBoolTrue) {
d0009a14:       /----------------------------------------- 30959963             bne     a1,s1,d0009d26 <bootstrap+0x350>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:361
    return kErrorBootstrapNotRequested;
  }
  HARDENED_CHECK_EQ(requested, kHardenedBoolTrue);
d0009a18:       |                                      /-- 00950663             beq     a0,s1,d0009a24 <bootstrap+0x4e>
d0009a1c:       |                                      |   0000                 unimp
d0009a1e:       |                                      |   0000                 unimp
d0009a20:       |                                      |   0000                 unimp
d0009a22:       |                                      |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:363

  spi_device_init();
d0009a24:       |                                      \-> 265d                 jal     d0009dca <spi_device_init>
d0009a26:       |                                          d4576cb7             lui     s9,0xd4576
d0009a2a:       |                                          543c8d93             addi    s11,s9,1347 # d4576543 <_stack_end+0xf4556543>
d0009a2e:       |                                          03425537             lui     a0,0x3425
d0009a32:       |                                          30350d13             addi    s10,a0,771 # 3425303 <_rom_ext_virtual_size+0x33a5303>
d0009a36:       |                                          bdd8d537             lui     a0,0xbdd8d
d0009a3a:       |                                          a6050993             addi    s3,a0,-1440 # bdd8ca60 <_stack_end+0xddd6ca60>
d0009a3e:       |                                          09900a93             li      s5,153
d0009a42:       |                                          fff00537             lui     a0,0xfff00
d0009a46:       |                                          051d                 addi    a0,a0,7
d0009a48:       |                                          ce2a                 sw      a0,28(sp)
d0009a4a:       |                                          02425537             lui     a0,0x2425
d0009a4e:       |                                          30350513             addi    a0,a0,771 # 2425303 <_rom_ext_virtual_size+0x23a5303>
d0009a52:       |                                          cc2a                 sw      a0,24(sp)
d0009a54:       |                                          4919                 li      s2,6
d0009a56:       |                                          01425537             lui     a0,0x1425
d0009a5a:       |                                          30350513             addi    a0,a0,771 # 1425303 <_rom_ext_virtual_size+0x13a5303>
d0009a5e:       |                                          ca2a                 sw      a0,20(sp)
d0009a60:       |                                          af0eb537             lui     a0,0xaf0eb
d0009a64:       |                                          b8b50513             addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d0009a68:       |                                          c82a                 sw      a0,16(sp)
d0009a6a:       |                                          6505                 lui     a0,0x1
d0009a6c:       |                                          80050513             addi    a0,a0,-2048 # 800 <_epmp_reset_rx_size>
d0009a70:       |                                          c62a                 sw      a0,12(sp)
d0009a72:       |                                          0c700b93             li      s7,199
d0009a76:       |                                          f3c72537             lui     a0,0xf3c72
d0009a7a:       |                                          bac50b13             addi    s6,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
d0009a7e:       |                                          8032a537             lui     a0,0x8032a
d0009a82:       |                                          be950c13             addi    s8,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009a86:       |  /-------------------------------------> 856e                 mv      a0,s11
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:369

  // Bootstrap event loop.
  bootstrap_state_t state = kBootstrapStateErase;
  rom_error_t error = kErrorUnknown;
  while (true) {
    switch (launder32(state)) {
d0009a88:       |  |                             /-------- 07350163             beq     a0,s3,d0009aea <bootstrap+0x114>
d0009a8c:       |  |                    /--------|-------- 11650f63             beq     a0,s6,d0009baa <bootstrap+0x1d4>
d0009a90:       |  |                    |        |         543c8593             addi    a1,s9,1347
d0009a94:       |  |              /-----|--------|-------- 16b51a63             bne     a0,a1,d0009c08 <bootstrap+0x232>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:371
      case kBootstrapStateErase:
        HARDENED_CHECK_EQ(state, kBootstrapStateErase);
d0009a98:       |  |              |     |        |     /-- 00bd8663             beq     s11,a1,d0009aa4 <bootstrap+0xce>
d0009a9c:       |  |              |     |        |     |   0000                 unimp
d0009a9e:       |  |              |     |        |     |   0000                 unimp
d0009aa0:       |  |              |     |        |     |   0000                 unimp
d0009aa2:       |  |              |     |        |     |   0000                 unimp
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:225
  HARDENED_CHECK_EQ(*state, kBootstrapStateErase);
d0009aa4:       |  |              |     |        |  /--\-X 00bd8663             beq     s11,a1,d0009ab0 <bootstrap+0xda>
d0009aa8:       |  |              |     |        |  |      0000                 unimp
d0009aaa:       |  |              |     |        |  |      0000                 unimp
d0009aac:       |  |              |     |        |  |      0000                 unimp
d0009aae:       |  |              |     |        |  |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:228
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009ab0:       |  |              |     |        |  \----> 1008                 addi    a0,sp,32
d0009ab2:       |  |              |     |        |         2909                 jal     d0009ec4 <spi_device_cmd_get>
d0009ab4:       |  |              |  /--|--------|-------- 14951c63             bne     a0,s1,d0009c0c <bootstrap+0x236>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
  if (!bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009ab8:       |  |              |  |  |        |         2969                 jal     d0009f52 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
 */
OT_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d0009aba:       |  |              |  |  |        |         8909                 andi    a0,a0,2
d0009abc:       |  |              |  |  |        |         73900413             li      s0,1849
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
d0009ac0:       |  |     /--------|--|--|--------|-------- 24050363             beqz    a0,d0009d06 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:235
  switch (cmd.opcode) {
d0009ac4:       |  |     |        |  |  |        |         5502                 lw      a0,32(sp)
d0009ac6:       |  |     |        |  |  |        |     /-- 01750663             beq     a0,s7,d0009ad2 <bootstrap+0xfc>
d0009aca:       |  |     |        |  |  |        |     |   02000593             li      a1,32
d0009ace:       |  |     |  /-----|--|--|--------|-----|-- 22b51b63             bne     a0,a1,d0009d04 <bootstrap+0x32e>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:238
      error = bootstrap_chip_erase();
d0009ad2:       |  |     |  |     |  |  |        |     \-> 2c69                 jal     d0009d6c <bootstrap_chip_erase>
d0009ad4:       |  |     |  |     |  |  |        |         842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:239
      HARDENED_RETURN_IF_ERROR(error);
d0009ad6:       |  |     +--|-----|--|--|--------|-------- 22951863             bne     a0,s1,d0009d06 <bootstrap+0x330>
d0009ada:       |  |     |  |     |  |  |        |     /-- 00940663             beq     s0,s1,d0009ae6 <bootstrap+0x110>
d0009ade:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009ae0:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009ae2:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009ae4:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009ae6:       |  |     |  |     |  |  |        |     \-> 8dda                 mv      s11,s6
d0009ae8:       |  |     +--|-----|--|--|--------|-------- ac39                 j       d0009d06 <bootstrap+0x330>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:379
      case kBootstrapStateEraseVerify:
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
        error = bootstrap_handle_erase_verify(&state);
        break;
      case kBootstrapStateProgram:
        HARDENED_CHECK_EQ(state, kBootstrapStateProgram);
d0009aea:       |  |     |  |     |  |  |        \-----/-X 013d8663             beq     s11,s3,d0009af6 <bootstrap+0x120>
d0009aee:       |  |     |  |     |  |  |              |   0000                 unimp
d0009af0:       |  |     |  |     |  |  |              |   0000                 unimp
d0009af2:       |  |     |  |     |  |  |              |   0000                 unimp
d0009af4:       |  |     |  |     |  |  |              |   0000                 unimp
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:291
  HARDENED_CHECK_EQ(*state, kBootstrapStateProgram);
d0009af6:       |  |     |  |     |  |  |           /--\-X 013d8663             beq     s11,s3,d0009b02 <bootstrap+0x12c>
d0009afa:       |  |     |  |     |  |  |           |      0000                 unimp
d0009afc:       |  |     |  |     |  |  |           |      0000                 unimp
d0009afe:       |  |     |  |     |  |  |           |      0000                 unimp
d0009b00:       |  |     |  |     |  |  |           |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:294
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009b02:       |  |     |  |     |  |  |           \----> 1008                 addi    a0,sp,32
d0009b04:       |  |     |  |     |  |  |                  26c1                 jal     d0009ec4 <spi_device_cmd_get>
d0009b06:       |  |     |  |     |  |  |                  842a                 mv      s0,a0
d0009b08:       |  |     +--|-----|--|--|----------------- 1e951f63             bne     a0,s1,d0009d06 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009b0c:       |  |     |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009b0e:       |  |  /--|--|-----|--|--|----------------- 25550d63             beq     a0,s5,d0009d68 <bootstrap+0x392>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:297
      !bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009b12:       |  |  |  |  |     |  |  |                  2181                 jal     d0009f52 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d0009b14:       |  |  |  |  |     |  |  |                  8909                 andi    a0,a0,2
d0009b16:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009b1a:       |  |  |  +--|-----|--|--|----------------- 1e050663             beqz    a0,d0009d06 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009b1e:       |  |  |  |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009b20:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
d0009b24:       |  |  |  |  |     |  |  |                  09800593             li      a1,152
d0009b28:       |  |  |  |  |     |  |  |     /----------- 0ea5c463             blt     a1,a0,d0009c10 <bootstrap+0x23a>
d0009b2c:       |  |  |  |  |     |  |  |     |            4589                 li      a1,2
d0009b2e:       |  |  |  |  |     |  |  |  /--|----------- 0eb50663             beq     a0,a1,d0009c1a <bootstrap+0x244>
d0009b32:       |  |  |  |  |     |  |  |  |  |            02000593             li      a1,32
d0009b36:       |  |  |  |  |  /--|--|--|--|--|----------- 1ab51e63             bne     a0,a1,d0009cf2 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:307
      error = bootstrap_sector_erase(cmd.address);
d0009b3a:       |  |  |  |  |  |  |  |  |  |  |            5512                 lw      a0,36(sp)
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:103
  if (addr >= kMaxAddress) {
d0009b3c:       |  |  |  |  |  |  |  |  |  |  |            01455593             srli    a1,a0,0x14
d0009b40:       |  |  |  |  |  |  |  |  |  |  |            4452                 lw      s0,20(sp)
d0009b42:       |  |  |  |  |  +--|--|--|--|--|----------- 1a059863             bnez    a1,d0009cf2 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:106
  addr &= kPageAddrMask;
d0009b46:       |  |  |  |  |  |  |  |  |  |  |            75fd                 lui     a1,0xfffff
d0009b48:       |  |  |  |  |  |  |  |  |  |  |            00b57a33             and     s4,a0,a1
d0009b4c:       |  |  |  |  |  |  |  |  |  |  |            4519                 li      a0,6
d0009b4e:       |  |  |  |  |  |  |  |  |  |  |            4925                 li      s2,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:108
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009b50:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009b54:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009b58:       |  |  |  |  |  |  |  |  |  |  |            12a12c23             sw      a0,312(sp)
d0009b5c:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009b5e:       |  |  |  |  |  |  |  |  |  |  |            6f4010ef             jal     ra,d000b252 <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:113
  rom_error_t err_0 = flash_ctrl_data_erase(addr, kFlashCtrlEraseTypePage);
d0009b62:       |  |  |  |  |  |  |  |  |  |  |            8552                 mv      a0,s4
d0009b64:       |  |  |  |  |  |  |  |  |  |  |            4bc2                 lw      s7,16(sp)
d0009b66:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009b68:       |  |  |  |  |  |  |  |  |  |  |            5e6010ef             jal     ra,d000b14e <flash_ctrl_data_erase>
d0009b6c:       |  |  |  |  |  |  |  |  |  |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:115
      addr + FLASH_CTRL_PARAM_BYTES_PER_PAGE, kFlashCtrlEraseTypePage);
d0009b6e:       |  |  |  |  |  |  |  |  |  |  |            4532                 lw      a0,12(sp)
d0009b70:       |  |  |  |  |  |  |  |  |  |  |            00aa6533             or      a0,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:114
  rom_error_t err_1 = flash_ctrl_data_erase(
d0009b74:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009b76:       |  |  |  |  |  |  |  |  |  |  |            5d8010ef             jal     ra,d000b14e <flash_ctrl_data_erase>
d0009b7a:       |  |  |  |  |  |  |  |  |  |  |            8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:116
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009b7c:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009b80:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009b84:       |  |  |  |  |  |  |  |  |  |  |            13212c23             sw      s2,312(sp)
d0009b88:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009b8a:       |  |  |  |  |  |  |  |  |  |  |            6c8010ef             jal     ra,d000b252 <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b8e:       |  |  |  |  |  |  |  |  |  |  |            8522                 mv      a0,s0
d0009b90:       |  |  |  |  |  |  |  |  |  |  |     /----- 00951963             bne     a0,s1,d0009ba2 <bootstrap+0x1cc>
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:122
  HARDENED_RETURN_IF_ERROR(err_0);
d0009b94:       |  |  |  |  |  |  |  |  |  |  |     |  /-- 00940663             beq     s0,s1,d0009ba0 <bootstrap+0x1ca>
d0009b98:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009b9a:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009b9c:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009b9e:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009ba0:       |  |  |  |  |  |  |  |  |  |  |     |  \-> 8452                 mv      s0,s4
d0009ba2:       |  |  |  |  |  |  |  |  |  |  |     \----> 4919                 li      s2,6
d0009ba4:       |  |  |  |  |  |  |  |  |  |  |            0c700b93             li      s7,199
d0009ba8:       |  |  |  |  |  +--|--|--|--|--|----------- a2a9                 j       d0009cf2 <bootstrap+0x31c>
d0009baa:       |  |  |  |  |  |  |  |  \--|--|----------> f3c72537             lui     a0,0xf3c72
d0009bae:       |  |  |  |  |  |  |  |     |  |            bac50513             addi    a0,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:375
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
d0009bb2:       |  |  |  |  |  |  |  |     |  |        /-- 00ad8663             beq     s11,a0,d0009bbe <bootstrap+0x1e8>
d0009bb6:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bb8:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bba:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bbc:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:263
  HARDENED_CHECK_EQ(*state, kBootstrapStateEraseVerify);
d0009bbe:       |  |  |  |  |  |  |  |     |  |     /--\-X 00ad8663             beq     s11,a0,d0009bca <bootstrap+0x1f4>
d0009bc2:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009bc4:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009bc6:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009bc8:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:265
  rom_error_t err_0 = flash_ctrl_data_erase_verify(0, kFlashCtrlEraseTypeBank);
d0009bca:       |  |  |  |  |  |  |  |     |  |     \----> 4501                 li      a0,0
d0009bcc:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009bce:       |  |  |  |  |  |  |  |     |  |            5c4010ef             jal     ra,d000b192 <flash_ctrl_data_erase_verify>
d0009bd2:       |  |  |  |  |  |  |  |     |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:266
  rom_error_t err_1 = flash_ctrl_data_erase_verify(
d0009bd4:       |  |  |  |  |  |  |  |     |  |            00080537             lui     a0,0x80
d0009bd8:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009bda:       |  |  |  |  |  |  |  |     |  |            5b8010ef             jal     ra,d000b192 <flash_ctrl_data_erase_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bde:       |  |  |  |  |  |  |  |     |  |            85a2                 mv      a1,s0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:268
  HARDENED_RETURN_IF_ERROR(err_0);
d0009be0:       |  |  |  +--|--|--|--|-----|--|----------- 12959363             bne     a1,s1,d0009d06 <bootstrap+0x330>
d0009be4:       |  |  |  |  |  |  |  |     |  |        /-- 00940663             beq     s0,s1,d0009bf0 <bootstrap+0x21a>
d0009be8:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bea:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bec:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bee:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bf0:       |  |  |  |  |  |  |  |     |  |        \-> 85aa                 mv      a1,a0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:269
  HARDENED_RETURN_IF_ERROR(err_1);
d0009bf2:       |  |  |  |  |  |  |  +-----|--|----------- 00959d63             bne     a1,s1,d0009c0c <bootstrap+0x236>
d0009bf6:       |  |  |  |  |  |  |  |     |  |        /-- 00950663             beq     a0,s1,d0009c02 <bootstrap+0x22c>
d0009bfa:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bfc:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009bfe:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009c00:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:272
  spi_device_flash_status_clear();
d0009c02:       |  |  |  |  |  |  |  |     |  |        \-> 2699                 jal     d0009f48 <spi_device_flash_status_clear>
d0009c04:       |  |  |  |  |  |  |  |     |  |            8dce                 mv      s11,s3
d0009c06:       |  |  |  +--|--|--|--|-----|--|----------- a201                 j       d0009d06 <bootstrap+0x330>
d0009c08:       |  |  |  |  |  |  \--|-----|--|----------> 846a                 mv      s0,s10
d0009c0a:       |  |  |  +--|--|-----|-----|--|----------- a8f5                 j       d0009d06 <bootstrap+0x330>
d0009c0c:       |  |  |  |  |  |     \-----|--|----------> 842a                 mv      s0,a0
d0009c0e:       |  |  |  +--|--|-----------|--|----------- a8e5                 j       d0009d06 <bootstrap+0x330>
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009c10:       |  |  |  |  |  |           |  \--/-------X 05751063             bne     a0,s7,d0009c50 <bootstrap+0x27a>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:304
      error = bootstrap_chip_erase();
d0009c14:       |  |  |  |  |  |           |     |         2aa1                 jal     d0009d6c <bootstrap_chip_erase>
d0009c16:       |  |  |  |  |  |           |     |         842a                 mv      s0,a0
d0009c18:       |  |  |  |  |  +-----------|-----|-------- a8e9                 j       d0009cf2 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:310
      error = bootstrap_page_program(cmd.address, cmd.payload_byte_count,
d0009c1a:       |  |  |  |  |  |           \-----|-------> 5a12                 lw      s4,36(sp)
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:163
  if (addr & kFlashWordMask || addr >= kMaxAddress) {
d0009c1c:       |  |  |  |  |  |                 |         4572                 lw      a0,28(sp)
d0009c1e:       |  |  |  |  |  |                 |         00aa7533             and     a0,s4,a0
d0009c22:       |  |  |  |  |  |                 |         4462                 lw      s0,24(sp)
d0009c24:       |  |  |  |  |  +-----------------|-------- e579                 bnez    a0,d0009cf2 <bootstrap+0x31c>
d0009c26:       |  |  |  |  |  |                 |         5522                 lw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:168
  size_t flash_word_misalignment = byte_count & kFlashWordMask;
d0009c28:       |  |  |  |  |  |                 |         00757593             andi    a1,a0,7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:169
  if (flash_word_misalignment > 0) {
d0009c2c:       |  |  |  |  |  |                 |  /----- c58d                 beqz    a1,d0009c56 <bootstrap+0x280>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009c2e:       |  |  |  |  |  |                 |  |      ff85e613             ori     a2,a1,-8
d0009c32:       |  |  |  |  |  |                 |  |      0ff00713             li      a4,255
d0009c36:       |  |  |  |  |  |                 |  |      02c10b93             addi    s7,sp,44
d0009c3a:       |  |  |  |  |  |                 |  |  /-> 86b2                 mv      a3,a2
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009c3c:       |  |  |  |  |  |                 |  |  |   00150593             addi    a1,a0,1 # 80001 <_rom_ext_virtual_size+0x1>
d0009c40:       |  |  |  |  |  |                 |  |  |   955e                 add     a0,a0,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009c42:       |  |  |  |  |  |                 |  |  |   0605                 addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009c44:       |  |  |  |  |  |                 |  |  |   00e50023             sb      a4,0(a0)
d0009c48:       |  |  |  |  |  |                 |  |  |   852e                 mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009c4a:       |  |  |  |  |  |                 |  |  \-- fed678e3             bgeu    a2,a3,d0009c3a <bootstrap+0x264>
d0009c4e:       |  |  |  |  |  |                 |  |  /-- a039                 j       d0009c5c <bootstrap+0x286>
d0009c50:       |  |  |  |  |  +-----------------\--|--|-X 0b551163             bne     a0,s5,d0009cf2 <bootstrap+0x31c>
d0009c54:       |  |  +--|--|--|--------------------|--|-- aa11                 j       d0009d68 <bootstrap+0x392>
d0009c56:       |  |  |  |  |  |                    \--|-> 85aa                 mv      a1,a0
d0009c58:       |  |  |  |  |  |                       |   02c10b93             addi    s7,sp,44
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:176
  size_t rem_word_count = byte_count / sizeof(uint32_t);
d0009c5c:       |  |  |  |  |  |                       \-> 0025da93             srli    s5,a1,0x2
d0009c60:       |  |  |  |  |  |                           4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:178
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009c62:       |  |  |  |  |  |                           12a12823             sw      a0,304(sp)
d0009c66:       |  |  |  |  |  |                           13212a23             sw      s2,308(sp)
d0009c6a:       |  |  |  |  |  |                           12a12c23             sw      a0,312(sp)
d0009c6e:       |  |  |  |  |  |                           1a08                 addi    a0,sp,304
d0009c70:       |  |  |  |  |  |                           5e2010ef             jal     ra,d000b252 <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:186
  size_t prog_page_misalignment = addr & kFlashProgPageMask;
d0009c74:       |  |  |  |  |  |                           0ffa7513             andi    a0,s4,255
d0009c78:       |  |  |  |  |  |                           73900413             li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:187
  if (prog_page_misalignment > 0) {
d0009c7c:       |  |  |  |  |  |        /----------------- cd59                 beqz    a0,d0009d1a <bootstrap+0x344>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:189
        (kFlashProgPageSize - prog_page_misalignment) / sizeof(uint32_t);
d0009c7e:       |  |  |  |  |  |        |                  10000593             li      a1,256
d0009c82:       |  |  |  |  |  |        |                  40a58533             sub     a0,a1,a0
d0009c86:       |  |  |  |  |  |        |                  8109                 srli    a0,a0,0x2
d0009c88:       |  |  |  |  |  |        |                  8bd6                 mv      s7,s5
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:190
    if (word_count > rem_word_count) {
d0009c8a:       |  |  |  |  |  |        |              /-- 00aae363             bltu    s5,a0,d0009c90 <bootstrap+0x2ba>
d0009c8e:       |  |  |  |  |  |        |              |   8baa                 mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:193
    err_0 = flash_ctrl_data_write(addr, word_count, data);
d0009c90:       |  |  |  |  |  |        |              \-> 8552                 mv      a0,s4
d0009c92:       |  |  |  |  |  |        |                  85de                 mv      a1,s7
d0009c94:       |  |  |  |  |  |        |                  1070                 addi    a2,sp,44
d0009c96:       |  |  |  |  |  |        |                  3fa010ef             jal     ra,d000b090 <flash_ctrl_data_write>
d0009c9a:       |  |  |  |  |  |        |                  892a                 mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:194
    rem_word_count -= word_count;
d0009c9c:       |  |  |  |  |  |        |                  417a8ab3             sub     s5,s5,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:195
    data += word_count * sizeof(uint32_t);
d0009ca0:       |  |  |  |  |  |        |                  002b9513             slli    a0,s7,0x2
d0009ca4:       |  |  |  |  |  |        |                  100c                 addi    a1,sp,32
d0009ca6:       |  |  |  |  |  |        |                  952e                 add     a0,a0,a1
d0009ca8:       |  |  |  |  |  |        |                  00c50613             addi    a2,a0,12
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:198
    addr &= ~kFlashProgPageMask;
d0009cac:       |  |  |  |  |  |        |                  f00a7a13             andi    s4,s4,-256
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009cb0:       |  |  |  |  |  |        |  /-------------- 000a8763             beqz    s5,d0009cbe <bootstrap+0x2e8>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:202
    err_1 = flash_ctrl_data_write(addr, rem_word_count, data);
d0009cb4:       |  |  |  |  |  |        |  |  /----------> 8552                 mv      a0,s4
d0009cb6:       |  |  |  |  |  |        |  |  |            85d6                 mv      a1,s5
d0009cb8:       |  |  |  |  |  |        |  |  |            3d8010ef             jal     ra,d000b090 <flash_ctrl_data_write>
d0009cbc:       |  |  |  |  |  |        |  |  |            842a                 mv      s0,a0
d0009cbe:       |  |  |  |  |  |        |  >--|----------> 4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:204
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009cc0:       |  |  |  |  |  |        |  |  |            12a12823             sw      a0,304(sp)
d0009cc4:       |  |  |  |  |  |        |  |  |            12a12a23             sw      a0,308(sp)
d0009cc8:       |  |  |  |  |  |        |  |  |            12a12c23             sw      a0,312(sp)
d0009ccc:       |  |  |  |  |  |        |  |  |            1a08                 addi    a0,sp,304
d0009cce:       |  |  |  |  |  |        |  |  |            584010ef             jal     ra,d000b252 <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009cd2:       |  |  |  |  |  |        |  |  |            854a                 mv      a0,s2
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:210
  HARDENED_RETURN_IF_ERROR(err_0);
d0009cd4:       |  |  |  |  |  |        |  |  |  /-------- 00951963             bne     a0,s1,d0009ce6 <bootstrap+0x310>
d0009cd8:       |  |  |  |  |  |        |  |  |  |  /----- 00990663             beq     s2,s1,d0009ce4 <bootstrap+0x30e>
d0009cdc:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009cde:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009ce0:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009ce2:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009ce4:       |  |  |  |  |  |        |  |  |  |  \--/-X a011                 j       d0009ce8 <bootstrap+0x312>
d0009ce6:       |  |  |  |  |  |        |  |  |  \-----|-> 844a                 mv      s0,s2
d0009ce8:       |  |  |  |  |  |        |  |  |        \-> 09900a93             li      s5,153
d0009cec:       |  |  |  |  |  |        |  |  |            0c700b93             li      s7,199
d0009cf0:       |  |  |  |  |  |        |  |  |            4919                 li      s2,6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009cf2:       |  |  |  |  |  \--------|--|--|----------> 8522                 mv      a0,s0
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:329
  HARDENED_RETURN_IF_ERROR(error);
d0009cf4:       |  |  |  +--|-----------|--|--|----------- 00951963             bne     a0,s1,d0009d06 <bootstrap+0x330>
d0009cf8:       |  |  |  |  +-----------|--|--|----------- 00940663             beq     s0,s1,d0009d04 <bootstrap+0x32e>
d0009cfc:       |  |  |  |  |           |  |  |            0000                 unimp
d0009cfe:       |  |  |  |  |           |  |  |            0000                 unimp
d0009d00:       |  |  |  |  |           |  |  |            0000                 unimp
d0009d02:       |  |  |  |  |           |  |  |            0000                 unimp
d0009d04:       |  |  |  |  \-----------|--|--|----------> 2491                 jal     d0009f48 <spi_device_flash_status_clear>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009d06:       |  |  |  \--------------|--|--|----------> 8522                 mv      a0,s0
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:385
        error = bootstrap_handle_program(&state);
        break;
      default:
        error = kErrorBootstrapInvalidState;
    }
    HARDENED_RETURN_IF_ERROR(error);
d0009d08:       |  |  |                 |  |  |     /----- 02951363             bne     a0,s1,d0009d2e <bootstrap+0x358>
d0009d0c:       |  |  |                 |  |  |     |  /-- 00940663             beq     s0,s1,d0009d18 <bootstrap+0x342>
d0009d10:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009d12:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009d14:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009d16:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009d18:       |  \--|-----------------|--|--|-----|--\-X b3bd                 j       d0009a86 <bootstrap+0xb0>
d0009d1a:       |     |                 \--|--|-----|----> 73900913             li      s2,1849
d0009d1e:       |     |                    |  |     |      865e                 mv      a2,s7
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009d20:       |     |                    |  \-----|----- f80a9ae3             bnez    s5,d0009cb4 <bootstrap+0x2de>
d0009d24:       |     |                    \--------|----- bf69                 j       d0009cbe <bootstrap+0x2e8>
d0009d26:       \-----|-----------------------------|----> 04425537             lui     a0,0x4425
d0009d2a:             |                             |      30d50413             addi    s0,a0,781 # 442530d <_rom_ext_virtual_size+0x43a530d>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:388
  }
  HARDENED_UNREACHABLE();
}
d0009d2e:             |                             \----> 8522                 mv      a0,s0
d0009d30:             |                                    13c12d83             lw      s11,316(sp)
d0009d34:             |                                    14012d03             lw      s10,320(sp)
d0009d38:             |                                    14412c83             lw      s9,324(sp)
d0009d3c:             |                                    14812c03             lw      s8,328(sp)
d0009d40:             |                                    14c12b83             lw      s7,332(sp)
d0009d44:             |                                    15012b03             lw      s6,336(sp)
d0009d48:             |                                    15412a83             lw      s5,340(sp)
d0009d4c:             |                                    15812a03             lw      s4,344(sp)
d0009d50:             |                                    15c12983             lw      s3,348(sp)
d0009d54:             |                                    16012903             lw      s2,352(sp)
d0009d58:             |                                    16412483             lw      s1,356(sp)
d0009d5c:             |                                    16812403             lw      s0,360(sp)
d0009d60:             |                                    16c12083             lw      ra,364(sp)
d0009d64:             |                                    6175                 addi    sp,sp,368
d0009d66:             |                                    8082                 ret
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:314
      rstmgr_reset();
d0009d68:             \----------------------------------> 31f010ef             jal     ra,d000b886 <rstmgr_reset>

d0009d6c <bootstrap_chip_erase>:
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:72
static rom_error_t bootstrap_chip_erase(void) {
d0009d6c:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:73
  flash_ctrl_bank_erase_perms_set(kHardenedBoolTrue);
d0009d6e:              c606                     sw      ra,12(sp)
d0009d70:              c422                     sw      s0,8(sp)
d0009d72:              c226                     sw      s1,4(sp)
d0009d74:              c04a                     sw      s2,0(sp)
d0009d76:              73900513                 li      a0,1849
d0009d7a:              73900913                 li      s2,1849
d0009d7e:              0c1010ef                 jal     ra,d000b63e <flash_ctrl_bank_erase_perms_set>
d0009d82:              8032a537                 lui     a0,0x8032a
d0009d86:              be950493                 addi    s1,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:74
  rom_error_t err_0 = flash_ctrl_data_erase(0, kFlashCtrlEraseTypeBank);
d0009d8a:              4501                     li      a0,0
d0009d8c:              85a6                     mv      a1,s1
d0009d8e:              3c0010ef                 jal     ra,d000b14e <flash_ctrl_data_erase>
d0009d92:              842a                     mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:75
  rom_error_t err_1 = flash_ctrl_data_erase(FLASH_CTRL_PARAM_BYTES_PER_BANK,
d0009d94:              00080537                 lui     a0,0x80
d0009d98:              85a6                     mv      a1,s1
d0009d9a:              3b4010ef                 jal     ra,d000b14e <flash_ctrl_data_erase>
d0009d9e:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:77
  flash_ctrl_bank_erase_perms_set(kHardenedBoolFalse);
d0009da0:              1d400513                 li      a0,468
d0009da4:              09b010ef                 jal     ra,d000b63e <flash_ctrl_bank_erase_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009da8:              8522                     mv      a0,s0
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:79
  HARDENED_RETURN_IF_ERROR(err_0);
d0009daa:       /----- 01251963                 bne     a0,s2,d0009dbc <bootstrap_chip_erase+0x50>
d0009dae:       |  /-- 01240663                 beq     s0,s2,d0009dba <bootstrap_chip_erase+0x4e>
d0009db2:       |  |   0000                     unimp
d0009db4:       |  |   0000                     unimp
d0009db6:       |  |   0000                     unimp
d0009db8:       |  |   0000                     unimp
d0009dba:       |  \-> 8426                     mv      s0,s1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:81
}
d0009dbc:       \----> 8522                     mv      a0,s0
d0009dbe:              4902                     lw      s2,0(sp)
d0009dc0:              4492                     lw      s1,4(sp)
d0009dc2:              4422                     lw      s0,8(sp)
d0009dc4:              40b2                     lw      ra,12(sp)
d0009dc6:              0141                     addi    sp,sp,16
d0009dc8:              8082                     ret

d0009dca <spi_device_init>:
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:499
                             cmd_info.handled_in_sw);
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_0_VALID_0_BIT, true);
  abs_mmio_write32(kBase + cmd_info.reg_offset, reg);
}

void spi_device_init(void) {
d0009dca:           1141                        addi    sp,sp,-16
d0009dcc:           c606                        sw      ra,12(sp)
d0009dce:           c422                        sw      s0,8(sp)
d0009dd0:           c226                        sw      s1,4(sp)
d0009dd2:           c0052537            lui     a0,0xc0052
d0009dd6:           c0050413            addi    s0,a0,-1024 # c0051c00 <_stack_end+0xe0031c00>
d0009dda:           6521                        lui     a0,0x8
d0009ddc:           f0050513            addi    a0,a0,-256 # 7f00 <_stack_size+0x3f00>
d0009de0:           c00504b7            lui     s1,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d0009de4:           c8c8                        sw      a0,20(s1)
d0009de6:           6505                        lui     a0,0x1
d0009de8:           c7f50513            addi    a0,a0,-897 # c7f <_epmp_reset_rx_size+0x47f>
d0009dec:           c0a8                        sw      a0,64(s1)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:522
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_CC_REG_OFFSET, reg);
  // Note: The code below assumes that chip revision and generation numbers
  // from the life cycle controller (16-bits each) will fit in the revision and
  // generation fields of the device ID (3 and 4 bits, respectively).
  lifecycle_hw_rev_t hw_rev;
  lifecycle_hw_rev_get(&hw_rev);
d0009dee:           850a                        mv      a0,sp
d0009df0:           7a1020ef            jal     ra,d000cd90 <lifecycle_hw_rev_get>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:524
  reg = bitfield_field32_write(0, SPI_DEVICE_DEV_ID_CHIP_REV_FIELD,
                               hw_rev.chip_rev);
d0009df4:           00215583            lhu     a1,2(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:527
  reg = bitfield_bit32_write(reg, SPI_DEVICE_DEV_ID_ROM_BOOTSTRAP_BIT, true);
  reg = bitfield_field32_write(reg, SPI_DEVICE_DEV_ID_CHIP_GEN_FIELD,
                               hw_rev.chip_gen);
d0009df8:           00011603            lh      a2,0(sp)
d0009dfc:           4501                        li      a0,0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d0009dfe:           899d                        andi    a1,a1,7
d0009e00:           0612                        slli    a2,a2,0x4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d0009e02:           0f067613            andi    a2,a2,240
d0009e06:           8dd1                        or      a1,a1,a2
d0009e08:           00ef1637            lui     a2,0xef1
d0009e0c:           40860613            addi    a2,a2,1032 # ef1408 <_rom_ext_virtual_size+0xe71408>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d0009e10:           8dd1                        or      a1,a1,a2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e12:           c0ec                        sw      a1,68(s1)
d0009e14:           00003597            auipc   a1,0x3
d0009e18:           67858593            addi    a1,a1,1656 # d000d48c <kSpiDeviceSfdpTable>
d0009e1c:           06c00613            li      a2,108
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d0009e20:       /-> 00b506b3            add     a3,a0,a1
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d0009e24:       |   4294                        lw      a3,0(a3)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d0009e26:       |   00850733            add     a4,a0,s0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_ID_REG_OFFSET, reg);

  // Write SFDP table to the reserved region in spi_device buffer.
  uint32_t dest = kSfdpAreaStartAddr;
  const char *table = (const char *)&kSpiDeviceSfdpTable;
  for (size_t i = 0; i < kSpiDeviceSfdpTableNumWords; ++i) {
d0009e2a:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e2c:       |   c314                        sw      a3,0(a4)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
d0009e2e:       \-- fec519e3            bne     a0,a2,d0009e20 <spi_device_init+0x56>
d0009e32:           c0052637            lui     a2,0xc0052
d0009e36:           c6860593            addi    a1,a2,-920 # c0051c68 <_stack_end+0xe0031c68>
d0009e3a:           557d                        li      a0,-1
d0009e3c:           cfc60613            addi    a2,a2,-772
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e40:       /-> 00458693            addi    a3,a1,4
d0009e44:       |   c1c8                        sw      a0,4(a1)
d0009e46:       |   85b6                        mv      a1,a3
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:543
    abs_mmio_write32(dest, read_32(table));
    dest += sizeof(uint32_t);
    table += sizeof(uint32_t);
  }
  // Fill the remaining space with `0xff`s.
  for (; dest < kSfdpAreaEndAddr; dest += sizeof(uint32_t)) {
d0009e48:       \-- fec6ece3            bltu    a3,a2,d0009e40 <spi_device_init+0x76>
d0009e4c:           5571                        li      a0,-4
d0009e4e:           0fc00593            li      a1,252
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e52:       /-> 00a40633            add     a2,s0,a0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
    abs_mmio_write32(dest, UINT32_MAX);
  }

  // Reset the payload buffer to prevent access faults when reading beyond
  // current payload depth (see #11782).
  for (size_t i = 0; i < kSpiDevicePayloadAreaNumBytes; i += sizeof(uint32_t)) {
d0009e56:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e58:       |   10062223            sw      zero,260(a2)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
d0009e5c:       \-- feb56be3            bltu    a0,a1,d0009e52 <spi_device_init+0x88>
d0009e60:           c0050537            lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d0009e64:           02052e23            sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
d0009e68:           800005b7            lui     a1,0x80000
d0009e6c:           00558613            addi    a2,a1,5 # 80000005 <_stack_end+0x9ffe0005>
d0009e70:           08c52823            sw      a2,144(a0)
d0009e74:           09f58613            addi    a2,a1,159
d0009e78:           08c52e23            sw      a2,156(a0)
d0009e7c:           8000f637            lui     a2,0x8000f
d0009e80:           25a60613            addi    a2,a2,602 # 8000f25a <_stack_end+0x9ffef25a>
d0009e84:           0ac52023            sw      a2,160(a0)
d0009e88:           83000637            lui     a2,0x83000
d0009e8c:           0c760693            addi    a3,a2,199 # 830000c7 <_stack_end+0xa2fe00c7>
d0009e90:           0ad52e23            sw      a3,188(a0)
d0009e94:           22060693            addi    a3,a2,544
d0009e98:           0cd52023            sw      a3,192(a0)
d0009e9c:           20260693            addi    a3,a2,514
d0009ea0:           0cd52223            sw      a3,196(a0)
d0009ea4:           09960613            addi    a2,a2,153
d0009ea8:           0cc52423            sw      a2,200(a0)
d0009eac:           00658613            addi    a2,a1,6
d0009eb0:           0ec52c23            sw      a2,248(a0)
d0009eb4:           0591                        addi    a1,a1,4
d0009eb6:           0eb52e23            sw      a1,252(a0)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:622
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_WREN_VALID_BIT, true);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WREN_REG_OFFSET, reg);
  reg = bitfield_field32_write(reg, SPI_DEVICE_CMD_INFO_WRDI_OPCODE_FIELD,
                               kSpiDeviceOpcodeWriteDisable);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WRDI_REG_OFFSET, reg);
}
d0009eba:           4492                        lw      s1,4(sp)
d0009ebc:           4422                        lw      s0,8(sp)
d0009ebe:           40b2                        lw      ra,12(sp)
d0009ec0:           0141                        addi    sp,sp,16
d0009ec2:           8082                        ret

d0009ec4 <spi_device_cmd_get>:
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:624

rom_error_t spi_device_cmd_get(spi_device_cmd_t *cmd) {
d0009ec4:                 c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d0009ec8:             /-> 4190                  lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d0009eca:             |   04067693              andi    a3,a2,64
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:627
  uint32_t reg = 0;
  bool cmd_pending = false;
  while (!cmd_pending) {
d0009ece:             \-- deed                  beqz    a3,d0009ec8 <spi_device_cmd_get+0x4>
d0009ed0:                 10067693              andi    a3,a2,256
d0009ed4:                 c00505b7              lui     a1,0xc0050
d0009ed8:                 567d                  li      a2,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d0009eda:                 c190                  sw      a2,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:635
    reg = abs_mmio_read32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET);
    cmd_pending = bitfield_bit32_read(
        reg, SPI_DEVICE_INTR_COMMON_UPLOAD_CMDFIFO_NOT_EMPTY_BIT);
  }
  abs_mmio_write32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET, UINT32_MAX);
  if (bitfield_bit32_read(reg,
d0009edc:       /-------- e2a5                  bnez    a3,d0009f3c <spi_device_cmd_get+0x78>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d0009ede:       |         4db4                  lw      a3,88(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:640
                          SPI_DEVICE_INTR_COMMON_UPLOAD_PAYLOAD_OVERFLOW_BIT)) {
    return kErrorSpiDevicePayloadOverflow;
  }

  cmd->opcode = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_CMDFIFO_REG_OFFSET);
d0009ee0:       |         c114                  sw      a3,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:641
  cmd->address = kSpiDeviceNoAddress;
d0009ee2:       |         c150                  sw      a2,4(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d0009ee4:       |         49ac                  lw      a1,80(a1)
d0009ee6:       |         6621                  lui     a2,0x8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d0009ee8:       |         8df1                  and     a1,a1,a2
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:643
  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS_REG_OFFSET);
  if (bitfield_bit32_read(reg,
d0009eea:       |     /-- c589                  beqz    a1,d0009ef4 <spi_device_cmd_get+0x30>
d0009eec:       |     |   c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d0009ef0:       |     |   4dec                  lw      a1,92(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:645
                          SPI_DEVICE_UPLOAD_STATUS_ADDRFIFO_NOTEMPTY_BIT)) {
    cmd->address =
d0009ef2:       |     |   c14c                  sw      a1,4(a0)
d0009ef4:       |     \-> c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d0009ef8:       |         49ec                  lw      a1,84(a1)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d0009efa:       |         1ff5f593              andi    a1,a1,511
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:650
        abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_ADDRFIFO_REG_OFFSET);
  }

  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS2_REG_OFFSET);
  cmd->payload_byte_count =
d0009efe:       |         c50c                  sw      a1,8(a0)
d0009f00:       |         10000613              li      a2,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:653
      bitfield_field32_read(reg, SPI_DEVICE_UPLOAD_STATUS2_PAYLOAD_DEPTH_FIELD);
  // `payload_byte_count` can be at most `kSpiDevicePayloadAreaNumBytes`.
  HARDENED_CHECK_LE(cmd->payload_byte_count, kSpiDevicePayloadAreaNumBytes);
d0009f04:       |     /-- 00b67663              bgeu    a2,a1,d0009f10 <spi_device_cmd_get+0x4c>
d0009f08:       |     |   0000                  unimp
d0009f0a:       |     |   0000                  unimp
d0009f0c:       |     |   0000                  unimp
d0009f0e:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  uint32_t src =
      kBase + SPI_DEVICE_BUFFER_REG_OFFSET + kSpiDevicePayloadAreaOffset;
  char *dest = (char *)&cmd->payload;
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d0009f10:       |     \-> 4510                  lw      a2,8(a0)
d0009f12:       |         73900813              li      a6,1849
d0009f16:       |  /----- c61d                  beqz    a2,d0009f44 <spi_device_cmd_get+0x80>
d0009f18:       |  |      4601                  li      a2,0
d0009f1a:       |  |      00c50693              addi    a3,a0,12
d0009f1e:       |  |      c0052737              lui     a4,0xc0052
d0009f22:       |  |      d0070713              addi    a4,a4,-768 # c0051d00 <_stack_end+0xe0031d00>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:658
    write_32(abs_mmio_read32(src + i), dest + i);
d0009f26:       |  |  /-> 00e607b3              add     a5,a2,a4
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d0009f2a:       |  |  |   439c                  lw      a5,0(a5)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
 */
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d0009f2c:       |  |  |   00c685b3              add     a1,a3,a2
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d0009f30:       |  |  |   c19c                  sw      a5,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d0009f32:       |  |  |   450c                  lw      a1,8(a0)
d0009f34:       |  |  |   0611                  addi    a2,a2,4
d0009f36:       |  |  \-- feb668e3              bltu    a2,a1,d0009f26 <spi_device_cmd_get+0x62>
d0009f3a:       |  +----- a029                  j       d0009f44 <spi_device_cmd_get+0x80>
d0009f3c:       \--|----> 01535537              lui     a0,0x1535
d0009f40:          |      00d50813              addi    a6,a0,13 # 153500d <_rom_ext_virtual_size+0x14b500d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:662
  }

  return kErrorOk;
}
d0009f44:          \----> 8542                  mv      a0,a6
d0009f46:                 8082                  ret

d0009f48 <spi_device_flash_status_clear>:
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:664

void spi_device_flash_status_clear(void) {
d0009f48:       c0050537                lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d0009f4c:       02052e23                sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:666
  abs_mmio_write32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET, 0);
}
d0009f50:       8082                    ret

d0009f52 <spi_device_flash_status_get>:
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:668

uint32_t spi_device_flash_status_get(void) {
d0009f52:       c0050537                lui     a0,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d0009f56:       5d48                    lw      a0,60(a0)
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:669
  return abs_mmio_read32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET);
d0009f58:       8082                    ret

d0009f5a <sigverify_rsa_key_get>:
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:183
      HARDENED_UNREACHABLE();
  }
}

rom_error_t sigverify_rsa_key_get(uint32_t key_id, lifecycle_state_t lc_state,
                                  const sigverify_rsa_key_t **key) {
d0009f5a:                    7179                       addi    sp,sp,-48
d0009f5c:                    d606                       sw      ra,44(sp)
d0009f5e:                    d422                       sw      s0,40(sp)
d0009f60:                    d226                       sw      s1,36(sp)
d0009f62:                    d04a                       sw      s2,32(sp)
d0009f64:                    ce4e                       sw      s3,28(sp)
d0009f66:                    cc52                       sw      s4,24(sp)
d0009f68:                    ca56                       sw      s5,20(sp)
d0009f6a:                    c85a                       sw      s6,16(sp)
d0009f6c:                    c65e                       sw      s7,12(sp)
d0009f6e:                    c462                       sw      s8,8(sp)
d0009f70:                    c266                       sw      s9,4(sp)
d0009f72:                    c06a                       sw      s10,0(sp)
d0009f74:                    8932                       mv      s2,a2
d0009f76:                    89ae                       mv      s3,a1
d0009f78:                    8aaa                       mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t cand_key_index = UINT32_MAX;
  // Random start index that is less than `kSigverifyRsaKeysCnt`.
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d0009f7a:                    153020ef           jal     ra,d000c8cc <rnd_uint32>
d0009f7e:                    00003597           auipc   a1,0x3
d0009f82:                    59a58593           addi    a1,a1,1434 # d000d518 <kSigverifyRsaKeysCnt>
d0009f86:                    0005ab83           lw      s7,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f8a:                    4581                       li      a1,0
d0009f8c:                    00003b17           auipc   s6,0x3
d0009f90:                    594b0b13           addi    s6,s6,1428 # d000d520 <kSigverifyRsaKeys>
d0009f94:                    4401                       li      s0,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  size_t iter_cnt = 0;
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d0009f96:       /----------- 0975f163           bgeu    a1,s7,d000a018 <sigverify_rsa_key_get+0xbe>
d0009f9a:       |            00003597           auipc   a1,0x3
d0009f9e:       |            58258593           addi    a1,a1,1410 # d000d51c <kSigverifyRsaKeysStep>
d0009fa2:       |            0005ac03           lw      s8,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d0009fa6:       |            02abb4b3           mulhu   s1,s7,a0
d0009faa:       |            5a7d                       li      s4,-1
d0009fac:       |            1a400c93           li      s9,420
d0009fb0:       |            73900d13           li      s10,1849
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
d0009fb4:       |  /-------> 03948533           mul     a0,s1,s9
d0009fb8:       |  |         016505b3           add     a1,a0,s6
d0009fbc:       |  |         418c                       lw      a1,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009fbe:       |  |         862e                       mv      a2,a1
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:191
    const sigverify_rom_key_t *k = &kSigverifyRsaKeys[i];
    size_t k_id = sigverify_rsa_key_id_get(&k->key.n);
    if (launder32(k_id) == key_id) {
d0009fc0:       |  |  /----- 03561863           bne     a2,s5,d0009ff0 <sigverify_rsa_key_get+0x96>
d0009fc4:       |  |  |      955a                       add     a0,a0,s6
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      HARDENED_CHECK_EQ(k_id, key_id);
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d0009fc6:       |  |  |      1a052503           lw      a0,416(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:192
      HARDENED_CHECK_EQ(k_id, key_id);
d0009fca:       |  |  |  /-- 01558663           beq     a1,s5,d0009fd6 <sigverify_rsa_key_get+0x7c>
d0009fce:       |  |  |  |   0000                       unimp
d0009fd0:       |  |  |  |   0000                       unimp
d0009fd2:       |  |  |  |   0000                       unimp
d0009fd4:       |  |  |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d0009fd6:       |  |  |  \-> 85ce                       mv      a1,s3
d0009fd8:       |  |  |      8626                       mv      a2,s1
d0009fda:       |  |  |      207d                       jal     d000a088 <key_is_valid>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009fdc:       |  |  |      85aa                       mv      a1,a0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:194
      if (launder32(error) == kErrorOk) {
d0009fde:       |  |  +----- 01a59963           bne     a1,s10,d0009ff0 <sigverify_rsa_key_get+0x96>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:195
        HARDENED_CHECK_EQ(error, kErrorOk);
d0009fe2:       |  |  |  /-- 01a50663           beq     a0,s10,d0009fee <sigverify_rsa_key_get+0x94>
d0009fe6:       |  |  |  |   0000                       unimp
d0009fe8:       |  |  |  |   0000                       unimp
d0009fea:       |  |  |  |   0000                       unimp
d0009fec:       |  |  |  |   0000                       unimp
d0009fee:       |  |  |  \-> 8a26                       mv      s4,s1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:199
        cand_key_index = i;
      }
    }
    i += kSigverifyRsaKeysStep;
d0009ff0:       |  |  \----> 009c0533           add     a0,s8,s1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009ff4:       |  |         862a                       mv      a2,a0
d0009ff6:       |  |         4581                       li      a1,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:200
    if (launder32(i) >= kSigverifyRsaKeysCnt) {
d0009ff8:       |  |     /-- 01766363           bltu    a2,s7,d0009ffe <sigverify_rsa_key_get+0xa4>
d0009ffc:       |  |     |   85de                       mv      a1,s7
d0009ffe:       |  |     \-> 40b504b3           sub     s1,a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a002:       |  |         0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:203
      i -= kSigverifyRsaKeysCnt;
    }
    HARDENED_CHECK_LT(i, kSigverifyRsaKeysCnt);
d000a004:       |  |     /-- 0174e663           bltu    s1,s7,d000a010 <sigverify_rsa_key_get+0xb6>
d000a008:       |  |     |   0000                       unimp
d000a00a:       |  |     |   0000                       unimp
d000a00c:       |  |     |   0000                       unimp
d000a00e:       |  |     |   0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a010:       |  |     \-> 8522                       mv      a0,s0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a012:       |  \-------- fb7561e3           bltu    a0,s7,d0009fb4 <sigverify_rsa_key_get+0x5a>
d000a016:       |        /-- a011                       j       d000a01a <sigverify_rsa_key_get+0xc0>
d000a018:       \--------|-> 5a7d                       li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:205
  }
  HARDENED_CHECK_EQ(iter_cnt, kSigverifyRsaKeysCnt);
d000a01a:             /--\-X 01740663           beq     s0,s7,d000a026 <sigverify_rsa_key_get+0xcc>
d000a01e:             |      0000                       unimp
d000a020:             |      0000                       unimp
d000a022:             |      0000                       unimp
d000a024:             |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a026:             \----> 8552                       mv      a0,s4
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:207

  if (launder32(cand_key_index) < kSigverifyRsaKeysCnt) {
d000a028:             /----- 03757e63           bgeu    a0,s7,d000a064 <sigverify_rsa_key_get+0x10a>
d000a02c:             |      1a400513           li      a0,420
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a030:             |      02aa0533           mul     a0,s4,a0
d000a034:             |      01650433           add     s0,a0,s6
d000a038:             |      1a042503           lw      a0,416(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:208
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
d000a03c:             |  /-- 017a6663           bltu    s4,s7,d000a048 <sigverify_rsa_key_get+0xee>
d000a040:             |  |   0000                       unimp
d000a042:             |  |   0000                       unimp
d000a044:             |  |   0000                       unimp
d000a046:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a048:             |  \-> 85ce                       mv      a1,s3
d000a04a:             |      8652                       mv      a2,s4
d000a04c:             |      2835                       jal     d000a088 <key_is_valid>
d000a04e:             |      73900593           li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:211
                                     lc_state, cand_key_index);
    HARDENED_CHECK_EQ(error, kErrorOk);
d000a052:             |  /-- 00b50663           beq     a0,a1,d000a05e <sigverify_rsa_key_get+0x104>
d000a056:             |  |   0000                       unimp
d000a058:             |  |   0000                       unimp
d000a05a:             |  |   0000                       unimp
d000a05c:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:212
    *key = &kSigverifyRsaKeys[cand_key_index].key;
d000a05e:             |  \-> 00892023           sw      s0,0(s2)
d000a062:             |  /-- a029                       j       d000a06c <sigverify_rsa_key_get+0x112>
d000a064:             \--|-> 02535537           lui     a0,0x2535
d000a068:                |   60350513           addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:217
    return error;
  }

  return kErrorSigverifyBadKey;
}
d000a06c:                \-> 4d02                       lw      s10,0(sp)
d000a06e:                    4c92                       lw      s9,4(sp)
d000a070:                    4c22                       lw      s8,8(sp)
d000a072:                    4bb2                       lw      s7,12(sp)
d000a074:                    4b42                       lw      s6,16(sp)
d000a076:                    4ad2                       lw      s5,20(sp)
d000a078:                    4a62                       lw      s4,24(sp)
d000a07a:                    49f2                       lw      s3,28(sp)
d000a07c:                    5902                       lw      s2,32(sp)
d000a07e:                    5492                       lw      s1,36(sp)
d000a080:                    5422                       lw      s0,40(sp)
d000a082:                    50b2                       lw      ra,44(sp)
d000a084:                    6145                       addi    sp,sp,48
d000a086:                    8082                       ret

d000a088 <key_is_valid>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a088:                                         86ae                  mv      a3,a1
d000a08a:                                         cf8d0737              lui     a4,0xcf8d0
d000a08e:                                         aaa70793              addi    a5,a4,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a092:                                  /----- 04d7d663              bge     a5,a3,d000a0de <key_is_valid+0x56>
d000a096:                                  |      aab70713              addi    a4,a4,-1365
d000a09a:                               /--|----- 04e68f63              beq     a3,a4,d000a0f8 <key_is_valid+0x70>
d000a09e:                               |  |      0b5a7737              lui     a4,0xb5a7
d000a0a2:                               |  |      5e070713              addi    a4,a4,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000a0a6:                         /-----|--|----- 08e69763              bne     a3,a4,d000a134 <key_is_valid+0xac>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a0aa:                         |     |  |  /-- 00e58663              beq     a1,a4,d000a0b6 <key_is_valid+0x2e>
d000a0ae:                         |     |  |  |   0000                  unimp
d000a0b0:                         |     |  |  |   0000                  unimp
d000a0b2:                         |     |  |  |   0000                  unimp
d000a0b4:                         |     |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a0b6:                         |     |  |  \-> 85aa                  mv      a1,a0
d000a0b8:                         |     |  |      7a01a6b7              lui     a3,0x7a01a
d000a0bc:                         |     |  |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a0c0:             /-----------|-----|--|----- 0cd58f63              beq     a1,a3,d000a19e <key_is_valid+0x116>
d000a0c4:             |           |     |  |      43a846b7              lui     a3,0x43a84
d000a0c8:             |           |     |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a0cc:       /-----|-----------|-----|--|----- 10d59563              bne     a1,a3,d000a1d6 <key_is_valid+0x14e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:88
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a0d0:       |     |           |     |  |  /-- 00d50663              beq     a0,a3,d000a0dc <key_is_valid+0x54>
d000a0d4:       |     |           |     |  |  |   0000                  unimp
d000a0d6:       |     |           |     |  |  |   0000                  unimp
d000a0d8:       |     |           |     |  |  |   0000                  unimp
d000a0da:       |     |           |     |  |  |   0000                  unimp
d000a0dc:       |  /--|-----------|-----|--|--\-X a8dd                  j       d000a1d2 <key_is_valid+0x14a>
d000a0de:       |  |  |           |     |  \----> 91b9b737              lui     a4,0x91b9b
d000a0e2:       |  |  |           |     |         68a70713              addi    a4,a4,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a0e6:       |  |  |           |  /--|-------- 06e69563              bne     a3,a4,d000a150 <key_is_valid+0xc8>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:169
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a0ea:       |  |  |           |  |  |     /-- 00e58663              beq     a1,a4,d000a0f6 <key_is_valid+0x6e>
d000a0ee:       |  |  |           |  |  |     |   0000                  unimp
d000a0f0:       |  |  |           |  |  |     |   0000                  unimp
d000a0f2:       |  |  |           |  |  |     |   0000                  unimp
d000a0f4:       |  |  |           |  |  |     |   0000                  unimp
d000a0f6:       |  |  |           |  |  |  /--\-X a899                  j       d000a14c <key_is_valid+0xc4>
d000a0f8:       |  |  |           |  |  \--|----> cf8d06b7              lui     a3,0xcf8d0
d000a0fc:       |  |  |           |  |     |      aab68693              addi    a3,a3,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:175
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a100:       |  |  |           |  |     |  /-- 00d58663              beq     a1,a3,d000a10c <key_is_valid+0x84>
d000a104:       |  |  |           |  |     |  |   0000                  unimp
d000a106:       |  |  |           |  |     |  |   0000                  unimp
d000a108:       |  |  |           |  |     |  |   0000                  unimp
d000a10a:       |  |  |           |  |     |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a10c:       |  |  |           |  |     |  \-> 85aa                  mv      a1,a0
d000a10e:       |  |  |           |  |     |      7a01a6b7              lui     a3,0x7a01a
d000a112:       |  |  |           |  |     |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a116:       |  |  |           |  |  /--|----- 06d58d63              beq     a1,a3,d000a190 <key_is_valid+0x108>
d000a11a:       |  |  |           |  |  |  |      43a846b7              lui     a3,0x43a84
d000a11e:       |  |  |           |  |  |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a122:       |  |  |     /-----|--|--|--|----- 08d59c63              bne     a1,a3,d000a1ba <key_is_valid+0x132>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:61
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a126:       |  |  |     |     |  |  |  |  /-- 00d50663              beq     a0,a3,d000a132 <key_is_valid+0xaa>
d000a12a:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a12c:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a12e:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a130:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a132:       |  +--|-----|-----|--|--|--|--\-X a045                  j       d000a1d2 <key_is_valid+0x14a>
d000a134:       |  |  |     |     \--|--|--|----> 65f25737              lui     a4,0x65f25
d000a138:       |  |  |     |        |  |  |      20f70713              addi    a4,a4,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a13c:       |  |  |  /--|--------|--|--|----- 0ce69d63              bne     a3,a4,d000a216 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:166
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a140:       |  |  |  |  |        |  |  +----- 00e58663              beq     a1,a4,d000a14c <key_is_valid+0xc4>
d000a144:       |  |  |  |  |        |  |  |      0000                  unimp
d000a146:       |  |  |  |  |        |  |  |      0000                  unimp
d000a148:       |  |  |  |  |        |  |  |      0000                  unimp
d000a14a:       |  |  |  |  |        |  |  |      0000                  unimp
d000a14c:       |  |  |  |  |        |  |  \----> 85b2                  mv      a1,a2
d000a14e:       |  |  |  |  |        |  |         a0e5                  j       d000a236 <key_is_valid_in_lc_state_prod>
d000a150:       |  |  |  |  |        \--|-------> b2866637              lui     a2,0xb2866
d000a154:       |  |  |  |  |           |         fbb60613              addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a158:       |  |  |  +--|-----------|-------- 0ac69f63              bne     a3,a2,d000a216 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:163
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a15c:       |  |  |  |  |           |     /-- 00c58663              beq     a1,a2,d000a168 <key_is_valid+0xe0>
d000a160:       |  |  |  |  |           |     |   0000                  unimp
d000a162:       |  |  |  |  |           |     |   0000                  unimp
d000a164:       |  |  |  |  |           |     |   0000                  unimp
d000a166:       |  |  |  |  |           |     |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a168:       |  |  |  |  |           |     \-> 85aa                  mv      a1,a0
d000a16a:       |  |  |  |  |           |         7a01a637              lui     a2,0x7a01a
d000a16e:       |  |  |  |  |           |         47160613              addi    a2,a2,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a172:       |  |  |  |  |           |  /----- 02c58d63              beq     a1,a2,d000a1ac <key_is_valid+0x124>
d000a176:       |  |  |  |  |           |  |      43a84637              lui     a2,0x43a84
d000a17a:       |  |  |  |  |           |  |      9ad60613              addi    a2,a2,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a17e:       |  |  |  |  |     /-----|--|----- 06c59d63              bne     a1,a2,d000a1f8 <key_is_valid+0x170>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:141
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a182:       |  |  |  |  |     |     |  |  /-- 00c50663              beq     a0,a2,d000a18e <key_is_valid+0x106>
d000a186:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a188:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a18a:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a18c:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a18e:       |  |  |  |  |  /--|-----|--|--\-X a049                  j       d000a210 <key_is_valid+0x188>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:64
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a190:       |  |  |  |  |  |  |     \--|--/-X 00d50663              beq     a0,a3,d000a19c <key_is_valid+0x114>
d000a194:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a196:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a198:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a19a:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a19c:       |  |  |  |  |  |  |     /--|--\-X a889                  j       d000a1ee <key_is_valid+0x166>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:91
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a19e:       |  |  \--|--|--|--|-----|--|--/-X 00d50663              beq     a0,a3,d000a1aa <key_is_valid+0x122>
d000a1a2:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a1a4:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a1a6:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a1a8:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a1aa:       |  +-----|--|--|--|-----|--|--\-X a025                  j       d000a1d2 <key_is_valid+0x14a>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:144
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a1ac:       |  |     |  |  |  |     |  \--/-X 00c50663              beq     a0,a2,d000a1b8 <key_is_valid+0x130>
d000a1b0:       |  |     |  |  |  |     |     |   0000                  unimp
d000a1b2:       |  |     |  |  |  |     |     |   0000                  unimp
d000a1b4:       |  |     |  |  |  |     |     |   0000                  unimp
d000a1b6:       |  |     |  |  |  |     |     |   0000                  unimp
d000a1b8:       |  |     |  |  |  |     +-----\-X a81d                  j       d000a1ee <key_is_valid+0x166>
d000a1ba:       |  |     |  \--|--|-----|-------> 3ff0d6b7              lui     a3,0x3ff0d
d000a1be:       |  |     |     |  |     |         81968693              addi    a3,a3,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a1c2:       |  |     |     |  |  /--|-------- 04d59e63              bne     a1,a3,d000a21e <key_is_valid+0x196>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:58
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a1c6:       |  +-----|-----|--|--|--|-------- 00d50663              beq     a0,a3,d000a1d2 <key_is_valid+0x14a>
d000a1ca:       |  |     |     |  |  |  |         0000                  unimp
d000a1cc:       |  |     |     |  |  |  |         0000                  unimp
d000a1ce:       |  |     |     |  |  |  |         0000                  unimp
d000a1d0:       |  |     |     |  |  |  |         0000                  unimp
d000a1d2:       |  \-----|-----|--|--|--|-------> 8532                  mv      a0,a2
d000a1d4:       |        |     |  |  |  |         a0d1                  j       d000a298 <key_is_valid_in_otp>
d000a1d6:       \--------|-----|--|--|--|-------> 3ff0d637              lui     a2,0x3ff0d
d000a1da:                |     |  |  |  |         81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a1de:                |     |  |  |  |  /----- 04c59463              bne     a1,a2,d000a226 <key_is_valid+0x19e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:85
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a1e2:                |     |  |  |  +--|----- 00c50663              beq     a0,a2,d000a1ee <key_is_valid+0x166>
d000a1e6:                |     |  |  |  |  |      0000                  unimp
d000a1e8:                |     |  |  |  |  |      0000                  unimp
d000a1ea:                |     |  |  |  |  |      0000                  unimp
d000a1ec:                |     |  |  |  |  |      0000                  unimp
d000a1ee:                |     |  |  |  \--|----> 02535537              lui     a0,0x2535
d000a1f2:                |     |  |  |     |      60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a1f6:                |     |  |  |     |      8082                  ret
d000a1f8:                |     |  \--|-----|----> 3ff0d637              lui     a2,0x3ff0d
d000a1fc:                |     |     |     |      81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a200:                |     |     |     |  /-- 02c59763              bne     a1,a2,d000a22e <key_is_valid+0x1a6>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:138
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a204:                |     +-----|-----|--|-- 00c50663              beq     a0,a2,d000a210 <key_is_valid+0x188>
d000a208:                |     |     |     |  |   0000                  unimp
d000a20a:                |     |     |     |  |   0000                  unimp
d000a20c:                |     |     |     |  |   0000                  unimp
d000a20e:                |     |     |     |  |   0000                  unimp
d000a210:                |     \-----|-----|--|-> 73900513              li      a0,1849
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a214:                |           |     |  |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:178
      HARDENED_UNREACHABLE();
d000a216:                \-----------|-----|--|-> 0000                  unimp
d000a218:                            |     |  |   0000                  unimp
d000a21a:                            |     |  |   0000                  unimp
d000a21c:                            |     |  |   0000                  unimp
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:67
      HARDENED_UNREACHABLE();
d000a21e:                            \-----|--|-> 0000                  unimp
d000a220:                                  |  |   0000                  unimp
d000a222:                                  |  |   0000                  unimp
d000a224:                                  |  |   0000                  unimp
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:94
      HARDENED_UNREACHABLE();
d000a226:                                  \--|-> 0000                  unimp
d000a228:                                     |   0000                  unimp
d000a22a:                                     |   0000                  unimp
d000a22c:                                     |   0000                  unimp
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:147
      HARDENED_UNREACHABLE();
d000a22e:                                     \-> 0000                  unimp
d000a230:                                         0000                  unimp
d000a232:                                         0000                  unimp
d000a234:                                         0000                  unimp

d000a236 <key_is_valid_in_lc_state_prod>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a236:                 862a                  mv      a2,a0
d000a238:                 7a01a6b7              lui     a3,0x7a01a
d000a23c:                 47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_prod():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a240:          /----- 02d60063              beq     a2,a3,d000a260 <key_is_valid_in_lc_state_prod+0x2a>
d000a244:          |      43a846b7              lui     a3,0x43a84
d000a248:          |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a24c:       /--|----- 02d61163              bne     a2,a3,d000a26e <key_is_valid_in_lc_state_prod+0x38>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:115
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a250:       |  |  /-- 00d50663              beq     a0,a3,d000a25c <key_is_valid_in_lc_state_prod+0x26>
d000a254:       |  |  |   0000                  unimp
d000a256:       |  |  |   0000                  unimp
d000a258:       |  |  |   0000                  unimp
d000a25a:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:116
      return key_is_valid_in_otp(key_index);
d000a25c:       |  |  \-> 852e                  mv      a0,a1
d000a25e:       |  |      a82d                  j       d000a298 <key_is_valid_in_otp>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:118
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a260:       |  \--/-X 00d50663              beq     a0,a3,d000a26c <key_is_valid_in_lc_state_prod+0x36>
d000a264:       |     |   0000                  unimp
d000a266:       |     |   0000                  unimp
d000a268:       |     |   0000                  unimp
d000a26a:       |     |   0000                  unimp
d000a26c:       |  /--\-X a829                  j       d000a286 <key_is_valid_in_lc_state_prod+0x50>
d000a26e:       \--|----> 3ff0d5b7              lui     a1,0x3ff0d
d000a272:          |      81958593              addi    a1,a1,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a276:          |  /-- 00b61d63              bne     a2,a1,d000a290 <key_is_valid_in_lc_state_prod+0x5a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:112
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a27a:          +--|-- 00b50663              beq     a0,a1,d000a286 <key_is_valid_in_lc_state_prod+0x50>
d000a27e:          |  |   0000                  unimp
d000a280:          |  |   0000                  unimp
d000a282:          |  |   0000                  unimp
d000a284:          |  |   0000                  unimp
d000a286:          \--|-> 02535537              lui     a0,0x2535
d000a28a:             |   60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:123
}
d000a28e:             |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:121
      HARDENED_UNREACHABLE();
d000a290:             \-> 0000                  unimp
d000a292:                 0000                  unimp
d000a294:                 0000                  unimp
d000a296:                 0000                  unimp

d000a298 <key_is_valid_in_otp>:
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:27
static rom_error_t key_is_valid_in_otp(size_t key_index) {
d000a298:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:29
      OTP_CTRL_PARAM_CREATOR_SW_CFG_KEY_IS_VALID_OFFSET +
d000a29a:              c606                     sw      ra,12(sp)
d000a29c:              c422                     sw      s0,8(sp)
d000a29e:              0e850593                 addi    a1,a0,232
d000a2a2:              99f1                     andi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:33
      .index = (key_index % kSigverifyNumEntriesPerOtpWord) * 8,
d000a2a4:              00351413                 slli    s0,a0,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:36
      bitfield_field32_read(otp_read32(addr), field);
d000a2a8:              852e                     mv      a0,a1
d000a2aa:              30d020ef                 jal     ra,d000cdb6 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a2ae:              00855533                 srl     a0,a0,s0
d000a2b2:              0ff57513                 andi    a0,a0,255
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a2b6:              862a                     mv      a2,a0
d000a2b8:              0a500593                 li      a1,165
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:37
  if (launder32(is_valid) == kHardenedByteBoolTrue) {
d000a2bc:       /----- 00b61b63                 bne     a2,a1,d000a2d2 <key_is_valid_in_otp+0x3a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:38
    HARDENED_CHECK_EQ(is_valid, kHardenedByteBoolTrue);
d000a2c0:       |  /-- 00b50663                 beq     a0,a1,d000a2cc <key_is_valid_in_otp+0x34>
d000a2c4:       |  |   0000                     unimp
d000a2c6:       |  |   0000                     unimp
d000a2c8:       |  |   0000                     unimp
d000a2ca:       |  |   0000                     unimp
d000a2cc:       |  \-> 73900513                 li      a0,1849
d000a2d0:       |  /-- a029                     j       d000a2da <key_is_valid_in_otp+0x42>
d000a2d2:       \--|-> 02535537                 lui     a0,0x2535
d000a2d6:          |   60350513                 addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:42
}
d000a2da:          \-> 4422                     lw      s0,8(sp)
d000a2dc:              40b2                     lw      ra,12(sp)
d000a2de:              0141                     addi    sp,sp,16
d000a2e0:              8082                     ret

d000a2e2 <shutdown_init>:
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:78
    default:
      return 0;
  }
}

rom_error_t shutdown_init(lifecycle_state_t lc_state) {
d000a2e2:                                7119                   addi    sp,sp,-128
d000a2e4:                                de86                   sw      ra,124(sp)
d000a2e6:                                dca2                   sw      s0,120(sp)
d000a2e8:                                daa6                   sw      s1,116(sp)
d000a2ea:                                d8ca                   sw      s2,112(sp)
d000a2ec:                                d6ce                   sw      s3,108(sp)
d000a2ee:                                d4d2                   sw      s4,104(sp)
d000a2f0:                                d2d6                   sw      s5,100(sp)
d000a2f2:                                d0da                   sw      s6,96(sp)
d000a2f4:                                cede                   sw      s7,92(sp)
d000a2f6:                                cce2                   sw      s8,88(sp)
d000a2f8:                                cae6                   sw      s9,84(sp)
d000a2fa:                                c8ea                   sw      s10,80(sp)
d000a2fc:                                c6ee                   sw      s11,76(sp)
d000a2fe:                                892a                   mv      s2,a0
d000a300:                                cf8d05b7               lui     a1,0xcf8d0
d000a304:                                aaa58613               addi    a2,a1,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  };

  // Are we in a lifecycle state which needs alert configuration?
  uint32_t lc_shift;
  uint32_t lc_shift_masked;
  switch (launder32(lc_state)) {
d000a308:                         /----- 02a65563               bge     a2,a0,d000a332 <shutdown_init+0x50>
d000a30c:                         |      aab58593               addi    a1,a1,-1365
d000a310:                      /--|----- 04b50063               beq     a0,a1,d000a350 <shutdown_init+0x6e>
d000a314:                      |  |      0b5a75b7               lui     a1,0xb5a7
d000a318:                      |  |      5e058593               addi    a1,a1,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000a31c:                   /--|--|----- 04b51963               bne     a0,a1,d000a36e <shutdown_init+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:109
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      lc_shift = kLcShiftProdEnd;
      lc_shift_masked = launder32(kLcShiftProdEnd) ^ kLcStateProdEnd;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a320:                   |  |  |  /-- 00b90663               beq     s2,a1,d000a32c <shutdown_init+0x4a>
d000a324:                   |  |  |  |   0000                   unimp
d000a326:                   |  |  |  |   0000                   unimp
d000a328:                   |  |  |  |   0000                   unimp
d000a32a:                   |  |  |  |   0000                   unimp
d000a32c:                   |  |  |  \-> 49c1                   li      s3,16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a32e:                   |  |  |      4541                   li      a0,16
d000a330:                /--|--|--|----- a8a9                   j       d000a38a <shutdown_init+0xa8>
d000a332:                |  |  |  \----> 91b9b5b7               lui     a1,0x91b9b
d000a336:                |  |  |         68a58593               addi    a1,a1,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a33a:       /--------|--|--|-------- 24b51863               bne     a0,a1,d000a58a <shutdown_init+0x2a8>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:104
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a33e:       |        |  |  |     /-- 00b90663               beq     s2,a1,d000a34a <shutdown_init+0x68>
d000a342:       |        |  |  |     |   0000                   unimp
d000a344:       |        |  |  |     |   0000                   unimp
d000a346:       |        |  |  |     |   0000                   unimp
d000a348:       |        |  |  |     |   0000                   unimp
d000a34a:       |        |  |  |     \-> 49a1                   li      s3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a34c:       |        |  |  |         4521                   li      a0,8
d000a34e:       |        +--|--|-------- a835                   j       d000a38a <shutdown_init+0xa8>
d000a350:       |        |  |  \-------> cf8d0537               lui     a0,0xcf8d0
d000a354:       |        |  |            aab50513               addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:114
      lc_shift = kLcShiftDev;
      lc_shift_masked = launder32(kLcShiftDev) ^ kLcStateDev;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a358:       |        |  |        /-- 00a90663               beq     s2,a0,d000a364 <shutdown_init+0x82>
d000a35c:       |        |  |        |   0000                   unimp
d000a35e:       |        |  |        |   0000                   unimp
d000a360:       |        |  |        |   0000                   unimp
d000a362:       |        |  |        |   0000                   unimp
d000a364:       |        |  |        \-> 49e1                   li      s3,24
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a366:       |        |  |            45e1                   li      a1,24
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:116
      lc_shift = kLcShiftRma;
      lc_shift_masked = launder32(kLcShiftRma) ^ kLcStateRma;
d000a368:       |        |  |            00a5ca33               xor     s4,a1,a0
d000a36c:       |        |  |        /-- a00d                   j       d000a38e <shutdown_init+0xac>
d000a36e:       |        |  \--------|-> 65f255b7               lui     a1,0x65f25
d000a372:       |        |           |   20f58593               addi    a1,a1,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a376:       |  /-----|-----------|-- 24b51763               bne     a0,a1,d000a5c4 <shutdown_init+0x2e2>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a37a:       |  |     |           |   4501                   li      a0,0
d000a37c:       |  |     |           |   4981                   li      s3,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:97
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a37e:       |  |     +-----------|-- 00b90663               beq     s2,a1,d000a38a <shutdown_init+0xa8>
d000a382:       |  |     |           |   0000                   unimp
d000a384:       |  |     |           |   0000                   unimp
d000a386:       |  |     |           |   0000                   unimp
d000a388:       |  |     |           |   0000                   unimp
d000a38a:       |  |     \-----------|-> 00b54a33               xor     s4,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:128
  // Each of these OTP words is composed of 4 byte enums with the enable and
  // escalate configs per alert class (a/b/c/d).
  size_t i = 0;
  rom_error_t error = kErrorOk;
  uint32_t class_enable =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASS_EN_OFFSET);
d000a38e:       |  |                 \-> 36800513               li      a0,872
d000a392:       |  |                     225020ef               jal     ra,d000cdb6 <otp_read32>
d000a396:       |  |                     842a                   mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:130
  uint32_t class_escalate =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ESCALATION_OFFSET);
d000a398:       |  |                     36c00513               li      a0,876
d000a39c:       |  |                     21b020ef               jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a3a0:       |  |                     4581                   li      a1,0
d000a3a2:       |  |                     5afd                   li      s5,-1
d000a3a4:       |  |                     460d                   li      a2,3
d000a3a6:       |  |                     5b7d                   li      s6,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  alert_enable_t enable[ALERT_CLASSES];
  alert_escalate_t escalate[ALERT_CLASSES];
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a3a8:       |  |              /----- 02b66e63               bltu    a2,a1,d000a3e4 <shutdown_init+0x102>
d000a3ac:       |  |              |      4601                   li      a2,0
d000a3ae:       |  |              |      1874                   addi    a3,sp,60
d000a3b0:       |  |              |      1078                   addi    a4,sp,44
d000a3b2:       |  |              |      4585                   li      a1,1
d000a3b4:       |  |              |      4791                   li      a5,4
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a3b6:       |  |              |  /-> 00c454b3               srl     s1,s0,a2
d000a3ba:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:134
    enable[i] = (alert_enable_t)bitfield_field32_read(
d000a3be:       |  |              |  |   c284                   sw      s1,0(a3)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a3c0:       |  |              |  |   00c554b3               srl     s1,a0,a2
d000a3c4:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:136
        class_enable, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
    escalate[i] = (alert_escalate_t)bitfield_field32_read(
d000a3c8:       |  |              |  |   c304                   sw      s1,0(a4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a3ca:       |  |              |  |   84ae                   mv      s1,a1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a3cc:       |  |              |  |   0691                   addi    a3,a3,4
d000a3ce:       |  |              |  |   0711                   addi    a4,a4,4
d000a3d0:       |  |              |  |   0585                   addi    a1,a1,1
d000a3d2:       |  |              |  |   0621                   addi    a2,a2,8
d000a3d4:       |  |              |  \-- fef4e1e3               bltu    s1,a5,d000a3b6 <shutdown_init+0xd4>
d000a3d8:       |  |              |      4515                   li      a0,5
d000a3da:       |  |              |      73900b13               li      s6,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:139
        class_escalate, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
  }
  if (i != ALERT_CLASSES) {
d000a3de:       |  |              +----- 00a58363               beq     a1,a0,d000a3e4 <shutdown_init+0x102>
d000a3e2:       |  |              |      5b7d                   li      s6,-1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a3e4:       |  |              \----> 4501                   li      a0,0
d000a3e6:       |  |                     04000593               li      a1,64
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
    error = kErrorUnknown;
  }

  // For each alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a3ea:       |  |  /----------------- 06a5e863               bltu    a1,a0,d000a45a <shutdown_init+0x178>
d000a3ee:       |  |  |                  4481                   li      s1,0
d000a3f0:       |  |  |                  37000413               li      s0,880
d000a3f4:       |  |  |                  03200a93               li      s5,50
d000a3f8:       |  |  |                  03c10b93               addi    s7,sp,60
d000a3fc:       |  |  |                  73900c13               li      s8,1849
d000a400:       |  |  |                  04100c93               li      s9,65
d000a404:       |  |  |                  0a700d13               li      s10,167
d000a408:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:148
       ++i) {
    uint32_t value =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION_OFFSET +
d000a40c:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a40e:       |  |  |  |               1a9020ef               jal     ra,d000cdb6 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a412:       |  |  |  |               01355533               srl     a0,a0,s3
d000a416:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a41a:       |  |  |  |  /----------- 01558a63               beq     a1,s5,d000a42e <shutdown_init+0x14c>
d000a41e:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a42a <shutdown_init+0x148>
d000a422:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a432 <shutdown_init+0x150>
d000a426:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a428:       |  |  |  |  |  |  /--|-- a031                   j       d000a434 <shutdown_init+0x152>
d000a42a:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a42c:       |  |  |  |  |  |  +----- a021                   j       d000a434 <shutdown_init+0x152>
d000a42e:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a430:       |  |  |  |     |  +----- a011                   j       d000a434 <shutdown_init+0x152>
d000a432:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:152
                   i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_configure(i, cls, enable[clsindex(cls)]);
d000a434:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a436:       |  |  |  |               955e                   add     a0,a0,s7
d000a438:       |  |  |  |               4110                   lw      a2,0(a0)
d000a43a:       |  |  |  |               8526                   mv      a0,s1
d000a43c:       |  |  |  |               2a41                   jal     d000a5cc <alert_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:153
    if (e != kErrorOk) {
d000a43e:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a444 <shutdown_init+0x162>
d000a442:       |  |  |  |           |   8b2a                   mv      s6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:146
       ++i) {
d000a444:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a446:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a448:       |  |  |  |               0411                   addi    s0,s0,4
d000a44a:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a40c <shutdown_init+0x12a>
d000a44e:       |  |  |                  04100513               li      a0,65
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:159
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a452:       |  |  |              /-- 00a48363               beq     s1,a0,d000a458 <shutdown_init+0x176>
d000a456:       |  |  |              |   5b7d                   li      s6,-1
d000a458:       |  |  |              \-> 8ada                   mv      s5,s6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a45a:       |  |  \----------------> 4501                   li      a0,0
d000a45c:       |  |                     4619                   li      a2,6
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
    error = kErrorUnknown;
  }

  // For each local alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0;
d000a45e:       |  |  /----------------- 06a66663               bltu    a2,a0,d000a4ca <shutdown_init+0x1e8>
d000a462:       |  |  |                  4481                   li      s1,0
d000a464:       |  |  |                  4b000413               li      s0,1200
d000a468:       |  |  |                  03200b13               li      s6,50
d000a46c:       |  |  |                  03c10b93               addi    s7,sp,60
d000a470:       |  |  |                  73900c13               li      s8,1849
d000a474:       |  |  |                  4c9d                   li      s9,7
d000a476:       |  |  |                  0a700d13               li      s10,167
d000a47a:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:168
       launder32(i) < ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
       ++i) {
    uint32_t value = otp_read32(
d000a47e:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a480:       |  |  |  |               137020ef               jal     ra,d000cdb6 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a484:       |  |  |  |               01355533               srl     a0,a0,s3
d000a488:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a48c:       |  |  |  |  /----------- 01658a63               beq     a1,s6,d000a4a0 <shutdown_init+0x1be>
d000a490:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a49c <shutdown_init+0x1ba>
d000a494:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a4a4 <shutdown_init+0x1c2>
d000a498:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a49a:       |  |  |  |  |  |  /--|-- a031                   j       d000a4a6 <shutdown_init+0x1c4>
d000a49c:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a49e:       |  |  |  |  |  |  +----- a021                   j       d000a4a6 <shutdown_init+0x1c4>
d000a4a0:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a4a2:       |  |  |  |     |  +----- a011                   j       d000a4a6 <shutdown_init+0x1c4>
d000a4a4:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:173
        OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_LOCAL_ALERT_CLASSIFICATION_OFFSET +
        i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_local_configure(i, cls, enable[clsindex(cls)]);
d000a4a6:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a4a8:       |  |  |  |               955e                   add     a0,a0,s7
d000a4aa:       |  |  |  |               4110                   lw      a2,0(a0)
d000a4ac:       |  |  |  |               8526                   mv      a0,s1
d000a4ae:       |  |  |  |               2af9                   jal     d000a68c <alert_local_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:174
    if (e != kErrorOk) {
d000a4b0:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a4b6 <shutdown_init+0x1d4>
d000a4b4:       |  |  |  |           |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:167
       ++i) {
d000a4b6:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a4b8:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
  for (i = 0;
d000a4ba:       |  |  |  |               0411                   addi    s0,s0,4
d000a4bc:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a47e <shutdown_init+0x19c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:180
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a4c0:       |  |  |                  ff948513               addi    a0,s1,-7
d000a4c4:       |  |  |                  00153593               seqz    a1,a0
d000a4c8:       |  |  |              /-- a011                   j       d000a4cc <shutdown_init+0x1ea>
d000a4ca:       |  |  \--------------|-> 4581                   li      a1,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a4cc:       |  |                 \-> 4601                   li      a2,0
d000a4ce:       |  |                     468d                   li      a3,3
d000a4d0:       |  |                     557d                   li      a0,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
      kAlertClassB,
      kAlertClassC,
      kAlertClassD,
  };
  alert_class_config_t config;
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a4d2:       |  |        /----------- 0cc6ea63               bltu    a3,a2,d000a5a6 <shutdown_init+0x2c4>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:185
  if ((lc_shift_masked ^ lc_state) != lc_shift) {
d000a4d6:       |  |        |            012a4533               xor     a0,s4,s2
d000a4da:       |  |        |            01354533               xor     a0,a0,s3
d000a4de:       |  |        |            00153513               seqz    a0,a0
d000a4e2:       |  |        |            8d6d                   and     a0,a0,a1
d000a4e4:       |  |        |        /-- e111                   bnez    a0,d000a4e8 <shutdown_init+0x206>
d000a4e6:       |  |        |        |   5afd                   li      s5,-1
d000a4e8:       |  |        |        \-> 4c01                   li      s8,0
d000a4ea:       |  |        |            51000913               li      s2,1296
d000a4ee:       |  |        |            03c10a13               addi    s4,sp,60
d000a4f2:       |  |        |            02c10b13               addi    s6,sp,44
d000a4f6:       |  |        |            4b8d                   li      s7,3
d000a4f8:       |  |        |            4491                   li      s1,4
d000a4fa:       |  |        |            00003d17               auipc   s10,0x3
d000a4fe:       |  |        |            ffed0d13               addi    s10,s10,-2 # d000d4f8 <kSpiDeviceSfdpTable+0x6c>
d000a502:       |  |        |            73900d93               li      s11,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a506:       |  |        |  /-------> 002c1993               slli    s3,s8,0x2
d000a50a:       |  |        |  |         013a0533               add     a0,s4,s3
d000a50e:       |  |        |  |         4108                   lw      a0,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a510:       |  |        |  |         013b05b3               add     a1,s6,s3
d000a514:       |  |        |  |         418c                   lw      a1,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a516:       |  |        |  |         c42a                   sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a518:       |  |        |  |         c62e                   sw      a1,12(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:201
    config.accum_threshold =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH_OFFSET +
d000a51a:       |  |        |  |         4f098513               addi    a0,s3,1264
d000a51e:       |  |        |  |         099020ef               jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:200
    config.accum_threshold =
d000a522:       |  |        |  |         c82a                   sw      a0,16(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:204
                   i * sizeof(uint32_t));
    config.timeout_cycles =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_TIMEOUT_CYCLES_OFFSET +
d000a524:       |  |        |  |         50098513               addi    a0,s3,1280
d000a528:       |  |        |  |         08f020ef               jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a52c:       |  |        |  |         4581                   li      a1,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:203
    config.timeout_cycles =
d000a52e:       |  |        |  |         ca2a                   sw      a0,20(sp)
d000a530:       |  |        |  |         547d                   li      s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
                   i * sizeof(uint32_t));
    size_t phase = 0;
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a532:       |  |        |  |  /----- 02bbe863               bltu    s7,a1,d000a562 <shutdown_init+0x280>
d000a536:       |  |        |  |  |      4c85                   li      s9,1
d000a538:       |  |        |  |  |      01810a13               addi    s4,sp,24
d000a53c:       |  |        |  |  |      844a                   mv      s0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:208
      config.phase_cycles[phase] = otp_read32(
d000a53e:       |  |        |  |  |  /-> 8522                   mv      a0,s0
d000a540:       |  |        |  |  |  |   077020ef               jal     ra,d000cdb6 <otp_read32>
d000a544:       |  |        |  |  |  |   00aa2023               sw      a0,0(s4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a548:       |  |        |  |  |  |   8566                   mv      a0,s9
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a54a:       |  |        |  |  |  |   0411                   addi    s0,s0,4
d000a54c:       |  |        |  |  |  |   0c85                   addi    s9,s9,1
d000a54e:       |  |        |  |  |  |   0a11                   addi    s4,s4,4
d000a550:       |  |        |  |  |  \-- fe9567e3               bltu    a0,s1,d000a53e <shutdown_init+0x25c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:212
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_PHASE_CYCLES_OFFSET +
          (i * ARRAYSIZE(config.phase_cycles) + phase) * sizeof(uint32_t));
    }
    if (phase != ARRAYSIZE(config.phase_cycles)) {
d000a554:       |  |        |  |  |      4515                   li      a0,5
d000a556:       |  |        |  |  |  /-- 00ac8363               beq     s9,a0,d000a55c <shutdown_init+0x27a>
d000a55a:       |  |        |  |  |  |   5afd                   li      s5,-1
d000a55c:       |  |        |  |  |  \-> 8456                   mv      s0,s5
d000a55e:       |  |        |  |  |      03c10a13               addi    s4,sp,60
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:216
      error = kErrorUnknown;
    }

    rom_error_t e = alert_class_configure(kClasses[i], &config);
d000a562:       |  |        |  |  \----> 01a98533               add     a0,s3,s10
d000a566:       |  |        |  |         4108                   lw      a0,0(a0)
d000a568:       |  |        |  |         002c                   addi    a1,sp,8
d000a56a:       |  |        |  |         22c5                   jal     d000a74a <alert_class_configure>
d000a56c:       |  |        |  |         8aa2                   mv      s5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:217
    if (e != kErrorOk) {
d000a56e:       |  |        |  |     /-- 01b50363               beq     a0,s11,d000a574 <shutdown_init+0x292>
d000a572:       |  |        |  |     |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a574:       |  |        |  |     \-> 0c05                   addi    s8,s8,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a576:       |  |        |  |         8562                   mv      a0,s8
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
d000a578:       |  |        |  |         0941                   addi    s2,s2,16
d000a57a:       |  |        |  \-------- f89566e3               bltu    a0,s1,d000a506 <shutdown_init+0x224>
d000a57e:       |  |        |            4511                   li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:223
      // Keep going if there is an error programming an alert class. We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_CLASSES) {
d000a580:       |  |        |        /-- 00ac0363               beq     s8,a0,d000a586 <shutdown_init+0x2a4>
d000a584:       |  |        |        |   5afd                   li      s5,-1
d000a586:       |  |        |        \-> 8556                   mv      a0,s5
d000a588:       |  |        +----------- a839                   j       d000a5a6 <shutdown_init+0x2c4>
d000a58a:       \--|--------|----------> b28665b7               lui     a1,0xb2866
d000a58e:          |        |            fbb58593               addi    a1,a1,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a592:          +--------|----------- 02b51963               bne     a0,a1,d000a5c4 <shutdown_init+0x2e2>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:92
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a596:          |        |        /-- 00b90663               beq     s2,a1,d000a5a2 <shutdown_init+0x2c0>
d000a59a:          |        |        |   0000                   unimp
d000a59c:          |        |        |   0000                   unimp
d000a59e:          |        |        |   0000                   unimp
d000a5a0:          |        |        |   0000                   unimp
d000a5a2:          |        |        \-> 73900513               li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:227
    error = kErrorUnknown;
  }
  return error;
}
d000a5a6:          |        \----------> 4db6                   lw      s11,76(sp)
d000a5a8:          |                     4d46                   lw      s10,80(sp)
d000a5aa:          |                     4cd6                   lw      s9,84(sp)
d000a5ac:          |                     4c66                   lw      s8,88(sp)
d000a5ae:          |                     4bf6                   lw      s7,92(sp)
d000a5b0:          |                     5b06                   lw      s6,96(sp)
d000a5b2:          |                     5a96                   lw      s5,100(sp)
d000a5b4:          |                     5a26                   lw      s4,104(sp)
d000a5b6:          |                     59b6                   lw      s3,108(sp)
d000a5b8:          |                     5946                   lw      s2,112(sp)
d000a5ba:          |                     54d6                   lw      s1,116(sp)
d000a5bc:          |                     5466                   lw      s0,120(sp)
d000a5be:          |                     50f6                   lw      ra,124(sp)
d000a5c0:          |                     6109                   addi    sp,sp,128
d000a5c2:          |                     8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:119
      HARDENED_UNREACHABLE();
d000a5c4:          \-------------------> 0000                   unimp
d000a5c6:                                0000                   unimp
d000a5c8:                                0000                   unimp
d000a5ca:                                0000                   unimp

d000a5cc <alert_configure>:
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:22
enum {
  kBase = TOP_EARLGREY_ALERT_HANDLER_BASE_ADDR,
};

rom_error_t alert_configure(size_t index, alert_class_t cls,
                            alert_enable_t enabled) {
d000a5cc:                             04000693                  li      a3,64
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:23
  if (index >= ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a5d0:                         /-- 00a6f763                  bgeu    a3,a0,d000a5de <alert_configure+0x12>
d000a5d4:                         |   01415537                  lui     a0,0x1415
d000a5d8:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x1394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a5dc:       |                 |   8082                      ret
d000a5de:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a5e2:       |                     22068693                  addi    a3,a3,544 # c0150220 <_stack_end+0xe0130220>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:26
  index *= 4;
d000a5e6:       |                     00251713                  slli    a4,a0,0x2
d000a5ea:       |                     09300793                  li      a5,147
d000a5ee:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a5f2:       |                 /-- 02b7d563                  bge     a5,a1,d000a61c <alert_configure+0x50>
d000a5f6:       |                 |   09400793                  li      a5,148
d000a5fa:       |  /--------------|-- 08f58563                  beq     a1,a5,d000a684 <alert_configure+0xb8>
d000a5fe:       |  |              |   0a700793                  li      a5,167
d000a602:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a634 <alert_configure+0x68>
d000a606:       |  |     |        |   0ee00793                  li      a5,238
d000a60a:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000a670 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:31
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a60e:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a612:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a616:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a61a:       |  |  |  |  /-----|-- a035                      j       d000a646 <alert_configure+0x7a>
d000a61c:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a620:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a63c <alert_configure+0x70>
d000a624:       |  |  |  |  |  |      06400793                  li      a5,100
d000a628:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000a670 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:36
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a62c:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a630:       |  |  |  |  |  |      4785                      li      a5,1
d000a632:       |  |  |  |  |  |  /-- a801                      j       d000a642 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:41
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a634:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a638:       |  |  |     |  |  |   4789                      li      a5,2
d000a63a:       |  |  |     |  |  +-- a021                      j       d000a642 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:46
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a63c:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a640:       |  |  |     |     |   478d                      li      a5,3
d000a642:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a644:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a646:       |  |  |     \-------> 459d                      li      a1,7
d000a648:       |  |  |           /-- 02b60763                  beq     a2,a1,d000a676 <alert_configure+0xaa>
d000a64c:       |  |  |           |   0a900593                  li      a1,169
d000a650:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000a684 <alert_configure+0xb8>
d000a654:       |  |  |           |   0d200593                  li      a1,210
d000a658:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000a686 <alert_configure+0xba>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:61
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a65c:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000a660:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a662:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a666:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a66a:       |  |  |        |  |   de05ac23                  sw      zero,-520(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a66e:       |  |  |        |  |   8082                      ret
d000a670:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000a674:       +--|-----------|--|-- b795                      j       d000a5d8 <alert_configure+0xc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:67
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a676:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000a67a:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a67c:       |  |           |      eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a680:       |  |           |      eec5ae23                  sw      a2,-260(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a684:       |  \-----------|----> 8082                      ret
d000a686:       |              \----> 03415537                  lui     a0,0x3415
d000a68a:       \-------------------- b7b9                      j       d000a5d8 <alert_configure+0xc>

d000a68c <alert_local_configure>:
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:76

rom_error_t alert_local_configure(size_t index, alert_class_t cls,
                                  alert_enable_t enabled) {
d000a68c:                             4699                      li      a3,6
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:77
  if (index >= ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a68e:                         /-- 00a6f763                  bgeu    a3,a0,d000a69c <alert_local_configure+0x10>
d000a692:                         |   01415537                  lui     a0,0x1415
d000a696:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x1394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a69a:       |                 |   8082                      ret
d000a69c:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a6a0:       |                     46068693                  addi    a3,a3,1120 # c0150460 <_stack_end+0xe0130460>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:80
  index *= 4;
d000a6a4:       |                     00251713                  slli    a4,a0,0x2
d000a6a8:       |                     09300793                  li      a5,147
d000a6ac:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a6b0:       |                 /-- 02b7d563                  bge     a5,a1,d000a6da <alert_local_configure+0x4e>
d000a6b4:       |                 |   09400793                  li      a5,148
d000a6b8:       |  /--------------|-- 08f58563                  beq     a1,a5,d000a742 <alert_local_configure+0xb6>
d000a6bc:       |  |              |   0a700793                  li      a5,167
d000a6c0:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a6f2 <alert_local_configure+0x66>
d000a6c4:       |  |     |        |   0ee00793                  li      a5,238
d000a6c8:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000a72e <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:85
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a6cc:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a6d0:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a6d4:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a6d8:       |  |  |  |  /-----|-- a035                      j       d000a704 <alert_local_configure+0x78>
d000a6da:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a6de:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a6fa <alert_local_configure+0x6e>
d000a6e2:       |  |  |  |  |  |      06400793                  li      a5,100
d000a6e6:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000a72e <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:90
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a6ea:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a6ee:       |  |  |  |  |  |      4785                      li      a5,1
d000a6f0:       |  |  |  |  |  |  /-- a801                      j       d000a700 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:95
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a6f2:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a6f6:       |  |  |     |  |  |   4789                      li      a5,2
d000a6f8:       |  |  |     |  |  +-- a021                      j       d000a700 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:100
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a6fa:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a6fe:       |  |  |     |     |   478d                      li      a5,3
d000a700:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a702:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a704:       |  |  |     \-------> 459d                      li      a1,7
d000a706:       |  |  |           /-- 02b60763                  beq     a2,a1,d000a734 <alert_local_configure+0xa8>
d000a70a:       |  |  |           |   0a900593                  li      a1,169
d000a70e:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000a742 <alert_local_configure+0xb6>
d000a712:       |  |  |           |   0d200593                  li      a1,210
d000a716:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000a744 <alert_local_configure+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:115
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a71a:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000a71e:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a720:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a724:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a728:       |  |  |        |  |   fc05a423                  sw      zero,-56(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000a72c:       |  |  |        |  |   8082                      ret
d000a72e:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000a732:       +--|-----------|--|-- b795                      j       d000a696 <alert_local_configure+0xa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:121
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a734:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000a738:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a73a:       |  |           |      fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a73e:       |  |           |      fec5a223                  sw      a2,-28(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000a742:       |  \-----------|----> 8082                      ret
d000a744:       |              \----> 03415537                  lui     a0,0x3415
d000a748:       \-------------------- b7b9                      j       d000a696 <alert_local_configure+0xa>

d000a74a <alert_class_configure>:
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:130

rom_error_t alert_class_configure(alert_class_t cls,
                                  const alert_class_config_t *config) {
d000a74a:                          862a                 mv      a2,a0
d000a74c:                          02415537             lui     a0,0x2415
d000a750:                          0a600693             li      a3,166
d000a754:                          80350513             addi    a0,a0,-2045 # 2414803 <_rom_ext_virtual_size+0x2394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:147
      reg, ALERT_HANDLER_CLASSA_CTRL_SHADOWED_MAP_E3_FIELD, 3);

  // All of the alert class register blocks are identical but at different
  // offsets.  We'll treat everything like Class A, but add in the offset
  // to the other classes.
  switch (cls) {
d000a758:                      /-- 00c6cd63             blt     a3,a2,d000a772 <alert_class_configure+0x28>
d000a75c:                      |   03200693             li      a3,50
d000a760:                /-----|-- 02d60363             beq     a2,a3,d000a786 <alert_class_configure+0x3c>
d000a764:                |     |   06400693             li      a3,100
d000a768:       /--------|-----|-- 08d61063             bne     a2,a3,d000a7e8 <alert_class_configure+0x9e>
d000a76c:       |        |     |   03800813             li      a6,56
d000a770:       |        |  /--|-- a005                 j       d000a790 <alert_class_configure+0x46>
d000a772:       |        |  |  \-> 0a700693             li      a3,167
d000a776:       |        |  |  /-- 00d60b63             beq     a2,a3,d000a78c <alert_class_configure+0x42>
d000a77a:       |        |  |  |   0ee00693             li      a3,238
d000a77e:       +--------|--|--|-- 06d61563             bne     a2,a3,d000a7e8 <alert_class_configure+0x9e>
d000a782:       |        |  |  |   4801                 li      a6,0
d000a784:       |        |  +--|-- a031                 j       d000a790 <alert_class_configure+0x46>
d000a786:       |        \--|--|-> 0a800813             li      a6,168
d000a78a:       |           +--|-- a019                 j       d000a790 <alert_class_configure+0x46>
d000a78c:       |           |  \-> 07000813             li      a6,112
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:168
      break;
    case kAlertClassX:
    default:
      return kErrorAlertBadClass;
  }
  switch (config->enabled) {
d000a790:       |           \----> 0005a883             lw      a7,0(a1)
d000a794:       |                  471d                 li      a4,7
d000a796:       |                  6511                 lui     a0,0x4
d000a798:       |        /-------- 02e88163             beq     a7,a4,d000a7ba <alert_class_configure+0x70>
d000a79c:       |        |         0a900713             li      a4,169
d000a7a0:       |        |  /----- 00e88a63             beq     a7,a4,d000a7b4 <alert_class_configure+0x6a>
d000a7a4:       |        |  |      0d200513             li      a0,210
d000a7a8:       |  /-----|--|----- 0aa89c63             bne     a7,a0,d000a860 <alert_class_configure+0x116>
d000a7ac:       |  |     |  |      6511                 lui     a0,0x4
d000a7ae:       |  |     |  |      90350713             addi    a4,a0,-1789 # 3903 <_static_critical_size+0x193f>
d000a7b2:       |  |     |  |  /-- a031                 j       d000a7be <alert_class_configure+0x74>
d000a7b4:       |  |     |  \--|-> 90050713             addi    a4,a0,-1792
d000a7b8:       |  |     |     +-- a019                 j       d000a7be <alert_class_configure+0x74>
d000a7ba:       |  |     \-----|-> 90150713             addi    a4,a0,-1791
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
    case kAlertEnableNone:
      break;
    default:
      return kErrorAlertBadEnable;
  }
  switch (config->escalation) {
d000a7be:       |  |           \-> 41dc                 lw      a5,4(a1)
d000a7c0:       |  |               04415537             lui     a0,0x4415
d000a7c4:       |  |               0b800693             li      a3,184
d000a7c8:       |  |               80350513             addi    a0,a0,-2045 # 4414803 <_rom_ext_virtual_size+0x4394803>
d000a7cc:       |  |           /-- 00f6df63             bge     a3,a5,d000a7ea <alert_class_configure+0xa0>
d000a7d0:       |  |           |   0b900693             li      a3,185
d000a7d4:       |  |  /--------|-- 02d78963             beq     a5,a3,d000a806 <alert_class_configure+0xbc>
d000a7d8:       |  |  |        |   0cb00693             li      a3,203
d000a7dc:       |  |  |     /--|-- 02d78363             beq     a5,a3,d000a802 <alert_class_configure+0xb8>
d000a7e0:       |  |  |     |  |   0d100693             li      a3,209
d000a7e4:       |  |  |  /--|--|-- 02d78363             beq     a5,a3,d000a80a <alert_class_configure+0xc0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
    abs_mmio_write32(kBase + ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET + offset,
                     0);
  }

  return kErrorOk;
}
d000a7e8:       >--|--|--|--|--|-> 8082                 ret
d000a7ea:       |  |  |  |  |  \-> 02500693             li      a3,37
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
  switch (config->escalation) {
d000a7ee:       |  |  |  |  |  /-- 00d78863             beq     a5,a3,d000a7fe <alert_class_configure+0xb4>
d000a7f2:       |  |  |  |  |  |   07600693             li      a3,118
d000a7f6:       +--|--|--|--|--|-- fed799e3             bne     a5,a3,d000a7e8 <alert_class_configure+0x9e>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a7fa:       |  |  |  |  |  |   02076713             ori     a4,a4,32
d000a7fe:       |  |  |  |  |  \-> 01076713             ori     a4,a4,16
d000a802:       |  |  |  |  \----> 00876713             ori     a4,a4,8
d000a806:       |  |  \--|-------> 00476713             ori     a4,a4,4
d000a80a:       |  |     \-------> c0150537             lui     a0,0xc0150
d000a80e:       |  |               49850513             addi    a0,a0,1176 # c0150498 <_stack_end+0xe0130498>
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:206
      kBase + ALERT_HANDLER_CLASSA_CTRL_SHADOWED_REG_OFFSET + offset, reg);
d000a812:       |  |               982a                 add     a6,a6,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a814:       |  |               00e82223             sw      a4,4(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a818:       |  |               00e82223             sw      a4,4(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:209
      config->accum_threshold);
d000a81c:       |  |               4588                 lw      a0,8(a1)
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a81e:       |  |               00a82a23             sw      a0,20(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a822:       |  |               00a82a23             sw      a0,20(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:212
      config->timeout_cycles);
d000a826:       |  |               45d8                 lw      a4,12(a1)
d000a828:       |  |               4501                 li      a0,0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a82a:       |  |               00e82c23             sw      a4,24(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a82e:       |  |               00e82c23             sw      a4,24(a6)
d000a832:       |  |               02080713             addi    a4,a6,32
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000a836:       |  |               05c1                 addi    a1,a1,16
d000a838:       |  |               47c1                 li      a5,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:217
        config->phase_cycles[i]);
d000a83a:       |  |           /-> 00a58633             add     a2,a1,a0
d000a83e:       |  |           |   4210                 lw      a2,0(a2)
d000a840:       |  |           |   00a706b3             add     a3,a4,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a844:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000a846:       |  |           |   0511                 addi    a0,a0,4
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a848:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
d000a84a:       |  |           \-- fef518e3             bne     a0,a5,d000a83a <alert_class_configure+0xf0>
d000a84e:       |  |               0d200593             li      a1,210
d000a852:       |  |               73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:220
  if (config->enabled == kAlertEnableLocked) {
d000a856:       \--|-------------- f8b899e3             bne     a7,a1,d000a7e8 <alert_class_configure+0x9e>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a85a:          |               00082023             sw      zero,0(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
}
d000a85e:          |               8082                 ret
d000a860:          \-------------> 03415537             lui     a0,0x3415
d000a864:                          80350513             addi    a0,a0,-2045 # 3414803 <_rom_ext_virtual_size+0x3394803>
d000a868:                          8082                 ret

d000a86a <alert_config_crc32>:
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:260
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
    crc32_add_reg(ctx, offset);
  }
}

uint32_t alert_config_crc32(void) {
d000a86a:              7179                     addi    sp,sp,-48
d000a86c:              d606                     sw      ra,44(sp)
d000a86e:              d422                     sw      s0,40(sp)
d000a870:              d226                     sw      s1,36(sp)
d000a872:              d04a                     sw      s2,32(sp)
d000a874:              ce4e                     sw      s3,28(sp)
d000a876:              cc52                     sw      s4,24(sp)
d000a878:              ca56                     sw      s5,20(sp)
d000a87a:              c85a                     sw      s6,16(sp)
d000a87c:              c0150537                 lui     a0,0xc0150
d000a880:              01850913                 addi    s2,a0,24 # c0150018 <_stack_end+0xe0130018>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:262
  uint32_t ctx;
  crc32_init(&ctx);
d000a884:              0068                     addi    a0,sp,12
d000a886:              22ed                     jal     d000aa70 <crc32_init>
d000a888:              4401                     li      s0,0
d000a88a:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a88e:          /-> 01240533                 add     a0,s0,s2
d000a892:          |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a894:          |   0068                     addi    a0,sp,12
d000a896:          |   22c5                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a898:          |   0411                     addi    s0,s0,4
d000a89a:          \-- fe941ae3                 bne     s0,s1,d000a88e <alert_config_crc32+0x24>
d000a89e:              4401                     li      s0,0
d000a8a0:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a8a4:          /-> 00890533                 add     a0,s2,s0
d000a8a8:          |   10452583                 lw      a1,260(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a8ac:          |   0068                     addi    a0,sp,12
d000a8ae:          |   22e1                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a8b0:          |   0411                     addi    s0,s0,4
d000a8b2:          \-- fe9419e3                 bne     s0,s1,d000a8a4 <alert_config_crc32+0x3a>
d000a8b6:              4401                     li      s0,0
d000a8b8:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a8bc:          /-> 00890533                 add     a0,s2,s0
d000a8c0:          |   20852583                 lw      a1,520(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a8c4:          |   0068                     addi    a0,sp,12
d000a8c6:          |   2a45                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a8c8:          |   0411                     addi    s0,s0,4
d000a8ca:          \-- fe9419e3                 bne     s0,s1,d000a8bc <alert_config_crc32+0x52>
d000a8ce:              4401                     li      s0,0
d000a8d0:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a8d2:          /-> 00890533                 add     a0,s2,s0
d000a8d6:          |   41052583                 lw      a1,1040(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a8da:          |   0068                     addi    a0,sp,12
d000a8dc:          |   2a69                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a8de:          |   0411                     addi    s0,s0,4
d000a8e0:          \-- fe9419e3                 bne     s0,s1,d000a8d2 <alert_config_crc32+0x68>
d000a8e4:              4401                     li      s0,0
d000a8e6:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a8e8:          /-> 00890533                 add     a0,s2,s0
d000a8ec:          |   42c52583                 lw      a1,1068(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a8f0:          |   0068                     addi    a0,sp,12
d000a8f2:          |   2251                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a8f4:          |   0411                     addi    s0,s0,4
d000a8f6:          \-- fe9419e3                 bne     s0,s1,d000a8e8 <alert_config_crc32+0x7e>
d000a8fa:              4401                     li      s0,0
d000a8fc:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a8fe:          /-> 00890533                 add     a0,s2,s0
d000a902:          |   44852583                 lw      a1,1096(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a906:          |   0068                     addi    a0,sp,12
d000a908:          |   22bd                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a90a:          |   0411                     addi    s0,s0,4
d000a90c:          \-- fe9419e3                 bne     s0,s1,d000a8fe <alert_config_crc32+0x94>
d000a910:              4a01                     li      s4,0
d000a912:              c0150537                 lui     a0,0xc0150
d000a916:              4b850413                 addi    s0,a0,1208 # c01504b8 <_stack_end+0xe01304b8>
d000a91a:              03800993                 li      s3,56
d000a91e:              4b41                     li      s6,16
d000a920:              4a91                     li      s5,4
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:282
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
    enum {
      kClassStep = ALERT_HANDLER_CLASSB_REGWEN_REG_OFFSET -
                   ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET,
    };
    uint32_t classOffset = kClassStep * class;
d000a922:       /----> 033a0533                 mul     a0,s4,s3
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000a926:       |      00a904b3                 add     s1,s2,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a92a:       |      4804a583                 lw      a1,1152(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000a92e:       |      0068                     addi    a0,sp,12
d000a930:       |      2299                     jal     d000aa76 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a932:       |      4844a583                 lw      a1,1156(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000a936:       |      0068                     addi    a0,sp,12
d000a938:       |      2a3d                     jal     d000aa76 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a93a:       |      4944a583                 lw      a1,1172(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000a93e:       |      0068                     addi    a0,sp,12
d000a940:       |      2a1d                     jal     d000aa76 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a942:       |      4984a583                 lw      a1,1176(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000a946:       |      0068                     addi    a0,sp,12
d000a948:       |      223d                     jal     d000aa76 <crc32_add32>
d000a94a:       |      4481                     li      s1,0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a94c:       |  /-> 00940533                 add     a0,s0,s1
d000a950:       |  |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000a952:       |  |   0068                     addi    a0,sp,12
d000a954:       |  |   220d                     jal     d000aa76 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000a956:       |  |   0491                     addi    s1,s1,4
d000a958:       |  \-- ff649ae3                 bne     s1,s6,d000a94c <alert_config_crc32+0xe2>
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:277
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
d000a95c:       |      0a05                     addi    s4,s4,1
d000a95e:       |      03840413                 addi    s0,s0,56
d000a962:       \----- fd5a10e3                 bne     s4,s5,d000a922 <alert_config_crc32+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:299
    crc32_add_regs(
        &ctx, classOffset + ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED_REG_OFFSET,
        ALERT_HANDLER_PARAM_N_PHASES);
  }

  return crc32_finish(&ctx);
d000a966:              0068                     addi    a0,sp,12
d000a968:              2a81                     jal     d000aab8 <crc32_finish>
d000a96a:              4b42                     lw      s6,16(sp)
d000a96c:              4ad2                     lw      s5,20(sp)
d000a96e:              4a62                     lw      s4,24(sp)
d000a970:              49f2                     lw      s3,28(sp)
d000a972:              5902                     lw      s2,32(sp)
d000a974:              5492                     lw      s1,36(sp)
d000a976:              5422                     lw      s0,40(sp)
d000a978:              50b2                     lw      ra,44(sp)
d000a97a:              6145                     addi    sp,sp,48
d000a97c:              8082                     ret

d000a97e <alert_config_check>:
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:302
}

rom_error_t alert_config_check(lifecycle_state_t lc_state) {
d000a97e:                             1141                      addi    sp,sp,-16
d000a980:                             c606                      sw      ra,12(sp)
d000a982:                             c422                      sw      s0,8(sp)
d000a984:                             c226                      sw      s1,4(sp)
d000a986:                             842a                      mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
  uint32_t crc32 = alert_config_crc32();
d000a988:                             35cd                      jal     d000a86a <alert_config_crc32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a98a:                             85a2                      mv      a1,s0
d000a98c:                             cf8d0637                  lui     a2,0xcf8d0
d000a990:                             aaa60693                  addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
d000a994:                             84aa                      mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  rom_error_t res = lc_state ^ crc32;
  switch (launder32(lc_state)) {
d000a996:                      /----- 02b6d563                  bge     a3,a1,d000a9c0 <alert_config_check+0x42>
d000a99a:                      |      aab60513                  addi    a0,a2,-1365
d000a99e:                   /--|----- 04a58063                  beq     a1,a0,d000a9de <alert_config_check+0x60>
d000a9a2:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000a9a6:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000a9aa:                /--|--|----- 04a59763                  bne     a1,a0,d000a9f8 <alert_config_check+0x7a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:324
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      res ^= otp_read32(
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_END_OFFSET);
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a9ae:                |  |  |  /-- 00a40663                  beq     s0,a0,d000a9ba <alert_config_check+0x3c>
d000a9b2:                |  |  |  |   0000                      unimp
d000a9b4:                |  |  |  |   0000                      unimp
d000a9b6:                |  |  |  |   0000                      unimp
d000a9b8:                |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:326
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_DEV_OFFSET);
d000a9ba:                |  |  |  \-> 55800513                  li      a0,1368
d000a9be:             /--|--|--|----- a899                      j       d000aa14 <alert_config_check+0x96>
d000a9c0:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000a9c4:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000a9c8:       /-----|--|--|-------- 08a59063                  bne     a1,a0,d000aa48 <alert_config_check+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:319
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a9cc:       |     |  |  |     /-- 00a40663                  beq     s0,a0,d000a9d8 <alert_config_check+0x5a>
d000a9d0:       |     |  |  |     |   0000                      unimp
d000a9d2:       |     |  |  |     |   0000                      unimp
d000a9d4:       |     |  |  |     |   0000                      unimp
d000a9d6:       |     |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:320
      res ^= otp_read32(
d000a9d8:       |     |  |  |     \-> 55400513                  li      a0,1364
d000a9dc:       |     +--|--|-------- a825                      j       d000aa14 <alert_config_check+0x96>
d000a9de:       |     |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000a9e2:       |     |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:329
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a9e6:       |     |  |        /-- 00a40663                  beq     s0,a0,d000a9f2 <alert_config_check+0x74>
d000a9ea:       |     |  |        |   0000                      unimp
d000a9ec:       |     |  |        |   0000                      unimp
d000a9ee:       |     |  |        |   0000                      unimp
d000a9f0:       |     |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:331
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_RMA_OFFSET);
d000a9f2:       |     |  |        \-> 55c00513                  li      a0,1372
d000a9f6:       |     +--|----------- a839                      j       d000aa14 <alert_config_check+0x96>
d000a9f8:       |     |  \----------> 65f25537                  lui     a0,0x65f25
d000a9fc:       |     |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000aa00:       |  /--|-------------- 06a59463                  bne     a1,a0,d000aa68 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:314
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000aa04:       |  |  |           /-- 00a40663                  beq     s0,a0,d000aa10 <alert_config_check+0x92>
d000aa08:       |  |  |           |   0000                      unimp
d000aa0a:       |  |  |           |   0000                      unimp
d000aa0c:       |  |  |           |   0000                      unimp
d000aa0e:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:316
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_OFFSET);
d000aa10:       |  |  |           \-> 55000513                  li      a0,1360
d000aa14:       |  |  \-------------> 3a2020ef                  jal     ra,d000cdb6 <otp_read32>
d000aa18:       |  |     /----------> 0084c5b3                  xor     a1,s1,s0
d000aa1c:       |  |     |            8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aa1e:       |  |     |            862a                      mv      a2,a0
d000aa20:       |  |     |            73900593                  li      a1,1849
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:336
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  if (launder32(res) != kErrorOk) {
d000aa24:       |  |     |  /-------- 00b61963                  bne     a2,a1,d000aa36 <alert_config_check+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:339
    return kErrorAlertBadCrc32;
  }
  HARDENED_CHECK_EQ(res, kErrorOk);
d000aa28:       |  |     |  |  /----- 00b50663                  beq     a0,a1,d000aa34 <alert_config_check+0xb6>
d000aa2c:       |  |     |  |  |      0000                      unimp
d000aa2e:       |  |     |  |  |      0000                      unimp
d000aa30:       |  |     |  |  |      0000                      unimp
d000aa32:       |  |     |  |  |      0000                      unimp
d000aa34:       |  |     |  |  \--/-X a029                      j       d000aa3e <alert_config_check+0xc0>
d000aa36:       |  |     |  \-----|-> 05415537                  lui     a0,0x5415
d000aa3a:       |  |     |        |   80350513                  addi    a0,a0,-2045 # 5414803 <_rom_ext_virtual_size+0x5394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:341
  return res;
}
d000aa3e:       |  |     |        \-> 4492                      lw      s1,4(sp)
d000aa40:       |  |     |            4422                      lw      s0,8(sp)
d000aa42:       |  |     |            40b2                      lw      ra,12(sp)
d000aa44:       |  |     |            0141                      addi    sp,sp,16
d000aa46:       |  |     |            8082                      ret
d000aa48:       \--|-----|----------> b2866537                  lui     a0,0xb2866
d000aa4c:          |     |            fbb50613                  addi    a2,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000aa50:          +-----|----------- 00c59c63                  bne     a1,a2,d000aa68 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:307
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000aa54:          |     |        /-- 00c40663                  beq     s0,a2,d000aa60 <alert_config_check+0xe2>
d000aa58:          |     |        |   0000                      unimp
d000aa5a:          |     |        |   0000                      unimp
d000aa5c:          |     |        |   0000                      unimp
d000aa5e:          |     |        |   0000                      unimp
d000aa60:          |     |        \-> 88250513                  addi    a0,a0,-1918
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:311
      res ^= crc32 ^ kMask;
d000aa64:          |     |            8d25                      xor     a0,a0,s1
d000aa66:          |     \----------- bf4d                      j       d000aa18 <alert_config_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:334
      HARDENED_UNREACHABLE();
d000aa68:          \----------------> 0000                      unimp
d000aa6a:                             0000                      unimp
d000aa6c:                             0000                      unimp
d000aa6e:                             0000                      unimp

d000aa70 <crc32_init>:
crc32_init():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:18
   * CRC32 polynomial.
   */
  kCrc32Poly = 0xedb88320,
};

void crc32_init(uint32_t *ctx) { *ctx = UINT32_MAX; }
d000aa70:       55fd                    li      a1,-1
d000aa72:       c10c                    sw      a1,0(a0)
d000aa74:       8082                    ret

d000aa76 <crc32_add32>:
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:39
      *ctx ^= kCrc32Poly;
    }
  }
}

void crc32_add32(uint32_t *ctx, uint32_t word) {
d000aa76:                 1141                  addi    sp,sp,-16
d000aa78:                 4681                  li      a3,0
d000aa7a:                 c62e                  sw      a1,12(sp)
d000aa7c:                 4110                  lw      a2,0(a0)
d000aa7e:                 edb88737              lui     a4,0xedb88
d000aa82:                 32070713              addi    a4,a4,800 # edb88320 <_stack_end+0xdb68320>
d000aa86:                 4891                  li      a7,4
d000aa88:                 00c10813              addi    a6,sp,12
crc32_add8():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:29
  *ctx ^= byte;
d000aa8c:       /-------> 0ff5f593              andi    a1,a1,255
d000aa90:       |         8e2d                  xor     a2,a2,a1
d000aa92:       |         45a1                  li      a1,8
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:31
    bool lsb = *ctx & 1;
d000aa94:       |  /----> 00167793              andi    a5,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:32
    *ctx >>= 1;
d000aa98:       |  |      8205                  srli    a2,a2,0x1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:33
    if (lsb) {
d000aa9a:       |  |  /-- c391                  beqz    a5,d000aa9e <crc32_add32+0x28>
d000aa9c:       |  |  |   8e39                  xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:30
  for (size_t i = 0; i < 8; ++i) {
d000aa9e:       |  |  \-> 15fd                  addi    a1,a1,-1
d000aaa0:       |  \----- f9f5                  bnez    a1,d000aa94 <crc32_add32+0x1e>
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:41
  char *bytes = (char *)&word;
  for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000aaa2:       |         0685                  addi    a3,a3,1
d000aaa4:       |     /-- 01168763              beq     a3,a7,d000aab2 <crc32_add32+0x3c>
d000aaa8:       |     |   00d805b3              add     a1,a6,a3
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:42
    crc32_add8(ctx, bytes[i]);
d000aaac:       |     |   0005c583              lbu     a1,0(a1)
d000aab0:       \-----|-- bff1                  j       d000aa8c <crc32_add32+0x16>
d000aab2:             \-> c110                  sw      a2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:44
  }
}
d000aab4:                 0141                  addi    sp,sp,16
d000aab6:                 8082                  ret

d000aab8 <crc32_finish>:
crc32_finish():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:64
  for (; len > 0; --len, ++data) {
    crc32_add8(ctx, *data);
  }
}

uint32_t crc32_finish(const uint32_t *ctx) { return *ctx ^ UINT32_MAX; }
d000aab8:       4108                    lw      a0,0(a0)
d000aaba:       fff54513                not     a0,a0
d000aabe:       8082                    ret

d000aac0 <ast_check>:
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:26

enum {
  kBase = TOP_EARLGREY_SENSOR_CTRL_BASE_ADDR,
};

rom_error_t ast_check(lifecycle_state_t lc_state) {
d000aac0:                          1141                 addi    sp,sp,-16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aac2:                          c606                 sw      ra,12(sp)
d000aac4:                          85aa                 mv      a1,a0
d000aac6:                          cf8d0637             lui     a2,0xcf8d0
d000aaca:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  // In some lifecycle states we want to continue the boot process even if the
  // AST is not initialized. Note that in these states OTP may not have been
  // configured.
  switch (launder32(lc_state)) {
d000aace:                   /----- 02b6d363             bge     a3,a1,d000aaf4 <ast_check+0x34>
d000aad2:                   |      aab60613             addi    a2,a2,-1365
d000aad6:                /--|----- 02c58c63             beq     a1,a2,d000ab0e <ast_check+0x4e>
d000aada:                |  |      0b5a7637             lui     a2,0xb5a7
d000aade:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000aae2:             /--|--|----- 04c59163             bne     a1,a2,d000ab24 <ast_check+0x64>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:38
      return kErrorOk;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
      return kErrorOk;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000aae6:             |  |  |  /-- 00c50663             beq     a0,a2,d000aaf2 <ast_check+0x32>
d000aaea:             |  |  |  |   0000                 unimp
d000aaec:             |  |  |  |   0000                 unimp
d000aaee:             |  |  |  |   0000                 unimp
d000aaf0:             |  |  |  |   0000                 unimp
d000aaf2:          /--|--|--|--\-X a0a9                 j       d000ab3c <ast_check+0x7c>
d000aaf4:          |  |  |  \----> 91b9b637             lui     a2,0x91b9b
d000aaf8:          |  |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000aafc:       /--|--|--|-------- 0ac59c63             bne     a1,a2,d000abb4 <ast_check+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:44
      break;
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ab00:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000ab0c <ast_check+0x4c>
d000ab04:       |  |  |  |     |   0000                 unimp
d000ab06:       |  |  |  |     |   0000                 unimp
d000ab08:       |  |  |  |     |   0000                 unimp
d000ab0a:       |  |  |  |     |   0000                 unimp
d000ab0c:       |  +--|--|-----\-X a805                 j       d000ab3c <ast_check+0x7c>
d000ab0e:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000ab12:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:35
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ab16:       |  |  |        /-- 00b50663             beq     a0,a1,d000ab22 <ast_check+0x62>
d000ab1a:       |  |  |        |   0000                 unimp
d000ab1c:       |  |  |        |   0000                 unimp
d000ab1e:       |  |  |        |   0000                 unimp
d000ab20:       |  |  |        |   0000                 unimp
d000ab22:       |  |  |  /-----\-X a06d                 j       d000abcc <ast_check+0x10c>
d000ab24:       |  |  \--|-------> 65f25637             lui     a2,0x65f25
d000ab28:       |  |     |         20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000ab2c:       |  |  /--|-------- 0ac59563             bne     a1,a2,d000abd6 <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:41
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000ab30:       |  +--|--|-------- 00c50663             beq     a0,a2,d000ab3c <ast_check+0x7c>
d000ab34:       |  |  |  |         0000                 unimp
d000ab36:       |  |  |  |         0000                 unimp
d000ab38:       |  |  |  |         0000                 unimp
d000ab3a:       |  |  |  |         0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:52
      HARDENED_UNREACHABLE();
  }

  // OTP can be configured to skip AST initialization. In this situation we do
  // not check that AST_INIT_DONE is set.
  uint32_t en = otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_AST_INIT_EN_OFFSET);
d000ab3c:       |  \--|--|-------> 0dc00513             li      a0,220
d000ab40:       |     |  |         276020ef             jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ab44:       |     |  |         862a                 mv      a2,a0
d000ab46:       |     |  |         45a5                 li      a1,9
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:53
  if (launder32(en) == kMultiBitBool4False) {
d000ab48:       |     |  |  /----- 00b61963             bne     a2,a1,d000ab5a <ast_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:54
    HARDENED_CHECK_EQ(en, kMultiBitBool4False);
d000ab4c:       |     |  |  |  /-- 00b50663             beq     a0,a1,d000ab58 <ast_check+0x98>
d000ab50:       |     |  |  |  |   0000                 unimp
d000ab52:       |     |  |  |  |   0000                 unimp
d000ab54:       |     |  |  |  |   0000                 unimp
d000ab56:       |     |  |  |  |   0000                 unimp
d000ab58:       |     |  +--|--\-X a895                 j       d000abcc <ast_check+0x10c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:62

  // AST initialization may take up to 100us. It is most likely already complete
  // at this point but for resilience poll for up to 100us.
  uint32_t mcycle;
  rom_error_t res = kErrorAstInitNotDone;
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000ab5a:       |     |  |  \----> b0001073             csrw    mcycle,zero
d000ab5e:       |     |  |         00003517             auipc   a0,0x3
d000ab62:       |     |  |         40a50513             addi    a0,a0,1034 # d000df68 <kAstCheckPollCpuCycles>
d000ab66:       |     |  |         00052803             lw      a6,0(a0)
d000ab6a:       |     |  |         01415537             lui     a0,0x1415
d000ab6e:       |     |  |         30d50693             addi    a3,a0,781 # 141530d <_rom_ext_virtual_size+0x139530d>
d000ab72:       |     |  |         c0490637             lui     a2,0xc0490
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:64
  do {
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000ab76:       |     |  |  /----> b0002773             csrr    a4,mcycle
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab7a:       |     |  |  |      5248                 lw      a0,36(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000ab7c:       |     |  |  |      00157793             andi    a5,a0,1
d000ab80:       |     |  |  |      63100513             li      a0,1585
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:90

  // The code below reads the AST_INIT_DONE bit twice and modifies `res` with
  // the result of each attempt. `res` should be `kHardenedBoolTrue` if all
  // attempts return true.
  hardened_bool_t res = 0x631;
  res |= done_bit_get() << 3;
d000ab84:       |     |  |  |  /-- c399                 beqz    a5,d000ab8a <ast_check+0xca>
d000ab86:       |     |  |  |  |   63900513             li      a0,1593
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab8a:       |     |  |  |  \-> 525c                 lw      a5,36(a2)
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:91
  res |= done_bit_get() << 8;
d000ab8c:       |     |  |  |      07a2                 slli    a5,a5,0x8
d000ab8e:       |     |  |  |      1007f793             andi    a5,a5,256
d000ab92:       |     |  |  |      00f565b3             or      a1,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:93

  if (res != kHardenedBoolTrue) {
d000ab96:       |     |  |  |      8c758793             addi    a5,a1,-1849
d000ab9a:       |     |  |  |      73900513             li      a0,1849
d000ab9e:       |     |  |  |      00f037b3             snez    a5,a5
d000aba2:       |     |  |  |  /-- 00a58363             beq     a1,a0,d000aba8 <ast_check+0xe8>
d000aba6:       |     |  |  |  |   8536                 mv      a0,a3
d000aba8:       |     |  |  |  \-> 010735b3             sltu    a1,a4,a6
d000abac:       |     |  |  |      8dfd                 and     a1,a1,a5
d000abae:       |     |  |  |      86aa                 mv      a3,a0
d000abb0:       |     |  |  \----- f1f9                 bnez    a1,d000ab76 <ast_check+0xb6>
d000abb2:       |     |  |     /-- a839                 j       d000abd0 <ast_check+0x110>
d000abb4:       \-----|--|-----|-> b2866637             lui     a2,0xb2866
d000abb8:             |  |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000abbc:             +--|-----|-- 00c59d63             bne     a1,a2,d000abd6 <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000abc0:             |  +-----|-- 00c50663             beq     a0,a2,d000abcc <ast_check+0x10c>
d000abc4:             |  |     |   0000                 unimp
d000abc6:             |  |     |   0000                 unimp
d000abc8:             |  |     |   0000                 unimp
d000abca:             |  |     |   0000                 unimp
d000abcc:             |  \-----|-> 73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:75
}
d000abd0:             |        \-> 40b2                 lw      ra,12(sp)
d000abd2:             |            0141                 addi    sp,sp,16
d000abd4:             |            8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:47
      HARDENED_UNREACHABLE();
d000abd6:             \----------> 0000                 unimp
d000abd8:                          0000                 unimp
d000abda:                          0000                 unimp
d000abdc:                          0000                 unimp

d000abde <flash_ctrl_init>:
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:295
  const info_cfg_regs_t regs = info_cfg_regs(info_page);
  sec_mmio_write32(regs.cfg_addr, 0);
  sec_mmio_write32(regs.cfg_wen_addr, 0);
}

void flash_ctrl_init(void) {
d000abde:       1101                    addi    sp,sp,-32
d000abe0:       ce06                    sw      ra,28(sp)
d000abe2:       cc22                    sw      s0,24(sp)
d000abe4:       ca26                    sw      s1,20(sp)
d000abe6:       c84a                    sw      s2,16(sp)
d000abe8:       c1000537                lui     a0,0xc1000
d000abec:       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000abee:       cd0c                    sw      a1,24(a0)
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:305
  // Initialize the flash controller.
  abs_mmio_write32(kBase + FLASH_CTRL_INIT_REG_OFFSET,
                   bitfield_bit32_write(0, FLASH_CTRL_INIT_VAL_BIT, true));
  // Configure default scrambling, ECC, and HE settings for the data partition.
  uint32_t otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_DATA_DEFAULT_CFG_OFFSET);
d000abf0:       0f000513                li      a0,240
d000abf4:       1c2020ef                jal     ra,d000cdb6 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000abf8:       0ff57593                andi    a1,a0,255
d000abfc:       00855613                srli    a2,a0,0x8
d000ac00:       0ff67613                andi    a2,a2,255
d000ac04:       8141                    srli    a0,a0,0x10
d000ac06:       0ff57513                andi    a0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:312
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_data_default_cfg_set(data_default_cfg);
d000ac0a:       c02e                    sw      a1,0(sp)
d000ac0c:       c232                    sw      a2,4(sp)
d000ac0e:       c42a                    sw      a0,8(sp)
d000ac10:       850a                    mv      a0,sp
d000ac12:       20b1                    jal     d000ac5e <flash_ctrl_data_default_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:315
  // Configure scrambling, ECC, and HE for `boot_data` pages.
  otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_INFO_BOOT_DATA_CFG_OFFSET);
d000ac14:       0f400513                li      a0,244
d000ac18:       19e020ef                jal     ra,d000cdb6 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ac1c:       0ff57913                andi    s2,a0,255
d000ac20:       00855593                srli    a1,a0,0x8
d000ac24:       0ff5f493                andi    s1,a1,255
d000ac28:       8141                    srli    a0,a0,0x10
d000ac2a:       0ff57413                andi    s0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:322
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData0, boot_data_cfg);
d000ac2e:       c04a                    sw      s2,0(sp)
d000ac30:       c226                    sw      s1,4(sp)
d000ac32:       c422                    sw      s0,8(sp)
d000ac34:       fa38d537                lui     a0,0xfa38d
d000ac38:       9f650513                addi    a0,a0,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000ac3c:       858a                    mv      a1,sp
d000ac3e:       209d                    jal     d000aca4 <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:323
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData1, boot_data_cfg);
d000ac40:       c04a                    sw      s2,0(sp)
d000ac42:       c226                    sw      s1,4(sp)
d000ac44:       c422                    sw      s0,8(sp)
d000ac46:       389c4537                lui     a0,0x389c4
d000ac4a:       49e50513                addi    a0,a0,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
d000ac4e:       858a                    mv      a1,sp
d000ac50:       2891                    jal     d000aca4 <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:324
}
d000ac52:       4942                    lw      s2,16(sp)
d000ac54:       44d2                    lw      s1,20(sp)
d000ac56:       4462                    lw      s0,24(sp)
d000ac58:       40f2                    lw      ra,28(sp)
d000ac5a:       6105                    addi    sp,sp,32
d000ac5c:       8082                    ret

d000ac5e <flash_ctrl_data_default_cfg_set>:
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:495
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
  sec_mmio_write32(cfg_addr, reg);
}

void flash_ctrl_data_default_cfg_set(flash_ctrl_cfg_t cfg) {
d000ac5e:       1141                    addi    sp,sp,-16
d000ac60:       c606                    sw      ra,12(sp)
d000ac62:       c422                    sw      s0,8(sp)
d000ac64:       c226                    sw      s1,4(sp)
d000ac66:       842a                    mv      s0,a0
d000ac68:       c1000537                lui     a0,0xc1000
d000ac6c:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:499
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioDataDefaultCfgSet, 1);

  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000ac70:       8526                    mv      a0,s1
d000ac72:       1a6020ef                jal     ra,d000ce18 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:501
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_SCRAMBLE_EN_FIELD,
                               cfg.scrambling);
d000ac76:       400c                    lw      a1,0(s0)
d000ac78:       ff001637                lui     a2,0xff001
d000ac7c:       167d                    addi    a2,a2,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000ac7e:       8d71                    and     a0,a0,a2
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000ac80:       05f2                    slli    a1,a1,0x1c
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:503
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_ECC_EN_FIELD,
                               cfg.ecc);
d000ac82:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000ac84:       81c1                    srli    a1,a1,0x10
d000ac86:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:505
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_HE_EN_FIELD,
                               cfg.he);
d000ac88:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000ac8a:       0672                    slli    a2,a2,0x1c
d000ac8c:       8231                    srli    a2,a2,0xc
d000ac8e:       8d51                    or      a0,a0,a2
d000ac90:       05f2                    slli    a1,a1,0x1c
d000ac92:       81a1                    srli    a1,a1,0x8
d000ac94:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:506
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000ac96:       8526                    mv      a0,s1
d000ac98:       4492                    lw      s1,4(sp)
d000ac9a:       4422                    lw      s0,8(sp)
d000ac9c:       40b2                    lw      ra,12(sp)
d000ac9e:       0141                    addi    sp,sp,16
d000aca0:       22c0206f                j       d000cecc <sec_mmio_write32>

d000aca4 <flash_ctrl_info_cfg_set>:
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:510
}

void flash_ctrl_info_cfg_set(flash_ctrl_info_page_t info_page,
                             flash_ctrl_cfg_t cfg) {
d000aca4:       1141                    addi    sp,sp,-16
d000aca6:       c606                    sw      ra,12(sp)
d000aca8:       c422                    sw      s0,8(sp)
d000acaa:       c226                    sw      s1,4(sp)
d000acac:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:513
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioInfoCfgSet, 1);

  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000acae:       252d                    jal     d000b2d8 <info_cfg_regs>
d000acb0:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:515
  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000acb2:       852e                    mv      a0,a1
d000acb4:       164020ef                jal     ra,d000ce18 <sec_mmio_read32>
d000acb8:       f00105b7                lui     a1,0xf0010
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:520
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_EN_0_FIELD, kMultiBitBool4True);
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_SCRAMBLE_EN_0_FIELD,
      cfg.scrambling);
d000acbc:       4010                    lw      a2,0(s0)
d000acbe:       15c1                    addi    a1,a1,-16
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000acc0:       8d6d                    and     a0,a0,a1
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:522
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ECC_EN_0_FIELD, cfg.ecc);
d000acc2:       404c                    lw      a1,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000acc4:       0672                    slli    a2,a2,0x1c
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:524
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_HE_EN_0_FIELD, cfg.he);
d000acc6:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000acc8:       8231                    srli    a2,a2,0xc
d000acca:       05f2                    slli    a1,a1,0x1c
d000accc:       81a1                    srli    a1,a1,0x8
d000acce:       06f2                    slli    a3,a3,0x1c
d000acd0:       8291                    srli    a3,a3,0x4
d000acd2:       8d51                    or      a0,a0,a2
d000acd4:       8d4d                    or      a0,a0,a1
d000acd6:       8d55                    or      a0,a0,a3
d000acd8:       00656593                ori     a1,a0,6
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:525
  sec_mmio_write32(cfg_addr, reg);
d000acdc:       8526                    mv      a0,s1
d000acde:       4492                    lw      s1,4(sp)
d000ace0:       4422                    lw      s0,8(sp)
d000ace2:       40b2                    lw      ra,12(sp)
d000ace4:       0141                    addi    sp,sp,16
d000ace6:       1e60206f                j       d000cecc <sec_mmio_write32>

d000acea <transaction_start>:
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:87
  abs_mmio_write32(kBase + FLASH_CTRL_ADDR_REG_OFFSET, params.addr);
d000acea:                 410c                  lw      a1,0(a0)
d000acec:                 c1000637              lui     a2,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000acf0:                 d24c                  sw      a1,36(a2)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000acf2:                 4510                  lw      a2,8(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:90
      bitfield_bit32_read(params.partition, FLASH_CTRL_PARTITION_BIT_IS_INFO);
d000acf4:                 454c                  lw      a1,12(a0)
d000acf6:                 af0eb6b7              lui     a3,0xaf0eb
d000acfa:                 b8b68693              addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000acfe:          /----- 00d61b63              bne     a2,a3,d000ad14 <transaction_start+0x2a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:100
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypePage);
d000ad02:          |      4518                  lw      a4,8(a0)
d000ad04:          |      4601                  li      a2,0
d000ad06:          |  /-- 00d70663              beq     a4,a3,d000ad12 <transaction_start+0x28>
d000ad0a:          |  |   0000                  unimp
d000ad0c:          |  |   0000                  unimp
d000ad0e:          |  |   0000                  unimp
d000ad10:          |  |   0000                  unimp
d000ad12:       /--|--\-X a005                  j       d000ad32 <transaction_start+0x48>
d000ad14:       |  \----> 8032a6b7              lui     a3,0x8032a
d000ad18:       |         be968693              addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000ad1c:       |  /----- 04d61163              bne     a2,a3,d000ad5e <transaction_start+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:96
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypeBank);
d000ad20:       |  |      4510                  lw      a2,8(a0)
d000ad22:       |  |  /-- 00d60663              beq     a2,a3,d000ad2e <transaction_start+0x44>
d000ad26:       |  |  |   0000                  unimp
d000ad28:       |  |  |   0000                  unimp
d000ad2a:       |  |  |   0000                  unimp
d000ad2c:       |  |  |   0000                  unimp
d000ad2e:       |  |  \-> 08000613              li      a2,128
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:108
      bitfield_field32_write(reg, FLASH_CTRL_CONTROL_OP_FIELD, params.op_type);
d000ad32:       \--|----> 4154                  lw      a3,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:115
                               params.word_count - 1);
d000ad34:          |      4908                  lw      a0,16(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000ad36:          |      0692                  slli    a3,a3,0x4
d000ad38:          |      0306f693              andi    a3,a3,48
d000ad3c:          |      05a2                  slli    a1,a1,0x8
d000ad3e:          |      0542                  slli    a0,a0,0x10
d000ad40:          |      0fff0737              lui     a4,0xfff0
d000ad44:          |      953a                  add     a0,a0,a4
d000ad46:          |      8d79                  and     a0,a0,a4
d000ad48:          |      7005f593              andi    a1,a1,1792
d000ad4c:          |      8dd1                  or      a1,a1,a2
d000ad4e:          |      8dd5                  or      a1,a1,a3
d000ad50:          |      8d4d                  or      a0,a0,a1
d000ad52:          |      00156513              ori     a0,a0,1
d000ad56:          |      c10005b7              lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000ad5a:          |      d188                  sw      a0,32(a1)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:117
}
d000ad5c:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:104
      HARDENED_UNREACHABLE();
d000ad5e:          \----> 0000                  unimp
d000ad60:                 0000                  unimp
d000ad62:                 0000                  unimp
d000ad64:                 0000                  unimp

d000ad66 <flash_ctrl_info_read>:
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:359
                                 void *data) {
d000ad66:              7179                     addi    sp,sp,-48
d000ad68:              d606                     sw      ra,44(sp)
d000ad6a:              d422                     sw      s0,40(sp)
d000ad6c:              d226                     sw      s1,36(sp)
d000ad6e:              d04a                     sw      s2,32(sp)
d000ad70:              8436                     mv      s0,a3
d000ad72:              84b2                     mv      s1,a2
d000ad74:              892e                     mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:360
  const uint32_t addr = info_page_addr(info_page) + offset;
d000ad76:              208d                     jal     d000add8 <info_page_addr>
d000ad78:              954a                     add     a0,a0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:361
  transaction_start((transaction_params_t){
d000ad7a:              c42a                     sw      a0,8(sp)
d000ad7c:              c602                     sw      zero,12(sp)
d000ad7e:              af0eb537                 lui     a0,0xaf0eb
d000ad82:              b8b50513                 addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000ad86:              c82a                     sw      a0,16(sp)
d000ad88:              4505                     li      a0,1
d000ad8a:              ca2a                     sw      a0,20(sp)
d000ad8c:              cc26                     sw      s1,24(sp)
d000ad8e:              0028                     addi    a0,sp,8
d000ad90:              3fa9                     jal     d000acea <transaction_start>
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000ad92:       /----- c889                     beqz    s1,d000ada4 <flash_ctrl_info_read+0x3e>
d000ad94:       |      c1000537                 lui     a0,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000ad98:       |  /-> 1b052583                 lw      a1,432(a0) # c10001b0 <_stack_end+0xe0fe01b0>
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000ad9c:       |  |   c00c                     sw      a1,0(s0)
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
d000ad9e:       |  |   14fd                     addi    s1,s1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:130
    data = (char *)data + sizeof(uint32_t);
d000ada0:       |  |   0411                     addi    s0,s0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000ada2:       |  \-- f8fd                     bnez    s1,d000ad98 <flash_ctrl_info_read+0x32>
d000ada4:       \----> c10005b7                 lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ada8:          /-> 16c5a503                 lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000adac:          |   00157613                 andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000adb0:          \-- de65                     beqz    a2,d000ada8 <flash_ctrl_info_read+0x42>
d000adb2:              c10005b7                 lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000adb6:              1605a623                 sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000adba:              00257593                 andi    a1,a0,2
d000adbe:              73900513                 li      a0,1849
d000adc2:          /-- c589                     beqz    a1,d000adcc <flash_ctrl_info_read+0x66>
d000adc4:          |   02464537                 lui     a0,0x2464
d000adc8:          |   30d50513                 addi    a0,a0,781 # 246430d <_rom_ext_virtual_size+0x23e430d>
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:370
  return wait_for_done(kErrorFlashCtrlInfoRead);
d000adcc:          \-> 5902                     lw      s2,32(sp)
d000adce:              5492                     lw      s1,36(sp)
d000add0:              5422                     lw      s0,40(sp)
d000add2:              50b2                     lw      ra,44(sp)
d000add4:              6145                     addi    sp,sp,48
d000add6:              8082                     ret

d000add8 <info_page_addr>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000add8:                                                        85aa                   mv      a1,a0
d000adda:                                                        f56af637               lui     a2,0xf56af
d000adde:                                                        4ba60613               addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_page_addr():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000ade2:                                                 /----- 04b64063               blt     a2,a1,d000ae22 <info_page_addr+0x4a>
d000ade6:                                                 |      ad887637               lui     a2,0xad887
d000adea:                                                 |      d3a60613               addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000adee:                                              /--|----- 06b64863               blt     a2,a1,d000ae5e <info_page_addr+0x86>
d000adf2:                                              |  |      a4f6f637               lui     a2,0xa4f6f
d000adf6:                                              |  |      6c260693               addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000adfa:                                        /-----|--|----- 0cb6d363               bge     a3,a1,d000aec0 <info_page_addr+0xe8>
d000adfe:                                        |     |  |      6c360613               addi    a2,a2,1731
d000ae02:                            /-----------|-----|--|----- 12c58963               beq     a1,a2,d000af34 <info_page_addr+0x15c>
d000ae06:                            |           |     |  |      ad3b6637               lui     a2,0xad3b6
d000ae0a:                            |           |     |  |      bee60613               addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000ae0e:             /--------------|-----------|-----|--|----- 18c59563               bne     a1,a2,d000af98 <info_page_addr+0x1c0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000ae12:             |              |           |     |  |  /-- 00c50663               beq     a0,a2,d000ae1e <info_page_addr+0x46>
d000ae16:             |              |           |     |  |  |   0000                   unimp
d000ae18:             |              |           |     |  |  |   0000                   unimp
d000ae1a:             |              |           |     |  |  |   0000                   unimp
d000ae1c:             |              |           |     |  |  |   0000                   unimp
d000ae1e:             |              |           |     |  |  \-> 6589                   lui     a1,0x2
d000ae20:       /-----|--------------|-----------|-----|--|----- a495                   j       d000b084 <info_page_addr+0x2ac>
d000ae22:       |     |              |           |     |  \----> 238cf637               lui     a2,0x238cf
d000ae26:       |     |              |           |     |         15b60613               addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2384f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000ae2a:       |     |              |           |     |  /----- 06b64363               blt     a2,a1,d000ae90 <info_page_addr+0xb8>
d000ae2e:       |     |              |           |     |  |      fa38d637               lui     a2,0xfa38d
d000ae32:       |     |              |           |     |  |      9f560693               addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000ae36:       |     |              |           |  /--|--|----- 0ab6d363               bge     a3,a1,d000aedc <info_page_addr+0x104>
d000ae3a:       |     |              |           |  |  |  |      9f660613               addi    a2,a2,-1546
d000ae3e:       |     |              |  /--------|--|--|--|----- 10c58763               beq     a1,a2,d000af4c <info_page_addr+0x174>
d000ae42:       |     |              |  |        |  |  |  |      10adc637               lui     a2,0x10adc
d000ae46:       |     |              |  |        |  |  |  |      6aa60613               addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a5c6aa>
d000ae4a:       |     |  /-----------|--|--------|--|--|--|----- 16c59663               bne     a1,a2,d000afb6 <info_page_addr+0x1de>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000ae4e:       |     |  |           |  |        |  |  |  |  /-- 00c50663               beq     a0,a2,d000ae5a <info_page_addr+0x82>
d000ae52:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000ae54:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000ae56:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000ae58:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000ae5a:       |     |  |           |  |        |  |  |  |  \-> 6585                   lui     a1,0x1
d000ae5c:       +-----|--|-----------|--|--------|--|--|--|----- a425                   j       d000b084 <info_page_addr+0x2ac>
d000ae5e:       |     |  |           |  |        |  |  \--|----> e3ffb637               lui     a2,0xe3ffb
d000ae62:       |     |  |           |  |        |  |     |      c8560693               addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000ae66:       |     |  |           |  |        |  |  /--|----- 08b6d963               bge     a3,a1,d000aef8 <info_page_addr+0x120>
d000ae6a:       |     |  |           |  |        |  |  |  |      c8660613               addi    a2,a2,-890
d000ae6e:       |     |  |           |  |  /-----|--|--|--|----- 0ec58c63               beq     a1,a2,d000af66 <info_page_addr+0x18e>
d000ae72:       |     |  |           |  |  |     |  |  |  |      ec309637               lui     a2,0xec309
d000ae76:       |     |  |           |  |  |     |  |  |  |      46160613               addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000ae7a:       |     |  |  /--------|--|--|-----|--|--|--|----- 14c59c63               bne     a1,a2,d000afd2 <info_page_addr+0x1fa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000ae7e:       |     |  |  |        |  |  |     |  |  |  |  /-- 00c50663               beq     a0,a2,d000ae8a <info_page_addr+0xb2>
d000ae82:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000ae84:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000ae86:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000ae88:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000ae8a:       |     |  |  |        |  |  |     |  |  |  |  \-> 00085537               lui     a0,0x85
d000ae8e:       |  /--|--|--|--------|--|--|-----|--|--|--|----- aacd                   j       d000b080 <info_page_addr+0x2a8>
d000ae90:       |  |  |  |  |        |  |  |     |  |  |  \----> 5f072637               lui     a2,0x5f072
d000ae94:       |  |  |  |  |        |  |  |     |  |  |         77d60693               addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000ae98:       |  |  |  |  |        |  |  |     |  |  |  /----- 06b6df63               bge     a3,a1,d000af16 <info_page_addr+0x13e>
d000ae9c:       |  |  |  |  |        |  |  |     |  |  |  |      77e60613               addi    a2,a2,1918
d000aea0:       |  |  |  |  |        |  |  |  /--|--|--|--|----- 0ec58063               beq     a1,a2,d000af80 <info_page_addr+0x1a8>
d000aea4:       |  |  |  |  |        |  |  |  |  |  |  |  |      6c86e637               lui     a2,0x6c86e
d000aea8:       |  |  |  |  |        |  |  |  |  |  |  |  |      98060613               addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000aeac:       |  |  |  |  |     /--|--|--|--|--|--|--|--|----- 14c59263               bne     a1,a2,d000aff0 <info_page_addr+0x218>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000aeb0:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000aebc <info_page_addr+0xe4>
d000aeb4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aeb6:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aeb8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aeba:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aebc:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6511                   lui     a0,0x4
d000aebe:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a2c9                   j       d000b080 <info_page_addr+0x2a8>
d000aec0:       |  |  |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637               lui     a2,0x9dc42
d000aec4:       |  |  |  |  |     |  |  |  |  |     |  |  |      c3360613               addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000aec8:       |  |  |  |  |     |  |  |  |  |  /--|--|--|----- 14c59363               bne     a1,a2,d000b00e <info_page_addr+0x236>
d000aecc:       |  |  |  |  |     |  |  |  |  |  |  |  |  |      4581                   li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000aece:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000aeda <info_page_addr+0x102>
d000aed2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aed4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aed6:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aed8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aeda:       +--|--|--|--|-----|--|--|--|--|--|--|--|--|--\-X a26d                   j       d000b084 <info_page_addr+0x2ac>
d000aedc:       |  |  |  |  |     |  |  |  |  |  |  \--|--|----> f56af637               lui     a2,0xf56af
d000aee0:       |  |  |  |  |     |  |  |  |  |  |     |  |      4bb60613               addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000aee4:       |  |  |  |  |     |  |  |  |  |  |  /--|--|----- 14c59463               bne     a1,a2,d000b02c <info_page_addr+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000aee8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000aef4 <info_page_addr+0x11c>
d000aeec:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aeee:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aef0:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aef2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000aef4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6505                   lui     a0,0x1
d000aef6:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a269                   j       d000b080 <info_page_addr+0x2a8>
d000aef8:       |  |  |  |  |     |  |  |  |  |  |  |  \--|----> ad887637               lui     a2,0xad887
d000aefc:       |  |  |  |  |     |  |  |  |  |  |  |     |      d3b60613               addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000af00:       |  |  |  |  |  /--|--|--|--|--|--|--|-----|----- 14c59463               bne     a1,a2,d000b048 <info_page_addr+0x270>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000af04:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  /-- 00c50663               beq     a0,a2,d000af10 <info_page_addr+0x138>
d000af08:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000af0a:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000af0c:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000af0e:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000af10:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  \-> 00082537               lui     a0,0x82
d000af14:       |  +--|--|--|--|--|--|--|--|--|--|--|-----|----- a2b5                   j       d000b080 <info_page_addr+0x2a8>
d000af16:       |  |  |  |  |  |  |  |  |  |  |  |  |     \----> 238cf637               lui     a2,0x238cf
d000af1a:       |  |  |  |  |  |  |  |  |  |  |  |  |            15c60613               addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2384f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000af1e:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------- 14c59363               bne     a1,a2,d000b064 <info_page_addr+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000af22:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663               beq     a0,a2,d000af2e <info_page_addr+0x156>
d000af26:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000af28:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000af2a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000af2c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000af2e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     \-> 000815b7               lui     a1,0x81
d000af32:       +--|--|--|--|--|--|--|--|--|--|--|--|--|-------- aa89                   j       d000b084 <info_page_addr+0x2ac>
d000af34:       |  |  |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7               lui     a1,0xa4f6f
d000af38:       |  |  |  |  |  |  |     |  |  |  |  |  |         6c358593               addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
d000af3c:       |  |  |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000af48 <info_page_addr+0x170>
d000af40:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000af42:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000af44:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000af46:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000af48:       |  |  |  |  |  |  |     |  |  |  |  |  |     \-> 650d                   lui     a0,0x3
d000af4a:       |  +--|--|--|--|--|-----|--|--|--|--|--|-------- aa1d                   j       d000b080 <info_page_addr+0x2a8>
d000af4c:       |  |  |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7               lui     a1,0xfa38d
d000af50:       |  |  |  |  |  |  |        |  |  |  |  |         9f658593               addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000af54:       |  |  |  |  |  |  |        |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000af60 <info_page_addr+0x188>
d000af58:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000af5a:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000af5c:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000af5e:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000af60:       |  |  |  |  |  |  |        |  |  |  |  |     \-> 000805b7               lui     a1,0x80
d000af64:       +--|--|--|--|--|--|--------|--|--|--|--|-------- a205                   j       d000b084 <info_page_addr+0x2ac>
d000af66:       |  |  |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7               lui     a1,0xe3ffb
d000af6a:       |  |  |  |  |  |  |           |  |  |  |         c8658593               addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
d000af6e:       |  |  |  |  |  |  |           |  |  |  |     /-- 00b50663               beq     a0,a1,d000af7a <info_page_addr+0x1a2>
d000af72:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000af74:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000af76:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000af78:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000af7a:       |  |  |  |  |  |  |           |  |  |  |     \-> 000835b7               lui     a1,0x83
d000af7e:       +--|--|--|--|--|--|-----------|--|--|--|-------- a219                   j       d000b084 <info_page_addr+0x2ac>
d000af80:       |  |  |  |  |  |  |           \--|--|--|-------> 5f0725b7               lui     a1,0x5f072
d000af84:       |  |  |  |  |  |  |              |  |  |         77e58593               addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
d000af88:       |  |  |  |  |  |  |              |  |  |     /-- 00b50663               beq     a0,a1,d000af94 <info_page_addr+0x1bc>
d000af8c:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000af8e:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000af90:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000af92:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000af94:       |  |  |  |  |  |  |              |  |  |     \-> 6515                   lui     a0,0x5
d000af96:       |  +--|--|--|--|--|--------------|--|--|-------- a0ed                   j       d000b080 <info_page_addr+0x2a8>
d000af98:       |  |  \--|--|--|--|--------------|--|--|-------> ad5dd637               lui     a2,0xad5dd
d000af9c:       |  |     |  |  |  |              |  |  |         31d60613               addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000afa0:       |  |     |  |  |  |              |  |  |  /----- 0ec59463               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000afa4:       |  |     |  |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000afb0 <info_page_addr+0x1d8>
d000afa8:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000afaa:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000afac:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000afae:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000afb0:       |  |     |  |  |  |              |  |  |  |  \-> 00083537               lui     a0,0x83
d000afb4:       |  +-----|--|--|--|--------------|--|--|--|----- a0f1                   j       d000b080 <info_page_addr+0x2a8>
d000afb6:       |  |     \--|--|--|--------------|--|--|--|----> 118b6637               lui     a2,0x118b6
d000afba:       |  |        |  |  |              |  |  |  |      dbb60613               addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11835dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000afbe:       |  |        |  |  |              |  |  |  +----- 0cc59563               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000afc2:       |  |        |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000afce <info_page_addr+0x1f6>
d000afc6:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000afc8:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000afca:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000afcc:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000afce:       |  |        |  |  |              |  |  |  |  \-> 6509                   lui     a0,0x2
d000afd0:       |  +--------|--|--|--------------|--|--|--|----- a845                   j       d000b080 <info_page_addr+0x2a8>
d000afd2:       |  |        \--|--|--------------|--|--|--|----> f4f49637               lui     a2,0xf4f49
d000afd6:       |  |           |  |              |  |  |  |      c3d60613               addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000afda:       |  |           |  |              |  |  |  +----- 0ac59763               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000afde:       |  |           |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000afea <info_page_addr+0x212>
d000afe2:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000afe4:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000afe6:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000afe8:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000afea:       |  |           |  |              |  |  |  |  \-> 00084537               lui     a0,0x84
d000afee:       |  +-----------|--|--------------|--|--|--|----- a849                   j       d000b080 <info_page_addr+0x2a8>
d000aff0:       |  |           |  \--------------|--|--|--|----> 7dfbe637               lui     a2,0x7dfbe
d000aff4:       |  |           |                 |  |  |  |      f9b60613               addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000aff8:       |  |           |                 |  |  |  +----- 08c59863               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000affc:       |  |           |                 |  |  |  |  /-- 00c50663               beq     a0,a2,d000b008 <info_page_addr+0x230>
d000b000:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b002:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b004:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b006:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b008:       |  |           |                 |  |  |  |  \-> 000825b7               lui     a1,0x82
d000b00c:       +--|-----------|-----------------|--|--|--|----- a8a5                   j       d000b084 <info_page_addr+0x2ac>
d000b00e:       |  |           |                 \--|--|--|----> 9fbb8637               lui     a2,0x9fbb8
d000b012:       |  |           |                    |  |  |      40e60613               addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b016:       |  |           |                    |  |  +----- 06c59963               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b01a:       |  |           |                    |  |  |  /-- 00c50663               beq     a0,a2,d000b026 <info_page_addr+0x24e>
d000b01e:       |  |           |                    |  |  |  |   0000                   unimp
d000b020:       |  |           |                    |  |  |  |   0000                   unimp
d000b022:       |  |           |                    |  |  |  |   0000                   unimp
d000b024:       |  |           |                    |  |  |  |   0000                   unimp
d000b026:       |  |           |                    |  |  |  \-> 000845b7               lui     a1,0x84
d000b02a:       +--|-----------|--------------------|--|--|----- a8a9                   j       d000b084 <info_page_addr+0x2ac>
d000b02c:       |  |           |                    \--|--|----> f646f637               lui     a2,0xf646f
d000b030:       |  |           |                       |  |      11b60613               addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b034:       |  |           |                       |  +----- 04c59a63               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b038:       |  |           |                       |  |  /-- 00c50663               beq     a0,a2,d000b044 <info_page_addr+0x26c>
d000b03c:       |  |           |                       |  |  |   0000                   unimp
d000b03e:       |  |           |                       |  |  |   0000                   unimp
d000b040:       |  |           |                       |  |  |   0000                   unimp
d000b042:       |  |           |                       |  |  |   0000                   unimp
d000b044:       |  |           |                       |  |  \-> 658d                   lui     a1,0x3
d000b046:       +--|-----------|-----------------------|--|----- a83d                   j       d000b084 <info_page_addr+0x2ac>
d000b048:       |  |           \-----------------------|--|----> dd7f3637               lui     a2,0xdd7f3
d000b04c:       |  |                                   |  |      4dc60613               addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b050:       |  |                                   |  +----- 02c59c63               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b054:       |  |                                   |  |  /-- 00c50663               beq     a0,a2,d000b060 <info_page_addr+0x288>
d000b058:       |  |                                   |  |  |   0000                   unimp
d000b05a:       |  |                                   |  |  |   0000                   unimp
d000b05c:       |  |                                   |  |  |   0000                   unimp
d000b05e:       |  |                                   |  |  |   0000                   unimp
d000b060:       |  |                                   |  |  \-> 6591                   lui     a1,0x4
d000b062:       +--|-----------------------------------|--|----- a00d                   j       d000b084 <info_page_addr+0x2ac>
d000b064:       |  |                                   \--|----> 389c4637               lui     a2,0x389c4
d000b068:       |  |                                      |      49e60613               addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b06c:       |  |                                      +----- 00c59e63               bne     a1,a2,d000b088 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b070:       |  |                                      |  /-- 00c50663               beq     a0,a2,d000b07c <info_page_addr+0x2a4>
d000b074:       |  |                                      |  |   0000                   unimp
d000b076:       |  |                                      |  |   0000                   unimp
d000b078:       |  |                                      |  |   0000                   unimp
d000b07a:       |  |                                      |  |   0000                   unimp
d000b07c:       |  |                                      |  \-> 00081537               lui     a0,0x81
d000b080:       |  \--------------------------------------|----> 80050593               addi    a1,a0,-2048 # 80800 <_rom_ext_virtual_size+0x800>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:234
}
d000b084:       \-----------------------------------------|----> 852e                   mv      a0,a1
d000b086:                                                 |      8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:230
      HARDENED_UNREACHABLE();
d000b088:                                                 \----> 0000                   unimp
d000b08a:                                                        0000                   unimp
d000b08c:                                                        0000                   unimp
d000b08e:                                                        0000                   unimp

d000b090 <flash_ctrl_data_write>:
flash_ctrl_data_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:374
                                  const void *data) {
d000b090:       034646b7                lui     a3,0x3464
d000b094:       30d68713                addi    a4,a3,781 # 346430d <_rom_ext_virtual_size+0x33e430d>
d000b098:       86b2                    mv      a3,a2
d000b09a:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:375
  return write(addr, kFlashCtrlPartitionData, word_count, data,
d000b09c:       4581                    li      a1,0
d000b09e:       a009                    j       d000b0a0 <write>

d000b0a0 <write>:
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:180
                         rom_error_t error) {
d000b0a0:                    7139                       addi    sp,sp,-64
d000b0a2:                    de06                       sw      ra,60(sp)
d000b0a4:                    dc22                       sw      s0,56(sp)
d000b0a6:                    da26                       sw      s1,52(sp)
d000b0a8:                    d84a                       sw      s2,48(sp)
d000b0aa:                    d64e                       sw      s3,44(sp)
d000b0ac:                    d452                       sw      s4,40(sp)
d000b0ae:                    d256                       sw      s5,36(sp)
d000b0b0:                    d05a                       sw      s6,32(sp)
d000b0b2:                    ce5e                       sw      s7,28(sp)
d000b0b4:                    cc62                       sw      s8,24(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b0b6:       /----------- ce35                       beqz    a2,d000b132 <write+0x92>
d000b0b8:       |            893a                       mv      s2,a4
d000b0ba:       |            8a36                       mv      s4,a3
d000b0bc:       |            8432                       mv      s0,a2
d000b0be:       |            89ae                       mv      s3,a1
d000b0c0:       |            8baa                       mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:187
      kWindowWordCount - ((addr / sizeof(uint32_t)) % kWindowWordCount);
d000b0c2:       |            8109                       srli    a0,a0,0x2
d000b0c4:       |            893d                       andi    a0,a0,15
d000b0c6:       |            45c1                       li      a1,16
d000b0c8:       |            40a58533           sub     a0,a1,a0
d000b0cc:       |            4a85                       li      s5,1
d000b0ce:       |            af0eb5b7           lui     a1,0xaf0eb
d000b0d2:       |            b8b58b13           addi    s6,a1,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b0d6:       |            c10004b7           lui     s1,0xc1000
d000b0da:       |  /-------> 8c22                       mv      s8,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:191
        word_count < window_word_count ? word_count : window_word_count;
d000b0dc:       |  |     /-- 00a46363           bltu    s0,a0,d000b0e2 <write+0x42>
d000b0e0:       |  |     |   8c2a                       mv      s8,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:193
    transaction_start((transaction_params_t){
d000b0e2:       |  |     \-> c05e                       sw      s7,0(sp)
d000b0e4:       |  |         c256                       sw      s5,4(sp)
d000b0e6:       |  |         c45a                       sw      s6,8(sp)
d000b0e8:       |  |         c64e                       sw      s3,12(sp)
d000b0ea:       |  |         c862                       sw      s8,16(sp)
d000b0ec:       |  |         850a                       mv      a0,sp
d000b0ee:       |  |         3ef5                       jal     d000acea <transaction_start>
d000b0f0:       |  |         8562                       mv      a0,s8
d000b0f2:       |  |         85d2                       mv      a1,s4
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000b0f4:       |  |     /-> 4190                       lw      a2,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b0f6:       |  |     |   1ac4a623           sw      a2,428(s1) # c10001ac <_stack_end+0xe0fe01ac>
fifo_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b0fa:       |  |     |   157d                       addi    a0,a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:145
    data = (const char *)data + sizeof(uint32_t);
d000b0fc:       |  |     |   0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b0fe:       |  |     \-- f97d                       bnez    a0,d000b0f4 <write+0x54>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b100:       |  |     /-> 16c4a503           lw      a0,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b104:       |  |     |   00157593           andi    a1,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b108:       |  |     \-- dde5                       beqz    a1,d000b100 <write+0x60>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b10a:       |  |         1604a623           sw      zero,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b10e:       |  |         00257613           andi    a2,a0,2
d000b112:       |  |         73900593           li      a1,1849
d000b116:       |  |         73900513           li      a0,1849
d000b11a:       |  |     /-- c211                       beqz    a2,d000b11e <write+0x7e>
d000b11c:       |  |     |   854a                       mv      a0,s2
d000b11e:       |  |  /--\-X 00b51c63           bne     a0,a1,d000b136 <write+0x96>
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:205
    addr += window_word_count * sizeof(uint32_t);
d000b122:       |  |  |      002c1513           slli    a0,s8,0x2
d000b126:       |  |  |      9baa                       add     s7,s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:206
    data = (const char *)data + window_word_count * sizeof(uint32_t);
d000b128:       |  |  |      9a2a                       add     s4,s4,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:207
    word_count -= window_word_count;
d000b12a:       |  |  |      41840433           sub     s0,s0,s8
d000b12e:       |  |  |      4541                       li      a0,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b130:       |  \--|----- f44d                       bnez    s0,d000b0da <write+0x3a>
d000b132:       \-----|----> 73900513           li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:212
}
d000b136:             \----> 4c62                       lw      s8,24(sp)
d000b138:                    4bf2                       lw      s7,28(sp)
d000b13a:                    5b02                       lw      s6,32(sp)
d000b13c:                    5a92                       lw      s5,36(sp)
d000b13e:                    5a22                       lw      s4,40(sp)
d000b140:                    59b2                       lw      s3,44(sp)
d000b142:                    5942                       lw      s2,48(sp)
d000b144:                    54d2                       lw      s1,52(sp)
d000b146:                    5462                       lw      s0,56(sp)
d000b148:                    50f2                       lw      ra,60(sp)
d000b14a:                    6121                       addi    sp,sp,64
d000b14c:                    8082                       ret

d000b14e <flash_ctrl_data_erase>:
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:388
                                  flash_ctrl_erase_type_t erase_type) {
d000b14e:           1101                        addi    sp,sp,-32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:389
  transaction_start((transaction_params_t){
d000b150:           ce06                        sw      ra,28(sp)
d000b152:           c42a                        sw      a0,8(sp)
d000b154:           4509                        li      a0,2
d000b156:           c62a                        sw      a0,12(sp)
d000b158:           c82e                        sw      a1,16(sp)
d000b15a:           ca02                        sw      zero,20(sp)
d000b15c:           4505                        li      a0,1
d000b15e:           cc2a                        sw      a0,24(sp)
d000b160:           0028                        addi    a0,sp,8
d000b162:           3661                        jal     d000acea <transaction_start>
d000b164:           c10005b7            lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b168:       /-> 16c5a503            lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b16c:       |   00157613            andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b170:       \-- de65                        beqz    a2,d000b168 <flash_ctrl_data_erase+0x1a>
d000b172:           c10005b7            lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b176:           1605a623            sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b17a:           00257593            andi    a1,a0,2
d000b17e:           73900513            li      a0,1849
d000b182:       /-- c589                        beqz    a1,d000b18c <flash_ctrl_data_erase+0x3e>
d000b184:       |   05464537            lui     a0,0x5464
d000b188:       |   30d50513            addi    a0,a0,781 # 546430d <_rom_ext_virtual_size+0x53e430d>
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:397
  return wait_for_done(kErrorFlashCtrlDataErase);
d000b18c:       \-> 40f2                        lw      ra,28(sp)
d000b18e:           6105                        addi    sp,sp,32
d000b190:           8082                        ret

d000b192 <flash_ctrl_data_erase_verify>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b192:                    862e                       mv      a2,a1
d000b194:                    af0eb6b7           lui     a3,0xaf0eb
d000b198:                    b8b68693           addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b19c:             /----- 00d61e63           bne     a2,a3,d000b1b8 <flash_ctrl_data_erase_verify+0x26>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:416
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypePage);
d000b1a0:             |  /-- 00d58663           beq     a1,a3,d000b1ac <flash_ctrl_data_erase_verify+0x1a>
d000b1a4:             |  |   0000                       unimp
d000b1a6:             |  |   0000                       unimp
d000b1a8:             |  |   0000                       unimp
d000b1aa:             |  |   0000                       unimp
d000b1ac:             |  \-> 0c600593           li      a1,198
d000b1b0:             |      6605                       lui     a2,0x1
d000b1b2:             |      80060893           addi    a7,a2,-2048 # 800 <_epmp_reset_rx_size>
d000b1b6:          /--|----- a00d                       j       d000b1d8 <flash_ctrl_data_erase_verify+0x46>
d000b1b8:          |  \----> 8032a6b7           lui     a3,0x8032a
d000b1bc:          |         be968693           addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b1c0:       /--|-------- 06d61d63           bne     a2,a3,d000b23a <flash_ctrl_data_erase_verify+0xa8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:411
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypeBank);
d000b1c4:       |  |     /-- 00d58663           beq     a1,a3,d000b1d0 <flash_ctrl_data_erase_verify+0x3e>
d000b1c8:       |  |     |   0000                       unimp
d000b1ca:       |  |     |   0000                       unimp
d000b1cc:       |  |     |   0000                       unimp
d000b1ce:       |  |     |   0000                       unimp
d000b1d0:       |  |     \-> 000808b7           lui     a7,0x80
d000b1d4:       |  |         8c688593           addi    a1,a7,-1850 # 7f8c6 <WDOG_BARK_THOLD+0x489de>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b1d8:       |  \-------> 4701                       li      a4,0
d000b1da:       |            587d                       li      a6,-1
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b1dc:       |     /----- 03177463           bgeu    a4,a7,d000b204 <flash_ctrl_data_erase_verify+0x72>
d000b1e0:       |     |      4701                       li      a4,0
d000b1e2:       |     |      411007b3           neg     a5,a7
d000b1e6:       |     |      8d7d                       and     a0,a0,a5
d000b1e8:       |     |      f00007b7           lui     a5,0xf0000
d000b1ec:       |     |      97aa                       add     a5,a5,a0
d000b1ee:       |     |      557d                       li      a0,-1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b1f0:       |     |  /-> 00e786b3           add     a3,a5,a4
d000b1f4:       |     |  |   4294                       lw      a3,0(a3)
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
d000b1f6:       |     |  |   0711                       addi    a4,a4,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:431
    mask &= word;
d000b1f8:       |     |  |   8d75                       and     a0,a0,a3
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b1fa:       |     |  |   863a                       mv      a2,a4
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:432
    error &= word;
d000b1fc:       |     |  |   8df5                       and     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b1fe:       |     |  \-- ff1669e3           bltu    a2,a7,d000b1f0 <flash_ctrl_data_erase_verify+0x5e>
d000b202:       |     |  /-- a019                       j       d000b208 <flash_ctrl_data_erase_verify+0x76>
d000b204:       |     \--|-> 4701                       li      a4,0
d000b206:       |        |   557d                       li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:434
  HARDENED_CHECK_EQ(i, byte_count);
d000b208:       |     /--\-X 01170663           beq     a4,a7,d000b214 <flash_ctrl_data_erase_verify+0x82>
d000b20c:       |     |      0000                       unimp
d000b20e:       |     |      0000                       unimp
d000b210:       |     |      0000                       unimp
d000b212:       |     |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b214:       |     \----> 862a                       mv      a2,a0
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:436
  if (launder32(mask) == kFlashCtrlErasedWord) {
d000b216:       |        /-- 01060763           beq     a2,a6,d000b224 <flash_ctrl_data_erase_verify+0x92>
d000b21a:       |        |   07464537           lui     a0,0x7464
d000b21e:       |        |   30d50513           addi    a0,a0,781 # 746430d <_rom_ext_virtual_size+0x73e430d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b222:       |        |   8082                       ret
d000b224:       |        \-> 567d                       li      a2,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:437
    HARDENED_CHECK_EQ(mask, kFlashCtrlErasedWord);
d000b226:       |        /-- 00c50663           beq     a0,a2,d000b232 <flash_ctrl_data_erase_verify+0xa0>
d000b22a:       |        |   0000                       unimp
d000b22c:       |        |   0000                       unimp
d000b22e:       |        |   0000                       unimp
d000b230:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:438
    return error ^ (byte_count - 1);
d000b232:       |        \-> fff88513           addi    a0,a7,-1
d000b236:       |            8d2d                       xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b238:       |            8082                       ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:421
      HARDENED_UNREACHABLE();
d000b23a:       \----------> 0000                       unimp
d000b23c:                    0000                       unimp
d000b23e:                    0000                       unimp
d000b240:                    0000                       unimp

d000b242 <flash_ctrl_exec_set>:
flash_ctrl_exec_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:458
void flash_ctrl_exec_set(uint32_t exec_val) {
d000b242:       c10005b7                lui     a1,0xc1000
d000b246:       05d1                    addi    a1,a1,20
d000b248:       862a                    mv      a2,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:460
  sec_mmio_write32(kBase + FLASH_CTRL_EXEC_REG_OFFSET, exec_val);
d000b24a:       852e                    mv      a0,a1
d000b24c:       85b2                    mv      a1,a2
d000b24e:       47f0106f                j       d000cecc <sec_mmio_write32>

d000b252 <flash_ctrl_data_default_perms_set>:
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:463
void flash_ctrl_data_default_perms_set(flash_ctrl_perms_t perms) {
d000b252:       1141                    addi    sp,sp,-16
d000b254:       c606                    sw      ra,12(sp)
d000b256:       c422                    sw      s0,8(sp)
d000b258:       c226                    sw      s1,4(sp)
d000b25a:       842a                    mv      s0,a0
d000b25c:       c1000537                lui     a0,0xc1000
d000b260:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:467
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000b264:       8526                    mv      a0,s1
d000b266:       3b3010ef                jal     ra,d000ce18 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:469
                               perms.read);
d000b26a:       400c                    lw      a1,0(s0)
d000b26c:       767d                    lui     a2,0xfffff
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b26e:       8d71                    and     a0,a0,a2
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:471
                               perms.write);
d000b270:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b272:       89bd                    andi    a1,a1,15
d000b274:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:473
                               perms.erase);
d000b276:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b278:       0612                    slli    a2,a2,0x4
d000b27a:       0f067613                andi    a2,a2,240
d000b27e:       8d51                    or      a0,a0,a2
d000b280:       05f2                    slli    a1,a1,0x1c
d000b282:       81d1                    srli    a1,a1,0x14
d000b284:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:474
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000b286:       8526                    mv      a0,s1
d000b288:       4492                    lw      s1,4(sp)
d000b28a:       4422                    lw      s0,8(sp)
d000b28c:       40b2                    lw      ra,12(sp)
d000b28e:       0141                    addi    sp,sp,16
d000b290:       43d0106f                j       d000cecc <sec_mmio_write32>

d000b294 <flash_ctrl_info_perms_set>:
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:478
                               flash_ctrl_perms_t perms) {
d000b294:       1141                    addi    sp,sp,-16
d000b296:       c606                    sw      ra,12(sp)
d000b298:       c422                    sw      s0,8(sp)
d000b29a:       c226                    sw      s1,4(sp)
d000b29c:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:481
  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000b29e:       282d                    jal     d000b2d8 <info_cfg_regs>
d000b2a0:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:483
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000b2a2:       852e                    mv      a0,a1
d000b2a4:       375010ef                jal     ra,d000ce18 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:487
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_RD_EN_0_FIELD, perms.read);
d000b2a8:       400c                    lw      a1,0(s0)
d000b2aa:       7641                    lui     a2,0xffff0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b2ac:       8d71                    and     a0,a0,a2
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:489
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_PROG_EN_0_FIELD, perms.write);
d000b2ae:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b2b0:       0592                    slli    a1,a1,0x4
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:491
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
d000b2b2:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b2b4:       0f05f593                andi    a1,a1,240
d000b2b8:       0672                    slli    a2,a2,0x1c
d000b2ba:       8251                    srli    a2,a2,0x14
d000b2bc:       06f2                    slli    a3,a3,0x1c
d000b2be:       82c1                    srli    a3,a3,0x10
d000b2c0:       8d4d                    or      a0,a0,a1
d000b2c2:       8d51                    or      a0,a0,a2
d000b2c4:       8d55                    or      a0,a0,a3
d000b2c6:       00656593                ori     a1,a0,6
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:492
  sec_mmio_write32(cfg_addr, reg);
d000b2ca:       8526                    mv      a0,s1
d000b2cc:       4492                    lw      s1,4(sp)
d000b2ce:       4422                    lw      s0,8(sp)
d000b2d0:       40b2                    lw      ra,12(sp)
d000b2d2:       0141                    addi    sp,sp,16
d000b2d4:       3f90106f                j       d000cecc <sec_mmio_write32>

d000b2d8 <info_cfg_regs>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b2d8:                                                  85aa                 mv      a1,a0
d000b2da:                                                  f56af637             lui     a2,0xf56af
d000b2de:                                                  4ba60613             addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_cfg_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b2e2:                                           /----- 04b64563             blt     a2,a1,d000b32c <info_cfg_regs+0x54>
d000b2e6:                                           |      ad887637             lui     a2,0xad887
d000b2ea:                                           |      d3a60613             addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b2ee:                                        /--|----- 08b64263             blt     a2,a1,d000b372 <info_cfg_regs+0x9a>
d000b2f2:                                        |  |      a4f6f637             lui     a2,0xa4f6f
d000b2f6:                                        |  |      6c260693             addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b2fa:                                  /-----|--|----- 0eb6d663             bge     a3,a1,d000b3e6 <info_cfg_regs+0x10e>
d000b2fe:                                  |     |  |      6c360613             addi    a2,a2,1731
d000b302:                      /-----------|-----|--|----- 16c58e63             beq     a1,a2,d000b47e <info_cfg_regs+0x1a6>
d000b306:                      |           |     |  |      ad3b6637             lui     a2,0xad3b6
d000b30a:                      |           |     |  |      bee60613             addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b30e:       /--------------|-----------|-----|--|----- 1ec59c63             bne     a1,a2,d000b506 <info_cfg_regs+0x22e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b312:       |              |           |     |  |  /-- 00c50663             beq     a0,a2,d000b31e <info_cfg_regs+0x46>
d000b316:       |              |           |     |  |  |   0000                 unimp
d000b318:       |              |           |     |  |  |   0000                 unimp
d000b31a:       |              |           |     |  |  |   0000                 unimp
d000b31c:       |              |           |     |  |  |   0000                 unimp
d000b31e:       |              |           |     |  |  \-> c1000537             lui     a0,0xc1000
d000b322:       |              |           |     |  |      0cc50593             addi    a1,a0,204 # c10000cc <_stack_end+0xe0fe00cc>
d000b326:       |              |           |     |  |      0a450513             addi    a0,a0,164
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b32a:       |              |           |     |  |      8082                 ret
d000b32c:       |              |           |     |  \----> 238cf637             lui     a2,0x238cf
d000b330:       |              |           |     |         15b60613             addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2384f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b334:       |              |           |     |  /----- 06b64c63             blt     a2,a1,d000b3ac <info_cfg_regs+0xd4>
d000b338:       |              |           |     |  |      fa38d637             lui     a2,0xfa38d
d000b33c:       |              |           |     |  |      9f560693             addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b340:       |              |           |  /--|--|----- 0cb6d663             bge     a3,a1,d000b40c <info_cfg_regs+0x134>
d000b344:       |              |           |  |  |  |      9f660613             addi    a2,a2,-1546
d000b348:       |              |  /--------|--|--|--|----- 14c58c63             beq     a1,a2,d000b4a0 <info_cfg_regs+0x1c8>
d000b34c:       |              |  |        |  |  |  |      10adc637             lui     a2,0x10adc
d000b350:       |              |  |        |  |  |  |      6aa60613             addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a5c6aa>
d000b354:       |  /-----------|--|--------|--|--|--|----- 1cc59c63             bne     a1,a2,d000b52c <info_cfg_regs+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b358:       |  |           |  |        |  |  |  |  /-- 00c50663             beq     a0,a2,d000b364 <info_cfg_regs+0x8c>
d000b35c:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b35e:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b360:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b362:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b364:       |  |           |  |        |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b368:       |  |           |  |        |  |  |  |      0c450593             addi    a1,a0,196 # c10000c4 <_stack_end+0xe0fe00c4>
d000b36c:       |  |           |  |        |  |  |  |      09c50513             addi    a0,a0,156
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b370:       |  |           |  |        |  |  |  |      8082                 ret
d000b372:       |  |           |  |        |  |  \--|----> e3ffb637             lui     a2,0xe3ffb
d000b376:       |  |           |  |        |  |     |      c8560693             addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b37a:       |  |           |  |        |  |  /--|----- 0ab6dc63             bge     a3,a1,d000b432 <info_cfg_regs+0x15a>
d000b37e:       |  |           |  |        |  |  |  |      c8660613             addi    a2,a2,-890
d000b382:       |  |           |  |  /-----|--|--|--|----- 14c58063             beq     a1,a2,d000b4c2 <info_cfg_regs+0x1ea>
d000b386:       |  |           |  |  |     |  |  |  |      ec309637             lui     a2,0xec309
d000b38a:       |  |           |  |  |     |  |  |  |      46160613             addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b38e:       |  |  /--------|--|--|-----|--|--|--|----- 1cc59263             bne     a1,a2,d000b552 <info_cfg_regs+0x27a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b392:       |  |  |        |  |  |     |  |  |  |  /-- 00c50663             beq     a0,a2,d000b39e <info_cfg_regs+0xc6>
d000b396:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b398:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b39a:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b39c:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b39e:       |  |  |        |  |  |     |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b3a2:       |  |  |        |  |  |     |  |  |  |      14850593             addi    a1,a0,328 # c1000148 <_stack_end+0xe0fe0148>
d000b3a6:       |  |  |        |  |  |     |  |  |  |      12050513             addi    a0,a0,288
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b3aa:       |  |  |        |  |  |     |  |  |  |      8082                 ret
d000b3ac:       |  |  |        |  |  |     |  |  |  \----> 5f072637             lui     a2,0x5f072
d000b3b0:       |  |  |        |  |  |     |  |  |         77d60693             addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b3b4:       |  |  |        |  |  |     |  |  |  /----- 0ab6d263             bge     a3,a1,d000b458 <info_cfg_regs+0x180>
d000b3b8:       |  |  |        |  |  |     |  |  |  |      77e60613             addi    a2,a2,1918
d000b3bc:       |  |  |        |  |  |  /--|--|--|--|----- 12c58463             beq     a1,a2,d000b4e4 <info_cfg_regs+0x20c>
d000b3c0:       |  |  |        |  |  |  |  |  |  |  |      6c86e637             lui     a2,0x6c86e
d000b3c4:       |  |  |        |  |  |  |  |  |  |  |      98060613             addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b3c8:       |  |  |     /--|--|--|--|--|--|--|--|----- 1ac59863             bne     a1,a2,d000b578 <info_cfg_regs+0x2a0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b3cc:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b3d8 <info_cfg_regs+0x100>
d000b3d0:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3d2:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3d4:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3d6:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3d8:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b3dc:       |  |  |     |  |  |  |  |  |  |  |  |      0d850593             addi    a1,a0,216 # c10000d8 <_stack_end+0xe0fe00d8>
d000b3e0:       |  |  |     |  |  |  |  |  |  |  |  |      0b050513             addi    a0,a0,176
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b3e4:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b3e6:       |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637             lui     a2,0x9dc42
d000b3ea:       |  |  |     |  |  |  |  |     |  |  |      c3360613             addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b3ee:       |  |  |     |  |  |  |  |  /--|--|--|----- 1ac59863             bne     a1,a2,d000b59e <info_cfg_regs+0x2c6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b3f2:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b3fe <info_cfg_regs+0x126>
d000b3f6:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3f8:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3fa:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3fc:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b3fe:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b402:       |  |  |     |  |  |  |  |  |  |  |  |      0bc50593             addi    a1,a0,188 # c10000bc <_stack_end+0xe0fe00bc>
d000b406:       |  |  |     |  |  |  |  |  |  |  |  |      09450513             addi    a0,a0,148
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b40a:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b40c:       |  |  |     |  |  |  |  |  |  \--|--|----> f56af637             lui     a2,0xf56af
d000b410:       |  |  |     |  |  |  |  |  |     |  |      4bb60613             addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b414:       |  |  |     |  |  |  |  |  |  /--|--|----- 1ac59863             bne     a1,a2,d000b5c4 <info_cfg_regs+0x2ec>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b418:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b424 <info_cfg_regs+0x14c>
d000b41c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b41e:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b420:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b422:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b424:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b428:       |  |  |     |  |  |  |  |  |  |  |  |      0c050593             addi    a1,a0,192 # c10000c0 <_stack_end+0xe0fe00c0>
d000b42c:       |  |  |     |  |  |  |  |  |  |  |  |      09850513             addi    a0,a0,152
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b430:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b432:       |  |  |     |  |  |  |  |  |  |  \--|----> ad887637             lui     a2,0xad887
d000b436:       |  |  |     |  |  |  |  |  |  |     |      d3b60613             addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b43a:       |  |  |     |  |  |  |  |  |  |  /--|----- 1ac59863             bne     a1,a2,d000b5ea <info_cfg_regs+0x312>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b43e:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b44a <info_cfg_regs+0x172>
d000b442:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b444:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b446:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b448:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b44a:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b44e:       |  |  |     |  |  |  |  |  |  |  |  |      13050593             addi    a1,a0,304 # c1000130 <_stack_end+0xe0fe0130>
d000b452:       |  |  |     |  |  |  |  |  |  |  |  |      10850513             addi    a0,a0,264
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b456:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b458:       |  |  |     |  |  |  |  |  |  |  |  \----> 238cf637             lui     a2,0x238cf
d000b45c:       |  |  |     |  |  |  |  |  |  |  |         15c60613             addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2384f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b460:       |  |  |  /--|--|--|--|--|--|--|--|-------- 1ac59863             bne     a1,a2,d000b610 <info_cfg_regs+0x338>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b464:       |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663             beq     a0,a2,d000b470 <info_cfg_regs+0x198>
d000b468:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b46a:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b46c:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b46e:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b470:       |  |  |  |  |  |  |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b474:       |  |  |  |  |  |  |  |  |  |  |  |         12c50593             addi    a1,a0,300 # c100012c <_stack_end+0xe0fe012c>
d000b478:       |  |  |  |  |  |  |  |  |  |  |  |         10450513             addi    a0,a0,260
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b47c:       |  |  |  |  |  |  |  |  |  |  |  |         8082                 ret
d000b47e:       |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7             lui     a1,0xa4f6f
d000b482:       |  |  |  |  |     |  |  |  |  |  |         6c358593             addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b486:       |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b492 <info_cfg_regs+0x1ba>
d000b48a:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b48c:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b48e:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b490:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b492:       |  |  |  |  |     |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b496:       |  |  |  |  |     |  |  |  |  |  |         0d050593             addi    a1,a0,208 # c10000d0 <_stack_end+0xe0fe00d0>
d000b49a:       |  |  |  |  |     |  |  |  |  |  |         0a850513             addi    a0,a0,168
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b49e:       |  |  |  |  |     |  |  |  |  |  |         8082                 ret
d000b4a0:       |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7             lui     a1,0xfa38d
d000b4a4:       |  |  |  |  |        |  |  |  |  |         9f658593             addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b4a8:       |  |  |  |  |        |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b4b4 <info_cfg_regs+0x1dc>
d000b4ac:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b4ae:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b4b0:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b4b2:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b4b4:       |  |  |  |  |        |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b4b8:       |  |  |  |  |        |  |  |  |  |         12450593             addi    a1,a0,292 # c1000124 <_stack_end+0xe0fe0124>
d000b4bc:       |  |  |  |  |        |  |  |  |  |         0fc50513             addi    a0,a0,252
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b4c0:       |  |  |  |  |        |  |  |  |  |         8082                 ret
d000b4c2:       |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7             lui     a1,0xe3ffb
d000b4c6:       |  |  |  |  |           |  |  |  |         c8658593             addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b4ca:       |  |  |  |  |           |  |  |  |     /-- 00b50663             beq     a0,a1,d000b4d6 <info_cfg_regs+0x1fe>
d000b4ce:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b4d0:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b4d2:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b4d4:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b4d6:       |  |  |  |  |           |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b4da:       |  |  |  |  |           |  |  |  |         13c50593             addi    a1,a0,316 # c100013c <_stack_end+0xe0fe013c>
d000b4de:       |  |  |  |  |           |  |  |  |         11450513             addi    a0,a0,276
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b4e2:       |  |  |  |  |           |  |  |  |         8082                 ret
d000b4e4:       |  |  |  |  |           \--|--|--|-------> 5f0725b7             lui     a1,0x5f072
d000b4e8:       |  |  |  |  |              |  |  |         77e58593             addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b4ec:       |  |  |  |  |              |  |  |     /-- 00b50663             beq     a0,a1,d000b4f8 <info_cfg_regs+0x220>
d000b4f0:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b4f2:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b4f4:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b4f6:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b4f8:       |  |  |  |  |              |  |  |     \-> c1000537             lui     a0,0xc1000
d000b4fc:       |  |  |  |  |              |  |  |         0e050593             addi    a1,a0,224 # c10000e0 <_stack_end+0xe0fe00e0>
d000b500:       |  |  |  |  |              |  |  |         0b850513             addi    a0,a0,184
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b504:       |  |  |  |  |              |  |  |         8082                 ret
d000b506:       \--|--|--|--|--------------|--|--|-------> ad5dd637             lui     a2,0xad5dd
d000b50a:          |  |  |  |              |  |  |         31d60613             addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b50e:          |  |  |  |              |  |  |  /----- 12c59463             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b512:          |  |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b51e <info_cfg_regs+0x246>
d000b516:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b518:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b51a:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b51c:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b51e:          |  |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b522:          |  |  |  |              |  |  |  |      13850593             addi    a1,a0,312 # c1000138 <_stack_end+0xe0fe0138>
d000b526:          |  |  |  |              |  |  |  |      11050513             addi    a0,a0,272
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b52a:          |  |  |  |              |  |  |  |      8082                 ret
d000b52c:          \--|--|--|--------------|--|--|--|----> 118b6637             lui     a2,0x118b6
d000b530:             |  |  |              |  |  |  |      dbb60613             addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11835dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b534:             |  |  |              |  |  |  +----- 10c59163             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b538:             |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b544 <info_cfg_regs+0x26c>
d000b53c:             |  |  |              |  |  |  |  |   0000                 unimp
d000b53e:             |  |  |              |  |  |  |  |   0000                 unimp
d000b540:             |  |  |              |  |  |  |  |   0000                 unimp
d000b542:             |  |  |              |  |  |  |  |   0000                 unimp
d000b544:             |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b548:             |  |  |              |  |  |  |      0c850593             addi    a1,a0,200 # c10000c8 <_stack_end+0xe0fe00c8>
d000b54c:             |  |  |              |  |  |  |      0a050513             addi    a0,a0,160
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b550:             |  |  |              |  |  |  |      8082                 ret
d000b552:             \--|--|--------------|--|--|--|----> f4f49637             lui     a2,0xf4f49
d000b556:                |  |              |  |  |  |      c3d60613             addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b55a:                |  |              |  |  |  +----- 0cc59e63             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b55e:                |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b56a <info_cfg_regs+0x292>
d000b562:                |  |              |  |  |  |  |   0000                 unimp
d000b564:                |  |              |  |  |  |  |   0000                 unimp
d000b566:                |  |              |  |  |  |  |   0000                 unimp
d000b568:                |  |              |  |  |  |  |   0000                 unimp
d000b56a:                |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b56e:                |  |              |  |  |  |      14050593             addi    a1,a0,320 # c1000140 <_stack_end+0xe0fe0140>
d000b572:                |  |              |  |  |  |      11850513             addi    a0,a0,280
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b576:                |  |              |  |  |  |      8082                 ret
d000b578:                |  \--------------|--|--|--|----> 7dfbe637             lui     a2,0x7dfbe
d000b57c:                |                 |  |  |  |      f9b60613             addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b580:                |                 |  |  |  +----- 0ac59b63             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b584:                |                 |  |  |  |  /-- 00c50663             beq     a0,a2,d000b590 <info_cfg_regs+0x2b8>
d000b588:                |                 |  |  |  |  |   0000                 unimp
d000b58a:                |                 |  |  |  |  |   0000                 unimp
d000b58c:                |                 |  |  |  |  |   0000                 unimp
d000b58e:                |                 |  |  |  |  |   0000                 unimp
d000b590:                |                 |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b594:                |                 |  |  |  |      13450593             addi    a1,a0,308 # c1000134 <_stack_end+0xe0fe0134>
d000b598:                |                 |  |  |  |      10c50513             addi    a0,a0,268
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b59c:                |                 |  |  |  |      8082                 ret
d000b59e:                |                 \--|--|--|----> 9fbb8637             lui     a2,0x9fbb8
d000b5a2:                |                    |  |  |      40e60613             addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5a6:                |                    |  |  +----- 08c59863             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b5aa:                |                    |  |  |  /-- 00c50663             beq     a0,a2,d000b5b6 <info_cfg_regs+0x2de>
d000b5ae:                |                    |  |  |  |   0000                 unimp
d000b5b0:                |                    |  |  |  |   0000                 unimp
d000b5b2:                |                    |  |  |  |   0000                 unimp
d000b5b4:                |                    |  |  |  |   0000                 unimp
d000b5b6:                |                    |  |  |  \-> c1000537             lui     a0,0xc1000
d000b5ba:                |                    |  |  |      14450593             addi    a1,a0,324 # c1000144 <_stack_end+0xe0fe0144>
d000b5be:                |                    |  |  |      11c50513             addi    a0,a0,284
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b5c2:                |                    |  |  |      8082                 ret
d000b5c4:                |                    \--|--|----> f646f637             lui     a2,0xf646f
d000b5c8:                |                       |  |      11b60613             addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5cc:                |                       |  +----- 06c59563             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b5d0:                |                       |  |  /-- 00c50663             beq     a0,a2,d000b5dc <info_cfg_regs+0x304>
d000b5d4:                |                       |  |  |   0000                 unimp
d000b5d6:                |                       |  |  |   0000                 unimp
d000b5d8:                |                       |  |  |   0000                 unimp
d000b5da:                |                       |  |  |   0000                 unimp
d000b5dc:                |                       |  |  \-> c1000537             lui     a0,0xc1000
d000b5e0:                |                       |  |      0d450593             addi    a1,a0,212 # c10000d4 <_stack_end+0xe0fe00d4>
d000b5e4:                |                       |  |      0ac50513             addi    a0,a0,172
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b5e8:                |                       |  |      8082                 ret
d000b5ea:                |                       \--|----> dd7f3637             lui     a2,0xdd7f3
d000b5ee:                |                          |      4dc60613             addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5f2:                |                          +----- 04c59263             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b5f6:                |                          |  /-- 00c50663             beq     a0,a2,d000b602 <info_cfg_regs+0x32a>
d000b5fa:                |                          |  |   0000                 unimp
d000b5fc:                |                          |  |   0000                 unimp
d000b5fe:                |                          |  |   0000                 unimp
d000b600:                |                          |  |   0000                 unimp
d000b602:                |                          |  \-> c1000537             lui     a0,0xc1000
d000b606:                |                          |      0dc50593             addi    a1,a0,220 # c10000dc <_stack_end+0xe0fe00dc>
d000b60a:                |                          |      0b450513             addi    a0,a0,180
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b60e:                |                          |      8082                 ret
d000b610:                \--------------------------|----> 389c4637             lui     a2,0x389c4
d000b614:                                           |      49e60613             addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b618:                                           +----- 00c59f63             bne     a1,a2,d000b636 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b61c:                                           |  /-- 00c50663             beq     a0,a2,d000b628 <info_cfg_regs+0x350>
d000b620:                                           |  |   0000                 unimp
d000b622:                                           |  |   0000                 unimp
d000b624:                                           |  |   0000                 unimp
d000b626:                                           |  |   0000                 unimp
d000b628:                                           |  \-> c1000537             lui     a0,0xc1000
d000b62c:                                           |      12850593             addi    a1,a0,296 # c1000128 <_stack_end+0xe0fe0128>
d000b630:                                           |      10050513             addi    a0,a0,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b634:                                           |      8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:275
      HARDENED_UNREACHABLE();
d000b636:                                           \----> 0000                 unimp
d000b638:                                                  0000                 unimp
d000b63a:                                                  0000                 unimp
d000b63c:                                                  0000                 unimp

d000b63e <flash_ctrl_bank_erase_perms_set>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b63e:                 85aa                  mv      a1,a0
d000b640:                 1d400613              li      a2,468
flash_ctrl_bank_erase_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
}

void flash_ctrl_bank_erase_perms_set(hardened_bool_t enable) {
  uint32_t reg;
  switch (launder32(enable)) {
d000b644:          /----- 00c59a63              bne     a1,a2,d000b658 <flash_ctrl_bank_erase_perms_set+0x1a>
d000b648:          |      4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:539
          0, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_0_BIT, true);
      reg = bitfield_bit32_write(
          reg, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_1_BIT, true);
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(enable, kHardenedBoolFalse);
d000b64a:          |  /-- 00c50663              beq     a0,a2,d000b656 <flash_ctrl_bank_erase_perms_set+0x18>
d000b64e:          |  |   0000                  unimp
d000b650:          |  |   0000                  unimp
d000b652:          |  |   0000                  unimp
d000b654:          |  |   0000                  unimp
d000b656:       /--|--\-X a821                  j       d000b66e <flash_ctrl_bank_erase_perms_set+0x30>
d000b658:       |  \----> 73900613              li      a2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
  switch (launder32(enable)) {
d000b65c:       |  /----- 00c59f63              bne     a1,a2,d000b67a <flash_ctrl_bank_erase_perms_set+0x3c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:532
      HARDENED_CHECK_EQ(enable, kHardenedBoolTrue);
d000b660:       |  |  /-- 00c50663              beq     a0,a2,d000b66c <flash_ctrl_bank_erase_perms_set+0x2e>
d000b664:       |  |  |   0000                  unimp
d000b666:       |  |  |   0000                  unimp
d000b668:       |  |  |   0000                  unimp
d000b66a:       |  |  |   0000                  unimp
d000b66c:       |  |  \-> 458d                  li      a1,3
d000b66e:       \--|----> c1000537              lui     a0,0xc1000
d000b672:          |      16850513              addi    a0,a0,360 # c1000168 <_stack_end+0xe0fe0168>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:545
      reg = 0;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32_shadowed(kBase + FLASH_CTRL_MP_BANK_CFG_SHADOWED_REG_OFFSET,
d000b676:          |      0a30106f              j       d000cf18 <sec_mmio_write32_shadowed>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:543
      HARDENED_UNREACHABLE();
d000b67a:          \----> 0000                  unimp
d000b67c:                 0000                  unimp
d000b67e:                 0000                  unimp
d000b680:                 0000                  unimp

d000b682 <ibex_addr_remap_0_set>:
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:23
uint32_t ibex_fpga_version(void) {
  return abs_mmio_read32(kBase + RV_CORE_IBEX_FPGA_INFO_REG_OFFSET);
}

void ibex_addr_remap_0_set(uint32_t matching_addr, uint32_t remap_addr,
                           size_t size) {
d000b682:       1141                    addi    sp,sp,-16
d000b684:       c606                    sw      ra,12(sp)
d000b686:       c422                    sw      s0,8(sp)
d000b688:       c226                    sw      s1,4(sp)
d000b68a:       c04a                    sw      s2,0(sp)
d000b68c:       892e                    mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:24
  uint32_t mask = matching_addr | ((size - 1) >> 1);
d000b68e:       fff60593                addi    a1,a2,-1
d000b692:       8185                    srli    a1,a1,0x1
d000b694:       00a5e4b3                or      s1,a1,a0
d000b698:       c11f0437                lui     s0,0xc11f0
d000b69c:       01c40513                addi    a0,s0,28 # c11f001c <_stack_end+0xe11d001c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:25
  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b6a0:       85a6                    mv      a1,s1
d000b6a2:       02b010ef                jal     ra,d000cecc <sec_mmio_write32>
d000b6a6:       03c40513                addi    a0,s0,60
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:26
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b6aa:       85a6                    mv      a1,s1
d000b6ac:       021010ef                jal     ra,d000cecc <sec_mmio_write32>
d000b6b0:       02440513                addi    a0,s0,36
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:28

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_REMAP_ADDR_0_REG_OFFSET,
d000b6b4:       85ca                    mv      a1,s2
d000b6b6:       017010ef                jal     ra,d000cecc <sec_mmio_write32>
d000b6ba:       04440513                addi    a0,s0,68
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:30
                   remap_addr);
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_REMAP_ADDR_0_REG_OFFSET,
d000b6be:       85ca                    mv      a1,s2
d000b6c0:       00d010ef                jal     ra,d000cecc <sec_mmio_write32>
d000b6c4:       01440513                addi    a0,s0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:33
                   remap_addr);

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b6c8:       4585                    li      a1,1
d000b6ca:       003010ef                jal     ra,d000cecc <sec_mmio_write32>
d000b6ce:       03440513                addi    a0,s0,52
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:34
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b6d2:       4585                    li      a1,1
d000b6d4:       7f8010ef                jal     ra,d000cecc <sec_mmio_write32>
icache_invalidate():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:38
/**
 * Invalidates the instruction cache.
 */
inline void icache_invalidate(void) {
#ifdef OT_PLATFORM_RV32
  asm volatile("fence.i");
d000b6d8:       0000100f                fence.i
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:36
  icache_invalidate();
}
d000b6dc:       4902                    lw      s2,0(sp)
d000b6de:       4492                    lw      s1,4(sp)
d000b6e0:       4422                    lw      s0,8(sp)
d000b6e2:       40b2                    lw      ra,12(sp)
d000b6e4:       0141                    addi    sp,sp,16
d000b6e6:       8082                    ret

d000b6e8 <expected_state_check>:
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:39
 * This function reads and clears the status and error code registers.
 *
 * @return `kErrorOk` if the key manager is at the `expected_state` and the
 * status is idle or success.
 */
static rom_error_t expected_state_check(uint32_t expected_state) {
d000b6e8:           1141                        addi    sp,sp,-16
d000b6ea:           c606                        sw      ra,12(sp)
d000b6ec:           c422                        sw      s0,8(sp)
d000b6ee:           c226                        sw      s1,4(sp)
d000b6f0:           c04a                        sw      s2,0(sp)
d000b6f2:           892a                        mv      s2,a0
d000b6f4:           c1140537            lui     a0,0xc1140
d000b6f8:           4589                        li      a1,2
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b6fa:       /-> 0ec52603            lw      a2,236(a0) # c11400ec <_stack_end+0xe11200ec>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000b6fe:       |   00367493            andi    s1,a2,3
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
  do {
    op_status = abs_mmio_read32(kBase + KEYMGR_OP_STATUS_REG_OFFSET);
    abs_mmio_write32(kBase + KEYMGR_OP_STATUS_REG_OFFSET, op_status);
    op_status_field =
        bitfield_field32_read(op_status, KEYMGR_OP_STATUS_STATUS_FIELD);
  } while (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_WIP ||
d000b702:       |   fff48693            addi    a3,s1,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b706:       |   0ec52623            sw      a2,236(a0)
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
d000b70a:       \-- feb6e8e3            bltu    a3,a1,d000b6fa <expected_state_check+0x12>
d000b70e:           c1140537            lui     a0,0xc1140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b712:           0f052403            lw      s0,240(a0) # c11400f0 <_stack_end+0xe11200f0>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b716:           0e852823            sw      s0,240(a0)
d000b71a:           0e850513            addi    a0,a0,232
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:58
  uint32_t error_code = abs_mmio_read32(kBase + KEYMGR_ERR_CODE_REG_OFFSET);
  abs_mmio_write32(kBase + KEYMGR_ERR_CODE_REG_OFFSET, error_code);

  // Read the working state with sec_mmio so that we can check the expected
  // value periodically.
  uint32_t got_state = sec_mmio_read32(kBase + KEYMGR_WORKING_STATE_REG_OFFSET);
d000b71e:           6fa010ef            jal     ra,d000ce18 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:59
  if (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_IDLE &&
d000b722:           0084e5b3            or      a1,s1,s0
d000b726:           01254533            xor     a0,a0,s2
d000b72a:           8dc9                        or      a1,a1,a0
d000b72c:           73900513            li      a0,1849
d000b730:       /-- c589                        beqz    a1,d000b73a <expected_state_check+0x52>
d000b732:       |   014b5537            lui     a0,0x14b5
d000b736:       |   d0d50513            addi    a0,a0,-755 # 14b4d0d <_rom_ext_virtual_size+0x1434d0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:64
      error_code == 0u && got_state == expected_state) {
    return kErrorOk;
  }
  return kErrorKeymgrInternal;
}
d000b73a:       \-> 4902                        lw      s2,0(sp)
d000b73c:           4492                        lw      s1,4(sp)
d000b73e:           4422                        lw      s0,8(sp)
d000b740:           40b2                        lw      ra,12(sp)
d000b742:           0141                        addi    sp,sp,16
d000b744:           8082                        ret

d000b746 <keymgr_sw_binding_set>:
keymgr_sw_binding_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:78
  return kErrorOk;
}

void keymgr_sw_binding_set(
    const keymgr_binding_value_t *binding_value_sealing,
    const keymgr_binding_value_t *binding_value_attestation) {
d000b746:           1101                        addi    sp,sp,-32
d000b748:           ce06                        sw      ra,28(sp)
d000b74a:           cc22                        sw      s0,24(sp)
d000b74c:           ca26                        sw      s1,20(sp)
d000b74e:           c84a                        sw      s2,16(sp)
d000b750:           c64e                        sw      s3,12(sp)
d000b752:           c452                        sw      s4,8(sp)
d000b754:           892e                        mv      s2,a1
d000b756:           89aa                        mv      s3,a0
d000b758:           4481                        li      s1,0
d000b75a:           c1140537            lui     a0,0xc1140
d000b75e:           02c50413            addi    s0,a0,44 # c114002c <_stack_end+0xe112002c>
d000b762:           02000a13            li      s4,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:86
  // Write and lock (rw0c) the software binding value. This register is unlocked
  // by hardware upon a successful state transition.
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_SEALING_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_sealing->data[i]);
d000b766:       /-> 00998533            add     a0,s3,s1
d000b76a:       |   410c                        lw      a1,0(a0)
d000b76c:       |   00848533            add     a0,s1,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:84
    sec_mmio_write32(
d000b770:       |   75c010ef            jal     ra,d000cecc <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:83
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
d000b774:       |   0491                        addi    s1,s1,4
d000b776:       \-- ff4498e3            bne     s1,s4,d000b766 <keymgr_sw_binding_set+0x20>
d000b77a:           4481                        li      s1,0
d000b77c:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:91
  }
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_ATTEST_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_attestation->data[i]);
d000b780:       /-> 00990533            add     a0,s2,s1
d000b784:       |   410c                        lw      a1,0(a0)
d000b786:       |   00940533            add     a0,s0,s1
d000b78a:       |   02050513            addi    a0,a0,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:89
    sec_mmio_write32(
d000b78e:       |   73e010ef            jal     ra,d000cecc <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:88
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
d000b792:       |   0491                        addi    s1,s1,4
d000b794:       \-- ff3496e3            bne     s1,s3,d000b780 <keymgr_sw_binding_set+0x3a>
d000b798:           c1140537            lui     a0,0xc1140
d000b79c:           02850513            addi    a0,a0,40 # c1140028 <_stack_end+0xe1120028>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:93
  }
  sec_mmio_write32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET, 0);
d000b7a0:           4581                        li      a1,0
d000b7a2:           4a22                        lw      s4,8(sp)
d000b7a4:           49b2                        lw      s3,12(sp)
d000b7a6:           4942                        lw      s2,16(sp)
d000b7a8:           44d2                        lw      s1,20(sp)
d000b7aa:           4462                        lw      s0,24(sp)
d000b7ac:           40f2                        lw      ra,28(sp)
d000b7ae:           6105                        addi    sp,sp,32
d000b7b0:           71c0106f            j       d000cecc <sec_mmio_write32>

d000b7b4 <keymgr_creator_max_ver_set>:
keymgr_creator_max_ver_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:102
  while (!abs_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET)) {
  }
  sec_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET);
}

void keymgr_creator_max_ver_set(uint32_t max_key_ver) {
d000b7b4:       1141                    addi    sp,sp,-16
d000b7b6:       c606                    sw      ra,12(sp)
d000b7b8:       c422                    sw      s0,8(sp)
d000b7ba:       85aa                    mv      a1,a0
d000b7bc:       c1140437                lui     s0,0xc1140
d000b7c0:       09440513                addi    a0,s0,148 # c1140094 <_stack_end+0xe1120094>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:105
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kKeymgrSecMmioCreatorMaxVerSet, 2);
  // Write and lock (rw0c) the max key version.
  sec_mmio_write32_shadowed(
d000b7c4:       754010ef                jal     ra,d000cf18 <sec_mmio_write32_shadowed>
d000b7c8:       09040513                addi    a0,s0,144
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:107
      kBase + KEYMGR_MAX_CREATOR_KEY_VER_SHADOWED_REG_OFFSET, max_key_ver);
  sec_mmio_write32(kBase + KEYMGR_MAX_CREATOR_KEY_VER_REGWEN_REG_OFFSET, 0);
d000b7cc:       4581                    li      a1,0
d000b7ce:       4422                    lw      s0,8(sp)
d000b7d0:       40b2                    lw      ra,12(sp)
d000b7d2:       0141                    addi    sp,sp,16
d000b7d4:       6f80106f                j       d000cecc <sec_mmio_write32>

d000b7d8 <keymgr_state_check>:
keymgr_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:130

  abs_mmio_write32(kBase + KEYMGR_START_REG_OFFSET, 1);
}

rom_error_t keymgr_state_check(keymgr_state_t expected_state) {
  return expected_state_check(expected_state);
d000b7d8:       bf01                    j       d000b6e8 <expected_state_check>

d000b7da <pinmux_init>:
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:127
  abs_mmio_write32(
      kBase + PINMUX_MIO_OUTSEL_0_REG_OFFSET + output.mio * sizeof(uint32_t),
      output.outsel);
}

void pinmux_init(void) {
d000b7da:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:129
  uint32_t bootstrap_en =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d000b7dc:              c606                     sw      ra,12(sp)
d000b7de:              36400513                 li      a0,868
d000b7e2:              5d4010ef                 jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b7e6:              862a                     mv      a2,a0
d000b7e8:              73900593                 li      a1,1849
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:130
  if (launder32(bootstrap_en) == kHardenedBoolTrue) {
d000b7ec:       /----- 02b61b63                 bne     a2,a1,d000b822 <pinmux_init+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:131
    HARDENED_CHECK_EQ(bootstrap_en, kHardenedBoolTrue);
d000b7f0:       |  /-- 00b50663                 beq     a0,a1,d000b7fc <pinmux_init+0x22>
d000b7f4:       |  |   0000                     unimp
d000b7f6:       |  |   0000                     unimp
d000b7f8:       |  |   0000                     unimp
d000b7fa:       |  |   0000                     unimp
d000b7fc:       |  \-> c0460537                 lui     a0,0xc0460
d000b800:       |      4591                     li      a1,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b802:       |      44b52c23                 sw      a1,1112(a0) # c0460458 <_stack_end+0xe0440458>
d000b806:       |      44b52e23                 sw      a1,1116(a0)
d000b80a:       |      46b52023                 sw      a1,1120(a0)
d000b80e:       |      45e1                     li      a1,24
d000b810:       |      14b52023                 sw      a1,320(a0)
d000b814:       |      45e5                     li      a1,25
d000b816:       |      14b52223                 sw      a1,324(a0)
d000b81a:       |      14850513                 addi    a0,a0,328
d000b81e:       |      45e9                     li      a1,26
d000b820:       |      c10c                     sw      a1,0(a0)
d000b822:       \----> c0460537                 lui     a0,0xc0460
d000b826:              45ed                     li      a1,27
d000b828:              18b52823                 sw      a1,400(a0) # c0460190 <_stack_end+0xe0440190>
d000b82c:              02d00593                 li      a1,45
d000b830:              2eb52823                 sw      a1,752(a0)
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:144
    configure_input(kInputSwStrap2);
  }

  configure_input(kInputUart0);
  configure_output(kOutputUart0);
}
d000b834:              40b2                     lw      ra,12(sp)
d000b836:              0141                     addi    sp,sp,16
d000b838:              8082                     ret

d000b83a <retention_sram_get>:
retention_sram_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:25
};

retention_sram_t *retention_sram_get(void) {
  static_assert(sizeof(retention_sram_t) == TOP_EARLGREY_RAM_RET_AON_SIZE_BYTES,
                "Unexpected retention SRAM size.");
  return (retention_sram_t *)TOP_EARLGREY_RAM_RET_AON_BASE_ADDR;
d000b83a:       c0600537                lui     a0,0xc0600
d000b83e:       8082                    ret

d000b840 <retention_sram_init>:
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:32

void retention_sram_clear(void) {
  memset(retention_sram_get(), 0, sizeof(retention_sram_t));
}

void retention_sram_init(void) {
d000b840:       c0500537                lui     a0,0xc0500
d000b844:       4589                    li      a1,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b846:       c94c                    sw      a1,20(a0)
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:35
  uint32_t reg = bitfield_bit32_write(0, SRAM_CTRL_CTRL_INIT_BIT, true);
  abs_mmio_write32(kBase + SRAM_CTRL_CTRL_REG_OFFSET, reg);
}
d000b848:       8082                    ret

d000b84a <rstmgr_reason_get>:
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:41
    rstmgr_alert_info.info[i] =
        abs_mmio_read32(kBase + RSTMGR_ALERT_INFO_REG_OFFSET);
  }
}

uint32_t rstmgr_reason_get(void) {
d000b84a:              c0410537                 lui     a0,0xc0410
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b84e:              494c                     lw      a1,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000b850:              00f5f613                 andi    a2,a1,15
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:29
  rstmgr_alert_info.length = bitfield_field32_read(
d000b854:              c6018593                 addi    a1,gp,-928 # e0002428 <rstmgr_alert_info>
d000b858:              c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000b85a:       /----- c205                     beqz    a2,d000b87a <rstmgr_reason_get+0x30>
d000b85c:       |      4601                     li      a2,0
d000b85e:       |      4681                     li      a3,0
d000b860:       |      00458713                 addi    a4,a1,4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b864:       |  /-> 0f067793                 andi    a5,a2,240
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b868:       |  |   c91c                     sw      a5,16(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b86a:       |  |   4d1c                     lw      a5,24(a0)
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:36
    rstmgr_alert_info.info[i] =
d000b86c:       |  |   c31c                     sw      a5,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000b86e:       |  |   419c                     lw      a5,0(a1)
d000b870:       |  |   0685                     addi    a3,a3,1
d000b872:       |  |   0711                     addi    a4,a4,4
d000b874:       |  |   0641                     addi    a2,a2,16
d000b876:       |  \-- fef6e7e3                 bltu    a3,a5,d000b864 <rstmgr_reason_get+0x1a>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b87a:       \----> 4508                     lw      a0,8(a0)
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:72
      "kRstmgrReasonLast value incorrect.");

#undef REASON_ASSERT

  rstmgr_alert_info_collect();
  return abs_mmio_read32(kBase + RSTMGR_RESET_INFO_REG_OFFSET);
d000b87c:              8082                     ret

d000b87e <rstmgr_reason_clear>:
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:75
}

void rstmgr_reason_clear(uint32_t reasons) {
d000b87e:       c04105b7                lui     a1,0xc0410
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b882:       c588                    sw      a0,8(a1)
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:77
  abs_mmio_write32(kBase + RSTMGR_RESET_INFO_REG_OFFSET, reasons);
}
d000b884:       8082                    ret

d000b886 <rstmgr_reset>:
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:83

void rstmgr_alert_info_enable(void) {
  abs_mmio_write32(kBase + RSTMGR_ALERT_INFO_CTRL_REG_OFFSET, 1);
}

void rstmgr_reset(void) {
d000b886:           c0410537            lui     a0,0xc0410
d000b88a:           0511                        addi    a0,a0,4
d000b88c:           4599                        li      a1,6
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b88e:           c10c                        sw      a1,0(a0)
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
  asm volatile("wfi");
d000b890:       /-> 10500073            wfi
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:87
  abs_mmio_write32(kBase + RSTMGR_RESET_REQ_REG_OFFSET, kMultiBitBool4True);
#ifdef OT_PLATFORM_RV32
  // Wait until the chip resets.
  while (true) {
d000b894:       \-- bff5                        j       d000b890 <rstmgr_reset+0xa>

d000b896 <uart_init>:
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:37
                   0u);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_STATE_REG_OFFSET,
                   UINT32_MAX);
}

rom_error_t uart_init(uint32_t precalculated_nco) {
d000b896:       c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b89a:       0005a823                sw      zero,16(a1) # c0000010 <_stack_end+0xdffe0010>
d000b89e:       460d                    li      a2,3
d000b8a0:       d190                    sw      a2,32(a1)
d000b8a2:       0205a423                sw      zero,40(a1)
d000b8a6:       0205a823                sw      zero,48(a1)
d000b8aa:       0005a223                sw      zero,4(a1)
d000b8ae:       567d                    li      a2,-1
d000b8b0:       c190                    sw      a2,0(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b8b2:       0542                    slli    a0,a0,0x10
d000b8b4:       00156513                ori     a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b8b8:       c988                    sw      a0,16(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_CTRL_REG_OFFSET, reg);

  // Disable interrupts.
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_ENABLE_REG_OFFSET,
                   0u);
  return kErrorOk;
d000b8ba:       73900513                li      a0,1849
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b8be:       0005a223                sw      zero,4(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
d000b8c2:       8082                    ret

d000b8c4 <uart_putchar>:
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:66
  uint32_t reg =
      abs_mmio_read32(TOP_EARLGREY_UART0_BASE_ADDR + UART_STATUS_REG_OFFSET);
  return bitfield_bit32_read(reg, UART_STATUS_TXIDLE_BIT);
}

void uart_putchar(uint8_t byte) {
d000b8c4:           c00005b7            lui     a1,0xc0000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b8c8:       /-> 49d0                        lw      a2,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000b8ca:       |   8a05                        andi    a2,a2,1
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:68
  // If the transmit FIFO is full, wait.
  while (uart_tx_full()) {
d000b8cc:       \-- fe75                        bnez    a2,d000b8c8 <uart_putchar+0x4>
d000b8ce:           c00005b7            lui     a1,0xc0000
d000b8d2:           01c58613            addi    a2,a1,28 # c000001c <_stack_end+0xdffe001c>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b8d6:           c208                        sw      a0,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b8d8:       /-> 49c8                        lw      a0,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b8da:       |   8921                        andi    a0,a0,8
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:74
  }
  uint32_t reg = bitfield_field32_write(0, UART_WDATA_WDATA_FIELD, byte);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_WDATA_REG_OFFSET, reg);

  // If the transmitter is active, wait.
  while (!uart_tx_idle()) {
d000b8dc:       \-- dd75                        beqz    a0,d000b8d8 <uart_putchar+0x14>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:76
  }
}
d000b8de:           8082                        ret

d000b8e0 <watchdog_init>:
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:25

  kCtrlEnable = 1 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
  kCtrlDisable = 0 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
};

void watchdog_init(lifecycle_state_t lc_state) {
d000b8e0:                          1101                 addi    sp,sp,-32
d000b8e2:                          ce06                 sw      ra,28(sp)
d000b8e4:                          cc22                 sw      s0,24(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b8e6:                          85aa                 mv      a1,a0
d000b8e8:                          cf8d0637             lui     a2,0xcf8d0
d000b8ec:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioInit,
                                  kWatchdogSecMmioConfigure);
  // Disable the watchdog bite when in test and RMA lifecycle states.
  hardened_bool_t enable = kHardenedBoolTrue;
  switch (launder32(lc_state)) {
d000b8f0:                   /----- 02b6d363             bge     a3,a1,d000b916 <watchdog_init+0x36>
d000b8f4:                   |      aab60613             addi    a2,a2,-1365
d000b8f8:                /--|----- 02c58c63             beq     a1,a2,d000b930 <watchdog_init+0x50>
d000b8fc:                |  |      0b5a7637             lui     a2,0xb5a7
d000b900:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000b904:             /--|--|----- 04c59163             bne     a1,a2,d000b946 <watchdog_init+0x66>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:36
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      enable = kHardenedBoolFalse;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000b908:             |  |  |  /-- 00c50663             beq     a0,a2,d000b914 <watchdog_init+0x34>
d000b90c:             |  |  |  |   0000                 unimp
d000b90e:             |  |  |  |   0000                 unimp
d000b910:             |  |  |  |   0000                 unimp
d000b912:             |  |  |  |   0000                 unimp
d000b914:       /-----|--|--|--\-X a0a9                 j       d000b95e <watchdog_init+0x7e>
d000b916:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000b91a:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000b91e:       |  /--|--|-------- 04c59363             bne     a1,a2,d000b964 <watchdog_init+0x84>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:44
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      enable = kHardenedBoolTrue;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000b922:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000b92e <watchdog_init+0x4e>
d000b926:       |  |  |  |     |   0000                 unimp
d000b928:       |  |  |  |     |   0000                 unimp
d000b92a:       |  |  |  |     |   0000                 unimp
d000b92c:       |  |  |  |     |   0000                 unimp
d000b92e:       +--|--|--|-----\-X a805                 j       d000b95e <watchdog_init+0x7e>
d000b930:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000b934:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:48
      enable = kHardenedBoolTrue;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000b938:       |  |  |        /-- 00b50663             beq     a0,a1,d000b944 <watchdog_init+0x64>
d000b93c:       |  |  |        |   0000                 unimp
d000b93e:       |  |  |        |   0000                 unimp
d000b940:       |  |  |        |   0000                 unimp
d000b942:       |  |  |        |   0000                 unimp
d000b944:       |  |  |     /--\-X a825                 j       d000b97c <watchdog_init+0x9c>
d000b946:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000b94a:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000b94e:       |  |     /--|----- 06c59563             bne     a1,a2,d000b9b8 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:40
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000b952:       +--|-----|--|----- 00c50663             beq     a0,a2,d000b95e <watchdog_init+0x7e>
d000b956:       |  |     |  |      0000                 unimp
d000b958:       |  |     |  |      0000                 unimp
d000b95a:       |  |     |  |      0000                 unimp
d000b95c:       |  |     |  |      0000                 unimp
d000b95e:       \--|-----|--|----> 73900413             li      s0,1849
d000b962:          |     |  |  /-- a839                 j       d000b980 <watchdog_init+0xa0>
d000b964:          \-----|--|--|-> b2866637             lui     a2,0xb2866
d000b968:                |  |  |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000b96c:                +--|--|-- 04c59663             bne     a1,a2,d000b9b8 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000b970:                |  +--|-- 00c50663             beq     a0,a2,d000b97c <watchdog_init+0x9c>
d000b974:                |  |  |   0000                 unimp
d000b976:                |  |  |   0000                 unimp
d000b978:                |  |  |   0000                 unimp
d000b97a:                |  |  |   0000                 unimp
d000b97c:                |  \--|-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:55
      break;
    default:
      HARDENED_UNREACHABLE();
  }

  uint32_t threshold = otp_read32(
d000b980:                |     \-> 56000513             li      a0,1376
d000b984:                |         432010ef             jal     ra,d000cdb6 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b988:                |         85aa                 mv      a1,a0
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:59
      OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_WATCHDOG_BITE_THRESHOLD_CYCLES_OFFSET);

  // Disable watchdog if `threshold` is less than minimum.
  if (launder32(threshold) < kWatchdogMinThreshold) {
d000b98a:                |  /----- e991                 bnez    a1,d000b99e <watchdog_init+0xbe>
d000b98c:                |  |      4585                 li      a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:60
    HARDENED_CHECK_LT(threshold, kWatchdogMinThreshold);
d000b98e:                |  |  /-- 00b56663             bltu    a0,a1,d000b99a <watchdog_init+0xba>
d000b992:                |  |  |   0000                 unimp
d000b994:                |  |  |   0000                 unimp
d000b996:                |  |  |   0000                 unimp
d000b998:                |  |  |   0000                 unimp
d000b99a:                |  |  \-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:66
    enable = kHardenedBoolFalse;
  }

  watchdog_configure((watchdog_config_t){
      // 1.125 x bite_threshold
      .bark_threshold = (9 * threshold) / 8,
d000b99e:                |  \----> 00351593             slli    a1,a0,0x3
d000b9a2:                |         95aa                 add     a1,a1,a0
d000b9a4:                |         818d                 srli    a1,a1,0x3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:64
  watchdog_configure((watchdog_config_t){
d000b9a6:                |         c42e                 sw      a1,8(sp)
d000b9a8:                |         c62a                 sw      a0,12(sp)
d000b9aa:                |         c822                 sw      s0,16(sp)
d000b9ac:                |         0028                 addi    a0,sp,8
d000b9ae:                |         2809                 jal     d000b9c0 <watchdog_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:70
      .bite_threshold = threshold,
      .enable = enable,
  });
}
d000b9b0:                |         4462                 lw      s0,24(sp)
d000b9b2:                |         40f2                 lw      ra,28(sp)
d000b9b4:                |         6105                 addi    sp,sp,32
d000b9b6:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:52
      HARDENED_UNREACHABLE();
d000b9b8:                \-------> 0000                 unimp
d000b9ba:                          0000                 unimp
d000b9bc:                          0000                 unimp
d000b9be:                          0000                 unimp

d000b9c0 <watchdog_configure>:
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:72

void watchdog_configure(watchdog_config_t config) {
d000b9c0:                 1141                  addi    sp,sp,-16
d000b9c2:                 c606                  sw      ra,12(sp)
d000b9c4:                 c422                  sw      s0,8(sp)
d000b9c6:                 c226                  sw      s1,4(sp)
d000b9c8:                 842a                  mv      s0,a0
d000b9ca:                 c04004b7              lui     s1,0xc0400
d000b9ce:                 02c48513              addi    a0,s1,44 # c040002c <_stack_end+0xe03e002c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:75
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioConfigure, 4);
  // Tell pwrmgr we want watchdog reset events to reset the chip.
  sec_mmio_write32(
d000b9d2:                 4589                  li      a1,2
d000b9d4:                 4f8010ef              jal     ra,d000cecc <sec_mmio_write32>
d000b9d8:                 4505                  li      a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b9da:                 cc88                  sw      a0,24(s1)
d000b9dc:                 c04704b7              lui     s1,0xc0470
d000b9e0:                 01448513              addi    a0,s1,20 # c0470014 <_stack_end+0xe0450014>
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:83
          0, kTopEarlgreyPowerManagerResetRequestsAonTimerAonAonTimerRstReq,
          true));
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);

  // Set the watchdog bite and bark thresholds.
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000b9e4:                 4581                  li      a1,0
d000b9e6:                 4e6010ef              jal     ra,d000cecc <sec_mmio_write32>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b9ea:                 0204a023              sw      zero,32(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:86
  abs_mmio_write32(kBase + AON_TIMER_WDOG_COUNT_REG_OFFSET, 0);
  abs_mmio_write32(kBase + AON_TIMER_WDOG_BARK_THOLD_REG_OFFSET,
                   config.bark_threshold);
d000b9ee:                 4008                  lw      a0,0(s0)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b9f0:                 cc88                  sw      a0,24(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:88
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
                   config.bite_threshold);
d000b9f2:                 404c                  lw      a1,4(s0)
d000b9f4:                 01c48513              addi    a0,s1,28
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:87
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
d000b9f8:                 4d4010ef              jal     ra,d000cecc <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92

  // Enable or disable the watchdog as requested.
  uint32_t ctrl = kCtrlEnable;
  switch (launder32(config.enable)) {
d000b9fc:                 4408                  lw      a0,8(s0)
d000b9fe:                 1d400613              li      a2,468
d000ba02:          /----- 00c51b63              bne     a0,a2,d000ba18 <watchdog_configure+0x58>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:98
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
      ctrl = kCtrlEnable;
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolFalse);
d000ba06:          |      4408                  lw      a0,8(s0)
d000ba08:          |      4581                  li      a1,0
d000ba0a:          |  /-- 00c50663              beq     a0,a2,d000ba16 <watchdog_configure+0x56>
d000ba0e:          |  |   0000                  unimp
d000ba10:          |  |   0000                  unimp
d000ba12:          |  |   0000                  unimp
d000ba14:          |  |   0000                  unimp
d000ba16:       /--|--\-X a829                  j       d000ba30 <watchdog_configure+0x70>
d000ba18:       |  \----> 73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92
  switch (launder32(config.enable)) {
d000ba1c:       |  /----- 02b51863              bne     a0,a1,d000ba4c <watchdog_configure+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:94
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
d000ba20:       |  |      4408                  lw      a0,8(s0)
d000ba22:       |  |  /-- 00b50663              beq     a0,a1,d000ba2e <watchdog_configure+0x6e>
d000ba26:       |  |  |   0000                  unimp
d000ba28:       |  |  |   0000                  unimp
d000ba2a:       |  |  |   0000                  unimp
d000ba2c:       |  |  |   0000                  unimp
d000ba2e:       |  |  \-> 4585                  li      a1,1
d000ba30:       \--|----> c0470537              lui     a0,0xc0470
d000ba34:          |      0551                  addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:104
      ctrl = kCtrlDisable;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, ctrl);
d000ba36:          |      496010ef              jal     ra,d000cecc <sec_mmio_write32>
d000ba3a:          |      c0400537              lui     a0,0xc0400
d000ba3e:          |      4585                  li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000ba40:          |      cd0c                  sw      a1,24(a0)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:109

  // Redundantly re-request the pwrmgr configuration sync since it isn't
  // possible to use sec_mmio for it.
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);
}
d000ba42:          |      4492                  lw      s1,4(sp)
d000ba44:          |      4422                  lw      s0,8(sp)
d000ba46:          |      40b2                  lw      ra,12(sp)
d000ba48:          |      0141                  addi    sp,sp,16
d000ba4a:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:102
      HARDENED_UNREACHABLE();
d000ba4c:          \----> 0000                  unimp
d000ba4e:                 0000                  unimp
d000ba50:                 0000                  unimp
d000ba52:                 0000                  unimp

d000ba54 <watchdog_disable>:
watchdog_disable():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:111

void watchdog_disable(void) {
d000ba54:       c0470537                lui     a0,0xc0470
d000ba58:       0551                    addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:113
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioDisable, 1);
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000ba5a:       4581                    li      a1,0
d000ba5c:       4700106f                j       d000cecc <sec_mmio_write32>

d000ba60 <rom_epmp_state_init>:
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:33
                          TOP_EARLGREY_SRAM_CTRL_RET_AON_RAM_SIZE_BYTES <
                      TOP_EARLGREY_MMIO_BASE_ADDR +
                          TOP_EARLGREY_MMIO_SIZE_BYTES,
              "Retention SRAM must be in the MMIO address space.");

void rom_epmp_state_init(lifecycle_state_t lc_state) {
d000ba60:                          1141                 addi    sp,sp,-16
d000ba62:                          c606                 sw      ra,12(sp)
d000ba64:                          c422                 sw      s0,8(sp)
d000ba66:                          c226                 sw      s1,4(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ba68:                          85aa                 mv      a1,a0
d000ba6a:                          cf8d0637             lui     a2,0xcf8d0
d000ba6e:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  const epmp_region_t ram = {.start = TOP_EARLGREY_RAM_MAIN_BASE_ADDR,
                             .end = TOP_EARLGREY_RAM_MAIN_BASE_ADDR +
                                    TOP_EARLGREY_RAM_MAIN_SIZE_BYTES};

  epmp_perm_t debug_rom_access = kEpmpPermLockedNoAccess;
  switch (launder32(lc_state)) {
d000ba72:                   /----- 02b6d363             bge     a3,a1,d000ba98 <rom_epmp_state_init+0x38>
d000ba76:                   |      aab60613             addi    a2,a2,-1365
d000ba7a:                /--|----- 02c58c63             beq     a1,a2,d000bab2 <rom_epmp_state_init+0x52>
d000ba7e:                |  |      0b5a7637             lui     a2,0xb5a7
d000ba82:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000ba86:             /--|--|----- 04c59163             bne     a1,a2,d000bac8 <rom_epmp_state_init+0x68>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:65
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      debug_rom_access = kEpmpPermLockedReadWriteExecute;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ba8a:             |  |  |  /-- 00c50663             beq     a0,a2,d000ba96 <rom_epmp_state_init+0x36>
d000ba8e:             |  |  |  |   0000                 unimp
d000ba90:             |  |  |  |   0000                 unimp
d000ba92:             |  |  |  |   0000                 unimp
d000ba94:             |  |  |  |   0000                 unimp
d000ba96:       /-----|--|--|--\-X a0ad                 j       d000bb00 <rom_epmp_state_init+0xa0>
d000ba98:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000ba9c:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000baa0:       |  /--|--|-------- 04c59463             bne     a1,a2,d000bae8 <rom_epmp_state_init+0x88>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:73
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000baa4:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000bab0 <rom_epmp_state_init+0x50>
d000baa8:       |  |  |  |     |   0000                 unimp
d000baaa:       |  |  |  |     |   0000                 unimp
d000baac:       |  |  |  |     |   0000                 unimp
d000baae:       |  |  |  |     |   0000                 unimp
d000bab0:       |  |  |  |  /--\-X a805                 j       d000bae0 <rom_epmp_state_init+0x80>
d000bab2:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000bab6:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:77
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000baba:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000bac6 <rom_epmp_state_init+0x66>
d000babe:       |  |  |     |  |   0000                 unimp
d000bac0:       |  |  |     |  |   0000                 unimp
d000bac2:       |  |  |     |  |   0000                 unimp
d000bac4:       |  |  |     |  |   0000                 unimp
d000bac6:       +--|--|-----|--\-X a82d                 j       d000bb00 <rom_epmp_state_init+0xa0>
d000bac8:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000bacc:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000bad0:       |  |     /--|----- 0cc59e63             bne     a1,a2,d000bbac <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:69
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000bad4:       |  |     |  +----- 00c50663             beq     a0,a2,d000bae0 <rom_epmp_state_init+0x80>
d000bad8:       |  |     |  |      0000                 unimp
d000bada:       |  |     |  |      0000                 unimp
d000badc:       |  |     |  |      0000                 unimp
d000bade:       |  |     |  |      0000                 unimp
d000bae0:       |  |     |  \----> 6529                 lui     a0,0xa
d000bae2:       |  |     |         80050493             addi    s1,a0,-2048 # 9800 <_stack_size+0x5800>
d000bae6:       |  |     |     /-- a005                 j       d000bb06 <rom_epmp_state_init+0xa6>
d000bae8:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000baec:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000baf0:       |        +-----|-- 0ac59e63             bne     a1,a2,d000bbac <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:61
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000baf4:       +--------|-----|-- 00c50663             beq     a0,a2,d000bb00 <rom_epmp_state_init+0xa0>
d000baf8:       |        |     |   0000                 unimp
d000bafa:       |        |     |   0000                 unimp
d000bafc:       |        |     |   0000                 unimp
d000bafe:       |        |     |   0000                 unimp
d000bb00:       \--------|-----|-> 6529                 lui     a0,0xa
d000bb02:                |     |   f0050493             addi    s1,a0,-256 # 9f00 <_stack_size+0x5f00>
d000bb06:                |     \-> 0fff4417             auipc   s0,0xfff4
d000bb0a:                |         51a40413             addi    s0,s0,1306 # e0000020 <epmp_state>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:89
  // Initialize in-memory copy of ePMP register state.
  //
  // The actual hardware configuration is performed separately, either by reset
  // logic or in assembly. This code must be kept in sync with any changes
  // to the hardware configuration.
  memset(&epmp_state, 0, sizeof(epmp_state));
d000bb0e:                |         05400613             li      a2,84
d000bb12:                |         8522                 mv      a0,s0
d000bb14:                |         4581                 li      a1,0
d000bb16:                |         594010ef             jal     ra,d000d0aa <memset>
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
 */
inline void epmp_state_configure_tor(uint32_t entry, epmp_region_t region,
                                     epmp_perm_t perm) {
  // Set address registers.
  if (entry > 0) {
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000bb1a:                |         ffffc517             auipc   a0,0xffffc
d000bb1e:                |         4e650513             addi    a0,a0,1254 # d0008000 <_rom_interrupt_vector_asm>
d000bb22:                |         8109                 srli    a0,a0,0x2
d000bb24:                |         c808                 sw      a0,16(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  }
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000bb26:                |         00002517             auipc   a0,0x2
d000bb2a:                |         92a50513             addi    a0,a0,-1750 # d000d450 <_text_end>
d000bb2e:                |         8109                 srli    a0,a0,0x2
d000bb30:                |         c848                 sw      a0,20(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:167

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeTor | perm);
d000bb32:                |         4008                 lw      a0,0(s0)
d000bb34:                |         340035b7             lui     a1,0x34003
d000bb38:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
 */
inline void epmp_state_configure_napot(uint32_t entry, epmp_region_t region,
                                       epmp_perm_t perm) {
  // Set address register.
  uint32_t len = (region.end - region.start - 1) >> 3;
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000bb3a:                |         cc0c                 sw      a1,24(s0)
d000bb3c:                |         ff0005b7             lui     a1,0xff000
d000bb40:                |         0ff58593             addi    a1,a1,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bb44:                |         8d6d                 and     a0,a0,a1
d000bb46:                |         009995b7             lui     a1,0x999
d000bb4a:                |         d0058593             addi    a1,a1,-768 # 998d00 <_rom_ext_virtual_size+0x918d00>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bb4e:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bb50:                |         c008                 sw      a0,0(s0)
d000bb52:                |         3c020537             lui     a0,0x3c020
d000bb56:                |         157d                 addi    a0,a0,-1
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000bb58:                |         d048                 sw      a0,36(s0)
d000bb5a:                |         09900513             li      a0,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bb5e:                |         00a402a3             sb      a0,5(s0)
d000bb62:                |         6511                 lui     a0,0x4
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000bb64:                |         dc08                 sw      a0,56(s0)
d000bb66:                |         34000537             lui     a0,0x34000
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000bb6a:                |         dc48                 sw      a0,60(s0)
d000bb6c:                |         08b00513             li      a0,139
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:208
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeNapot | perm);
d000bb70:                |         00c44583             lbu     a1,12(s0)
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bb74:                |         00a405a3             sb      a0,11(s0)
d000bb78:                |         1ff00513             li      a0,511
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000bb7c:                |         c068                 sw      a0,68(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000bb7e:                |         0095e533             or      a0,a1,s1
epmp_state_configure_na4():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:182
  epmp_state.pmpaddr[entry] = region.start >> 2;
d000bb82:                |         10010597             auipc   a1,0x10010
d000bb86:                |         47e58593             addi    a1,a1,1150 # e001c000 <_stack_start>
d000bb8a:                |         8189                 srli    a1,a1,0x2
d000bb8c:                |         c42c                 sw      a1,72(s0)
d000bb8e:                |         380045b7             lui     a1,0x38004
d000bb92:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000bb94:                |         c46c                 sw      a1,76(s0)
d000bb96:                |         9b9005b7             lui     a1,0x9b900
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000bb9a:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bb9c:                |         c448                 sw      a0,12(s0)
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:97
  epmp_state_configure_napot(5, eflash, kEpmpPermLockedReadOnly);
  epmp_state_configure_tor(11, mmio, kEpmpPermLockedReadWrite);
  epmp_state_configure_napot(13, debug_rom, debug_rom_access);
  epmp_state_configure_na4(14, stack_guard, kEpmpPermLockedNoAccess);
  epmp_state_configure_napot(15, ram, kEpmpPermLockedReadWrite);
  epmp_state.mseccfg = 0x0; //EPMP_MSECCFG_MMWP | EPMP_MSECCFG_RLB;
d000bb9e:                |         04042823             sw      zero,80(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:98
}
d000bba2:                |         4492                 lw      s1,4(sp)
d000bba4:                |         4422                 lw      s0,8(sp)
d000bba6:                |         40b2                 lw      ra,12(sp)
d000bba8:                |         0141                 addi    sp,sp,16
d000bbaa:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:81
      HARDENED_UNREACHABLE();
d000bbac:                \-------> 0000                 unimp
d000bbae:                          0000                 unimp
d000bbb0:                          0000                 unimp
d000bbb2:                          0000                 unimp

d000bbb4 <rom_epmp_unlock_rom_ext_rx>:
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000bbb4:       8109                    srli    a0,a0,0x2
d000bbb6:       0fff4617                auipc   a2,0xfff4
d000bbba:       46a60613                addi    a2,a2,1130 # e0000020 <epmp_state>
d000bbbe:       ce48                    sw      a0,28(a2)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000bbc0:       8189                    srli    a1,a1,0x2
d000bbc2:       d20c                    sw      a1,32(a2)
d000bbc4:       08d00693                li      a3,141
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bbc8:       00d60223                sb      a3,4(a2)
rom_epmp_unlock_rom_ext_rx():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:116
  //
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+
  CSR_WRITE(CSR_REG_PMPADDR3, region.start >> 2);
d000bbcc:       3b351073                csrw    pmpaddr3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:117
  CSR_WRITE(CSR_REG_PMPADDR4, region.end >> 2);
d000bbd0:       3b459073                csrw    pmpaddr4,a1
d000bbd4:       0ff00513                li      a0,255
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:118
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff);
d000bbd8:       3a153073                csrc    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:119
  CSR_SET_BITS(CSR_REG_PMPCFG1, kEpmpModeTor | kEpmpPermLockedReadExecute);
d000bbdc:       3a16a073                csrs    pmpcfg1,a3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:120
}
d000bbe0:       8082                    ret

d000bbe2 <rom_epmp_unlock_rom_ext_r>:
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:202
  uint32_t len = (region.end - region.start - 1) >> 3;
d000bbe2:       fff54613                not     a2,a0
d000bbe6:       95b2                    add     a1,a1,a2
d000bbe8:       818d                    srli    a1,a1,0x3
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000bbea:       8109                    srli    a0,a0,0x2
d000bbec:       8d4d                    or      a0,a0,a1
d000bbee:       0fff4597                auipc   a1,0xfff4
d000bbf2:       43258593                addi    a1,a1,1074 # e0000020 <epmp_state>
d000bbf6:       d588                    sw      a0,40(a1)
d000bbf8:       09900613                li      a2,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000bbfc:       00c58323                sb      a2,6(a1)
rom_epmp_unlock_rom_ext_r():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:138
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+

  CSR_WRITE(CSR_REG_PMPADDR6,
d000bc00:       3b651073                csrw    pmpaddr6,a0
d000bc04:       00ff0537                lui     a0,0xff0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:140
            region.start >> 2 | (region.end - region.start - 1) >> 3);
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff << 16);
d000bc08:       3a153073                csrc    pmpcfg1,a0
d000bc0c:       00990537                lui     a0,0x990
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:141
  CSR_SET_BITS(CSR_REG_PMPCFG1,
d000bc10:       3a152073                csrs    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:143
               ((kEpmpModeNapot | kEpmpPermLockedReadOnly) << 16));
}
d000bc14:       8082                    ret

d000bc16 <rom_epmp_config_debug_rom>:
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:145

void rom_epmp_config_debug_rom(lifecycle_state_t lc_state) {
d000bc16:                          1ff00593             li      a1,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:159
  //
  //            32          24          16           8           0
  //             +------------+------------+------------+------------+
  // `pmpcfg3` = | `pmp15cfg` | `pmp14cfg` | `pmp13cfg` | `pmp12cfg` |
  //             +------------+------------+------------+------------+
  CSR_WRITE(CSR_REG_PMPADDR13, pmpaddr);
d000bc1a:                          3bd59073             csrw    pmpaddr13,a1
d000bc1e:                          65c1                 lui     a1,0x10
d000bc20:                          f0058593             addi    a1,a1,-256 # ff00 <_stack_size+0xbf00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:160
  CSR_CLEAR_BITS(CSR_REG_PMPCFG3, 0xff00);
d000bc24:                          3a35b073             csrc    pmpcfg3,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bc28:                          85aa                 mv      a1,a0
d000bc2a:                          cf8d0637             lui     a2,0xcf8d0
d000bc2e:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  uint32_t pmpcfg;
  switch (launder32(lc_state)) {
d000bc32:                   /----- 02b6d363             bge     a3,a1,d000bc58 <rom_epmp_config_debug_rom+0x42>
d000bc36:                   |      aab60613             addi    a2,a2,-1365
d000bc3a:                /--|----- 02c58c63             beq     a1,a2,d000bc72 <rom_epmp_config_debug_rom+0x5c>
d000bc3e:                |  |      0b5a7637             lui     a2,0xb5a7
d000bc42:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000bc46:             /--|--|----- 04c59163             bne     a1,a2,d000bc88 <rom_epmp_config_debug_rom+0x72>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:168
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000bc4a:             |  |  |  /-- 00c50663             beq     a0,a2,d000bc56 <rom_epmp_config_debug_rom+0x40>
d000bc4e:             |  |  |  |   0000                 unimp
d000bc50:             |  |  |  |   0000                 unimp
d000bc52:             |  |  |  |   0000                 unimp
d000bc54:             |  |  |  |   0000                 unimp
d000bc56:       /-----|--|--|--\-X a0ad                 j       d000bcc0 <rom_epmp_config_debug_rom+0xaa>
d000bc58:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000bc5c:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000bc60:       |  /--|--|-------- 04c59463             bne     a1,a2,d000bca8 <rom_epmp_config_debug_rom+0x92>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:176
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000bc64:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000bc70 <rom_epmp_config_debug_rom+0x5a>
d000bc68:       |  |  |  |     |   0000                 unimp
d000bc6a:       |  |  |  |     |   0000                 unimp
d000bc6c:       |  |  |  |     |   0000                 unimp
d000bc6e:       |  |  |  |     |   0000                 unimp
d000bc70:       |  |  |  |  /--\-X a805                 j       d000bca0 <rom_epmp_config_debug_rom+0x8a>
d000bc72:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000bc76:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:180
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000bc7a:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000bc86 <rom_epmp_config_debug_rom+0x70>
d000bc7e:       |  |  |     |  |   0000                 unimp
d000bc80:       |  |  |     |  |   0000                 unimp
d000bc82:       |  |  |     |  |   0000                 unimp
d000bc84:       |  |  |     |  |   0000                 unimp
d000bc86:       +--|--|-----|--\-X a82d                 j       d000bcc0 <rom_epmp_config_debug_rom+0xaa>
d000bc88:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000bc8c:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000bc90:       |  |     /--|----- 02c59e63             bne     a1,a2,d000bccc <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000bc94:       |  |     |  +----- 00c50663             beq     a0,a2,d000bca0 <rom_epmp_config_debug_rom+0x8a>
d000bc98:       |  |     |  |      0000                 unimp
d000bc9a:       |  |     |  |      0000                 unimp
d000bc9c:       |  |     |  |      0000                 unimp
d000bc9e:       |  |     |  |      0000                 unimp
d000bca0:       |  |     |  \----> 6529                 lui     a0,0xa
d000bca2:       |  |     |         80050513             addi    a0,a0,-2048 # 9800 <_stack_size+0x5800>
d000bca6:       |  |     |     /-- a005                 j       d000bcc6 <rom_epmp_config_debug_rom+0xb0>
d000bca8:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000bcac:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000bcb0:       |        +-----|-- 00c59e63             bne     a1,a2,d000bccc <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:164
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000bcb4:       +--------|-----|-- 00c50663             beq     a0,a2,d000bcc0 <rom_epmp_config_debug_rom+0xaa>
d000bcb8:       |        |     |   0000                 unimp
d000bcba:       |        |     |   0000                 unimp
d000bcbc:       |        |     |   0000                 unimp
d000bcbe:       |        |     |   0000                 unimp
d000bcc0:       \--------|-----|-> 6529                 lui     a0,0xa
d000bcc2:                |     |   f0050513             addi    a0,a0,-256 # 9f00 <_stack_size+0x5f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:186
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  CSR_SET_BITS(CSR_REG_PMPCFG3, pmpcfg);
d000bcc6:                |     \-> 3a352073             csrs    pmpcfg3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:187
}
d000bcca:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:184
      HARDENED_UNREACHABLE();
d000bccc:                \-------> 0000                 unimp
d000bcce:                          0000                 unimp
d000bcd0:                          0000                 unimp
d000bcd2:                          0000                 unimp

d000bcd4 <sigverify_rsa_verify>:
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:199

rom_error_t sigverify_rsa_verify(const sigverify_rsa_buffer_t *signature,
                                 const sigverify_rsa_key_t *key,
                                 const hmac_digest_t *act_digest,
                                 lifecycle_state_t lc_state,
                                 uint32_t *flash_exec) {
d000bcd4:                             7125                      addi    sp,sp,-416
d000bcd6:                             18112e23                  sw      ra,412(sp)
d000bcda:                             18812c23                  sw      s0,408(sp)
d000bcde:                             18912a23                  sw      s1,404(sp)
d000bce2:                             19212823                  sw      s2,400(sp)
d000bce6:                             19312623                  sw      s3,396(sp)
d000bcea:                             19412423                  sw      s4,392(sp)
d000bcee:                             19512223                  sw      s5,388(sp)
d000bcf2:                             8aba                      mv      s5,a4
d000bcf4:                             577d                      li      a4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:200
  *flash_exec = UINT32_MAX;
d000bcf6:                             00eaa023                  sw      a4,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bcfa:                             8736                      mv      a4,a3
d000bcfc:                             cf8d0837                  lui     a6,0xcf8d0
d000bd00:                             aaa80793                  addi    a5,a6,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
d000bd04:                             84b2                      mv      s1,a2
d000bd06:                             89ae                      mv      s3,a1
d000bd08:                             892a                      mv      s2,a0
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000bd0a:                      /----- 02e7d363                  bge     a5,a4,d000bd30 <sigverify_rsa_verify+0x5c>
d000bd0e:                      |      aab80513                  addi    a0,a6,-1365
d000bd12:                   /--|----- 02a70c63                  beq     a4,a0,d000bd4a <sigverify_rsa_verify+0x76>
d000bd16:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000bd1a:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000bd1e:                /--|--|----- 04a71163                  bne     a4,a0,d000bd60 <sigverify_rsa_verify+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:179
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000bd22:                |  |  |  /-- 00a68663                  beq     a3,a0,d000bd2e <sigverify_rsa_verify+0x5a>
d000bd26:                |  |  |  |   0000                      unimp
d000bd28:                |  |  |  |   0000                      unimp
d000bd2a:                |  |  |  |   0000                      unimp
d000bd2c:                |  |  |  |   0000                      unimp
d000bd2e:             /--|--|--|--\-X a0a9                      j       d000bd78 <sigverify_rsa_verify+0xa4>
d000bd30:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000bd34:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000bd38:          /--|--|--|-------- 06a71363                  bne     a4,a0,d000bd9e <sigverify_rsa_verify+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:185
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000bd3c:          |  |  |  |     /-- 00a68663                  beq     a3,a0,d000bd48 <sigverify_rsa_verify+0x74>
d000bd40:          |  |  |  |     |   0000                      unimp
d000bd42:          |  |  |  |     |   0000                      unimp
d000bd44:          |  |  |  |     |   0000                      unimp
d000bd46:          |  |  |  |     |   0000                      unimp
d000bd48:          |  +--|--|-----\-X a805                      j       d000bd78 <sigverify_rsa_verify+0xa4>
d000bd4a:          |  |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000bd4e:          |  |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:188
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000bd52:          |  |  |        /-- 00a68663                  beq     a3,a0,d000bd5e <sigverify_rsa_verify+0x8a>
d000bd56:          |  |  |        |   0000                      unimp
d000bd58:          |  |  |        |   0000                      unimp
d000bd5a:          |  |  |        |   0000                      unimp
d000bd5c:          |  |  |        |   0000                      unimp
d000bd5e:          |  +--|--------\-X a829                      j       d000bd78 <sigverify_rsa_verify+0xa4>
d000bd60:          |  |  \----------> 65f25537                  lui     a0,0x65f25
d000bd64:          |  |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000bd68:       /--|--|-------------- 1ea71963                  bne     a4,a0,d000bf5a <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:182
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000bd6c:       |  |  +-------------- 00a68663                  beq     a3,a0,d000bd78 <sigverify_rsa_verify+0xa4>
d000bd70:       |  |  |               0000                      unimp
d000bd72:       |  |  |               0000                      unimp
d000bd74:       |  |  |               0000                      unimp
d000bd76:       |  |  |               0000                      unimp
d000bd78:       |  |  \-------------> 0e400513                  li      a0,228
d000bd7c:       |  |                  03a010ef                  jal     ra,d000cdb6 <otp_read32>
d000bd80:       |  |                  1d400593                  li      a1,468
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:203
  hardened_bool_t use_sw = sigverify_use_sw_rsa_verify(lc_state);
  sigverify_rsa_buffer_t enc_msg;
  switch (use_sw) {
d000bd84:       |  |           /----- 02b50963                  beq     a0,a1,d000bdb6 <sigverify_rsa_verify+0xe2>
d000bd88:       |  |           |      73900a13                  li      s4,1849
d000bd8c:       |  |     /-----|----- 1d451363                  bne     a0,s4,d000bf52 <sigverify_rsa_verify+0x27e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:205
    case kHardenedBoolTrue:
      RETURN_IF_ERROR(sigverify_mod_exp_ibex(key, signature, &enc_msg));
d000bd90:       |  |     |     |      860a                      mv      a2,sp
d000bd92:       |  |     |     |      854e                      mv      a0,s3
d000bd94:       |  |     |     |      85ca                      mv      a1,s2
d000bd96:       |  |     |     |      249d                      jal     d000bffc <sigverify_mod_exp_ibex>
d000bd98:       |  |     |     |  /-- 03450763                  beq     a0,s4,d000bdc6 <sigverify_rsa_verify+0xf2>
d000bd9c:       |  |     |  /--|--|-- aa59                      j       d000bf32 <sigverify_rsa_verify+0x25e>
d000bd9e:       |  \-----|--|--|--|-> b2866537                  lui     a0,0xb2866
d000bda2:       |        |  |  |  |   fbb50513                  addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000bda6:       +--------|--|--|--|-- 1aa71a63                  bne     a4,a0,d000bf5a <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:174
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000bdaa:       |        |  |  +--|-- 00a68663                  beq     a3,a0,d000bdb6 <sigverify_rsa_verify+0xe2>
d000bdae:       |        |  |  |  |   0000                      unimp
d000bdb0:       |        |  |  |  |   0000                      unimp
d000bdb2:       |        |  |  |  |   0000                      unimp
d000bdb4:       |        |  |  |  |   0000                      unimp
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:208
      break;
    case kHardenedBoolFalse:
      RETURN_IF_ERROR(sigverify_mod_exp_otbn(key, signature, &enc_msg));
d000bdb6:       |        |  |  \--|-> 860a                      mv      a2,sp
d000bdb8:       |        |  |     |   854e                      mv      a0,s3
d000bdba:       |        |  |     |   85ca                      mv      a1,s2
d000bdbc:       |        |  |     |   2d7d                      jal     d000c47a <sigverify_mod_exp_otbn>
d000bdbe:       |        |  |     |   73900593                  li      a1,1849
d000bdc2:       |        |  +-----|-- 16b51863                  bne     a0,a1,d000bf32 <sigverify_rsa_verify+0x25e>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bdc6:       |        |  |     \-> 4581                      li      a1,0
d000bdc8:       |        |  |         461d                      li      a2,7
d000bdca:       |        |  |         4501                      li      a0,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000bdcc:       |        |  |  /----- 02b66663                  bltu    a2,a1,d000bdf8 <sigverify_rsa_verify+0x124>
d000bdd0:       |        |  |  |      4501                      li      a0,0
d000bdd2:       |        |  |  |      858a                      mv      a1,sp
d000bdd4:       |        |  |  |      00002617                  auipc   a2,0x2
d000bdd8:       |        |  |  |      c3860613                  addi    a2,a2,-968 # d000da0c <kSigverifyShares>
d000bddc:       |        |  |  |      46a1                      li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000bdde:       |        |  |  |  /-> 4098                      lw      a4,0(s1)
d000bde0:       |        |  |  |  |   421c                      lw      a5,0(a2)
d000bde2:       |        |  |  |  |   4180                      lw      s0,0(a1)
d000bde4:       |        |  |  |  |   8f3d                      xor     a4,a4,a5
d000bde6:       |        |  |  |  |   8f21                      xor     a4,a4,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000bde8:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000bdea:       |        |  |  |  |   c198                      sw      a4,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bdec:       |        |  |  |  |   872a                      mv      a4,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000bdee:       |        |  |  |  |   0591                      addi    a1,a1,4
d000bdf0:       |        |  |  |  |   0611                      addi    a2,a2,4
d000bdf2:       |        |  |  |  |   0491                      addi    s1,s1,4
d000bdf4:       |        |  |  |  \-- fed765e3                  bltu    a4,a3,d000bdde <sigverify_rsa_verify+0x10a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bdf8:       |        |  |  \----> 4581                      li      a1,0
d000bdfa:       |        |  |         4611                      li      a2,4
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000bdfc:       |        |  |  /----- 04b66063                  bltu    a2,a1,d000be3c <sigverify_rsa_verify+0x168>
d000be00:       |        |  |  |      00251613                  slli    a2,a0,0x2
d000be04:       |        |  |  |      858a                      mv      a1,sp
d000be06:       |        |  |  |      95b2                      add     a1,a1,a2
d000be08:       |        |  |  |      00002697                  auipc   a3,0x2
d000be0c:       |        |  |  |      c0468693                  addi    a3,a3,-1020 # d000da0c <kSigverifyShares>
d000be10:       |        |  |  |      96b2                      add     a3,a3,a2
d000be12:       |        |  |  |      4605                      li      a2,1
d000be14:       |        |  |  |      00002717                  auipc   a4,0x2
d000be18:       |        |  |  |      d7870713                  addi    a4,a4,-648 # d000db8c <sigverify_encoded_message_check.kEncodedSha256>
d000be1c:       |        |  |  |      4815                      li      a6,5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:116
    enc_msg_ptr[i] ^= kEncodedSha256[j] ^ kSigverifyShares[i];
d000be1e:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000be20:       |        |  |  |  |   4280                      lw      s0,0(a3)
d000be22:       |        |  |  |  |   419c                      lw      a5,0(a1)
d000be24:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000be26:       |        |  |  |  |   8fa5                      xor     a5,a5,s1
d000be28:       |        |  |  |  |   c19c                      sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000be2a:       |        |  |  |  |   87b2                      mv      a5,a2
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000be2c:       |        |  |  |  |   0605                      addi    a2,a2,1
d000be2e:       |        |  |  |  |   0711                      addi    a4,a4,4
d000be30:       |        |  |  |  |   0591                      addi    a1,a1,4
d000be32:       |        |  |  |  |   0691                      addi    a3,a3,4
d000be34:       |        |  |  |  \-- ff07e5e3                  bltu    a5,a6,d000be1e <sigverify_rsa_verify+0x14a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000be38:       |        |  |  |      9532                      add     a0,a0,a2
d000be3a:       |        |  |  |      157d                      addi    a0,a0,-1
d000be3c:       |        |  |  \----> 4601                      li      a2,0
d000be3e:       |        |  |         05100693                  li      a3,81
d000be42:       |        |  |         00002597                  auipc   a1,0x2
d000be46:       |        |  |         bca58593                  addi    a1,a1,-1078 # d000da0c <kSigverifyShares>
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000be4a:       |        |  |  /----- 02c6ec63                  bltu    a3,a2,d000be82 <sigverify_rsa_verify+0x1ae>
d000be4e:       |        |  |  |      00251693                  slli    a3,a0,0x2
d000be52:       |        |  |  |      860a                      mv      a2,sp
d000be54:       |        |  |  |      9636                      add     a2,a2,a3
d000be56:       |        |  |  |      00002717                  auipc   a4,0x2
d000be5a:       |        |  |  |      bb670713                  addi    a4,a4,-1098 # d000da0c <kSigverifyShares>
d000be5e:       |        |  |  |      9736                      add     a4,a4,a3
d000be60:       |        |  |  |      4685                      li      a3,1
d000be62:       |        |  |  |      05200793                  li      a5,82
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:124
    enc_msg_ptr[i] ^= 0xffffffff ^ kSigverifyShares[i];
d000be66:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000be68:       |        |  |  |  |   4200                      lw      s0,0(a2)
d000be6a:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000be6c:       |        |  |  |  |   fff4c493                  not     s1,s1
d000be70:       |        |  |  |  |   c204                      sw      s1,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000be72:       |        |  |  |  |   84b6                      mv      s1,a3
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000be74:       |        |  |  |  |   0685                      addi    a3,a3,1
d000be76:       |        |  |  |  |   0611                      addi    a2,a2,4
d000be78:       |        |  |  |  |   0711                      addi    a4,a4,4
d000be7a:       |        |  |  |  \-- fef4e6e3                  bltu    s1,a5,d000be66 <sigverify_rsa_verify+0x192>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
  enc_msg_ptr[i] ^= 0x0001ffff ^ kSigverifyShares[i];
d000be7e:       |        |  |  |      9536                      add     a0,a0,a3
d000be80:       |        |  |  |      157d                      addi    a0,a0,-1
d000be82:       |        |  |  \----> 00251693                  slli    a3,a0,0x2
d000be86:       |        |  |         00b68633                  add     a2,a3,a1
d000be8a:       |        |  |         4218                      lw      a4,0(a2)
d000be8c:       |        |  |         860a                      mv      a2,sp
d000be8e:       |        |  |         96b2                      add     a3,a3,a2
d000be90:       |        |  |         429c                      lw      a5,0(a3)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000be92:       |        |  |         4481                      li      s1,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
d000be94:       |        |  |         8f3d                      xor     a4,a4,a5
d000be96:       |        |  |         000207b7                  lui     a5,0x20
d000be9a:       |        |  |         17fd                      addi    a5,a5,-1
d000be9c:       |        |  |         8f3d                      xor     a4,a4,a5
d000be9e:       |        |  |         c298                      sw      a4,0(a3)
d000bea0:       |        |  |         05f00693                  li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:128
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords - 1);
d000bea4:       |        |  |     /-- 00d50663                  beq     a0,a3,d000beb0 <sigverify_rsa_verify+0x1dc>
d000bea8:       |        |  |     |   0000                      unimp
d000beaa:       |        |  |     |   0000                      unimp
d000beac:       |        |  |     |   0000                      unimp
d000beae:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:132
  *flash_exec = 0;
d000beb0:       |        |  |     \-> 000aa023                  sw      zero,0(s5)
d000beb4:       |        |  |         4501                      li      a0,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000beb6:       |        |  |  /----- 0296ec63                  bltu    a3,s1,d000beee <sigverify_rsa_verify+0x21a>
d000beba:       |        |  |  |      4701                      li      a4,0
d000bebc:       |        |  |  |      4501                      li      a0,0
d000bebe:       |        |  |  |      06000693                  li      a3,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:137
    diff |= enc_msg_ptr[i] ^ kSigverifyShares[i];
d000bec2:       |        |  |  |  /-> 421c                      lw      a5,0(a2)
d000bec4:       |        |  |  |  |   4184                      lw      s1,0(a1)
d000bec6:       |        |  |  |  |   8cbd                      xor     s1,s1,a5
d000bec8:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000beca:       |        |  |  |  |   40e004b3                  neg     s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000bece:       |        |  |  |  |   000aa403                  lw      s0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000bed2:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:139
    diff |= ~(diff >> 31) + 1;  // Set to all 1s if MSB is set, no change o/w.
d000bed4:       |        |  |  |  |   41f75493                  srai    s1,a4,0x1f
d000bed8:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000beda:       |        |  |  |  |   8fa1                      xor     a5,a5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000bedc:       |        |  |  |  |   8fd9                      or      a5,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000bede:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000bee0:       |        |  |  |  |   00faa023                  sw      a5,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bee4:       |        |  |  |  |   87aa                      mv      a5,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000bee6:       |        |  |  |  |   0591                      addi    a1,a1,4
d000bee8:       |        |  |  |  |   0611                      addi    a2,a2,4
d000beea:       |        |  |  |  \-- fcd7ece3                  bltu    a5,a3,d000bec2 <sigverify_rsa_verify+0x1ee>
d000beee:       |        |  |  \----> 06000593                  li      a1,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:145
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords);
d000bef2:       |        |  |     /-- 00b50663                  beq     a0,a1,d000befe <sigverify_rsa_verify+0x22a>
d000bef6:       |        |  |     |   0000                      unimp
d000bef8:       |        |  |     |   0000                      unimp
d000befa:       |        |  |     |   0000                      unimp
d000befc:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:150
      (*flash_exec << 21 ^ *flash_exec << 10 ^ *flash_exec >> 1) >> 21;
d000befe:       |        |  |     \-> 000aa503                  lw      a0,0(s5)
d000bf02:       |        |  |         01551593                  slli    a1,a0,0x15
d000bf06:       |        |  |         00a51613                  slli    a2,a0,0xa
d000bf0a:       |        |  |         8db1                      xor     a1,a1,a2
d000bf0c:       |        |  |         8159                      srli    a0,a0,0x16
d000bf0e:       |        |  |         81d5                      srli    a1,a1,0x15
d000bf10:       |        |  |         8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bf12:       |        |  |         862a                      mv      a2,a0
d000bf14:       |        |  |         73900593                  li      a1,1849
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:151
  if (launder32(result) == kErrorOk) {
d000bf18:       |        |  |  /----- 00b61963                  bne     a2,a1,d000bf2a <sigverify_rsa_verify+0x256>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:152
    HARDENED_CHECK_EQ(result, kErrorOk);
d000bf1c:       |        |  |  |  /-- 00b50663                  beq     a0,a1,d000bf28 <sigverify_rsa_verify+0x254>
d000bf20:       |        |  |  |  |   0000                      unimp
d000bf22:       |        |  |  |  |   0000                      unimp
d000bf24:       |        |  |  |  |   0000                      unimp
d000bf26:       |        |  |  |  |   0000                      unimp
d000bf28:       |        |  +--|--\-X a029                      j       d000bf32 <sigverify_rsa_verify+0x25e>
d000bf2a:       |        |  |  \----> 01535537                  lui     a0,0x1535
d000bf2e:       |        |  |         60350513                  addi    a0,a0,1539 # 1535603 <_rom_ext_virtual_size+0x14b5603>
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:214
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  return sigverify_encoded_message_check(&enc_msg, act_digest, flash_exec);
}
d000bf32:       |        |  \-------> 18412a83                  lw      s5,388(sp)
d000bf36:       |        |            18812a03                  lw      s4,392(sp)
d000bf3a:       |        |            18c12983                  lw      s3,396(sp)
d000bf3e:       |        |            19012903                  lw      s2,400(sp)
d000bf42:       |        |            19412483                  lw      s1,404(sp)
d000bf46:       |        |            19812403                  lw      s0,408(sp)
d000bf4a:       |        |            19c12083                  lw      ra,412(sp)
d000bf4e:       |        |            611d                      addi    sp,sp,416
d000bf50:       |        |            8082                      ret
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:211
      HARDENED_UNREACHABLE();
d000bf52:       |        \----------> 0000                      unimp
d000bf54:       |                     0000                      unimp
d000bf56:       |                     0000                      unimp
d000bf58:       |                     0000                      unimp
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:191
      HARDENED_UNREACHABLE();
d000bf5a:       \-------------------> 0000                      unimp
d000bf5c:                             0000                      unimp
d000bf5e:                             0000                      unimp
d000bf60:                             0000                      unimp

d000bf62 <sigverify_usage_constraints_get>:
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:217

void sigverify_usage_constraints_get(
    uint32_t selector_bits, manifest_usage_constraints_t *usage_constraints) {
d000bf62:              1141                     addi    sp,sp,-16
d000bf64:              c606                     sw      ra,12(sp)
d000bf66:              c422                     sw      s0,8(sp)
d000bf68:              c226                     sw      s1,4(sp)
d000bf6a:              c04a                     sw      s2,0(sp)
d000bf6c:              892e                     mv      s2,a1
d000bf6e:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:218
  usage_constraints->selector_bits = selector_bits;
d000bf70:              c188                     sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:219
  lifecycle_device_id_get(&usage_constraints->device_id);
d000bf72:              00458413                 addi    s0,a1,4
d000bf76:              8522                     mv      a0,s0
d000bf78:              5dd000ef                 jal     ra,d000cd54 <lifecycle_device_id_get>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:222

  usage_constraints->manuf_state_creator =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MANUF_STATE_OFFSET);
d000bf7c:              10400513                 li      a0,260
d000bf80:              637000ef                 jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:221
  usage_constraints->manuf_state_creator =
d000bf84:              02a92223                 sw      a0,36(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:224
  usage_constraints->manuf_state_owner =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_MANUF_STATE_OFFSET);
d000bf88:              56800513                 li      a0,1384
d000bf8c:              62b000ef                 jal     ra,d000cdb6 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:223
  usage_constraints->manuf_state_owner =
d000bf90:              02a92423                 sw      a0,40(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:225
  usage_constraints->life_cycle_state = lifecycle_state_get();
d000bf94:              411000ef                 jal     ra,d000cba4 <lifecycle_state_get>
d000bf98:              4581                     li      a1,0
d000bf9a:              02a92623                 sw      a0,44(s2)
d000bf9e:              a5a5a537                 lui     a0,0xa5a5a
d000bfa2:              5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
d000bfa6:              4621                     li      a2,8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000bfa8:       /----> 00b4d6b3                 srl     a3,s1,a1
d000bfac:       |      8a85                     andi    a3,a3,1
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:232
  static_assert(
      kManifestSelectorBitDeviceIdFirst == 0 &&
          kManifestSelectorBitDeviceIdLast == kLifecycleDeviceIdNumWords - 1,
      "mapping from selector_bits to device_id changed, loop must be updated");
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    if (!bitfield_bit32_read(selector_bits, i)) {
d000bfae:       |  /-- e291                     bnez    a3,d000bfb2 <sigverify_usage_constraints_get+0x50>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:233
      usage_constraints->device_id.device_id[i] =
d000bfb0:       |  |   c008                     sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:231
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000bfb2:       |  \-> 0585                     addi    a1,a1,1
d000bfb4:       |      0411                     addi    s0,s0,4
d000bfb6:       \----- fec599e3                 bne     a1,a2,d000bfa8 <sigverify_usage_constraints_get+0x46>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000bfba:              1004f513                 andi    a0,s1,256
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:237
          MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
    }
  }
  if (!bitfield_bit32_read(selector_bits,
d000bfbe:          /-- e519                     bnez    a0,d000bfcc <sigverify_usage_constraints_get+0x6a>
d000bfc0:          |   a5a5a537                 lui     a0,0xa5a5a
d000bfc4:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:239
                           kManifestSelectorBitManufStateCreator)) {
    usage_constraints->manuf_state_creator =
d000bfc8:          |   02a92223                 sw      a0,36(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000bfcc:          \-> 2004f513                 andi    a0,s1,512
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:242
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits,
d000bfd0:          /-- e519                     bnez    a0,d000bfde <sigverify_usage_constraints_get+0x7c>
d000bfd2:          |   a5a5a537                 lui     a0,0xa5a5a
d000bfd6:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:244
                           kManifestSelectorBitManufStateOwner)) {
    usage_constraints->manuf_state_owner =
d000bfda:          |   02a92423                 sw      a0,40(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000bfde:          \-> 4004f513                 andi    a0,s1,1024
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:247
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits, kManifestSelectorBitLifeCycleState)) {
d000bfe2:          /-- e519                     bnez    a0,d000bff0 <sigverify_usage_constraints_get+0x8e>
d000bfe4:          |   a5a5a537                 lui     a0,0xa5a5a
d000bfe8:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:248
    usage_constraints->life_cycle_state =
d000bfec:          |   02a92623                 sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:251
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
}
d000bff0:          \-> 4902                     lw      s2,0(sp)
d000bff2:              4492                     lw      s1,4(sp)
d000bff4:              4422                     lw      s0,8(sp)
d000bff6:              40b2                     lw      ra,12(sp)
d000bff8:              0141                     addi    sp,sp,16
d000bffa:              8082                     ret

d000bffc <sigverify_mod_exp_ibex>:
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:169
  }
}

rom_error_t sigverify_mod_exp_ibex(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000bffc:                          7125                 addi    sp,sp,-416
d000bffe:                          18112e23             sw      ra,412(sp)
d000c002:                          18812c23             sw      s0,408(sp)
d000c006:                          18912a23             sw      s1,404(sp)
d000c00a:                          19212823             sw      s2,400(sp)
d000c00e:                          19312623             sw      s3,396(sp)
d000c012:                          19412423             sw      s4,392(sp)
d000c016:                          19512223             sw      s5,388(sp)
d000c01a:                          8a32                 mv      s4,a2
d000c01c:                          892e                 mv      s2,a1
d000c01e:                          8aaa                 mv      s5,a0
d000c020:                          05f00593             li      a1,95
d000c024:                          17c00613             li      a2,380
d000c028:                          03535537             lui     a0,0x3535
d000c02c:                          60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
d000c030:                          05f00693             li      a3,95
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000c034:                   /----> 00c90733             add     a4,s2,a2
d000c038:                   |      4318                 lw      a4,0(a4)
d000c03a:                   |      00ca87b3             add     a5,s5,a2
d000c03e:                   |      439c                 lw      a5,0(a5)
d000c040:                   |  /-- 00f71763             bne     a4,a5,d000c04e <sigverify_mod_exp_ibex+0x52>
d000c044:                   |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000c046:                   |  |   1671                 addi    a2,a2,-4
d000c048:                   \--|-- fed5f6e3             bgeu    a1,a3,d000c034 <sigverify_mod_exp_ibex+0x38>
d000c04c:       /--------------|-- a275                 j       d000c1f8 <sigverify_mod_exp_ibex+0x1fc>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:172
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (greater_equal_modulus(key, sig)) {
d000c04e:       |           /--\-X 00e7f763             bgeu    a5,a4,d000c05c <sigverify_mod_exp_ibex+0x60>
d000c052:       |           |      03535537             lui     a0,0x3535
d000c056:       |           |      60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
d000c05a:       +-----------|----- aa79                 j       d000c1f8 <sigverify_mod_exp_ibex+0x1fc>
d000c05c:       |           \----> 898a                 mv      s3,sp
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:142
  memset(buf.data, 0, sizeof(result->data));
d000c05e:       |                  850a                 mv      a0,sp
d000c060:       |                  18000613             li      a2,384
d000c064:       |                  18000413             li      s0,384
d000c068:       |                  4581                 li      a1,0
d000c06a:       |                  040010ef             jal     ra,d000d0aa <memset>
d000c06e:       |                  4501                 li      a0,0
d000c070:       |                  4581                 li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c072:       |              /-> 00a98633             add     a2,s3,a0
d000c076:       |              |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c078:       |              |   00aa8733             add     a4,s5,a0
d000c07c:       |              |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c07e:       |              |   40b687b3             sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c082:       |              |   00b6b5b3             sltu    a1,a3,a1
d000c086:       |              |   00e7b6b3             sltu    a3,a5,a4
d000c08a:       |              |   95b6                 add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c08c:       |              |   40e786b3             sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c090:       |              |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c092:       |              |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c094:       |              \-- fc851fe3             bne     a0,s0,d000c072 <sigverify_mod_exp_ibex+0x76>
d000c098:       |                  4881                 li      a7,0
d000c09a:       |                  858a                 mv      a1,sp
d000c09c:       |                  e8400293             li      t0,-380
d000c0a0:       |                  05f00313             li      t1,95
d000c0a4:       |                  06000813             li      a6,96
d000c0a8:       |                  18000793             li      a5,384
shift_left():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000c0ac:       |  /-------------> 17c12383             lw      t2,380(sp)
d000c0b0:       |  |               4701                 li      a4,0
d000c0b2:       |  |               851e                 mv      a0,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000c0b4:       |  |           /-> 00e58633             add     a2,a1,a4
d000c0b8:       |  |           |   17862683             lw      a3,376(a2)
d000c0bc:       |  |           |   0506                 slli    a0,a0,0x1
d000c0be:       |  |           |   01f6d413             srli    s0,a3,0x1f
d000c0c2:       |  |           |   8d41                 or      a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000c0c4:       |  |           |   1771                 addi    a4,a4,-4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000c0c6:       |  |           |   16a62e23             sw      a0,380(a2)
d000c0ca:       |  |           |   8536                 mv      a0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000c0cc:       |  |           \-- fe5714e3             bne     a4,t0,d000c0b4 <sigverify_mod_exp_ibex+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000c0d0:       |  |               4502                 lw      a0,0(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000c0d2:       |  |               01f3d393             srli    t2,t2,0x1f
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000c0d6:       |  |               0506                 slli    a0,a0,0x1
d000c0d8:       |  |               c02a                 sw      a0,0(sp)
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000c0da:       |  |     /-------- 02039563             bnez    t2,d000c104 <sigverify_mod_exp_ibex+0x108>
d000c0de:       |  |  /--|-------> 05f00413             li      s0,95
d000c0e2:       |  |  |  |         17c00513             li      a0,380
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000c0e6:       |  |  |  |  /----> 00a58633             add     a2,a1,a0
d000c0ea:       |  |  |  |  |      4210                 lw      a2,0(a2)
d000c0ec:       |  |  |  |  |      00aa86b3             add     a3,s5,a0
d000c0f0:       |  |  |  |  |      4294                 lw      a3,0(a3)
d000c0f2:       |  |  |  |  |  /-- 00d61763             bne     a2,a3,d000c100 <sigverify_mod_exp_ibex+0x104>
d000c0f6:       |  |  |  |  |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000c0f8:       |  |  |  |  |  |   1571                 addi    a0,a0,-4
d000c0fa:       |  |  |  |  \--|-- fe8376e3             bgeu    t1,s0,d000c0e6 <sigverify_mod_exp_ibex+0xea>
d000c0fe:       |  |  |  +-----|-- a019                 j       d000c104 <sigverify_mod_exp_ibex+0x108>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000c100:       |  |  |  |  /--\-X 02c6fc63             bgeu    a3,a2,d000c138 <sigverify_mod_exp_ibex+0x13c>
d000c104:       |  |  |  >--|----> 4501                 li      a0,0
d000c106:       |  |  |  |  |      4401                 li      s0,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c108:       |  |  |  |  |  /-> 00a58633             add     a2,a1,a0
d000c10c:       |  |  |  |  |  |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c10e:       |  |  |  |  |  |   00aa8733             add     a4,s5,a0
d000c112:       |  |  |  |  |  |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c114:       |  |  |  |  |  |   408684b3             sub     s1,a3,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c118:       |  |  |  |  |  |   0086b6b3             sltu    a3,a3,s0
d000c11c:       |  |  |  |  |  |   00e4b433             sltu    s0,s1,a4
d000c120:       |  |  |  |  |  |   9436                 add     s0,s0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c122:       |  |  |  |  |  |   40e486b3             sub     a3,s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c126:       |  |  |  |  |  |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c128:       |  |  |  |  |  |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c12a:       |  |  |  |  |  \-- fcf51fe3             bne     a0,a5,d000c108 <sigverify_mod_exp_ibex+0x10c>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:155
      msb -= subtract_modulus(key, &buf);
d000c12e:       |  |  |  |  |      408383b3             sub     t2,t2,s0
d000c132:       |  |  |  \--|----- fc0399e3             bnez    t2,d000c104 <sigverify_mod_exp_ibex+0x108>
d000c136:       |  |  \-----|----- b765                 j       d000c0de <sigverify_mod_exp_ibex+0xe2>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:150
  for (size_t i = 0; i < 96; ++i) {
d000c138:       |  |        \----> 0885                 addi    a7,a7,1
d000c13a:       |  \-------------- f70899e3             bne     a7,a6,d000c0ac <sigverify_mod_exp_ibex+0xb0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:160
  mont_mul(key, &buf, &buf, result);
d000c13e:       |                  858a                 mv      a1,sp
d000c140:       |                  860a                 mv      a2,sp
d000c142:       |                  8556                 mv      a0,s5
d000c144:       |                  86d2                 mv      a3,s4
d000c146:       |                  28c9                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000c148:       |                  868a                 mv      a3,sp
d000c14a:       |                  8556                 mv      a0,s5
d000c14c:       |                  85d2                 mv      a1,s4
d000c14e:       |                  8652                 mv      a2,s4
d000c150:       |                  20e1                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000c152:       |                  858a                 mv      a1,sp
d000c154:       |                  860a                 mv      a2,sp
d000c156:       |                  8556                 mv      a0,s5
d000c158:       |                  86d2                 mv      a3,s4
d000c15a:       |                  287d                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000c15c:       |                  868a                 mv      a3,sp
d000c15e:       |                  8556                 mv      a0,s5
d000c160:       |                  85d2                 mv      a1,s4
d000c162:       |                  8652                 mv      a2,s4
d000c164:       |                  2855                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000c166:       |                  858a                 mv      a1,sp
d000c168:       |                  860a                 mv      a2,sp
d000c16a:       |                  8556                 mv      a0,s5
d000c16c:       |                  86d2                 mv      a3,s4
d000c16e:       |                  206d                 jal     d000c218 <mont_mul>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:181
  sigverify_rsa_buffer_t buf;

  // result = R^2 mod n
  calc_r_square(key, result);
  // buf = sig * R mod n
  mont_mul(key, sig, result, &buf);
d000c170:       |                  868a                 mv      a3,sp
d000c172:       |                  8556                 mv      a0,s5
d000c174:       |                  85ca                 mv      a1,s2
d000c176:       |                  8652                 mv      a2,s4
d000c178:       |                  2045                 jal     d000c218 <mont_mul>
d000c17a:       |                  4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:184
  for (size_t i = 0; i < 8; ++i) {
    // result = sig^{2*4^i} * R mod n (sig's exponent: 2, 8, 32, ..., 32768)
    mont_mul(key, &buf, &buf, result);
d000c17c:       |              /-> 858a                 mv      a1,sp
d000c17e:       |              |   860a                 mv      a2,sp
d000c180:       |              |   8556                 mv      a0,s5
d000c182:       |              |   86d2                 mv      a3,s4
d000c184:       |              |   2851                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:186
    // buf = sig^{4^{i+1}} * R mod n (sig's exponent: 4, 16, 64, ..., 65536)
    mont_mul(key, result, result, &buf);
d000c186:       |              |   868a                 mv      a3,sp
d000c188:       |              |   8556                 mv      a0,s5
d000c18a:       |              |   85d2                 mv      a1,s4
d000c18c:       |              |   8652                 mv      a2,s4
d000c18e:       |              |   2069                 jal     d000c218 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:182
  for (size_t i = 0; i < 8; ++i) {
d000c190:       |              |   147d                 addi    s0,s0,-1
d000c192:       |              \-- f46d                 bnez    s0,d000c17c <sigverify_mod_exp_ibex+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:189
  }
  // result = sig^65537 mod n
  mont_mul(key, &buf, sig, result);
d000c194:       |                  858a                 mv      a1,sp
d000c196:       |                  8556                 mv      a0,s5
d000c198:       |                  864a                 mv      a2,s2
d000c19a:       |                  86d2                 mv      a3,s4
d000c19c:       |                  28b5                 jal     d000c218 <mont_mul>
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000c19e:       |                  17ca8513             addi    a0,s5,380
d000c1a2:       |                  17ca0593             addi    a1,s4,380
d000c1a6:       |                  05f00613             li      a2,95
d000c1aa:       |                  05f00693             li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000c1ae:       |              /-> 4198                 lw      a4,0(a1)
d000c1b0:       |              |   411c                 lw      a5,0(a0)
d000c1b2:       |           /--|-- 00f71863             bne     a4,a5,d000c1c2 <sigverify_mod_exp_ibex+0x1c6>
d000c1b6:       |           |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000c1b8:       |           |  |   1571                 addi    a0,a0,-4
d000c1ba:       |           |  |   15f1                 addi    a1,a1,-4
d000c1bc:       |           |  \-- fed679e3             bgeu    a2,a3,d000c1ae <sigverify_mod_exp_ibex+0x1b2>
d000c1c0:       |           |  /-- a019                 j       d000c1c6 <sigverify_mod_exp_ibex+0x1ca>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:194

  // We need this check because the result of `mont_mul` is not guaranteed to be
  // the least non-negative residue. We need to subtract the modulus n from
  // `result` at most once because R/2 < n < R.
  if (greater_equal_modulus(key, result)) {
d000c1c2:       |        /--\--|-X 02e7f963             bgeu    a5,a4,d000c1f4 <sigverify_mod_exp_ibex+0x1f8>
d000c1c6:       |        |     \-> 4501                 li      a0,0
d000c1c8:       |        |         4601                 li      a2,0
d000c1ca:       |        |         18000593             li      a1,384
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c1ce:       |        |     /-> 00aa06b3             add     a3,s4,a0
d000c1d2:       |        |     |   4298                 lw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c1d4:       |        |     |   00aa87b3             add     a5,s5,a0
d000c1d8:       |        |     |   439c                 lw      a5,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c1da:       |        |     |   40c704b3             sub     s1,a4,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c1de:       |        |     |   00c73633             sltu    a2,a4,a2
d000c1e2:       |        |     |   00f4b733             sltu    a4,s1,a5
d000c1e6:       |        |     |   963a                 add     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c1e8:       |        |     |   40f48733             sub     a4,s1,a5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c1ec:       |        |     |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c1ee:       |        |     |   c298                 sw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c1f0:       |        |     \-- fcb51fe3             bne     a0,a1,d000c1ce <sigverify_mod_exp_ibex+0x1d2>
d000c1f4:       |        \-------> 73900513             li      a0,1849
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:199
    subtract_modulus(key, result);
  }

  return kErrorOk;
}
d000c1f8:       \----------------> 18412a83             lw      s5,388(sp)
d000c1fc:                          18812a03             lw      s4,392(sp)
d000c200:                          18c12983             lw      s3,396(sp)
d000c204:                          19012903             lw      s2,400(sp)
d000c208:                          19412483             lw      s1,404(sp)
d000c20c:                          19812403             lw      s0,408(sp)
d000c210:                          19c12083             lw      ra,412(sp)
d000c214:                          611d                 addi    sp,sp,416
d000c216:                          8082                 ret

d000c218 <mont_mul>:
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:90
                     sigverify_rsa_buffer_t *result) {
d000c218:                 7179                  addi    sp,sp,-48
d000c21a:                 d606                  sw      ra,44(sp)
d000c21c:                 d422                  sw      s0,40(sp)
d000c21e:                 d226                  sw      s1,36(sp)
d000c220:                 d04a                  sw      s2,32(sp)
d000c222:                 ce4e                  sw      s3,28(sp)
d000c224:                 cc52                  sw      s4,24(sp)
d000c226:                 ca56                  sw      s5,20(sp)
d000c228:                 c85a                  sw      s6,16(sp)
d000c22a:                 c65e                  sw      s7,12(sp)
d000c22c:                 8bb6                  mv      s7,a3
d000c22e:                 89b2                  mv      s3,a2
d000c230:                 892e                  mv      s2,a1
d000c232:                 8b2a                  mv      s6,a0
d000c234:                 5a7d                  li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:91
  memset(result->data, 0, sizeof(result->data));
d000c236:                 18000613              li      a2,384
d000c23a:                 18000a93              li      s5,384
d000c23e:                 8536                  mv      a0,a3
d000c240:                 4581                  li      a1,0
d000c242:                 669000ef              jal     ra,d000d0aa <memset>
d000c246:                 4881                  li      a7,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000c248:                 00498313              addi    t1,s3,4
d000c24c:                 004b0e93              addi    t4,s6,4
d000c250:                 17800293              li      t0,376
d000c254:                 06000813              li      a6,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000c258:       /-------> 00289513              slli    a0,a7,0x2
d000c25c:       |         00a90f33              add     t5,s2,a0
d000c260:       |         000f2503              lw      a0,0(t5)
d000c264:       |         0009a583              lw      a1,0(s3)
d000c268:       |         000ba483              lw      s1,0(s7)
d000c26c:       |         4701                  li      a4,0
d000c26e:       |         02a5b3b3              mulhu   t2,a1,a0
d000c272:       |         02a585b3              mul     a1,a1,a0
d000c276:       |         94ae                  add     s1,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000c278:       |         180b2683              lw      a3,384(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000c27c:       |         000b2e03              lw      t3,0(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000c280:       |         00b4b5b3              sltu    a1,s1,a1
d000c284:       |         959e                  add     a1,a1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000c286:       |         02968fb3              mul     t6,a3,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000c28a:       |         03cf83b3              mul     t2,t6,t3
d000c28e:       |         0144f4b3              and     s1,s1,s4
d000c292:       |         949e                  add     s1,s1,t2
d000c294:       |         0074b3b3              sltu    t2,s1,t2
d000c298:       |         03cfb4b3              mulhu   s1,t6,t3
d000c29c:       |         949e                  add     s1,s1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000c29e:       |  /----> 00e30633              add     a2,t1,a4
d000c2a2:       |  |      4210                  lw      a2,0(a2)
d000c2a4:       |  |      00eb8433              add     s0,s7,a4
d000c2a8:       |  |      405c                  lw      a5,4(s0)
d000c2aa:       |  |      02a636b3              mulhu   a3,a2,a0
d000c2ae:       |  |      02a60533              mul     a0,a2,a0
d000c2b2:       |  |      00f58633              add     a2,a1,a5
d000c2b6:       |  |      00b635b3              sltu    a1,a2,a1
d000c2ba:       |  |      95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000c2bc:       |  |      00ee86b3              add     a3,t4,a4
d000c2c0:       |  |      4294                  lw      a3,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000c2c2:       |  |      9532                  add     a0,a0,a2
d000c2c4:       |  |      00c53633              sltu    a2,a0,a2
d000c2c8:       |  |      95b2                  add     a1,a1,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000c2ca:       |  |      03f6b633              mulhu   a2,a3,t6
d000c2ce:       |  |      03f686b3              mul     a3,a3,t6
d000c2d2:       |  |      01457533              and     a0,a0,s4
d000c2d6:       |  |      009687b3              add     a5,a3,s1
d000c2da:       |  |      00d7b6b3              sltu    a3,a5,a3
d000c2de:       |  |      9636                  add     a2,a2,a3
d000c2e0:       |  |      953e                  add     a0,a0,a5
d000c2e2:       |  |      00f536b3              sltu    a3,a0,a5
d000c2e6:       |  |      00d604b3              add     s1,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:113
      result->data[j - 1] = (uint32_t)acc1;
d000c2ea:       |  |      c008                  sw      a0,0(s0)
d000c2ec:       |  |  /-- 00570663              beq     a4,t0,d000c2f8 <mont_mul+0xe0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000c2f0:       |  |  |   000f2503              lw      a0,0(t5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:110
    for (size_t j = 1; j < ARRAYSIZE(result->data); ++j) {
d000c2f4:       |  |  |   0711                  addi    a4,a4,4
d000c2f6:       |  \--|-- b765                  j       d000c29e <mont_mul+0x86>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:115
    acc0 = (acc0 >> 32) + (acc1 >> 32);
d000c2f8:       |     \-> 00b48533              add     a0,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:116
    result->data[ARRAYSIZE(result->data) - 1] = (uint32_t)acc0;
d000c2fc:       |         16abae23              sw      a0,380(s7)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:127
    if (acc0 >> 32) {
d000c300:       |  /----- 02957763              bgeu    a0,s1,d000c32e <mont_mul+0x116>
d000c304:       |  |      4501                  li      a0,0
d000c306:       |  |      4581                  li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c308:       |  |  /-> 00ab8633              add     a2,s7,a0
d000c30c:       |  |  |   4214                  lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c30e:       |  |  |   00ab0733              add     a4,s6,a0
d000c312:       |  |  |   4318                  lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000c314:       |  |  |   40b687b3              sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000c318:       |  |  |   00b6b5b3              sltu    a1,a3,a1
d000c31c:       |  |  |   00e7b6b3              sltu    a3,a5,a4
d000c320:       |  |  |   95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c322:       |  |  |   40e786b3              sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000c326:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000c328:       |  |  |   c214                  sw      a3,0(a2)
d000c32a:       |  |  \-- fd551fe3              bne     a0,s5,d000c308 <mont_mul+0xf0>
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000c32e:       |  \----> 0885                  addi    a7,a7,1
d000c330:       \-------- f30894e3              bne     a7,a6,d000c258 <mont_mul+0x40>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:131
}
d000c334:                 4bb2                  lw      s7,12(sp)
d000c336:                 4b42                  lw      s6,16(sp)
d000c338:                 4ad2                  lw      s5,20(sp)
d000c33a:                 4a62                  lw      s4,24(sp)
d000c33c:                 49f2                  lw      s3,28(sp)
d000c33e:                 5902                  lw      s2,32(sp)
d000c340:                 5492                  lw      s1,36(sp)
d000c342:                 5422                  lw      s0,40(sp)
d000c344:                 50b2                  lw      ra,44(sp)
d000c346:                 6145                  addi    sp,sp,48
d000c348:                 8082                  ret

d000c34a <run_otbn_rsa_3072_modexp>:
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:69
}

rom_error_t run_otbn_rsa_3072_modexp(
    const sigverify_rsa_key_t *public_key,
    const sigverify_rsa_buffer_t *signature,
    sigverify_rsa_buffer_t *recovered_message) {
d000c34a:                 7139                  addi    sp,sp,-64
d000c34c:                 de06                  sw      ra,60(sp)
d000c34e:                 dc22                  sw      s0,56(sp)
d000c350:                 da26                  sw      s1,52(sp)
d000c352:                 d84a                  sw      s2,48(sp)
d000c354:                 d64e                  sw      s3,44(sp)
d000c356:                 d452                  sw      s4,40(sp)
d000c358:                 8932                  mv      s2,a2
d000c35a:                 8a2e                  mv      s4,a1
d000c35c:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:73
  otbn_t otbn;

  // Initialize OTBN and load the RSA app.
  otbn_init(&otbn);
d000c35e:                 0808                  addi    a0,sp,16
d000c360:                 2ab1                  jal     d000c4bc <otbn_init>
d000c362:                 00002517              auipc   a0,0x2
d000c366:                 83e50513              addi    a0,a0,-1986 # d000dba0 <kOtbnAppRsa>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
  HARDENED_RETURN_IF_ERROR(otbn_load_app(&otbn, kOtbnAppRsa));
d000c36a:                 454c                  lw      a1,12(a0)
d000c36c:                 4510                  lw      a2,8(a0)
d000c36e:                 4154                  lw      a3,4(a0)
d000c370:                 4108                  lw      a0,0(a0)
d000c372:                 c62e                  sw      a1,12(sp)
d000c374:                 c432                  sw      a2,8(sp)
d000c376:                 c236                  sw      a3,4(sp)
d000c378:                 c02a                  sw      a0,0(sp)
d000c37a:                 0808                  addi    a0,sp,16
d000c37c:                 858a                  mv      a1,sp
d000c37e:                 2aa9                  jal     d000c4d8 <otbn_load_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c380:                 85aa                  mv      a1,a0
d000c382:                 73900413              li      s0,1849
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
d000c386:       /-------- 0e859263              bne     a1,s0,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c38a:       |     /-- 00850663              beq     a0,s0,d000c396 <run_otbn_rsa_3072_modexp+0x4c>
d000c38e:       |     |   0000                  unimp
d000c390:       |     |   0000                  unimp
d000c392:       |     |   0000                  unimp
d000c394:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000c396:       |     \-> 00000693              li      a3,0
d000c39a:       |         0808                  addi    a0,sp,16
d000c39c:       |         06000593              li      a1,96
d000c3a0:       |         8626                  mv      a2,s1
d000c3a2:       |         2cbd                  jal     d000c620 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c3a4:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:77

  // Set the modulus (n).
  HARDENED_RETURN_IF_ERROR(
d000c3a6:       +-------- 0c859263              bne     a1,s0,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c3aa:       |         73900993              li      s3,1849
d000c3ae:       |     /-- 01350663              beq     a0,s3,d000c3ba <run_otbn_rsa_3072_modexp+0x70>
d000c3b2:       |     |   0000                  unimp
d000c3b4:       |     |   0000                  unimp
d000c3b6:       |     |   0000                  unimp
d000c3b8:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000c3ba:       |     \-> 32000693              li      a3,800
d000c3be:       |         0808                  addi    a0,sp,16
d000c3c0:       |         06000593              li      a1,96
d000c3c4:       |         8652                  mv      a2,s4
d000c3c6:       |         2ca9                  jal     d000c620 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c3c8:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:81
      write_rsa_3072_int_to_otbn(&otbn, &public_key->n, kOtbnVarRsaInMod));

  // Set the signature.
  HARDENED_RETURN_IF_ERROR(
d000c3ca:       +-------- 0b359063              bne     a1,s3,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c3ce:       |     /-- 01350663              beq     a0,s3,d000c3da <run_otbn_rsa_3072_modexp+0x90>
d000c3d2:       |     |   0000                  unimp
d000c3d4:       |     |   0000                  unimp
d000c3d6:       |     |   0000                  unimp
d000c3d8:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
      write_rsa_3072_int_to_otbn(&otbn, signature, kOtbnVarRsaInBuf));

  // Set the precomputed constant m0_inv.
  HARDENED_RETURN_IF_ERROR(otbn_copy_data_to_otbn(
d000c3da:       |     \-> 18048613              addi    a2,s1,384
d000c3de:       |         18000693              li      a3,384
d000c3e2:       |         0808                  addi    a0,sp,16
d000c3e4:       |         45a1                  li      a1,8
d000c3e6:       |         2c2d                  jal     d000c620 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c3e8:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
d000c3ea:       +-------- 09359063              bne     a1,s3,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c3ee:       |         73900413              li      s0,1849
d000c3f2:       |     /-- 00850663              beq     a0,s0,d000c3fe <run_otbn_rsa_3072_modexp+0xb4>
d000c3f6:       |     |   0000                  unimp
d000c3f8:       |     |   0000                  unimp
d000c3fa:       |     |   0000                  unimp
d000c3fc:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
      &otbn, kOtbnWideWordNumWords, public_key->n0_inv, kOtbnVarRsaM0Inv));

  // Start the OTBN routine.
  HARDENED_RETURN_IF_ERROR(otbn_execute_app(&otbn));
d000c3fe:       |     \-> 0808                  addi    a0,sp,16
d000c400:       |         22d5                  jal     d000c5e4 <otbn_execute_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c402:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
d000c404:       +-------- 06859363              bne     a1,s0,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c408:       |     /-- 00850663              beq     a0,s0,d000c414 <run_otbn_rsa_3072_modexp+0xca>
d000c40c:       |     |   0000                  unimp
d000c40e:       |     |   0000                  unimp
d000c410:       |     |   0000                  unimp
d000c412:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:94

  // Check that the instruction count falls within the expected range. If the
  // instruction count falls outside this range, it indicates that there was a
  // fault injection attack of some kind during OTBN execution.
  uint32_t count = otbn_instruction_count_get();
d000c414:       |     \-> 2621                  jal     d000c71c <otbn_instruction_count_get>
d000c416:       |         85aa                  mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c418:       |         862a                  mv      a2,a0
d000c41a:       |         06425537              lui     a0,0x6425
d000c41e:       |         0002c6b7              lui     a3,0x2c
d000c422:       |         39b68693              addi    a3,a3,923 # 2c39b <_stack_size+0x2839b>
d000c426:       |         e0d50513              addi    a0,a0,-499 # 6424e0d <_rom_ext_virtual_size+0x63a4e0d>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
  if (launder32(count) < kModExpOtbnInsnCountMin ||
d000c42a:       +-------- 04d66063              bltu    a2,a3,d000c46a <run_otbn_rsa_3072_modexp+0x120>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c42e:       |         86ae                  mv      a3,a1
d000c430:       |         00030637              lui     a2,0x30
d000c434:       |         6fd60613              addi    a2,a2,1789 # 306fd <_stack_size+0x2c6fd>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
d000c438:       +-------- 02d66963              bltu    a2,a3,d000c46a <run_otbn_rsa_3072_modexp+0x120>
d000c43c:       |         0002c537              lui     a0,0x2c
d000c440:       |         39b50513              addi    a0,a0,923 # 2c39b <_stack_size+0x2839b>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:99
      launder32(count) > kModExpOtbnInsnCountMax) {
    return kErrorOtbnBadInsnCount;
  }
  HARDENED_CHECK_GE(count, kModExpOtbnInsnCountMin);
d000c444:       |     /-- 00a5f663              bgeu    a1,a0,d000c450 <run_otbn_rsa_3072_modexp+0x106>
d000c448:       |     |   0000                  unimp
d000c44a:       |     |   0000                  unimp
d000c44c:       |     |   0000                  unimp
d000c44e:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:100
  HARDENED_CHECK_LE(count, kModExpOtbnInsnCountMax);
d000c450:       |  /--\-X 00b67663              bgeu    a2,a1,d000c45c <run_otbn_rsa_3072_modexp+0x112>
d000c454:       |  |      0000                  unimp
d000c456:       |  |      0000                  unimp
d000c458:       |  |      0000                  unimp
d000c45a:       |  |      0000                  unimp
read_rsa_3072_int_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:63
  return otbn_copy_data_from_otbn(otbn, kSigVerifyRsaNumWords, src, dst->data);
d000c45c:       |  \----> 4a000613              li      a2,1184
d000c460:       |         0808                  addi    a0,sp,16
d000c462:       |         06000593              li      a1,96
d000c466:       |         86ca                  mv      a3,s2
d000c468:       |         22c9                  jal     d000c62a <otbn_copy_data_from_otbn>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:105

  // Read recovered message out of OTBN dmem.
  return read_rsa_3072_int_from_otbn(&otbn, kOtbnVarRsaOutBuf,
                                     recovered_message);
}
d000c46a:       \-------> 5a22                  lw      s4,40(sp)
d000c46c:                 59b2                  lw      s3,44(sp)
d000c46e:                 5942                  lw      s2,48(sp)
d000c470:                 54d2                  lw      s1,52(sp)
d000c472:                 5462                  lw      s0,56(sp)
d000c474:                 50f2                  lw      ra,60(sp)
d000c476:                 6121                  addi    sp,sp,64
d000c478:                 8082                  ret

d000c47a <sigverify_mod_exp_otbn>:
sigverify_mod_exp_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:109

rom_error_t sigverify_mod_exp_otbn(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000c47a:           1141                        addi    sp,sp,-16
d000c47c:           c606                        sw      ra,12(sp)
d000c47e:           c422                        sw      s0,8(sp)
d000c480:           c226                        sw      s1,4(sp)
d000c482:           c04a                        sw      s2,0(sp)
d000c484:           8932                        mv      s2,a2
d000c486:           84ae                        mv      s1,a1
d000c488:           842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:112
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (memrcmp(key->n.data, sig->data, kSigVerifyRsaNumBytes) <= 0) {
d000c48a:           18000613            li      a2,384
d000c48e:           47f000ef            jal     ra,d000d10c <memrcmp>
d000c492:       /-- 00a05b63            blez    a0,d000c4a8 <sigverify_mod_exp_otbn+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:117
    return kErrorSigverifyBadSignature;
  }

  // Run OTBN application.
  return run_otbn_rsa_3072_modexp(key, sig, result);
d000c496:       |   8522                        mv      a0,s0
d000c498:       |   85a6                        mv      a1,s1
d000c49a:       |   864a                        mv      a2,s2
d000c49c:       |   4902                        lw      s2,0(sp)
d000c49e:       |   4492                        lw      s1,4(sp)
d000c4a0:       |   4422                        lw      s0,8(sp)
d000c4a2:       |   40b2                        lw      ra,12(sp)
d000c4a4:       |   0141                        addi    sp,sp,16
d000c4a6:       |   b555                        j       d000c34a <run_otbn_rsa_3072_modexp>
d000c4a8:       \-> 03535537            lui     a0,0x3535
d000c4ac:           60350513            addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:118
}
d000c4b0:           4902                        lw      s2,0(sp)
d000c4b2:           4492                        lw      s1,4(sp)
d000c4b4:           4422                        lw      s0,8(sp)
d000c4b6:           40b2                        lw      ra,12(sp)
d000c4b8:           0141                        addi    sp,sp,16
d000c4ba:           8082                        ret

d000c4bc <otbn_init>:
otbn_init():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:17
#include "sw/device/silicon_creator/lib/drivers/otbn.h"

#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void otbn_init(otbn_t *ctx) {
  *ctx = (otbn_t){
d000c4bc:       00052023                sw      zero,0(a0)
d000c4c0:       00052223                sw      zero,4(a0)
d000c4c4:       00052423                sw      zero,8(a0)
d000c4c8:       00052623                sw      zero,12(a0)
d000c4cc:       1d400593                li      a1,468
d000c4d0:       c90c                    sw      a1,16(a0)
d000c4d2:       00052a23                sw      zero,20(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:22
      .app = {0},
      .app_is_loaded = kHardenedBoolFalse,
      .error_bits = kOtbnErrBitsNoError,
  };
}
d000c4d6:       8082                    ret

d000c4d8 <otbn_load_app>:
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:47
    return false;
  }
  return true;
}

rom_error_t otbn_load_app(otbn_t *ctx, const otbn_app_t app) {
d000c4d8:                    7179                       addi    sp,sp,-48
d000c4da:                    d606                       sw      ra,44(sp)
d000c4dc:                    d422                       sw      s0,40(sp)
d000c4de:                    d226                       sw      s1,36(sp)
d000c4e0:                    d04a                       sw      s2,32(sp)
d000c4e2:                    ce4e                       sw      s3,28(sp)
d000c4e4:                    cc52                       sw      s4,24(sp)
d000c4e6:                    ca56                       sw      s5,20(sp)
d000c4e8:                    c85a                       sw      s6,16(sp)
d000c4ea:                    c65e                       sw      s7,12(sp)
d000c4ec:                    842e                       mv      s0,a1
check_app_address_ranges():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:37
  if (app->imem_end <= app->imem_start) {
d000c4ee:                    41cc                       lw      a1,4(a1)
d000c4f0:                    4010                       lw      a2,0(s0)
d000c4f2:                    892a                       mv      s2,a0
d000c4f4:                    01425537           lui     a0,0x1425
d000c4f8:                    e0350493           addi    s1,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13a4e03>
d000c4fc:       /----------- 0cb67863           bgeu    a2,a1,d000c5cc <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:41
  if (app->dmem_data_end < app->dmem_data_start) {
d000c500:       |            4448                       lw      a0,12(s0)
d000c502:       |            440c                       lw      a1,8(s0)
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:48
  if (!check_app_address_ranges(&app)) {
d000c504:       +----------- 0cb56463           bltu    a0,a1,d000c5cc <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:53
    return kErrorOtbnInvalidArgument;
  }

  // If OTBN is busy, wait for it to be done.
  HARDENED_RETURN_IF_ERROR(otbn_busy_wait_for_done());
d000c508:       |            222d                       jal     d000c632 <otbn_busy_wait_for_done>
d000c50a:       |            84aa                       mv      s1,a0
d000c50c:       |            73900a93           li      s5,1849
d000c510:       +----------- 0b551e63           bne     a0,s5,d000c5cc <otbn_load_app+0xf4>
d000c514:       |        /-- 01548663           beq     s1,s5,d000c520 <otbn_load_app+0x48>
d000c518:       |        |   0000                       unimp
d000c51a:       |        |   0000                       unimp
d000c51c:       |        |   0000                       unimp
d000c51e:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55

  const size_t imem_num_words = app.imem_end - app.imem_start;
d000c520:       |        \-> 00442b03           lw      s6,4(s0)
d000c524:       |            00042b83           lw      s7,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:56
  const size_t data_num_words = app.dmem_data_end - app.dmem_data_start;
d000c528:       |            00c42983           lw      s3,12(s0)
d000c52c:       |            00842a03           lw      s4,8(s0)
d000c530:       |            1d400513           li      a0,468
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:58

  ctx->app_is_loaded = kHardenedBoolFalse;
d000c534:       |            00a92823           sw      a0,16(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:60

  HARDENED_RETURN_IF_ERROR(otbn_imem_sec_wipe());
d000c538:       |            22f5                       jal     d000c724 <otbn_imem_sec_wipe>
d000c53a:       |            84aa                       mv      s1,a0
d000c53c:       +----------- 09551863           bne     a0,s5,d000c5cc <otbn_load_app+0xf4>
d000c540:       |            73900a93           li      s5,1849
d000c544:       |        /-- 01548663           beq     s1,s5,d000c550 <otbn_load_app+0x78>
d000c548:       |        |   0000                       unimp
d000c54a:       |        |   0000                       unimp
d000c54c:       |        |   0000                       unimp
d000c54e:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000c550:       |        \-> 400c                       lw      a1,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55
  const size_t imem_num_words = app.imem_end - app.imem_start;
d000c552:       |            417b0533           sub     a0,s6,s7
d000c556:       |            40255613           srai    a2,a0,0x2
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000c55a:       |            4501                       li      a0,0
d000c55c:       |            2ad1                       jal     d000c730 <otbn_imem_write>
d000c55e:       |            84aa                       mv      s1,a0
d000c560:       +----------- 07551663           bne     a0,s5,d000c5cc <otbn_load_app+0xf4>
d000c564:       |        /-- 01548663           beq     s1,s5,d000c570 <otbn_load_app+0x98>
d000c568:       |        |   0000                       unimp
d000c56a:       |        |   0000                       unimp
d000c56c:       |        |   0000                       unimp
d000c56e:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63

  HARDENED_RETURN_IF_ERROR(otbn_dmem_sec_wipe());
d000c570:       |        \-> 2cbd                       jal     d000c7ee <otbn_dmem_sec_wipe>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c572:       |            85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63
d000c574:       |  /-------- 05559b63           bne     a1,s5,d000c5ca <otbn_load_app+0xf2>
d000c578:       |  |         41498633           sub     a2,s3,s4
d000c57c:       |  |         73900493           li      s1,1849
d000c580:       |  |     /-- 00950663           beq     a0,s1,d000c58c <otbn_load_app+0xb4>
d000c584:       |  |     |   0000                       unimp
d000c586:       |  |     |   0000                       unimp
d000c588:       |  |     |   0000                       unimp
d000c58a:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:64
  if (data_num_words > 0) {
d000c58c:       |  |  /--\-X c205                       beqz    a2,d000c5ac <otbn_load_app+0xd4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
    HARDENED_RETURN_IF_ERROR(
d000c58e:       |  |  |      440c                       lw      a1,8(s0)
d000c590:       |  |  |      8609                       srai    a2,a2,0x2
d000c592:       |  |  |      4501                       li      a0,0
d000c594:       |  |  |      24a5                       jal     d000c7fc <otbn_dmem_write>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c596:       |  |  |      85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
d000c598:       |  +--|----- 02959963           bne     a1,s1,d000c5ca <otbn_load_app+0xf2>
d000c59c:       |  |  |      73900593           li      a1,1849
d000c5a0:       |  |  +----- 00b50663           beq     a0,a1,d000c5ac <otbn_load_app+0xd4>
d000c5a4:       |  |  |      0000                       unimp
d000c5a6:       |  |  |      0000                       unimp
d000c5a8:       |  |  |      0000                       unimp
d000c5aa:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:69
        otbn_dmem_write(0, app.dmem_data_start, data_num_words));
  }

  ctx->app = app;
d000c5ac:       |  |  \----> 4448                       lw      a0,12(s0)
d000c5ae:       |  |         00a92623           sw      a0,12(s2)
d000c5b2:       |  |         4408                       lw      a0,8(s0)
d000c5b4:       |  |         00a92423           sw      a0,8(s2)
d000c5b8:       |  |         4048                       lw      a0,4(s0)
d000c5ba:       |  |         00a92223           sw      a0,4(s2)
d000c5be:       |  |         4008                       lw      a0,0(s0)
d000c5c0:       |  |         00a92023           sw      a0,0(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:70
  ctx->app_is_loaded = kHardenedBoolTrue;
d000c5c4:       |  |         00992823           sw      s1,16(s2)
d000c5c8:       +--|-------- a011                       j       d000c5cc <otbn_load_app+0xf4>
d000c5ca:       |  \-------> 84aa                       mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:72
  return kErrorOk;
}
d000c5cc:       \----------> 8526                       mv      a0,s1
d000c5ce:                    4bb2                       lw      s7,12(sp)
d000c5d0:                    4b42                       lw      s6,16(sp)
d000c5d2:                    4ad2                       lw      s5,20(sp)
d000c5d4:                    4a62                       lw      s4,24(sp)
d000c5d6:                    49f2                       lw      s3,28(sp)
d000c5d8:                    5902                       lw      s2,32(sp)
d000c5da:                    5492                       lw      s1,36(sp)
d000c5dc:                    5422                       lw      s0,40(sp)
d000c5de:                    50b2                       lw      ra,44(sp)
d000c5e0:                    6145                       addi    sp,sp,48
d000c5e2:                    8082                       ret

d000c5e4 <otbn_execute_app>:
otbn_execute_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:74

rom_error_t otbn_execute_app(otbn_t *ctx) {
d000c5e4:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:75
  if (launder32(ctx->app_is_loaded) != kHardenedBoolTrue) {
d000c5e6:              c606                     sw      ra,12(sp)
d000c5e8:              4910                     lw      a2,16(a0)
d000c5ea:              73900593                 li      a1,1849
d000c5ee:       /----- 02b61263                 bne     a2,a1,d000c612 <otbn_execute_app+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:78
    return kErrorOtbnInvalidArgument;
  }
  HARDENED_CHECK_EQ(ctx->app_is_loaded, kHardenedBoolTrue);
d000c5f2:       |      4908                     lw      a0,16(a0)
d000c5f4:       |  /-- 00b50663                 beq     a0,a1,d000c600 <otbn_execute_app+0x1c>
d000c5f8:       |  |   0000                     unimp
d000c5fa:       |  |   0000                     unimp
d000c5fc:       |  |   0000                     unimp
d000c5fe:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:80

  rom_error_t err = otbn_execute();
d000c600:       |  \-> 2051                     jal     d000c684 <otbn_execute>
d000c602:       |      0fff4597                 auipc   a1,0xfff4
d000c606:       |      a7258593                 addi    a1,a1,-1422 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:81
  SEC_MMIO_WRITE_INCREMENT(kOtbnSecMmioExecute);
d000c60a:       |      4590                     lw      a2,8(a1)
d000c60c:       |      0605                     addi    a2,a2,1
d000c60e:       |      c590                     sw      a2,8(a1)
d000c610:       |  /-- a029                     j       d000c61a <otbn_execute_app+0x36>
d000c612:       \--|-> 01425537                 lui     a0,0x1425
d000c616:          |   e0350513                 addi    a0,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13a4e03>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:83
  return err;
}
d000c61a:          \-> 40b2                     lw      ra,12(sp)
d000c61c:              0141                     addi    sp,sp,16
d000c61e:              8082                     ret

d000c620 <otbn_copy_data_to_otbn>:
otbn_copy_data_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:86

rom_error_t otbn_copy_data_to_otbn(otbn_t *ctx, size_t len, const uint32_t *src,
                                   otbn_addr_t dest) {
d000c620:       8536                    mv      a0,a3
d000c622:       86ae                    mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:87
  return otbn_dmem_write(dest, src, len);
d000c624:       85b2                    mv      a1,a2
d000c626:       8636                    mv      a2,a3
d000c628:       aad1                    j       d000c7fc <otbn_dmem_write>

d000c62a <otbn_copy_data_from_otbn>:
otbn_copy_data_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:91
}

rom_error_t otbn_copy_data_from_otbn(otbn_t *ctx, size_t len_bytes,
                                     otbn_addr_t src, uint32_t *dest) {
d000c62a:       8532                    mv      a0,a2
d000c62c:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:92
  return otbn_dmem_read(src, dest, len_bytes);
d000c62e:       85b6                    mv      a1,a3
d000c630:       a41d                    j       d000c856 <otbn_dmem_read>

d000c632 <otbn_busy_wait_for_done>:
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:62
    return kErrorOtbnBadOffsetLen;
  }
  return kErrorOk;
}

rom_error_t otbn_busy_wait_for_done(void) {
d000c632:              557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:64
  uint32_t status = launder32(UINT32_MAX);
  rom_error_t res = launder32(kErrorOk ^ status);
d000c634:              73954513                 xori    a0,a0,1849
d000c638:              c11305b7                 lui     a1,0xc1130
d000c63c:              0ff00613                 li      a2,255
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000c640:          /-> 4d94                     lw      a3,24(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c642:          |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
  do {
    status = abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET);
  } while (launder32(status) != kOtbnStatusIdle &&
d000c644:       /--|-- c701                     beqz    a4,d000c64c <otbn_busy_wait_for_done+0x1a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c646:       |  |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
d000c648:       |  \-- fec71ce3                 bne     a4,a2,d000c640 <otbn_busy_wait_for_done+0xe>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:69
           launder32(status) != kOtbnStatusLocked);
  res ^= ~status;
d000c64c:       \----> 8d35                     xor     a0,a0,a3
d000c64e:              fff54513                 not     a0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c652:              862a                     mv      a2,a0
d000c654:              73900593                 li      a1,1849
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:70
  if (launder32(res) == kErrorOk) {
d000c658:       /----- 02b61163                 bne     a2,a1,d000c67a <otbn_busy_wait_for_done+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:71
    HARDENED_CHECK_EQ(res, kErrorOk);
d000c65c:       |  /-- 00b50663                 beq     a0,a1,d000c668 <otbn_busy_wait_for_done+0x36>
d000c660:       |  |   0000                     unimp
d000c662:       |  |   0000                     unimp
d000c664:       |  |   0000                     unimp
d000c666:       |  |   0000                     unimp
d000c668:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c66c:       |      4d8c                     lw      a1,24(a1)
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:72
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000c66e:       |  /-- c589                     beqz    a1,d000c678 <otbn_busy_wait_for_done+0x46>
d000c670:       |  |   0000                     unimp
d000c672:       |  |   0000                     unimp
d000c674:       |  |   0000                     unimp
d000c676:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:77
                      kOtbnStatusIdle);
    return res;
  }
  return kErrorOtbnUnavailable;
}
d000c678:       |  \-> 8082                     ret
d000c67a:       \----> 07425537                 lui     a0,0x7425
d000c67e:              e0d50513                 addi    a0,a0,-499 # 7424e0d <_rom_ext_virtual_size+0x73a4e0d>
d000c682:              8082                     ret

d000c684 <otbn_execute>:
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:151
    return res;
  }
  return error;
}

rom_error_t otbn_execute(void) {
d000c684:       1141                    addi    sp,sp,-16
d000c686:       c606                    sw      ra,12(sp)
d000c688:       c1130537                lui     a0,0xc1130
d000c68c:       0551                    addi    a0,a0,20
otbn_set_ctrl_software_errs_fatal():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:221
    new_ctrl = 1;
  } else {
    new_ctrl = 0;
  }

  sec_mmio_write32(kBase + OTBN_CTRL_REG_OFFSET, new_ctrl);
d000c68e:       4585                    li      a1,1
d000c690:       03d000ef                jal     ra,d000cecc <sec_mmio_write32>
d000c694:       03425537                lui     a0,0x3425
d000c698:       e0d50593                addi    a1,a0,-499 # 3424e0d <_rom_ext_virtual_size+0x33a4e0d>
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:153
  return otbn_cmd_run(kOtbnCmdExecute, kErrorOtbnExecutionFailed);
d000c69c:       0d800513                li      a0,216
d000c6a0:       40b2                    lw      ra,12(sp)
d000c6a2:       0141                    addi    sp,sp,16
d000c6a4:       a009                    j       d000c6a6 <otbn_cmd_run>

d000c6a6 <otbn_cmd_run>:
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:112
static rom_error_t otbn_cmd_run(otbn_cmd_t cmd, rom_error_t error) {
d000c6a6:              882e                     mv      a6,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c6a8:              4701                     li      a4,0
d000c6aa:              c1130637                 lui     a2,0xc1130
d000c6ae:              4685                     li      a3,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000c6b0:              c214                     sw      a3,0(a2)
d000c6b2:              ca08                     sw      a0,16(a2)
d000c6b4:              80000537                 lui     a0,0x80000
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000c6b8:          /-- 00d71663                 bne     a4,a3,d000c6c4 <otbn_cmd_run+0x1e>
d000c6bc:          |   4581                     li      a1,0
d000c6be:          |   73950513                 addi    a0,a0,1849 # 80000739 <_stack_end+0x9ffe0739>
d000c6c2:       /--|-- a811                     j       d000c6d6 <otbn_cmd_run+0x30>
d000c6c4:       |  \-> 73950513                 addi    a0,a0,1849
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000c6c8:       |  /-> 420c                     lw      a1,0(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
    res ^= bitfield_bit32_read(reg, OTBN_INTR_COMMON_DONE_BIT) << kResDoneBit;
d000c6ca:       |  |   01f59793                 slli    a5,a1,0x1f
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c6ce:       |  |   872e                     mv      a4,a1
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
d000c6d0:       |  |   8d3d                     xor     a0,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000c6d2:       |  \-- fed71be3                 bne     a4,a3,d000c6c8 <otbn_cmd_run+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:130
  HARDENED_CHECK_EQ(reg, kIntrStateDone);
d000c6d6:       \--/-X 00d58663                 beq     a1,a3,d000c6e2 <otbn_cmd_run+0x3c>
d000c6da:          |   0000                     unimp
d000c6dc:          |   0000                     unimp
d000c6de:          |   0000                     unimp
d000c6e0:          |   0000                     unimp
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000c6e2:          \-> c214                     sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000c6e4:              4e4c                     lw      a1,28(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:135
  res ^= err_bits;
d000c6e6:              8d2d                     xor     a0,a0,a1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c6e8:              4e10                     lw      a2,24(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c6ea:              85aa                     mv      a1,a0
d000c6ec:              73900693                 li      a3,1849
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:142
  if (launder32(res) == kErrorOk && launder32(status) == kOtbnStatusIdle) {
d000c6f0:       /----- 02d59463                 bne     a1,a3,d000c718 <otbn_cmd_run+0x72>
d000c6f4:       +----- e215                     bnez    a2,d000c718 <otbn_cmd_run+0x72>
d000c6f6:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:143
    HARDENED_CHECK_EQ(res, kErrorOk);
d000c6fa:       |  /-- 00b50663                 beq     a0,a1,d000c706 <otbn_cmd_run+0x60>
d000c6fe:       |  |   0000                     unimp
d000c700:       |  |   0000                     unimp
d000c702:       |  |   0000                     unimp
d000c704:       |  |   0000                     unimp
d000c706:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c70a:       |      4d8c                     lw      a1,24(a1)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:144
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000c70c:       |  /-- c589                     beqz    a1,d000c716 <otbn_cmd_run+0x70>
d000c70e:       |  |   0000                     unimp
d000c710:       |  |   0000                     unimp
d000c712:       |  |   0000                     unimp
d000c714:       |  |   0000                     unimp
d000c716:       |  \-> 882a                     mv      a6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:149
}
d000c718:       \----> 8542                     mv      a0,a6
d000c71a:              8082                     ret

d000c71c <otbn_instruction_count_get>:
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:160
uint32_t otbn_instruction_count_get(void) {
d000c71c:       c1130537                lui     a0,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c720:       5148                    lw      a0,36(a0)
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:161
  return abs_mmio_read32(kBase + OTBN_INSN_CNT_REG_OFFSET);
d000c722:       8082                    ret

d000c724 <otbn_imem_sec_wipe>:
otbn_imem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:164
rom_error_t otbn_imem_sec_wipe(void) {
d000c724:       04425537                lui     a0,0x4425
d000c728:       e0d50593                addi    a1,a0,-499 # 4424e0d <_rom_ext_virtual_size+0x43a4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:165
  return otbn_cmd_run(kOtbnCmdSecWipeImem, kErrorOtbnSecWipeImemFailed);
d000c72c:       4579                    li      a0,30
d000c72e:       bfa5                    j       d000c6a6 <otbn_cmd_run>

d000c730 <otbn_imem_write>:
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:169
                            size_t num_words) {
d000c730:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000c732:              c606                     sw      ra,12(sp)
d000c734:              00261693                 slli    a3,a2,0x2
d000c738:              00a68733                 add     a4,a3,a0
d000c73c:              00d736b3                 sltu    a3,a4,a3
d000c740:              6785                     lui     a5,0x1
d000c742:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000c746:              8ed9                     or      a3,a3,a4
d000c748:              73900713                 li      a4,1849
d000c74c:          /-- e681                     bnez    a3,d000c754 <otbn_imem_write+0x24>
d000c74e:          |   73900693                 li      a3,1849
d000c752:       /--|-- a029                     j       d000c75c <otbn_imem_write+0x2c>
d000c754:       |  \-> 024256b7                 lui     a3,0x2425
d000c758:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c75c:       \----> 87b6                     mv      a5,a3
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:170
  HARDENED_RETURN_IF_ERROR(
d000c75e:       /----- 02e79063                 bne     a5,a4,d000c77e <otbn_imem_write+0x4e>
d000c762:       |      73900713                 li      a4,1849
d000c766:       |  /-- 00e68663                 beq     a3,a4,d000c772 <otbn_imem_write+0x42>
d000c76a:       |  |   0000                     unimp
d000c76c:       |  |   0000                     unimp
d000c76e:       |  |   0000                     unimp
d000c770:       |  |   0000                     unimp
d000c772:       |  \-> c11346b7                 lui     a3,0xc1134
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:172
  otbn_write(kBase + OTBN_IMEM_REG_OFFSET + offset_bytes, src, num_words);
d000c776:       |      9536                     add     a0,a0,a3
d000c778:       |      2039                     jal     d000c786 <otbn_write>
d000c77a:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:174
}
d000c77e:       \----> 8536                     mv      a0,a3
d000c780:              40b2                     lw      ra,12(sp)
d000c782:              0141                     addi    sp,sp,16
d000c784:              8082                     ret

d000c786 <otbn_write>:
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:87
                       size_t num_words) {
d000c786:                 1141                  addi    sp,sp,-16
d000c788:                 c606                  sw      ra,12(sp)
d000c78a:                 c422                  sw      s0,8(sp)
d000c78c:                 c226                  sw      s1,4(sp)
d000c78e:                 c04a                  sw      s2,0(sp)
d000c790:                 8432                  mv      s0,a2
d000c792:                 892e                  mv      s2,a1
d000c794:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000c796:                 2a1d                  jal     d000c8cc <rnd_uint32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c798:                 4601                  li      a2,0
d000c79a:                 4581                  li      a1,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000c79c:       /-------- 02867d63              bgeu    a2,s0,d000c7d6 <otbn_write+0x50>
d000c7a0:       |         4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000c7a2:       |         02853533              mulhu   a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:93
    abs_mmio_write32(dest_addr + i * sizeof(uint32_t), src[i]);
d000c7a6:       |  /----> 00251613              slli    a2,a0,0x2
d000c7aa:       |  |      00c906b3              add     a3,s2,a2
d000c7ae:       |  |      4294                  lw      a3,0(a3)
d000c7b0:       |  |      9626                  add     a2,a2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:94
    i += kStep;
d000c7b2:       |  |      0505                  addi    a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000c7b4:       |  |      c214                  sw      a3,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c7b6:       |  |      86aa                  mv      a3,a0
d000c7b8:       |  |      4601                  li      a2,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:95
    if (launder32(i) >= num_words) {
d000c7ba:       |  |  /-- 0086e363              bltu    a3,s0,d000c7c0 <otbn_write+0x3a>
d000c7be:       |  |  |   8622                  mv      a2,s0
d000c7c0:       |  |  \-> 8d11                  sub     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000c7c2:       |  |      0585                  addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:98
    HARDENED_CHECK_LT(i, num_words);
d000c7c4:       |  |  /-- 00856663              bltu    a0,s0,d000c7d0 <otbn_write+0x4a>
d000c7c8:       |  |  |   0000                  unimp
d000c7ca:       |  |  |   0000                  unimp
d000c7cc:       |  |  |   0000                  unimp
d000c7ce:       |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c7d0:       |  |  \-> 862e                  mv      a2,a1
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000c7d2:       |  \----- fc866ae3              bltu    a2,s0,d000c7a6 <otbn_write+0x20>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:100
  HARDENED_CHECK_EQ(iter_cnt, num_words);
d000c7d6:       \-----/-X 00858663              beq     a1,s0,d000c7e2 <otbn_write+0x5c>
d000c7da:             |   0000                  unimp
d000c7dc:             |   0000                  unimp
d000c7de:             |   0000                  unimp
d000c7e0:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:101
}
d000c7e2:             \-> 4902                  lw      s2,0(sp)
d000c7e4:                 4492                  lw      s1,4(sp)
d000c7e6:                 4422                  lw      s0,8(sp)
d000c7e8:                 40b2                  lw      ra,12(sp)
d000c7ea:                 0141                  addi    sp,sp,16
d000c7ec:                 8082                  ret

d000c7ee <otbn_dmem_sec_wipe>:
otbn_dmem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:176
rom_error_t otbn_dmem_sec_wipe(void) {
d000c7ee:       05425537                lui     a0,0x5425
d000c7f2:       e0d50593                addi    a1,a0,-499 # 5424e0d <_rom_ext_virtual_size+0x53a4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:177
  return otbn_cmd_run(kOtbnCmdSecWipeDmem, kErrorOtbnSecWipeDmemFailed);
d000c7f6:       0c300513                li      a0,195
d000c7fa:       b575                    j       d000c6a6 <otbn_cmd_run>

d000c7fc <otbn_dmem_write>:
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:181
                            size_t num_words) {
d000c7fc:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000c7fe:              c606                     sw      ra,12(sp)
d000c800:              00261693                 slli    a3,a2,0x2
d000c804:              00a68733                 add     a4,a3,a0
d000c808:              00d736b3                 sltu    a3,a4,a3
d000c80c:              6785                     lui     a5,0x1
d000c80e:              c0078793                 addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000c812:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000c816:              8ed9                     or      a3,a3,a4
d000c818:              73900713                 li      a4,1849
d000c81c:          /-- e681                     bnez    a3,d000c824 <otbn_dmem_write+0x28>
d000c81e:          |   73900693                 li      a3,1849
d000c822:       /--|-- a029                     j       d000c82c <otbn_dmem_write+0x30>
d000c824:       |  \-> 024256b7                 lui     a3,0x2425
d000c828:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c82c:       \----> 87b6                     mv      a5,a3
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:182
  HARDENED_RETURN_IF_ERROR(
d000c82e:       /----- 02e79063                 bne     a5,a4,d000c84e <otbn_dmem_write+0x52>
d000c832:       |      73900713                 li      a4,1849
d000c836:       |  /-- 00e68663                 beq     a3,a4,d000c842 <otbn_dmem_write+0x46>
d000c83a:       |  |   0000                     unimp
d000c83c:       |  |   0000                     unimp
d000c83e:       |  |   0000                     unimp
d000c840:       |  |   0000                     unimp
d000c842:       |  \-> c11386b7                 lui     a3,0xc1138
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:184
  otbn_write(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes, src, num_words);
d000c846:       |      9536                     add     a0,a0,a3
d000c848:       |      3f3d                     jal     d000c786 <otbn_write>
d000c84a:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:186
}
d000c84e:       \----> 8536                     mv      a0,a3
d000c850:              40b2                     lw      ra,12(sp)
d000c852:              0141                     addi    sp,sp,16
d000c854:              8082                     ret

d000c856 <otbn_dmem_read>:
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000c856:                    00261693           slli    a3,a2,0x2
d000c85a:                    00a68733           add     a4,a3,a0
d000c85e:                    00d736b3           sltu    a3,a4,a3
d000c862:                    6785                       lui     a5,0x1
d000c864:                    c0078793           addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000c868:                    00e7b733           sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000c86c:                    8f55                       or      a4,a4,a3
d000c86e:                    73900693           li      a3,1849
d000c872:                /-- e701                       bnez    a4,d000c87a <otbn_dmem_read+0x24>
d000c874:                |   73900713           li      a4,1849
d000c878:             /--|-- a029                       j       d000c882 <otbn_dmem_read+0x2c>
d000c87a:             |  \-> 02425737           lui     a4,0x2425
d000c87e:             |      e0370713           addi    a4,a4,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c882:             \----> 87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
  HARDENED_RETURN_IF_ERROR(
d000c884:       /----------- 04d79163           bne     a5,a3,d000c8c6 <otbn_dmem_read+0x70>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c888:       |            4781                       li      a5,0
d000c88a:       |            73900693           li      a3,1849
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
d000c88e:       |        /-- 00d70663           beq     a4,a3,d000c89a <otbn_dmem_read+0x44>
d000c892:       |        |   0000                       unimp
d000c894:       |        |   0000                       unimp
d000c896:       |        |   0000                       unimp
d000c898:       |        |   0000                       unimp
d000c89a:       |        \-> 4701                       li      a4,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000c89c:       |  /-------- 00c7fe63           bgeu    a5,a2,d000c8b8 <otbn_dmem_read+0x62>
d000c8a0:       |  |         4701                       li      a4,0
d000c8a2:       |  |         c11387b7           lui     a5,0xc1138
d000c8a6:       |  |         953e                       add     a0,a0,a5
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000c8a8:       |  |     /-> 411c                       lw      a5,0(a0)
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
d000c8aa:       |  |     |   0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:195
    dest[i] = abs_mmio_read32(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes +
d000c8ac:       |  |     |   c19c                       sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c8ae:       |  |     |   87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000c8b0:       |  |     |   0511                       addi    a0,a0,4
d000c8b2:       |  |     |   0591                       addi    a1,a1,4
d000c8b4:       |  |     \-- fec7eae3           bltu    a5,a2,d000c8a8 <otbn_dmem_read+0x52>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:198
  HARDENED_CHECK_EQ(i, num_words);
d000c8b8:       |  \--/----X 00c70663           beq     a4,a2,d000c8c4 <otbn_dmem_read+0x6e>
d000c8bc:       |     |      0000                       unimp
d000c8be:       |     |      0000                       unimp
d000c8c0:       |     |      0000                       unimp
d000c8c2:       |     |      0000                       unimp
d000c8c4:       |     \--/-X a011                       j       d000c8c8 <otbn_dmem_read+0x72>
d000c8c6:       \--------|-> 86ba                       mv      a3,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:201
}
d000c8c8:                \-> 8536                       mv      a0,a3
d000c8ca:                    8082                       ret

d000c8cc <rnd_uint32>:
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:20

enum {
  kBase = TOP_EARLGREY_RV_CORE_IBEX_CFG_BASE_ADDR,
};

uint32_t rnd_uint32(void) {
d000c8cc:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:21
  if (otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RNG_EN_OFFSET) ==
d000c8ce:              c606                     sw      ra,12(sp)
d000c8d0:              0f800513                 li      a0,248
d000c8d4:              21cd                     jal     d000cdb6 <otp_read32>
d000c8d6:              73900593                 li      a1,1849
d000c8da:       /----- 00b51663                 bne     a0,a1,d000c8e6 <rnd_uint32+0x1a>
d000c8de:       |      c11f0537                 lui     a0,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c8e2:       |  /-> 4d6c                     lw      a1,92(a0)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:24
      kHardenedBoolTrue) {
    // When bit-0 is clear an EDN request for new data for RND_DATA is pending.
    while (!abs_mmio_read32(kBase + RV_CORE_IBEX_RND_STATUS_REG_OFFSET)) {
d000c8e4:       |  \-- ddfd                     beqz    a1,d000c8e2 <rnd_uint32+0x16>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:28
    }
  }
  uint32_t mcycle;
  CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000c8e6:       \----> b0002573                 csrr    a0,mcycle
d000c8ea:              c11f05b7                 lui     a1,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000c8ee:              4dac                     lw      a1,88(a1)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:29
  return mcycle + abs_mmio_read32(kBase + RV_CORE_IBEX_RND_DATA_REG_OFFSET);
d000c8f0:              952e                     add     a0,a0,a1
d000c8f2:              40b2                     lw      ra,12(sp)
d000c8f4:              0141                     addi    sp,sp,16
d000c8f6:              8082                     ret

d000c8f8 <epmp_state_check>:
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:40
    else                      \
       *fail=0x1;             \
} while (false)
    
  // Check address registers.
  CHECK_CSR(CSR_REG_PMPADDR0, s->pmpaddr[0]);   //ok
d000c8f8:              3b002673                 csrr    a2,pmpaddr0
d000c8fc:              0fff3597                 auipc   a1,0xfff3
d000c900:              72458593                 addi    a1,a1,1828 # e0000020 <epmp_state>
d000c904:              4994                     lw      a3,16(a1)
d000c906:              4505                     li      a0,1
d000c908:          /-- 00d60663                 beq     a2,a3,d000c914 <epmp_state_check+0x1c>
d000c90c:          |   4501                     li      a0,0
d000c90e:          |   4605                     li      a2,1
d000c910:          |   fec02fa3                 sw      a2,-1(zero)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:41
  CHECK_CSR(CSR_REG_PMPADDR1, s->pmpaddr[1]);
d000c914:          \-> 3b102673                 csrr    a2,pmpaddr1
d000c918:              49d4                     lw      a3,20(a1)
d000c91a:          /-- 00d61463                 bne     a2,a3,d000c922 <epmp_state_check+0x2a>
d000c91e:          |   0505                     addi    a0,a0,1
d000c920:       /--|-- a021                     j       d000c928 <epmp_state_check+0x30>
d000c922:       |  \-> 567d                     li      a2,-1
d000c924:       |      4685                     li      a3,1
d000c926:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:42
  CHECK_CSR(CSR_REG_PMPADDR2, s->pmpaddr[2]);
d000c928:       \----> 3b202673                 csrr    a2,pmpaddr2
d000c92c:              4d94                     lw      a3,24(a1)
d000c92e:          /-- 00d61463                 bne     a2,a3,d000c936 <epmp_state_check+0x3e>
d000c932:          |   0505                     addi    a0,a0,1
d000c934:       /--|-- a021                     j       d000c93c <epmp_state_check+0x44>
d000c936:       |  \-> 567d                     li      a2,-1
d000c938:       |      4685                     li      a3,1
d000c93a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:43
  CHECK_CSR(CSR_REG_PMPADDR3, s->pmpaddr[3]);
d000c93c:       \----> 3b302673                 csrr    a2,pmpaddr3
d000c940:              4dd4                     lw      a3,28(a1)
d000c942:          /-- 00d61463                 bne     a2,a3,d000c94a <epmp_state_check+0x52>
d000c946:          |   0505                     addi    a0,a0,1
d000c948:       /--|-- a021                     j       d000c950 <epmp_state_check+0x58>
d000c94a:       |  \-> 567d                     li      a2,-1
d000c94c:       |      4685                     li      a3,1
d000c94e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:44
  CHECK_CSR(CSR_REG_PMPADDR4, s->pmpaddr[4]);
d000c950:       \----> 3b402673                 csrr    a2,pmpaddr4
d000c954:              5194                     lw      a3,32(a1)
d000c956:          /-- 00d61463                 bne     a2,a3,d000c95e <epmp_state_check+0x66>
d000c95a:          |   0505                     addi    a0,a0,1
d000c95c:       /--|-- a021                     j       d000c964 <epmp_state_check+0x6c>
d000c95e:       |  \-> 567d                     li      a2,-1
d000c960:       |      4685                     li      a3,1
d000c962:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:45
  CHECK_CSR(CSR_REG_PMPADDR5, s->pmpaddr[5]);
d000c964:       \----> 3b502673                 csrr    a2,pmpaddr5
d000c968:              51d4                     lw      a3,36(a1)
d000c96a:          /-- 00d61463                 bne     a2,a3,d000c972 <epmp_state_check+0x7a>
d000c96e:          |   0505                     addi    a0,a0,1
d000c970:       /--|-- a021                     j       d000c978 <epmp_state_check+0x80>
d000c972:       |  \-> 567d                     li      a2,-1
d000c974:       |      4685                     li      a3,1
d000c976:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:46
  CHECK_CSR(CSR_REG_PMPADDR6, s->pmpaddr[6]);
d000c978:       \----> 3b602673                 csrr    a2,pmpaddr6
d000c97c:              5594                     lw      a3,40(a1)
d000c97e:          /-- 00d61463                 bne     a2,a3,d000c986 <epmp_state_check+0x8e>
d000c982:          |   0505                     addi    a0,a0,1
d000c984:       /--|-- a021                     j       d000c98c <epmp_state_check+0x94>
d000c986:       |  \-> 567d                     li      a2,-1
d000c988:       |      4685                     li      a3,1
d000c98a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:47
  CHECK_CSR(CSR_REG_PMPADDR7, s->pmpaddr[7]);
d000c98c:       \----> 3b702673                 csrr    a2,pmpaddr7
d000c990:              55d4                     lw      a3,44(a1)
d000c992:          /-- 00d61463                 bne     a2,a3,d000c99a <epmp_state_check+0xa2>
d000c996:          |   0505                     addi    a0,a0,1
d000c998:       /--|-- a021                     j       d000c9a0 <epmp_state_check+0xa8>
d000c99a:       |  \-> 567d                     li      a2,-1
d000c99c:       |      4685                     li      a3,1
d000c99e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:48
  CHECK_CSR(CSR_REG_PMPADDR8, s->pmpaddr[8]);
d000c9a0:       \----> 3b802673                 csrr    a2,pmpaddr8
d000c9a4:              5994                     lw      a3,48(a1)
d000c9a6:          /-- 00d61463                 bne     a2,a3,d000c9ae <epmp_state_check+0xb6>
d000c9aa:          |   0505                     addi    a0,a0,1
d000c9ac:       /--|-- a021                     j       d000c9b4 <epmp_state_check+0xbc>
d000c9ae:       |  \-> 567d                     li      a2,-1
d000c9b0:       |      4685                     li      a3,1
d000c9b2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:49
  CHECK_CSR(CSR_REG_PMPADDR9, s->pmpaddr[9]);
d000c9b4:       \----> 3b902673                 csrr    a2,pmpaddr9
d000c9b8:              59d4                     lw      a3,52(a1)
d000c9ba:          /-- 00d61463                 bne     a2,a3,d000c9c2 <epmp_state_check+0xca>
d000c9be:          |   0505                     addi    a0,a0,1
d000c9c0:       /--|-- a021                     j       d000c9c8 <epmp_state_check+0xd0>
d000c9c2:       |  \-> 567d                     li      a2,-1
d000c9c4:       |      4685                     li      a3,1
d000c9c6:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:50
  CHECK_CSR(CSR_REG_PMPADDR10, s->pmpaddr[10]);
d000c9c8:       \----> 3ba02673                 csrr    a2,pmpaddr10
d000c9cc:              5d94                     lw      a3,56(a1)
d000c9ce:          /-- 00d61463                 bne     a2,a3,d000c9d6 <epmp_state_check+0xde>
d000c9d2:          |   0505                     addi    a0,a0,1
d000c9d4:       /--|-- a021                     j       d000c9dc <epmp_state_check+0xe4>
d000c9d6:       |  \-> 567d                     li      a2,-1
d000c9d8:       |      4685                     li      a3,1
d000c9da:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:51
  CHECK_CSR(CSR_REG_PMPADDR11, s->pmpaddr[11]);
d000c9dc:       \----> 3bb02673                 csrr    a2,pmpaddr11
d000c9e0:              5dd4                     lw      a3,60(a1)
d000c9e2:          /-- 00d61463                 bne     a2,a3,d000c9ea <epmp_state_check+0xf2>
d000c9e6:          |   0505                     addi    a0,a0,1
d000c9e8:       /--|-- a021                     j       d000c9f0 <epmp_state_check+0xf8>
d000c9ea:       |  \-> 567d                     li      a2,-1
d000c9ec:       |      4685                     li      a3,1
d000c9ee:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:52
  CHECK_CSR(CSR_REG_PMPADDR12, s->pmpaddr[12]);
d000c9f0:       \----> 3bc02673                 csrr    a2,pmpaddr12
d000c9f4:              41b4                     lw      a3,64(a1)
d000c9f6:          /-- 00d61463                 bne     a2,a3,d000c9fe <epmp_state_check+0x106>
d000c9fa:          |   0505                     addi    a0,a0,1
d000c9fc:       /--|-- a021                     j       d000ca04 <epmp_state_check+0x10c>
d000c9fe:       |  \-> 567d                     li      a2,-1
d000ca00:       |      4685                     li      a3,1
d000ca02:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:53
  CHECK_CSR(CSR_REG_PMPADDR13, s->pmpaddr[13]);
d000ca04:       \----> 3bd02673                 csrr    a2,pmpaddr13
d000ca08:              41f4                     lw      a3,68(a1)
d000ca0a:          /-- 00d61463                 bne     a2,a3,d000ca12 <epmp_state_check+0x11a>
d000ca0e:          |   0505                     addi    a0,a0,1
d000ca10:       /--|-- a021                     j       d000ca18 <epmp_state_check+0x120>
d000ca12:       |  \-> 567d                     li      a2,-1
d000ca14:       |      4685                     li      a3,1
d000ca16:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:54
  CHECK_CSR(CSR_REG_PMPADDR14, s->pmpaddr[14]);
d000ca18:       \----> 3be02673                 csrr    a2,pmpaddr14
d000ca1c:              45b4                     lw      a3,72(a1)
d000ca1e:          /-- 00d61463                 bne     a2,a3,d000ca26 <epmp_state_check+0x12e>
d000ca22:          |   0505                     addi    a0,a0,1
d000ca24:       /--|-- a021                     j       d000ca2c <epmp_state_check+0x134>
d000ca26:       |  \-> 567d                     li      a2,-1
d000ca28:       |      4685                     li      a3,1
d000ca2a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:55
  CHECK_CSR(CSR_REG_PMPADDR15, s->pmpaddr[15]);
d000ca2c:       \----> 3bf02673                 csrr    a2,pmpaddr15
d000ca30:              45f4                     lw      a3,76(a1)
d000ca32:          /-- 00d61463                 bne     a2,a3,d000ca3a <epmp_state_check+0x142>
d000ca36:          |   0505                     addi    a0,a0,1
d000ca38:       /--|-- a021                     j       d000ca40 <epmp_state_check+0x148>
d000ca3a:       |  \-> 567d                     li      a2,-1
d000ca3c:       |      4685                     li      a3,1
d000ca3e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:58

  // Check configuration registers.
  CHECK_CSR(CSR_REG_PMPCFG0, s->pmpcfg[0]);
d000ca40:       \----> 3a002673                 csrr    a2,pmpcfg0
d000ca44:              4194                     lw      a3,0(a1)
d000ca46:          /-- 00d61463                 bne     a2,a3,d000ca4e <epmp_state_check+0x156>
d000ca4a:          |   0505                     addi    a0,a0,1
d000ca4c:       /--|-- a021                     j       d000ca54 <epmp_state_check+0x15c>
d000ca4e:       |  \-> 567d                     li      a2,-1
d000ca50:       |      4685                     li      a3,1
d000ca52:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:59
  CHECK_CSR(CSR_REG_PMPCFG1, s->pmpcfg[1]);
d000ca54:       \----> 3a102673                 csrr    a2,pmpcfg1
d000ca58:              41d4                     lw      a3,4(a1)
d000ca5a:          /-- 00d61463                 bne     a2,a3,d000ca62 <epmp_state_check+0x16a>
d000ca5e:          |   0505                     addi    a0,a0,1
d000ca60:       /--|-- a021                     j       d000ca68 <epmp_state_check+0x170>
d000ca62:       |  \-> 567d                     li      a2,-1
d000ca64:       |      4685                     li      a3,1
d000ca66:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:60
  CHECK_CSR(CSR_REG_PMPCFG2, s->pmpcfg[2]);   
d000ca68:       \----> 3a202673                 csrr    a2,pmpcfg2
d000ca6c:              4594                     lw      a3,8(a1)
d000ca6e:          /-- 00d61463                 bne     a2,a3,d000ca76 <epmp_state_check+0x17e>
d000ca72:          |   0505                     addi    a0,a0,1
d000ca74:       /--|-- a021                     j       d000ca7c <epmp_state_check+0x184>
d000ca76:       |  \-> 567d                     li      a2,-1
d000ca78:       |      4685                     li      a3,1
d000ca7a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:61
  CHECK_CSR(CSR_REG_PMPCFG3, s->pmpcfg[3]);
d000ca7c:       \----> 3a302673                 csrr    a2,pmpcfg3
d000ca80:              45d4                     lw      a3,12(a1)
d000ca82:          /-- 00d61463                 bne     a2,a3,d000ca8a <epmp_state_check+0x192>
d000ca86:          |   0505                     addi    a0,a0,1
d000ca88:       /--|-- a021                     j       d000ca90 <epmp_state_check+0x198>
d000ca8a:       |  \-> 567d                     li      a2,-1
d000ca8c:       |      4685                     li      a3,1
d000ca8e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:65

  // Check Machine Security Configuration (MSECCFG) register.
  // High bits are hardcoded to 0.
  CHECK_CSR(CSR_REG_MSECCFG, s->mseccfg);
d000ca90:       \----> 74702673                 csrr    a2,0x747
d000ca94:              49ac                     lw      a1,80(a1)
d000ca96:          /-- 00b61463                 bne     a2,a1,d000ca9e <epmp_state_check+0x1a6>
d000ca9a:          |   0505                     addi    a0,a0,1
d000ca9c:       /--|-- a021                     j       d000caa4 <epmp_state_check+0x1ac>
d000ca9e:       |  \-> 55fd                     li      a1,-1
d000caa0:       |      4605                     li      a2,1
d000caa2:       |      c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:66
  CHECK_CSR(CSR_REG_MSECCFGH, 0);           //ok
d000caa4:       \----> 757025f3                 csrr    a1,0x757
d000caa8:       /----- c589                     beqz    a1,d000cab2 <epmp_state_check+0x1ba>
d000caaa:       |      55fd                     li      a1,-1
d000caac:       |      4605                     li      a2,1
d000caae:       |      c190                     sw      a2,0(a1)
d000cab0:       |  /-- a011                     j       d000cab4 <epmp_state_check+0x1bc>
d000cab2:       \--|-> 0505                     addi    a0,a0,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cab4:          \-> 862a                     mv      a2,a0
d000cab6:              45d9                     li      a1,22
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:73
#undef CHECK_CSR

  enum { kTotalChecks = 22 }; //should be 22
  // Hamming distance of 3, error = 0x72f, kErrorOk = 0x739.
  rom_error_t error = kErrorOk ^ kTotalChecks;
  if (launder32(checks) == kTotalChecks) {
d000cab8:       /----- 02b61363                 bne     a2,a1,d000cade <epmp_state_check+0x1e6>
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:74
    HARDENED_CHECK_EQ(checks, kTotalChecks);
d000cabc:       |  /-- 00b50663                 beq     a0,a1,d000cac8 <epmp_state_check+0x1d0>
d000cac0:       |  |   0000                     unimp
d000cac2:       |  |   0000                     unimp
d000cac4:       |  |   0000                     unimp
d000cac6:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:75
    error ^= checks;
d000cac8:       |  \-> 72f54513                 xori    a0,a0,1839
d000cacc:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:76
    HARDENED_CHECK_EQ(error, kErrorOk);
d000cad0:       |  /-- 00b50663                 beq     a0,a1,d000cadc <epmp_state_check+0x1e4>
d000cad4:       |  |   0000                     unimp
d000cad6:       |  |   0000                     unimp
d000cad8:       |  |   0000                     unimp
d000cada:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:80
    return error;
  }
  return kErrorEpmpBadCheck;
}
d000cadc:       |  \-> 8082                     ret
d000cade:       \----> 01455537                 lui     a0,0x1455
d000cae2:              0535                     addi    a0,a0,13
d000cae4:              8082                     ret

d000cae6 <hmac_sha256_init>:
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:16
#include "sw/device/silicon_creator/lib/error.h"

#include "hmac_regs.h"  // Generated.
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void hmac_sha256_init(void) {
d000cae6:       c1110537                lui     a0,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000caea:       00052823                sw      zero,16(a0) # c1110010 <_stack_end+0xe10f0010>
d000caee:       00052223                sw      zero,4(a0)
d000caf2:       55fd                    li      a1,-1
d000caf4:       c10c                    sw      a1,0(a0)
d000caf6:       4589                    li      a1,2
d000caf8:       c90c                    sw      a1,16(a0)
d000cafa:       4585                    li      a1,1
d000cafc:       c94c                    sw      a1,20(a0)
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:36
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CFG_REG_OFFSET, reg);

  reg = 0;
  reg = bitfield_bit32_write(reg, HMAC_CMD_HASH_START_BIT, true);
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);
}
d000cafe:       8082                    ret

d000cb00 <hmac_sha256_update>:
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42

void hmac_sha256_update(const void *data, size_t len) {
  const uint8_t *data_sent = (const uint8_t *)data;

  // Individual byte writes are needed if the buffer isn't word aligned.
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000cb00:                 00b03633              snez    a2,a1
d000cb04:                 00357693              andi    a3,a0,3
d000cb08:                 00d036b3              snez    a3,a3
d000cb0c:                 8e75                  and     a2,a2,a3
d000cb0e:          /----- c61d                  beqz    a2,d000cb3c <hmac_sha256_update+0x3c>
d000cb10:          |      00150693              addi    a3,a0,1
d000cb14:          |      c1111737              lui     a4,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:44
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000cb18:          |  /-> 00050783              lb      a5,0(a0)
d000cb1c:          |  |   00150613              addi    a2,a0,1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000cb20:          |  |   80f70023              sb      a5,-2048(a4) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000cb24:          |  |   15fd                  addi    a1,a1,-1
d000cb26:          |  |   00b03533              snez    a0,a1
d000cb2a:          |  |   0036f793              andi    a5,a3,3
d000cb2e:          |  |   00f037b3              snez    a5,a5
d000cb32:          |  |   8fe9                  and     a5,a5,a0
d000cb34:          |  |   0685                  addi    a3,a3,1
d000cb36:          |  |   8532                  mv      a0,a2
d000cb38:          |  \-- f3e5                  bnez    a5,d000cb18 <hmac_sha256_update+0x18>
d000cb3a:          |  /-- a011                  j       d000cb3e <hmac_sha256_update+0x3e>
d000cb3c:          \--|-> 862a                  mv      a2,a0
d000cb3e:             \-> 4511                  li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  }

  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000cb40:       /-------- 00a5ec63              bltu    a1,a0,d000cb58 <hmac_sha256_update+0x58>
d000cb44:       |         c1111537              lui     a0,0xc1111
d000cb48:       |         468d                  li      a3,3
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
d000cb4a:       |     /-> 4218                  lw      a4,0(a2)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000cb4c:       |     |   80e52023              sw      a4,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
d000cb50:       |     |   15f1                  addi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:51
    uint32_t data_aligned = read_32(data_sent);
    abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                     data_aligned);
    data_sent += sizeof(uint32_t);
d000cb52:       |     |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000cb54:       |     \-- feb6ebe3              bltu    a3,a1,d000cb4a <hmac_sha256_update+0x4a>
d000cb58:       \--/----X c991                  beqz    a1,d000cb6c <hmac_sha256_update+0x6c>
d000cb5a:          |      c1111537              lui     a0,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:57
  }

  // Handle non-32bit aligned bytes at the end of the buffer.
  for (; len != 0; --len) {
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000cb5e:          |  /-> 00060683              lb      a3,0(a2)
d000cb62:          |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:55
  for (; len != 0; --len) {
d000cb64:          |  |   15fd                  addi    a1,a1,-1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000cb66:          |  |   80d50023              sb      a3,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
d000cb6a:          |  \-- f9f5                  bnez    a1,d000cb5e <hmac_sha256_update+0x5e>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:59
  }
}
d000cb6c:          \----> 8082                  ret

d000cb6e <hmac_sha256_final>:
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:61

void hmac_sha256_final(hmac_digest_t *digest) {
d000cb6e:           c11105b7            lui     a1,0xc1110
d000cb72:           01458613            addi    a2,a1,20 # c1110014 <_stack_end+0xe10f0014>
d000cb76:           4689                        li      a3,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000cb78:           c214                        sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000cb7a:       /-> 4190                        lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cb7c:       |   00167693            andi    a3,a2,1
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:69
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);

  do {
    reg = abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR +
                          HMAC_INTR_STATE_REG_OFFSET);
  } while (!bitfield_bit32_read(reg, HMAC_INTR_STATE_HMAC_DONE_BIT));
d000cb80:       \-- deed                        beqz    a3,d000cb7a <hmac_sha256_final+0xc>
d000cb82:           4581                        li      a1,0
d000cb84:           c11106b7            lui     a3,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000cb88:           c290                        sw      a2,0(a3)
d000cb8a:           06068613            addi    a2,a3,96 # c1110060 <_stack_end+0xe10f0060>
d000cb8e:           02000693            li      a3,32
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000cb92:       /-> 4218                        lw      a4,0(a2)
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:76
                   reg);

  // Read the digest in reverse to preserve the numerical value.
  // The least significant word is at HMAC_DIGEST_7_REG_OFFSET.
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
    digest->digest[i] =
d000cb94:       |   00b507b3            add     a5,a0,a1
d000cb98:       |   c398                        sw      a4,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:75
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
d000cb9a:       |   0591                        addi    a1,a1,4
d000cb9c:       |   1671                        addi    a2,a2,-4
d000cb9e:       \-- fed59ae3            bne     a1,a3,d000cb92 <hmac_sha256_final+0x24>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:80
        abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_DIGEST_7_REG_OFFSET -
                        (i * sizeof(uint32_t)));
  }
}
d000cba2:           8082                        ret

d000cba4 <lifecycle_state_get>:
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:22

enum {
  kBase = TOP_EARLGREY_LC_CTRL_BASE_ADDR,
};

lifecycle_state_t lifecycle_state_get(void) {
d000cba4:                                         1141                  addi    sp,sp,-16
d000cba6:                                         c606                  sw      ra,12(sp)
d000cba8:                                         c0140537              lui     a0,0xc0140
d000cbac:                                         03450513              addi    a0,a0,52 # c0140034 <_stack_end+0xe0120034>
lifecycle_raw_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:69
  }
}

uint32_t lifecycle_raw_state_get(void) {
  uint32_t value = bitfield_field32_read(
      sec_mmio_read32(kBase + LC_CTRL_LC_STATE_REG_OFFSET),
d000cbb0:                                         24a5                  jal     d000ce18 <sec_mmio_read32>
d000cbb2:                                         400005b7              lui     a1,0x40000
d000cbb6:                                         15fd                  addi    a1,a1,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000cbb8:                                         8d6d                  and     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cbba:                                         85aa                  mv      a1,a0
d000cbbc:                                         1ad6b637              lui     a2,0x1ad6b
d000cbc0:                                         5ac60613              addi    a2,a2,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1aceb5ac>
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cbc4:                                  /----- 02b64b63              blt     a2,a1,d000cbfa <lifecycle_state_get+0x56>
d000cbc8:                                  |      0e73a637              lui     a2,0xe73a
d000cbcc:                                  |      ce660693              addi    a3,a2,-794 # e739ce6 <_rom_ext_virtual_size+0xe6b9ce6>
d000cbd0:                               /--|----- 04b6ce63              blt     a3,a1,d000cc2c <lifecycle_state_get+0x88>
d000cbd4:                               |  |      02108637              lui     a2,0x2108
d000cbd8:                               |  |      42160613              addi    a2,a2,1057 # 2108421 <_rom_ext_virtual_size+0x2088421>
d000cbdc:                         /-----|--|----- 08c58e63              beq     a1,a2,d000cc78 <lifecycle_state_get+0xd4>
d000cbe0:                         |     |  |      06319637              lui     a2,0x6319
d000cbe4:                         |     |  |      c6360613              addi    a2,a2,-925 # 6318c63 <_rom_ext_virtual_size+0x6298c63>
d000cbe8:          /--------------|-----|--|----- 0ec59063              bne     a1,a2,d000ccc8 <lifecycle_state_get+0x124>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:30
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED1);
d000cbec:          |              |     |  |  /-- 00c50663              beq     a0,a2,d000cbf8 <lifecycle_state_get+0x54>
d000cbf0:          |              |     |  |  |   0000                  unimp
d000cbf2:          |              |     |  |  |   0000                  unimp
d000cbf4:          |              |     |  |  |   0000                  unimp
d000cbf6:          |              |     |  |  |   0000                  unimp
d000cbf8:       /--|--------------|-----|--|--\-X a215                  j       d000cd1c <lifecycle_state_get+0x178>
d000cbfa:       |  |              |     |  \----> 2318c637              lui     a2,0x2318c
d000cbfe:       |  |              |     |         63060693              addi    a3,a2,1584 # 2318c630 <_rom_ext_virtual_size+0x2310c630>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cc02:       |  |              |     |  /----- 04b6c663              blt     a3,a1,d000cc4e <lifecycle_state_get+0xaa>
d000cc06:       |  |              |     |  |      1ad6b637              lui     a2,0x1ad6b
d000cc0a:       |  |              |     |  |      5ad60613              addi    a2,a2,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1aceb5ad>
d000cc0e:       |  |              |  /--|--|----- 06c58c63              beq     a1,a2,d000cc86 <lifecycle_state_get+0xe2>
d000cc12:       |  |              |  |  |  |      1ef7c637              lui     a2,0x1ef7c
d000cc16:       |  |              |  |  |  |      def60613              addi    a2,a2,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1eefbdef>
d000cc1a:       |  |           /--|--|--|--|----- 0cc59463              bne     a1,a2,d000cce2 <lifecycle_state_get+0x13e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:48
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED7);
d000cc1e:       |  |           |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000cc2a <lifecycle_state_get+0x86>
d000cc22:       |  |           |  |  |  |  |  |   0000                  unimp
d000cc24:       |  |           |  |  |  |  |  |   0000                  unimp
d000cc26:       |  |           |  |  |  |  |  |   0000                  unimp
d000cc28:       |  |           |  |  |  |  |  |   0000                  unimp
d000cc2a:       +--|-----------|--|--|--|--|--\-X a8cd                  j       d000cd1c <lifecycle_state_get+0x178>
d000cc2c:       |  |           |  |  |  \--|----> ce760613              addi    a2,a2,-793
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cc30:       |  |           |  |  |  /--|----- 06c58263              beq     a1,a2,d000cc94 <lifecycle_state_get+0xf0>
d000cc34:       |  |           |  |  |  |  |      1294a637              lui     a2,0x1294a
d000cc38:       |  |           |  |  |  |  |      52960613              addi    a2,a2,1321 # 1294a529 <_rom_ext_virtual_size+0x128ca529>
d000cc3c:       |  |        /--|--|--|--|--|----- 0cc59463              bne     a1,a2,d000cd04 <lifecycle_state_get+0x160>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:39
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED4);
d000cc40:       |  |        |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000cc4c <lifecycle_state_get+0xa8>
d000cc44:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000cc46:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000cc48:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000cc4a:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000cc4c:       +--|--------|--|--|--|--|--|--\-X a8c1                  j       d000cd1c <lifecycle_state_get+0x178>
d000cc4e:       |  |        |  |  |  |  |  \----> 63160613              addi    a2,a2,1585
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cc52:       |  |        |  |  |  |  |  /----- 04c58c63              beq     a1,a2,d000ccaa <lifecycle_state_get+0x106>
d000cc56:       |  |        |  |  |  |  |  |      25295637              lui     a2,0x25295
d000cc5a:       |  |        |  |  |  |  |  |      a5260613              addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25214a52>
d000cc5e:       |  |     /--|--|--|--|--|--|----- 0cc59663              bne     a1,a2,d000cd2a <lifecycle_state_get+0x186>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:57
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD_END);
d000cc62:       |  |     |  |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000cc6e <lifecycle_state_get+0xca>
d000cc66:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000cc68:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000cc6a:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000cc6c:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000cc6e:       |  |     |  |  |  |  |  |  |  \-> 91b9b537              lui     a0,0x91b9b
d000cc72:       |  |     |  |  |  |  |  |  |      68a50513              addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
d000cc76:       |  |  /--|--|--|--|--|--|--|----- a07d                  j       d000cd24 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:27
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED0);
d000cc78:       |  |  |  |  |  |  \--|--|--|--/-X 00c50663              beq     a0,a2,d000cc84 <lifecycle_state_get+0xe0>
d000cc7c:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000cc7e:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000cc80:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000cc82:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000cc84:       +--|--|--|--|--|-----|--|--|--\-X a861                  j       d000cd1c <lifecycle_state_get+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:45
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED6);
d000cc86:       |  |  |  |  |  |     \--|--|--/-X 00c50663              beq     a0,a2,d000cc92 <lifecycle_state_get+0xee>
d000cc8a:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000cc8c:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000cc8e:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000cc90:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000cc92:       +--|--|--|--|--|--------|--|--\-X a069                  j       d000cd1c <lifecycle_state_get+0x178>
d000cc94:       |  |  |  |  |  |        \--|----> 0e73a5b7              lui     a1,0xe73a
d000cc98:       |  |  |  |  |  |           |      ce758593              addi    a1,a1,-793 # e739ce7 <_rom_ext_virtual_size+0xe6b9ce7>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:36
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED3);
d000cc9c:       |  |  |  |  |  |           |  /-- 00b50663              beq     a0,a1,d000cca8 <lifecycle_state_get+0x104>
d000cca0:       |  |  |  |  |  |           |  |   0000                  unimp
d000cca2:       |  |  |  |  |  |           |  |   0000                  unimp
d000cca4:       |  |  |  |  |  |           |  |   0000                  unimp
d000cca6:       |  |  |  |  |  |           |  |   0000                  unimp
d000cca8:       +--|--|--|--|--|-----------|--\-X a895                  j       d000cd1c <lifecycle_state_get+0x178>
d000ccaa:       |  |  |  |  |  |           \----> 2318c5b7              lui     a1,0x2318c
d000ccae:       |  |  |  |  |  |                  63158593              addi    a1,a1,1585 # 2318c631 <_rom_ext_virtual_size+0x2310c631>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:54
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD);
d000ccb2:       |  |  |  |  |  |              /-- 00b50663              beq     a0,a1,d000ccbe <lifecycle_state_get+0x11a>
d000ccb6:       |  |  |  |  |  |              |   0000                  unimp
d000ccb8:       |  |  |  |  |  |              |   0000                  unimp
d000ccba:       |  |  |  |  |  |              |   0000                  unimp
d000ccbc:       |  |  |  |  |  |              |   0000                  unimp
d000ccbe:       |  |  |  |  |  |              \-> 65f25537              lui     a0,0x65f25
d000ccc2:       |  |  |  |  |  |                  20f50513              addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
d000ccc6:       |  |  +--|--|--|----------------- a8b9                  j       d000cd24 <lifecycle_state_get+0x180>
d000ccc8:       |  \--|--|--|--|----------------> 0a529637              lui     a2,0xa529
d000cccc:       |     |  |  |  |                  4a560613              addi    a2,a2,1189 # a5294a5 <_rom_ext_virtual_size+0xa4a94a5>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000ccd0:       |     |  |  |  |           /----- 06c59e63              bne     a1,a2,d000cd4c <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:33
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED2);
d000ccd4:       |     |  |  |  |           |  /-- 00c50663              beq     a0,a2,d000cce0 <lifecycle_state_get+0x13c>
d000ccd8:       |     |  |  |  |           |  |   0000                  unimp
d000ccda:       |     |  |  |  |           |  |   0000                  unimp
d000ccdc:       |     |  |  |  |           |  |   0000                  unimp
d000ccde:       |     |  |  |  |           |  |   0000                  unimp
d000cce0:       +-----|--|--|--|-----------|--\-X a835                  j       d000cd1c <lifecycle_state_get+0x178>
d000cce2:       |     |  |  |  \-----------|----> 21084637              lui     a2,0x21084
d000cce6:       |     |  |  |              |      21060613              addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21004210>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000ccea:       |     |  |  |              +----- 06c59163              bne     a1,a2,d000cd4c <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:51
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_DEV);
d000ccee:       |     |  |  |              |  /-- 00c50663              beq     a0,a2,d000ccfa <lifecycle_state_get+0x156>
d000ccf2:       |     |  |  |              |  |   0000                  unimp
d000ccf4:       |     |  |  |              |  |   0000                  unimp
d000ccf6:       |     |  |  |              |  |   0000                  unimp
d000ccf8:       |     |  |  |              |  |   0000                  unimp
d000ccfa:       |     |  |  |              |  \-> 0b5a7537              lui     a0,0xb5a7
d000ccfe:       |     |  |  |              |      5e050513              addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000cd02:       |     +--|--|--------------|----- a00d                  j       d000cd24 <lifecycle_state_get+0x180>
d000cd04:       |     |  |  \--------------|----> 16b5b637              lui     a2,0x16b5b
d000cd08:       |     |  |                 |      d6b60613              addi    a2,a2,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16adad6b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cd0c:       |     |  |                 +----- 04c59063              bne     a1,a2,d000cd4c <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:42
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED5);
d000cd10:       +-----|--|-----------------|----- 00c50663              beq     a0,a2,d000cd1c <lifecycle_state_get+0x178>
d000cd14:       |     |  |                 |      0000                  unimp
d000cd16:       |     |  |                 |      0000                  unimp
d000cd18:       |     |  |                 |      0000                  unimp
d000cd1a:       |     |  |                 |      0000                  unimp
d000cd1c:       \-----|--|-----------------|----> b2866537              lui     a0,0xb2866
d000cd20:             |  |                 |      fbb50513              addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:65
}
d000cd24:             >--|-----------------|----> 40b2                  lw      ra,12(sp)
d000cd26:             |  |                 |      0141                  addi    sp,sp,16
d000cd28:             |  |                 |      8082                  ret
d000cd2a:             |  \-----------------|----> 2739d637              lui     a2,0x2739d
d000cd2e:             |                    |      e7360613              addi    a2,a2,-397 # 2739ce73 <_rom_ext_virtual_size+0x2731ce73>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000cd32:             |                    +----- 00c59d63              bne     a1,a2,d000cd4c <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:60
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_RMA);
d000cd36:             |                    |  /-- 00c50663              beq     a0,a2,d000cd42 <lifecycle_state_get+0x19e>
d000cd3a:             |                    |  |   0000                  unimp
d000cd3c:             |                    |  |   0000                  unimp
d000cd3e:             |                    |  |   0000                  unimp
d000cd40:             |                    |  |   0000                  unimp
d000cd42:             |                    |  \-> cf8d0537              lui     a0,0xcf8d0
d000cd46:             |                    |      aab50513              addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
d000cd4a:             \--------------------|----- bfe9                  j       d000cd24 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:63
      HARDENED_UNREACHABLE();
d000cd4c:                                  \----> 0000                  unimp
d000cd4e:                                         0000                  unimp
d000cd50:                                         0000                  unimp
d000cd52:                                         0000                  unimp

d000cd54 <lifecycle_device_id_get>:
lifecycle_device_id_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:74
      LC_CTRL_LC_STATE_STATE_FIELD);
  return value;
}

void lifecycle_device_id_get(lifecycle_device_id_t *device_id) {
d000cd54:           1101                        addi    sp,sp,-32
d000cd56:           ce06                        sw      ra,28(sp)
d000cd58:           cc22                        sw      s0,24(sp)
d000cd5a:           ca26                        sw      s1,20(sp)
d000cd5c:           c84a                        sw      s2,16(sp)
d000cd5e:           c64e                        sw      s3,12(sp)
d000cd60:           892a                        mv      s2,a0
d000cd62:           4481                        li      s1,0
d000cd64:           c0140537            lui     a0,0xc0140
d000cd68:           04450413            addi    s0,a0,68 # c0140044 <_stack_end+0xe0120044>
d000cd6c:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
  static_assert(
      kLifecycleDeviceIdNumWords == LC_CTRL_PARAM_NUM_DEVICE_ID_WORDS,
      "length of the device_id array does not match the length in hardware");

  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    device_id->device_id[i] = sec_mmio_read32(
d000cd70:       /-> 00848533            add     a0,s1,s0
d000cd74:       |   2055                        jal     d000ce18 <sec_mmio_read32>
d000cd76:       |   009905b3            add     a1,s2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000cd7a:       |   0491                        addi    s1,s1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
    device_id->device_id[i] = sec_mmio_read32(
d000cd7c:       |   c188                        sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000cd7e:       \-- ff3499e3            bne     s1,s3,d000cd70 <lifecycle_device_id_get+0x1c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:83
        kBase + LC_CTRL_DEVICE_ID_0_REG_OFFSET + i * sizeof(uint32_t));
  }
}
d000cd82:           49b2                        lw      s3,12(sp)
d000cd84:           4942                        lw      s2,16(sp)
d000cd86:           44d2                        lw      s1,20(sp)
d000cd88:           4462                        lw      s0,24(sp)
d000cd8a:           40f2                        lw      ra,28(sp)
d000cd8c:           6105                        addi    sp,sp,32
d000cd8e:           8082                        ret

d000cd90 <lifecycle_hw_rev_get>:
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:85

void lifecycle_hw_rev_get(lifecycle_hw_rev_t *hw_rev) {
d000cd90:       1141                    addi    sp,sp,-16
d000cd92:       c606                    sw      ra,12(sp)
d000cd94:       c422                    sw      s0,8(sp)
d000cd96:       842a                    mv      s0,a0
d000cd98:       c0140537                lui     a0,0xc0140
d000cd9c:       04050513                addi    a0,a0,64 # c0140040 <_stack_end+0xe0120040>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:86
  uint32_t reg = sec_mmio_read32(kBase + LC_CTRL_HW_REV_REG_OFFSET);
d000cda0:       28a5                    jal     d000ce18 <sec_mmio_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000cda2:       01055593                srli    a1,a0,0x10
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:87
  *hw_rev = (lifecycle_hw_rev_t){
d000cda6:       00b41023                sh      a1,0(s0)
d000cdaa:       00a41123                sh      a0,2(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:91
      .chip_gen = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_GEN_FIELD),
      .chip_rev = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_REV_FIELD),
  };
}
d000cdae:       4422                    lw      s0,8(sp)
d000cdb0:       40b2                    lw      ra,12(sp)
d000cdb2:       0141                    addi    sp,sp,16
d000cdb4:       8082                    ret

d000cdb6 <otp_read32>:
otp_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:18
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"
#include "otp_ctrl_regs.h"  // Generated.

enum { kBase = TOP_EARLGREY_OTP_CTRL_CORE_BASE_ADDR };

uint32_t otp_read32(uint32_t address) {
d000cdb6:       c01315b7                lui     a1,0xc0131
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:19
  return sec_mmio_read32(kBase + OTP_CTRL_SW_CFG_WINDOW_REG_OFFSET + address);
d000cdba:       952e                    add     a0,a0,a1
d000cdbc:       a8b1                    j       d000ce18 <sec_mmio_read32>

d000cdbe <sec_mmio_init>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cdbe:           4601                        li      a2,0
d000cdc0:           4681                        li      a3,0
d000cdc2:           4701                        li      a4,0
d000cdc4:           4501                        li      a0,0
d000cdc6:           0fff3597            auipc   a1,0xfff3
d000cdca:           2ae58593            addi    a1,a1,686 # e0000074 <sec_mmio_ctx>
sec_mmio_init():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:53
  // mechanism.
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
}

void sec_mmio_init(void) {
  sec_mmio_ctx.last_index = launder32(0);
d000cdce:           c190                        sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:54
  sec_mmio_ctx.write_count = launder32(0);
d000cdd0:           c1d4                        sw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:55
  sec_mmio_ctx.check_count = launder32(0);
d000cdd2:           c5d8                        sw      a4,12(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:56
  sec_mmio_ctx.expected_write_count = launder32(0);
d000cdd4:           c588                        sw      a0,8(a1)
d000cdd6:           3e800613            li      a2,1000
d000cdda:           56fd                        li      a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:58
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
    sec_mmio_ctx.addrs[i] = UINT32_MAX;
d000cddc:       /-> 7d858713            addi    a4,a1,2008
d000cde0:       |   7cd72c23            sw      a3,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:59
    sec_mmio_ctx.values[i] = UINT32_MAX;
d000cde4:       |   c994                        sw      a3,16(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:57
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
d000cde6:       |   167d                        addi    a2,a2,-1
d000cde8:       |   0591                        addi    a1,a1,4
d000cdea:       \-- fa6d                        bnez    a2,d000cddc <sec_mmio_init+0x1e>
d000cdec:           0fff3597            auipc   a1,0xfff3
d000cdf0:           28858593            addi    a1,a1,648 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:61
  }
  uint32_t check = kSecMmioValZero ^ sec_mmio_ctx.last_index;
d000cdf4:           4190                        lw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:62
  check ^= sec_mmio_ctx.write_count;
d000cdf6:           41d4                        lw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:63
  check ^= sec_mmio_ctx.check_count;
d000cdf8:           45cc                        lw      a1,12(a1)
d000cdfa:           8e35                        xor     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:64
  check ^= sec_mmio_ctx.expected_write_count;
d000cdfc:           8db1                        xor     a1,a1,a2
d000cdfe:           8d2d                        xor     a0,a0,a1
d000ce00:           3ca595b7            lui     a1,0x3ca59
d000ce04:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
d000ce08:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:65
  HARDENED_CHECK_EQ(check, kSecMmioValZero);
d000ce0a:       /-- 00b50663            beq     a0,a1,d000ce16 <sec_mmio_init+0x58>
d000ce0e:       |   0000                        unimp
d000ce10:       |   0000                        unimp
d000ce12:       |   0000                        unimp
d000ce14:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:66
}
d000ce16:       \-> 8082                        ret

d000ce18 <sec_mmio_read32>:
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:78
    sec_mmio_ctx.values[i] = UINT32_MAX;
  }
  HARDENED_CHECK_EQ(sec_mmio_ctx.check_count, 0);
}

uint32_t sec_mmio_read32(uint32_t addr) {
d000ce18:           1101                        addi    sp,sp,-32
d000ce1a:           ce06                        sw      ra,28(sp)
d000ce1c:           cc22                        sw      s0,24(sp)
d000ce1e:           ca26                        sw      s1,20(sp)
d000ce20:           c84a                        sw      s2,16(sp)
d000ce22:           c64e                        sw      s3,12(sp)
d000ce24:           842a                        mv      s0,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ce26:           00052903            lw      s2,0(a0)
d000ce2a:           21692537            lui     a0,0x21692
d000ce2e:           43650993            addi    s3,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:80
  uint32_t value = abs_mmio_read32(addr);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000ce32:           013944b3            xor     s1,s2,s3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:82
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000ce36:           8522                        mv      a0,s0
d000ce38:           85a6                        mv      a1,s1
d000ce3a:           2015                        jal     d000ce5e <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ce3c:           4008                        lw      a0,0(s0)
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:83
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000ce3e:           01354533            xor     a0,a0,s3
d000ce42:       /-- 00950663            beq     a0,s1,d000ce4e <sec_mmio_read32+0x36>
d000ce46:       |   0000                        unimp
d000ce48:       |   0000                        unimp
d000ce4a:       |   0000                        unimp
d000ce4c:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:85

  return value;
d000ce4e:       \-> 854a                        mv      a0,s2
d000ce50:           49b2                        lw      s3,12(sp)
d000ce52:           4942                        lw      s2,16(sp)
d000ce54:           44d2                        lw      s1,20(sp)
d000ce56:           4462                        lw      s0,24(sp)
d000ce58:           40f2                        lw      ra,28(sp)
d000ce5a:           6105                        addi    sp,sp,32
d000ce5c:           8082                        ret

d000ce5e <upsert_register>:
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:34
  const size_t last_index = sec_mmio_ctx.last_index;
d000ce5e:                 0fff3817              auipc   a6,0xfff3
d000ce62:                 21680813              addi    a6,a6,534 # e0000074 <sec_mmio_ctx>
d000ce66:                 00082703              lw      a4,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce6a:                 4781                  li      a5,0
d000ce6c:                 4681                  li      a3,0
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000ce6e:       /-------- 02e7f163              bgeu    a5,a4,d000ce90 <upsert_register+0x32>
d000ce72:       |         4681                  li      a3,0
d000ce74:       |         87c2                  mv      a5,a6
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:37
    if (sec_mmio_ctx.addrs[i] == addr) {
d000ce76:       |  /----> 7d878613              addi    a2,a5,2008
d000ce7a:       |  |      7d862603              lw      a2,2008(a2)
d000ce7e:       |  |  /-- 00a60863              beq     a2,a0,d000ce8e <upsert_register+0x30>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000ce82:       |  |  |   0685                  addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce84:       |  |  |   8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
d000ce86:       |  |  |   0791                  addi    a5,a5,4
d000ce88:       |  \--|-- fee667e3              bltu    a2,a4,d000ce76 <upsert_register+0x18>
d000ce8c:       +-----|-- a011                  j       d000ce90 <upsert_register+0x32>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:38
      sec_mmio_ctx.values[i] = value;
d000ce8e:       |     \-> cb8c                  sw      a1,16(a5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce90:       \-------> 8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
  if (launder32(i) == last_index && launder32(i) < kSecMmioRegFileSize) {
d000ce92:             /-- 02e61463              bne     a2,a4,d000ceba <upsert_register+0x5c>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce96:             |   8636                  mv      a2,a3
d000ce98:             |   3e700713              li      a4,999
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
d000ce9c:             +-- 00c76f63              bltu    a4,a2,d000ceba <upsert_register+0x5c>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:43
    sec_mmio_ctx.addrs[i] = addr;
d000cea0:             |   00269613              slli    a2,a3,0x2
d000cea4:             |   9642                  add     a2,a2,a6
d000cea6:             |   7d860713              addi    a4,a2,2008
d000ceaa:             |   7ca72c23              sw      a0,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:44
    sec_mmio_ctx.values[i] = value;
d000ceae:             |   ca0c                  sw      a1,16(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:45
    ++sec_mmio_ctx.last_index;
d000ceb0:             |   00082503              lw      a0,0(a6)
d000ceb4:             |   0505                  addi    a0,a0,1
d000ceb6:             |   00a82023              sw      a0,0(a6)
d000ceba:             \-> 3e800513              li      a0,1000
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:49
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
d000cebe:             /-- 00a6e663              bltu    a3,a0,d000ceca <upsert_register+0x6c>
d000cec2:             |   0000                  unimp
d000cec4:             |   0000                  unimp
d000cec6:             |   0000                  unimp
d000cec8:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:50
}
d000ceca:             \-> 8082                  ret

d000cecc <sec_mmio_write32>:
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:88
}

void sec_mmio_write32(uint32_t addr, uint32_t value) {
d000cecc:           1141                        addi    sp,sp,-16
d000cece:           c606                        sw      ra,12(sp)
d000ced0:           c422                        sw      s0,8(sp)
d000ced2:           c226                        sw      s1,4(sp)
d000ced4:           c04a                        sw      s2,0(sp)
d000ced6:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ced8:           c10c                        sw      a1,0(a0)
d000ceda:           21692537            lui     a0,0x21692
d000cede:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:90
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000cee2:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:92
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000cee6:           8522                        mv      a0,s0
d000cee8:           85a6                        mv      a1,s1
d000ceea:           3f95                        jal     d000ce5e <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000ceec:           4008                        lw      a0,0(s0)
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:93
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000ceee:           01254533            xor     a0,a0,s2
d000cef2:       /-- 00950663            beq     a0,s1,d000cefe <sec_mmio_write32+0x32>
d000cef6:       |   0000                        unimp
d000cef8:       |   0000                        unimp
d000cefa:       |   0000                        unimp
d000cefc:       |   0000                        unimp
d000cefe:       \-> 0fff3517            auipc   a0,0xfff3
d000cf02:           17650513            addi    a0,a0,374 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:95

  ++sec_mmio_ctx.write_count;
d000cf06:           414c                        lw      a1,4(a0)
d000cf08:           0585                        addi    a1,a1,1
d000cf0a:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:96
}
d000cf0c:           4902                        lw      s2,0(sp)
d000cf0e:           4492                        lw      s1,4(sp)
d000cf10:           4422                        lw      s0,8(sp)
d000cf12:           40b2                        lw      ra,12(sp)
d000cf14:           0141                        addi    sp,sp,16
d000cf16:           8082                        ret

d000cf18 <sec_mmio_write32_shadowed>:
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:98

void sec_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
d000cf18:           1141                        addi    sp,sp,-16
d000cf1a:           c606                        sw      ra,12(sp)
d000cf1c:           c422                        sw      s0,8(sp)
d000cf1e:           c226                        sw      s1,4(sp)
d000cf20:           c04a                        sw      s2,0(sp)
d000cf22:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000cf24:           c10c                        sw      a1,0(a0)
d000cf26:           c10c                        sw      a1,0(a0)
d000cf28:           21692537            lui     a0,0x21692
d000cf2c:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:102
  // Shadowed registers require two writes.
  abs_mmio_write32(addr, value);
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000cf30:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:104
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000cf34:           8522                        mv      a0,s0
d000cf36:           85a6                        mv      a1,s1
d000cf38:           371d                        jal     d000ce5e <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000cf3a:           4008                        lw      a0,0(s0)
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:105
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000cf3c:           01254533            xor     a0,a0,s2
d000cf40:       /-- 00950663            beq     a0,s1,d000cf4c <sec_mmio_write32_shadowed+0x34>
d000cf44:       |   0000                        unimp
d000cf46:       |   0000                        unimp
d000cf48:       |   0000                        unimp
d000cf4a:       |   0000                        unimp
d000cf4c:       \-> 0fff3517            auipc   a0,0xfff3
d000cf50:           12850513            addi    a0,a0,296 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:107

  ++sec_mmio_ctx.write_count;
d000cf54:           414c                        lw      a1,4(a0)
d000cf56:           0585                        addi    a1,a1,1
d000cf58:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:108
}
d000cf5a:           4902                        lw      s2,0(sp)
d000cf5c:           4492                        lw      s1,4(sp)
d000cf5e:           4422                        lw      s0,8(sp)
d000cf60:           40b2                        lw      ra,12(sp)
d000cf62:           0141                        addi    sp,sp,16
d000cf64:           8082                        ret

d000cf66 <sec_mmio_check_values>:
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:111

void sec_mmio_check_values(uint32_t rnd_offset) {
  const uint32_t last_index = sec_mmio_ctx.last_index;
d000cf66:                    0fff3817           auipc   a6,0xfff3
d000cf6a:                    10e80813           addi    a6,a6,270 # e0000074 <sec_mmio_ctx>
d000cf6e:                    00082603           lw      a2,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cf72:                    4701                       li      a4,0
d000cf74:                    4681                       li      a3,0
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  // Pick a random starting offset.
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
  enum { kStep = 1 };
  size_t i;
  for (i = 0; launder32(i) < last_index; ++i) {
d000cf76:       /----------- 04c77463           bgeu    a4,a2,d000cfbe <sec_mmio_check_values+0x58>
d000cf7a:       |            4681                       li      a3,0
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:113
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
d000cf7c:       |            02a63733           mulhu   a4,a2,a0
d000cf80:       |            21692537           lui     a0,0x21692
d000cf84:       |            43650893           addi    a7,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:117
    uint32_t read_value = abs_mmio_read32(sec_mmio_ctx.addrs[offset]);
d000cf88:       |  /-------> 00271793           slli    a5,a4,0x2
d000cf8c:       |  |         97c2                       add     a5,a5,a6
d000cf8e:       |  |         7d878593           addi    a1,a5,2008
d000cf92:       |  |         7d85a583           lw      a1,2008(a1)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000cf96:       |  |         418c                       lw      a1,0(a1)
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000cf98:       |  |         4b88                       lw      a0,16(a5)
d000cf9a:       |  |         4781                       li      a5,0
d000cf9c:       |  |         0115c5b3           xor     a1,a1,a7
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:120
                      sec_mmio_ctx.values[offset]);
    offset += kStep;
d000cfa0:       |  |         0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000cfa2:       |  |  /----- 00a58663           beq     a1,a0,d000cfae <sec_mmio_check_values+0x48>
d000cfa6:       |  |  |      0000                       unimp
d000cfa8:       |  |  |      0000                       unimp
d000cfaa:       |  |  |      0000                       unimp
d000cfac:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000cfae:       |  |  \--/-X 00c76363           bltu    a4,a2,d000cfb4 <sec_mmio_check_values+0x4e>
d000cfb2:       |  |     |   87b2                       mv      a5,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000cfb4:       |  |     \-> 0685                       addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cfb6:       |  |         8536                       mv      a0,a3
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000cfb8:       |  |         8f1d                       sub     a4,a4,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000cfba:       |  \-------- fcc567e3           bltu    a0,a2,d000cf88 <sec_mmio_check_values+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:126
      offset -= last_index;
    }
  }
  // Check for loop completion.
  HARDENED_CHECK_EQ(i, last_index);
d000cfbe:       \--------/-X 00c68663           beq     a3,a2,d000cfca <sec_mmio_check_values+0x64>
d000cfc2:                |   0000                       unimp
d000cfc4:                |   0000                       unimp
d000cfc6:                |   0000                       unimp
d000cfc8:                |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:127
  ++sec_mmio_ctx.check_count;
d000cfca:                \-> 00c82503           lw      a0,12(a6)
d000cfce:                    0505                       addi    a0,a0,1
d000cfd0:                    00a82623           sw      a0,12(a6)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:128
}
d000cfd4:                    8082                       ret

d000cfd6 <sec_mmio_check_counters>:
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:130

void sec_mmio_check_counters(uint32_t expected_check_count) {
d000cfd6:           3ca595b7            lui     a1,0x3ca59
d000cfda:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cfde:           862e                        mv      a2,a1
d000cfe0:           0fff3697            auipc   a3,0xfff3
d000cfe4:           09468693            addi    a3,a3,148 # e0000074 <sec_mmio_ctx>
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000cfe8:           42d8                        lw      a4,4(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000cfea:           469c                        lw      a5,8(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000cfec:           8e39                        xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000cfee:           8e3d                        xor     a2,a2,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:136

  // Check the expected write count. This is equivalent to
  // sec_mmio_ctx.write_count == sec_mmio_ctx.expected_write_count
  HARDENED_CHECK_EQ(result, kSecMmioValZero);
d000cff0:       /-- 00b60663            beq     a2,a1,d000cffc <sec_mmio_check_counters+0x26>
d000cff4:       |   0000                        unimp
d000cff6:       |   0000                        unimp
d000cff8:       |   0000                        unimp
d000cffa:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:141

  // Check the expected check counts. This is equivalent to
  // sec_mmio_ctx.check_count == expected_check_count. This check is expected to
  // fail if the previous check failed.
  result ^= sec_mmio_ctx.check_count;
d000cffc:       \-> 46cc                        lw      a1,12(a3)
d000cffe:           8d31                        xor     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:142
  result ^= expected_check_count;
d000d000:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:143
  HARDENED_CHECK_EQ(~launder32(result), kSecMmioValOne);
d000d002:           fff54513            not     a0,a0
d000d006:           c35a75b7            lui     a1,0xc35a7
d000d00a:           9a558593            addi    a1,a1,-1627 # c35a69a5 <_stack_end+0xe35869a5>
d000d00e:       /-- 00b50663            beq     a0,a1,d000d01a <sec_mmio_check_counters+0x44>
d000d012:       |   0000                        unimp
d000d014:       |   0000                        unimp
d000d016:       |   0000                        unimp
d000d018:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:145

  ++sec_mmio_ctx.check_count;
d000d01a:       \-> 46c8                        lw      a0,12(a3)
d000d01c:           0505                        addi    a0,a0,1
d000d01e:           c6c8                        sw      a0,12(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:146
}
d000d020:           8082                        ret

d000d022 <memcpy>:
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:61
  return byte << 24 | byte << 16 | byte << 8 | byte;
}

void *OT_PREFIX_IF_NOT_RV32(memcpy)(void *restrict dest,
                                    const void *restrict src, size_t len) {
  if (dest == NULL || src == NULL) {
d000d022:                       00153693                seqz    a3,a0
d000d026:                       0015b713                seqz    a4,a1
d000d02a:                       8ed9                    or      a3,a3,a4
d000d02c:       /-------------- eab5                    bnez    a3,d000d0a0 <memcpy+0x7e>
d000d02e:       |               4711                    li      a4,4
d000d030:       |               86b2                    mv      a3,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000d032:       |        /----- 00e66c63                bltu    a2,a4,d000d04a <memcpy+0x28>
d000d036:       |        |      00a5c6b3                xor     a3,a1,a0
d000d03a:       |        |      0036f793                andi    a5,a3,3
d000d03e:       |        |      8832                    mv      a6,a2
d000d040:       |        |      86b2                    mv      a3,a2
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000d042:       |        |  /-- eb91                    bnez    a5,d000d056 <memcpy+0x34>
d000d044:       |        |  |   40a006b3                neg     a3,a0
d000d048:       |        |  |   8a8d                    andi    a3,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000d04a:       |        \--|-> 40d60733                sub     a4,a2,a3
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000d04e:       |           |   9b71                    andi    a4,a4,-4
d000d050:       |           |   00d70833                add     a6,a4,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:69
  unsigned char *dest8 = (unsigned char *)dest;
  const unsigned char *src8 = (const unsigned char *)src;
  size_t body_offset, tail_offset;
  compute_alignment(dest, src, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000d054:       |  /--------|-- c6b9                    beqz    a3,d000d0a2 <memcpy+0x80>
d000d056:       |  |        \-> 4781                    li      a5,0
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000d058:       |  |        /-> 00f58733                add     a4,a1,a5
d000d05c:       |  |        |   00070883                lb      a7,0(a4)
d000d060:       |  |        |   00f50733                add     a4,a0,a5
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000d064:       |  |        |   0785                    addi    a5,a5,1
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000d066:       |  |        |   01170023                sb      a7,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000d06a:       |  |        \-- fef697e3                bne     a3,a5,d000d058 <memcpy+0x36>
/proc/self/cwd/sw/device/lib/base/memory.c:72
  }
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000d06e:       |  |  /-------- 0106fb63                bgeu    a3,a6,d000d084 <memcpy+0x62>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000d072:       |  |  |  /----> 00d58733                add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000d076:       |  |  |  |      4318                    lw      a4,0(a4)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000d078:       |  |  |  |      00d507b3                add     a5,a0,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000d07c:       |  |  |  |      0691                    addi    a3,a3,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000d07e:       |  |  |  |      c398                    sw      a4,0(a5)
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000d080:       |  |  |  +----- ff06e9e3                bltu    a3,a6,d000d072 <memcpy+0x50>
d000d084:       +--|-->--|----X 00c6fe63                bgeu    a3,a2,d000d0a0 <memcpy+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:76
    uint32_t word = read_32(&src8[i]);
    write_32(word, &dest8[i]);
  }
  for (; i < len; ++i) {
d000d088:       |  |  |  |      8e15                    sub     a2,a2,a3
d000d08a:       |  |  |  |      00d50733                add     a4,a0,a3
d000d08e:       |  |  |  |      95b6                    add     a1,a1,a3
/proc/self/cwd/sw/device/lib/base/memory.c:77
    dest8[i] = src8[i];
d000d090:       |  |  |  |  /-> 00058683                lb      a3,0(a1)
d000d094:       |  |  |  |  |   00d70023                sb      a3,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:76
  for (; i < len; ++i) {
d000d098:       |  |  |  |  |   167d                    addi    a2,a2,-1
d000d09a:       |  |  |  |  |   0705                    addi    a4,a4,1
d000d09c:       |  |  |  |  |   0585                    addi    a1,a1,1
d000d09e:       |  |  |  |  \-- fa6d                    bnez    a2,d000d090 <memcpy+0x6e>
/proc/self/cwd/sw/device/lib/base/memory.c:80
  }
  return dest;
}
d000d0a0:       \--|--|--|----> 8082                    ret
d000d0a2:          \--|--|----> 4681                    li      a3,0
/proc/self/cwd/sw/device/lib/base/memory.c:72
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000d0a4:             |  \----- fd06e7e3                bltu    a3,a6,d000d072 <memcpy+0x50>
d000d0a8:             \-------- bff1                    j       d000d084 <memcpy+0x62>

d000d0aa <memset>:
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:82

void *OT_PREFIX_IF_NOT_RV32(memset)(void *dest, int value, size_t len) {
d000d0aa:                 4691                  li      a3,4
d000d0ac:                 8732                  mv      a4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000d0ae:             /-- 00d66663              bltu    a2,a3,d000d0ba <memset+0x10>
d000d0b2:             |   40a006b3              neg     a3,a0
d000d0b6:             |   0036f713              andi    a4,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000d0ba:             \-> 40e606b3              sub     a3,a2,a4
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000d0be:                 ffc6f813              andi    a6,a3,-4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:89
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(dest, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000d0c2:          /----- cb01                  beqz    a4,d000d0d2 <memset+0x28>
d000d0c4:          |      87aa                  mv      a5,a0
d000d0c6:          |      86ba                  mv      a3,a4
/proc/self/cwd/sw/device/lib/base/memory.c:90
    dest8[i] = value8;
d000d0c8:          |  /-> 00b78023              sb      a1,0(a5)
/proc/self/cwd/sw/device/lib/base/memory.c:89
  for (; i < body_offset; ++i) {
d000d0cc:          |  |   16fd                  addi    a3,a3,-1
d000d0ce:          |  |   0785                  addi    a5,a5,1
d000d0d0:          |  \-- fee5                  bnez    a3,d000d0c8 <memset+0x1e>
/proc/self/cwd/sw/device/lib/base/memory.c:93
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000d0d2:       /--\----X 02080263              beqz    a6,d000d0f6 <memset+0x4c>
d000d0d6:       |         00e808b3              add     a7,a6,a4
d000d0da:       |         0ff5f813              andi    a6,a1,255
d000d0de:       |         010107b7              lui     a5,0x1010
d000d0e2:       |         10178793              addi    a5,a5,257 # 1010101 <_rom_ext_virtual_size+0xf90101>
d000d0e6:       |         02f807b3              mul     a5,a6,a5
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000d0ea:       |     /-> 00e506b3              add     a3,a0,a4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000d0ee:       |     |   0711                  addi    a4,a4,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000d0f0:       |     |   c29c                  sw      a5,0(a3)
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000d0f2:       |     \-- ff176ce3              bltu    a4,a7,d000d0ea <memset+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:96
    write_32(value32, &dest8[i]);
  }
  for (; i < len; ++i) {
d000d0f6:       \--/----X 00c77a63              bgeu    a4,a2,d000d10a <memset+0x60>
d000d0fa:          |      8e19                  sub     a2,a2,a4
d000d0fc:          |      00e506b3              add     a3,a0,a4
/proc/self/cwd/sw/device/lib/base/memory.c:97
    dest8[i] = value8;
d000d100:          |  /-> 00b68023              sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/base/memory.c:96
  for (; i < len; ++i) {
d000d104:          |  |   167d                  addi    a2,a2,-1
d000d106:          |  |   0685                  addi    a3,a3,1
d000d108:          |  \-- fe65                  bnez    a2,d000d100 <memset+0x56>
/proc/self/cwd/sw/device/lib/base/memory.c:99
  }
  return dest;
d000d10a:          \----> 8082                  ret

d000d10c <memrcmp>:
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:143
    }
  }
  return kMemCmpEq;
}

int memrcmp(const void *lhs, const void *rhs, size_t len) {
d000d10c:                    4691                       li      a3,4
d000d10e:                    8832                       mv      a6,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000d110:             /----- 02d66163           bltu    a2,a3,d000d132 <memrcmp+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000d114:             |      0015b693           seqz    a3,a1
d000d118:             |      00a5c733           xor     a4,a1,a0
d000d11c:             |      8b0d                       andi    a4,a4,3
d000d11e:             |      00173713           seqz    a4,a4
d000d122:             |      8ed9                       or      a3,a3,a4
d000d124:             |  /-- e299                       bnez    a3,d000d12a <memrcmp+0x1e>
d000d126:             |  |   8832                       mv      a6,a2
d000d128:             +--|-- a029                       j       d000d132 <memrcmp+0x26>
d000d12a:             |  \-> 40a006b3           neg     a3,a0
d000d12e:             |      0036f813           andi    a6,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000d132:             \----> 410606b3           sub     a3,a2,a6
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000d136:                    9af1                       andi    a3,a3,-4
d000d138:                    01068333           add     t1,a3,a6
d000d13c:                    86b2                       mv      a3,a2
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:149
  const unsigned char *lhs8 = (const unsigned char *)lhs;
  const unsigned char *rhs8 = (const unsigned char *)rhs;
  size_t body_offset, tail_offset;
  compute_alignment(lhs, rhs, len, &body_offset, &tail_offset);
  size_t end = len;
  for (; end > tail_offset; --end) {
d000d13e:                /-- 00666363           bltu    a2,t1,d000d144 <memrcmp+0x38>
d000d142:                |   869a                       mv      a3,t1
d000d144:                \-> fff58893           addi    a7,a1,-1
d000d148:                    fff50293           addi    t0,a0,-1
d000d14c:             /--/-X 02c37063           bgeu    t1,a2,d000d16c <memrcmp+0x60>
/proc/self/cwd/sw/device/lib/base/memory.c:151
    const size_t i = end - 1;
    if (lhs8[i] < rhs8[i]) {
d000d150:             |  |   00c28733           add     a4,t0,a2
d000d154:             |  |   00074703           lbu     a4,0(a4)
d000d158:             |  |   00c887b3           add     a5,a7,a2
d000d15c:             |  |   0007c783           lbu     a5,0(a5)
d000d160:       /-----|--|-- 04f76863           bltu    a4,a5,d000d1b0 <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:150
    const size_t i = end - 1;
d000d164:       |     |  |   167d                       addi    a2,a2,-1
d000d166:       |     |  \-- fee7f3e3           bgeu    a5,a4,d000d14c <memrcmp+0x40>
d000d16a:       |  /--|----- a005                       j       d000d18a <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:157
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000d16c:       |  |  \----> 15f1                       addi    a1,a1,-4
d000d16e:       |  |         1571                       addi    a0,a0,-4
d000d170:       |  |  /--/-X 02d87d63           bgeu    a6,a3,d000d1aa <memrcmp+0x9e>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000d174:       |  |  |  |   00d50633           add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000d178:       |  |  |  |   4210                       lw      a2,0(a2)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000d17a:       |  |  |  |   00d58733           add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000d17e:       |  |  |  |   4318                       lw      a4,0(a4)
d000d180:       +--|--|--|-- 02e66863           bltu    a2,a4,d000d1b0 <memrcmp+0xa4>
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:158
    const size_t i = end - sizeof(uint32_t);
d000d184:       |  |  |  |   16f1                       addi    a3,a3,-4
d000d186:       |  |  |  \-- fec775e3           bgeu    a4,a2,d000d170 <memrcmp+0x64>
d000d18a:       |  >--|----> 02a00513           li      a0,42
/proc/self/cwd/sw/device/lib/base/memory.c:178
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
d000d18e:       |  |  |      8082                       ret
/proc/self/cwd/sw/device/lib/base/memory.c:171
    if (lhs8[i] < rhs8[i]) {
d000d190:       |  |  |  /-> 00d28533           add     a0,t0,a3
d000d194:       |  |  |  |   00054503           lbu     a0,0(a0)
d000d198:       |  |  |  |   00d885b3           add     a1,a7,a3
d000d19c:       |  |  |  |   0005c583           lbu     a1,0(a1)
d000d1a0:       +--|--|--|-- 00b56863           bltu    a0,a1,d000d1b0 <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:170
    const size_t i = end - 1;
d000d1a4:       |  |  |  |   16fd                       addi    a3,a3,-1
d000d1a6:       |  \--|--|-- fea5e2e3           bltu    a1,a0,d000d18a <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:169
  for (; end > 0; --end) {
d000d1aa:       |     \--\-X f2fd                       bnez    a3,d000d190 <memrcmp+0x84>
d000d1ac:       |            4501                       li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:178
}
d000d1ae:       |            8082                       ret
d000d1b0:       \----------> fd600513           li      a0,-42
d000d1b4:                    8082                       ret

d000d1b6 <device_fpga_version_print>:
device_fpga_version_print():
/proc/self/cwd/sw/device/lib/arch/device_sim_verilator.c:57

const uintptr_t kDeviceLogBypassUartAddress = 0;

const bool kJitterEnabled = false;

void device_fpga_version_print(void) {}
d000d1b6:       8082                    ret

Disassembly of section .shutdown:

d000d1b8 <shutdown_finalize>:
shutdown_finalize():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:504
 * The shutdown_finalize function goes into the .shutdown section which is
 * placed by the linker script after all other executable code.
 */
__attribute__((section(".shutdown")))
#endif
void shutdown_finalize(rom_error_t reason) {
d000d1b8:                       c01405b7                lui     a1,0xc0140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d1bc:                       59cc                    lw      a1,52(a1)
d000d1be:                       40000637                lui     a2,0x40000
d000d1c2:                       167d                    addi    a2,a2,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000d1c4:                       00c5feb3                and     t4,a1,a2
d000d1c8:                       e2291637                lui     a2,0xe2291
d000d1cc:                       1ad6b6b7                lui     a3,0x1ad6b
d000d1d0:                       5ac68693                addi    a3,a3,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1aceb5ac>
d000d1d4:                       aa560613                addi    a2,a2,-1371 # e2290aa5 <_stack_end+0x2270aa5>
shutdown_redact_policy_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:270
  switch (raw_state) {
d000d1d8:                   /-- 03d6cb63                blt     a3,t4,d000d20e <shutdown_finalize+0x56>
d000d1dc:                   |   0e73a6b7                lui     a3,0xe73a
d000d1e0:                   |   ce668713                addi    a4,a3,-794 # e739ce6 <_rom_ext_virtual_size+0xe6b9ce6>
d000d1e4:             /-----|-- 05d74e63                blt     a4,t4,d000d240 <shutdown_finalize+0x88>
d000d1e8:             |     |   021086b7                lui     a3,0x2108
d000d1ec:             |     |   42168693                addi    a3,a3,1057 # 2108421 <_rom_ext_virtual_size+0x2088421>
d000d1f0:       /-----|-----|-- 0ade8263                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d1f4:       |     |     |   063196b7                lui     a3,0x6319
d000d1f8:       |     |     |   c6368693                addi    a3,a3,-925 # 6318c63 <_rom_ext_virtual_size+0x6298c63>
d000d1fc:       +-----|-----|-- 08de8c63                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d200:       |     |     |   0a5296b7                lui     a3,0xa529
d000d204:       |     |     |   4a568693                addi    a3,a3,1189 # a5294a5 <_rom_ext_virtual_size+0xa4a94a5>
d000d208:       +-----|-----|-- 08de8663                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d20c:       |  /--|-----|-- a041                    j       d000d28c <shutdown_finalize+0xd4>
d000d20e:       |  |  |     \-> 2318c6b7                lui     a3,0x2318c
d000d212:       |  |  |         63068713                addi    a4,a3,1584 # 2318c630 <_rom_ext_virtual_size+0x2310c630>
d000d216:       |  |  |  /----- 05d74663                blt     a4,t4,d000d262 <shutdown_finalize+0xaa>
d000d21a:       |  |  |  |      1ad6b6b7                lui     a3,0x1ad6b
d000d21e:       |  |  |  |      5ad68693                addi    a3,a3,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1aceb5ad>
d000d222:       +--|--|--|----- 06de8963                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d226:       |  |  |  |      1ef7c6b7                lui     a3,0x1ef7c
d000d22a:       |  |  |  |      def68693                addi    a3,a3,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1eefbdef>
d000d22e:       +--|--|--|----- 06de8363                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d232:       |  |  |  |      21084637                lui     a2,0x21084
d000d236:       |  |  |  |      21060613                addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21004210>
d000d23a:       |  |  |  |  /-- 04ce8463                beq     t4,a2,d000d282 <shutdown_finalize+0xca>
d000d23e:       |  +--|--|--|-- a0b9                    j       d000d28c <shutdown_finalize+0xd4>
d000d240:       |  |  \--|--|-> ce768693                addi    a3,a3,-793
d000d244:       +--|-----|--|-- 04de8863                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d248:       |  |     |  |   1294a6b7                lui     a3,0x1294a
d000d24c:       |  |     |  |   52968693                addi    a3,a3,1321 # 1294a529 <_rom_ext_virtual_size+0x128ca529>
d000d250:       +--|-----|--|-- 04de8263                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d254:       |  |     |  |   16b5b6b7                lui     a3,0x16b5b
d000d258:       |  |     |  |   d6b68693                addi    a3,a3,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16adad6b>
d000d25c:       +--|-----|--|-- 02de8c63                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d260:       |  +-----|--|-- a035                    j       d000d28c <shutdown_finalize+0xd4>
d000d262:       |  |     \--|-> 63168693                addi    a3,a3,1585
d000d266:       |  |        +-- 00de8e63                beq     t4,a3,d000d282 <shutdown_finalize+0xca>
d000d26a:       |  |        |   2739d6b7                lui     a3,0x2739d
d000d26e:       |  |        |   e7368693                addi    a3,a3,-397 # 2739ce73 <_rom_ext_virtual_size+0x2731ce73>
d000d272:       +--|--------|-- 02de8163                beq     t4,a3,d000d294 <shutdown_finalize+0xdc>
d000d276:       |  |        |   25295637                lui     a2,0x25295
d000d27a:       |  |        |   a5260613                addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25214a52>
d000d27e:       |  +--------|-- 00ce9763                bne     t4,a2,d000d28c <shutdown_finalize+0xd4>
d000d282:       |  |        \-> c0131637                lui     a2,0xc0131
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d286:       |  |            36062603                lw      a2,864(a2) # c0131360 <_stack_end+0xe0111360>
d000d28a:       +--|----------- a029                    j       d000d294 <shutdown_finalize+0xdc>
d000d28c:       |  \----------> 48eb5637                lui     a2,0x48eb5
d000d290:       |               bd960613                addi    a2,a2,-1063 # 48eb4bd9 <_epmp_stack_guard_na4+0x10eadbd9>
d000d294:       \-------------> 73900693                li      a3,1849
shutdown_redact_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:238
  if (reason == kErrorOk) {
d000d298:                   /-- 00d51463                bne     a0,a3,d000d2a0 <shutdown_finalize+0xe8>
d000d29c:                   |   4501                    li      a0,0
d000d29e:             /-----|-- a835                    j       d000d2da <shutdown_finalize+0x122>
d000d2a0:             |     \-> e22916b7                lui     a3,0xe2291
d000d2a4:             |         aa568693                addi    a3,a3,-1371 # e2290aa5 <_stack_end+0x2270aa5>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:241
  switch (severity) {
d000d2a8:             +-------- 02d60963                beq     a2,a3,d000d2da <shutdown_finalize+0x122>
d000d2ac:             |         3367d6b7                lui     a3,0x3367d
d000d2b0:             |         3d468693                addi    a3,a3,980 # 3367d3d4 <_rom_ext_virtual_size+0x335fd3d4>
d000d2b4:             |  /----- 00d60d63                beq     a2,a3,d000d2ce <shutdown_finalize+0x116>
d000d2b8:             |  |      1e7916b7                lui     a3,0x1e791
d000d2bc:             |  |      12368693                addi    a3,a3,291 # 1e791123 <_rom_ext_virtual_size+0x1e711123>
d000d2c0:             |  |  /-- 00d61c63                bne     a2,a3,d000d2d8 <shutdown_finalize+0x120>
d000d2c4:             |  |  |   ff000637                lui     a2,0xff000
d000d2c8:             |  |  |   0ff60613                addi    a2,a2,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000d2cc:             |  |  |   8d71                    and     a0,a0,a2
d000d2ce:             |  \--|-> 01000637                lui     a2,0x1000
d000d2d2:             |     |   167d                    addi    a2,a2,-1
d000d2d4:             |     |   8d71                    and     a0,a0,a2
d000d2d6:             +-----|-- a011                    j       d000d2da <shutdown_finalize+0x122>
d000d2d8:             |     \-> 557d                    li      a0,-1
d000d2da:             \-------> c00006b7                lui     a3,0xc0000
d000d2de:                       4609                    li      a2,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d2e0:                       d290                    sw      a2,32(a3)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d2e2:                       4a90                    lw      a2,16(a3)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000d2e4:                       00166613                ori     a2,a2,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d2e8:                       ca90                    sw      a2,16(a3)
d000d2ea:                       3a564837                lui     a6,0x3a564
d000d2ee:                       64280613                addi    a2,a6,1602 # 3a564642 <_epmp_stack_guard_na4+0x255d642>
d000d2f2:                       ced0                    sw      a2,28(a3)
d000d2f4:                       003a58b7                lui     a7,0x3a5
d000d2f8:                       64688613                addi    a2,a7,1606 # 3a5646 <_rom_ext_virtual_size+0x325646>
d000d2fc:                       ced0                    sw      a2,28(a3)
d000d2fe:                       6611                    lui     a2,0x4
d000d300:                       a5660393                addi    t2,a2,-1450 # 3a56 <_static_critical_size+0x1a92>
d000d304:                       0076ae23                sw      t2,28(a3) # c000001c <_stack_end+0xdffe001c>
d000d308:                       03a00293                li      t0,58
d000d30c:                       0056ae23                sw      t0,28(a3)
d000d310:                       4e21                    li      t3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d312:                       4721                    li      a4,8
d000d314:                       00000617                auipc   a2,0x0
d000d318:                       1f460613                addi    a2,a2,500 # d000d508 <kSpiDeviceSfdpTable+0x7c>
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000d31c:                /----- cf19                    beqz    a4,d000d33a <shutdown_finalize+0x182>
d000d31e:                |      4781                    li      a5,0
d000d320:                |      4771                    li      a4,28
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000d322:                |  /-> 00e555b3                srl     a1,a0,a4
d000d326:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000d328:                |  |   95b2                    add     a1,a1,a2
d000d32a:                |  |   0005c583                lbu     a1,0(a1) # c0140000 <_stack_end+0xe0120000>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000d32e:                |  |   cecc                    sw      a1,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000d330:                |  |   0785                    addi    a5,a5,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d332:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000d334:                |  |   1771                    addi    a4,a4,-4
d000d336:                |  \-- feb7e6e3                bltu    a5,a1,d000d322 <shutdown_finalize+0x16a>
d000d33a:                \----> 4335                    li      t1,13
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000d33c:                       0066ae23                sw      t1,28(a3)
d000d340:                       4529                    li      a0,10
d000d342:                       cec8                    sw      a0,28(a3)
d000d344:                       34c80593                addi    a1,a6,844
d000d348:                       cecc                    sw      a1,28(a3)
d000d34a:                       64388593                addi    a1,a7,1603
d000d34e:                       cecc                    sw      a1,28(a3)
d000d350:                       0076ae23                sw      t2,28(a3)
d000d354:                       0056ae23                sw      t0,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000d358:                /----- 020e0263                beqz    t3,d000d37c <shutdown_finalize+0x1c4>
d000d35c:                |      4681                    li      a3,0
d000d35e:                |      4771                    li      a4,28
d000d360:                |      c00007b7                lui     a5,0xc0000
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000d364:                |  /-> 00eed5b3                srl     a1,t4,a4
d000d368:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000d36a:                |  |   95b2                    add     a1,a1,a2
d000d36c:                |  |   0005c583                lbu     a1,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000d370:                |  |   cfcc                    sw      a1,28(a5)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000d372:                |  |   0685                    addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d374:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000d376:                |  |   1771                    addi    a4,a4,-4
d000d378:                |  \-- feb6e6e3                bltu    a3,a1,d000d364 <shutdown_finalize+0x1ac>
d000d37c:                \----> c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000d380:                       0065ae23                sw      t1,28(a1) # c000001c <_stack_end+0xdffe001c>
d000d384:                       cdc8                    sw      a0,28(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:391
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000d386:                       b0001073                csrw    mcycle,zero
d000d38a:                       00001517                auipc   a0,0x1
d000d38e:                       bda50513                addi    a0,a0,-1062 # d000df64 <kUartTxFifoCpuCycles>
d000d392:                       4108                    lw      a0,0(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d394:                   /-> 49d0                    lw      a2,20(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:398
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000d396:                   |   b00026f3                csrr    a3,mcycle
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000d39a:                   |   8a21                    andi    a2,a2,8
d000d39c:                   |   00163613                seqz    a2,a2
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:399
  } while (mcycle < kUartTxFifoCpuCycles && !tx_idle);
d000d3a0:                   |   00a6b6b3                sltu    a3,a3,a0
d000d3a4:                   |   8e75                    and     a2,a2,a3
d000d3a6:                   \-- f67d                    bnez    a2,d000d394 <shutdown_finalize+0x1dc>
d000d3a8:                       c11f0537                lui     a0,0xc11f0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d3ac:                       00052423                sw      zero,8(a0) # c11f0008 <_stack_end+0xe11d0008>
d000d3b0:                       c1140537                lui     a0,0xc1140
d000d3b4:                       04000593                li      a1,64
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000d3b8:                       cd0c                    sw      a1,24(a0)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000d3ba:                       cd0c                    sw      a1,24(a0)
d000d3bc:                       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d3be:                       c94c                    sw      a1,20(a0)
d000d3c0:                       cd4c                    sw      a1,28(a0)
d000d3c2:                       c0410837                lui     a6,0xc0410
d000d3c6:                       4619                    li      a2,6
d000d3c8:                       00c82223                sw      a2,4(a6) # c0410004 <_stack_end+0xe03f0004>
d000d3cc:                       c10006b7                lui     a3,0xc1000
d000d3d0:                       0006a823                sw      zero,16(a3) # c1000010 <_stack_end+0xe0fe0010>
d000d3d4:                       c11c06b7                lui     a3,0xc11c0
d000d3d8:                       0006a023                sw      zero,0(a3) # c11c0000 <_stack_end+0xe11a0000>
d000d3dc:                       0006a423                sw      zero,8(a3)
d000d3e0:                       80000737                lui     a4,0x80000
d000d3e4:                       177d                    addi    a4,a4,-1
d000d3e6:                       009897b7                lui     a5,0x989
d000d3ea:                       d0078793                addi    a5,a5,-768 # 988d00 <_rom_ext_virtual_size+0x908d00>
d000d3ee:                       4509                    li      a0,2
shutdown_hang():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:452
  asm volatile(
d000d3f0:                   /-> cacc                    sw      a1,20(a3)
d000d3f2:                   |   00c82223                sw      a2,4(a6)
d000d3f6:                   |   00000297                auipc   t0,0x0
d000d3fa:                   |   ffa28293                addi    t0,t0,-6 # d000d3f0 <shutdown_finalize+0x238>
d000d3fe:                   |   0022d293                srli    t0,t0,0x2
d000d402:                   |   3b029073                csrw    pmpaddr0,t0
d000d406:                   |   00000297                auipc   t0,0x0
d000d40a:                   |   04a28293                addi    t0,t0,74 # d000d450 <_text_end>
d000d40e:                   |   0022d293                srli    t0,t0,0x2
d000d412:                   |   3b129073                csrw    pmpaddr1,t0
d000d416:                   |   3b271073                csrw    pmpaddr2,a4
d000d41a:                   |   3a079073                csrw    pmpcfg0,a5
d000d41e:                   |   3a101073                csrw    pmpcfg1,zero
d000d422:                   |   3a201073                csrw    pmpcfg2,zero
d000d426:                   |   3a301073                csrw    pmpcfg3,zero
d000d42a:                   |   74751073                csrw    0x747,a0
d000d42e:                   |   10500073                wfi
d000d432:                   |   10500073                wfi
d000d436:                   |   10500073                wfi
d000d43a:                   |   10500073                wfi
d000d43e:                   +-- bf4d                    j       d000d3f0 <shutdown_finalize+0x238>
d000d440:                   |   10500073                wfi
d000d444:                   |   10500073                wfi
d000d448:                   +-- b765                    j       d000d3f0 <shutdown_finalize+0x238>
d000d44a:                   |   10500073                wfi
d000d44e:                   \-- b74d                    j       d000d3f0 <shutdown_finalize+0x238>
