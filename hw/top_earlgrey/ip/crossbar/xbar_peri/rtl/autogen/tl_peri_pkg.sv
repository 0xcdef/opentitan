// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// tl_peri package generated by `tlgen.py` tool

package tl_peri_pkg;

  localparam logic [31:0] ADDR_SPACE_PATTGEN                 = 32'h b00e0000;
  localparam logic [31:0] ADDR_SPACE_GPIO                    = 32'h b0040000;
  localparam logic [31:0] ADDR_SPACE_SPI_DEVICE              = 32'h b0050000;
  localparam logic [31:0] ADDR_SPACE_RV_TIMER                = 32'h b0100000;
  localparam logic [31:0] ADDR_SPACE_PWRMGR_AON              = 32'h b0400000;
  localparam logic [31:0] ADDR_SPACE_RSTMGR_AON              = 32'h b0410000;
  localparam logic [31:0] ADDR_SPACE_CLKMGR_AON              = 32'h b0420000;
  localparam logic [31:0] ADDR_SPACE_PINMUX_AON              = 32'h b0460000;
  localparam logic [31:0] ADDR_SPACE_OTP_CTRL__CORE          = 32'h b0130000;
  localparam logic [31:0] ADDR_SPACE_OTP_CTRL__PRIM          = 32'h b0132000;
  localparam logic [31:0] ADDR_SPACE_LC_CTRL                 = 32'h b0140000;
  localparam logic [31:0] ADDR_SPACE_ALERT_HANDLER           = 32'h b0150000;
  localparam logic [31:0] ADDR_SPACE_SRAM_CTRL_RET_AON__REGS = 32'h b0500000;
  localparam logic [31:0] ADDR_SPACE_SRAM_CTRL_RET_AON__RAM  = 32'h b0600000;
  localparam logic [31:0] ADDR_SPACE_AON_TIMER_AON           = 32'h b0470000;
  localparam logic [31:0] ADDR_SPACE_SYSRST_CTRL_AON         = 32'h b0430000;

  localparam logic [31:0] ADDR_MASK_PATTGEN                 = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_GPIO                    = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SPI_DEVICE              = 32'h 00001fff;
  localparam logic [31:0] ADDR_MASK_RV_TIMER                = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_PWRMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_RSTMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_CLKMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_PINMUX_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_OTP_CTRL__CORE          = 32'h 00001fff;
  localparam logic [31:0] ADDR_MASK_OTP_CTRL__PRIM          = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_LC_CTRL                 = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_ALERT_HANDLER           = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SRAM_CTRL_RET_AON__REGS = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SRAM_CTRL_RET_AON__RAM  = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_AON_TIMER_AON           = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SYSRST_CTRL_AON         = 32'h 00000fff;

  localparam int N_HOST   = 1;
  localparam int N_DEVICE = 16;

  typedef enum int {
    TlPattgen = 0,
    TlGpio = 1,
    TlSpiDevice = 2,
    TlRvTimer = 3,
    TlPwrmgrAon = 4,
    TlRstmgrAon = 5,
    TlClkmgrAon = 6,
    TlPinmuxAon = 7,
    TlOtpCtrlCore = 8,
    TlOtpCtrlPrim = 9,
    TlLcCtrl = 10,
    TlAlertHandler = 11,
    TlSramCtrlRetAonRegs = 12,
    TlSramCtrlRetAonRam = 13,
    TlAonTimerAon = 14,
    TlSysrstCtrlAon = 15
  } tl_device_e;

  typedef enum int {
    TlMain = 0
  } tl_host_e;

endpackage
