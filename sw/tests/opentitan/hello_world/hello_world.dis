
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/hw/top_earlgrey/sw/tests/hello_world/hello_world_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/hw/top_earlgrey/sw/tests/hello_world/hello_world_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xe0000080

Program Header:
    LOAD off    0x00001000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00002e08 memsz 0x00002e10 flags rwx
    LOAD off    0x00000000 vaddr 0xe0008000 paddr 0xe0008000 align 2**12
         filesz 0x00000000 memsz 0x00002000 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name                          Size      VMA       LMA       File off  Algn  Flags
  0 .vectors                      00000084  e0000000  e0000000  00001000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text                         00000ae8  e0000084  e0000084  00001084  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata                       000002c8  e0000b6c  e0000b6c  00001b6c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data                         00000084  e0000e34  e0000e34  00001e34  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .static_critical.sec_mmio_ctx 00001f50  e0000eb8  e0000eb8  00001eb8  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .bss                          00000008  e0002e08  e0002e08  00003e08  2**2  ALLOC
  6 .logs.fields                  00000000  e0002e10  e0002e10  00003e08  2**0  CONTENTS
  7 .stack                        00002000  e0008000  e0008000  00004000  2**0  ALLOC
  8 .debug_loc                    00003d40  00000000  00000000  00003e08  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_abbrev                 000011ab  00000000  00000000  00007b48  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info                   00004e34  00000000  00000000  00008cf3  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str                    00003c02  00000000  00000000  0000db27  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .comment                      00000074  00000000  00000000  00011729  2**0  CONTENTS, READONLY
 13 .riscv.attributes             00000026  00000000  00000000  0001179d  2**0  CONTENTS, READONLY
 14 .debug_frame                  00000640  00000000  00000000  000117c4  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line                   00003868  00000000  00000000  00011e04  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges                 000005f0  00000000  00000000  0001566c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges                00000028  00000000  00000000  00015c5c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
e0000000 l    d  .vectors       00000000 .vectors
e0000084 l    d  .text  00000000 .text
e0000b6c l    d  .rodata        00000000 .rodata
e0000e34 l    d  .data  00000000 .data
e0000eb8 l    d  .static_critical.sec_mmio_ctx  00000000 .static_critical.sec_mmio_ctx
e0002e08 l    d  .bss   00000000 .bss
e0002e10 l    d  .logs.fields   00000000 .logs.fields
e0008000 l    d  .stack 00000000 .stack
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .comment       00000000 .comment
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    df *ABS*  00000000 crt0.o
e0000084 l       .text  00000000 default_exc_handler
e0000084 l       .text  00000000 
e00000f2 l       .text  00000000 sleep_loop
e0000084 l       .text  00000000 
e0000086 l       .text  00000000 reset_handler
e0000086 l       .text  00000000 
e0000086 l       .text  00000000 
e00000cc l       .text  00000000 
e00000ea l       .text  00000000 zero_loop_end
e00000e0 l       .text  00000000 zero_loop
e00000e0 l       .text  00000000 
e00000ea l       .text  00000000 
e00000ea l       .text  00000000 main_entry
e00000ea l       .text  00000000 
e00000ee l       .text  00000000 
e00000f2 l       .text  00000000 
e00000f2 l       .text  00000000 
e00000f6 l       .text  00000000 
e0000000 l       .vectors       00000000 
e000002c l       .vectors       00000000 
e0000030 l       .vectors       00000000 
e000007c l       .vectors       00000000 
e0000080 l       .vectors       00000000 
00000b16 l       .debug_info    00000000 
0000037a l       .debug_abbrev  00000000 
e00000f8 l       .text  00000000 
e0000084 l       .vectors       00000000 
00000140 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 hello_world.c
e00000f8 l       .text  00000000 
e00000f8 l       .text  00000000 
e00000f8 l       .text  00000000 
e00000fa l       .text  00000000 
e00000fa l       .text  00000000 
e00000fe l       .text  00000000 
e0000100 l       .text  00000000 
e0000100 l       .text  00000000 
e0000102 l       .text  00000000 
e0000102 l       .text  00000000 
e000010c l       .text  00000000 
e000010e l       .text  00000000 
e000010e l       .text  00000000 
e000011a l       .text  00000000 
e000011a l       .text  00000000 
e000011e l       .text  00000000 
e000011e l       .text  00000000 
e0000124 l       .text  00000000 
e0000124 l       .text  00000000 
e000012a l       .text  00000000 
e000012a l       .text  00000000 
e0000130 l       .text  00000000 
e0000130 l       .text  00000000 
e0000136 l       .text  00000000 
e0000136 l       .text  00000000 
e000013c l       .text  00000000 
e000013c l       .text  00000000 
e0000142 l       .text  00000000 
e0000142 l       .text  00000000 
e0000148 l       .text  00000000 
e0000148 l       .text  00000000 
e000014e l       .text  00000000 
e000014e l       .text  00000000 
e0000154 l       .text  00000000 
e0000154 l       .text  00000000 
e000015a l       .text  00000000 
e000015a l       .text  00000000 
e0000160 l       .text  00000000 
e0000160 l       .text  00000000 
e0000164 l       .text  00000000 
e0000164 l       .text  00000000 
e0000168 l       .text  00000000 
e0000168 l       .text  00000000 
e0000172 l       .text  00000000 
e0000172 l       .text  00000000 
00000000 l       .debug_loc     00000000 
00000013 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000004ca l       .debug_str     00000000 
000000b6 l       .debug_str     00000000 
000000bf l       .debug_str     00000000 
000000cd l       .debug_str     00000000 
000000ee l       .debug_str     00000000 
00000104 l       .debug_str     00000000 
00000120 l       .debug_str     00000000 
00000135 l       .debug_str     00000000 
00000151 l       .debug_str     00000000 
0000016d l       .debug_str     00000000 
00000181 l       .debug_str     00000000 
00000195 l       .debug_str     00000000 
000001aa l       .debug_str     00000000 
000001c3 l       .debug_str     00000000 
000001d7 l       .debug_str     00000000 
000001eb l       .debug_str     00000000 
000001fb l       .debug_str     00000000 
0000020e l       .debug_str     00000000 
00000228 l       .debug_str     00000000 
0000023f l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
00000275 l       .debug_str     00000000 
00000291 l       .debug_str     00000000 
000002a8 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002d6 l       .debug_str     00000000 
000002ee l       .debug_str     00000000 
00000307 l       .debug_str     00000000 
00000320 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000352 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
0000038f l       .debug_str     00000000 
000003a9 l       .debug_str     00000000 
000003c2 l       .debug_str     00000000 
000003de l       .debug_str     00000000 
000003fc l       .debug_str     00000000 
00000418 l       .debug_str     00000000 
00000434 l       .debug_str     00000000 
00000450 l       .debug_str     00000000 
00000467 l       .debug_str     00000000 
00000480 l       .debug_str     00000000 
00000496 l       .debug_str     00000000 
000004b5 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00000536 l       .debug_str     00000000 
0000053b l       .debug_str     00000000 
00000540 l       .debug_str     00000000 
000004d4 l       .debug_str     00000000 
000004e2 l       .debug_str     00000000 
000004ee l       .debug_str     00000000 
000004f8 l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
00000504 l       .debug_str     00000000 
0000050f l       .debug_str     00000000 
0000051b l       .debug_str     00000000 
00000528 l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
e0000172 l       .text  00000000 
00000000 l    df *ABS*  00000000 utils.c
e0000172 l       .text  00000000 
e0000172 l       .text  00000000 
e0000172 l       .text  00000000 
e0000174 l       .text  00000000 
e0000174 l       .text  00000000 
e0000182 l       .text  00000000 
e000018a l       .text  00000000 
e000018c l       .text  00000000 
e0000190 l       .text  00000000 
e0000194 l       .text  00000000 
e00001a0 l       .text  00000000 
e00001a2 l       .text  00000000 
e00001a4 l       .text  00000000 
e00001a4 l       .text  00000000 
e00001a6 l       .text  00000000 
e00001a6 l       .text  00000000 
e00001a8 l       .text  00000000 
e00001a8 l       .text  00000000 
e00001aa l       .text  00000000 
e00001aa l       .text  00000000 
e00001ae l       .text  00000000 
e00001ae l       .text  00000000 
e00001b6 l       .text  00000000 
e00001b8 l       .text  00000000 
e00001b8 l       .text  00000000 
e00001ba l       .text  00000000 
e00001ba l       .text  00000000 
e00001d0 l       .text  00000000 
e00001d4 l       .text  00000000 
e00001d6 l       .text  00000000 
e00001d8 l       .text  00000000 
e00001d8 l       .text  00000000 
e00001da l       .text  00000000 
e00001de l       .text  00000000 
e00001e0 l       .text  00000000 
e00001ec l       .text  00000000 
e00001ec l       .text  00000000 
00000026 l       .debug_loc     00000000 
0000004c l       .debug_loc     00000000 
00000074 l       .debug_loc     00000000 
0000009a l       .debug_loc     00000000 
000000f7 l       .debug_loc     00000000 
0000011f l       .debug_loc     00000000 
00000145 l       .debug_loc     00000000 
0000017a l       .debug_loc     00000000 
000001ba l       .debug_loc     00000000 
000001d5 l       .debug_loc     00000000 
000001f6 l       .debug_loc     00000000 
00000211 l       .debug_loc     00000000 
0000022c l       .debug_loc     00000000 
00000247 l       .debug_loc     00000000 
00000262 l       .debug_loc     00000000 
0000028a l       .debug_loc     00000000 
000002bb l       .debug_loc     00000000 
000002f0 l       .debug_loc     00000000 
00000318 l       .debug_loc     00000000 
00000334 l       .debug_loc     00000000 
0000034f l       .debug_loc     00000000 
0000036a l       .debug_loc     00000000 
00000385 l       .debug_loc     00000000 
000003a0 l       .debug_loc     00000000 
000003bb l       .debug_loc     00000000 
000003d6 l       .debug_loc     00000000 
000003f1 l       .debug_loc     00000000 
0000044e l       .debug_loc     00000000 
00000474 l       .debug_loc     00000000 
000004b4 l       .debug_loc     00000000 
000004dc l       .debug_loc     00000000 
00000502 l       .debug_loc     00000000 
00000542 l       .debug_loc     00000000 
00000574 l       .debug_loc     00000000 
000005a0 l       .debug_loc     00000000 
000005bb l       .debug_loc     00000000 
000005d6 l       .debug_loc     00000000 
000005f7 l       .debug_loc     00000000 
00000612 l       .debug_loc     00000000 
00000638 l       .debug_loc     00000000 
00000674 l       .debug_loc     00000000 
0000069a l       .debug_loc     00000000 
000006e1 l       .debug_loc     00000000 
00000728 l       .debug_loc     00000000 
00000764 l       .debug_loc     00000000 
0000078c l       .debug_loc     00000000 
000007e9 l       .debug_loc     00000000 
00000813 l       .debug_loc     00000000 
00000855 l       .debug_loc     00000000 
000008de l       .debug_loc     00000000 
000008f9 l       .debug_loc     00000000 
0000091f l       .debug_loc     00000000 
00000945 l       .debug_loc     00000000 
00000962 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000545 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000000d8 l       .debug_ranges  00000000 
0000056d l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
000005ed l       .debug_str     00000000 
000004fd l       .debug_str     00000000 
00000595 l       .debug_str     00000000 
0000059c l       .debug_str     00000000 
000005b5 l       .debug_str     00000000 
0000058e l       .debug_str     00000000 
000021f1 l       .debug_str     00000000 
000005b1 l       .debug_str     00000000 
000005b8 l       .debug_str     00000000 
000005be l       .debug_str     00000000 
00001bec l       .debug_str     00000000 
000005a9 l       .debug_str     00000000 
0000059f l       .debug_str     00000000 
000005c2 l       .debug_str     00000000 
000000a5 l       .debug_str     00000000 
00000520 l       .debug_str     00000000 
000005d0 l       .debug_str     00000000 
000005db l       .debug_str     00000000 
00000650 l       .debug_str     00000000 
000006c7 l       .debug_str     00000000 
000006ce l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
00003545 l       .debug_str     00000000 
00000030 l       .debug_ranges  00000000 
00000048 l       .debug_ranges  00000000 
00000060 l       .debug_ranges  00000000 
00000078 l       .debug_ranges  00000000 
00000090 l       .debug_ranges  00000000 
000000a8 l       .debug_ranges  00000000 
00000658 l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
00002986 l       .debug_str     00000000 
000006e4 l       .debug_str     00000000 
000006e7 l       .debug_str     00000000 
000006da l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
000006f1 l       .debug_str     00000000 
00003921 l       .debug_str     00000000 
000000c0 l       .debug_ranges  00000000 
00000600 l       .debug_str     00000000 
00000660 l       .debug_str     00000000 
00000667 l       .debug_str     00000000 
0000060d l       .debug_str     00000000 
00000617 l       .debug_str     00000000 
00000624 l       .debug_str     00000000 
00000636 l       .debug_str     00000000 
00000000 l       .debug_ranges  00000000 
00000018 l       .debug_ranges  00000000 
0000063b l       .debug_str     00000000 
0000068b l       .debug_str     00000000 
00000693 l       .debug_str     00000000 
000026f6 l       .debug_str     00000000 
0000374c l       .debug_str     00000000 
00003292 l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006a0 l       .debug_str     00000000 
000006ab l       .debug_str     00000000 
000006b2 l       .debug_str     00000000 
000006b9 l       .debug_str     00000000 
000006c0 l       .debug_str     00000000 
000005df l       .debug_str     00000000 
00000fc7 l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
0000390d l       .debug_str     00000000 
00000534 l       .debug_str     00000000 
00000682 l       .debug_str     00000000 
00000673 l       .debug_str     00000000 
0000002c l       .debug_frame   00000000 
e00001ec l       .text  00000000 
00000000 l    df *ABS*  00000000 rom_print.c
e00001ec l       .text  00000000 
e00001ec l       .text  00000000 
e00001ec l       .text  00000000 
e00001ee l       .text  00000000 
e0000200 l       .text  00000000 
e0000202 l       .text  00000000 
e0000212 l       .text  00000000 
e0000212 l       .text  00000000 
e0000224 l       .text  00000000 
e0000b8e l     O .rodata        00000010 rom_printf.kHexTable
e0000224 l       .text  00000000 
e0000230 l       .text  00000000 
e0000230 l       .text  00000000 
e0000234 l       .text  00000000 
e000023a l       .text  00000000 
e000023c l       .text  00000000 
e000023e l       .text  00000000 
e000023e l       .text  00000000 
e0000240 l       .text  00000000 
e0000240 l       .text  00000000 
e0000244 l       .text  00000000 
e0000248 l       .text  00000000 
e0000248 l       .text  00000000 
e0000250 l       .text  00000000 
e0000250 l       .text  00000000 
e0000252 l       .text  00000000 
e0000256 l       .text  00000000 
e000025a l       .text  00000000 
e000025a l       .text  00000000 
e0000260 l       .text  00000000 
e0000262 l       .text  00000000 
e0000262 l       .text  00000000 
e0000266 l       .text  00000000 
e0000266 l       .text  00000000 
e000026c l       .text  00000000 
e000026c l       .text  00000000 
e0000270 l       .text  00000000 
e0000276 l       .text  00000000 
e0000276 l       .text  00000000 
e0000278 l       .text  00000000 
e000027c l       .text  00000000 
e0000280 l       .text  00000000 
e0000280 l       .text  00000000 
e0000282 l       .text  00000000 
e0000282 l       .text  00000000 
e0000286 l       .text  00000000 
e000028c l       .text  00000000 
e000028e l       .text  00000000 
e000028e l       .text  00000000 
e0000290 l       .text  00000000 
e0000290 l       .text  00000000 
e0000292 l       .text  00000000 
e0000292 l       .text  00000000 
e0000294 l       .text  00000000 
e0000294 l       .text  00000000 
e0000296 l       .text  00000000 
e000029c l       .text  00000000 
e000029c l       .text  00000000 
e00002b4 l       .text  00000000 
e00002b4 l       .text  00000000 
00000983 l       .debug_loc     00000000 
000009cf l       .debug_loc     00000000 
00000a0f l       .debug_loc     00000000 
00000a22 l       .debug_loc     00000000 
00000a35 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000006f5 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
00000504 l       .debug_str     00000000 
0000071f l       .debug_str     00000000 
00000595 l       .debug_str     00000000 
00000729 l       .debug_str     00000000 
00000168 l       .debug_ranges  00000000 
000005db l       .debug_str     00000000 
00000543 l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
00000180 l       .debug_ranges  00000000 
0000072e l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
000004ca l       .debug_str     00000000 
000000b6 l       .debug_str     00000000 
000000bf l       .debug_str     00000000 
000000cd l       .debug_str     00000000 
000000ee l       .debug_str     00000000 
00000104 l       .debug_str     00000000 
00000120 l       .debug_str     00000000 
00000135 l       .debug_str     00000000 
00000151 l       .debug_str     00000000 
0000016d l       .debug_str     00000000 
00000181 l       .debug_str     00000000 
00000195 l       .debug_str     00000000 
000001aa l       .debug_str     00000000 
000001c3 l       .debug_str     00000000 
000001d7 l       .debug_str     00000000 
000001eb l       .debug_str     00000000 
000001fb l       .debug_str     00000000 
0000020e l       .debug_str     00000000 
00000228 l       .debug_str     00000000 
0000023f l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
00000275 l       .debug_str     00000000 
00000291 l       .debug_str     00000000 
000002a8 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002d6 l       .debug_str     00000000 
000002ee l       .debug_str     00000000 
00000307 l       .debug_str     00000000 
00000320 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000352 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
0000038f l       .debug_str     00000000 
000003a9 l       .debug_str     00000000 
000003c2 l       .debug_str     00000000 
000003de l       .debug_str     00000000 
000003fc l       .debug_str     00000000 
00000418 l       .debug_str     00000000 
00000434 l       .debug_str     00000000 
00000450 l       .debug_str     00000000 
00000467 l       .debug_str     00000000 
00000480 l       .debug_str     00000000 
00000496 l       .debug_str     00000000 
000004b5 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
0000051b l       .debug_str     00000000 
00000528 l       .debug_str     00000000 
0000050f l       .debug_str     00000000 
000005a9 l       .debug_str     00000000 
0000059f l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
0000013c l       .debug_frame   00000000 
e00002b4 l       .text  00000000 
00000000 l    df *ABS*  00000000 pinmux.c
e00002b4 l       .text  00000000 
e00002b4 l       .text  00000000 
e00002b4 l       .text  00000000 
e00002b6 l       .text  00000000 
e00002b6 l       .text  00000000 
e00002b8 l       .text  00000000 
e00002be l       .text  00000000 
e00002be l       .text  00000000 
e00002c0 l       .text  00000000 
e00002c0 l       .text  00000000 
e00002c4 l       .text  00000000 
e00002c4 l       .text  00000000 
e00002c8 l       .text  00000000 
e00002c8 l       .text  00000000 
e00002d8 l       .text  00000000 
e00002d8 l       .text  00000000 
e00002da l       .text  00000000 
e00002da l       .text  00000000 
e00002de l       .text  00000000 
e00002de l       .text  00000000 
e00002e2 l       .text  00000000 
e00002e2 l       .text  00000000 
e00002e8 l       .text  00000000 
e00002e8 l       .text  00000000 
e00002ee l       .text  00000000 
e00002ee l       .text  00000000 
e00002f8 l       .text  00000000 
e00002f8 l       .text  00000000 
e00002fa l       .text  00000000 
e00002fa l       .text  00000000 
e0000300 l       .text  00000000 
e0000300 l       .text  00000000 
e0000308 l       .text  00000000 
e0000308 l       .text  00000000 
e000030c l       .text  00000000 
e000030c l       .text  00000000 
e0000312 l       .text  00000000 
e0000312 l       .text  00000000 
00000a66 l       .debug_loc     00000000 
00000a84 l       .debug_loc     00000000 
00000a97 l       .debug_loc     00000000 
00000ab1 l       .debug_loc     00000000 
00000acb l       .debug_loc     00000000 
00000ae5 l       .debug_loc     00000000 
00000b00 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000734 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
00000763 l       .debug_str     00000000 
00001c15 l       .debug_str     00000000 
00001c08 l       .debug_str     00000000 
00000772 l       .debug_str     00000000 
000016ca l       .debug_str     00000000 
000005be l       .debug_str     00000000 
00001101 l       .debug_str     00000000 
000010df l       .debug_str     00000000 
00000779 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007c9 l       .debug_str     00000000 
000007f1 l       .debug_str     00000000 
00000819 l       .debug_str     00000000 
00000841 l       .debug_str     00000000 
00000869 l       .debug_str     00000000 
00000891 l       .debug_str     00000000 
000008b9 l       .debug_str     00000000 
000008e1 l       .debug_str     00000000 
00000909 l       .debug_str     00000000 
00000932 l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000984 l       .debug_str     00000000 
000009ad l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ff l       .debug_str     00000000 
00000a28 l       .debug_str     00000000 
00000a51 l       .debug_str     00000000 
00000a7a l       .debug_str     00000000 
00000aa3 l       .debug_str     00000000 
00000acc l       .debug_str     00000000 
00000af5 l       .debug_str     00000000 
00000b1e l       .debug_str     00000000 
00000b47 l       .debug_str     00000000 
00000b70 l       .debug_str     00000000 
00000b99 l       .debug_str     00000000 
00000bc2 l       .debug_str     00000000 
00000beb l       .debug_str     00000000 
00000c14 l       .debug_str     00000000 
00000c3d l       .debug_str     00000000 
00000c66 l       .debug_str     00000000 
00000c8f l       .debug_str     00000000 
00000cb5 l       .debug_str     00000000 
00000cdb l       .debug_str     00000000 
00000d01 l       .debug_str     00000000 
00000d27 l       .debug_str     00000000 
00000d4d l       .debug_str     00000000 
00000d73 l       .debug_str     00000000 
00000d9d l       .debug_str     00000000 
00000dc7 l       .debug_str     00000000 
00000df1 l       .debug_str     00000000 
00000e1b l       .debug_str     00000000 
00000e41 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00000e8d l       .debug_str     00000000 
00000eb3 l       .debug_str     00000000 
00000ee1 l       .debug_str     00000000 
00000f0c l       .debug_str     00000000 
00000f37 l       .debug_str     00000000 
00000f62 l       .debug_str     00000000 
00000f97 l       .debug_str     00000000 
00000fc9 l       .debug_str     00000000 
00000ffb l       .debug_str     00000000 
0000102d l       .debug_str     00000000 
0000105f l       .debug_str     00000000 
00001092 l       .debug_str     00000000 
000010bc l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
000016d0 l       .debug_str     00000000 
000016b6 l       .debug_str     00000000 
00001125 l       .debug_str     00000000 
00001149 l       .debug_str     00000000 
0000116c l       .debug_str     00000000 
00001188 l       .debug_str     00000000 
000011a4 l       .debug_str     00000000 
000011c0 l       .debug_str     00000000 
000011dc l       .debug_str     00000000 
000011f8 l       .debug_str     00000000 
00001214 l       .debug_str     00000000 
00001230 l       .debug_str     00000000 
0000124c l       .debug_str     00000000 
00001268 l       .debug_str     00000000 
00001284 l       .debug_str     00000000 
000012a0 l       .debug_str     00000000 
000012bc l       .debug_str     00000000 
000012d8 l       .debug_str     00000000 
000012f4 l       .debug_str     00000000 
00001310 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
00001348 l       .debug_str     00000000 
00001364 l       .debug_str     00000000 
00001380 l       .debug_str     00000000 
0000139d l       .debug_str     00000000 
000013ba l       .debug_str     00000000 
000013d7 l       .debug_str     00000000 
000013f3 l       .debug_str     00000000 
0000140f l       .debug_str     00000000 
0000142b l       .debug_str     00000000 
00001447 l       .debug_str     00000000 
00001463 l       .debug_str     00000000 
0000147f l       .debug_str     00000000 
0000149b l       .debug_str     00000000 
000014b7 l       .debug_str     00000000 
000014d3 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
0000150c l       .debug_str     00000000 
00001529 l       .debug_str     00000000 
00001546 l       .debug_str     00000000 
00001562 l       .debug_str     00000000 
0000157e l       .debug_str     00000000 
0000159a l       .debug_str     00000000 
000015b6 l       .debug_str     00000000 
000015d2 l       .debug_str     00000000 
000015ee l       .debug_str     00000000 
0000160a l       .debug_str     00000000 
00001626 l       .debug_str     00000000 
00001643 l       .debug_str     00000000 
00001660 l       .debug_str     00000000 
0000167d l       .debug_str     00000000 
0000169a l       .debug_str     00000000 
00001bee l       .debug_str     00000000 
00001bd6 l       .debug_str     00000000 
000016ec l       .debug_str     00000000 
00001706 l       .debug_str     00000000 
00001720 l       .debug_str     00000000 
0000173a l       .debug_str     00000000 
00001754 l       .debug_str     00000000 
0000176e l       .debug_str     00000000 
00001788 l       .debug_str     00000000 
000017a2 l       .debug_str     00000000 
000017bc l       .debug_str     00000000 
000017d6 l       .debug_str     00000000 
000017f0 l       .debug_str     00000000 
0000180a l       .debug_str     00000000 
00001824 l       .debug_str     00000000 
0000183e l       .debug_str     00000000 
00001858 l       .debug_str     00000000 
00001872 l       .debug_str     00000000 
0000188c l       .debug_str     00000000 
000018a6 l       .debug_str     00000000 
000018c0 l       .debug_str     00000000 
000018da l       .debug_str     00000000 
000018f5 l       .debug_str     00000000 
00001910 l       .debug_str     00000000 
0000192b l       .debug_str     00000000 
00001945 l       .debug_str     00000000 
0000195f l       .debug_str     00000000 
00001979 l       .debug_str     00000000 
00001993 l       .debug_str     00000000 
000019ad l       .debug_str     00000000 
000019c7 l       .debug_str     00000000 
000019e1 l       .debug_str     00000000 
000019fb l       .debug_str     00000000 
00001a15 l       .debug_str     00000000 
00001a2f l       .debug_str     00000000 
00001a4a l       .debug_str     00000000 
00001a65 l       .debug_str     00000000 
00001a80 l       .debug_str     00000000 
00001a9a l       .debug_str     00000000 
00001ab4 l       .debug_str     00000000 
00001ace l       .debug_str     00000000 
00001ae8 l       .debug_str     00000000 
00001b02 l       .debug_str     00000000 
00001b1c l       .debug_str     00000000 
00001b36 l       .debug_str     00000000 
00001b50 l       .debug_str     00000000 
00001b6b l       .debug_str     00000000 
00001b86 l       .debug_str     00000000 
00001ba1 l       .debug_str     00000000 
00001bbc l       .debug_str     00000000 
00001c24 l       .debug_str     00000000 
00001c33 l       .debug_str     00000000 
00001c42 l       .debug_str     00000000 
00001c4e l       .debug_str     00000000 
00002dc0 l       .debug_str     00000000 
00002db2 l       .debug_str     00000000 
00001c5b l       .debug_str     00000000 
00002d8e l       .debug_str     00000000 
000021f5 l       .debug_str     00000000 
000021d9 l       .debug_str     00000000 
00001c5f l       .debug_str     00000000 
00001c7c l       .debug_str     00000000 
00001c99 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cd3 l       .debug_str     00000000 
00001cf0 l       .debug_str     00000000 
00001d0d l       .debug_str     00000000 
00001d2a l       .debug_str     00000000 
00001d47 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d81 l       .debug_str     00000000 
00001d9e l       .debug_str     00000000 
00001dbb l       .debug_str     00000000 
00001dd8 l       .debug_str     00000000 
00001df5 l       .debug_str     00000000 
00001e12 l       .debug_str     00000000 
00001e2f l       .debug_str     00000000 
00001e4c l       .debug_str     00000000 
00001e69 l       .debug_str     00000000 
00001e86 l       .debug_str     00000000 
00001ea4 l       .debug_str     00000000 
00001ec2 l       .debug_str     00000000 
00001ee0 l       .debug_str     00000000 
00001efd l       .debug_str     00000000 
00001f1a l       .debug_str     00000000 
00001f37 l       .debug_str     00000000 
00001f54 l       .debug_str     00000000 
00001f71 l       .debug_str     00000000 
00001f8e l       .debug_str     00000000 
00001fab l       .debug_str     00000000 
00001fc8 l       .debug_str     00000000 
00001fe5 l       .debug_str     00000000 
00002002 l       .debug_str     00000000 
00002020 l       .debug_str     00000000 
0000203e l       .debug_str     00000000 
0000205c l       .debug_str     00000000 
00002079 l       .debug_str     00000000 
00002096 l       .debug_str     00000000 
000020b3 l       .debug_str     00000000 
000020d0 l       .debug_str     00000000 
000020ed l       .debug_str     00000000 
0000210a l       .debug_str     00000000 
00002127 l       .debug_str     00000000 
00002144 l       .debug_str     00000000 
00002162 l       .debug_str     00000000 
00002180 l       .debug_str     00000000 
0000219e l       .debug_str     00000000 
000021bc l       .debug_str     00000000 
00002d95 l       .debug_str     00000000 
00002d7a l       .debug_str     00000000 
00002213 l       .debug_str     00000000 
00002238 l       .debug_str     00000000 
0000225c l       .debug_str     00000000 
00002282 l       .debug_str     00000000 
000022a4 l       .debug_str     00000000 
000022c6 l       .debug_str     00000000 
000022e8 l       .debug_str     00000000 
0000230a l       .debug_str     00000000 
0000232c l       .debug_str     00000000 
0000234e l       .debug_str     00000000 
00002370 l       .debug_str     00000000 
00002392 l       .debug_str     00000000 
000023b4 l       .debug_str     00000000 
000023d6 l       .debug_str     00000000 
000023f9 l       .debug_str     00000000 
0000241c l       .debug_str     00000000 
0000243f l       .debug_str     00000000 
00002462 l       .debug_str     00000000 
00002485 l       .debug_str     00000000 
000024a8 l       .debug_str     00000000 
000024cb l       .debug_str     00000000 
000024ee l       .debug_str     00000000 
00002511 l       .debug_str     00000000 
00002534 l       .debug_str     00000000 
00002557 l       .debug_str     00000000 
0000257a l       .debug_str     00000000 
0000259d l       .debug_str     00000000 
000025c0 l       .debug_str     00000000 
000025e3 l       .debug_str     00000000 
00002606 l       .debug_str     00000000 
00002629 l       .debug_str     00000000 
0000264c l       .debug_str     00000000 
0000266f l       .debug_str     00000000 
00002692 l       .debug_str     00000000 
000026b5 l       .debug_str     00000000 
000026d8 l       .debug_str     00000000 
000026f8 l       .debug_str     00000000 
00002718 l       .debug_str     00000000 
00002738 l       .debug_str     00000000 
00002758 l       .debug_str     00000000 
00002778 l       .debug_str     00000000 
00002798 l       .debug_str     00000000 
000027bc l       .debug_str     00000000 
000027e0 l       .debug_str     00000000 
00002804 l       .debug_str     00000000 
00002828 l       .debug_str     00000000 
00002848 l       .debug_str     00000000 
00002868 l       .debug_str     00000000 
00002888 l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
000028ce l       .debug_str     00000000 
000028f4 l       .debug_str     00000000 
0000291a l       .debug_str     00000000 
00002940 l       .debug_str     00000000 
00002964 l       .debug_str     00000000 
00002988 l       .debug_str     00000000 
000029ad l       .debug_str     00000000 
000029dc l       .debug_str     00000000 
00002a0b l       .debug_str     00000000 
00002a3a l       .debug_str     00000000 
00002a69 l       .debug_str     00000000 
00002a98 l       .debug_str     00000000 
00002ac7 l       .debug_str     00000000 
00002af6 l       .debug_str     00000000 
00002b25 l       .debug_str     00000000 
00002b54 l       .debug_str     00000000 
00002b77 l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
00002bbd l       .debug_str     00000000 
00002be0 l       .debug_str     00000000 
00002c03 l       .debug_str     00000000 
00002c26 l       .debug_str     00000000 
00002c4b l       .debug_str     00000000 
00002c7b l       .debug_str     00000000 
00002ca8 l       .debug_str     00000000 
00002cd5 l       .debug_str     00000000 
00002d02 l       .debug_str     00000000 
00002d2f l       .debug_str     00000000 
00002d5d l       .debug_str     00000000 
00002df5 l       .debug_str     00000000 
00002dd0 l       .debug_str     00000000 
00002de2 l       .debug_str     00000000 
00002e03 l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00002e12 l       .debug_str     00000000 
00002e1c l       .debug_str     00000000 
00002e20 l       .debug_str     00000000 
0000345a l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
00002e31 l       .debug_str     00000000 
00000695 l       .debug_str     00000000 
00002e42 l       .debug_str     00000000 
00002e4c l       .debug_str     00000000 
00002e52 l       .debug_str     00000000 
00002e5c l       .debug_str     00000000 
000004e2 l       .debug_str     00000000 
00002e6e l       .debug_str     00000000 
00002e63 l       .debug_str     00000000 
00000178 l       .debug_frame   00000000 
e0000312 l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
e0000312 l       .text  00000000 
e0000312 l       .text  00000000 
e0000312 l       .text  00000000 
e0000316 l       .text  00000000 
e0000316 l       .text  00000000 
e000031c l       .text  00000000 
e000031c l       .text  00000000 
e000031e l       .text  00000000 
e000031e l       .text  00000000 
e0000322 l       .text  00000000 
e0000322 l       .text  00000000 
e0000326 l       .text  00000000 
e0000326 l       .text  00000000 
e000032c l       .text  00000000 
e000032c l       .text  00000000 
e000032e l       .text  00000000 
e000032e l       .text  00000000 
e0000330 l       .text  00000000 
e0000330 l       .text  00000000 
e0000334 l       .text  00000000 
e0000334 l       .text  00000000 
e0000336 l       .text  00000000 
e0000336 l       .text  00000000 
e000033a l       .text  00000000 
e000033a l       .text  00000000 
e000033e l       .text  00000000 
e000033e l       .text  00000000 
e0000340 l       .text  00000000 
e0000340 l       .text  00000000 
e0000340 l       .text  00000000 
e0000340 l       .text  00000000 
e0000340 l       .text  00000000 
e0000344 l       .text  00000000 
e0000344 l       .text  00000000 
e0000346 l       .text  00000000 
e0000346 l       .text  00000000 
e0000348 l       .text  00000000 
e0000348 l       .text  00000000 
e000034a l       .text  00000000 
e000034a l       .text  00000000 
e0000352 l       .text  00000000 
e0000352 l       .text  00000000 
e0000354 l       .text  00000000 
e0000354 l       .text  00000000 
e0000356 l       .text  00000000 
e0000356 l       .text  00000000 
e0000358 l       .text  00000000 
e0000358 l       .text  00000000 
e000035a l       .text  00000000 
e000035c l       .text  00000000 
e000035c l       .text  00000000 
00000b1b l       .debug_loc     00000000 
00000b36 l       .debug_loc     00000000 
00000b52 l       .debug_loc     00000000 
00000b79 l       .debug_loc     00000000 
00000b9e l       .debug_loc     00000000 
00000bc5 l       .debug_loc     00000000 
00000be7 l       .debug_loc     00000000 
00000c02 l       .debug_loc     00000000 
00000c1d l       .debug_loc     00000000 
00000c38 l       .debug_loc     00000000 
00000c53 l       .debug_loc     00000000 
00000c6e l       .debug_loc     00000000 
00000c9f l       .debug_loc     00000000 
00000cc5 l       .debug_loc     00000000 
00000ce0 l       .debug_loc     00000000 
00000cfb l       .debug_loc     00000000 
00000d16 l       .debug_loc     00000000 
00000d31 l       .debug_loc     00000000 
00000d4c l       .debug_loc     00000000 
00000d72 l       .debug_loc     00000000 
00000d98 l       .debug_loc     00000000 
00000db3 l       .debug_loc     00000000 
00000dce l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002e7b l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
00000198 l       .debug_ranges  00000000 
000004ca l       .debug_str     00000000 
000000b6 l       .debug_str     00000000 
000000bf l       .debug_str     00000000 
000000cd l       .debug_str     00000000 
000000ee l       .debug_str     00000000 
00000104 l       .debug_str     00000000 
00000120 l       .debug_str     00000000 
00000135 l       .debug_str     00000000 
00000151 l       .debug_str     00000000 
0000016d l       .debug_str     00000000 
00000181 l       .debug_str     00000000 
00000195 l       .debug_str     00000000 
000001aa l       .debug_str     00000000 
000001c3 l       .debug_str     00000000 
000001d7 l       .debug_str     00000000 
000001eb l       .debug_str     00000000 
000001fb l       .debug_str     00000000 
0000020e l       .debug_str     00000000 
00000228 l       .debug_str     00000000 
0000023f l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
00000275 l       .debug_str     00000000 
00000291 l       .debug_str     00000000 
000002a8 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002d6 l       .debug_str     00000000 
000002ee l       .debug_str     00000000 
00000307 l       .debug_str     00000000 
00000320 l       .debug_str     00000000 
00000339 l       .debug_str     00000000 
00000352 l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
0000038f l       .debug_str     00000000 
000003a9 l       .debug_str     00000000 
000003c2 l       .debug_str     00000000 
000003de l       .debug_str     00000000 
000003fc l       .debug_str     00000000 
00000418 l       .debug_str     00000000 
00000434 l       .debug_str     00000000 
00000450 l       .debug_str     00000000 
00000467 l       .debug_str     00000000 
00000480 l       .debug_str     00000000 
00000496 l       .debug_str     00000000 
000004b5 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00002ea8 l       .debug_str     00000000 
00000528 l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00002e20 l       .debug_str     00000000 
0000345a l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
00002eb0 l       .debug_str     00000000 
00000695 l       .debug_str     00000000 
00002ebb l       .debug_str     00000000 
00002ed2 l       .debug_str     00000000 
00002ed5 l       .debug_str     00000000 
00002ef1 l       .debug_str     00000000 
00002ee0 l       .debug_str     00000000 
00002edb l       .debug_str     00000000 
00002f1d l       .debug_str     00000000 
00002f04 l       .debug_str     00000000 
00002f19 l       .debug_str     00000000 
00002f23 l       .debug_str     00000000 
00002f3a l       .debug_str     00000000 
000004ee l       .debug_str     00000000 
00002fa3 l       .debug_str     00000000 
00002f40 l       .debug_str     00000000 
00002f50 l       .debug_str     00000000 
00002f5d l       .debug_str     00000000 
00002f71 l       .debug_str     00000000 
0000051b l       .debug_str     00000000 
00002f7e l       .debug_str     00000000 
00002f83 l       .debug_str     00000000 
00002f8e l       .debug_str     00000000 
00003545 l       .debug_str     00000000 
00002f93 l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
00002f99 l       .debug_str     00000000 
0000347d l       .debug_str     00000000 
0000050f l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
000001a4 l       .debug_frame   00000000 
e0000340 l       .text  00000000 
e000035c l       .text  00000000 
00000000 l    df *ABS*  00000000 otp.c
e000035c l       .text  00000000 
e000035c l       .text  00000000 
e000035c l       .text  00000000 
e0000360 l       .text  00000000 
e0000362 l       .text  00000000 
e0000362 l       .text  00000000 
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
00000de9 l       .debug_loc     00000000 
00000e04 l       .debug_loc     00000000 
00000e1f l       .debug_loc     00000000 
00000e3d l       .debug_loc     00000000 
00000e79 l       .debug_loc     00000000 
00000e94 l       .debug_loc     00000000 
00000eba l       .debug_loc     00000000 
00000ee0 l       .debug_loc     00000000 
00000efe l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002fb5 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000001c0 l       .debug_ranges  00000000 
00002e03 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00002e63 l       .debug_str     00000000 
00003052 l       .debug_str     00000000 
00002fe1 l       .debug_str     00000000 
00003002 l       .debug_str     00000000 
0000305a l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
0000302d l       .debug_str     00000000 
00002f8e l       .debug_str     00000000 
00003065 l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
00003036 l       .debug_str     00000000 
00002ff1 l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003024 l       .debug_str     00000000 
0000300d l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
000001f8 l       .debug_frame   00000000 
e0000364 l       .text  00000000 
00000000 l    df *ABS*  00000000 sec_mmio.c
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
e0000366 l       .text  00000000 
e0000366 l       .text  00000000 
e0000368 l       .text  00000000 
e0000368 l       .text  00000000 
e000036a l       .text  00000000 
e000036a l       .text  00000000 
e000036c l       .text  00000000 
e000036c l       .text  00000000 
e000036c l       .text  00000000 
e000036c l       .text  00000000 
e0000374 l       .text  00000000 
e0000376 l       .text  00000000 
e0000376 l       .text  00000000 
e0000376 l       .text  00000000 
e0000376 l       .text  00000000 
e0000378 l       .text  00000000 
e0000378 l       .text  00000000 
e0000378 l       .text  00000000 
e0000378 l       .text  00000000 
e000037a l       .text  00000000 
e000037a l       .text  00000000 
e000037a l       .text  00000000 
e000037a l       .text  00000000 
e0000382 l       .text  00000000 
e0000382 l       .text  00000000 
e000038a l       .text  00000000 
e000038c l       .text  00000000 
e000038c l       .text  00000000 
e000038e l       .text  00000000 
e0000390 l       .text  00000000 
e0000392 l       .text  00000000 
e0000392 l       .text  00000000 
e000039a l       .text  00000000 
e000039c l       .text  00000000 
e000039c l       .text  00000000 
e000039e l       .text  00000000 
e000039e l       .text  00000000 
e00003a0 l       .text  00000000 
e00003a2 l       .text  00000000 
e00003b0 l       .text  00000000 
e00003b0 l       .text  00000000 
e00003bc l       .text  00000000 
e00003be l       .text  00000000 
e00003be l       .text  00000000 
e00003be l       .text  00000000 
e00003be l       .text  00000000 
e00003be l       .text  00000000 
e00003c0 l       .text  00000000 
e00003ca l       .text  00000000 
e00003cc l       .text  00000000 
e00003cc l       .text  00000000 
e00003d0 l       .text  00000000 
e00003d0 l       .text  00000000 
e00003d8 l       .text  00000000 
e00003d8 l       .text  00000000 
e00003dc l       .text  00000000 
e00003dc l       .text  00000000 
e00003dc l       .text  00000000 
e00003dc l       .text  00000000 
e0000404 l     F .text  0000006e upsert_register
e00003e2 l       .text  00000000 
e00003e2 l       .text  00000000 
e00003e4 l       .text  00000000 
e00003e4 l       .text  00000000 
e00003f4 l       .text  00000000 
e00003fa l       .text  00000000 
e00003fc l       .text  00000000 
e00003fe l       .text  00000000 
e0000404 l       .text  00000000 
e0000404 l       .text  00000000 
e0000404 l       .text  00000000 
e0000404 l       .text  00000000 
e0000404 l       .text  00000000 
e0000404 l       .text  00000000 
e0000410 l       .text  00000000 
e0000410 l       .text  00000000 
e0000412 l       .text  00000000 
e0000412 l       .text  00000000 
e0000414 l       .text  00000000 
e0000414 l       .text  00000000 
e0000418 l       .text  00000000 
e0000418 l       .text  00000000 
e000041c l       .text  00000000 
e000041c l       .text  00000000 
e0000424 l       .text  00000000 
e0000428 l       .text  00000000 
e000042a l       .text  00000000 
e000042a l       .text  00000000 
e000042c l       .text  00000000 
e000042c l       .text  00000000 
e0000434 l       .text  00000000 
e0000434 l       .text  00000000 
e0000436 l       .text  00000000 
e0000436 l       .text  00000000 
e0000438 l       .text  00000000 
e0000438 l       .text  00000000 
e000043c l       .text  00000000 
e000043c l       .text  00000000 
e000043e l       .text  00000000 
e000043e l       .text  00000000 
e0000442 l       .text  00000000 
e0000442 l       .text  00000000 
e0000446 l       .text  00000000 
e0000446 l       .text  00000000 
e0000450 l       .text  00000000 
e0000454 l       .text  00000000 
e0000456 l       .text  00000000 
e000045a l       .text  00000000 
e0000460 l       .text  00000000 
e0000464 l       .text  00000000 
e0000470 l       .text  00000000 
e0000472 l       .text  00000000 
e0000472 l       .text  00000000 
00000f1a l       .debug_loc     00000000 
00000f41 l       .debug_loc     00000000 
00000f68 l       .debug_loc     00000000 
00000f8f l       .debug_loc     00000000 
00000fca l       .debug_loc     00000000 
00000ff9 l       .debug_loc     00000000 
00001014 l       .debug_loc     00000000 
0000103a l       .debug_loc     00000000 
00001055 l       .debug_loc     00000000 
00001070 l       .debug_loc     00000000 
0000108b l       .debug_loc     00000000 
000010c8 l       .debug_loc     00000000 
000010ef l       .debug_loc     00000000 
0000110a l       .debug_loc     00000000 
00001130 l       .debug_loc     00000000 
00001156 l       .debug_loc     00000000 
0000117c l       .debug_loc     00000000 
00001197 l       .debug_loc     00000000 
000011b2 l       .debug_loc     00000000 
000011d8 l       .debug_loc     00000000 
000011f3 l       .debug_loc     00000000 
0000120e l       .debug_loc     00000000 
00001229 l       .debug_loc     00000000 
00001266 l       .debug_loc     00000000 
0000128d l       .debug_loc     00000000 
000012a8 l       .debug_loc     00000000 
000012c3 l       .debug_loc     00000000 
000012de l       .debug_loc     00000000 
000012f9 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000030ef l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000002a8 l       .debug_ranges  00000000 
000030ad l       .debug_str     00000000 
000030e0 l       .debug_str     00000000 
000030ba l       .debug_str     00000000 
000030ce l       .debug_str     00000000 
000030c5 l       .debug_str     00000000 
0000320d l       .debug_str     00000000 
000031c2 l       .debug_str     00000000 
000030da l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
0000311d l       .debug_str     00000000 
0000312d l       .debug_str     00000000 
0000313d l       .debug_str     00000000 
000031b3 l       .debug_str     00000000 
0000314c l       .debug_str     00000000 
000031ee l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
000031f2 l       .debug_str     00000000 
00000278 l       .debug_ranges  00000000 
00000290 l       .debug_ranges  00000000 
000031f9 l       .debug_str     00000000 
00003152 l       .debug_str     00000000 
00003024 l       .debug_str     00000000 
0000300d l       .debug_str     00000000 
00002e12 l       .debug_str     00000000 
00002e1c l       .debug_str     00000000 
000004d4 l       .debug_str     00000000 
000006a5 l       .debug_str     00000000 
000001e8 l       .debug_ranges  00000000 
00000200 l       .debug_ranges  00000000 
00000218 l       .debug_ranges  00000000 
00000230 l       .debug_ranges  00000000 
00003170 l       .debug_str     00000000 
00000248 l       .debug_ranges  00000000 
00002f40 l       .debug_str     00000000 
0000345a l       .debug_str     00000000 
00003166 l       .debug_str     00000000 
00002fe1 l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
000031e1 l       .debug_str     00000000 
00003189 l       .debug_str     00000000 
00000260 l       .debug_ranges  00000000 
00002e20 l       .debug_str     00000000 
00002ff1 l       .debug_str     00000000 
00003199 l       .debug_str     00000000 
000031c9 l       .debug_str     00000000 
00003204 l       .debug_str     00000000 
0000338b l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
00000264 l       .debug_frame   00000000 
e00003be l       .text  00000000 
e0000404 l       .text  00000000 
e0000472 l       .text  00000000 
00000000 l    df *ABS*  00000000 print.c
e0000472 l     F .text  00000004 base_dev_null
e0002e08 l     O .bss   00000008 base_stdout
e0000472 l       .text  00000000 
e0000472 l       .text  00000000 
e0000472 l       .text  00000000 
e0000474 l       .text  00000000 
e0000474 l       .text  00000000 
e0000476 l       .text  00000000 
e0000476 l       .text  00000000 
e0000476 l       .text  00000000 
e0000476 l       .text  00000000 
e0000476 l       .text  00000000 
e0000478 l       .text  00000000 
e000047a l       .text  00000000 
e0000488 l       .text  00000000 
e0000490 l       .text  00000000 
e0000490 l       .text  00000000 
e0000496 l       .text  00000000 
e0000496 l       .text  00000000 
e0000498 l       .text  00000000 
e0000498 l       .text  00000000 
e000049a l       .text  00000000 
e000049a l       .text  00000000 
e000049e l       .text  00000000 
e00004a0 l       .text  00000000 
e00004a2 l       .text  00000000 
e00004a2 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004aa l       .text  00000000 
e00004c4 l       .text  00000000 
e00004c6 l       .text  00000000 
e00004c8 l       .text  00000000 
e00004ca l       .text  00000000 
e00004cc l       .text  00000000 
e00004ce l       .text  00000000 
e00004d0 l       .text  00000000 
e00004d8 l       .text  00000000 
e00004d8 l       .text  00000000 
e00004da l       .text  00000000 
e00004da l       .text  00000000 
e00004de l       .text  00000000 
e00004e2 l       .text  00000000 
e00004f6 l       .text  00000000 
e00004f6 l       .text  00000000 
e0000500 l       .text  00000000 
e0000504 l       .text  00000000 
e0000508 l       .text  00000000 
e000050a l       .text  00000000 
e000050c l       .text  00000000 
e000050c l       .text  00000000 
e000050e l       .text  00000000 
e0000510 l       .text  00000000 
e0000516 l       .text  00000000 
e0000516 l       .text  00000000 
e0000518 l       .text  00000000 
e0000518 l       .text  00000000 
e000051c l       .text  00000000 
e000051c l       .text  00000000 
e0000528 l       .text  00000000 
e000052c l       .text  00000000 
e000052c l       .text  00000000 
e0000538 l       .text  00000000 
e0000538 l       .text  00000000 
e0000540 l       .text  00000000 
e0000540 l       .text  00000000 
e0000544 l       .text  00000000 
e0000544 l       .text  00000000 
e0000552 l       .text  00000000 
e0000552 l       .text  00000000 
e0000556 l       .text  00000000 
e000055e l       .text  00000000 
e0000562 l       .text  00000000 
e0000562 l       .text  00000000 
e0000566 l       .text  00000000 
e000056c l       .text  00000000 
e0000570 l       .text  00000000 
e0000572 l       .text  00000000 
e0000576 l       .text  00000000 
e0000576 l       .text  00000000 
e000057a l       .text  00000000 
e0000580 l       .text  00000000 
e0000580 l       .text  00000000 
e0000584 l       .text  00000000 
e0000598 l       .text  00000000 
e0000598 l       .text  00000000 
e000059a l       .text  00000000 
e00005a0 l       .text  00000000 
e00005a4 l       .text  00000000 
e00005a8 l       .text  00000000 
e00005a8 l       .text  00000000 
e00005b0 l       .text  00000000 
e00005b2 l       .text  00000000 
e00005c0 l       .text  00000000 
e00005c0 l       .text  00000000 
e00005c4 l       .text  00000000 
e00005d0 l       .text  00000000 
e00005d0 l       .text  00000000 
e00005d4 l       .text  00000000 
e00005d4 l       .text  00000000 
e00005e2 l       .text  00000000 
e00005e2 l       .text  00000000 
e00005e4 l       .text  00000000 
e00005e8 l       .text  00000000 
e00005e8 l       .text  00000000 
e00005ec l       .text  00000000 
e0000c52 l     O .rodata        00000010 kDigitsLow
e00005fe l       .text  00000000 
e00005fe l       .text  00000000 
e0000606 l       .text  00000000 
e000060e l       .text  00000000 
e000060e l       .text  00000000 
e0000618 l       .text  00000000 
e0000618 l       .text  00000000 
e000061c l       .text  00000000 
e000061c l       .text  00000000 
e0000626 l       .text  00000000 
e0000626 l       .text  00000000 
e000062e l       .text  00000000 
e000062e l       .text  00000000 
e0000632 l       .text  00000000 
e0000c7f l     O .rodata        00000010 kDigitsHigh
e000063c l       .text  00000000 
e000063c l       .text  00000000 
e0000646 l       .text  00000000 
e0000646 l       .text  00000000 
e000064a l       .text  00000000 
e0000654 l       .text  00000000 
e0000654 l       .text  00000000 
e0000658 l       .text  00000000 
e0000662 l       .text  00000000 
e0000662 l       .text  00000000 
e000066a l       .text  00000000 
e000066a l       .text  00000000 
e000066e l       .text  00000000 
e0000678 l       .text  00000000 
e0000678 l       .text  00000000 
e0000682 l       .text  00000000 
e0000686 l       .text  00000000 
e000068a l       .text  00000000 
e000068a l       .text  00000000 
e0000696 l       .text  00000000 
e0000696 l       .text  00000000 
e000069a l       .text  00000000 
e00006a4 l       .text  00000000 
e00006a8 l       .text  00000000 
e00006a8 l       .text  00000000 
e00006aa l       .text  00000000 
e00006aa l       .text  00000000 
e00006ae l       .text  00000000 
e00006ae l       .text  00000000 
e00006b2 l       .text  00000000 
e00006bc l       .text  00000000 
e00006bc l       .text  00000000 
e00006c0 l       .text  00000000 
e00006cc l       .text  00000000 
e00006cc l       .text  00000000 
e00006d0 l       .text  00000000 
e00006d0 l       .text  00000000 
e00006de l       .text  00000000 
e00006de l       .text  00000000 
e00006e8 l       .text  00000000 
e00006e8 l       .text  00000000 
e00006ec l       .text  00000000 
e00006ec l       .text  00000000 
e0000a1a l     F .text  0000007e write_digits
e0000702 l       .text  00000000 
e0000702 l       .text  00000000 
e0000708 l       .text  00000000 
e0000708 l       .text  00000000 
e0000712 l       .text  00000000 
e0000712 l       .text  00000000 
e0000714 l       .text  00000000 
e000071e l       .text  00000000 
e000071e l       .text  00000000 
e0000728 l       .text  00000000 
e0000728 l       .text  00000000 
e000072a l       .text  00000000 
e000072a l       .text  00000000 
e000072c l       .text  00000000 
e000072c l       .text  00000000 
e0000730 l       .text  00000000 
e0000730 l       .text  00000000 
e0000734 l       .text  00000000 
e0000736 l       .text  00000000 
e000073a l       .text  00000000 
e000073a l       .text  00000000 
e000073e l       .text  00000000 
e000073e l       .text  00000000 
e000074a l       .text  00000000 
e000074a l       .text  00000000 
e000074c l       .text  00000000 
e000074c l       .text  00000000 
e000074e l       .text  00000000 
e000074e l       .text  00000000 
e0000756 l       .text  00000000 
e0000756 l       .text  00000000 
e000075a l       .text  00000000 
e000075a l       .text  00000000 
e0000768 l       .text  00000000 
e0000768 l       .text  00000000 
e000076a l       .text  00000000 
e0000778 l       .text  00000000 
e0000778 l       .text  00000000 
e000077c l       .text  00000000 
e000077c l       .text  00000000 
e0000780 l       .text  00000000 
e0000780 l       .text  00000000 
e000078e l       .text  00000000 
e000078e l       .text  00000000 
e0000792 l       .text  00000000 
e0000792 l       .text  00000000 
e000079a l       .text  00000000 
e000079a l       .text  00000000 
e000079c l       .text  00000000 
e000079c l       .text  00000000 
e000079e l       .text  00000000 
e000079e l       .text  00000000 
e00007b2 l       .text  00000000 
e00007b2 l       .text  00000000 
e00007b4 l       .text  00000000 
e00007c2 l       .text  00000000 
e00007c2 l       .text  00000000 
e00007c4 l       .text  00000000 
e00007c4 l       .text  00000000 
e00007c6 l       .text  00000000 
e00007ce l       .text  00000000 
e00007d2 l       .text  00000000 
e00007d4 l       .text  00000000 
e00007de l       .text  00000000 
e00007de l       .text  00000000 
e00007e2 l       .text  00000000 
e00007ec l       .text  00000000 
e00007ec l       .text  00000000 
e00007f0 l       .text  00000000 
e00007fc l       .text  00000000 
e00007fc l       .text  00000000 
e0000800 l       .text  00000000 
e0000800 l       .text  00000000 
e000080a l       .text  00000000 
e000080a l       .text  00000000 
e0000812 l       .text  00000000 
e0000812 l       .text  00000000 
e0000816 l       .text  00000000 
e000081e l       .text  00000000 
e000081e l       .text  00000000 
e0000828 l       .text  00000000 
e0000828 l       .text  00000000 
e0000832 l       .text  00000000 
e0000832 l       .text  00000000 
e0000836 l       .text  00000000 
e000083e l       .text  00000000 
e000083e l       .text  00000000 
e0000848 l       .text  00000000 
e000084a l       .text  00000000 
e000084a l       .text  00000000 
e000084e l       .text  00000000 
e0000858 l       .text  00000000 
e0000858 l       .text  00000000 
e0000860 l       .text  00000000 
e0000860 l       .text  00000000 
e0000864 l       .text  00000000 
e000086c l       .text  00000000 
e000086c l       .text  00000000 
e0000936 l     F .text  000000e4 hex_dump
e0000876 l       .text  00000000 
e0000878 l       .text  00000000 
e0000c8f l     O .rodata        0000000f kUnknownSpec
e0000878 l       .text  00000000 
e0000882 l       .text  00000000 
e0000882 l       .text  00000000 
e0000886 l       .text  00000000 
e0000888 l       .text  00000000 
e0000888 l       .text  00000000 
e000088c l       .text  00000000 
e0000892 l       .text  00000000 
e0000892 l       .text  00000000 
e0000896 l       .text  00000000 
e00008a2 l       .text  00000000 
e00008a2 l       .text  00000000 
e00008a4 l       .text  00000000 
e00008a4 l       .text  00000000 
e00008b8 l       .text  00000000 
e00008b8 l       .text  00000000 
e00008bc l       .text  00000000 
e00008ca l       .text  00000000 
e00008ca l       .text  00000000 
e00008ce l       .text  00000000 
e00008ce l       .text  00000000 
e00008d4 l       .text  00000000 
e00008d4 l       .text  00000000 
e00008d6 l       .text  00000000 
e00008d6 l       .text  00000000 
e00008d8 l       .text  00000000 
e00008d8 l       .text  00000000 
e00008e0 l       .text  00000000 
e00008e2 l       .text  00000000 
e00008e4 l       .text  00000000 
e00008ea l       .text  00000000 
e00008ea l       .text  00000000 
e00008f6 l       .text  00000000 
e0000c62 l     O .rodata        00000011 kErrorNul
e00008f6 l       .text  00000000 
e0000900 l       .text  00000000 
e0000900 l       .text  00000000 
e0000904 l       .text  00000000 
e0000908 l       .text  00000000 
e000090a l       .text  00000000 
e000090a l       .text  00000000 
e000091a l       .text  00000000 
e000091e l       .text  00000000 
e000092a l       .text  00000000 
e0000c73 l     O .rodata        0000000c kErrorTooWide
e000092a l       .text  00000000 
e0000936 l       .text  00000000 
e0000936 l       .text  00000000 
e0000936 l       .text  00000000 
e0000936 l       .text  00000000 
e0000936 l       .text  00000000 
e0000936 l       .text  00000000 
e0000938 l       .text  00000000 
e0000950 l       .text  00000000 
e0000952 l       .text  00000000 
e0000954 l       .text  00000000 
e0000956 l       .text  00000000 
e0000958 l       .text  00000000 
e000095c l       .text  00000000 
e000095c l       .text  00000000 
e0000960 l       .text  00000000 
e0000964 l       .text  00000000 
e0000964 l       .text  00000000 
e000096e l       .text  00000000 
e000096e l       .text  00000000 
e0000970 l       .text  00000000 
e0000972 l       .text  00000000 
e0000978 l       .text  00000000 
e0000978 l       .text  00000000 
e000097c l       .text  00000000 
e0000980 l       .text  00000000 
e0000980 l       .text  00000000 
e0000988 l       .text  00000000 
e0000988 l       .text  00000000 
e000098a l       .text  00000000 
e000098c l       .text  00000000 
e000098c l       .text  00000000 
e000098e l       .text  00000000 
e000098e l       .text  00000000 
e0000994 l       .text  00000000 
e0000994 l       .text  00000000 
e0000996 l       .text  00000000 
e0000996 l       .text  00000000 
e000099a l       .text  00000000 
e000099e l       .text  00000000 
e00009a4 l       .text  00000000 
e00009a4 l       .text  00000000 
e00009aa l       .text  00000000 
e00009b2 l       .text  00000000 
e00009b2 l       .text  00000000 
e00009b4 l       .text  00000000 
e00009b8 l       .text  00000000 
e00009bc l       .text  00000000 
e00009c2 l       .text  00000000 
e00009c6 l       .text  00000000 
e00009ca l       .text  00000000 
e00009cc l       .text  00000000 
e00009d2 l       .text  00000000 
e00009d4 l       .text  00000000 
e00009dc l       .text  00000000 
e00009e2 l       .text  00000000 
e00009e6 l       .text  00000000 
e00009e6 l       .text  00000000 
e00009e8 l       .text  00000000 
e00009ea l       .text  00000000 
e00009ea l       .text  00000000 
e00009ec l       .text  00000000 
e00009ee l       .text  00000000 
e00009f2 l       .text  00000000 
e00009f2 l       .text  00000000 
e00009f4 l       .text  00000000 
e00009fa l       .text  00000000 
e00009fa l       .text  00000000 
e00009fc l       .text  00000000 
e0000a04 l       .text  00000000 
e0000a06 l       .text  00000000 
e0000a0a l       .text  00000000 
e0000a0c l       .text  00000000 
e0000a0e l       .text  00000000 
e0000a10 l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a1c l       .text  00000000 
e0000a1e l       .text  00000000 
e0000a20 l       .text  00000000 
e0000a20 l       .text  00000000 
e0000a22 l       .text  00000000 
e0000a24 l       .text  00000000 
e0000a28 l       .text  00000000 
e0000a28 l       .text  00000000 
e0000a2a l       .text  00000000 
e0000a2a l       .text  00000000 
e0000a36 l       .text  00000000 
e0000a36 l       .text  00000000 
e0000a38 l       .text  00000000 
e0000a3c l       .text  00000000 
e0000a44 l       .text  00000000 
e0000a44 l       .text  00000000 
e0000a46 l       .text  00000000 
e0000a4a l       .text  00000000 
e0000a4e l       .text  00000000 
e0000a4e l       .text  00000000 
e0000a50 l       .text  00000000 
e0000a50 l       .text  00000000 
e0000a54 l       .text  00000000 
e0000a5a l       .text  00000000 
e0000a5a l       .text  00000000 
e0000a5c l       .text  00000000 
e0000a5e l       .text  00000000 
e0000a60 l       .text  00000000 
e0000a64 l       .text  00000000 
e0000a68 l       .text  00000000 
e0000a6c l       .text  00000000 
e0000a6c l       .text  00000000 
e0000a76 l       .text  00000000 
e0000a7a l       .text  00000000 
e0000a7c l       .text  00000000 
e0000a80 l       .text  00000000 
e0000a84 l       .text  00000000 
e0000a86 l       .text  00000000 
e0000a88 l       .text  00000000 
e0000a8a l       .text  00000000 
e0000a8a l       .text  00000000 
e0000a90 l       .text  00000000 
e0000a92 l       .text  00000000 
e0000a92 l       .text  00000000 
e0000a98 l       .text  00000000 
e0000a98 l       .text  00000000 
0000131f l       .debug_loc     00000000 
0000134b l       .debug_loc     00000000 
00001366 l       .debug_loc     00000000 
0000138c l       .debug_loc     00000000 
000013b8 l       .debug_loc     00000000 
000013e9 l       .debug_loc     00000000 
0000141a l       .debug_loc     00000000 
00001456 l       .debug_loc     00000000 
00001487 l       .debug_loc     00000000 
000014ae l       .debug_loc     00000000 
000014df l       .debug_loc     00000000 
000014fa l       .debug_loc     00000000 
00001516 l       .debug_loc     00000000 
00001531 l       .debug_loc     00000000 
00001557 l       .debug_loc     00000000 
0000157d l       .debug_loc     00000000 
000015b9 l       .debug_loc     00000000 
000016c4 l       .debug_loc     00000000 
0000181e l       .debug_loc     00000000 
0000191e l       .debug_loc     00000000 
00001a29 l       .debug_loc     00000000 
00001a49 l       .debug_loc     00000000 
00001a6f l       .debug_loc     00000000 
00001a9f l       .debug_loc     00000000 
00001cd7 l       .debug_loc     00000000 
00001cf3 l       .debug_loc     00000000 
00001d0e l       .debug_loc     00000000 
00001e83 l       .debug_loc     00000000 
00001fd3 l       .debug_loc     00000000 
000020e7 l       .debug_loc     00000000 
0000210d l       .debug_loc     00000000 
00002128 l       .debug_loc     00000000 
00002143 l       .debug_loc     00000000 
0000215e l       .debug_loc     00000000 
00002179 l       .debug_loc     00000000 
00002194 l       .debug_loc     00000000 
000021b0 l       .debug_loc     00000000 
000021cb l       .debug_loc     00000000 
000021e6 l       .debug_loc     00000000 
00002201 l       .debug_loc     00000000 
0000221c l       .debug_loc     00000000 
0000224e l       .debug_loc     00000000 
00002281 l       .debug_loc     00000000 
0000229c l       .debug_loc     00000000 
000022ef l       .debug_loc     00000000 
00002322 l       .debug_loc     00000000 
0000233d l       .debug_loc     00000000 
00002358 l       .debug_loc     00000000 
00002373 l       .debug_loc     00000000 
0000238e l       .debug_loc     00000000 
000023a9 l       .debug_loc     00000000 
000023c4 l       .debug_loc     00000000 
000023df l       .debug_loc     00000000 
000023fa l       .debug_loc     00000000 
00002415 l       .debug_loc     00000000 
00002430 l       .debug_loc     00000000 
0000244b l       .debug_loc     00000000 
00002467 l       .debug_loc     00000000 
00002486 l       .debug_loc     00000000 
000024a1 l       .debug_loc     00000000 
000024d2 l       .debug_loc     00000000 
000024f8 l       .debug_loc     00000000 
00002529 l       .debug_loc     00000000 
0000255a l       .debug_loc     00000000 
00002575 l       .debug_loc     00000000 
00002590 l       .debug_loc     00000000 
000025ab l       .debug_loc     00000000 
000025dc l       .debug_loc     00000000 
000025f7 l       .debug_loc     00000000 
00002612 l       .debug_loc     00000000 
0000262e l       .debug_loc     00000000 
00002654 l       .debug_loc     00000000 
00002685 l       .debug_loc     00000000 
000026a0 l       .debug_loc     00000000 
000026bb l       .debug_loc     00000000 
000026e1 l       .debug_loc     00000000 
00002707 l       .debug_loc     00000000 
00002722 l       .debug_loc     00000000 
0000273d l       .debug_loc     00000000 
00002758 l       .debug_loc     00000000 
00002773 l       .debug_loc     00000000 
00002792 l       .debug_loc     00000000 
000027ad l       .debug_loc     00000000 
000027c8 l       .debug_loc     00000000 
000027e4 l       .debug_loc     00000000 
000027ff l       .debug_loc     00000000 
0000281a l       .debug_loc     00000000 
00002839 l       .debug_loc     00000000 
0000285f l       .debug_loc     00000000 
00002890 l       .debug_loc     00000000 
000028e8 l       .debug_loc     00000000 
00002932 l       .debug_loc     00000000 
00002984 l       .debug_loc     00000000 
000029c1 l       .debug_loc     00000000 
000029fd l       .debug_loc     00000000 
00002a67 l       .debug_loc     00000000 
00002ab0 l       .debug_loc     00000000 
00002b1a l       .debug_loc     00000000 
00002b40 l       .debug_loc     00000000 
00002b5b l       .debug_loc     00000000 
00002b76 l       .debug_loc     00000000 
00002b9d l       .debug_loc     00000000 
00002be5 l       .debug_loc     00000000 
00002c0b l       .debug_loc     00000000 
00002c31 l       .debug_loc     00000000 
00002c57 l       .debug_loc     00000000 
00002c72 l       .debug_loc     00000000 
00002ca2 l       .debug_loc     00000000 
00002cc8 l       .debug_loc     00000000 
00002cfa l       .debug_loc     00000000 
00002d38 l       .debug_loc     00000000 
00002d67 l       .debug_loc     00000000 
00002d82 l       .debug_loc     00000000 
00002db5 l       .debug_loc     00000000 
00002dd0 l       .debug_loc     00000000 
00002e0c l       .debug_loc     00000000 
00002e32 l       .debug_loc     00000000 
00002e4d l       .debug_loc     00000000 
00002e68 l       .debug_loc     00000000 
00002e83 l       .debug_loc     00000000 
00002ed9 l       .debug_loc     00000000 
00002f08 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003219 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
00000428 l       .debug_ranges  00000000 
00003237 l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
00003256 l       .debug_str     00000000 
0000326e l       .debug_str     00000000 
00003262 l       .debug_str     00000000 
00002f8e l       .debug_str     00000000 
0000362e l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
0000327c l       .debug_str     00000000 
00003286 l       .debug_str     00000000 
00003686 l       .debug_str     00000000 
00003294 l       .debug_str     00000000 
000021f1 l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
000005b8 l       .debug_str     00000000 
0000351b l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
00003708 l       .debug_str     00000000 
000036b3 l       .debug_str     00000000 
00003545 l       .debug_str     00000000 
0000371c l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
0000329e l       .debug_str     00000000 
000032aa l       .debug_str     00000000 
000032b7 l       .debug_str     00000000 
00003306 l       .debug_str     00000000 
000032f5 l       .debug_str     00000000 
000032ce l       .debug_str     00000000 
000032dd l       .debug_str     00000000 
000032ec l       .debug_str     00000000 
00003319 l       .debug_str     00000000 
00003387 l       .debug_str     00000000 
00003324 l       .debug_str     00000000 
0000332b l       .debug_str     00000000 
00003335 l       .debug_str     00000000 
00003340 l       .debug_str     00000000 
0000334b l       .debug_str     00000000 
0000335b l       .debug_str     00000000 
0000336a l       .debug_str     00000000 
00003379 l       .debug_str     00000000 
00003392 l       .debug_str     00000000 
0000339b l       .debug_str     00000000 
000033a6 l       .debug_str     00000000 
000033ae l       .debug_str     00000000 
000033ba l       .debug_str     00000000 
000033c6 l       .debug_str     00000000 
000033d3 l       .debug_str     00000000 
000033e3 l       .debug_str     00000000 
000033f4 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0000340a l       .debug_str     00000000 
00003414 l       .debug_str     00000000 
0000341e l       .debug_str     00000000 
00003429 l       .debug_str     00000000 
00003433 l       .debug_str     00000000 
0000343e l       .debug_str     00000000 
0000344c l       .debug_str     00000000 
00002ea8 l       .debug_str     00000000 
00000528 l       .debug_str     00000000 
00003482 l       .debug_str     00000000 
00003479 l       .debug_str     00000000 
00003455 l       .debug_str     00000000 
0000346b l       .debug_str     00000000 
0000345f l       .debug_str     00000000 
00003498 l       .debug_str     00000000 
000006e0 l       .debug_str     00000000 
0000348d l       .debug_str     00000000 
00002e0a l       .debug_str     00000000 
000035dc l       .debug_str     00000000 
000034ac l       .debug_str     00000000 
000035ea l       .debug_str     00000000 
0000347d l       .debug_str     00000000 
000035fb l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
000034bc l       .debug_str     00000000 
000034d6 l       .debug_str     00000000 
00000595 l       .debug_str     00000000 
00000729 l       .debug_str     00000000 
000005a9 l       .debug_str     00000000 
0000059f l       .debug_str     00000000 
000004f8 l       .debug_str     00000000 
000002f0 l       .debug_ranges  00000000 
00003609 l       .debug_str     00000000 
00003693 l       .debug_str     00000000 
000036ce l       .debug_str     00000000 
000003d0 l       .debug_ranges  00000000 
0000355f l       .debug_str     00000000 
00000308 l       .debug_ranges  00000000 
00000330 l       .debug_ranges  00000000 
00000350 l       .debug_ranges  00000000 
00000368 l       .debug_ranges  00000000 
000003a0 l       .debug_ranges  00000000 
00000388 l       .debug_ranges  00000000 
000003b8 l       .debug_ranges  00000000 
000034e3 l       .debug_str     00000000 
000034f9 l       .debug_str     00000000 
000000a5 l       .debug_str     00000000 
00002f3a l       .debug_str     00000000 
00003502 l       .debug_str     00000000 
00003540 l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
0000350a l       .debug_str     00000000 
00003ad1 l       .debug_str     00000000 
00003523 l       .debug_str     00000000 
00003549 l       .debug_str     00000000 
0000355b l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003564 l       .debug_str     00000000 
00003892 l       .debug_str     00000000 
00003574 l       .debug_str     00000000 
0000356e l       .debug_str     00000000 
0000357b l       .debug_str     00000000 
00003583 l       .debug_str     00000000 
00003587 l       .debug_str     00000000 
0000358d l       .debug_str     00000000 
00000613 l       .debug_str     00000000 
000038b0 l       .debug_str     00000000 
00003591 l       .debug_str     00000000 
0000367d l       .debug_str     00000000 
00003937 l       .debug_str     00000000 
000036fd l       .debug_str     00000000 
000036f4 l       .debug_str     00000000 
0000370f l       .debug_str     00000000 
00003718 l       .debug_str     00000000 
00003617 l       .debug_str     00000000 
00003625 l       .debug_str     00000000 
0000369d l       .debug_str     00000000 
000035a0 l       .debug_str     00000000 
00003633 l       .debug_str     00000000 
000035a7 l       .debug_str     00000000 
00003302 l       .debug_str     00000000 
00003640 l       .debug_str     00000000 
0000366a l       .debug_str     00000000 
000036ba l       .debug_str     00000000 
000032e7 l       .debug_str     00000000 
00000410 l       .debug_ranges  00000000 
000036ad l       .debug_str     00000000 
000036c9 l       .debug_str     00000000 
000036dc l       .debug_str     00000000 
000032d8 l       .debug_str     00000000 
000003f0 l       .debug_ranges  00000000 
000036a6 l       .debug_str     00000000 
000036eb l       .debug_str     00000000 
00002f7e l       .debug_str     00000000 
000035b9 l       .debug_str     00000000 
000035cd l       .debug_str     00000000 
0000364d l       .debug_str     00000000 
0000365c l       .debug_str     00000000 
000035d5 l       .debug_str     00000000 
00000320 l       .debug_frame   00000000 
e0000476 l       .text  00000000 
e00004a8 l       .text  00000000 
e0000936 l       .text  00000000 
e0000a1a l       .text  00000000 
e0000a98 l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
e0000a98 l       .text  00000000 
e0000a98 l       .text  00000000 
e0000a98 l       .text  00000000 
e0000a98 l       .text  00000000 
e0000a9c l       .text  00000000 
e0000aa4 l       .text  00000000 
e0000aa4 l       .text  00000000 
e0000aa8 l       .text  00000000 
e0000aa8 l       .text  00000000 
e0000ab4 l       .text  00000000 
e0000ab6 l       .text  00000000 
e0000ab6 l       .text  00000000 
e0000aba l       .text  00000000 
e0000ac6 l       .text  00000000 
e0000ac8 l       .text  00000000 
e0000acc l       .text  00000000 
e0000ace l       .text  00000000 
e0000ace l       .text  00000000 
e0000ad2 l       .text  00000000 
e0000ad2 l       .text  00000000 
e0000ad6 l       .text  00000000 
e0000ad6 l       .text  00000000 
e0000ad8 l       .text  00000000 
e0000ad8 l       .text  00000000 
e0000adc l       .text  00000000 
e0000adc l       .text  00000000 
e0000ade l       .text  00000000 
e0000ae2 l       .text  00000000 
e0000ae2 l       .text  00000000 
e0000ae6 l       .text  00000000 
e0000aea l       .text  00000000 
e0000af0 l       .text  00000000 
e0000af0 l       .text  00000000 
e0000af4 l       .text  00000000 
e0000af6 l       .text  00000000 
e0000af6 l       .text  00000000 
e0000afc l       .text  00000000 
e0000afc l       .text  00000000 
e0000b02 l       .text  00000000 
e0000b02 l       .text  00000000 
e0000b04 l       .text  00000000 
e0000b04 l       .text  00000000 
e0000b0a l       .text  00000000 
e0000b0a l       .text  00000000 
00002f23 l       .debug_loc     00000000 
00002f3e l       .debug_loc     00000000 
00002f6f l       .debug_loc     00000000 
00002f95 l       .debug_loc     00000000 
00002fbb l       .debug_loc     00000000 
00002fd6 l       .debug_loc     00000000 
00002ff8 l       .debug_loc     00000000 
0000301f l       .debug_loc     00000000 
00003046 l       .debug_loc     00000000 
0000306a l       .debug_loc     00000000 
0000309b l       .debug_loc     00000000 
000030b6 l       .debug_loc     00000000 
000030e7 l       .debug_loc     00000000 
00003141 l       .debug_loc     00000000 
0000317d l       .debug_loc     00000000 
000031a1 l       .debug_loc     00000000 
000031c6 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003722 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000004d8 l       .debug_ranges  00000000 
0000373e l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
0000374e l       .debug_str     00000000 
00000531 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
0000387c l       .debug_str     00000000 
0000375b l       .debug_str     00000000 
0000375f l       .debug_str     00000000 
0000376a l       .debug_str     00000000 
00003773 l       .debug_str     00000000 
00003784 l       .debug_str     00000000 
00003796 l       .debug_str     00000000 
000037a0 l       .debug_str     00000000 
000037af l       .debug_str     00000000 
000037c1 l       .debug_str     00000000 
000037d4 l       .debug_str     00000000 
000037e8 l       .debug_str     00000000 
000037f1 l       .debug_str     00000000 
000037fd l       .debug_str     00000000 
0000380c l       .debug_str     00000000 
00003816 l       .debug_str     00000000 
00003823 l       .debug_str     00000000 
0000382d l       .debug_str     00000000 
0000383e l       .debug_str     00000000 
00002e0a l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
0000344c l       .debug_str     00000000 
0000388d l       .debug_str     00000000 
0000389b l       .debug_str     00000000 
000038a4 l       .debug_str     00000000 
000039d8 l       .debug_str     00000000 
00002ebb l       .debug_str     00000000 
00002ed2 l       .debug_str     00000000 
00002ed5 l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
00002ef1 l       .debug_str     00000000 
00002ee0 l       .debug_str     00000000 
00002edb l       .debug_str     00000000 
00002f1d l       .debug_str     00000000 
000038ca l       .debug_str     00000000 
00003888 l       .debug_str     00000000 
000038d8 l       .debug_str     00000000 
0000358d l       .debug_str     00000000 
000004c0 l       .debug_ranges  00000000 
000038a9 l       .debug_str     00000000 
00001bec l       .debug_str     00000000 
00003892 l       .debug_str     00000000 
00003574 l       .debug_str     00000000 
000038b4 l       .debug_str     00000000 
00003591 l       .debug_str     00000000 
000038e2 l       .debug_str     00000000 
000038b0 l       .debug_str     00000000 
00002f3a l       .debug_str     00000000 
00000514 l       .debug_frame   00000000 
e0000b0a l       .text  00000000 
00000000 l    df *ABS*  00000000 memory.c
e0000b0a l       .text  00000000 
e0000b0a l       .text  00000000 
e0000b0a l       .text  00000000 
e0000b0e l       .text  00000000 
e0000b0e l       .text  00000000 
e0000b12 l       .text  00000000 
e0000b12 l       .text  00000000 
e0000b1a l       .text  00000000 
e0000b1a l       .text  00000000 
e0000b1e l       .text  00000000 
e0000b22 l       .text  00000000 
e0000b22 l       .text  00000000 
e0000b24 l       .text  00000000 
e0000b24 l       .text  00000000 
e0000b28 l       .text  00000000 
e0000b28 l       .text  00000000 
e0000b2c l       .text  00000000 
e0000b2c l       .text  00000000 
e0000b2e l       .text  00000000 
e0000b30 l       .text  00000000 
e0000b32 l       .text  00000000 
e0000b32 l       .text  00000000 
e0000b36 l       .text  00000000 
e0000b3a l       .text  00000000 
e0000b4a l       .text  00000000 
e0000b4a l       .text  00000000 
e0000b4e l       .text  00000000 
e0000b4e l       .text  00000000 
e0000b50 l       .text  00000000 
e0000b50 l       .text  00000000 
e0000b52 l       .text  00000000 
e0000b52 l       .text  00000000 
e0000b56 l       .text  00000000 
e0000b56 l       .text  00000000 
e0000b5c l       .text  00000000 
e0000b60 l       .text  00000000 
e0000b60 l       .text  00000000 
e0000b64 l       .text  00000000 
e0000b68 l       .text  00000000 
e0000b6a l       .text  00000000 
e0000b6c l       .text  00000000 
e0000b6c l       .text  00000000 
000031e8 l       .debug_loc     00000000 
0000320e l       .debug_loc     00000000 
00003234 l       .debug_loc     00000000 
0000325a l       .debug_loc     00000000 
00003280 l       .debug_loc     00000000 
0000329f l       .debug_loc     00000000 
000032be l       .debug_loc     00000000 
000032e4 l       .debug_loc     00000000 
000032ff l       .debug_loc     00000000 
00003348 l       .debug_loc     00000000 
0000336e l       .debug_loc     00000000 
00003390 l       .debug_loc     00000000 
000033ab l       .debug_loc     00000000 
000033c6 l       .debug_loc     00000000 
000033e1 l       .debug_loc     00000000 
000033fc l       .debug_loc     00000000 
00003417 l       .debug_loc     00000000 
00003432 l       .debug_loc     00000000 
00003482 l       .debug_loc     00000000 
0000349d l       .debug_loc     00000000 
000034b8 l       .debug_loc     00000000 
000034da l       .debug_loc     00000000 
000034f5 l       .debug_loc     00000000 
00003510 l       .debug_loc     00000000 
0000352b l       .debug_loc     00000000 
00003546 l       .debug_loc     00000000 
00003561 l       .debug_loc     00000000 
00003580 l       .debug_loc     00000000 
0000359f l       .debug_loc     00000000 
000035c5 l       .debug_loc     00000000 
000035e0 l       .debug_loc     00000000 
00003629 l       .debug_loc     00000000 
0000364f l       .debug_loc     00000000 
0000366a l       .debug_loc     00000000 
00003685 l       .debug_loc     00000000 
000036a0 l       .debug_loc     00000000 
000036bb l       .debug_loc     00000000 
000036d6 l       .debug_loc     00000000 
000036f1 l       .debug_loc     00000000 
0000370c l       .debug_loc     00000000 
0000372b l       .debug_loc     00000000 
0000374a l       .debug_loc     00000000 
00003765 l       .debug_loc     00000000 
000037ac l       .debug_loc     00000000 
000037c7 l       .debug_loc     00000000 
000037e2 l       .debug_loc     00000000 
00003808 l       .debug_loc     00000000 
00003823 l       .debug_loc     00000000 
0000383e l       .debug_loc     00000000 
00003859 l       .debug_loc     00000000 
00003874 l       .debug_loc     00000000 
0000388f l       .debug_loc     00000000 
000038b5 l       .debug_loc     00000000 
000038d0 l       .debug_loc     00000000 
000038f6 l       .debug_loc     00000000 
0000391c l       .debug_loc     00000000 
00003939 l       .debug_loc     00000000 
00003994 l       .debug_loc     00000000 
000039af l       .debug_loc     00000000 
000039d5 l       .debug_loc     00000000 
000039fb l       .debug_loc     00000000 
00003a16 l       .debug_loc     00000000 
00003a3c l       .debug_loc     00000000 
00003a99 l       .debug_loc     00000000 
00003ab4 l       .debug_loc     00000000 
00003acf l       .debug_loc     00000000 
00003b2c l       .debug_loc     00000000 
00003b49 l       .debug_loc     00000000 
00003b64 l       .debug_loc     00000000 
00003bab l       .debug_loc     00000000 
00003bc6 l       .debug_loc     00000000 
00003be1 l       .debug_loc     00000000 
00003bfc l       .debug_loc     00000000 
00003c17 l       .debug_loc     00000000 
00003c32 l       .debug_loc     00000000 
00003c58 l       .debug_loc     00000000 
00003c73 l       .debug_loc     00000000 
00003c8e l       .debug_loc     00000000 
00003ca9 l       .debug_loc     00000000 
00003cc4 l       .debug_loc     00000000 
00003cf1 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000038e9 l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
00000578 l       .debug_ranges  00000000 
00003905 l       .debug_str     00000000 
0000390f l       .debug_str     00000000 
00003919 l       .debug_str     00000000 
00003020 l       .debug_str     00000000 
00000528 l       .debug_str     00000000 
00002ea8 l       .debug_str     00000000 
00003564 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00003923 l       .debug_str     00000000 
00003a2f l       .debug_str     00000000 
00003a39 l       .debug_str     00000000 
00003545 l       .debug_str     00000000 
0000393d l       .debug_str     00000000 
00003948 l       .debug_str     00000000 
0000344e l       .debug_str     00000000 
0000344c l       .debug_str     00000000 
00003954 l       .debug_str     00000000 
00003966 l       .debug_str     00000000 
00003976 l       .debug_str     00000000 
0000392b l       .debug_str     00000000 
00003065 l       .debug_str     00000000 
00003986 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
00002e1c l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
0000398e l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
000035a0 l       .debug_str     00000000 
000039f5 l       .debug_str     00000000 
000039fa l       .debug_str     00000000 
000039fe l       .debug_str     00000000 
00003a04 l       .debug_str     00000000 
0000396a l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
0000397a l       .debug_str     00000000 
00000508 l       .debug_ranges  00000000 
000032d8 l       .debug_str     00000000 
000004f0 l       .debug_ranges  00000000 
000035d5 l       .debug_str     00000000 
00003a09 l       .debug_str     00000000 
00003a10 l       .debug_str     00000000 
00000520 l       .debug_ranges  00000000 
000039aa l       .debug_str     00000000 
00003a18 l       .debug_str     00000000 
00003a1c l       .debug_str     00000000 
00003a20 l       .debug_str     00000000 
00003a25 l       .debug_str     00000000 
00003a2a l       .debug_str     00000000 
00003a34 l       .debug_str     00000000 
000039b1 l       .debug_str     00000000 
00000613 l       .debug_str     00000000 
000039b9 l       .debug_str     00000000 
00003a3f l       .debug_str     00000000 
00000538 l       .debug_ranges  00000000 
00003a44 l       .debug_str     00000000 
00003997 l       .debug_str     00000000 
00002f7e l       .debug_str     00000000 
000039c0 l       .debug_str     00000000 
00000550 l       .debug_ranges  00000000 
000039c8 l       .debug_str     00000000 
0000345a l       .debug_str     00000000 
000039e4 l       .debug_str     00000000 
000039ec l       .debug_str     00000000 
000039da l       .debug_str     00000000 
00003024 l       .debug_str     00000000 
0000300d l       .debug_str     00000000 
00000548 l       .debug_frame   00000000 
e0000b6c l       .text  00000000 
00000000 l    df *ABS*  00000000 device_sim_verilator.c
00003d11 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003a4c l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000005d8 l       .debug_ranges  00000000 
00003a76 l       .debug_str     00000000 
00003ad6 l       .debug_str     00000000 
00003aca l       .debug_str     00000000 
00003a82 l       .debug_str     00000000 
00003a8f l       .debug_str     00000000 
00003aa3 l       .debug_str     00000000 
00003ab4 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
00003ae4 l       .debug_str     00000000 
00003024 l       .debug_str     00000000 
0000300d l       .debug_str     00000000 
00003af4 l       .debug_str     00000000 
00003b12 l       .debug_str     00000000 
00003b29 l       .debug_str     00000000 
00003b39 l       .debug_str     00000000 
00003b49 l       .debug_str     00000000 
00003b57 l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003b65 l       .debug_str     00000000 
00003b7a l       .debug_str     00000000 
00003b91 l       .debug_str     00000000 
00003564 l       .debug_str     00000000 
00003baa l       .debug_str     00000000 
00003bc6 l       .debug_str     00000000 
00002f3a l       .debug_str     00000000 
00003bd5 l       .debug_str     00000000 
00003bfd l       .debug_str     00000000 
00003be3 l       .debug_str     00000000 
0000060c l       .debug_frame   00000000 
00000000 l    df *ABS*  00000000 static_critical_sec_mmio.c
00000000 l       .debug_str     00000000 
0000306f l       .debug_str     00000000 
000000a7 l       .debug_str     00000000 
000030ad l       .debug_str     00000000 
000030e0 l       .debug_str     00000000 
000030ba l       .debug_str     00000000 
000030ce l       .debug_str     00000000 
000030c5 l       .debug_str     00000000 
0000320d l       .debug_str     00000000 
000031c2 l       .debug_str     00000000 
000030da l       .debug_str     00000000 
00002e09 l       .debug_str     00000000 
00003017 l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
e00003be g     F .text  00000046 sec_mmio_read32
e0000172 g     F .text  0000007a external_irq_handler
00008000 g       *ABS*  00000000 _stack_len
e0002e08 g       .bss   00000000 _bss_start
e000a000 g       .stack 00000000 stack
e0000080 g       *ABS*  00000000 _entry_point
e0002e10 g       .bss   00000000 _bss_end
e000035c g     F .text  00000008 otp_read32
e0000e34 g     O .data  00000084 status_codes
e0000312 g     F .text  0000002e uart_init
e0000364 g     F .text  0000005a sec_mmio_init
e00000cc g       .text  00000000 _start
e00004a8 g     F .text  0000048e base_vfprintf
e0000eb8 g     O .static_critical.sec_mmio_ctx  00001f50 sec_mmio_ctx
e0000b0a g     F .text  00000062 memset
e00000f8 g     F .text  0000007a main
e0000e30 g     O .rodata        00000004 kUartNCOValue
e0000084 g       .vectors       00000000 _vectors_end
e0010000 g       .vectors       00000000 _stack_start
00002000 g       *ABS*  00000000 _min_stack
e0000476 g     F .text  00000032 base_printf
e0010010 g       *ABS*  00000000 fromhost
00020008 g       *ABS*  00000000 tohost
e00001ec g     F .text  000000c8 rom_printf
e0000a98 g     F .text  00000072 status_extract
e000a000 g       .stack 00000000 _stack
e0000000 g       .vectors       00000000 _vectors_start
e00002b4 g     F .text  0000005e pinmux_init
e0000340 g     F .text  0000001c uart_putchar



Disassembly of section .vectors:

e0000000 <_vectors_start>:
e0000000:       0840006f                j       e0000084 <_vectors_end>
e0000004:       0800006f                j       e0000084 <_vectors_end>
e0000008:       07c0006f                j       e0000084 <_vectors_end>
e000000c:       0780006f                j       e0000084 <_vectors_end>
e0000010:       0740006f                j       e0000084 <_vectors_end>
e0000014:       0700006f                j       e0000084 <_vectors_end>
e0000018:       06c0006f                j       e0000084 <_vectors_end>
e000001c:       0680006f                j       e0000084 <_vectors_end>
e0000020:       0640006f                j       e0000084 <_vectors_end>
e0000024:       0600006f                j       e0000084 <_vectors_end>
e0000028:       05c0006f                j       e0000084 <_vectors_end>
e000002c:       1460006f                j       e0000172 <external_irq_handler>
e0000030:       0540006f                j       e0000084 <_vectors_end>
e0000034:       0500006f                j       e0000084 <_vectors_end>
e0000038:       04c0006f                j       e0000084 <_vectors_end>
e000003c:       0480006f                j       e0000084 <_vectors_end>
e0000040:       0440006f                j       e0000084 <_vectors_end>
e0000044:       0400006f                j       e0000084 <_vectors_end>
e0000048:       03c0006f                j       e0000084 <_vectors_end>
e000004c:       0380006f                j       e0000084 <_vectors_end>
e0000050:       0340006f                j       e0000084 <_vectors_end>
e0000054:       0300006f                j       e0000084 <_vectors_end>
e0000058:       02c0006f                j       e0000084 <_vectors_end>
e000005c:       0280006f                j       e0000084 <_vectors_end>
e0000060:       0240006f                j       e0000084 <_vectors_end>
e0000064:       0200006f                j       e0000084 <_vectors_end>
e0000068:       01c0006f                j       e0000084 <_vectors_end>
e000006c:       0180006f                j       e0000084 <_vectors_end>
e0000070:       0140006f                j       e0000084 <_vectors_end>
e0000074:       0100006f                j       e0000084 <_vectors_end>
e0000078:       00c0006f                j       e0000084 <_vectors_end>
e000007c:       0080006f                j       e0000084 <_vectors_end>
e0000080:       0060006f                j       e0000086 <reset_handler>

Disassembly of section .text:

e0000084 <default_exc_handler>:
default_exc_handler():
e0000084:       a0bd                    j       e00000f2 <sleep_loop>

e0000086 <reset_handler>:
reset_handler():
e0000086:       4081                    li      ra,0
e0000088:       8106                    mv      sp,ra
e000008a:       8186                    mv      gp,ra
e000008c:       8206                    mv      tp,ra
e000008e:       8286                    mv      t0,ra
e0000090:       8306                    mv      t1,ra
e0000092:       8386                    mv      t2,ra
e0000094:       8406                    mv      s0,ra
e0000096:       8486                    mv      s1,ra
e0000098:       8506                    mv      a0,ra
e000009a:       8586                    mv      a1,ra
e000009c:       8606                    mv      a2,ra
e000009e:       8686                    mv      a3,ra
e00000a0:       8706                    mv      a4,ra
e00000a2:       8786                    mv      a5,ra
e00000a4:       8806                    mv      a6,ra
e00000a6:       8886                    mv      a7,ra
e00000a8:       8906                    mv      s2,ra
e00000aa:       8986                    mv      s3,ra
e00000ac:       8a06                    mv      s4,ra
e00000ae:       8a86                    mv      s5,ra
e00000b0:       8b06                    mv      s6,ra
e00000b2:       8b86                    mv      s7,ra
e00000b4:       8c06                    mv      s8,ra
e00000b6:       8c86                    mv      s9,ra
e00000b8:       8d06                    mv      s10,ra
e00000ba:       8d86                    mv      s11,ra
e00000bc:       8e06                    mv      t3,ra
e00000be:       8e86                    mv      t4,ra
e00000c0:       8f06                    mv      t5,ra
e00000c2:       8f86                    mv      t6,ra
e00000c4:       00010117                auipc   sp,0x10
e00000c8:       f3c10113                addi    sp,sp,-196 # e0010000 <_stack_start>

e00000cc <_start>:
e00000cc:       00003d17                auipc   s10,0x3
e00000d0:       d3cd0d13                addi    s10,s10,-708 # e0002e08 <base_stdout>
e00000d4:       00003d97                auipc   s11,0x3
e00000d8:       d3cd8d93                addi    s11,s11,-708 # e0002e10 <_bss_end>
e00000dc:       01bd5763                bge     s10,s11,e00000ea <main_entry>

e00000e0 <zero_loop>:
zero_loop():
e00000e0:       /-> 000d2023            sw      zero,0(s10)
e00000e4:       |   0d11                        addi    s10,s10,4
e00000e6:       \-- ffaddde3            bge     s11,s10,e00000e0 <zero_loop>

e00000ea <main_entry>:
zero_loop_end():
e00000ea:       4501                    li      a0,0
e00000ec:       4581                    li      a1,0
e00000ee:       00a000ef                jal     ra,e00000f8 <main>

e00000f2 <sleep_loop>:
sleep_loop():
e00000f2:       /-> 10500073            wfi
e00000f6:       \-- bff5                        j       e00000f2 <sleep_loop>

e00000f8 <main>:
main():
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:59
#include "sw/device/lib/base/mmio.h"
#include "sw/device/lib/testing/rand_testutils.h"

#define TARGET_SYNTHESIS

int main(int argc, char **argv) {
e00000f8:       1141                    addi    sp,sp,-16
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:61

  sec_mmio_init();
e00000fa:       c606                    sw      ra,12(sp)
e00000fc:       c422                    sw      s0,8(sp)
e00000fe:       249d                    jal     e0000364 <sec_mmio_init>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:62
  pinmux_init();
e0000100:       2a55                    jal     e00002b4 <pinmux_init>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:63
  uart_init(kUartNCOValue);
e0000102:       00001517                auipc   a0,0x1
e0000106:       d2e50513                addi    a0,a0,-722 # e0000e30 <kUartNCOValue>
e000010a:       4108                    lw      a0,0(a0)
e000010c:       2419                    jal     e0000312 <uart_init>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:65
  
  base_printf("Prego, prenda pure una cadrega!\n\r");
e000010e:       00001417                auipc   s0,0x1
e0000112:       a5e40413                addi    s0,s0,-1442 # e0000b6c <memset+0x62>
e0000116:       8522                    mv      a0,s0
e0000118:       2eb9                    jal     e0000476 <base_printf>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:66
  rom_printf("Prego, prenda pure una cadrega!\n\r");
e000011a:       8522                    mv      a0,s0
e000011c:       28c1                    jal     e00001ec <rom_printf>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:68
  
  uart_putchar('b');
e000011e:       06200513                li      a0,98
e0000122:       2c39                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:69
  uart_putchar('o');
e0000124:       06f00513                li      a0,111
e0000128:       2c21                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:70
  uart_putchar('o');
e000012a:       06f00513                li      a0,111
e000012e:       2c09                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:71
  uart_putchar('t');
e0000130:       07400513                li      a0,116
e0000134:       2431                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:72
  uart_putchar('s');
e0000136:       07300513                li      a0,115
e000013a:       2419                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:73
  uart_putchar('t');
e000013c:       07400513                li      a0,116
e0000140:       2401                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:74
  uart_putchar('r');
e0000142:       07200513                li      a0,114
e0000146:       2aed                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:75
  uart_putchar('a');
e0000148:       06100513                li      a0,97
e000014c:       2ad5                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:76
  uart_putchar('p');
e000014e:       07000513                li      a0,112
e0000152:       22fd                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:77
  uart_putchar(':');
e0000154:       03a00513                li      a0,58
e0000158:       22e5                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:78
  uart_putchar('1');
e000015a:       03100513                li      a0,49
e000015e:       22cd                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:79
  uart_putchar('\r');
e0000160:       4535                    li      a0,13
e0000162:       2af9                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:80
  uart_putchar('\n');
e0000164:       4529                    li      a0,10
e0000166:       2ae9                    jal     e0000340 <uart_putchar>
/proc/self/cwd/hw/top_earlgrey/sw/tests/hello_world/hello_world.c:82

  return 0;
e0000168:       4501                    li      a0,0
e000016a:       4422                    lw      s0,8(sp)
e000016c:       40b2                    lw      ra,12(sp)
e000016e:       0141                    addi    sp,sp,16
e0000170:       8082                    ret

e0000172 <external_irq_handler>:
external_irq_handler():
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:338
  putchar('\n');

  return i;
}

void external_irq_handler(void)  {
e0000172:           1101                        addi    sp,sp,-32
e0000174:           ce2a                        sw      a0,28(sp)
e0000176:           cc2e                        sw      a1,24(sp)
e0000178:           ca32                        sw      a2,20(sp)
e000017a:           c836                        sw      a3,16(sp)
e000017c:           c63a                        sw      a4,12(sp)
e000017e:           c43e                        sw      a5,8(sp)
e0000180:           c242                        sw      a6,4(sp)
e0000182:           c8200537            lui     a0,0xc8200
e0000186:           09f00593            li      a1,159
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:355
  p_reg5 = (int *) 0x1040401C;

  // start of """Interrupt Service Routine"""
  
  plic_check = (int *) 0xC8200004;
  while(*plic_check != mbox_id);   //check wether the intr is the correct one
e000018a:       /-> 4150                        lw      a2,4(a0)
e000018c:       \-- feb61fe3            bne     a2,a1,e000018a <external_irq_handler+0x18>
e0000190:           10404537            lui     a0,0x10404
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:358
  
  p_reg = (int *) 0x10404020;
 *p_reg = 0x00000000;        //clearing the pending interrupt signal
e0000194:           02052023            sw      zero,32(a0) # 10404020 <tohost+0x103e4018>
e0000198:           c82005b7            lui     a1,0xc8200
e000019c:           09f00613            li      a2,159
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:360
 
 *plic_check = mbox_id;      //completing interrupt
e00001a0:           c1d0                        sw      a2,4(a1)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:362
 
  a = *p_reg1;
e00001a2:           450c                        lw      a1,8(a0)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:363
  b = *p_reg2;
e00001a4:           4910                        lw      a2,16(a0)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:364
  c = *p_reg3;
e00001a6:           4954                        lw      a3,20(a0)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:365
  d = *p_reg4;
e00001a8:           4d18                        lw      a4,24(a0)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:366
  e = *p_reg5;
e00001aa:           01c52803            lw      a6,28(a0)
e00001ae:           baadc7b7            lui     a5,0xbaadc
e00001b2:           0de78793            addi    a5,a5,222 # baadc0de <fromhost+0xdaacc0ce>
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:369
  
  
  if( a == 0xBAADC0DE &&  b == 0xBAADC0DE && c == 0xBAADC0DE && d == 0xBAADC0DE && e == 0xBAADC0DE){
e00001b6:           8dbd                        xor     a1,a1,a5
e00001b8:           8e3d                        xor     a2,a2,a5
e00001ba:           8dd1                        or      a1,a1,a2
e00001bc:           00f6c633            xor     a2,a3,a5
e00001c0:           8dd1                        or      a1,a1,a2
e00001c2:           00f74633            xor     a2,a4,a5
e00001c6:           8dd1                        or      a1,a1,a2
e00001c8:           00f84633            xor     a2,a6,a5
e00001cc:           8dd1                        or      a1,a1,a2
e00001ce:       /-- e589                        bnez    a1,e00001d8 <external_irq_handler+0x66>
e00001d0:       |   02450513            addi    a0,a0,36
e00001d4:       |   4585                        li      a1,1
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:371
      p_reg = (int *) 0x10404024; // completion interrupt to ariane agent
     *p_reg = 0x00000001;
e00001d6:       |   c10c                        sw      a1,0(a0)
/proc/self/cwd/hw/top_earlgrey/sw/tests/common/utils.c:375
  }
  
  return;
}
e00001d8:       \-> 4812                        lw      a6,4(sp)
e00001da:           47a2                        lw      a5,8(sp)
e00001dc:           4732                        lw      a4,12(sp)
e00001de:           46c2                        lw      a3,16(sp)
e00001e0:           4652                        lw      a2,20(sp)
e00001e2:           45e2                        lw      a1,24(sp)
e00001e4:           4572                        lw      a0,28(sp)
e00001e6:           6105                        addi    sp,sp,32
e00001e8:           30200073            mret

e00001ec <rom_printf>:
rom_printf():
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:13
#include <stdarg.h>
#include <stdint.h>

#include "sw/device/silicon_creator/lib/drivers/uart.h"

rom_error_t rom_printf(const char *format, ...) {
e00001ec:                          715d                 addi    sp,sp,-80
e00001ee:                          d606                 sw      ra,44(sp)
e00001f0:                          d422                 sw      s0,40(sp)
e00001f2:                          d226                 sw      s1,36(sp)
e00001f4:                          d04a                 sw      s2,32(sp)
e00001f6:                          ce4e                 sw      s3,28(sp)
e00001f8:                          cc52                 sw      s4,24(sp)
e00001fa:                          ca56                 sw      s5,20(sp)
e00001fc:                          c85a                 sw      s6,16(sp)
e00001fe:                          c65e                 sw      s7,12(sp)
e0000200:                          84aa                 mv      s1,a0
e0000202:                          c6c6                 sw      a7,76(sp)
e0000204:                          c4c2                 sw      a6,72(sp)
e0000206:                          c2be                 sw      a5,68(sp)
e0000208:                          c0ba                 sw      a4,64(sp)
e000020a:                          de36                 sw      a3,60(sp)
e000020c:                          dc32                 sw      a2,56(sp)
e000020e:                          da2e                 sw      a1,52(sp)
e0000210:                          1848                 addi    a0,sp,52
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:15
  va_list args;
  va_start(args, format);
e0000212:                          c42a                 sw      a0,8(sp)
e0000214:                          02500a13             li      s4,37
e0000218:                          014c4537             lui     a0,0x14c4
e000021c:                          70d50913             addi    s2,a0,1805 # 14c470d <tohost+0x14a4705>
e0000220:                          07800993             li      s3,120
e0000224:                          00001b97             auipc   s7,0x1
e0000228:                          96ab8b93             addi    s7,s7,-1686 # e0000b8e <rom_printf.kHexTable>
e000022c:                          07300a93             li      s5,115
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17

  while (*format != '\0') {
e0000230:       /----------------> 0004c503             lbu     a0,0(s1)
e0000234:       |              /-- 01450663             beq     a0,s4,e0000240 <rom_printf+0x54>
e0000238:       |  /-----------|-- c125                 beqz    a0,e0000298 <rom_printf+0xac>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:19
    if (*format != '%') {
      uart_putchar(*format++);
e000023a:       |  |           |   0485                 addi    s1,s1,1
e000023c:       |  |           |   2211                 jal     e0000340 <uart_putchar>
e000023e:       +--|-----------|-- bfcd                 j       e0000230 <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:24
      continue;
    }

    ++format;  // Skip over the '%'.
    switch (*format++) {
e0000240:       |  |           \-> 0014c503             lbu     a0,1(s1)
e0000244:       |  |               00248b13             addi    s6,s1,2
e0000248:       |  |     /-------- 03350763             beq     a0,s3,e0000276 <rom_printf+0x8a>
e000024c:       |  |  /--|-------- 05551863             bne     a0,s5,e000029c <rom_printf+0xb0>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:27
      case 's': {
        // Print a null-terminated string.
        const char *str = va_arg(args, const char *);
e0000250:       |  |  |  |         4522                 lw      a0,8(sp)
e0000252:       |  |  |  |         00450593             addi    a1,a0,4
e0000256:       |  |  |  |         c42e                 sw      a1,8(sp)
e0000258:       |  |  |  |         410c                 lw      a1,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
e000025a:       |  |  |  |         0005c503             lbu     a0,0(a1)
e000025e:       |  |  |  |         84da                 mv      s1,s6
e0000260:       +--|--|--|-------- d961                 beqz    a0,e0000230 <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17
  while (*format != '\0') {
e0000262:       |  |  |  |         00158413             addi    s0,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:29
          uart_putchar(*str++);
e0000266:       |  |  |  |     /-> 0ff57513             andi    a0,a0,255
e000026a:       |  |  |  |     |   28d9                 jal     e0000340 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
e000026c:       |  |  |  |     |   00044503             lbu     a0,0(s0)
e0000270:       |  |  |  |     |   0405                 addi    s0,s0,1
e0000272:       |  |  |  |     \-- f975                 bnez    a0,e0000266 <rom_printf+0x7a>
e0000274:       |  |  |  |  /----- a005                 j       e0000294 <rom_printf+0xa8>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:36
        break;
      }
      case 'x': {
        // Print an `unsigned int` in hexadecimal.
        static const char kHexTable[16] = "0123456789abcdef";
        unsigned int v = va_arg(args, unsigned int);
e0000276:       |  |  |  \--|----> 4522                 lw      a0,8(sp)
e0000278:       |  |  |     |      00450593             addi    a1,a0,4
e000027c:       |  |  |     |      c42e                 sw      a1,8(sp)
e000027e:       |  |  |     |      4104                 lw      s1,0(a0)
e0000280:       |  |  |     |      4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:39
        for (int i = 0; i < sizeof(v) * 2; ++i) {
          int shift = sizeof(v) * 8 - 4;
          uart_putchar(kHexTable[v >> shift]);
e0000282:       |  |  |     |  /-> 01c4d513             srli    a0,s1,0x1c
e0000286:       |  |  |     |  |   955e                 add     a0,a0,s7
e0000288:       |  |  |     |  |   00054503             lbu     a0,0(a0)
e000028c:       |  |  |     |  |   2855                 jal     e0000340 <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
e000028e:       |  |  |     |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:40
          v <<= 4;
e0000290:       |  |  |     |  |   0492                 slli    s1,s1,0x4
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
e0000292:       |  |  |     |  \-- f865                 bnez    s0,e0000282 <rom_printf+0x96>
e0000294:       |  |  |     \----> 84da                 mv      s1,s6
e0000296:       \--|--|----------- bf69                 j       e0000230 <rom_printf+0x44>
e0000298:          \--|----------> 73900913             li      s2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:52
    }
  }

  va_end(args);
  return kErrorOk;
}
e000029c:             \----------> 854a                 mv      a0,s2
e000029e:                          4bb2                 lw      s7,12(sp)
e00002a0:                          4b42                 lw      s6,16(sp)
e00002a2:                          4ad2                 lw      s5,20(sp)
e00002a4:                          4a62                 lw      s4,24(sp)
e00002a6:                          49f2                 lw      s3,28(sp)
e00002a8:                          5902                 lw      s2,32(sp)
e00002aa:                          5492                 lw      s1,36(sp)
e00002ac:                          5422                 lw      s0,40(sp)
e00002ae:                          50b2                 lw      ra,44(sp)
e00002b0:                          6161                 addi    sp,sp,80
e00002b2:                          8082                 ret

e00002b4 <pinmux_init>:
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:127
  abs_mmio_write32(
      kBase + PINMUX_MIO_OUTSEL_0_REG_OFFSET + output.mio * sizeof(uint32_t),
      output.outsel);
}

void pinmux_init(void) {
e00002b4:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:129
  uint32_t bootstrap_en =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
e00002b6:              c606                     sw      ra,12(sp)
e00002b8:              36400513                 li      a0,868
e00002bc:              2045                     jal     e000035c <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  // > of statements.

  // The +r constraint tells the compiler that this is an "inout" parameter: it
  // means that not only does the black box depend on `val`, but it also mutates
  // it in an unspecified way.
  asm volatile("" : "+r"(val));
e00002be:              862a                     mv      a2,a0
e00002c0:              73900593                 li      a1,1849
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:130
  if (launder32(bootstrap_en) == kHardenedBoolTrue) {
e00002c4:       /----- 02b61b63                 bne     a2,a1,e00002fa <pinmux_init+0x46>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:131
    HARDENED_CHECK_EQ(bootstrap_en, kHardenedBoolTrue);
e00002c8:       |  /-- 00b50663                 beq     a0,a1,e00002d4 <pinmux_init+0x20>
e00002cc:       |  |   0000                     unimp
e00002ce:       |  |   0000                     unimp
e00002d0:       |  |   0000                     unimp
e00002d2:       |  |   0000                     unimp
e00002d4:       |  \-> c0460537                 lui     a0,0xc0460
e00002d8:       |      4591                     li      a1,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
e00002da:       |      44b52c23                 sw      a1,1112(a0) # c0460458 <fromhost+0xe0450448>
e00002de:       |      44b52e23                 sw      a1,1116(a0)
e00002e2:       |      46b52023                 sw      a1,1120(a0)
e00002e6:       |      45e1                     li      a1,24
e00002e8:       |      14b52023                 sw      a1,320(a0)
e00002ec:       |      45e5                     li      a1,25
e00002ee:       |      14b52223                 sw      a1,324(a0)
e00002f2:       |      14850513                 addi    a0,a0,328
e00002f6:       |      45e9                     li      a1,26
e00002f8:       |      c10c                     sw      a1,0(a0)
e00002fa:       \----> c0460537                 lui     a0,0xc0460
e00002fe:              45ed                     li      a1,27
e0000300:              18b52823                 sw      a1,400(a0) # c0460190 <fromhost+0xe0450180>
e0000304:              02d00593                 li      a1,45
e0000308:              2eb52823                 sw      a1,752(a0)
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:144
    configure_input(kInputSwStrap2);
  }

  configure_input(kInputUart0);
  configure_output(kOutputUart0);
}
e000030c:              40b2                     lw      ra,12(sp)
e000030e:              0141                     addi    sp,sp,16
e0000310:              8082                     ret

e0000312 <uart_init>:
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:37
                   0u);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_STATE_REG_OFFSET,
                   UINT32_MAX);
}

rom_error_t uart_init(uint32_t precalculated_nco) {
e0000312:       c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
e0000316:       0005a823                sw      zero,16(a1) # c0000010 <fromhost+0xdfff0000>
e000031a:       460d                    li      a2,3
e000031c:       d190                    sw      a2,32(a1)
e000031e:       0205a423                sw      zero,40(a1)
e0000322:       0205a823                sw      zero,48(a1)
e0000326:       0005a223                sw      zero,4(a1)
e000032a:       567d                    li      a2,-1
e000032c:       c190                    sw      a2,0(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
OT_WARN_UNUSED_RESULT
inline uint32_t bitfield_field32_write(uint32_t bitfield,
                                       bitfield_field32_t field,
                                       uint32_t value) {
  bitfield &= ~(field.mask << field.index);
  bitfield |= (value & field.mask) << field.index;
e000032e:       0542                    slli    a0,a0,0x10
e0000330:       00156513                ori     a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
e0000334:       c988                    sw      a0,16(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_CTRL_REG_OFFSET, reg);

  // Disable interrupts.
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_ENABLE_REG_OFFSET,
                   0u);
  return kErrorOk;
e0000336:       73900513                li      a0,1849
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
e000033a:       0005a223                sw      zero,4(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
e000033e:       8082                    ret

e0000340 <uart_putchar>:
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:66
  uint32_t reg =
      abs_mmio_read32(TOP_EARLGREY_UART0_BASE_ADDR + UART_STATUS_REG_OFFSET);
  return bitfield_bit32_read(reg, UART_STATUS_TXIDLE_BIT);
}

void uart_putchar(uint8_t byte) {
e0000340:           c00005b7            lui     a1,0xc0000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
e0000344:       /-> 49d0                        lw      a2,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
 */
OT_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
e0000346:       |   8a05                        andi    a2,a2,1
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:68
  // If the transmit FIFO is full, wait.
  while (uart_tx_full()) {
e0000348:       \-- fe75                        bnez    a2,e0000344 <uart_putchar+0x4>
e000034a:           c00005b7            lui     a1,0xc0000
e000034e:           01c58613            addi    a2,a1,28 # c000001c <fromhost+0xdfff000c>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
e0000352:           c208                        sw      a0,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
e0000354:       /-> 49c8                        lw      a0,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e0000356:       |   8921                        andi    a0,a0,8
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:74
  }
  uint32_t reg = bitfield_field32_write(0, UART_WDATA_WDATA_FIELD, byte);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_WDATA_REG_OFFSET, reg);

  // If the transmitter is active, wait.
  while (!uart_tx_idle()) {
e0000358:       \-- dd75                        beqz    a0,e0000354 <uart_putchar+0x14>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:76
  }
}
e000035a:           8082                        ret

e000035c <otp_read32>:
otp_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:18
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"
#include "otp_ctrl_regs.h"  // Generated.

enum { kBase = TOP_EARLGREY_OTP_CTRL_CORE_BASE_ADDR };

uint32_t otp_read32(uint32_t address) {
e000035c:       c01315b7                lui     a1,0xc0131
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:19
  return sec_mmio_read32(kBase + OTP_CTRL_SW_CFG_WINDOW_REG_OFFSET + address);
e0000360:       952e                    add     a0,a0,a1
e0000362:       a8b1                    j       e00003be <sec_mmio_read32>

e0000364 <sec_mmio_init>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
e0000364:           4601                        li      a2,0
e0000366:           4681                        li      a3,0
e0000368:           4701                        li      a4,0
e000036a:           4501                        li      a0,0
e000036c:           00001597            auipc   a1,0x1
e0000370:           b4c58593            addi    a1,a1,-1204 # e0000eb8 <sec_mmio_ctx>
sec_mmio_init():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:53
  // mechanism.
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
}

void sec_mmio_init(void) {
  sec_mmio_ctx.last_index = launder32(0);
e0000374:           c190                        sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:54
  sec_mmio_ctx.write_count = launder32(0);
e0000376:           c1d4                        sw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:55
  sec_mmio_ctx.check_count = launder32(0);
e0000378:           c5d8                        sw      a4,12(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:56
  sec_mmio_ctx.expected_write_count = launder32(0);
e000037a:           c588                        sw      a0,8(a1)
e000037c:           3e800613            li      a2,1000
e0000380:           56fd                        li      a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:58
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
    sec_mmio_ctx.addrs[i] = UINT32_MAX;
e0000382:       /-> 7d858713            addi    a4,a1,2008
e0000386:       |   7cd72c23            sw      a3,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:59
    sec_mmio_ctx.values[i] = UINT32_MAX;
e000038a:       |   c994                        sw      a3,16(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:57
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
e000038c:       |   167d                        addi    a2,a2,-1
e000038e:       |   0591                        addi    a1,a1,4
e0000390:       \-- fa6d                        bnez    a2,e0000382 <sec_mmio_init+0x1e>
e0000392:           00001597            auipc   a1,0x1
e0000396:           b2658593            addi    a1,a1,-1242 # e0000eb8 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:61
  }
  uint32_t check = kSecMmioValZero ^ sec_mmio_ctx.last_index;
e000039a:           4190                        lw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:62
  check ^= sec_mmio_ctx.write_count;
e000039c:           41d4                        lw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:63
  check ^= sec_mmio_ctx.check_count;
e000039e:           45cc                        lw      a1,12(a1)
e00003a0:           8e35                        xor     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:64
  check ^= sec_mmio_ctx.expected_write_count;
e00003a2:           8db1                        xor     a1,a1,a2
e00003a4:           8d2d                        xor     a0,a0,a1
e00003a6:           3ca595b7            lui     a1,0x3ca59
e00003aa:           65a58593            addi    a1,a1,1626 # 3ca5965a <tohost+0x3ca39652>
e00003ae:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:65
  HARDENED_CHECK_EQ(check, kSecMmioValZero);
e00003b0:       /-- 00b50663            beq     a0,a1,e00003bc <sec_mmio_init+0x58>
e00003b4:       |   0000                        unimp
e00003b6:       |   0000                        unimp
e00003b8:       |   0000                        unimp
e00003ba:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:66
}
e00003bc:       \-> 8082                        ret

e00003be <sec_mmio_read32>:
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:78
    sec_mmio_ctx.values[i] = UINT32_MAX;
  }
  HARDENED_CHECK_EQ(sec_mmio_ctx.check_count, 0);
}

uint32_t sec_mmio_read32(uint32_t addr) {
e00003be:           1101                        addi    sp,sp,-32
e00003c0:           ce06                        sw      ra,28(sp)
e00003c2:           cc22                        sw      s0,24(sp)
e00003c4:           ca26                        sw      s1,20(sp)
e00003c6:           c84a                        sw      s2,16(sp)
e00003c8:           c64e                        sw      s3,12(sp)
e00003ca:           842a                        mv      s0,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
e00003cc:           00052903            lw      s2,0(a0)
e00003d0:           21692537            lui     a0,0x21692
e00003d4:           43650993            addi    s3,a0,1078 # 21692436 <tohost+0x2167242e>
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:80
  uint32_t value = abs_mmio_read32(addr);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
e00003d8:           013944b3            xor     s1,s2,s3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:82
  barrier32(masked_value);
  upsert_register(addr, masked_value);
e00003dc:           8522                        mv      a0,s0
e00003de:           85a6                        mv      a1,s1
e00003e0:           2015                        jal     e0000404 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
e00003e2:           4008                        lw      a0,0(s0)
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:83
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
e00003e4:           01354533            xor     a0,a0,s3
e00003e8:       /-- 00950663            beq     a0,s1,e00003f4 <sec_mmio_read32+0x36>
e00003ec:       |   0000                        unimp
e00003ee:       |   0000                        unimp
e00003f0:       |   0000                        unimp
e00003f2:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:85

  return value;
e00003f4:       \-> 854a                        mv      a0,s2
e00003f6:           49b2                        lw      s3,12(sp)
e00003f8:           4942                        lw      s2,16(sp)
e00003fa:           44d2                        lw      s1,20(sp)
e00003fc:           4462                        lw      s0,24(sp)
e00003fe:           40f2                        lw      ra,28(sp)
e0000400:           6105                        addi    sp,sp,32
e0000402:           8082                        ret

e0000404 <upsert_register>:
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:34
  const size_t last_index = sec_mmio_ctx.last_index;
e0000404:                 00001817              auipc   a6,0x1
e0000408:                 ab480813              addi    a6,a6,-1356 # e0000eb8 <sec_mmio_ctx>
e000040c:                 00082703              lw      a4,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
e0000410:                 4781                  li      a5,0
e0000412:                 4681                  li      a3,0
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
e0000414:       /-------- 02e7f163              bgeu    a5,a4,e0000436 <upsert_register+0x32>
e0000418:       |         4681                  li      a3,0
e000041a:       |         87c2                  mv      a5,a6
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:37
    if (sec_mmio_ctx.addrs[i] == addr) {
e000041c:       |  /----> 7d878613              addi    a2,a5,2008
e0000420:       |  |      7d862603              lw      a2,2008(a2)
e0000424:       |  |  /-- 00a60863              beq     a2,a0,e0000434 <upsert_register+0x30>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
e0000428:       |  |  |   0685                  addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
e000042a:       |  |  |   8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
e000042c:       |  |  |   0791                  addi    a5,a5,4
e000042e:       |  \--|-- fee667e3              bltu    a2,a4,e000041c <upsert_register+0x18>
e0000432:       +-----|-- a011                  j       e0000436 <upsert_register+0x32>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:38
      sec_mmio_ctx.values[i] = value;
e0000434:       |     \-> cb8c                  sw      a1,16(a5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
e0000436:       \-------> 8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
  if (launder32(i) == last_index && launder32(i) < kSecMmioRegFileSize) {
e0000438:             /-- 02e61463              bne     a2,a4,e0000460 <upsert_register+0x5c>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
e000043c:             |   8636                  mv      a2,a3
e000043e:             |   3e700713              li      a4,999
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
e0000442:             +-- 00c76f63              bltu    a4,a2,e0000460 <upsert_register+0x5c>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:43
    sec_mmio_ctx.addrs[i] = addr;
e0000446:             |   00269613              slli    a2,a3,0x2
e000044a:             |   9642                  add     a2,a2,a6
e000044c:             |   7d860713              addi    a4,a2,2008
e0000450:             |   7ca72c23              sw      a0,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:44
    sec_mmio_ctx.values[i] = value;
e0000454:             |   ca0c                  sw      a1,16(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:45
    ++sec_mmio_ctx.last_index;
e0000456:             |   00082503              lw      a0,0(a6)
e000045a:             |   0505                  addi    a0,a0,1
e000045c:             |   00a82023              sw      a0,0(a6)
e0000460:             \-> 3e800513              li      a0,1000
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:49
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
e0000464:             /-- 00a6e663              bltu    a3,a0,e0000470 <upsert_register+0x6c>
e0000468:             |   0000                  unimp
e000046a:             |   0000                  unimp
e000046c:             |   0000                  unimp
e000046e:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:50
}
e0000470:             \-> 8082                  ret

e0000472 <base_dev_null>:
base_dev_null():
/proc/self/cwd/sw/device/lib/runtime/print.c:52

static const char kErrorNul[17] = "%<unexpected nul>";
static const char kUnknownSpec[15] = "%<unknown spec>";
static const char kErrorTooWide[12] = "%<bad width>";

static size_t base_dev_null(void *data, const char *buf, size_t len) {
e0000472:       8532                    mv      a0,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:53
  return len;
e0000474:       8082                    ret

e0000476 <base_printf>:
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:84
void base_uart_stdout(const dif_uart_t *uart) {
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}

size_t base_printf(const char *format, ...) {
e0000476:       7179                    addi    sp,sp,-48
e0000478:       c606                    sw      ra,12(sp)
e000047a:       d646                    sw      a7,44(sp)
e000047c:       d442                    sw      a6,40(sp)
e000047e:       d23e                    sw      a5,36(sp)
e0000480:       d03a                    sw      a4,32(sp)
e0000482:       ce36                    sw      a3,28(sp)
e0000484:       cc32                    sw      a2,24(sp)
e0000486:       ca2e                    sw      a1,20(sp)
e0000488:       00003597                auipc   a1,0x3
e000048c:       98058593                addi    a1,a1,-1664 # e0002e08 <base_stdout>
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
e0000490:       4190                    lw      a2,0(a1)
e0000492:       41cc                    lw      a1,4(a1)
e0000494:       872a                    mv      a4,a0
e0000496:       0848                    addi    a0,sp,20
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:86
  va_start(args, format);
e0000498:       c42a                    sw      a0,8(sp)
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
e000049a:       0854                    addi    a3,sp,20
e000049c:       8532                    mv      a0,a2
e000049e:       863a                    mv      a2,a4
e00004a0:       2021                    jal     e00004a8 <base_vfprintf>
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:89
  return bytes_left;
e00004a2:       40b2                    lw      ra,12(sp)
e00004a4:       6145                    addi    sp,sp,48
e00004a6:       8082                    ret

e00004a8 <base_vfprintf>:
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:532
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
e00004a8:                                                                    715d                       addi    sp,sp,-80
e00004aa:                                                                    c686                       sw      ra,76(sp)
e00004ac:                                                                    c4a2                       sw      s0,72(sp)
e00004ae:                                                                    c2a6                       sw      s1,68(sp)
e00004b0:                                                                    c0ca                       sw      s2,64(sp)
e00004b2:                                                                    de4e                       sw      s3,60(sp)
e00004b4:                                                                    dc52                       sw      s4,56(sp)
e00004b6:                                                                    da56                       sw      s5,52(sp)
e00004b8:                                                                    d85a                       sw      s6,48(sp)
e00004ba:                                                                    d65e                       sw      s7,44(sp)
e00004bc:                                                                    d462                       sw      s8,40(sp)
e00004be:                                                                    d266                       sw      s9,36(sp)
e00004c0:                                                                    d06a                       sw      s10,32(sp)
e00004c2:                                                                    ce6e                       sw      s11,28(sp)
e00004c4:                                                                    8cb2                       mv      s9,a2
e00004c6:                                                                    892a                       mv      s2,a0
e00004c8:                                                                    c436                       sw      a3,8(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:533
  if (out.sink == NULL) {
e00004ca:                                                                /-- c199                       beqz    a1,e00004d0 <base_vfprintf+0x28>
e00004cc:                                                                |   89ae                       mv      s3,a1
e00004ce:                                                             /--|-- a029                       j       e00004d8 <base_vfprintf+0x30>
e00004d0:                                                             |  \-> 00000997           auipc   s3,0x0
e00004d4:                                                             |      fa298993           addi    s3,s3,-94 # e0000472 <base_dev_null>
/proc/self/cwd/sw/device/lib/runtime/print.c:542
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
e00004d8:                                                             \----> c236                       sw      a3,4(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:545

  size_t bytes_written = 0;
  while (format[0] != '\0') {
e00004da:                                                                    000cc503           lbu     a0,0(s9)
e00004de:       /----------------------------------------------------------- 42050563           beqz    a0,e0000908 <base_vfprintf+0x460>
e00004e2:       |                                                            4a81                       li      s5,0
e00004e4:       |                                                            02500c13           li      s8,37
e00004e8:       |                                                            4d25                       li      s10,9
e00004ea:       |                                                            4a29                       li      s4,10
e00004ec:       |                                                            658d                       lui     a1,0x3
e00004ee:       |                                                            c2258593           addi    a1,a1,-990 # 2c22 <_min_stack+0xc22>
e00004f2:       |                                                            c02e                       sw      a1,0(sp)
e00004f4:       |        /-------------------------------------------------> 4481                       li      s1,0
consume_until_percent():
/proc/self/cwd/sw/device/lib/runtime/print.c:155
    if (c == '\0' || c == kPercent) {
e00004f6:       |        |                                               /-> 0ff57413           andi    s0,a0,255
e00004fa:       |        |                                            /--|-- 01840963           beq     s0,s8,e000050c <base_vfprintf+0x64>
e00004fe:       |        |                                            +--|-- c419                       beqz    s0,e000050c <base_vfprintf+0x64>
/proc/self/cwd/sw/device/lib/runtime/print.c:154
    char c = (*format)[text_len];
e0000500:       |        |                                            |  |   009c8533           add     a0,s9,s1
e0000504:       |        |                                            |  |   00154503           lbu     a0,1(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:162
    ++text_len;
e0000508:       |        |                                            |  |   0485                       addi    s1,s1,1
e000050a:       |        |                                            |  \-- b7f5                       j       e00004f6 <base_vfprintf+0x4e>
/proc/self/cwd/sw/device/lib/runtime/print.c:156
      if (text_len > 0) {
e000050c:       |        |                                            \--/-X c491                       beqz    s1,e0000518 <base_vfprintf+0x70>
/proc/self/cwd/sw/device/lib/runtime/print.c:157
        *bytes_written += out.sink(out.data, *format, text_len);
e000050e:       |        |                                               |   854a                       mv      a0,s2
e0000510:       |        |                                               |   85e6                       mv      a1,s9
e0000512:       |        |                                               |   8626                       mv      a2,s1
e0000514:       |        |                                               |   9982                       jalr    s3
e0000516:       |        |                                               |   9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:546
    if (!consume_until_percent(out, &format, &bytes_written)) {
e0000518:       |  /-----|-----------------------------------------------\-X 3e040963           beqz    s0,e000090a <base_vfprintf+0x462>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:195
  if ((*format)[0] == '!') {
e000051c:       |  |     |                                                   009c8533           add     a0,s9,s1
e0000520:       |  |     |                                                   00154603           lbu     a2,1(a0)
e0000524:       |  |     |                                                   02100713           li      a4,33
e0000528:       |  |     |                                            /----- 00e61863           bne     a2,a4,e0000538 <base_vfprintf+0x90>
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
e000052c:       |  |     |                                            |      00254583           lbu     a1,2(a0)
e0000530:       |  |     |                                            |      00250693           addi    a3,a0,2
e0000534:       |  |     |                                            |      4b05                       li      s6,1
e0000536:       |  |     |                                            |  /-- a029                       j       e0000540 <base_vfprintf+0x98>
e0000538:       |  |     |                                            \--|-> 4b01                       li      s6,0
e000053a:       |  |     |                                               |   00150693           addi    a3,a0,1
e000053e:       |  |     |                                               |   85b2                       mv      a1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
e0000540:       |  |  /--|-----------------------------------------------\-X 3a058b63           beqz    a1,e00008f6 <base_vfprintf+0x44e>
e0000544:       |  |  |  |                                                   4481                       li      s1,0
e0000546:       |  |  |  |                                                   4b81                       li      s7,0
e0000548:       |  |  |  |                                                   4501                       li      a0,0
e000054a:       |  |  |  |                                                   fdf60613           addi    a2,a2,-33
e000054e:       |  |  |  |                                                   00163d93           seqz    s11,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:213
    if (c < '0' || c > '9') {
e0000552:       |  |  |  |                                                   00168c93           addi    s9,a3,1
e0000556:       |  |  |  |                                      /----------> fd058613           addi    a2,a1,-48
e000055a:       |  |  |  |                                      |            0ff67613           andi    a2,a2,255
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
e000055e:       |  |  |  |                                      |            0ff5f593           andi    a1,a1,255
e0000562:       |  |  |  |                                   /--|----------- 02cd6b63           bltu    s10,a2,e0000598 <base_vfprintf+0xf0>
/proc/self/cwd/sw/device/lib/runtime/print.c:216
    if (spec->padding == 0) {
e0000566:       |  |  |  |                                   |  |            0ff57613           andi    a2,a0,255
e000056a:       |  |  |  |                                   |  |        /-- ca19                       beqz    a2,e0000580 <base_vfprintf+0xd8>
/proc/self/cwd/sw/device/lib/runtime/print.c:224
    spec->width *= 10;
e000056c:       |  |  |  |                                   |  |     /--|-> 03448633           mul     a2,s1,s4
/proc/self/cwd/sw/device/lib/runtime/print.c:225
    spec->width += (c - '0');
e0000570:       |  |  |  |                                   |  |     |  |   95b2                       add     a1,a1,a2
e0000572:       |  |  |  |                                   |  |     |  |   fd058493           addi    s1,a1,-48
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
e0000576:       |  |  |  |                                   |  |  /--|--|-> 000cc583           lbu     a1,0(s9)
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
e000057a:       |  |  |  |                                   |  |  |  |  |   0c85                       addi    s9,s9,1
e000057c:       |  |  |  |                                   |  \--|--|--|-- fde9                       bnez    a1,e0000556 <base_vfprintf+0xae>
e000057e:       |  |  +--|-----------------------------------|-----|--|--|-- aea5                       j       e00008f6 <base_vfprintf+0x44e>
e0000580:       |  |  |  |                                   |     |  |  \-> 02000b93           li      s7,32
e0000584:       |  |  |  |                                   |     |  |      03000613           li      a2,48
e0000588:       |  |  |  |                                   |     |  |      02000513           li      a0,32
e000058c:       |  |  |  |                                   |     |  \----- fec590e3           bne     a1,a2,e000056c <base_vfprintf+0xc4>
e0000590:       |  |  |  |                                   |     |         03000513           li      a0,48
e0000594:       |  |  |  |                                   |     |         8bb2                       mv      s7,a2
e0000596:       |  |  |  |                                   |     \-------- b7c5                       j       e0000576 <base_vfprintf+0xce>
/proc/self/cwd/sw/device/lib/runtime/print.c:229
  if ((spec->width == 0 && spec->padding != 0) || spec->width > 32) {
e0000598:       |  |  |  |                                   \-----------/-X c481                       beqz    s1,e00005a0 <base_vfprintf+0xf8>
e000059a:       |  |  |  |                                            /--|-- 00e4e763           bltu    s1,a4,e00005a8 <base_vfprintf+0x100>
e000059e:       |  |  |  |  /-----------------------------------------|--|-- a671                       j       e000092a <base_vfprintf+0x482>
e00005a0:       |  |  |  |  |                                         |  \-> 0ff57513           andi    a0,a0,255
e00005a4:       |  |  |  |  +-----------------------------------------|----- 38051363           bnez    a0,e000092a <base_vfprintf+0x482>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
e00005a8:       |  |  |  |  |                                         \----> fa858513           addi    a0,a1,-88
e00005ac:       |  |  |  |  |                                         /----- 04a76963           bltu    a4,a0,e00005fe <base_vfprintf+0x156>
e00005b0:       |  |  |  |  |                                         |      050a                       slli    a0,a0,0x2
e00005b2:       |  |  |  |  |                                         |      00000597           auipc   a1,0x0
e00005b6:       |  |  |  |  |                                         |      5ee58593           addi    a1,a1,1518 # e0000ba0 <rom_printf.kHexTable+0x12>
e00005ba:       |  |  |  |  |                                         |      952e                       add     a0,a0,a1
e00005bc:       |  |  |  |  |                                         |      4108                       lw      a0,0(a0)
e00005be:       |  |  |  |  |                                         |      8502                       jr      a0
/proc/self/cwd/sw/device/lib/runtime/print.c:408
      if (spec.is_nonstd) {
e00005c0:       |  |  |  |  |  /--------------------------------------|----- 2a0d9c63           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:411
      uint32_t value = va_arg(*args, uint32_t);
e00005c4:       |  |  |  |  |  |                                      |      4512                       lw      a0,4(sp)
e00005c6:       |  |  |  |  |  |                                      |      00450593           addi    a1,a0,4
e00005ca:       |  |  |  |  |  |                                      |      c22e                       sw      a1,4(sp)
e00005cc:       |  |  |  |  |  |                                      |      00052b03           lw      s6,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:412
      if (((int32_t)value) < 0) {
e00005d0:       |  |  |  |  |  |                                      |  /-- 000b5c63           bgez    s6,e00005e8 <base_vfprintf+0x140>
/proc/self/cwd/sw/device/lib/runtime/print.c:413
        *bytes_written += out.sink(out.data, "-", 1);
e00005d4:       |  |  |  |  |  |                                      |  |   00000597           auipc   a1,0x0
e00005d8:       |  |  |  |  |  |                                      |  |   66558593           addi    a1,a1,1637 # e0000c39 <rom_printf.kHexTable+0xab>
e00005dc:       |  |  |  |  |  |                                      |  |   4605                       li      a2,1
e00005de:       |  |  |  |  |  |                                      |  |   854a                       mv      a0,s2
e00005e0:       |  |  |  |  |  |                                      |  |   9982                       jalr    s3
e00005e2:       |  |  |  |  |  |                                      |  |   9aaa                       add     s5,s5,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:414
        value = -value;
e00005e4:       |  |  |  |  |  |                                      |  |   41600b33           neg     s6,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:417
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
e00005e8:       |  |  |  |  |  |                                      |  \-> 0ffbf713           andi    a4,s7,255
e00005ec:       |  |  |  |  |  |                                      |      00000817           auipc   a6,0x0
e00005f0:       |  |  |  |  |  |                                      |      66680813           addi    a6,a6,1638 # e0000c52 <kDigitsLow>
e00005f4:       |  |  |  |  |  |                                      |      47a9                       li      a5,10
e00005f6:       |  |  |  |  |  |                                      |      854a                       mv      a0,s2
e00005f8:       |  |  |  |  |  |                                      |      85ce                       mv      a1,s3
e00005fa:       |  |  |  |  |  |                                      |      865a                       mv      a2,s6
e00005fc:       |  |  |  |  |  |        /-----------------------------|----- a4a1                       j       e0000844 <base_vfprintf+0x39c>
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
e00005fe:       |  |  |  |  |  |        |                             \----> 04800513           li      a0,72
e0000602:       |  |  |  |  |  |        |                                /-- 02a58d63           beq     a1,a0,e000063c <base_vfprintf+0x194>
e0000606:       |  |  |  |  |  +--------|--------------------------------|-- 27859963           bne     a1,s8,e0000878 <base_vfprintf+0x3d0>
e000060a:       |  |  |  |  |  +--------|--------------------------------|-- 260d9763           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:379
      *bytes_written += out.sink(out.data, "%", 1);
e000060e:       |  |  |  |  |  |        |                                |   00000597           auipc   a1,0x0
e0000612:       |  |  |  |  |  |        |                                |   62958593           addi    a1,a1,1577 # e0000c37 <rom_printf.kHexTable+0xa9>
e0000616:       |  |  |  |  |  |        |                             /--|-- a851                       j       e00006aa <base_vfprintf+0x202>
/proc/self/cwd/sw/device/lib/runtime/print.c:461
      if (spec.is_nonstd) {
e0000618:       |  |  |  |  |  |        |                             |  +-- 020d8263           beqz    s11,e000063c <base_vfprintf+0x194>
/proc/self/cwd/sw/device/lib/runtime/print.c:462
        size_t len = va_arg(*args, size_t);
e000061c:       |  |  |  |  |  |        |                             |  |   4512                       lw      a0,4(sp)
e000061e:       |  |  |  |  |  |        |                             |  |   00450593           addi    a1,a0,4
e0000622:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
e0000624:       |  |  |  |  |  |        |                             |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:463
        char *value = va_arg(*args, char *);
e0000626:       |  |  |  |  |  |        |                             |  |   00850593           addi    a1,a0,8
e000062a:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
e000062c:       |  |  |  |  |  |        |                             |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:464
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
e000062e:       |  |  |  |  |  |        |                             |  |   0ffbf793           andi    a5,s7,255
e0000632:       |  |  |  |  |  |        |                             |  |   00000897           auipc   a7,0x0
e0000636:       |  |  |  |  |  |        |                             |  |   64d88893           addi    a7,a7,1613 # e0000c7f <kDigitsHigh>
e000063a:       |  |  |  |  |  |        |           /-----------------|--|-- a2d5                       j       e000081e <base_vfprintf+0x376>
/proc/self/cwd/sw/device/lib/runtime/print.c:470
      uint32_t value = va_arg(*args, uint32_t);
e000063c:       |  |  |  |  |  |        |           |                 |  \-> 4512                       lw      a0,4(sp)
e000063e:       |  |  |  |  |  |        |           |                 |      00450593           addi    a1,a0,4
e0000642:       |  |  |  |  |  |        |           |                 |      c22e                       sw      a1,4(sp)
e0000644:       |  |  |  |  |  |        |           |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:472
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsHigh);
e0000646:       |  |  |  |  |  |        |           |                 |      0ffbf713           andi    a4,s7,255
e000064a:       |  |  |  |  |  |        |           |                 |      00000817           auipc   a6,0x0
e000064e:       |  |  |  |  |  |        |           |                 |      63580813           addi    a6,a6,1589 # e0000c7f <kDigitsHigh>
e0000652:       |  |  |  |  |  |        |        /--|-----------------|----- a2f5                       j       e000083e <base_vfprintf+0x396>
/proc/self/cwd/sw/device/lib/runtime/print.c:486
      if (!spec.is_nonstd) {
e0000654:       |  |  |  |  |  +--------|--------|--|-----------------|----- 220d8263           beqz    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:489
      size_t len = va_arg(*args, size_t);
e0000658:       |  |  |  |  |  |        |        |  |                 |      4512                       lw      a0,4(sp)
e000065a:       |  |  |  |  |  |        |        |  |                 |      00450593           addi    a1,a0,4
e000065e:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
e0000660:       |  |  |  |  |  |        |        |  |                 |      4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:490
      char *value = va_arg(*args, char *);
e0000662:       |  |  |  |  |  |        |        |  |                 |      00850593           addi    a1,a0,8
e0000666:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
e0000668:       |  |  |  |  |  |        |        |  |                 |      4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:491
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
e000066a:       |  |  |  |  |  |        |        |  |                 |      0ffbf793           andi    a5,s7,255
e000066e:       |  |  |  |  |  |        |        |  |                 |      00000897           auipc   a7,0x0
e0000672:       |  |  |  |  |  |        |        |  |                 |      61188893           addi    a7,a7,1553 # e0000c7f <kDigitsHigh>
e0000676:       |  |  |  |  |  |        |     /--|--|-----------------|----- aadd                       j       e000086c <base_vfprintf+0x3c4>
e0000678:       |  |  |  |  |  |        |     |  |  |                 |      4512                       lw      a0,4(sp)
e000067a:       |  |  |  |  |  |        |     |  |  |                 |      00450593           addi    a1,a0,4
e000067e:       |  |  |  |  |  |        |     |  |  |                 |      c22e                       sw      a1,4(sp)
e0000680:       |  |  |  |  |  |        |     |  |  |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:505
      if (spec.is_nonstd) {
e0000682:       |  |  |  |  |  |        |  /--|--|--|-----------------|----- 200d8863           beqz    s11,e0000892 <base_vfprintf+0x3ea>
/proc/self/cwd/sw/device/lib/runtime/print.c:508
        if (va_arg(*args, int) != 0) {
e0000686:       |  |  |  |  |  |  /-----|--|--|--|--|-----------------|----- 26060263           beqz    a2,e00008ea <base_vfprintf+0x442>
/proc/self/cwd/sw/device/lib/runtime/print.c:509
          *bytes_written += out.sink(out.data, "true", 4);
e000068a:       |  |  |  |  |  |  |     |  |  |  |  |                 |      00000597           auipc   a1,0x0
e000068e:       |  |  |  |  |  |  |     |  |  |  |  |                 |      5b458593           addi    a1,a1,1460 # e0000c3e <rom_printf.kHexTable+0xb0>
e0000692:       |  |  |  |  |  |  |     |  |  |  |  |                 |      4611                       li      a2,4
e0000694:       |  |  |  |  |  |  |  /--|--|--|--|--|-----------------|----- a2fd                       j       e0000882 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:383
      if (spec.is_nonstd) {
e0000696:       |  |  |  |  |  +--|--|--|--|--|--|--|-----------------|----- 1e0d9163           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:386
      char value = (char)va_arg(*args, uint32_t);
e000069a:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4512                       lw      a0,4(sp)
e000069c:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00450593           addi    a1,a0,4
e00006a0:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      c22e                       sw      a1,4(sp)
e00006a2:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4108                       lw      a0,0(a0)
e00006a4:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00a10a23           sb      a0,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:387
      *bytes_written += out.sink(out.data, &value, 1);
e00006a8:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      084c                       addi    a1,sp,20
e00006aa:       |  |  |  |  |  |  |  |  |  |  |  |  |                 \----> 4605                       li      a2,1
e00006ac:       |  |  |  |  |  |  |  +--|--|--|--|--|----------------------- aad9                       j       e0000882 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:421
      if (spec.is_nonstd) {
e00006ae:       |  |  |  |  |  +--|--|--|--|--|--|--|----------------------- 1c0d9563           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:424
      uint32_t value = va_arg(*args, uint32_t);
e00006b2:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4512                       lw      a0,4(sp)
e00006b4:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00450593           addi    a1,a0,4
e00006b8:       |  |  |  |  |  |  |  |  |  |  |  |  |                        c22e                       sw      a1,4(sp)
e00006ba:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:426
          write_digits(out, value, spec.width, spec.padding, 8, kDigitsLow);
e00006bc:       |  |  |  |  |  |  |  |  |  |  |  |  |                        0ffbf713           andi    a4,s7,255
e00006c0:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00000817           auipc   a6,0x0
e00006c4:       |  |  |  |  |  |  |  |  |  |  |  |  |                        59280813           addi    a6,a6,1426 # e0000c52 <kDigitsLow>
e00006c8:       |  |  |  |  |  |  |  |  |  |  |  |  |                        47a1                       li      a5,8
e00006ca:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------------- aa9d                       j       e0000840 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:430
      if (spec.is_nonstd) {
e00006cc:       |  |  |  |  |  +--|--|--|--|--|--|--|--|-------------------- 1a0d9663           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
e00006d0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00000597           auipc   a1,0x0
e00006d4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     56b58593           addi    a1,a1,1387 # e0000c3b <rom_printf.kHexTable+0xad>
e00006d8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4609                       li      a2,2
e00006da:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
e00006dc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:440
      uintptr_t value = va_arg(*args, uintptr_t);
e00006de:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4592                       lw      a1,4(sp)
e00006e0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00458613           addi    a2,a1,4
e00006e4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     c232                       sw      a2,4(sp)
e00006e6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4190                       lw      a2,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
e00006e8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     01550433           add     s0,a0,s5
/proc/self/cwd/sw/device/lib/runtime/print.c:442
          write_digits(out, value, sizeof(uintptr_t) * 2, '0', 16, kDigitsLow);
e00006ec:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00000817           auipc   a6,0x0
e00006f0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     56680813           addi    a6,a6,1382 # e0000c52 <kDigitsLow>
e00006f4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     46a1                       li      a3,8
e00006f6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     03000713           li      a4,48
e00006fa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     47c1                       li      a5,16
e00006fc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
e00006fe:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     85ce                       mv      a1,s3
e0000700:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     2e29                       jal     e0000a1a <write_digits>
/proc/self/cwd/sw/device/lib/runtime/print.c:441
      *bytes_written +=
e0000702:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00a40ab3           add     s5,s0,a0
e0000706:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  /----------------- a249                       j       e0000888 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:521
      status_t value = va_arg(*args, status_t);
e0000708:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4512                       lw      a0,4(sp)
e000070a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00450593           addi    a1,a0,4
e000070e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  c22e                       sw      a1,4(sp)
e0000710:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4108                       lw      a0,0(a0)
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:280
  char mod[] = {'"', 0, 0, 0, '"', ','};
e0000712:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4582                       lw      a1,0(sp)
e0000714:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00b11c23           sh      a1,24(sp)
e0000718:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  02200593           li      a1,34
e000071c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  ca2e                       sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
e000071e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  006c                       addi    a1,sp,12
e0000720:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  0810                       addi    a2,sp,16
e0000722:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  01510693           addi    a3,sp,21
e0000726:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  2e8d                       jal     e0000a98 <status_extract>
/proc/self/cwd/sw/device/lib/runtime/print.c:286
  const char *end = start;
e0000728:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
e000072a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  8baa                       mv      s7,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
e000072c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  fff58413           addi    s0,a1,-1
e0000730:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              /-> 0005c503           lbu     a0,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:288
    end++;
e0000734:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
e0000736:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0405                       addi    s0,s0,1
e0000738:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              \-- fd65                       bnez    a0,e0000730 <base_vfprintf+0x288>
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
e000073a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  001d9613           slli    a2,s11,0x1
e000073e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00000597           auipc   a1,0x0
e0000742:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  50b58593           addi    a1,a1,1291 # e0000c49 <rom_printf.kHexTable+0xbb>
e0000746:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
e0000748:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
e000074a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
e000074c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  84aa                       mv      s1,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
e000074e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  40b40633           sub     a2,s0,a1
e0000752:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
e0000754:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
e0000756:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:293
  len += out.sink(out.data, "\"", as_json ? 1 : 0);
e000075a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00000597           auipc   a1,0x0
e000075e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4f058593           addi    a1,a1,1264 # e0000c4a <rom_printf.kHexTable+0xbc>
e0000762:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
e0000764:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  865a                       mv      a2,s6
e0000766:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
e0000768:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:295
  len += out.sink(out.data, ":", 1);
e000076a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00000597           auipc   a1,0x0
e000076e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4c258593           addi    a1,a1,1218 # e0000c2c <rom_printf.kHexTable+0x9e>
e0000772:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4605                       li      a2,1
e0000774:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
e0000776:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
e0000778:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00a404b3           add     s1,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:296
  if (err) {
e000077c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------- 120b8363           beqz    s7,e00008a2 <base_vfprintf+0x3fa>
/proc/self/cwd/sw/device/lib/runtime/print.c:298
    len += out.sink(out.data, "[", 1);
e0000780:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00000597           auipc   a1,0x0
e0000784:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4cc58593           addi    a1,a1,1228 # e0000c4c <rom_printf.kHexTable+0xbe>
e0000788:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
e000078a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
e000078c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
e000078e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
e0000792:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               084c                       addi    a1,sp,20
e0000794:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4619                       li      a2,6
e0000796:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
e0000798:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
e000079a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4642                       lw      a2,16(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
e000079c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
e000079e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00000817           auipc   a6,0x0
e00007a2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4b480813           addi    a6,a6,1204 # e0000c52 <kDigitsLow>
e00007a6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               47a9                       li      a5,10
e00007a8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
e00007aa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               85ce                       mv      a1,s3
e00007ac:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4681                       li      a3,0
e00007ae:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4701                       li      a4,0
e00007b0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               24ad                       jal     e0000a1a <write_digits>
e00007b2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:301
    len += out.sink(out.data, "]", 1);
e00007b4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00000597           auipc   a1,0x0
e00007b8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               49a58593           addi    a1,a1,1178 # e0000c4e <rom_printf.kHexTable+0xc0>
e00007bc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
e00007be:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
e00007c0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
e00007c2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
e00007c4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-------- a8e5                       j       e00008bc <base_vfprintf+0x414>
e00007c6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         4512                       lw      a0,4(sp)
e00007c8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         00450593           addi    a1,a0,4
e00007cc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         c22e                       sw      a1,4(sp)
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:392
      if (spec.is_nonstd) {
e00007ce:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /--|-------- 100d8363           beqz    s11,e00008d4 <base_vfprintf+0x42c>
/proc/self/cwd/sw/device/lib/runtime/print.c:394
        len = va_arg(*args, size_t);
e00007d2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
e00007d4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00850593           addi    a1,a0,8
e00007d8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
e00007da:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         414c                       lw      a1,4(a0)
e00007dc:       |  |  |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|-------- a05d                       j       e0000882 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:496
      if (spec.is_nonstd) {
e00007de:       |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|--|--|-------- 080d9d63           bnez    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:499
      uint32_t value = va_arg(*args, uint32_t);
e00007e2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4512                       lw      a0,4(sp)
e00007e4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00450593           addi    a1,a0,4
e00007e8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
e00007ea:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:501
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
e00007ec:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         0ffbf713           andi    a4,s7,255
e00007f0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00000817           auipc   a6,0x0
e00007f4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         46280813           addi    a6,a6,1122 # e0000c52 <kDigitsLow>
e00007f8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         47a9                       li      a5,10
e00007fa:       |  |  |  |  |  |  |  |  |  |  |  |  |  +--|--|--|--|-------- a099                       j       e0000840 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:446
      if (spec.is_nonstd) {
e00007fc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 020d8663           beqz    s11,e0000828 <base_vfprintf+0x380>
/proc/self/cwd/sw/device/lib/runtime/print.c:447
        size_t len = va_arg(*args, size_t);
e0000800:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4512                       lw      a0,4(sp)
e0000802:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00450593           addi    a1,a0,4
e0000806:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
e0000808:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:448
        char *value = va_arg(*args, char *);
e000080a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00850593           addi    a1,a0,8
e000080e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
e0000810:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:449
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
e0000812:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0ffbf793           andi    a5,s7,255
e0000816:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00000897           auipc   a7,0x0
e000081a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   43c88893           addi    a7,a7,1084 # e0000c52 <kDigitsLow>
e000081e:       |  |  |  |  |  |  |  |  |  |  |  |  \--|--|--|--|--|-----|-> 4805                       li      a6,1
e0000820:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   854a                       mv      a0,s2
e0000822:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   85ce                       mv      a1,s3
e0000824:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   8726                       mv      a4,s1
e0000826:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  /--|-- a0b9                       j       e0000874 <base_vfprintf+0x3cc>
/proc/self/cwd/sw/device/lib/runtime/print.c:455
      uint32_t value = va_arg(*args, uint32_t);
e0000828:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |  \-> 4512                       lw      a0,4(sp)
e000082a:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00450593           addi    a1,a0,4
e000082e:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      c22e                       sw      a1,4(sp)
e0000830:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:457
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsLow);
e0000832:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      0ffbf713           andi    a4,s7,255
e0000836:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00000817           auipc   a6,0x0
e000083a:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      41c80813           addi    a6,a6,1052 # e0000c52 <kDigitsLow>
e000083e:       |  |  |  |  |  |  |  |  |  |  |  \-----|--|--|--|--|--|----> 47c1                       li      a5,16
e0000840:       |  |  |  |  |  |  |  |  |  |  |        >--|--|--|--|--|----> 854a                       mv      a0,s2
e0000842:       |  |  |  |  |  |  |  |  |  |  |        |  |  |  |  |  |      85ce                       mv      a1,s3
e0000844:       |  |  |  |  |  |  |  |  \--|--|--------|--|--|--|--|--|----> 86a6                       mv      a3,s1
e0000846:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |      2ad1                       jal     e0000a1a <write_digits>
e0000848:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  /-- a83d                       j       e0000886 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:476
      if (!spec.is_nonstd) {
e000084a:       |  |  |  |  |  +--|--|-----|--|--------|--|--|--|--|--|--|-- 020d8763           beqz    s11,e0000878 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:479
      size_t len = va_arg(*args, size_t);
e000084e:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4512                       lw      a0,4(sp)
e0000850:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00450593           addi    a1,a0,4
e0000854:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
e0000856:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:480
      char *value = va_arg(*args, char *);
e0000858:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00850593           addi    a1,a0,8
e000085c:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
e000085e:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:481
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
e0000860:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   0ffbf793           andi    a5,s7,255
e0000864:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00000897           auipc   a7,0x0
e0000868:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   3ee88893           addi    a7,a7,1006 # e0000c52 <kDigitsLow>
e000086c:       |  |  |  |  |  |  |  |     |  \--------|--|--|--|--|--|--|-> 854a                       mv      a0,s2
e000086e:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   85ce                       mv      a1,s3
e0000870:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   8726                       mv      a4,s1
e0000872:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   4801                       li      a6,0
e0000874:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  \--|-> 20c9                       jal     e0000936 <hex_dump>
e0000876:       |  |  |  |  |  |  |  |     |           |  |  |  |  |     +-- a801                       j       e0000886 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:527
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
e0000878:       |  |  |  |  |  \--|--|-----|-----------|--|--|--|--|-----|-> 00000597           auipc   a1,0x0
e000087c:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   41758593           addi    a1,a1,1047 # e0000c8f <kUnknownSpec>
e0000880:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   463d                       li      a2,15
e0000882:       |  |  |  |  |     |  >-----|-----------|--|--|--|--|-----|-> 854a                       mv      a0,s2
e0000884:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   9982                       jalr    s3
e0000886:       |  |  |  |  |     |  |     |           |  |  |  |  |     \-> 9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:545
  while (format[0] != '\0') {
e0000888:       |  |  |  |  |     |  |     |           |  >--|--|--|-------> 000cc503           lbu     a0,0(s9)
e000088c:       |  |  |  \--|-----|--|-----|-----------|--|--|--|--|-------- c60514e3           bnez    a0,e00004f4 <base_vfprintf+0x4c>
e0000890:       |  +--|-----|-----|--|-----|-----------|--|--|--|--|-------- a8ad                       j       e000090a <base_vfprintf+0x462>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:517
          write_digits(out, value, spec.width, spec.padding, 2, kDigitsLow);
e0000892:       |  |  |     |     |  |     \-----------|--|--|--|--|-------> 0ffbf713           andi    a4,s7,255
e0000896:       |  |  |     |     |  |                 |  |  |  |  |         00000817           auipc   a6,0x0
e000089a:       |  |  |     |     |  |                 |  |  |  |  |         3bc80813           addi    a6,a6,956 # e0000c52 <kDigitsLow>
e000089e:       |  |  |     |     |  |                 |  |  |  |  |         4789                       li      a5,2
e00008a0:       |  |  |     |     |  |                 \--|--|--|--|-------- b745                       j       e0000840 <base_vfprintf+0x398>
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:304
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
e00008a2:       |  |  |     |     |  |                    |  \--|--|-------> 4642                       lw      a2,16(sp)
e00008a4:       |  |  |     |     |  |                    |     |  |         00000817           auipc   a6,0x0
e00008a8:       |  |  |     |     |  |                    |     |  |         3ae80813           addi    a6,a6,942 # e0000c52 <kDigitsLow>
e00008ac:       |  |  |     |     |  |                    |     |  |         47a9                       li      a5,10
e00008ae:       |  |  |     |     |  |                    |     |  |         854a                       mv      a0,s2
e00008b0:       |  |  |     |     |  |                    |     |  |         85ce                       mv      a1,s3
e00008b2:       |  |  |     |     |  |                    |     |  |         4681                       li      a3,0
e00008b4:       |  |  |     |     |  |                    |     |  |         4701                       li      a4,0
e00008b6:       |  |  |     |     |  |                    |     |  |         2295                       jal     e0000a1a <write_digits>
e00008b8:       |  |  |     |     |  |                    |     |  |         00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:306
  len += out.sink(out.data, "}", as_json ? 1 : 0);
e00008bc:       |  |  |     |     |  |                    |     |  \-------> 00000597           auipc   a1,0x0
e00008c0:       |  |  |     |     |  |                    |     |            39458593           addi    a1,a1,916 # e0000c50 <rom_printf.kHexTable+0xc2>
e00008c4:       |  |  |     |     |  |                    |     |            854a                       mv      a0,s2
e00008c6:       |  |  |     |     |  |                    |     |            865a                       mv      a2,s6
e00008c8:       |  |  |     |     |  |                    |     |            9982                       jalr    s3
e00008ca:       |  |  |     |     |  |                    |     |            015405b3           add     a1,s0,s5
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:522
      *bytes_written += write_status(out, value, spec.is_nonstd);
e00008ce:       |  |  |     |     |  |                    |     |            00a58ab3           add     s5,a1,a0
e00008d2:       |  |  |     |     |  |                    \-----|----------- bf5d                       j       e0000888 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
e00008d4:       |  |  |     |     |  |                          \----------> 410c                       lw      a1,0(a0)
e00008d6:       |  |  |     |     |  |                                       4501                       li      a0,0
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
e00008d8:       |  |  |     |     |  |                                   /-> 00a58633           add     a2,a1,a0
e00008dc:       |  |  |     |     |  |                                   |   00064603           lbu     a2,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:400
        ++len;
e00008e0:       |  |  |     |     |  |                                   |   0505                       addi    a0,a0,1
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
e00008e2:       |  |  |     |     |  |                                   \-- fa7d                       bnez    a2,e00008d8 <base_vfprintf+0x430>
/proc/self/cwd/sw/device/lib/runtime/print.c:403
      *bytes_written += out.sink(out.data, value, len);
e00008e4:       |  |  |     |     |  |                                       fff50613           addi    a2,a0,-1
e00008e8:       |  |  |     |     |  +-------------------------------------- bf69                       j       e0000882 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:511
          *bytes_written += out.sink(out.data, "false", 5);
e00008ea:       |  |  |     |     \--|-------------------------------------> 00000597           auipc   a1,0x0
e00008ee:       |  |  |     |        |                                       35958593           addi    a1,a1,857 # e0000c43 <rom_printf.kHexTable+0xb5>
e00008f2:       |  |  |     |        |                                       4615                       li      a2,5
e00008f4:       |  |  |     |        \-------------------------------------- b779                       j       e0000882 <base_vfprintf+0x3da>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:210
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
e00008f6:       |  |  \-----|----------------------------------------------> 00000597           auipc   a1,0x0
e00008fa:       |  |        |                                                36c58593           addi    a1,a1,876 # e0000c62 <kErrorNul>
e00008fe:       |  |        |                                                4645                       li      a2,17
e0000900:       |  |        |                                            /-> 854a                       mv      a0,s2
e0000902:       |  |        |                                            |   9982                       jalr    s3
e0000904:       |  |        |                                            |   9aaa                       add     s5,s5,a0
e0000906:       |  +--------|--------------------------------------------|-- a011                       j       e000090a <base_vfprintf+0x462>
e0000908:       \--|--------|--------------------------------------------|-> 4a81                       li      s5,0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:558

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
e000090a:          \--------|--------------------------------------------|-> 8556                       mv      a0,s5
e000090c:                   |                                            |   4df2                       lw      s11,28(sp)
e000090e:                   |                                            |   5d02                       lw      s10,32(sp)
e0000910:                   |                                            |   5c92                       lw      s9,36(sp)
e0000912:                   |                                            |   5c22                       lw      s8,40(sp)
e0000914:                   |                                            |   5bb2                       lw      s7,44(sp)
e0000916:                   |                                            |   5b42                       lw      s6,48(sp)
e0000918:                   |                                            |   5ad2                       lw      s5,52(sp)
e000091a:                   |                                            |   5a62                       lw      s4,56(sp)
e000091c:                   |                                            |   59f2                       lw      s3,60(sp)
e000091e:                   |                                            |   4906                       lw      s2,64(sp)
e0000920:                   |                                            |   4496                       lw      s1,68(sp)
e0000922:                   |                                            |   4426                       lw      s0,72(sp)
e0000924:                   |                                            |   40b6                       lw      ra,76(sp)
e0000926:                   |                                            |   6161                       addi    sp,sp,80
e0000928:                   |                                            |   8082                       ret
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:230
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
e000092a:                   \--------------------------------------------|-> 00000597           auipc   a1,0x0
e000092e:                                                                |   34958593           addi    a1,a1,841 # e0000c73 <kErrorTooWide>
e0000932:                                                                |   4631                       li      a2,12
e0000934:                                                                \-- b7f1                       j       e0000900 <base_vfprintf+0x458>

e0000936 <hex_dump>:
hex_dump():
/proc/self/cwd/sw/device/lib/runtime/print.c:326
                       const char *glyphs) {
e0000936:                    715d                       addi    sp,sp,-80
e0000938:                    c686                       sw      ra,76(sp)
e000093a:                    c4a2                       sw      s0,72(sp)
e000093c:                    c2a6                       sw      s1,68(sp)
e000093e:                    c0ca                       sw      s2,64(sp)
e0000940:                    de4e                       sw      s3,60(sp)
e0000942:                    dc52                       sw      s4,56(sp)
e0000944:                    da56                       sw      s5,52(sp)
e0000946:                    d85a                       sw      s6,48(sp)
e0000948:                    d65e                       sw      s7,44(sp)
e000094a:                    d462                       sw      s8,40(sp)
e000094c:                    d266                       sw      s9,36(sp)
e000094e:                    d06a                       sw      s10,32(sp)
e0000950:                    8bc6                       mv      s7,a7
e0000952:                    8a42                       mv      s4,a6
e0000954:                    8b36                       mv      s6,a3
e0000956:                    8ab2                       mv      s5,a2
e0000958:                    892e                       mv      s2,a1
e000095a:                    89aa                       mv      s3,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:330
  if (len < width) {
e000095c:          /-------- 02e6fc63           bgeu    a3,a4,e0000994 <hex_dump+0x5e>
/proc/self/cwd/sw/device/lib/runtime/print.c:331
    width -= len;
e0000960:          |         416704b3           sub     s1,a4,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:332
    memset(buf, padding, sizeof(buf));
e0000964:          |         850a                       mv      a0,sp
e0000966:          |         02000613           li      a2,32
e000096a:          |         85be                       mv      a1,a5
e000096c:          |         2a79                       jal     e0000b0a <memset>
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
e000096e:          +-------- c09d                       beqz    s1,e0000994 <hex_dump+0x5e>
e0000970:          |         4c01                       li      s8,0
e0000972:          |  /----> 02000513           li      a0,32
e0000976:          |  |      8426                       mv      s0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:334
      size_t to_write = width > ARRAYSIZE(buf) ? 32 : width;
e0000978:          |  |  /-- 00a4e463           bltu    s1,a0,e0000980 <hex_dump+0x4a>
e000097c:          |  |  |   02000413           li      s0,32
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
e0000980:          |  |  \-> 858a                       mv      a1,sp
e0000982:          |  |      854e                       mv      a0,s3
e0000984:          |  |      8622                       mv      a2,s0
e0000986:          |  |      9902                       jalr    s2
/proc/self/cwd/sw/device/lib/runtime/print.c:336
      width -= to_write;
e0000988:          |  |      8c81                       sub     s1,s1,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
e000098a:          |  |      9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
e000098c:          |  \----- f0fd                       bnez    s1,e0000972 <hex_dump+0x3c>
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
e000098e:          |     /-- 000b1663           bnez    s6,e000099a <hex_dump+0x64>
e0000992:       /--|-----|-- a0ad                       j       e00009fc <hex_dump+0xc6>
e0000994:       |  \-----|-> 4c01                       li      s8,0
e0000996:       +--------|-- 060b0363           beqz    s6,e00009fc <hex_dump+0xc6>
e000099a:       |        \-> 4401                       li      s0,0
e000099c:       |            4601                       li      a2,0
e000099e:       |            fffb0493           addi    s1,s6,-1
e00009a2:       |            8b0a                       mv      s6,sp
e00009a4:       |            02000c93           li      s9,32
e00009a8:       |            5d7d                       li      s10,-1
e00009aa:       |     /----> 8526                       mv      a0,s1
e00009ac:       |     |  /-- 000a1363           bnez    s4,e00009b2 <hex_dump+0x7c>
e00009b0:       |     |  |   8522                       mv      a0,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:342
    buf[buffered] = glyphs[(bytes[idx] >> 4) & 0xf];
e00009b2:       |     |  \-> 9556                       add     a0,a0,s5
e00009b4:       |     |      00054503           lbu     a0,0(a0)
e00009b8:       |     |      00455593           srli    a1,a0,0x4
e00009bc:       |     |      95de                       add     a1,a1,s7
e00009be:       |     |      00058583           lb      a1,0(a1)
e00009c2:       |     |      00cb06b3           add     a3,s6,a2
e00009c6:       |     |      00b68023           sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
e00009ca:       |     |      893d                       andi    a0,a0,15
e00009cc:       |     |      955e                       add     a0,a0,s7
e00009ce:       |     |      00050503           lb      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:344
    buffered += 2;
e00009d2:       |     |      0609                       addi    a2,a2,2
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
e00009d4:       |     |      00a680a3           sb      a0,1(a3)
e00009d8:       |     |  /-- 01961963           bne     a2,s9,e00009ea <hex_dump+0xb4>
/proc/self/cwd/sw/device/lib/runtime/print.c:347
      bytes_written += out.sink(out.data, buf, buffered);
e00009dc:       |     |  |   858a                       mv      a1,sp
e00009de:       |     |  |   02000613           li      a2,32
e00009e2:       |     |  |   854e                       mv      a0,s3
e00009e4:       |     |  |   9902                       jalr    s2
e00009e6:       |     |  |   4601                       li      a2,0
e00009e8:       |     |  |   9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
e00009ea:       |     |  \-> 14fd                       addi    s1,s1,-1
e00009ec:       |     |      0405                       addi    s0,s0,1
e00009ee:       |     \----- fba49ee3           bne     s1,s10,e00009aa <hex_dump+0x74>
/proc/self/cwd/sw/device/lib/runtime/print.c:352
  if (buffered != 0) {
e00009f2:       +----------- c609                       beqz    a2,e00009fc <hex_dump+0xc6>
/proc/self/cwd/sw/device/lib/runtime/print.c:353
    bytes_written += out.sink(out.data, buf, buffered);
e00009f4:       |            858a                       mv      a1,sp
e00009f6:       |            854e                       mv      a0,s3
e00009f8:       |            9902                       jalr    s2
e00009fa:       |            9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:355
  return bytes_written;
e00009fc:       \----------> 8562                       mv      a0,s8
e00009fe:                    5d02                       lw      s10,32(sp)
e0000a00:                    5c92                       lw      s9,36(sp)
e0000a02:                    5c22                       lw      s8,40(sp)
e0000a04:                    5bb2                       lw      s7,44(sp)
e0000a06:                    5b42                       lw      s6,48(sp)
e0000a08:                    5ad2                       lw      s5,52(sp)
e0000a0a:                    5a62                       lw      s4,56(sp)
e0000a0c:                    59f2                       lw      s3,60(sp)
e0000a0e:                    4906                       lw      s2,64(sp)
e0000a10:                    4496                       lw      s1,68(sp)
e0000a12:                    4426                       lw      s0,72(sp)
e0000a14:                    40b6                       lw      ra,76(sp)
e0000a16:                    6161                       addi    sp,sp,80
e0000a18:                    8082                       ret

e0000a1a <write_digits>:
write_digits():
/proc/self/cwd/sw/device/lib/runtime/print.c:252
                           char padding, uint32_t base, const char *glyphs) {
e0000a1a:              7179                     addi    sp,sp,-48
e0000a1c:              d606                     sw      ra,44(sp)
e0000a1e:              88ae                     mv      a7,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:259
  if (value == 0) {
e0000a20:       /----- ca05                     beqz    a2,e0000a50 <write_digits+0x36>
e0000a22:       |      4381                     li      t2,0
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
e0000a24:       |      02b10293                 addi    t0,sp,43
e0000a28:       |  /-> 8332                     mv      t1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:265
    value /= base;
e0000a2a:       |  |   02f65633                 divu    a2,a2,a5
e0000a2e:       |  |   02f605b3                 mul     a1,a2,a5
e0000a32:       |  |   40b305b3                 sub     a1,t1,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:266
    buffer[kWordBits - 1 - len] = glyphs[digit];
e0000a36:       |  |   95c2                     add     a1,a1,a6
e0000a38:       |  |   00058e03                 lb      t3,0(a1)
e0000a3c:       |  |   007285b3                 add     a1,t0,t2
e0000a40:       |  |   01c58023                 sb      t3,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
e0000a44:       |  |   13fd                     addi    t2,t2,-1
e0000a46:       |  \-- fef371e3                 bgeu    t1,a5,e0000a28 <write_digits+0xe>
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
e0000a4a:       |      40700633                 neg     a2,t2
e0000a4e:       |  /-- a031                     j       e0000a5a <write_digits+0x40>
/proc/self/cwd/sw/device/lib/runtime/print.c:260
    buffer[kWordBits - 1] = glyphs[0];
e0000a50:       \--|-> 00080583                 lb      a1,0(a6)
e0000a54:          |   02b105a3                 sb      a1,43(sp)
e0000a58:          |   4605                     li      a2,1
e0000a5a:          \-> 4585                     li      a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
e0000a5c:          /-- c291                     beqz    a3,e0000a60 <write_digits+0x46>
e0000a5e:          |   85b6                     mv      a1,a3
e0000a60:          \-> 02000693                 li      a3,32
/proc/self/cwd/sw/device/lib/runtime/print.c:270
  width = width > kWordBits ? kWordBits : width;
e0000a64:          /-- 00d5e463                 bltu    a1,a3,e0000a6c <write_digits+0x52>
e0000a68:          |   02000593                 li      a1,32
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
e0000a6c:       /--\-X 00b67e63                 bgeu    a2,a1,e0000a88 <write_digits+0x6e>
e0000a70:       |      40c586b3                 sub     a3,a1,a2
e0000a74:       |      007c                     addi    a5,sp,12
e0000a76:       |      40c78633                 sub     a2,a5,a2
e0000a7a:       |      067d                     addi    a2,a2,31
/proc/self/cwd/sw/device/lib/runtime/print.c:272
    buffer[kWordBits - len - 1] = padding;
e0000a7c:       |  /-> 00e60023                 sb      a4,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
e0000a80:       |  |   16fd                     addi    a3,a3,-1
e0000a82:       |  |   167d                     addi    a2,a2,-1
e0000a84:       |  \-- fee5                     bnez    a3,e0000a7c <write_digits+0x62>
e0000a86:       |      862e                     mv      a2,a1
e0000a88:       \----> 006c                     addi    a1,sp,12
/proc/self/cwd/sw/device/lib/runtime/print.c:275
  return out.sink(out.data, buffer + (kWordBits - len), len);
e0000a8a:              8d91                     sub     a1,a1,a2
e0000a8c:              02058593                 addi    a1,a1,32
e0000a90:              9882                     jalr    a7
/proc/self/cwd/sw/device/lib/runtime/print.c:276
}
e0000a92:              50b2                     lw      ra,44(sp)
e0000a94:              6145                     addi    sp,sp,48
e0000a96:              8082                     ret

e0000a98 <status_extract>:
status_err():
/proc/self/cwd/./sw/device/lib/base/status.h:150
 *
 * @param s The status code.
 * @return `absl_status_t` contained within the status_t.
 */
OT_ALWAYS_INLINE absl_status_t status_err(status_t s) {
  return s.value < 0
e0000a98:              00052813                 slti    a6,a0,0
e0000a9c:              41f55793                 srai    a5,a0,0x1f
e0000aa0:              8fe9                     and     a5,a5,a0
e0000aa2:              8bfd                     andi    a5,a5,31
e0000aa4:              0017b713                 seqz    a4,a5
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:103
    "ErrorError",
};

bool status_extract(status_t s, const char **code, int32_t *arg, char *mod_id) {
  size_t err = (size_t)status_err(s);
  if (s.value < 0 && err == 0) {
e0000aa8:              00e87833                 and     a6,a6,a4
e0000aac:              02000713                 li      a4,32
e0000ab0:          /-- 00081363                 bnez    a6,e0000ab6 <status_extract+0x1e>
e0000ab4:          |   873e                     mv      a4,a5
/proc/self/cwd/sw/device/lib/base/status.c:106
    err = sizeof(status_codes) / sizeof(status_codes[0]) - 1;
  }
  *code = status_codes[err];
e0000ab6:          \-> 00271813                 slli    a6,a4,0x2
e0000aba:              00000797                 auipc   a5,0x0
e0000abe:              37a78793                 addi    a5,a5,890 # e0000e34 <status_codes>
e0000ac2:              97c2                     add     a5,a5,a6
e0000ac4:              439c                     lw      a5,0(a5)
e0000ac6:              c19c                     sw      a5,0(a1)
/proc/self/cwd/sw/device/lib/base/status.c:107
  if (err) {
e0000ac8:              00173593                 seqz    a1,a4
e0000acc:       /----- cb1d                     beqz    a4,e0000b02 <status_extract+0x6a>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
e0000ace:       |      00555713                 srli    a4,a0,0x5
e0000ad2:       |      7ff77713                 andi    a4,a4,2047
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:108
    *arg = (int32_t)bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_ARG);
e0000ad6:       |      c218                     sw      a4,0(a2)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
e0000ad8:       |      01055613                 srli    a2,a0,0x10
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:111
    uint32_t module_id =
        bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_MODULE_ID);
    *mod_id++ = '@' + ((module_id >> 0) & 0x1F);
e0000adc:       |      8a7d                     andi    a2,a2,31
e0000ade:       |      04066613                 ori     a2,a2,64
e0000ae2:       |      00c68023                 sb      a2,0(a3)
/proc/self/cwd/sw/device/lib/base/status.c:112
    *mod_id++ = '@' + ((module_id >> 5) & 0x1F);
e0000ae6:       |      01555613                 srli    a2,a0,0x15
e0000aea:       |      8a7d                     andi    a2,a2,31
e0000aec:       |      04066613                 ori     a2,a2,64
e0000af0:       |      00c680a3                 sb      a2,1(a3)
/proc/self/cwd/sw/device/lib/base/status.c:113
    *mod_id++ = '@' + ((module_id >> 10) & 0x1F);
e0000af4:       |      8169                     srli    a0,a0,0x1a
e0000af6:       |      897d                     andi    a0,a0,31
e0000af8:       |      04056513                 ori     a0,a0,64
e0000afc:       |      00a68123                 sb      a0,2(a3)
e0000b00:       |  /-- a011                     j       e0000b04 <status_extract+0x6c>
/proc/self/cwd/sw/device/lib/base/status.c:116
    return true;
  } else {
    *arg = s.value;
e0000b02:       \--|-> c208                     sw      a0,0(a2)
/proc/self/cwd/sw/device/lib/base/status.c:119
    return false;
  }
}
e0000b04:          \-> 0015c513                 xori    a0,a1,1
e0000b08:              8082                     ret

e0000b0a <memset>:
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:82
    dest8[i] = src8[i];
  }
  return dest;
}

void *OT_PREFIX_IF_NOT_RV32(memset)(void *dest, int value, size_t len) {
e0000b0a:                 4691                  li      a3,4
e0000b0c:                 8732                  mv      a4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
e0000b0e:             /-- 00d66663              bltu    a2,a3,e0000b1a <memset+0x10>
e0000b12:             |   40a006b3              neg     a3,a0
e0000b16:             |   0036f713              andi    a4,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
e0000b1a:             \-> 40e606b3              sub     a3,a2,a4
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
e0000b1e:                 ffc6f813              andi    a6,a3,-4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:89
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(dest, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
e0000b22:          /----- cb01                  beqz    a4,e0000b32 <memset+0x28>
e0000b24:          |      87aa                  mv      a5,a0
e0000b26:          |      86ba                  mv      a3,a4
/proc/self/cwd/sw/device/lib/base/memory.c:90
    dest8[i] = value8;
e0000b28:          |  /-> 00b78023              sb      a1,0(a5)
/proc/self/cwd/sw/device/lib/base/memory.c:89
  for (; i < body_offset; ++i) {
e0000b2c:          |  |   16fd                  addi    a3,a3,-1
e0000b2e:          |  |   0785                  addi    a5,a5,1
e0000b30:          |  \-- fee5                  bnez    a3,e0000b28 <memset+0x1e>
/proc/self/cwd/sw/device/lib/base/memory.c:93
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
e0000b32:       /--\----X 02080263              beqz    a6,e0000b56 <memset+0x4c>
e0000b36:       |         00e808b3              add     a7,a6,a4
e0000b3a:       |         0ff5f813              andi    a6,a1,255
e0000b3e:       |         010107b7              lui     a5,0x1010
e0000b42:       |         10178793              addi    a5,a5,257 # 1010101 <tohost+0xff00f9>
e0000b46:       |         02f807b3              mul     a5,a6,a5
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
 */
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
e0000b4a:       |     /-> 00e506b3              add     a3,a0,a4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
e0000b4e:       |     |   0711                  addi    a4,a4,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
e0000b50:       |     |   c29c                  sw      a5,0(a3)
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
e0000b52:       |     \-- ff176ce3              bltu    a4,a7,e0000b4a <memset+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:96
    write_32(value32, &dest8[i]);
  }
  for (; i < len; ++i) {
e0000b56:       \--/----X 00c77a63              bgeu    a4,a2,e0000b6a <memset+0x60>
e0000b5a:          |      8e19                  sub     a2,a2,a4
e0000b5c:          |      00e506b3              add     a3,a0,a4
/proc/self/cwd/sw/device/lib/base/memory.c:97
    dest8[i] = value8;
e0000b60:          |  /-> 00b68023              sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/base/memory.c:96
  for (; i < len; ++i) {
e0000b64:          |  |   167d                  addi    a2,a2,-1
e0000b66:          |  |   0685                  addi    a3,a3,1
e0000b68:          |  \-- fe65                  bnez    a2,e0000b60 <memset+0x56>
/proc/self/cwd/sw/device/lib/base/memory.c:99
  }
  return dest;
e0000b6a:          \----> 8082                  ret
