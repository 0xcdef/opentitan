
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xd0008180

Program Header:
    LOAD off    0x00001000 vaddr 0xd0008000 paddr 0xd0008000 align 2**12
         filesz 0x00007b14 memsz 0x00007b14 flags r-x
    LOAD off    0x00000000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00000000 memsz 0x0000250c flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .vectors          00000180  d0008000  d0008000  00001000  2**8  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .crt              00000680  d0008180  d0008180  00001180  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             00005f70  d0008800  d0008800  00001800  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .shutdown         00000298  d000e770  d000e770  00007770  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata           000010f4  d000ea20  d000ea20  00007a20  2**5  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .static_critical  00001fc4  e0000000  e0000000  00009000  2**2  ALLOC
  6 .data             00000094  e0001fc4  e0001fc4  00009000  2**2  ALLOC
  7 .bss              000004b4  e0002058  e0002058  00009000  2**3  ALLOC
  8 .logs.fields      0000008c  00000000  00000000  00008b14  2**2  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  00008ba0  2**0  CONTENTS, READONLY
 10 .debug_info       000170d2  00000000  00000000  00008bc6  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev     00004b74  00000000  00000000  0001fc98  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges    00000088  00000000  00000000  0002480c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000ee40  00000000  00000000  00024894  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc        0000dae2  00000000  00000000  000336d4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges     00001398  00000000  00000000  000411b6  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str        000080f6  00000000  00000000  0004254e  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame      00001620  00000000  00000000  0004a644  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
d0008000 l    d  .vectors       00000000 .vectors
d0008180 l    d  .crt   00000000 .crt
d0008800 l    d  .text  00000000 .text
d000e770 l    d  .shutdown      00000000 .shutdown
d000ea20 l    d  .rodata        00000000 .rodata
e0000000 l    d  .static_critical       00000000 .static_critical
e0001fc4 l    d  .data  00000000 .data
e0002058 l    d  .bss   00000000 .bss
00000000 l    d  .logs.fields   00000000 .logs.fields
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    df *ABS*  00000000 rom_start.o
c0001073 l       *ABS*  00000000 UNIMP
00030d40 l       *ABS*  00000000 WDOG_BITE_THOLD
00036ee8 l       *ABS*  00000000 WDOG_BARK_THOLD
d0008000 l       .vectors       00000000 
d0008000 l       .vectors       00000000 
d0008080 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008180 l       .crt   00000000 
d0008180 l       .crt   00000000 
d0008198 l       .crt   00000000 .SECURE_BOOT
d0008198 l       .crt   00000000 
d00081a0 l       .crt   00000000 kRomStartBootMaybeHalt
d00081a0 l       .crt   00000000 
d00081b0 l       .crt   00000000 
d00081b2 l       .crt   00000000 kRomStartBootExecEn
d00081b2 l       .crt   00000000 
d00081b2 l       .crt   00000000 
d00081e4 l       .crt   00000000 kRomStartStoreT1ToBiteThold
d00081e4 l       .crt   00000000 
d00081ee l       .crt   00000000 kRomStartWatchdogEnabled
d00081ee l       .crt   00000000 
00000000 l       .debug_info    00000000 
00000000 l       .debug_abbrev  00000000 
d0008180 l       .vectors       00000000 
d000839a l       .crt   00000000 
00000000 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 rom.c
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008802 l       .text  00000000 
d000880a l       .text  00000000 
d000880c l       .text  00000000 
d000880c l       .text  00000000 
d0008810 l       .text  00000000 
d0008810 l       .text  00000000 
d0008818 l       .text  00000000 
d0008818 l       .text  00000000 
d000881c l       .text  00000000 
d0008828 l       .text  00000000 
d000882e l       .text  00000000 
d000882e l       .text  00000000 
d0008836 l       .text  00000000 
d0008838 l       .text  00000000 
d0008838 l       .text  00000000 
d000883a l       .text  00000000 
d000883a l       .text  00000000 
d000883e l       .text  00000000 
d0008840 l       .text  00000000 
00000000 l     O .logs.fields   00000014 init_spi_host.kLogFields
d0008840 l       .text  00000000 
d000884c l       .text  00000000 
d000884c l       .text  00000000 
d000884e l       .text  00000000 
d000884e l       .text  00000000 
d0008866 l       .text  00000000 
d0008866 l       .text  00000000 
d000886c l       .text  00000000 
d0008870 l       .text  00000000 
d0008870 l       .text  00000000 
d0008878 l       .text  00000000 
d000887a l       .text  00000000 
d000887c l       .text  00000000 
d000887c l       .text  00000000 
d0008880 l       .text  00000000 
d0008882 l       .text  00000000 
00000014 l     O .logs.fields   00000014 init_spi_host.kLogFields.2
d0008882 l       .text  00000000 
d000888e l       .text  00000000 
d000888e l       .text  00000000 
d0008890 l       .text  00000000 
d0008890 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088ae l       .text  00000000 
d00088b2 l       .text  00000000 
d00088b2 l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088c0 l       .text  00000000 
d00088c0 l       .text  00000000 
d00088f4 l       .text  00000000 
d00088f4 l       .text  00000000 
e000205c l     O .bss   00000004 spi_host
d00088f4 l       .text  00000000 
d0008904 l       .text  00000000 
d0008904 l       .text  00000000 
d0008910 l       .text  00000000 
d0008910 l       .text  00000000 
d0008912 l       .text  00000000 
d0008912 l       .text  00000000 
d0008914 l       .text  00000000 
d0008914 l       .text  00000000 
d0008918 l       .text  00000000 
00000028 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields
d0008918 l       .text  00000000 
d0008924 l       .text  00000000 
d0008924 l       .text  00000000 
d0008926 l       .text  00000000 
d0008926 l       .text  00000000 
d000893e l       .text  00000000 
d000893e l       .text  00000000 
d0008944 l       .text  00000000 
d0008948 l       .text  00000000 
d0008948 l       .text  00000000 
d000895c l       .text  00000000 
d000895c l       .text  00000000 
d0008966 l       .text  00000000 
d000896a l       .text  00000000 
d0008972 l       .text  00000000 
d0008972 l       .text  00000000 
d0008984 l       .text  00000000 
0000003c l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.6
d0008998 l       .text  00000000 
d0008998 l       .text  00000000 
d000899a l       .text  00000000 
d000899a l       .text  00000000 
d000899e l       .text  00000000 
d000899e l       .text  00000000 
d00089b8 l       .text  00000000 
d00089be l       .text  00000000 
d00089be l       .text  00000000 
d00089e2 l       .text  00000000 
d00089f2 l       .text  00000000 
d0008a06 l       .text  00000000 
d0008a06 l       .text  00000000 
d0008a12 l       .text  00000000 
d0008a14 l       .text  00000000 
d0008a16 l       .text  00000000 
d0008a16 l       .text  00000000 
d0008a1a l       .text  00000000 
d0008a24 l       .text  00000000 
d0008a24 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a38 l       .text  00000000 
d0008a38 l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a42 l       .text  00000000 
d0008a42 l       .text  00000000 
d0008a46 l       .text  00000000 
d0008a48 l       .text  00000000 
d0008a4a l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4e l       .text  00000000 
d0008a50 l       .text  00000000 
d0008a52 l       .text  00000000 
d0008a56 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a5a l       .text  00000000 
d0008a5c l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a62 l       .text  00000000 
d0008a66 l       .text  00000000 
d0008a6a l       .text  00000000 
d0008a6e l       .text  00000000 
d0008a6e l       .text  00000000 
d0008a7c l       .text  00000000 
d0008a7c l       .text  00000000 
d0008a7e l       .text  00000000 
d0008a80 l       .text  00000000 
d0008a84 l       .text  00000000 
00000050 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.9
d0008a84 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a92 l       .text  00000000 
d0008a92 l       .text  00000000 
d0008aaa l       .text  00000000 
d0008aaa l       .text  00000000 
d0008ab0 l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aee l       .text  00000000 
d0008afc l       .text  00000000 
d0008b04 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b26 l       .text  00000000 
d0008b26 l       .text  00000000 
d0008b2a l       .text  00000000 
d0008b2a l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6e l       .text  00000000 
d0008b6e l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b80 l       .text  00000000 
d0008b80 l       .text  00000000 
d0008b88 l       .text  00000000 
d0008b88 l       .text  00000000 
d0008b8c l       .text  00000000 
d0008b90 l       .text  00000000 
d0008b94 l       .text  00000000 
d0008b94 l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9c l       .text  00000000 
d0008ba0 l       .text  00000000 
d0008ba0 l       .text  00000000 
d0008ba4 l       .text  00000000 
d0008ba4 l       .text  00000000 
d0008ba6 l       .text  00000000 
d0008ba6 l       .text  00000000 
d0008baa l       .text  00000000 
d0008bae l       .text  00000000 
d0008bae l       .text  00000000 
d0008bb8 l       .text  00000000 
d0008bbc l       .text  00000000 
d0008bbc l       .text  00000000 
d0008bbe l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bca l       .text  00000000 
d0008bcc l       .text  00000000 
d0008bcc l       .text  00000000 
d0008bce l       .text  00000000 
d0008bce l       .text  00000000 
d0008bd2 l       .text  00000000 
d0008bd2 l       .text  00000000 
d0008bd6 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bdc l       .text  00000000 
d0008bdc l       .text  00000000 
d0008be0 l       .text  00000000 
d0008bec l       .text  00000000 
d0008bec l       .text  00000000 
d0008bf0 l       .text  00000000 
d0008bf0 l       .text  00000000 
d0008bf2 l       .text  00000000 
d0008bf4 l       .text  00000000 
d0008bf8 l       .text  00000000 
d0008bfc l       .text  00000000 
d0008bfc l       .text  00000000 
d0008c02 l       .text  00000000 
d0008c02 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c08 l       .text  00000000 
d0008c08 l       .text  00000000 
d0008c0c l       .text  00000000 
d0008c18 l       .text  00000000 
d0008c18 l       .text  00000000 
d0008c1c l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c26 l       .text  00000000 
d0008c26 l       .text  00000000 
d0008c2a l       .text  00000000 
d0008c2a l       .text  00000000 
d0008c2e l       .text  00000000 
d0008c2e l       .text  00000000 
d0008c30 l       .text  00000000 
d0008c34 l       .text  00000000 
d0008c34 l       .text  00000000 
d0008c38 l       .text  00000000 
d0008c38 l       .text  00000000 
d0008c3c l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c4a l       .text  00000000 
d0008c4a l       .text  00000000 
d0008c4e l       .text  00000000 
d0008c4e l       .text  00000000 
d0008c54 l       .text  00000000 
d0008c54 l       .text  00000000 
d0008c76 l       .text  00000000 
d0008c76 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c7a l       .text  00000000 
d0008c7a l       .text  00000000 
d0008c7c l       .text  00000000 
d0008c7c l       .text  00000000 
d0008c80 l       .text  00000000 
d0008c80 l       .text  00000000 
d0008c84 l       .text  00000000 
d0008c94 l       .text  00000000 
d0008c94 l       .text  00000000 
d0008c98 l       .text  00000000 
d0008c9c l       .text  00000000 
d0008c9c l       .text  00000000 
d0008caa l       .text  00000000 
d0008caa l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb0 l       .text  00000000 
d0008cb2 l       .text  00000000 
d0008cb2 l       .text  00000000 
d0008cc0 l       .text  00000000 
d0008cc0 l       .text  00000000 
d0008cc6 l       .text  00000000 
d0008cc6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008ce6 l       .text  00000000 
d0008cea l       .text  00000000 
d0008cf0 l       .text  00000000 
d0008cfc l       .text  00000000 
d0008d00 l       .text  00000000 
d0008d00 l       .text  00000000 
d0008d02 l       .text  00000000 
d0008d02 l       .text  00000000 
d0008d06 l       .text  00000000 
d0008d06 l       .text  00000000 
d0008d0a l       .text  00000000 
d0008d78 l     F .text  00000020 rom_bootstrap_message
d0008d16 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d18 l       .text  00000000 
d0008d1c l       .text  00000000 
d0008d1c l       .text  00000000 
d0008d20 l       .text  00000000 
d0008d20 l       .text  00000000 
d0008d24 l       .text  00000000 
d0008d24 l       .text  00000000 
d0008d2a l       .text  00000000 
d0008d2a l       .text  00000000 
d0008d2e l       .text  00000000 
d0008d2e l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d4a l       .text  00000000 
d0008d4a l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d72 l       .text  00000000 
d0008d72 l       .text  00000000 
d0008d72 l       .text  00000000 
d0008d98 l     F .text  00000230 rom_try_boot
d0008d72 l       .text  00000000 
d0008d74 l       .text  00000000 
d0008d74 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d7a l       .text  00000000 
d0008d7a l       .text  00000000 
d0008d7e l       .text  00000000 
d0008d8c l       .text  00000000 
d0008d8c l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008d9a l       .text  00000000 
d0008da8 l       .text  00000000 
d0008dac l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dd8 l       .text  00000000 
d0008dd8 l       .text  00000000 
d0008dda l       .text  00000000 
d0008dda l       .text  00000000 
d0008dde l       .text  00000000 
d0008dde l       .text  00000000 
d0008de2 l       .text  00000000 
d0008dee l       .text  00000000 
d0008dee l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df2 l       .text  00000000 
d0008df8 l       .text  00000000 
d0008e0c l       .text  00000000 
d0008e0c l       .text  00000000 
d0008e10 l       .text  00000000 
d0008e10 l       .text  00000000 
d0008e14 l       .text  00000000 
d0008e14 l       .text  00000000 
d0008e14 l       .text  00000000 
d0008e14 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e1a l       .text  00000000 
d0008e28 l       .text  00000000 
d0008e2a l       .text  00000000 
d0008e2c l       .text  00000000 
d0008e2c l       .text  00000000 
d0008e32 l       .text  00000000 
d0008e32 l       .text  00000000 
d0008e32 l       .text  00000000 
d0008e32 l       .text  00000000 
d0008fc8 l     F .text  00000180 rom_verify
d0008e38 l       .text  00000000 
d0008e38 l       .text  00000000 
d0008e4c l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e58 l       .text  00000000 
d0008e58 l       .text  00000000 
d0008e5c l       .text  00000000 
d0008e68 l       .text  00000000 
d0008e6a l       .text  00000000 
d0008e6a l       .text  00000000 
d0008e6e l       .text  00000000 
d0008e7e l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e9a l       .text  00000000 
d0008e9a l       .text  00000000 
d0008e9c l       .text  00000000 
d0008e9c l       .text  00000000 
d0008e9c l       .text  00000000 
d0008e9c l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb4 l       .text  00000000 
d0009148 l     F .text  000003ce rom_boot
d0008eb8 l       .text  00000000 
d0008eb8 l       .text  00000000 
d0008eba l       .text  00000000 
d0008eba l       .text  00000000 
d0008ebe l       .text  00000000 
d0008ecc l       .text  00000000 
d0008ecc l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ef2 l       .text  00000000 
d0008ef2 l       .text  00000000 
d0008ef2 l       .text  00000000 
d0008ef2 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef8 l       .text  00000000 
d0008efc l       .text  00000000 
d0008f10 l       .text  00000000 
d0008f10 l       .text  00000000 
d0008f10 l       .text  00000000 
d0008f10 l       .text  00000000 
d0008f16 l       .text  00000000 
d0008f16 l       .text  00000000 
d0008f18 l       .text  00000000 
d0008f18 l       .text  00000000 
d0008f1c l       .text  00000000 
d0008f1c l       .text  00000000 
d0008f20 l       .text  00000000 
d0008f2c l       .text  00000000 
d0008f2c l       .text  00000000 
d0008f2e l       .text  00000000 
d0008f2e l       .text  00000000 
d0008f32 l       .text  00000000 
d0008f46 l       .text  00000000 
d0008f46 l       .text  00000000 
d0008f46 l       .text  00000000 
d0008f46 l       .text  00000000 
d0008f48 l       .text  00000000 
d0008f4c l       .text  00000000 
d0008f58 l       .text  00000000 
d0008f72 l       .text  00000000 
d0008f72 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f78 l       .text  00000000 
d0008f78 l       .text  00000000 
d0008f78 l       .text  00000000 
d0008f78 l       .text  00000000 
d0008f92 l       .text  00000000 
d0008f92 l       .text  00000000 
d0008f92 l       .text  00000000 
d0008f92 l       .text  00000000 
d0008f94 l       .text  00000000 
d0008f98 l       .text  00000000 
d0008f98 l       .text  00000000 
d0008f9a l       .text  00000000 
d0008f9a l       .text  00000000 
d0008f9e l       .text  00000000 
d0008f9e l       .text  00000000 
d0008fa2 l       .text  00000000 
d0008fae l       .text  00000000 
d0008fae l       .text  00000000 
d0008fb6 l       .text  00000000 
d0008fb6 l       .text  00000000 
d0008fc8 l       .text  00000000 
d0008fc8 l       .text  00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a4 l       .crt   00000000 
d00083a6 l       .crt   00000000 
d00083a8 l       .crt   00000000 
d00083aa l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083ba l       .crt   00000000 
d00083ba l       .crt   00000000 
d0008fc8 l       .text  00000000 
d0008fc8 l       .text  00000000 
d0008fc8 l       .text  00000000 
d0008fca l       .text  00000000 
d0008fda l       .text  00000000 
d0008fda l       .text  00000000 
d0008fde l       .text  00000000 
d0008ff4 l       .text  00000000 
d0008ff4 l       .text  00000000 
d0008ff6 l       .text  00000000 
d0008ff6 l       .text  00000000 
d0008ffc l       .text  00000000 
d0008ffc l       .text  00000000 
d0008ffc l       .text  00000000 
d0008ffc l       .text  00000000 
d0009000 l       .text  00000000 
d0009000 l       .text  00000000 
d000900a l       .text  00000000 
d000900a l       .text  00000000 
d000900c l       .text  00000000 
d000900c l       .text  00000000 
d0009010 l       .text  00000000 
d0009010 l       .text  00000000 
d0009014 l       .text  00000000 
d0009020 l       .text  00000000 
d0009020 l       .text  00000000 
d0009024 l       .text  00000000 
d0009024 l       .text  00000000 
d0009030 l       .text  00000000 
d0009036 l       .text  00000000 
d0009036 l       .text  00000000 
d0009038 l       .text  00000000 
d0009038 l       .text  00000000 
d000903c l       .text  00000000 
d000903c l       .text  00000000 
d0009044 l       .text  00000000 
d0009050 l       .text  00000000 
d0009050 l       .text  00000000 
d000905c l       .text  00000000 
d000905c l       .text  00000000 
d0009060 l       .text  00000000 
d0009060 l       .text  00000000 
d0009062 l       .text  00000000 
d000906e l       .text  00000000 
d000906e l       .text  00000000 
d0009072 l       .text  00000000 
d0009074 l       .text  00000000 
d0009074 l       .text  00000000 
d0009076 l       .text  00000000 
d0009076 l       .text  00000000 
d000907a l       .text  00000000 
d000907a l       .text  00000000 
d0009086 l       .text  00000000 
d0009086 l       .text  00000000 
d000908a l       .text  00000000 
d000908a l       .text  00000000 
d000908e l       .text  00000000 
d000908e l       .text  00000000 
d000908e l       .text  00000000 
d000908e l       .text  00000000 
d0009092 l       .text  00000000 
d0009096 l       .text  00000000 
d0009096 l       .text  00000000 
d0009098 l       .text  00000000 
d0009098 l       .text  00000000 
d000909a l       .text  00000000 
d000909a l       .text  00000000 
d00090a2 l       .text  00000000 
d00090a2 l       .text  00000000 
d00090a6 l       .text  00000000 
d00090b6 l       .text  00000000 
d00090ba l       .text  00000000 
d00090c0 l       .text  00000000 
d00090c0 l       .text  00000000 
d00090ca l       .text  00000000 
d00090ca l       .text  00000000 
d00090ce l       .text  00000000 
d00090d2 l       .text  00000000 
d00090d2 l       .text  00000000 
d00090de l       .text  00000000 
d00090de l       .text  00000000 
d00090e6 l       .text  00000000 
d00090e6 l       .text  00000000 
d00090ec l       .text  00000000 
d00090ec l       .text  00000000 
d00090fe l       .text  00000000 
d00090fe l       .text  00000000 
d000910a l       .text  00000000 
d000910a l       .text  00000000 
d0009124 l       .text  00000000 
d0009124 l       .text  00000000 
d0009124 l       .text  00000000 
d0009124 l       .text  00000000 
d0009126 l       .text  00000000 
d0009126 l       .text  00000000 
d000912a l       .text  00000000 
d0009134 l       .text  00000000 
d0009134 l       .text  00000000 
d0009136 l       .text  00000000 
d000913e l       .text  00000000 
d0009148 l       .text  00000000 
d0009148 l       .text  00000000 
d0009148 l       .text  00000000 
d0009148 l       .text  00000000 
d0009148 l       .text  00000000 
d000914a l       .text  00000000 
d0009160 l       .text  00000000 
d0009160 l       .text  00000000 
d0009164 l       .text  00000000 
d000917e l       .text  00000000 
d000917e l       .text  00000000 
d0009180 l       .text  00000000 
d0009180 l       .text  00000000 
d0009188 l       .text  00000000 
d0009188 l       .text  00000000 
d0009188 l       .text  00000000 
d0009188 l       .text  00000000 
d000918e l       .text  00000000 
d000918e l       .text  00000000 
d0009190 l       .text  00000000 
d0009190 l       .text  00000000 
d0009194 l       .text  00000000 
d0009194 l       .text  00000000 
d0009198 l       .text  00000000 
d00091a4 l       .text  00000000 
d00091a4 l       .text  00000000 
d00091a8 l       .text  00000000 
d00091a8 l       .text  00000000 
d00091ac l       .text  00000000 
d00091b0 l       .text  00000000 
d00091b0 l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b6 l       .text  00000000 
d00091b6 l       .text  00000000 
d00091ba l       .text  00000000 
d00091c6 l       .text  00000000 
d00091c6 l       .text  00000000 
d00091ce l       .text  00000000 
d00091d0 l       .text  00000000 
d00091d4 l       .text  00000000 
d00091e2 l       .text  00000000 
d00091e2 l       .text  00000000 
d00091e4 l       .text  00000000 
d00091e8 l       .text  00000000 
d00091e8 l       .text  00000000 
d00091ec l       .text  00000000 
d00091f0 l       .text  00000000 
d00091f0 l       .text  00000000 
d00091f8 l       .text  00000000 
d0009202 l       .text  00000000 
d0009208 l       .text  00000000 
d0009208 l       .text  00000000 
d000920c l       .text  00000000 
d000920c l       .text  00000000 
d0009210 l       .text  00000000 
d0009214 l       .text  00000000 
d0009214 l       .text  00000000 
d0009218 l       .text  00000000 
d0009218 l       .text  00000000 
d0009218 l       .text  00000000 
d000921c l       .text  00000000 
d000921c l       .text  00000000 
d0009220 l       .text  00000000 
d0009220 l       .text  00000000 
d0009232 l       .text  00000000 
d0009232 l       .text  00000000 
d0009234 l       .text  00000000 
d0009238 l       .text  00000000 
d000923c l       .text  00000000 
d000924c l       .text  00000000 
d000924c l       .text  00000000 
d0009266 l       .text  00000000 
d0009266 l       .text  00000000 
d0009270 l       .text  00000000 
d0009270 l       .text  00000000 
d0009274 l       .text  00000000 
d0009274 l       .text  00000000 
d0009276 l       .text  00000000 
d0009276 l       .text  00000000 
d000927a l       .text  00000000 
d000927a l       .text  00000000 
d000927e l       .text  00000000 
d000928a l       .text  00000000 
d000928a l       .text  00000000 
d0009290 l       .text  00000000 
d0009294 l       .text  00000000 
d0009294 l       .text  00000000 
d0009298 l       .text  00000000 
d0009298 l       .text  00000000 
d000929a l       .text  00000000 
d000929a l       .text  00000000 
d000929e l       .text  00000000 
d000929e l       .text  00000000 
d00092a2 l       .text  00000000 
d00092a2 l       .text  00000000 
d00092a6 l       .text  00000000 
d00092aa l       .text  00000000 
d00092aa l       .text  00000000 
d00092b6 l       .text  00000000 
d00092b6 l       .text  00000000 
d00092b8 l       .text  00000000 
d00092bc l       .text  00000000 
d00092bc l       .text  00000000 
d00092c0 l       .text  00000000 
d00092c0 l       .text  00000000 
d00092c2 l       .text  00000000 
d00092c2 l       .text  00000000 
d00092c6 l       .text  00000000 
d00092c6 l       .text  00000000 
d00092ca l       .text  00000000 
d00092d6 l       .text  00000000 
d00092d6 l       .text  00000000 
d00092da l       .text  00000000 
d00092da l       .text  00000000 
d00092de l       .text  00000000 
d00092f6 l       .text  00000000 
d00092f6 l       .text  00000000 
d00092fa l       .text  00000000 
d00092fa l       .text  00000000 
d00092fe l       .text  00000000 
d00092fe l       .text  00000000 
d00092fe l       .text  00000000 
d00092fe l       .text  00000000 
d000931e l       .text  00000000 
d000931e l       .text  00000000 
d000931e l       .text  00000000 
d000931e l       .text  00000000 
d000933a l       .text  00000000 
d000933a l       .text  00000000 
d000933a l       .text  00000000 
d000933a l       .text  00000000 
d0009348 l       .text  00000000 
d0009348 l       .text  00000000 
d000934a l       .text  00000000 
d000934a l       .text  00000000 
d000934e l       .text  00000000 
d000935a l       .text  00000000 
d000935a l       .text  00000000 
d000935e l       .text  00000000 
d000935e l       .text  00000000 
d0009362 l       .text  00000000 
d000937a l       .text  00000000 
d000937a l       .text  00000000 
d000937a l       .text  00000000 
d000937a l       .text  00000000 
d000937e l       .text  00000000 
d000937e l       .text  00000000 
d0009380 l       .text  00000000 
d0009380 l       .text  00000000 
d0009382 l       .text  00000000 
d0009386 l       .text  00000000 
d0009386 l       .text  00000000 
d0009392 l       .text  00000000 
d0009396 l       .text  00000000 
d0009396 l       .text  00000000 
d000939a l       .text  00000000 
d00093b2 l       .text  00000000 
d00093b2 l       .text  00000000 
d00093b2 l       .text  00000000 
d00093b2 l       .text  00000000 
d00093ba l       .text  00000000 
d00093ba l       .text  00000000 
d00093bc l       .text  00000000 
d00093bc l       .text  00000000 
d00093c0 l       .text  00000000 
d00093c0 l       .text  00000000 
d00093c4 l       .text  00000000 
d00093c4 l       .text  00000000 
d00093d0 l       .text  00000000 
d00093d4 l       .text  00000000 
d00093d4 l       .text  00000000 
d00093d8 l       .text  00000000 
d00093f0 l       .text  00000000 
d00093f0 l       .text  00000000 
d00093f0 l       .text  00000000 
d00093f0 l       .text  00000000 
d00093f8 l       .text  00000000 
d00093f8 l       .text  00000000 
d00093fc l       .text  00000000 
d00093fc l       .text  00000000 
d0009400 l       .text  00000000 
d0009400 l       .text  00000000 
d0009402 l       .text  00000000 
d0009402 l       .text  00000000 
d0009406 l       .text  00000000 
d0009406 l       .text  00000000 
d0009412 l       .text  00000000 
d0009416 l       .text  00000000 
d0009416 l       .text  00000000 
d000941a l       .text  00000000 
d000941a l       .text  00000000 
d000942e l       .text  00000000 
d0009436 l       .text  00000000 
d0009436 l       .text  00000000 
d0009436 l       .text  00000000 
d0009436 l       .text  00000000 
d000943c l       .text  00000000 
d000943c l       .text  00000000 
d000945c l       .text  00000000 
d000945c l       .text  00000000 
d000945c l       .text  00000000 
d000945c l       .text  00000000 
d0009460 l       .text  00000000 
d0009464 l       .text  00000000 
d000947c l       .text  00000000 
d000947c l       .text  00000000 
d000947c l       .text  00000000 
d000947c l       .text  00000000 
d0009480 l       .text  00000000 
d0009484 l       .text  00000000 
d0009490 l       .text  00000000 
d0009496 l       .text  00000000 
d0009496 l       .text  00000000 
d00094a0 l       .text  00000000 
d00094a4 l       .text  00000000 
d00094a4 l       .text  00000000 
d00094a8 l       .text  00000000 
d00094a8 l       .text  00000000 
d00094ae l       .text  00000000 
d00094ae l       .text  00000000 
d00094ce l       .text  00000000 
d00094ce l       .text  00000000 
d00094ce l       .text  00000000 
d00094ce l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d8 l       .text  00000000 
d00094d8 l       .text  00000000 
d00094e8 l       .text  00000000 
d00094f2 l       .text  00000000 
d00094f2 l       .text  00000000 
d00094f6 l       .text  00000000 
d00094f6 l       .text  00000000 
d00094fe l       .text  00000000 
d00094fe l       .text  00000000 
d0009506 l       .text  00000000 
d0009506 l       .text  00000000 
d000950e l       .text  00000000 
d000950e l       .text  00000000 
d0009516 l       .text  00000000 
d0009516 l       .text  00000000 
d0009516 l       .text  00000000 
00000000 l       .debug_loc     00000000 
0000003c l       .debug_loc     00000000 
00000057 l       .debug_loc     00000000 
00000146 l       .debug_loc     00000000 
00000177 l       .debug_loc     00000000 
000001a8 l       .debug_loc     00000000 
000001fe l       .debug_loc     00000000 
0000024f l       .debug_loc     00000000 
000002a0 l       .debug_loc     00000000 
000002d3 l       .debug_loc     00000000 
00000306 l       .debug_loc     00000000 
00000353 l       .debug_loc     00000000 
000003d1 l       .debug_loc     00000000 
00000431 l       .debug_loc     00000000 
00000462 l       .debug_loc     00000000 
0000047d l       .debug_loc     00000000 
00000498 l       .debug_loc     00000000 
000004be l       .debug_loc     00000000 
000004fd l       .debug_loc     00000000 
0000052e l       .debug_loc     00000000 
00000549 l       .debug_loc     00000000 
00000579 l       .debug_loc     00000000 
000005a7 l       .debug_loc     00000000 
000005cd l       .debug_loc     00000000 
000005f0 l       .debug_loc     00000000 
0000060b l       .debug_loc     00000000 
0000063c l       .debug_loc     00000000 
00000662 l       .debug_loc     00000000 
0000067d l       .debug_loc     00000000 
000006a3 l       .debug_loc     00000000 
000006be l       .debug_loc     00000000 
000006d9 l       .debug_loc     00000000 
000006f4 l       .debug_loc     00000000 
0000071a l       .debug_loc     00000000 
00000740 l       .debug_loc     00000000 
00000766 l       .debug_loc     00000000 
0000078c l       .debug_loc     00000000 
000007b2 l       .debug_loc     00000000 
000007cd l       .debug_loc     00000000 
0000080a l       .debug_loc     00000000 
00000854 l       .debug_loc     00000000 
0000086f l       .debug_loc     00000000 
00000895 l       .debug_loc     00000000 
000008bb l       .debug_loc     00000000 
000008d6 l       .debug_loc     00000000 
000008fc l       .debug_loc     00000000 
00000917 l       .debug_loc     00000000 
0000093d l       .debug_loc     00000000 
00000958 l       .debug_loc     00000000 
00000973 l       .debug_loc     00000000 
0000098e l       .debug_loc     00000000 
000009eb l       .debug_loc     00000000 
00000a48 l       .debug_loc     00000000 
00000a6e l       .debug_loc     00000000 
00000a89 l       .debug_loc     00000000 
00000acb l       .debug_loc     00000000 
00000af1 l       .debug_loc     00000000 
00000b0c l       .debug_loc     00000000 
00000b3f l       .debug_loc     00000000 
00000b65 l       .debug_loc     00000000 
00000b8e l       .debug_loc     00000000 
00000bf6 l       .debug_loc     00000000 
00000c5e l       .debug_loc     00000000 
00000c84 l       .debug_loc     00000000 
00000c9f l       .debug_loc     00000000 
00000cdb l       .debug_loc     00000000 
00000d01 l       .debug_loc     00000000 
00000d27 l       .debug_loc     00000000 
00000df8 l       .debug_loc     00000000 
00000e73 l       .debug_loc     00000000 
00000e99 l       .debug_loc     00000000 
00000eb4 l       .debug_loc     00000000 
00000eda l       .debug_loc     00000000 
00000ef5 l       .debug_loc     00000000 
00000f1b l       .debug_loc     00000000 
00000f36 l       .debug_loc     00000000 
00000f5c l       .debug_loc     00000000 
00000f82 l       .debug_loc     00000000 
00000fa8 l       .debug_loc     00000000 
00000fce l       .debug_loc     00000000 
00000ff4 l       .debug_loc     00000000 
0000101a l       .debug_loc     00000000 
0000103c l       .debug_loc     00000000 
00001062 l       .debug_loc     00000000 
00001088 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000a8 l       .debug_ranges  00000000 
000000a7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002ba8 l       .debug_str     00000000 
00001ef0 l       .debug_str     00000000 
00006a41 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000169e l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000002a6 l       .debug_str     00000000 
00000e2c l       .debug_str     00000000 
000061f0 l       .debug_str     00000000 
00000321 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006b79 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000016ac l       .debug_str     00000000 
00001755 l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00001723 l       .debug_str     00000000 
00001743 l       .debug_str     00000000 
0000174c l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00001761 l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
0000176b l       .debug_str     00000000 
00001773 l       .debug_str     00000000 
00006765 l       .debug_str     00000000 
00007606 l       .debug_str     00000000 
0000177c l       .debug_str     00000000 
00001786 l       .debug_str     00000000 
00001790 l       .debug_str     00000000 
00001771 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000002af l       .debug_str     00000000 
000002a2 l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002c5 l       .debug_str     00000000 
000002cf l       .debug_str     00000000 
000002da l       .debug_str     00000000 
000002e5 l       .debug_str     00000000 
000002f5 l       .debug_str     00000000 
00000304 l       .debug_str     00000000 
00000313 l       .debug_str     00000000 
000003a1 l       .debug_str     00000000 
0000032c l       .debug_str     00000000 
00000341 l       .debug_str     00000000 
0000035a l       .debug_str     00000000 
0000036c l       .debug_str     00000000 
0000037d l       .debug_str     00000000 
0000038f l       .debug_str     00000000 
0000045a l       .debug_str     00000000 
000003ad l       .debug_str     00000000 
000003ca l       .debug_str     00000000 
000003e8 l       .debug_str     00000000 
00000404 l       .debug_str     00000000 
0000041d l       .debug_str     00000000 
00000436 l       .debug_str     00000000 
000004b7 l       .debug_str     00000000 
00000474 l       .debug_str     00000000 
0000048d l       .debug_str     00000000 
000004a2 l       .debug_str     00000000 
000004f6 l       .debug_str     00000000 
000004ca l       .debug_str     00000000 
000004e0 l       .debug_str     00000000 
0000050d l       .debug_str     00000000 
0000051d l       .debug_str     00000000 
0000052d l       .debug_str     00000000 
0000053f l       .debug_str     00000000 
00000552 l       .debug_str     00000000 
0000056a l       .debug_str     00000000 
0000057a l       .debug_str     00000000 
00000588 l       .debug_str     00000000 
00000594 l       .debug_str     00000000 
000005a0 l       .debug_str     00000000 
000005ae l       .debug_str     00000000 
000005bd l       .debug_str     00000000 
000005d1 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00000a2e l       .debug_str     00000000 
00000a43 l       .debug_str     00000000 
00000a5d l       .debug_str     00000000 
00000a75 l       .debug_str     00000000 
00000a9f l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ae7 l       .debug_str     00000000 
00000b00 l       .debug_str     00000000 
00000b1c l       .debug_str     00000000 
00000b3a l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00000c4e l       .debug_str     00000000 
00000b73 l       .debug_str     00000000 
00000b88 l       .debug_str     00000000 
00000ba2 l       .debug_str     00000000 
00000bbf l       .debug_str     00000000 
00000bd7 l       .debug_str     00000000 
00000bed l       .debug_str     00000000 
00000c08 l       .debug_str     00000000 
00000c20 l       .debug_str     00000000 
00000c3c l       .debug_str     00000000 
00000c5c l       .debug_str     00000000 
00000d23 l       .debug_str     00000000 
00000c70 l       .debug_str     00000000 
00000c82 l       .debug_str     00000000 
00000c93 l       .debug_str     00000000 
00000cae l       .debug_str     00000000 
00000ccf l       .debug_str     00000000 
00000ce4 l       .debug_str     00000000 
00000cf9 l       .debug_str     00000000 
00000d0d l       .debug_str     00000000 
00000d30 l       .debug_str     00000000 
00000d43 l       .debug_str     00000000 
00000d5e l       .debug_str     00000000 
00000d7d l       .debug_str     00000000 
00000d9d l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000dd6 l       .debug_str     00000000 
00000dc1 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00000df7 l       .debug_str     00000000 
00000e0b l       .debug_str     00000000 
00000e77 l       .debug_str     00000000 
00000e22 l       .debug_str     00000000 
00000e45 l       .debug_str     00000000 
00006032 l       .debug_str     00000000 
00000e51 l       .debug_str     00000000 
00000e57 l       .debug_str     00000000 
00000e5c l       .debug_str     00000000 
00000e6d l       .debug_str     00000000 
00000e72 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00000e8b l       .debug_str     00000000 
00000ea0 l       .debug_str     00000000 
00000eb7 l       .debug_str     00000000 
00000ec7 l       .debug_str     00000000 
00000ee7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00000f04 l       .debug_str     00000000 
00000f16 l       .debug_str     00000000 
00000f92 l       .debug_str     00000000 
00007ff2 l       .debug_str     00000000 
000021cd l       .debug_str     00000000 
000004c4 l       .debug_str     00000000 
00007197 l       .debug_str     00000000 
00006773 l       .debug_str     00000000 
00000f79 l       .debug_str     00000000 
000068fb l       .debug_str     00000000 
00001664 l       .debug_str     00000000 
00000f80 l       .debug_str     00000000 
00000f86 l       .debug_str     00000000 
00000f8c l       .debug_str     00000000 
00000f2f l       .debug_str     00000000 
00000f4b l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
00000fa7 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00000fb1 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
00000fd0 l       .debug_str     00000000 
00000fda l       .debug_str     00000000 
00000fe6 l       .debug_str     00000000 
00000ff4 l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00001044 l       .debug_str     00000000 
000016c0 l       .debug_str     00000000 
0000179a l       .debug_str     00000000 
000017b8 l       .debug_str     00000000 
00000040 l       .debug_ranges  00000000 
00000028 l       .debug_ranges  00000000 
0000105a l       .debug_str     00000000 
00001068 l       .debug_str     00000000 
00001074 l       .debug_str     00000000 
0000107e l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
0000109a l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
000010b0 l       .debug_str     00000000 
000010c4 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000010ec l       .debug_str     00000000 
000010fa l       .debug_str     00000000 
0000110a l       .debug_str     00000000 
0000111e l       .debug_str     00000000 
00001128 l       .debug_str     00000000 
0000113a l       .debug_str     00000000 
0000114e l       .debug_str     00000000 
00001181 l       .debug_str     00000000 
00001161 l       .debug_str     00000000 
00001172 l       .debug_str     00000000 
00001190 l       .debug_str     00000000 
000011a4 l       .debug_str     00000000 
000011be l       .debug_str     00000000 
000011d4 l       .debug_str     00000000 
000011ec l       .debug_str     00000000 
00006a70 l       .debug_str     00000000 
000011f7 l       .debug_str     00000000 
0000120b l       .debug_str     00000000 
0000121c l       .debug_str     00000000 
00001226 l       .debug_str     00000000 
000016c9 l       .debug_str     00000000 
000013d5 l       .debug_str     00000000 
000017dd l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
00001238 l       .debug_str     00000000 
00001247 l       .debug_str     00000000 
000013c9 l       .debug_str     00000000 
00001261 l       .debug_str     00000000 
000013be l       .debug_str     00000000 
000013b5 l       .debug_str     00000000 
00001269 l       .debug_str     00000000 
00001317 l       .debug_str     00000000 
000074fb l       .debug_str     00000000 
00001346 l       .debug_str     00000000 
0000135a l       .debug_str     00000000 
00001368 l       .debug_str     00000000 
00001376 l       .debug_str     00000000 
00001387 l       .debug_str     00000000 
00000dc8 l       .debug_str     00000000 
00001391 l       .debug_str     00000000 
000013a1 l       .debug_str     00000000 
000013ac l       .debug_str     00000000 
00000dff l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
00001329 l       .debug_str     00000000 
0000130e l       .debug_str     00000000 
0000129f l       .debug_str     00000000 
000012b7 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000012eb l       .debug_str     00000000 
000012fd l       .debug_str     00000000 
000012c1 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
000016ec l       .debug_str     00000000 
000017e8 l       .debug_str     00000000 
00001802 l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
00001821 l       .debug_str     00000000 
00001431 l       .debug_str     00000000 
0000182f l       .debug_str     00000000 
000016f7 l       .debug_str     00000000 
0000183a l       .debug_str     00000000 
00001852 l       .debug_str     00000000 
0000186a l       .debug_str     00000000 
00000058 l       .debug_ranges  00000000 
00000070 l       .debug_ranges  00000000 
00000090 l       .debug_ranges  00000000 
000013df l       .debug_str     00000000 
000013ed l       .debug_str     00000000 
000016d6 l       .debug_str     00000000 
000013f4 l       .debug_str     00000000 
0000140d l       .debug_str     00000000 
0000143f l       .debug_str     00000000 
00001428 l       .debug_str     00000000 
00001458 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
000014a2 l       .debug_str     00000000 
000014b3 l       .debug_str     00000000 
000014c6 l       .debug_str     00000000 
000014e6 l       .debug_str     00000000 
000014f8 l       .debug_str     00000000 
000014ff l       .debug_str     00000000 
00001514 l       .debug_str     00000000 
00001539 l       .debug_str     00000000 
0000152d l       .debug_str     00000000 
00007616 l       .debug_str     00000000 
00001547 l       .debug_str     00000000 
00001560 l       .debug_str     00000000 
00001573 l       .debug_str     00000000 
00001582 l       .debug_str     00000000 
0000158f l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
000015c7 l       .debug_str     00000000 
000015da l       .debug_str     00000000 
000015f0 l       .debug_str     00000000 
0000160b l       .debug_str     00000000 
00001621 l       .debug_str     00000000 
00001632 l       .debug_str     00000000 
0000164c l       .debug_str     00000000 
00001667 l       .debug_str     00000000 
0000167a l       .debug_str     00000000 
0000168a l       .debug_str     00000000 
00001700 l       .debug_str     00000000 
00001716 l       .debug_str     00000000 
0000172c l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
000017c5 l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
d00088be l       .text  00000000 
d0008aec l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d98 l       .text  00000000 
d0008fc8 l       .text  00000000 
d00083ba l       .crt   00000000 
d0009148 l       .text  00000000 
d0009516 l       .text  00000000 
00000000 l    df *ABS*  00000000 irq_asm.o
d00083bc l       .crt   00000000 
d00083bc l       .crt   00000000 
d00083d2 l       .crt   00000000 
0000675b l       .debug_info    00000000 
00001183 l       .debug_abbrev  00000000 
d00083d4 l       .crt   00000000 
00000000 l    df *ABS*  00000000 crt.o
d00083d4 l       .crt   00000000 
d00083d4 l       .crt   00000000 
d00083f6 l       .crt   00000000 
d00083f8 l       .crt   00000000 
d00083f8 l       .crt   00000000 
0000fb95 l       .debug_info    00000000 
00002bda l       .debug_abbrev  00000000 
d0008432 l       .crt   00000000 
00000000 l    df *ABS*  00000000 rom_epmp_init.o
d0008434 l       .crt   00000000 
d0008434 l       .crt   00000000 
0001228d l       .debug_info    00000000 
0000379c l       .debug_abbrev  00000000 
d00084c0 l       .crt   00000000 
00000000 l    df *ABS*  00000000 boot_policy.c
d0009516 l       .text  00000000 
d0009516 l       .text  00000000 
d0009516 l       .text  00000000 
d000951a l       .text  00000000 
d0009522 l       .text  00000000 
d0009526 l       .text  00000000 
d000952a l       .text  00000000 
d000952e l       .text  00000000 
d0009530 l       .text  00000000 
d0009538 l       .text  00000000 
d000953a l       .text  00000000 
d000953a l       .text  00000000 
d000953a l       .text  00000000 
d000953a l       .text  00000000 
d000953a l       .text  00000000 
d000953a l       .text  00000000 
d0009546 l       .text  00000000 
d000954a l       .text  00000000 
d000954e l       .text  00000000 
d000955c l       .text  00000000 
d0009560 l       .text  00000000 
d0009562 l       .text  00000000 
d0009566 l       .text  00000000 
d000956a l       .text  00000000 
d000956e l       .text  00000000 
d000956e l       .text  00000000 
d0009572 l       .text  00000000 
d0009576 l       .text  00000000 
d0009582 l       .text  00000000 
d000958e l       .text  00000000 
d000959a l       .text  00000000 
d00095a8 l       .text  00000000 
d00095ac l       .text  00000000 
d00095b8 l       .text  00000000 
d00095c4 l       .text  00000000 
d00095c4 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095ca l       .text  00000000 
d00095ca l       .text  00000000 
d00095ce l       .text  00000000 
d00095d2 l       .text  00000000 
d00095d4 l       .text  00000000 
d00095d8 l       .text  00000000 
d00095de l       .text  00000000 
d00095de l       .text  00000000 
d00095e2 l       .text  00000000 
d00095f4 l       .text  00000000 
d00095f4 l       .text  00000000 
000010ae l       .debug_loc     00000000 
000010f5 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001876 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000f0 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000013be l       .debug_str     00000000 
000013b5 l       .debug_str     00000000 
00001269 l       .debug_str     00000000 
00001317 l       .debug_str     00000000 
000074fb l       .debug_str     00000000 
00001346 l       .debug_str     00000000 
00001ef0 l       .debug_str     00000000 
00000f79 l       .debug_str     00000000 
0000135a l       .debug_str     00000000 
00001368 l       .debug_str     00000000 
00001376 l       .debug_str     00000000 
00001387 l       .debug_str     00000000 
00000dc8 l       .debug_str     00000000 
00001391 l       .debug_str     00000000 
000013a1 l       .debug_str     00000000 
000013ac l       .debug_str     00000000 
00000dff l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001329 l       .debug_str     00000000 
0000130e l       .debug_str     00000000 
0000129f l       .debug_str     00000000 
000012b7 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000012eb l       .debug_str     00000000 
000012fd l       .debug_str     00000000 
000012c1 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000dd6 l       .debug_str     00000000 
00000dc1 l       .debug_str     00000000 
00001247 l       .debug_str     00000000 
000018a2 l       .debug_str     00000000 
000018a9 l       .debug_str     00000000 
00001464 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00001458 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
000018b0 l       .debug_str     00000000 
000017c5 l       .debug_str     00000000 
000013c9 l       .debug_str     00000000 
00001261 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002ba8 l       .debug_str     00000000 
00006a41 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000124 l       .debug_frame   00000000 
d000953a l       .text  00000000 
d00095f4 l       .text  00000000 
00000000 l    df *ABS*  00000000 boot_data.c
d00095f4 l       .text  00000000 
d00095f4 l       .text  00000000 
d00095f4 l       .text  00000000 
d00095f6 l       .text  00000000 
d00095fe l       .text  00000000 
d0009600 l       .text  00000000 
d0009602 l       .text  00000000 
d0009602 l       .text  00000000 
d00097ce l     F .text  0000039a boot_data_active_page_find
d0009606 l       .text  00000000 
d0009608 l       .text  00000000 
d0009608 l       .text  00000000 
d000960a l       .text  00000000 
d000960a l       .text  00000000 
d000960e l       .text  00000000 
d000960e l       .text  00000000 
d0009612 l       .text  00000000 
d000961e l       .text  00000000 
d000961e l       .text  00000000 
d0009620 l       .text  00000000 
d0009620 l       .text  00000000 
d0009622 l       .text  00000000 
d0009622 l       .text  00000000 
d0009626 l       .text  00000000 
d0009626 l       .text  00000000 
d000962a l       .text  00000000 
d000962a l       .text  00000000 
d0009636 l       .text  00000000 
d0009636 l       .text  00000000 
d000963e l       .text  00000000 
d000963e l       .text  00000000 
d0009646 l       .text  00000000 
d0009646 l       .text  00000000 
d0009646 l       .text  00000000 
d0009646 l       .text  00000000 
d0009648 l       .text  00000000 
d0009648 l       .text  00000000 
d0009648 l       .text  00000000 
d0009648 l       .text  00000000 
d000964a l       .text  00000000 
d000964a l       .text  00000000 
d0009652 l       .text  00000000 
d0009652 l       .text  00000000 
d0009656 l       .text  00000000 
d0009656 l       .text  00000000 
d000965a l       .text  00000000 
d000965e l       .text  00000000 
d0009666 l       .text  00000000 
d000966a l       .text  00000000 
d000967a l       .text  00000000 
d000967a l       .text  00000000 
d0009680 l       .text  00000000 
d0009684 l       .text  00000000 
d0009688 l       .text  00000000 
d0009696 l       .text  00000000 
d0009696 l       .text  00000000 
d000969e l       .text  00000000 
d000969e l       .text  00000000 
d00096a2 l       .text  00000000 
d00096ae l       .text  00000000 
d00096ae l       .text  00000000 
d00096b0 l       .text  00000000 
d00096b0 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b8 l       .text  00000000 
d00096b8 l       .text  00000000 
d00096c8 l       .text  00000000 
d00096c8 l       .text  00000000 
d00096ce l       .text  00000000 
d00096d2 l       .text  00000000 
d00096d6 l       .text  00000000 
d00096ec l       .text  00000000 
d00096ec l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f8 l       .text  00000000 
d0009704 l       .text  00000000 
d0009704 l       .text  00000000 
d0009706 l       .text  00000000 
d0009706 l       .text  00000000 
d000970a l       .text  00000000 
d000970a l       .text  00000000 
d000970e l       .text  00000000 
d000970e l       .text  00000000 
d000971e l       .text  00000000 
d000971e l       .text  00000000 
d0009724 l       .text  00000000 
d0009728 l       .text  00000000 
d000972c l       .text  00000000 
d0009730 l       .text  00000000 
d0009744 l       .text  00000000 
d0009744 l       .text  00000000 
d0009748 l       .text  00000000 
d0009748 l       .text  00000000 
d000974a l       .text  00000000 
d000974a l       .text  00000000 
d000974e l       .text  00000000 
d000974e l       .text  00000000 
d0009752 l       .text  00000000 
d000975e l       .text  00000000 
d000975e l       .text  00000000 
d0009762 l       .text  00000000 
d0009762 l       .text  00000000 
d0009764 l       .text  00000000 
d0009774 l       .text  00000000 
d000977a l       .text  00000000 
d000977e l       .text  00000000 
d0009786 l       .text  00000000 
d0009786 l       .text  00000000 
d000978a l       .text  00000000 
d0009792 l       .text  00000000 
d0009792 l       .text  00000000 
d0009796 l       .text  00000000 
d0009796 l       .text  00000000 
d000979a l       .text  00000000 
d000979a l       .text  00000000 
d00097a4 l       .text  00000000 
d00097a4 l       .text  00000000 
d00097aa l       .text  00000000 
d00097aa l       .text  00000000 
d00097ae l       .text  00000000 
d00097b8 l       .text  00000000 
d00097b8 l       .text  00000000 
d00097be l       .text  00000000 
d00097c6 l       .text  00000000 
d00097c6 l       .text  00000000 
d00097ce l       .text  00000000 
d00097ce l       .text  00000000 
d00097ce l       .text  00000000 
d00097ce l       .text  00000000 
d00097ce l       .text  00000000 
d00097ce l       .text  00000000 
d00097d0 l       .text  00000000 
d00097f2 l       .text  00000000 
d00097f4 l       .text  00000000 
d00097f4 l       .text  00000000 
d00097f6 l       .text  00000000 
d00097f6 l       .text  00000000 
d0009812 l       .text  00000000 
d0009812 l       .text  00000000 
d0009812 l       .text  00000000 
d0009812 l       .text  00000000 
d0009816 l       .text  00000000 
d0009818 l       .text  00000000 
d0009818 l       .text  00000000 
d000981c l       .text  00000000 
d000981c l       .text  00000000 
d000981e l       .text  00000000 
d000eca4 l     O .rodata        00000008 kPages
d0009844 l       .text  00000000 
d0009844 l       .text  00000000 
d0009850 l       .text  00000000 
d0009850 l       .text  00000000 
d0009852 l       .text  00000000 
d0009860 l       .text  00000000 
d0009860 l       .text  00000000 
d0009864 l       .text  00000000 
d0009864 l       .text  00000000 
d0009868 l       .text  00000000 
d0009868 l       .text  00000000 
d000986e l       .text  00000000 
d000986e l       .text  00000000 
d0009874 l       .text  00000000 
d0009874 l       .text  00000000 
d000987e l       .text  00000000 
d000987e l       .text  00000000 
d0009882 l       .text  00000000 
d0009886 l       .text  00000000 
d000988a l       .text  00000000 
d000988a l       .text  00000000 
d0009894 l       .text  00000000 
d0009896 l       .text  00000000 
d0009896 l       .text  00000000 
d0009898 l       .text  00000000 
d0009898 l       .text  00000000 
d000989c l       .text  00000000 
d000989c l       .text  00000000 
d00098a0 l       .text  00000000 
d00098ac l       .text  00000000 
d00098ac l       .text  00000000 
d00098ae l       .text  00000000 
d00098b0 l       .text  00000000 
d00098b2 l       .text  00000000 
d00098b4 l       .text  00000000 
d00098b6 l       .text  00000000 
d00098bc l       .text  00000000 
d00098bc l       .text  00000000 
d00098be l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c2 l       .text  00000000 
d00098c2 l       .text  00000000 
d00098c6 l       .text  00000000 
d00098d2 l       .text  00000000 
d00098d2 l       .text  00000000 
d00098d8 l       .text  00000000 
d00098d8 l       .text  00000000 
d00098e4 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098e6 l       .text  00000000 
d00098ea l       .text  00000000 
d00098ea l       .text  00000000 
d00098f0 l       .text  00000000 
d00098f0 l       .text  00000000 
d00098fc l       .text  00000000 
d00098fc l       .text  00000000 
d00098fc l       .text  00000000 
d00098fc l       .text  00000000 
d0009902 l       .text  00000000 
d0009902 l       .text  00000000 
d0009908 l       .text  00000000 
d0009908 l       .text  00000000 
d000990a l       .text  00000000 
d000990a l       .text  00000000 
d000990c l       .text  00000000 
d000990e l       .text  00000000 
d0009910 l       .text  00000000 
d0009910 l       .text  00000000 
d0009912 l       .text  00000000 
d0009912 l       .text  00000000 
d0009914 l       .text  00000000 
d000991a l       .text  00000000 
d000991a l       .text  00000000 
d000991e l       .text  00000000 
d000991e l       .text  00000000 
d000992a l       .text  00000000 
d000992a l       .text  00000000 
d000992c l       .text  00000000 
d000992c l       .text  00000000 
d0009930 l       .text  00000000 
d0009930 l       .text  00000000 
d0009936 l       .text  00000000 
d0009936 l       .text  00000000 
d0009946 l       .text  00000000 
d0009946 l       .text  00000000 
d0009948 l       .text  00000000 
d0009948 l       .text  00000000 
d000994c l       .text  00000000 
d000994c l       .text  00000000 
d0009958 l       .text  00000000 
d000995a l       .text  00000000 
d000995a l       .text  00000000 
d000995c l       .text  00000000 
d000995c l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d000996e l       .text  00000000 
d000996e l       .text  00000000 
d0009970 l       .text  00000000 
d0009978 l       .text  00000000 
d0009978 l       .text  00000000 
d0009984 l       .text  00000000 
d0009984 l       .text  00000000 
d0009986 l       .text  00000000 
d0009986 l       .text  00000000 
d000998a l       .text  00000000 
d000998a l       .text  00000000 
d000998c l       .text  00000000 
d000998c l       .text  00000000 
d000999e l       .text  00000000 
d000999e l       .text  00000000 
d00099a0 l       .text  00000000 
d00099a0 l       .text  00000000 
d00099a4 l       .text  00000000 
d00099a4 l       .text  00000000 
d00099a8 l       .text  00000000 
d00099ae l       .text  00000000 
d00099ae l       .text  00000000 
d00099ba l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099c0 l       .text  00000000 
d00099cc l       .text  00000000 
d00099cc l       .text  00000000 
d00099d0 l       .text  00000000 
d00099d0 l       .text  00000000 
d00099d2 l       .text  00000000 
d00099d2 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099d6 l       .text  00000000 
d00099e4 l       .text  00000000 
d00099e4 l       .text  00000000 
d00099e6 l       .text  00000000 
d00099e6 l       .text  00000000 
d00099e8 l       .text  00000000 
d00099e8 l       .text  00000000 
d00099ea l       .text  00000000 
d00099ea l       .text  00000000 
d00099f6 l       .text  00000000 
d00099f6 l       .text  00000000 
d00099f8 l       .text  00000000 
d00099fc l       .text  00000000 
d00099fc l       .text  00000000 
d0009a08 l       .text  00000000 
d0009a08 l       .text  00000000 
d0009a0a l       .text  00000000 
d0009a0a l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a12 l       .text  00000000 
d0009a12 l       .text  00000000 
d0009a22 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a26 l       .text  00000000 
d0009a2e l       .text  00000000 
d0009a32 l       .text  00000000 
d0009a3e l       .text  00000000 
d0009a52 l       .text  00000000 
d0009a5a l       .text  00000000 
d0009a62 l       .text  00000000 
d0009a68 l       .text  00000000 
d0009a68 l       .text  00000000 
d0009a68 l       .text  00000000 
d0009a68 l       .text  00000000 
d0009a6c l       .text  00000000 
d0009a6e l       .text  00000000 
d0009a6e l       .text  00000000 
d0009a6e l       .text  00000000 
d0009a6e l       .text  00000000 
d0009a72 l       .text  00000000 
d0009a76 l       .text  00000000 
d0009a8a l       .text  00000000 
d0009a9c l       .text  00000000 
d0009ab0 l       .text  00000000 
d0009ab8 l       .text  00000000 
d0009acc l       .text  00000000 
d0009ade l       .text  00000000 
d0009ade l       .text  00000000 
d0009ae4 l       .text  00000000 
d0009ae4 l       .text  00000000 
d0009af2 l       .text  00000000 
d0009af2 l       .text  00000000 
d0009afa l       .text  00000000 
d0009b00 l       .text  00000000 
d0009b00 l       .text  00000000 
d0009b02 l       .text  00000000 
d0009b02 l       .text  00000000 
d0009b06 l       .text  00000000 
d0009b06 l       .text  00000000 
d0009b08 l       .text  00000000 
d0009b08 l       .text  00000000 
d0009b14 l       .text  00000000 
d0009b14 l       .text  00000000 
d0009b16 l       .text  00000000 
d0009b16 l       .text  00000000 
d0009b1e l       .text  00000000 
d0009b1e l       .text  00000000 
d0009b2e l       .text  00000000 
d0009b2e l       .text  00000000 
d0009b30 l       .text  00000000 
d0009b40 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b6a l       .text  00000000 
d0009b72 l       .text  00000000 
d0009b74 l       .text  00000000 
d0009b74 l       .text  00000000 
d0009b78 l       .text  00000000 
d0009b78 l       .text  00000000 
d0009b7c l       .text  00000000 
d0009b84 l       .text  00000000 
d0009b84 l       .text  00000000 
d0009b8c l       .text  00000000 
d0009b8c l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b9c l       .text  00000000 
d0009b9c l       .text  00000000 
d0009ba0 l       .text  00000000 
d0009ba0 l       .text  00000000 
d0009ba2 l       .text  00000000 
d000ecac l     O .rodata        00000024 kCheckShares
d0009bb2 l       .text  00000000 
d0009bb2 l       .text  00000000 
d0009bb4 l       .text  00000000 
d0009bb6 l       .text  00000000 
d0009bba l       .text  00000000 
d0009bbc l       .text  00000000 
d0009bbc l       .text  00000000 
d0009bbe l       .text  00000000 
d0009bc0 l       .text  00000000 
d0009bc4 l       .text  00000000 
d0009bc4 l       .text  00000000 
d0009bc6 l       .text  00000000 
d0009bc6 l       .text  00000000 
d0009bd0 l       .text  00000000 
d0009bd0 l       .text  00000000 
d0009bd2 l       .text  00000000 
d0009bde l       .text  00000000 
d0009be2 l       .text  00000000 
d0009bee l       .text  00000000 
d0009bee l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf4 l       .text  00000000 
d0009bf4 l       .text  00000000 
d0009bf8 l       .text  00000000 
d0009bf8 l       .text  00000000 
d0009c06 l       .text  00000000 
d0009c08 l       .text  00000000 
d0009c12 l       .text  00000000 
d0009c12 l       .text  00000000 
00001126 l       .debug_loc     00000000 
00001157 l       .debug_loc     00000000 
00001188 l       .debug_loc     00000000 
000011ae l       .debug_loc     00000000 
000011c9 l       .debug_loc     00000000 
000011ef l       .debug_loc     00000000 
00001220 l       .debug_loc     00000000 
00001251 l       .debug_loc     00000000 
0000127c l       .debug_loc     00000000 
000012ce l       .debug_loc     00000000 
000012f4 l       .debug_loc     00000000 
0000133b l       .debug_loc     00000000 
00001361 l       .debug_loc     00000000 
00001387 l       .debug_loc     00000000 
000013ad l       .debug_loc     00000000 
000013e9 l       .debug_loc     00000000 
00001428 l       .debug_loc     00000000 
00001465 l       .debug_loc     00000000 
00001497 l       .debug_loc     00000000 
000014bf l       .debug_loc     00000000 
000014f0 l       .debug_loc     00000000 
00001516 l       .debug_loc     00000000 
00001553 l       .debug_loc     00000000 
000015b7 l       .debug_loc     00000000 
000015f6 l       .debug_loc     00000000 
0000161e l       .debug_loc     00000000 
00001644 l       .debug_loc     00000000 
0000166a l       .debug_loc     00000000 
00001685 l       .debug_loc     00000000 
000016ab l       .debug_loc     00000000 
000016c6 l       .debug_loc     00000000 
000016e1 l       .debug_loc     00000000 
00001707 l       .debug_loc     00000000 
0000172d l       .debug_loc     00000000 
00001748 l       .debug_loc     00000000 
00001785 l       .debug_loc     00000000 
000017ba l       .debug_loc     00000000 
000017f1 l       .debug_loc     00000000 
00001824 l       .debug_loc     00000000 
00001859 l       .debug_loc     00000000 
0000187f l       .debug_loc     00000000 
000018a5 l       .debug_loc     00000000 
000018e3 l       .debug_loc     00000000 
0000191a l       .debug_loc     00000000 
00001940 l       .debug_loc     00000000 
0000197c l       .debug_loc     00000000 
000019a2 l       .debug_loc     00000000 
000019c8 l       .debug_loc     00000000 
000019e3 l       .debug_loc     00000000 
00001a09 l       .debug_loc     00000000 
00001a2f l       .debug_loc     00000000 
00001a55 l       .debug_loc     00000000 
00001a70 l       .debug_loc     00000000 
00001a96 l       .debug_loc     00000000 
00001ab1 l       .debug_loc     00000000 
00001ad7 l       .debug_loc     00000000 
00001af2 l       .debug_loc     00000000 
00001b0d l       .debug_loc     00000000 
00001b28 l       .debug_loc     00000000 
00001b43 l       .debug_loc     00000000 
00001b5e l       .debug_loc     00000000 
00001b87 l       .debug_loc     00000000 
00001ba2 l       .debug_loc     00000000 
00001bbd l       .debug_loc     00000000 
00001bd8 l       .debug_loc     00000000 
00001bfe l       .debug_loc     00000000 
00001c24 l       .debug_loc     00000000 
00001c4a l       .debug_loc     00000000 
00001c70 l       .debug_loc     00000000 
00001c8b l       .debug_loc     00000000 
00001ca6 l       .debug_loc     00000000 
00001cc1 l       .debug_loc     00000000 
00001cdc l       .debug_loc     00000000 
00001cf7 l       .debug_loc     00000000 
00001d12 l       .debug_loc     00000000 
00001d2d l       .debug_loc     00000000 
00001d5e l       .debug_loc     00000000 
00001d9f l       .debug_loc     00000000 
00001ddc l       .debug_loc     00000000 
00001e03 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000018bd l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000248 l       .debug_ranges  00000000 
000018e7 l       .debug_str     00000000 
00001b87 l       .debug_str     00000000 
00001b72 l       .debug_str     00000000 
000018ee l       .debug_str     00000000 
0000190a l       .debug_str     00000000 
0000192a l       .debug_str     00000000 
00001948 l       .debug_str     00000000 
0000196a l       .debug_str     00000000 
0000198c l       .debug_str     00000000 
000019ae l       .debug_str     00000000 
000019cf l       .debug_str     00000000 
000019f0 l       .debug_str     00000000 
00001a11 l       .debug_str     00000000 
00001a32 l       .debug_str     00000000 
00001a4e l       .debug_str     00000000 
00001a6a l       .debug_str     00000000 
00001a87 l       .debug_str     00000000 
00001aa4 l       .debug_str     00000000 
00001ac6 l       .debug_str     00000000 
00001ae8 l       .debug_str     00000000 
00001b0d l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
00001b4f l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001b9e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00001bab l       .debug_str     00000000 
00001bbf l       .debug_str     00000000 
00001bd3 l       .debug_str     00000000 
00001be9 l       .debug_str     00000000 
00001c04 l       .debug_str     00000000 
00001c16 l       .debug_str     00000000 
00001c29 l       .debug_str     00000000 
00001c3c l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00001c54 l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
00000a75 l       .debug_str     00000000 
00000a9f l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ae7 l       .debug_str     00000000 
00000b00 l       .debug_str     00000000 
00000b1c l       .debug_str     00000000 
00000b3a l       .debug_str     00000000 
00000b5d l       .debug_str     00000000 
00001d17 l       .debug_str     00000000 
00001d2c l       .debug_str     00000000 
00001d3b l       .debug_str     00000000 
00000c5c l       .debug_str     00000000 
00001d4d l       .debug_str     00000000 
00001d8f l       .debug_str     00000000 
00001d5f l       .debug_str     00000000 
00001d77 l       .debug_str     00000000 
00001da5 l       .debug_str     00000000 
00001dbd l       .debug_str     00000000 
00001dd5 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00001dea l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001ba7 l       .debug_str     00000000 
00001e00 l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002ba8 l       .debug_str     00000000 
00001ef0 l       .debug_str     00000000 
00006a41 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000fa7 l       .debug_str     00000000 
00001e10 l       .debug_str     00000000 
00001238 l       .debug_str     00000000 
00002026 l       .debug_str     00000000 
00000108 l       .debug_ranges  00000000 
00001fe5 l       .debug_str     00000000 
00001e8e l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00000128 l       .debug_ranges  00000000 
00000210 l       .debug_ranges  00000000 
00000148 l       .debug_ranges  00000000 
00000160 l       .debug_ranges  00000000 
00000178 l       .debug_ranges  00000000 
00000190 l       .debug_ranges  00000000 
000001a8 l       .debug_ranges  00000000 
000001c0 l       .debug_ranges  00000000 
000001e0 l       .debug_ranges  00000000 
000001f8 l       .debug_ranges  00000000 
000010a5 l       .debug_str     00000000 
000014a2 l       .debug_str     00000000 
000014b3 l       .debug_str     00000000 
000014e6 l       .debug_str     00000000 
00001e29 l       .debug_str     00000000 
0000202d l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
00001e98 l       .debug_str     00000000 
00001e87 l       .debug_str     00000000 
00001e44 l       .debug_str     00000000 
00001e54 l       .debug_str     00000000 
00001e66 l       .debug_str     00000000 
00001e76 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00001eab l       .debug_str     00000000 
00001ecb l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00001771 l       .debug_str     00000000 
00001ed9 l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00001ee9 l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00001efb l       .debug_str     00000000 
00001f10 l       .debug_str     00000000 
00001f1a l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00001f2b l       .debug_str     00000000 
00001f56 l       .debug_str     00000000 
000028f8 l       .debug_str     00000000 
00001010 l       .debug_str     00000000 
0000248f l       .debug_str     00000000 
00001f45 l       .debug_str     00000000 
00001f67 l       .debug_str     00000000 
0000167a l       .debug_str     00000000 
00001802 l       .debug_str     00000000 
00000230 l       .debug_ranges  00000000 
00001f7c l       .debug_str     00000000 
00002000 l       .debug_str     00000000 
00002032 l       .debug_str     00000000 
0000203c l       .debug_str     00000000 
000018b0 l       .debug_str     00000000 
00002047 l       .debug_str     00000000 
00002010 l       .debug_str     00000000 
00001f97 l       .debug_str     00000000 
00001fad l       .debug_str     00000000 
00006e98 l       .debug_str     00000000 
00001fc8 l       .debug_str     00000000 
00001fde l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000158 l       .debug_frame   00000000 
d00097ce l       .text  00000000 
d0009b68 l       .text  00000000 
d0009c12 l       .text  00000000 
00000000 l    df *ABS*  00000000 bootstrap.c
d0009c12 l       .text  00000000 
d0009c12 l       .text  00000000 
d0009c12 l       .text  00000000 
d0009c14 l       .text  00000000 
d0009c14 l       .text  00000000 
d0009c16 l       .text  00000000 
d0009c1e l       .text  00000000 
d0009c20 l       .text  00000000 
d0009c20 l       .text  00000000 
d0009c22 l       .text  00000000 
d0009c22 l       .text  00000000 
d0009c2a l       .text  00000000 
d0009c2a l       .text  00000000 
d0009c2e l       .text  00000000 
d0009c2e l       .text  00000000 
d0009c3e l       .text  00000000 
d0009c3e l       .text  00000000 
d0009c44 l       .text  00000000 
d0009c44 l       .text  00000000 
d0009c46 l       .text  00000000 
d0009c4a l       .text  00000000 
d0009c4a l       .text  00000000 
d0009c4c l       .text  00000000 
d0009c4c l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c54 l       .text  00000000 
d0009c62 l       .text  00000000 
d0009c68 l       .text  00000000 
d0009c68 l       .text  00000000 
d0009c68 l       .text  00000000 
d0009c68 l       .text  00000000 
d0009c68 l       .text  00000000 
d0009c6a l       .text  00000000 
d0009c6a l       .text  00000000 
d0009c9e l       .text  00000000 
d0009ca0 l       .text  00000000 
d0009ca0 l       .text  00000000 
d0009ca2 l       .text  00000000 
d0009ca2 l       .text  00000000 
d0009ca6 l       .text  00000000 
d0009ca6 l       .text  00000000 
d0009caa l       .text  00000000 
d0009caa l       .text  00000000 
d0009cb6 l       .text  00000000 
d0009cb8 l       .text  00000000 
d0009cb8 l       .text  00000000 
d0009d18 l       .text  00000000 
d0009d18 l       .text  00000000 
d0009d1a l       .text  00000000 
d0009d1a l       .text  00000000 
d0009d1e l       .text  00000000 
d0009d22 l       .text  00000000 
d0009d26 l       .text  00000000 
d0009d2a l       .text  00000000 
d0009d36 l       .text  00000000 
d0009d36 l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d46 l       .text  00000000 
d0009d46 l       .text  00000000 
d0009d4a l       .text  00000000 
d0009d4a l       .text  00000000 
d0009d4c l       .text  00000000 
d0009d4c l       .text  00000000 
d0009d4e l       .text  00000000 
d0009d4e l       .text  00000000 
d0009d52 l       .text  00000000 
d0009d52 l       .text  00000000 
d0009d56 l       .text  00000000 
d0009d56 l       .text  00000000 
d0009d58 l       .text  00000000 
d0009ffe l     F .text  0000005e bootstrap_chip_erase
d0009d64 l       .text  00000000 
d0009d66 l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d68 l       .text  00000000 
d0009d6c l       .text  00000000 
d0009d7a l       .text  00000000 
d0009d7a l       .text  00000000 
d0009d7c l       .text  00000000 
d0009d7c l       .text  00000000 
d0009d88 l       .text  00000000 
d0009d88 l       .text  00000000 
d0009d94 l       .text  00000000 
d0009d94 l       .text  00000000 
d0009d98 l       .text  00000000 
d0009d9a l       .text  00000000 
d0009d9a l       .text  00000000 
d0009d9e l       .text  00000000 
d0009d9e l       .text  00000000 
d0009da0 l       .text  00000000 
d0009da4 l       .text  00000000 
d0009da6 l       .text  00000000 
d0009da6 l       .text  00000000 
d0009da8 l       .text  00000000 
d0009da8 l       .text  00000000 
d0009dac l       .text  00000000 
d0009dac l       .text  00000000 
d0009db0 l       .text  00000000 
d0009db2 l       .text  00000000 
d0009db2 l       .text  00000000 
d0009db6 l       .text  00000000 
d0009dcc l       .text  00000000 
d0009dce l       .text  00000000 
d0009dce l       .text  00000000 
d0009dd8 l       .text  00000000 
d0009dde l       .text  00000000 
d0009dde l       .text  00000000 
d0009de2 l       .text  00000000 
d0009df4 l       .text  00000000 
d0009df4 l       .text  00000000 
d0009dfe l       .text  00000000 
d0009e00 l       .text  00000000 
d0009e00 l       .text  00000000 
d0009e06 l       .text  00000000 
d0009e0c l       .text  00000000 
d0009e0e l       .text  00000000 
d0009e0e l       .text  00000000 
d0009e20 l       .text  00000000 
d0009e20 l       .text  00000000 
d0009e22 l       .text  00000000 
d0009e22 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e34 l       .text  00000000 
d0009e34 l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e5c l       .text  00000000 
d0009e64 l       .text  00000000 
d0009e66 l       .text  00000000 
d0009e66 l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e72 l       .text  00000000 
d0009e72 l       .text  00000000 
d0009e76 l       .text  00000000 
d0009e82 l       .text  00000000 
d0009e82 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e88 l       .text  00000000 
d0009e94 l       .text  00000000 
d0009e94 l       .text  00000000 
d0009e96 l       .text  00000000 
d0009e96 l       .text  00000000 
d0009e98 l       .text  00000000 
d0009e9a l       .text  00000000 
d0009ea2 l       .text  00000000 
d0009ea2 l       .text  00000000 
d0009ea6 l       .text  00000000 
d0009ea8 l       .text  00000000 
d0009eaa l       .text  00000000 
d0009eaa l       .text  00000000 
d0009eac l       .text  00000000 
d0009eac l       .text  00000000 
d0009eae l       .text  00000000 
d0009eae l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb8 l       .text  00000000 
d0009eb8 l       .text  00000000 
d0009eba l       .text  00000000 
d0009eba l       .text  00000000 
d0009ebe l       .text  00000000 
d0009ebe l       .text  00000000 
d0009ec0 l       .text  00000000 
d0009ec0 l       .text  00000000 
d0009ecc l       .text  00000000 
d0009ecc l       .text  00000000 
d0009ece l       .text  00000000 
d0009ece l       .text  00000000 
d0009ed2 l       .text  00000000 
d0009ed2 l       .text  00000000 
d0009ed4 l       .text  00000000 
d0009ed6 l       .text  00000000 
d0009eda l       .text  00000000 
d0009edc l       .text  00000000 
d0009ee2 l       .text  00000000 
d0009ee2 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009eea l       .text  00000000 
d0009eee l       .text  00000000 
d0009eee l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef4 l       .text  00000000 
d0009f06 l       .text  00000000 
d0009f06 l       .text  00000000 
d0009f0a l       .text  00000000 
d0009f0a l       .text  00000000 
d0009f0e l       .text  00000000 
d0009f10 l       .text  00000000 
d0009f10 l       .text  00000000 
d0009f18 l       .text  00000000 
d0009f18 l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f1c l       .text  00000000 
d0009f20 l       .text  00000000 
d0009f22 l       .text  00000000 
d0009f22 l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f2e l       .text  00000000 
d0009f2e l       .text  00000000 
d0009f32 l       .text  00000000 
d0009f36 l       .text  00000000 
d0009f3e l       .text  00000000 
d0009f3e l       .text  00000000 
d0009f42 l       .text  00000000 
d0009f42 l       .text  00000000 
d0009f46 l       .text  00000000 
d0009f46 l       .text  00000000 
d0009f4e l       .text  00000000 
d0009f50 l       .text  00000000 
d0009f50 l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f64 l       .text  00000000 
d0009f64 l       .text  00000000 
d0009f66 l       .text  00000000 
d0009f66 l       .text  00000000 
d0009f6a l       .text  00000000 
d0009f78 l       .text  00000000 
d0009f78 l       .text  00000000 
d0009f84 l       .text  00000000 
d0009f84 l       .text  00000000 
d0009f86 l       .text  00000000 
d0009f86 l       .text  00000000 
d0009f8a l       .text  00000000 
d0009f96 l       .text  00000000 
d0009f96 l       .text  00000000 
d0009f98 l       .text  00000000 
d0009f98 l       .text  00000000 
d0009f9a l       .text  00000000 
d0009f9a l       .text  00000000 
d0009f9e l       .text  00000000 
d0009fac l       .text  00000000 
d0009fac l       .text  00000000 
d0009fb2 l       .text  00000000 
d0009fb2 l       .text  00000000 
d0009fb8 l       .text  00000000 
d0009fb8 l       .text  00000000 
d0009fbc l       .text  00000000 
d0009fc0 l       .text  00000000 
d0009ffa l       .text  00000000 
d0009ffa l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d000a000 l       .text  00000000 
d000a000 l       .text  00000000 
d000a008 l       .text  00000000 
d000a014 l       .text  00000000 
d000a014 l       .text  00000000 
d000a01c l       .text  00000000 
d000a024 l       .text  00000000 
d000a026 l       .text  00000000 
d000a026 l       .text  00000000 
d000a030 l       .text  00000000 
d000a032 l       .text  00000000 
d000a032 l       .text  00000000 
d000a03a l       .text  00000000 
d000a03a l       .text  00000000 
d000a03c l       .text  00000000 
d000a03c l       .text  00000000 
d000a040 l       .text  00000000 
d000a04e l       .text  00000000 
d000a04e l       .text  00000000 
d000a05c l       .text  00000000 
d000a05c l       .text  00000000 
00001e29 l       .debug_loc     00000000 
00001e4f l       .debug_loc     00000000 
00001e75 l       .debug_loc     00000000 
00001e9b l       .debug_loc     00000000 
00001ec1 l       .debug_loc     00000000 
00001ee7 l       .debug_loc     00000000 
00001f0f l       .debug_loc     00000000 
00001f6c l       .debug_loc     00000000 
00001f92 l       .debug_loc     00000000 
00001fad l       .debug_loc     00000000 
00001fc8 l       .debug_loc     00000000 
00001ff0 l       .debug_loc     00000000 
00002016 l       .debug_loc     00000000 
00002031 l       .debug_loc     00000000 
0000204c l       .debug_loc     00000000 
000020a6 l       .debug_loc     00000000 
000020cc l       .debug_loc     00000000 
000020e7 l       .debug_loc     00000000 
00002102 l       .debug_loc     00000000 
00002128 l       .debug_loc     00000000 
00002143 l       .debug_loc     00000000 
00002169 l       .debug_loc     00000000 
00002184 l       .debug_loc     00000000 
000021aa l       .debug_loc     00000000 
000021f1 l       .debug_loc     00000000 
00002217 l       .debug_loc     00000000 
00002248 l       .debug_loc     00000000 
0000226e l       .debug_loc     00000000 
0000228d l       .debug_loc     00000000 
000022a9 l       .debug_loc     00000000 
000022cf l       .debug_loc     00000000 
00002303 l       .debug_loc     00000000 
00002329 l       .debug_loc     00000000 
0000234f l       .debug_loc     00000000 
00002386 l       .debug_loc     00000000 
000023ac l       .debug_loc     00000000 
000023d2 l       .debug_loc     00000000 
000023f8 l       .debug_loc     00000000 
00002413 l       .debug_loc     00000000 
0000242e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002050 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002c0 l       .debug_ranges  00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
000020c1 l       .debug_str     00000000 
0000207a l       .debug_str     00000000 
0000208f l       .debug_str     00000000 
000020aa l       .debug_str     00000000 
000021c2 l       .debug_str     00000000 
000020d1 l       .debug_str     00000000 
000020ec l       .debug_str     00000000 
00002108 l       .debug_str     00000000 
00002121 l       .debug_str     00000000 
0000213b l       .debug_str     00000000 
00002157 l       .debug_str     00000000 
00002173 l       .debug_str     00000000 
00002189 l       .debug_str     00000000 
000021a5 l       .debug_str     00000000 
000021d4 l       .debug_str     00000000 
000021ef l       .debug_str     00000000 
00002208 l       .debug_str     00000000 
00002224 l       .debug_str     00000000 
00002242 l       .debug_str     00000000 
00002260 l       .debug_str     00000000 
00001d8f l       .debug_str     00000000 
00001d5f l       .debug_str     00000000 
00001d77 l       .debug_str     00000000 
00002271 l       .debug_str     00000000 
0000227d l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
0000228b l       .debug_str     00000000 
0000229a l       .debug_str     00000000 
000022ad l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
000011f7 l       .debug_str     00000000 
00001ba7 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
000022d0 l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
00002333 l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
000018b0 l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000022e7 l       .debug_str     00000000 
00002337 l       .debug_str     00000000 
00002328 l       .debug_str     00000000 
000021cd l       .debug_str     00000000 
00006765 l       .debug_str     00000000 
0000230d l       .debug_str     00000000 
00002320 l       .debug_str     00000000 
000022f9 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
0000235c l       .debug_str     00000000 
00002375 l       .debug_str     00000000 
0000238c l       .debug_str     00000000 
00002392 l       .debug_str     00000000 
00002398 l       .debug_str     00000000 
000023b6 l       .debug_str     00000000 
00002315 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000023cd l       .debug_str     00000000 
000023e5 l       .debug_str     00000000 
000023f4 l       .debug_str     00000000 
0000240b l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000025f8 l       .debug_str     00000000 
0000121c l       .debug_str     00000000 
00001201 l       .debug_str     00000000 
00000278 l       .debug_ranges  00000000 
000002a0 l       .debug_ranges  00000000 
0000241e l       .debug_str     00000000 
0000242e l       .debug_str     00000000 
00002441 l       .debug_str     00000000 
00002513 l       .debug_str     00000000 
0000245d l       .debug_str     00000000 
00001f56 l       .debug_str     00000000 
000028f8 l       .debug_str     00000000 
00001010 l       .debug_str     00000000 
0000248f l       .debug_str     00000000 
00001f45 l       .debug_str     00000000 
0000247f l       .debug_str     00000000 
00002495 l       .debug_str     00000000 
000024b2 l       .debug_str     00000000 
000024d0 l       .debug_str     00000000 
000024e6 l       .debug_str     00000000 
000024f3 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
00000218 l       .debug_frame   00000000 
d0009c68 l       .text  00000000 
d0009ffe l       .text  00000000 
d000a05c l       .text  00000000 
00000000 l    df *ABS*  00000000 spi_device.c
d000a05c l       .text  00000000 
d000a05c l       .text  00000000 
d000a05c l       .text  00000000 
d000a05e l       .text  00000000 
d000a05e l       .text  00000000 
d000a064 l       .text  00000000 
d000a064 l       .text  00000000 
d000a076 l       .text  00000000 
d000a076 l       .text  00000000 
d000a07e l       .text  00000000 
d000a07e l       .text  00000000 
d000a080 l       .text  00000000 
d000a080 l       .text  00000000 
d000a086 l       .text  00000000 
d000a086 l       .text  00000000 
d000a08a l       .text  00000000 
d000a08e l       .text  00000000 
d000a090 l       .text  00000000 
d000a090 l       .text  00000000 
d000a092 l       .text  00000000 
d000a092 l       .text  00000000 
d000a094 l       .text  00000000 
d000a094 l       .text  00000000 
d000a098 l       .text  00000000 
d000a09a l       .text  00000000 
d000a09a l       .text  00000000 
d000a0a2 l       .text  00000000 
d000a0a2 l       .text  00000000 
d000a0a4 l       .text  00000000 
d000a0a4 l       .text  00000000 
d000a0a6 l       .text  00000000 
d000a0a6 l       .text  00000000 
d000a0b2 l       .text  00000000 
d000a0b2 l       .text  00000000 
d000a0b6 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0bc l       .text  00000000 
d000a0bc l       .text  00000000 
d000a0be l       .text  00000000 
d000a0be l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c4 l       .text  00000000 
d000a0c4 l       .text  00000000 
d000a0cc l       .text  00000000 
d000a0ce l       .text  00000000 
d000a0d2 l       .text  00000000 
d000a0d2 l       .text  00000000 
d000a0d6 l       .text  00000000 
d000a0d8 l       .text  00000000 
d000a0d8 l       .text  00000000 
d000a0da l       .text  00000000 
d000a0da l       .text  00000000 
d000a0de l       .text  00000000 
d000a0e4 l       .text  00000000 
d000a0e4 l       .text  00000000 
d000a0e8 l       .text  00000000 
d000a0e8 l       .text  00000000 
d000a0ea l       .text  00000000 
d000a0ea l       .text  00000000 
d000a0ee l       .text  00000000 
d000a0ee l       .text  00000000 
d000a0f2 l       .text  00000000 
d000a0f2 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a102 l       .text  00000000 
d000a102 l       .text  00000000 
d000a10a l       .text  00000000 
d000a10a l       .text  00000000 
d000a116 l       .text  00000000 
d000a116 l       .text  00000000 
d000a122 l       .text  00000000 
d000a122 l       .text  00000000 
d000a12a l       .text  00000000 
d000a12a l       .text  00000000 
d000a132 l       .text  00000000 
d000a132 l       .text  00000000 
d000a13a l       .text  00000000 
d000a13a l       .text  00000000 
d000a142 l       .text  00000000 
d000a142 l       .text  00000000 
d000a148 l       .text  00000000 
d000a148 l       .text  00000000 
d000a14c l       .text  00000000 
d000a14c l       .text  00000000 
d000a156 l       .text  00000000 
d000a156 l       .text  00000000 
d000a156 l       .text  00000000 
d000a156 l       .text  00000000 
d000a156 l       .text  00000000 
d000a15a l       .text  00000000 
d000a15a l       .text  00000000 
d000a15c l       .text  00000000 
d000a15c l       .text  00000000 
d000a160 l       .text  00000000 
d000a160 l       .text  00000000 
d000a16c l       .text  00000000 
d000a16c l       .text  00000000 
d000a16e l       .text  00000000 
d000a16e l       .text  00000000 
d000a170 l       .text  00000000 
d000a170 l       .text  00000000 
d000a172 l       .text  00000000 
d000a172 l       .text  00000000 
d000a174 l       .text  00000000 
d000a176 l       .text  00000000 
d000a176 l       .text  00000000 
d000a178 l       .text  00000000 
d000a178 l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17c l       .text  00000000 
d000a17c l       .text  00000000 
d000a17e l       .text  00000000 
d000a182 l       .text  00000000 
d000a182 l       .text  00000000 
d000a184 l       .text  00000000 
d000a184 l       .text  00000000 
d000a186 l       .text  00000000 
d000a18a l       .text  00000000 
d000a18a l       .text  00000000 
d000a18c l       .text  00000000 
d000a18c l       .text  00000000 
d000a190 l       .text  00000000 
d000a190 l       .text  00000000 
d000a196 l       .text  00000000 
d000a1a2 l       .text  00000000 
d000a1a2 l       .text  00000000 
d000a1a8 l       .text  00000000 
d000a1aa l       .text  00000000 
d000a1aa l       .text  00000000 
d000a1ac l       .text  00000000 
d000a1b8 l       .text  00000000 
d000a1b8 l       .text  00000000 
d000a1bc l       .text  00000000 
d000a1bc l       .text  00000000 
d000a1be l       .text  00000000 
d000a1be l       .text  00000000 
d000a1c2 l       .text  00000000 
d000a1c4 l       .text  00000000 
d000a1c4 l       .text  00000000 
d000a1c6 l       .text  00000000 
d000a1c8 l       .text  00000000 
d000a1ce l       .text  00000000 
d000a1ce l       .text  00000000 
d000a1d2 l       .text  00000000 
d000a1d6 l       .text  00000000 
d000a1da l       .text  00000000 
d000a1da l       .text  00000000 
d000a1da l       .text  00000000 
d000a1da l       .text  00000000 
d000a1da l       .text  00000000 
d000a1de l       .text  00000000 
d000a1de l       .text  00000000 
d000a1e2 l       .text  00000000 
d000a1e2 l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1e8 l       .text  00000000 
d000a1e8 l       .text  00000000 
d000a1ea l       .text  00000000 
d000a1ea l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1ec l       .text  00000000 
00002454 l       .debug_loc     00000000 
000024e3 l       .debug_loc     00000000 
0000250a l       .debug_loc     00000000 
00002538 l       .debug_loc     00000000 
0000255a l       .debug_loc     00000000 
0000257c l       .debug_loc     00000000 
000025a0 l       .debug_loc     00000000 
000025e4 l       .debug_loc     00000000 
00002608 l       .debug_loc     00000000 
00002631 l       .debug_loc     00000000 
00002664 l       .debug_loc     00000000 
000026c9 l       .debug_loc     00000000 
000026e4 l       .debug_loc     00000000 
00002723 l       .debug_loc     00000000 
00002750 l       .debug_loc     00000000 
00002786 l       .debug_loc     00000000 
000027c4 l       .debug_loc     00000000 
00002806 l       .debug_loc     00000000 
0000284c l       .debug_loc     00000000 
00002892 l       .debug_loc     00000000 
000028d8 l       .debug_loc     00000000 
0000291e l       .debug_loc     00000000 
00002939 l       .debug_loc     00000000 
0000296a l       .debug_loc     00000000 
0000298e l       .debug_loc     00000000 
000029b5 l       .debug_loc     00000000 
000029d2 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002528 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002f8 l       .debug_ranges  00000000 
0000255b l       .debug_str     00000000 
00002688 l       .debug_str     00000000 
00002672 l       .debug_str     00000000 
000025b4 l       .debug_str     00000000 
000025d9 l       .debug_str     00000000 
0000265b l       .debug_str     00000000 
000025c0 l       .debug_str     00000000 
000025a9 l       .debug_str     00000000 
00001269 l       .debug_str     00000000 
0000256f l       .debug_str     00000000 
0000257e l       .debug_str     00000000 
0000258d l       .debug_str     00000000 
00002599 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00002636 l       .debug_str     00000000 
0000261e l       .debug_str     00000000 
000025e5 l       .debug_str     00000000 
000025f2 l       .debug_str     00000000 
00002603 l       .debug_str     00000000 
00002611 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002660 l       .debug_str     00000000 
00002650 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
000026a6 l       .debug_str     00000000 
000026b9 l       .debug_str     00000000 
000026ca l       .debug_str     00000000 
000026d9 l       .debug_str     00000000 
000026e8 l       .debug_str     00000000 
000026f8 l       .debug_str     00000000 
0000270b l       .debug_str     00000000 
0000271e l       .debug_str     00000000 
00002732 l       .debug_str     00000000 
00002745 l       .debug_str     00000000 
00002758 l       .debug_str     00000000 
00002768 l       .debug_str     00000000 
00002778 l       .debug_str     00000000 
0000278a l       .debug_str     00000000 
0000279c l       .debug_str     00000000 
000027b4 l       .debug_str     00000000 
000027d1 l       .debug_str     00000000 
000027e8 l       .debug_str     00000000 
000027ff l       .debug_str     00000000 
00002816 l       .debug_str     00000000 
00002832 l       .debug_str     00000000 
000021d4 l       .debug_str     00000000 
000021ef l       .debug_str     00000000 
00002208 l       .debug_str     00000000 
00002224 l       .debug_str     00000000 
00002242 l       .debug_str     00000000 
00002260 l       .debug_str     00000000 
000021c2 l       .debug_str     00000000 
000020d1 l       .debug_str     00000000 
000020ec l       .debug_str     00000000 
00002108 l       .debug_str     00000000 
00002121 l       .debug_str     00000000 
0000213b l       .debug_str     00000000 
00002157 l       .debug_str     00000000 
00002173 l       .debug_str     00000000 
00002189 l       .debug_str     00000000 
000021a5 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00002857 l       .debug_str     00000000 
00002864 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
0000289b l       .debug_str     00000000 
0000286d l       .debug_str     00000000 
00002878 l       .debug_str     00000000 
00006765 l       .debug_str     00000000 
00002880 l       .debug_str     00000000 
0000288d l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
0000241e l       .debug_str     00000000 
000028e0 l       .debug_str     00000000 
000029d3 l       .debug_str     00000000 
00002919 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000002e0 l       .debug_ranges  00000000 
000028a6 l       .debug_str     00000000 
000028d6 l       .debug_str     00000000 
000028bb l       .debug_str     00000000 
000028cd l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
0000242e l       .debug_str     00000000 
00002333 l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
00002922 l       .debug_str     00000000 
000024b2 l       .debug_str     00000000 
00002441 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00002906 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00002337 l       .debug_str     00000000 
00002328 l       .debug_str     00000000 
000021cd l       .debug_str     00000000 
0000230d l       .debug_str     00000000 
00002320 l       .debug_str     00000000 
000022f9 l       .debug_str     00000000 
00000290 l       .debug_frame   00000000 
d000a156 l       .text  00000000 
d000a1da l       .text  00000000 
d000a1e4 l       .text  00000000 
d000a1ec l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000a1ec l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1f0 l       .text  00000000 
d000a1f4 l       .text  00000000 
d000a1f6 l       .text  00000000 
d000a1fa l       .text  00000000 
d000a1fc l       .text  00000000 
d000a200 l       .text  00000000 
d000a200 l       .text  00000000 
d000a206 l       .text  00000000 
d000a20a l       .text  00000000 
d000a20c l       .text  00000000 
d000a20e l       .text  00000000 
d000a212 l       .text  00000000 
d000a216 l       .text  00000000 
d000a218 l       .text  00000000 
d000a21a l       .text  00000000 
d000a21a l       .text  00000000 
d000a21a l       .text  00000000 
d000a21a l       .text  00000000 
d000a21a l       .text  00000000 
d000a21e l       .text  00000000 
d000a220 l       .text  00000000 
d000a224 l       .text  00000000 
d000a226 l       .text  00000000 
d000a22a l       .text  00000000 
d000a22c l       .text  00000000 
d000a22e l       .text  00000000 
d000a22e l       .text  00000000 
000029f8 l       .debug_loc     00000000 
00002a13 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000292e l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000320 l       .debug_ranges  00000000 
0000016c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000107e l       .debug_str     00000000 
0000298a l       .debug_str     00000000 
00002991 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00002953 l       .debug_str     00000000 
0000299d l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
0000295d l       .debug_str     00000000 
0000296a l       .debug_str     00000000 
00003256 l       .debug_str     00000000 
00002978 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
000002f0 l       .debug_frame   00000000 
d000a21a l       .text  00000000 
d000a22e l       .text  00000000 
00000000 l    df *ABS*  00000000 string_lib.c
d000a22e l       .text  00000000 
d000a22e l       .text  00000000 
d000a22e l       .text  00000000 
d000a230 l       .text  00000000 
d000a24a l       .text  00000000 
d000a24c l       .text  00000000 
d000a260 l       .text  00000000 
d000a260 l       .text  00000000 
d000a282 l       .text  00000000 
d000a282 l       .text  00000000 
d000a286 l       .text  00000000 
d000a28e l       .text  00000000 
d000a292 l       .text  00000000 
d000a296 l       .text  00000000 
d000a296 l       .text  00000000 
d000a2a2 l       .text  00000000 
d000a2a8 l       .text  00000000 
d000a2a8 l       .text  00000000 
d000a2aa l       .text  00000000 
d000a2aa l       .text  00000000 
d000a2ac l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2b4 l       .text  00000000 
d000a2b8 l       .text  00000000 
d000a2bc l       .text  00000000 
d000a2bc l       .text  00000000 
d000a2c0 l       .text  00000000 
d000a2c0 l       .text  00000000 
d000a2c2 l       .text  00000000 
d000a2c6 l       .text  00000000 
d000a2ca l       .text  00000000 
d000a2d0 l       .text  00000000 
d000a2d8 l       .text  00000000 
d000a2da l       .text  00000000 
d000a2da l       .text  00000000 
d000a2e2 l       .text  00000000 
d000a2e6 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2ec l       .text  00000000 
d000a2ec l       .text  00000000 
d000a2f4 l       .text  00000000 
d000a2f8 l       .text  00000000 
d000a2fa l       .text  00000000 
d000a2fe l       .text  00000000 
d000a2fe l       .text  00000000 
d000a316 l       .text  00000000 
d000a31c l       .text  00000000 
d000a326 l       .text  00000000 
d000a336 l       .text  00000000 
d000a336 l       .text  00000000 
d000a33a l       .text  00000000 
d000a33a l       .text  00000000 
d000a33c l       .text  00000000 
d000a33c l       .text  00000000 
d000a344 l       .text  00000000 
d000a346 l       .text  00000000 
d000a348 l       .text  00000000 
d000a348 l       .text  00000000 
d000a34e l       .text  00000000 
d000a356 l       .text  00000000 
d000a35c l       .text  00000000 
d000a360 l       .text  00000000 
d000a364 l       .text  00000000 
d000a368 l       .text  00000000 
d000a3b0 l     F .text  000000cc qprints
d000a36e l       .text  00000000 
d000a370 l       .text  00000000 
d000a376 l       .text  00000000 
d000a37a l       .text  00000000 
d000a380 l       .text  00000000 
d000a382 l       .text  00000000 
d000a47c l     F .text  00000138 qprinti
d000a38a l       .text  00000000 
d000a38c l       .text  00000000 
d000a38c l       .text  00000000 
d000a38e l       .text  00000000 
d000a390 l       .text  00000000 
d000a390 l       .text  00000000 
d000a3a2 l       .text  00000000 
d000a3b0 l       .text  00000000 
d000a3b0 l       .text  00000000 
d000a3b0 l       .text  00000000 
d000a3b0 l       .text  00000000 
d000a3b0 l       .text  00000000 
d000a3b2 l       .text  00000000 
d000a3c0 l       .text  00000000 
d000a3c2 l       .text  00000000 
d000a3c4 l       .text  00000000 
d000a3c4 l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3cc l       .text  00000000 
d000a3ce l       .text  00000000 
d000a3d0 l       .text  00000000 
d000a3d4 l       .text  00000000 
d000a3d4 l       .text  00000000 
d000a3dc l       .text  00000000 
d000a3e0 l       .text  00000000 
d000a3e0 l       .text  00000000 
d000a3e2 l       .text  00000000 
d000a3e4 l       .text  00000000 
d000a3e8 l       .text  00000000 
d000a3e8 l       .text  00000000 
d000a3f4 l       .text  00000000 
d000a3f6 l       .text  00000000 
d000a3fa l       .text  00000000 
d000a3fa l       .text  00000000 
d000a3fe l       .text  00000000 
d000a3fe l       .text  00000000 
d000a406 l       .text  00000000 
d000a408 l       .text  00000000 
d000a408 l       .text  00000000 
d000a40c l       .text  00000000 
d000a40c l       .text  00000000 
d000a40e l       .text  00000000 
d000a416 l       .text  00000000 
d000a41a l       .text  00000000 
d000a41c l       .text  00000000 
d000a422 l       .text  00000000 
d000a422 l       .text  00000000 
d000a426 l       .text  00000000 
d000a426 l       .text  00000000 
d000a428 l       .text  00000000 
d000a430 l       .text  00000000 
d000a434 l       .text  00000000 
d000a43a l       .text  00000000 
d000a43a l       .text  00000000 
d000a43e l       .text  00000000 
d000a43e l       .text  00000000 
d000a442 l       .text  00000000 
d000a448 l       .text  00000000 
d000a448 l       .text  00000000 
d000a44c l       .text  00000000 
d000a44e l       .text  00000000 
d000a44e l       .text  00000000 
d000a452 l       .text  00000000 
d000a454 l       .text  00000000 
d000a458 l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a462 l       .text  00000000 
d000a462 l       .text  00000000 
d000a464 l       .text  00000000 
d000a464 l       .text  00000000 
d000a468 l       .text  00000000 
d000a47c l       .text  00000000 
d000a47c l       .text  00000000 
d000a47c l       .text  00000000 
d000a47c l       .text  00000000 
d000a47c l       .text  00000000 
d000a47e l       .text  00000000 
d000a488 l       .text  00000000 
d000a48a l       .text  00000000 
d000a48c l       .text  00000000 
d000a48c l       .text  00000000 
d000a48e l       .text  00000000 
d000a492 l       .text  00000000 
d000a492 l       .text  00000000 
d000a49a l       .text  00000000 
d000a4a8 l       .text  00000000 
d000a4ac l       .text  00000000 
d000a4ac l       .text  00000000 
d000a4b0 l       .text  00000000 
d000a4b0 l       .text  00000000 
d000a4b2 l       .text  00000000 
d000a4b6 l       .text  00000000 
d000a4ba l       .text  00000000 
d000a4bc l       .text  00000000 
d000a4c4 l       .text  00000000 
d000a4c6 l       .text  00000000 
d000a4c6 l       .text  00000000 
d000a4c8 l       .text  00000000 
d000a4c8 l       .text  00000000 
d000a4ca l       .text  00000000 
d000a4ce l       .text  00000000 
d000a4d0 l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4da l       .text  00000000 
d000a4da l       .text  00000000 
d000a4de l       .text  00000000 
d000a4e2 l       .text  00000000 
d000a4e2 l       .text  00000000 
d000a4e4 l       .text  00000000 
d000a4e4 l       .text  00000000 
d000a4ea l       .text  00000000 
d000a4ea l       .text  00000000 
d000a4ee l       .text  00000000 
d000a4ee l       .text  00000000 
d000a4f2 l       .text  00000000 
d000a4f6 l       .text  00000000 
d000a4fa l       .text  00000000 
d000a4fc l       .text  00000000 
d000a4fe l       .text  00000000 
d000a4fe l       .text  00000000 
d000a500 l       .text  00000000 
d000a500 l       .text  00000000 
d000a502 l       .text  00000000 
d000a506 l       .text  00000000 
d000a50a l       .text  00000000 
d000a514 l       .text  00000000 
d000a514 l       .text  00000000 
d000a518 l       .text  00000000 
d000a51c l       .text  00000000 
d000a51e l       .text  00000000 
d000a522 l       .text  00000000 
d000a524 l       .text  00000000 
d000a526 l       .text  00000000 
d000a526 l       .text  00000000 
d000a528 l       .text  00000000 
d000a52c l       .text  00000000 
d000a52c l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a534 l       .text  00000000 
d000a536 l       .text  00000000 
d000a536 l       .text  00000000 
d000a53a l       .text  00000000 
d000a53c l       .text  00000000 
d000a540 l       .text  00000000 
d000a542 l       .text  00000000 
d000a546 l       .text  00000000 
d000a548 l       .text  00000000 
d000a54a l       .text  00000000 
d000a54e l       .text  00000000 
d000a550 l       .text  00000000 
d000a550 l       .text  00000000 
d000a554 l       .text  00000000 
d000a554 l       .text  00000000 
d000a556 l       .text  00000000 
d000a558 l       .text  00000000 
d000a55a l       .text  00000000 
d000a55a l       .text  00000000 
d000a560 l       .text  00000000 
d000a562 l       .text  00000000 
d000a562 l       .text  00000000 
d000a566 l       .text  00000000 
d000a56a l       .text  00000000 
d000a56a l       .text  00000000 
d000a572 l       .text  00000000 
d000a576 l       .text  00000000 
d000a578 l       .text  00000000 
d000a57c l       .text  00000000 
d000a57c l       .text  00000000 
d000a580 l       .text  00000000 
d000a586 l       .text  00000000 
d000a586 l       .text  00000000 
d000a588 l       .text  00000000 
d000a58a l       .text  00000000 
d000a58a l       .text  00000000 
d000a58e l       .text  00000000 
d000a58e l       .text  00000000 
d000a592 l       .text  00000000 
d000a592 l       .text  00000000 
d000a598 l       .text  00000000 
d000a598 l       .text  00000000 
d000a59a l       .text  00000000 
d000a59c l       .text  00000000 
d000a59c l       .text  00000000 
d000a5a4 l       .text  00000000 
d000a5a4 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5a8 l       .text  00000000 
d000a5aa l       .text  00000000 
d000a5b4 l       .text  00000000 
d000a5b4 l       .text  00000000 
00002a2e l       .debug_loc     00000000 
00002a54 l       .debug_loc     00000000 
00002a7a l       .debug_loc     00000000 
00002aa2 l       .debug_loc     00000000 
00002ac8 l       .debug_loc     00000000 
00002b25 l       .debug_loc     00000000 
00002b4d l       .debug_loc     00000000 
00002b73 l       .debug_loc     00000000 
00002ba8 l       .debug_loc     00000000 
00002be8 l       .debug_loc     00000000 
00002c03 l       .debug_loc     00000000 
00002c1e l       .debug_loc     00000000 
00002c44 l       .debug_loc     00000000 
00002c84 l       .debug_loc     00000000 
00002caa l       .debug_loc     00000000 
00002cf1 l       .debug_loc     00000000 
00002d0c l       .debug_loc     00000000 
00002d34 l       .debug_loc     00000000 
00002dbb l       .debug_loc     00000000 
00002de1 l       .debug_loc     00000000 
00002e21 l       .debug_loc     00000000 
00002e42 l       .debug_loc     00000000 
00002e67 l       .debug_loc     00000000 
00002e8d l       .debug_loc     00000000 
00002ec9 l       .debug_loc     00000000 
00002eef l       .debug_loc     00000000 
00002f20 l       .debug_loc     00000000 
00002f51 l       .debug_loc     00000000 
00002f8d l       .debug_loc     00000000 
00002fcf l       .debug_loc     00000000 
00002ff9 l       .debug_loc     00000000 
00003056 l       .debug_loc     00000000 
0000307e l       .debug_loc     00000000 
000030fc l       .debug_loc     00000000 
00003117 l       .debug_loc     00000000 
0000313d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000029a1 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000368 l       .debug_ranges  00000000 
000029cc l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000296a l       .debug_str     00000000 
000029d9 l       .debug_str     00000000 
000052a0 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
000029e0 l       .debug_str     00000000 
000029f5 l       .debug_str     00000000 
000029f9 l       .debug_str     00000000 
000004c4 l       .debug_str     00000000 
000029fc l       .debug_str     00000000 
00004c9f l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000029ed l       .debug_str     00000000 
000029e3 l       .debug_str     00000000 
0000316a l       .debug_str     00000000 
00002a00 l       .debug_str     00000000 
0000299d l       .debug_str     00000000 
00003256 l       .debug_str     00000000 
00006a70 l       .debug_str     00000000 
00002a1e l       .debug_str     00000000 
00002a2e l       .debug_str     00000000 
00002a35 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00002a26 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000004de l       .debug_str     00000000 
00007455 l       .debug_str     00000000 
00002a47 l       .debug_str     00000000 
00002a3d l       .debug_str     00000000 
00002a4f l       .debug_str     00000000 
00002a53 l       .debug_str     00000000 
00007ea7 l       .debug_str     00000000 
00000350 l       .debug_ranges  00000000 
00002a19 l       .debug_str     00000000 
00002a0b l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002a12 l       .debug_str     00000000 
00007e93 l       .debug_str     00000000 
0000164a l       .debug_str     00000000 
00000354 l       .debug_frame   00000000 
d000a3b0 l       .text  00000000 
d000a47c l       .text  00000000 
d000a5b4 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_keys.c
d000a5b4 l       .text  00000000 
d000a5b4 l       .text  00000000 
d000a5b4 l       .text  00000000 
d000a5b6 l       .text  00000000 
d000a5ce l       .text  00000000 
d000a5d0 l       .text  00000000 
d000a5d2 l       .text  00000000 
d000a5d4 l       .text  00000000 
d000a5d4 l       .text  00000000 
d000a5d8 l       .text  00000000 
d000a5d8 l       .text  00000000 
d000a5e4 l       .text  00000000 
d000a5e4 l       .text  00000000 
d000a5e6 l       .text  00000000 
d000a5e6 l       .text  00000000 
d000a5f0 l       .text  00000000 
d000a5f4 l       .text  00000000 
d000a600 l       .text  00000000 
d000a604 l       .text  00000000 
d000a606 l       .text  00000000 
d000a60e l       .text  00000000 
d000a60e l       .text  00000000 
d000a618 l       .text  00000000 
d000a618 l       .text  00000000 
d000a61a l       .text  00000000 
d000a61a l       .text  00000000 
d000a61e l       .text  00000000 
d000a61e l       .text  00000000 
d000a620 l       .text  00000000 
d000a620 l       .text  00000000 
d000a624 l       .text  00000000 
d000a630 l       .text  00000000 
d000a632 l       .text  00000000 
d000a6e2 l     F .text  000001ae key_is_valid
d000a636 l       .text  00000000 
d000a636 l       .text  00000000 
d000a638 l       .text  00000000 
d000a638 l       .text  00000000 
d000a63c l       .text  00000000 
d000a63c l       .text  00000000 
d000a648 l       .text  00000000 
d000a648 l       .text  00000000 
d000a64a l       .text  00000000 
d000a64a l       .text  00000000 
d000a64e l       .text  00000000 
d000a64e l       .text  00000000 
d000a650 l       .text  00000000 
d000a650 l       .text  00000000 
d000a652 l       .text  00000000 
d000a652 l       .text  00000000 
d000a656 l       .text  00000000 
d000a656 l       .text  00000000 
d000a658 l       .text  00000000 
d000a65c l       .text  00000000 
d000a65c l       .text  00000000 
d000a65e l       .text  00000000 
d000a65e l       .text  00000000 
d000a66a l       .text  00000000 
d000a66a l       .text  00000000 
d000a66c l       .text  00000000 
d000a66c l       .text  00000000 
d000a672 l       .text  00000000 
d000a672 l       .text  00000000 
d000a674 l       .text  00000000 
d000a674 l       .text  00000000 
d000a680 l       .text  00000000 
d000a680 l       .text  00000000 
d000a682 l       .text  00000000 
d000a682 l       .text  00000000 
d000a686 l       .text  00000000 
d000a686 l       .text  00000000 
d000a68a l       .text  00000000 
d000a68a l       .text  00000000 
d000a696 l       .text  00000000 
d000a6a2 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6ac l       .text  00000000 
d000a6b8 l       .text  00000000 
d000a6be l       .text  00000000 
d000a6be l       .text  00000000 
d000a6c6 l       .text  00000000 
d000a6d2 l       .text  00000000 
d000a6d6 l       .text  00000000 
d000a6d8 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e4 l       .text  00000000 
d000a6e4 l       .text  00000000 
d000a6ec l       .text  00000000 
d000a6ec l       .text  00000000 
d000a6f0 l       .text  00000000 
d000a6f0 l       .text  00000000 
d000a6f4 l       .text  00000000 
d000a6f8 l       .text  00000000 
d000a700 l       .text  00000000 
d000a704 l       .text  00000000 
d000a710 l       .text  00000000 
d000a710 l       .text  00000000 
d000a712 l       .text  00000000 
d000a712 l       .text  00000000 
d000a712 l       .text  00000000 
d000a71a l       .text  00000000 
d000a71a l       .text  00000000 
d000a71e l       .text  00000000 
d000a71e l       .text  00000000 
d000a726 l       .text  00000000 
d000a72a l       .text  00000000 
d000a738 l       .text  00000000 
d000a738 l       .text  00000000 
d000a740 l       .text  00000000 
d000a744 l       .text  00000000 
d000a752 l       .text  00000000 
d000a75a l       .text  00000000 
d000a766 l       .text  00000000 
d000a766 l       .text  00000000 
d000a768 l       .text  00000000 
d000a768 l       .text  00000000 
d000a768 l       .text  00000000 
d000a770 l       .text  00000000 
d000a770 l       .text  00000000 
d000a774 l       .text  00000000 
d000a774 l       .text  00000000 
d000a77c l       .text  00000000 
d000a780 l       .text  00000000 
d000a78e l       .text  00000000 
d000a78e l       .text  00000000 
d000a796 l       .text  00000000 
d000a79a l       .text  00000000 
d000a7a6 l       .text  00000000 
d000a7a8 l       .text  00000000 
d000a890 l     F .text  00000062 key_is_valid_in_lc_state_prod
d000a7aa l       .text  00000000 
d000a7ae l       .text  00000000 
d000a7b2 l       .text  00000000 
d000a7b6 l       .text  00000000 
d000a7c2 l       .text  00000000 
d000a7c2 l       .text  00000000 
d000a7c4 l       .text  00000000 
d000a7c4 l       .text  00000000 
d000a7c4 l       .text  00000000 
d000a7cc l       .text  00000000 
d000a7cc l       .text  00000000 
d000a7d0 l       .text  00000000 
d000a7d0 l       .text  00000000 
d000a7d8 l       .text  00000000 
d000a7dc l       .text  00000000 
d000a7ea l       .text  00000000 
d000a7ea l       .text  00000000 
d000a7f8 l       .text  00000000 
d000a7f8 l       .text  00000000 
d000a806 l       .text  00000000 
d000a806 l       .text  00000000 
d000a814 l       .text  00000000 
d000a814 l       .text  00000000 
d000a81c l       .text  00000000 
d000a81c l       .text  00000000 
d000a820 l       .text  00000000 
d000a82c l       .text  00000000 
d000a82c l       .text  00000000 
d000a82e l       .text  00000000 
d000a8f2 l     F .text  0000004a key_is_valid_in_otp
d000a830 l       .text  00000000 
d000a834 l       .text  00000000 
d000a838 l       .text  00000000 
d000a838 l       .text  00000000 
d000a83c l       .text  00000000 
d000a848 l       .text  00000000 
d000a848 l       .text  00000000 
d000a84c l       .text  00000000 
d000a850 l       .text  00000000 
d000a852 l       .text  00000000 
d000a852 l       .text  00000000 
d000a85a l       .text  00000000 
d000a85a l       .text  00000000 
d000a85e l       .text  00000000 
d000a86a l       .text  00000000 
d000a86a l       .text  00000000 
d000a86e l       .text  00000000 
d000a86e l       .text  00000000 
d000a870 l       .text  00000000 
d000a870 l       .text  00000000 
d000a878 l       .text  00000000 
d000a878 l       .text  00000000 
d000a880 l       .text  00000000 
d000a880 l       .text  00000000 
d000a888 l       .text  00000000 
d000a888 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a892 l       .text  00000000 
d000a892 l       .text  00000000 
d000a89a l       .text  00000000 
d000a89a l       .text  00000000 
d000a89e l       .text  00000000 
d000a89e l       .text  00000000 
d000a8a6 l       .text  00000000 
d000a8aa l       .text  00000000 
d000a8b6 l       .text  00000000 
d000a8b8 l       .text  00000000 
d000a8ba l       .text  00000000 
d000a8ba l       .text  00000000 
d000a8c8 l       .text  00000000 
d000a8cc l       .text  00000000 
d000a8d0 l       .text  00000000 
d000a8d4 l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e4 l       .text  00000000 
d000a8e8 l       .text  00000000 
d000a8ea l       .text  00000000 
d000a8ea l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f4 l       .text  00000000 
d000a8f4 l       .text  00000000 
d000a8f8 l       .text  00000000 
d000a8fe l       .text  00000000 
d000a8fe l       .text  00000000 
d000a902 l       .text  00000000 
d000a904 l       .text  00000000 
d000a908 l       .text  00000000 
d000a908 l       .text  00000000 
d000a90c l       .text  00000000 
d000a90c l       .text  00000000 
d000a910 l       .text  00000000 
d000a910 l       .text  00000000 
d000a912 l       .text  00000000 
d000a912 l       .text  00000000 
d000a916 l       .text  00000000 
d000a916 l       .text  00000000 
d000a91a l       .text  00000000 
d000a91a l       .text  00000000 
d000a92a l       .text  00000000 
d000a92a l       .text  00000000 
d000a92c l       .text  00000000 
d000a930 l       .text  00000000 
d000a934 l       .text  00000000 
d000a93c l       .text  00000000 
d000a93c l       .text  00000000 
00003158 l       .debug_loc     00000000 
00003189 l       .debug_loc     00000000 
000031ba l       .debug_loc     00000000 
000031eb l       .debug_loc     00000000 
00003236 l       .debug_loc     00000000 
00003268 l       .debug_loc     00000000 
0000329b l       .debug_loc     00000000 
000032cc l       .debug_loc     00000000 
000032f2 l       .debug_loc     00000000 
0000330d l       .debug_loc     00000000 
00003333 l       .debug_loc     00000000 
0000334e l       .debug_loc     00000000 
00003374 l       .debug_loc     00000000 
0000339a l       .debug_loc     00000000 
000033b5 l       .debug_loc     00000000 
000033f1 l       .debug_loc     00000000 
00003438 l       .debug_loc     00000000 
00003474 l       .debug_loc     00000000 
0000349a l       .debug_loc     00000000 
000034c0 l       .debug_loc     00000000 
000034e6 l       .debug_loc     00000000 
00003522 l       .debug_loc     00000000 
00003548 l       .debug_loc     00000000 
00003584 l       .debug_loc     00000000 
000035c0 l       .debug_loc     00000000 
000035e6 l       .debug_loc     00000000 
00003622 l       .debug_loc     00000000 
00003653 l       .debug_loc     00000000 
0000366e l       .debug_loc     00000000 
00003694 l       .debug_loc     00000000 
000036af l       .debug_loc     00000000 
000036cf l       .debug_loc     00000000 
000036ea l       .debug_loc     00000000 
0000370a l       .debug_loc     00000000 
00003725 l       .debug_loc     00000000 
0000374b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002a55 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000440 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00002ac5 l       .debug_str     00000000 
00002a84 l       .debug_str     00000000 
00002a9a l       .debug_str     00000000 
00002ab0 l       .debug_str     00000000 
00002ad8 l       .debug_str     00000000 
00002b24 l       .debug_str     00000000 
00002af7 l       .debug_str     00000000 
00002b0d l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000013f4 l       .debug_str     00000000 
000074fb l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00002be3 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
00002bea l       .debug_str     00000000 
00002bf9 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00000398 l       .debug_ranges  00000000 
000003b0 l       .debug_ranges  00000000 
000002c3 l       .debug_str     00000000 
00002c28 l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
0000109a l       .debug_str     00000000 
00002ba4 l       .debug_str     00000000 
00002acf l       .debug_str     00000000 
00002bef l       .debug_str     00000000 
000003c8 l       .debug_ranges  00000000 
000003f0 l       .debug_ranges  00000000 
00000418 l       .debug_ranges  00000000 
00002b37 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00002b54 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00002b69 l       .debug_str     00000000 
00002b86 l       .debug_str     00000000 
00002bb1 l       .debug_str     00000000 
00002bcf l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00002ba8 l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
00002c14 l       .debug_str     00000000 
00002c02 l       .debug_str     00000000 
00002c2d l       .debug_str     00000000 
00000410 l       .debug_frame   00000000 
d000a6e2 l       .text  00000000 
d000a890 l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a93c l       .text  00000000 
00000000 l    df *ABS*  00000000 shutdown.c
d000a93c l       .text  00000000 
d000a93c l       .text  00000000 
d000a93c l       .text  00000000 
d000a93e l       .text  00000000 
d000a958 l       .text  00000000 
d000a95a l       .text  00000000 
d000a95a l       .text  00000000 
d000a95a l       .text  00000000 
d000a95a l       .text  00000000 
d000a962 l       .text  00000000 
d000a962 l       .text  00000000 
d000a966 l       .text  00000000 
d000a966 l       .text  00000000 
d000a96a l       .text  00000000 
d000a96e l       .text  00000000 
d000a976 l       .text  00000000 
d000a97a l       .text  00000000 
d000a988 l       .text  00000000 
d000a988 l       .text  00000000 
d000a98a l       .text  00000000 
d000a98a l       .text  00000000 
d000a98c l       .text  00000000 
d000a994 l       .text  00000000 
d000a998 l       .text  00000000 
d000a9a6 l       .text  00000000 
d000a9a6 l       .text  00000000 
d000a9a8 l       .text  00000000 
d000a9a8 l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9b2 l       .text  00000000 
d000a9c0 l       .text  00000000 
d000a9c0 l       .text  00000000 
d000a9c2 l       .text  00000000 
d000a9c2 l       .text  00000000 
d000a9c6 l       .text  00000000 
d000a9c6 l       .text  00000000 
d000a9c8 l       .text  00000000 
d000a9d0 l       .text  00000000 
d000a9d4 l       .text  00000000 
d000a9d4 l       .text  00000000 
d000a9d8 l       .text  00000000 
d000a9d8 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e8 l       .text  00000000 
d000a9e8 l       .text  00000000 
d000a9f0 l       .text  00000000 
d000a9f2 l       .text  00000000 
d000a9f2 l       .text  00000000 
d000a9fa l       .text  00000000 
d000a9fa l       .text  00000000 
d000a9fc l       .text  00000000 
d000a9fc l       .text  00000000 
d000aa02 l       .text  00000000 
d000aa02 l       .text  00000000 
d000aa06 l       .text  00000000 
d000aa06 l       .text  00000000 
d000aa10 l       .text  00000000 
d000aa10 l       .text  00000000 
d000aa14 l       .text  00000000 
d000aa18 l       .text  00000000 
d000aa18 l       .text  00000000 
d000aa1a l       .text  00000000 
d000aa1a l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa22 l       .text  00000000 
d000aa22 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa26 l       .text  00000000 
d000aa26 l       .text  00000000 
d000aa28 l       .text  00000000 
d000aa32 l       .text  00000000 
d000aa32 l       .text  00000000 
d000aa34 l       .text  00000000 
d000aa38 l       .text  00000000 
d000aa3c l       .text  00000000 
d000aa3e l       .text  00000000 
d000aa3e l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa44 l       .text  00000000 
d000aa44 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa4e l       .text  00000000 
d000aa66 l       .text  00000000 
d000aa66 l       .text  00000000 
d000aa6c l       .text  00000000 
d000aa6c l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa78 l       .text  00000000 
d000aa80 l       .text  00000000 
d000aa80 l       .text  00000000 
d000aa8e l       .text  00000000 
d000aa94 l       .text  00000000 
d000aa98 l       .text  00000000 
d000aa98 l       .text  00000000 
d000aa9c l       .text  00000000 
d000aa9c l       .text  00000000 
d000aa9e l       .text  00000000 
d000aaa0 l       .text  00000000 
d000aaa0 l       .text  00000000 
d000aaa2 l       .text  00000000 
d000aaa2 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaac l       .text  00000000 
d000aab0 l       .text  00000000 
d000aab2 l       .text  00000000 
d000aab4 l       .text  00000000 
d000aab4 l       .text  00000000 
d000aab6 l       .text  00000000 
d000aab6 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aab8 l       .text  00000000 
d000aabc l       .text  00000000 
d000aabc l       .text  00000000 
d000aad8 l       .text  00000000 
d000aad8 l       .text  00000000 
d000aade l       .text  00000000 
d000aade l       .text  00000000 
d000aae2 l       .text  00000000 
d000aae2 l       .text  00000000 
d000aae6 l       .text  00000000 
d000aae6 l       .text  00000000 
d000aaea l       .text  00000000 
d000aaf2 l       .text  00000000 
d000aaf2 l       .text  00000000 
d000ab00 l       .text  00000000 
d000ab06 l       .text  00000000 
d000ab0a l       .text  00000000 
d000ab0a l       .text  00000000 
d000ab0e l       .text  00000000 
d000ab0e l       .text  00000000 
d000ab10 l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab14 l       .text  00000000 
d000ab14 l       .text  00000000 
d000ab1a l       .text  00000000 
d000ab1a l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab26 l       .text  00000000 
d000ab26 l       .text  00000000 
d000ab28 l       .text  00000000 
d000ab28 l       .text  00000000 
d000ab2c l       .text  00000000 
d000ab2c l       .text  00000000 
d000ab30 l       .text  00000000 
d000ab30 l       .text  00000000 
d000ab34 l       .text  00000000 
d000ab3c l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab42 l       .text  00000000 
d000ab48 l       .text  00000000 
d000ab4c l       .text  00000000 
d000ab54 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab6a l       .text  00000000 
d000ab70 l       .text  00000000 
d000ab72 l       .text  00000000 
d000ab74 l       .text  00000000 
d000ab78 l       .text  00000000 
d000ab7c l       .text  00000000 
d000ab7c l       .text  00000000 
d000ab7e l       .text  00000000 
d000ab82 l       .text  00000000 
d000ab86 l       .text  00000000 
d000ab86 l       .text  00000000 
d000ab88 l       .text  00000000 
d000ab88 l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8c l       .text  00000000 
d000ab8c l       .text  00000000 
d000ab90 l       .text  00000000 
d000ab90 l       .text  00000000 
d000ab98 l       .text  00000000 
d000ab98 l       .text  00000000 
d000ab9e l       .text  00000000 
d000ab9e l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba4 l       .text  00000000 
d000aba4 l       .text  00000000 
d000abae l       .text  00000000 
d000abae l       .text  00000000 
d000abb4 l       .text  00000000 
d000abb6 l       .text  00000000 
d000abbc l       .text  00000000 
d000abbc l       .text  00000000 
d000abc2 l       .text  00000000 
d000abc6 l       .text  00000000 
d000abc6 l       .text  00000000 
d000abc8 l       .text  00000000 
d000abc8 l       .text  00000000 
d000abcc l       .text  00000000 
d000abcc l       .text  00000000 
d000abce l       .text  00000000 
d000abd0 l       .text  00000000 
d000abd0 l       .text  00000000 
d000abd2 l       .text  00000000 
d000abd2 l       .text  00000000 
d000abd8 l       .text  00000000 
d000abd8 l       .text  00000000 
d000abda l       .text  00000000 
d000abde l       .text  00000000 
d000abe0 l       .text  00000000 
d000abe2 l       .text  00000000 
d000abe4 l       .text  00000000 
d000abec l       .text  00000000 
d000abf0 l       .text  00000000 
d000ac00 l       .text  00000000 
d000ac00 l       .text  00000000 
d000ac1e l       .text  00000000 
d000ac1e l       .text  00000000 
d000ac26 l       .text  00000000 
d000ac26 l       .text  00000000 
d000e770 l       .shutdown      00000000 
d000e770 l       .shutdown      00000000 
d000e770 l       .shutdown      00000000 
d000e774 l       .shutdown      00000000 
d000e774 l       .shutdown      00000000 
d000e776 l       .shutdown      00000000 
d000e776 l       .shutdown      00000000 
d000e77c l       .shutdown      00000000 
d000e77c l       .shutdown      00000000 
d000e780 l       .shutdown      00000000 
d000e780 l       .shutdown      00000000 
d000e790 l       .shutdown      00000000 
d000e790 l       .shutdown      00000000 
d000e794 l       .shutdown      00000000 
d000e794 l       .shutdown      00000000 
d000e79c l       .shutdown      00000000 
d000e7a0 l       .shutdown      00000000 
d000e7a8 l       .shutdown      00000000 
d000e7ac l       .shutdown      00000000 
d000e7b4 l       .shutdown      00000000 
d000e7b8 l       .shutdown      00000000 
d000e7ce l       .shutdown      00000000 
d000e7d2 l       .shutdown      00000000 
d000e7da l       .shutdown      00000000 
d000e7de l       .shutdown      00000000 
d000e7e6 l       .shutdown      00000000 
d000e7ea l       .shutdown      00000000 
d000e7f2 l       .shutdown      00000000 
d000e7f8 l       .shutdown      00000000 
d000e7fc l       .shutdown      00000000 
d000e800 l       .shutdown      00000000 
d000e808 l       .shutdown      00000000 
d000e80c l       .shutdown      00000000 
d000e81e l       .shutdown      00000000 
d000e822 l       .shutdown      00000000 
d000e82a l       .shutdown      00000000 
d000e82e l       .shutdown      00000000 
d000e836 l       .shutdown      00000000 
d000e83a l       .shutdown      00000000 
d000e83e l       .shutdown      00000000 
d000e83e l       .shutdown      00000000 
d000e844 l       .shutdown      00000000 
d000e844 l       .shutdown      00000000 
d000e84c l       .shutdown      00000000 
d000e850 l       .shutdown      00000000 
d000e850 l       .shutdown      00000000 
d000e854 l       .shutdown      00000000 
d000e856 l       .shutdown      00000000 
d000e858 l       .shutdown      00000000 
d000e860 l       .shutdown      00000000 
d000e864 l       .shutdown      00000000 
d000e86c l       .shutdown      00000000 
d000e870 l       .shutdown      00000000 
d000e878 l       .shutdown      00000000 
d000e87c l       .shutdown      00000000 
d000e880 l       .shutdown      00000000 
d000e884 l       .shutdown      00000000 
d000e884 l       .shutdown      00000000 
d000e886 l       .shutdown      00000000 
d000e886 l       .shutdown      00000000 
d000e88c l       .shutdown      00000000 
d000e88c l       .shutdown      00000000 
d000e88e l       .shutdown      00000000 
d000e890 l       .shutdown      00000000 
d000e892 l       .shutdown      00000000 
d000e898 l       .shutdown      00000000 
d000e898 l       .shutdown      00000000 
d000e89a l       .shutdown      00000000 
d000e89a l       .shutdown      00000000 
d000e89c l       .shutdown      00000000 
d000e89c l       .shutdown      00000000 
d000e8a0 l       .shutdown      00000000 
d000e8a0 l       .shutdown      00000000 
d000e8aa l       .shutdown      00000000 
d000e8aa l       .shutdown      00000000 
d000e8b4 l       .shutdown      00000000 
d000e8b4 l       .shutdown      00000000 
d000e8bc l       .shutdown      00000000 
d000e8bc l       .shutdown      00000000 
d000e8c4 l       .shutdown      00000000 
d000e8c4 l       .shutdown      00000000 
d000e8ca l       .shutdown      00000000 
d000e8ca l       .shutdown      00000000 
d000e8cc l       .shutdown      00000000 
d000e8cc l       .shutdown      00000000 
d000e8d4 l       .shutdown      00000000 
d000e8d6 l       .shutdown      00000000 
d000e8d6 l       .shutdown      00000000 
d000e8da l       .shutdown      00000000 
d000e8da l       .shutdown      00000000 
d000e8de l       .shutdown      00000000 
d000e8e0 l       .shutdown      00000000 
d000e8e0 l       .shutdown      00000000 
d000e8e2 l       .shutdown      00000000 
d000e8e6 l       .shutdown      00000000 
d000e8e6 l       .shutdown      00000000 
d000e8e8 l       .shutdown      00000000 
d000e8e8 l       .shutdown      00000000 
d000e8ea l       .shutdown      00000000 
d000e8ea l       .shutdown      00000000 
d000e8ec l       .shutdown      00000000 
d000e8ec l       .shutdown      00000000 
d000e8ee l       .shutdown      00000000 
d000e8f2 l       .shutdown      00000000 
d000e8f2 l       .shutdown      00000000 
d000e8f4 l       .shutdown      00000000 
d000e8f4 l       .shutdown      00000000 
d000e8fa l       .shutdown      00000000 
d000e8fa l       .shutdown      00000000 
d000e900 l       .shutdown      00000000 
d000e900 l       .shutdown      00000000 
d000e906 l       .shutdown      00000000 
d000e906 l       .shutdown      00000000 
d000e908 l       .shutdown      00000000 
d000e908 l       .shutdown      00000000 
d000e90c l       .shutdown      00000000 
d000e90c l       .shutdown      00000000 
d000e910 l       .shutdown      00000000 
d000e910 l       .shutdown      00000000 
d000e910 l       .shutdown      00000000 
d000e910 l       .shutdown      00000000 
d000e914 l       .shutdown      00000000 
d000e914 l       .shutdown      00000000 
d000e91c l       .shutdown      00000000 
d000e91c l       .shutdown      00000000 
d000e920 l       .shutdown      00000000 
d000e922 l       .shutdown      00000000 
d000e922 l       .shutdown      00000000 
d000e924 l       .shutdown      00000000 
d000e928 l       .shutdown      00000000 
d000e928 l       .shutdown      00000000 
d000e92a l       .shutdown      00000000 
d000e92a l       .shutdown      00000000 
d000e92c l       .shutdown      00000000 
d000e92c l       .shutdown      00000000 
d000e92e l       .shutdown      00000000 
d000e92e l       .shutdown      00000000 
d000e930 l       .shutdown      00000000 
d000e934 l       .shutdown      00000000 
d000e934 l       .shutdown      00000000 
d000e938 l       .shutdown      00000000 
d000e938 l       .shutdown      00000000 
d000e93c l       .shutdown      00000000 
d000e93c l       .shutdown      00000000 
d000e93e l       .shutdown      00000000 
d000e93e l       .shutdown      00000000 
d000e942 l       .shutdown      00000000 
d000e942 l       .shutdown      00000000 
d000e94c l       .shutdown      00000000 
d000e94c l       .shutdown      00000000 
d000e94e l       .shutdown      00000000 
d000e94e l       .shutdown      00000000 
d000e952 l       .shutdown      00000000 
d000e952 l       .shutdown      00000000 
d000e954 l       .shutdown      00000000 
d000e958 l       .shutdown      00000000 
d000e958 l       .shutdown      00000000 
d000e95c l       .shutdown      00000000 
d000e95c l       .shutdown      00000000 
d000e95e l       .shutdown      00000000 
d000e95e l       .shutdown      00000000 
d000e960 l       .shutdown      00000000 
d000e960 l       .shutdown      00000000 
d000e964 l       .shutdown      00000000 
d000e964 l       .shutdown      00000000 
d000e970 l       .shutdown      00000000 
d000e970 l       .shutdown      00000000 
d000e972 l       .shutdown      00000000 
d000e976 l       .shutdown      00000000 
d000e976 l       .shutdown      00000000 
d000e978 l       .shutdown      00000000 
d000e978 l       .shutdown      00000000 
d000e980 l       .shutdown      00000000 
d000e980 l       .shutdown      00000000 
d000e988 l       .shutdown      00000000 
d000e988 l       .shutdown      00000000 
d000e990 l       .shutdown      00000000 
d000e990 l       .shutdown      00000000 
d000e994 l       .shutdown      00000000 
d000e994 l       .shutdown      00000000 
d000e9a8 l       .shutdown      00000000 
d000e9a8 l       .shutdown      00000000 
d000ea08 l       .shutdown      00000000 
d000ea08 l       .shutdown      00000000 
d000ea08 l       .shutdown      00000000 
00003771 l       .debug_loc     00000000 
000037ad l       .debug_loc     00000000 
000037d3 l       .debug_loc     00000000 
000037fa l       .debug_loc     00000000 
00003845 l       .debug_loc     00000000 
0000386c l       .debug_loc     00000000 
00003893 l       .debug_loc     00000000 
000038b9 l       .debug_loc     00000000 
000038d5 l       .debug_loc     00000000 
0000395f l       .debug_loc     00000000 
000039ca l       .debug_loc     00000000 
000039e5 l       .debug_loc     00000000 
00003a2d l       .debug_loc     00000000 
00003a48 l       .debug_loc     00000000 
00003a86 l       .debug_loc     00000000 
00003ac4 l       .debug_loc     00000000 
00003b01 l       .debug_loc     00000000 
00003b24 l       .debug_loc     00000000 
00003b3f l       .debug_loc     00000000 
00003b5a l       .debug_loc     00000000 
00003b75 l       .debug_loc     00000000 
00003bb2 l       .debug_loc     00000000 
00003bd5 l       .debug_loc     00000000 
00003bf0 l       .debug_loc     00000000 
00003c0b l       .debug_loc     00000000 
00003c26 l       .debug_loc     00000000 
00003c63 l       .debug_loc     00000000 
00003cac l       .debug_loc     00000000 
00003cf3 l       .debug_loc     00000000 
00003d0e l       .debug_loc     00000000 
00003d3f l       .debug_loc     00000000 
00003d65 l       .debug_loc     00000000 
00003d8b l       .debug_loc     00000000 
00003db1 l       .debug_loc     00000000 
00003dd7 l       .debug_loc     00000000 
00003dfc l       .debug_loc     00000000 
00003e20 l       .debug_loc     00000000 
00003e47 l       .debug_loc     00000000 
00003e62 l       .debug_loc     00000000 
00003e7d l       .debug_loc     00000000 
00003ea3 l       .debug_loc     00000000 
00003ed4 l       .debug_loc     00000000 
00003f05 l       .debug_loc     00000000 
00003f2b l       .debug_loc     00000000 
00003f52 l       .debug_loc     00000000 
00003f83 l       .debug_loc     00000000 
00003fa9 l       .debug_loc     00000000 
00003fcf l       .debug_loc     00000000 
00003fea l       .debug_loc     00000000 
00004010 l       .debug_loc     00000000 
00004035 l       .debug_loc     00000000 
00004059 l       .debug_loc     00000000 
0000407f l       .debug_loc     00000000 
000040a1 l       .debug_loc     00000000 
000040bc l       .debug_loc     00000000 
000040e2 l       .debug_loc     00000000 
00004114 l       .debug_loc     00000000 
00004147 l       .debug_loc     00000000 
0000417a l       .debug_loc     00000000 
000041b9 l       .debug_loc     00000000 
000041d4 l       .debug_loc     00000000 
00004212 l       .debug_loc     00000000 
00004239 l       .debug_loc     00000000 
00004278 l       .debug_loc     00000000 
00004293 l       .debug_loc     00000000 
000042ae l       .debug_loc     00000000 
000042c9 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002c42 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000560 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
000010ec l       .debug_str     00000000 
00002c6b l       .debug_str     00000000 
00002c78 l       .debug_str     00000000 
00002c88 l       .debug_str     00000000 
00002c94 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
00003058 l       .debug_str     00000000 
000061f0 l       .debug_str     00000000 
000030fd l       .debug_str     00000000 
00003106 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
00003116 l       .debug_str     00000000 
00003123 l       .debug_str     00000000 
00003132 l       .debug_str     00000000 
00000468 l       .debug_ranges  00000000 
00000480 l       .debug_ranges  00000000 
00000498 l       .debug_ranges  00000000 
00007e54 l       .debug_str     00000000 
00006aa9 l       .debug_str     00000000 
00002f06 l       .debug_str     00000000 
000004b0 l       .debug_ranges  00000000 
000004c8 l       .debug_ranges  00000000 
00006784 l       .debug_str     00000000 
000004e0 l       .debug_ranges  00000000 
00002cd8 l       .debug_str     00000000 
00002ca0 l       .debug_str     00000000 
00002cb1 l       .debug_str     00000000 
00002cc5 l       .debug_str     00000000 
00002d4b l       .debug_str     00000000 
00002ce4 l       .debug_str     00000000 
00002cf7 l       .debug_str     00000000 
00002d0c l       .debug_str     00000000 
00002d21 l       .debug_str     00000000 
00002d36 l       .debug_str     00000000 
00002d9a l       .debug_str     00000000 
00002d59 l       .debug_str     00000000 
00002d66 l       .debug_str     00000000 
00002d73 l       .debug_str     00000000 
00002d80 l       .debug_str     00000000 
00002d8d l       .debug_str     00000000 
00002e0b l       .debug_str     00000000 
00002da5 l       .debug_str     00000000 
00002dbe l       .debug_str     00000000 
00002dd8 l       .debug_str     00000000 
00002df3 l       .debug_str     00000000 
00002e21 l       .debug_str     00000000 
00002e2c l       .debug_str     00000000 
00002e39 l       .debug_str     00000000 
00002e43 l       .debug_str     00000000 
00002e89 l       .debug_str     00000000 
00002e51 l       .debug_str     00000000 
00002e6d l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
00002e9d l       .debug_str     00000000 
00002eab l       .debug_str     00000000 
00002eb7 l       .debug_str     00000000 
00002ec6 l       .debug_str     00000000 
00002ed7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002ee5 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00002efd l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
00002f0a l       .debug_str     00000000 
00002f1a l       .debug_str     00000000 
00002f30 l       .debug_str     00000000 
00002f7d l       .debug_str     00000000 
0000654f l       .debug_str     00000000 
00002f46 l       .debug_str     00000000 
00002f51 l       .debug_str     00000000 
00002f61 l       .debug_str     00000000 
00002f70 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002f8e l       .debug_str     00000000 
00000c55 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
00002fa5 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
000030c1 l       .debug_str     00000000 
00000500 l       .debug_ranges  00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00002fae l       .debug_str     00000000 
00002fcc l       .debug_str     00000000 
000030d1 l       .debug_str     00000000 
00000518 l       .debug_ranges  00000000 
00002fd6 l       .debug_str     00000000 
000030e1 l       .debug_str     00000000 
00002fec l       .debug_str     00000000 
00002ffb l       .debug_str     00000000 
00003009 l       .debug_str     00000000 
0000602f l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00003010 l       .debug_str     00000000 
00002e96 l       .debug_str     00000000 
00003035 l       .debug_str     00000000 
0000303f l       .debug_str     00000000 
0000301f l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00003046 l       .debug_str     00000000 
00003061 l       .debug_str     00000000 
0000307b l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00003090 l       .debug_str     00000000 
0000309f l       .debug_str     00000000 
000030b3 l       .debug_str     00000000 
00001226 l       .debug_str     00000000 
00000530 l       .debug_ranges  00000000 
00000548 l       .debug_ranges  00000000 
000030e8 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000488 l       .debug_frame   00000000 
d000ac26 l       .text  00000000 
d000ea08 l       .shutdown      00000000 
00000000 l    df *ABS*  00000000 rom_print.c
d000ac26 l       .text  00000000 
d000ac26 l       .text  00000000 
d000ac26 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac3a l       .text  00000000 
d000ac3c l       .text  00000000 
d000ac4c l       .text  00000000 
d000ac4c l       .text  00000000 
d000ac5e l       .text  00000000 
d000ed64 l     O .rodata        00000010 rom_printf.kHexTable
d000ac5e l       .text  00000000 
d000ac6a l       .text  00000000 
d000ac6a l       .text  00000000 
d000ac6e l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac76 l       .text  00000000 
d000ac7a l       .text  00000000 
d000ac7a l       .text  00000000 
d000ac7c l       .text  00000000 
d000ac7c l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac8c l       .text  00000000 
d000ac8c l       .text  00000000 
d000ac8e l       .text  00000000 
d000ac92 l       .text  00000000 
d000ac96 l       .text  00000000 
d000ac96 l       .text  00000000 
d000ac9c l       .text  00000000 
d000ac9e l       .text  00000000 
d000ac9e l       .text  00000000 
d000aca2 l       .text  00000000 
d000aca2 l       .text  00000000 
d000acaa l       .text  00000000 
d000acaa l       .text  00000000 
d000acae l       .text  00000000 
d000acb4 l       .text  00000000 
d000acb4 l       .text  00000000 
d000acb6 l       .text  00000000 
d000acba l       .text  00000000 
d000acbe l       .text  00000000 
d000acbe l       .text  00000000 
d000acc0 l       .text  00000000 
d000acc0 l       .text  00000000 
d000acc4 l       .text  00000000 
d000acca l       .text  00000000 
d000acce l       .text  00000000 
d000acce l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd2 l       .text  00000000 
d000acd2 l       .text  00000000 
d000acd4 l       .text  00000000 
d000acd4 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acdc l       .text  00000000 
d000acdc l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf4 l       .text  00000000 
000042e9 l       .debug_loc     00000000 
00004335 l       .debug_loc     00000000 
00004375 l       .debug_loc     00000000 
00004388 l       .debug_loc     00000000 
0000439b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000313b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000011ec l       .debug_str     00000000 
00003035 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
00000588 l       .debug_ranges  00000000 
0000299d l       .debug_str     00000000 
00000e9e l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000005a0 l       .debug_ranges  00000000 
00003100 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00003165 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000029ed l       .debug_str     00000000 
000029e3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000004fc l       .debug_frame   00000000 
d000acf4 l       .text  00000000 
00000000 l    df *ABS*  00000000 alert.c
d000acf4 l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf8 l       .text  00000000 
d000acfc l       .text  00000000 
d000ad00 l       .text  00000000 
d000ad04 l       .text  00000000 
d000ad06 l       .text  00000000 
d000ad06 l       .text  00000000 
d000ad0e l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad1a l       .text  00000000 
d000ad1e l       .text  00000000 
d000ad22 l       .text  00000000 
d000ad26 l       .text  00000000 
d000ad2a l       .text  00000000 
d000ad2e l       .text  00000000 
d000ad32 l       .text  00000000 
d000ad36 l       .text  00000000 
d000ad3a l       .text  00000000 
d000ad3a l       .text  00000000 
d000ad3e l       .text  00000000 
d000ad44 l       .text  00000000 
d000ad44 l       .text  00000000 
d000ad48 l       .text  00000000 
d000ad4c l       .text  00000000 
d000ad50 l       .text  00000000 
d000ad54 l       .text  00000000 
d000ad58 l       .text  00000000 
d000ad58 l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad60 l       .text  00000000 
d000ad60 l       .text  00000000 
d000ad64 l       .text  00000000 
d000ad64 l       .text  00000000 
d000ad68 l       .text  00000000 
d000ad68 l       .text  00000000 
d000ad84 l       .text  00000000 
d000ad8a l       .text  00000000 
d000ad8a l       .text  00000000 
d000ad8e l       .text  00000000 
d000ad92 l       .text  00000000 
d000ad92 l       .text  00000000 
d000ad96 l       .text  00000000 
d000ad96 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad9e l       .text  00000000 
d000ad9e l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada8 l       .text  00000000 
d000adac l       .text  00000000 
d000adac l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adba l       .text  00000000 
d000adbe l       .text  00000000 
d000adc2 l       .text  00000000 
d000adc4 l       .text  00000000 
d000adc4 l       .text  00000000 
d000adcc l       .text  00000000 
d000add0 l       .text  00000000 
d000add0 l       .text  00000000 
d000add8 l       .text  00000000 
d000addc l       .text  00000000 
d000ade0 l       .text  00000000 
d000ade4 l       .text  00000000 
d000ade8 l       .text  00000000 
d000adec l       .text  00000000 
d000adf0 l       .text  00000000 
d000adf4 l       .text  00000000 
d000adf8 l       .text  00000000 
d000adf8 l       .text  00000000 
d000adfc l       .text  00000000 
d000ae02 l       .text  00000000 
d000ae02 l       .text  00000000 
d000ae06 l       .text  00000000 
d000ae0a l       .text  00000000 
d000ae0e l       .text  00000000 
d000ae12 l       .text  00000000 
d000ae16 l       .text  00000000 
d000ae16 l       .text  00000000 
d000ae1a l       .text  00000000 
d000ae1a l       .text  00000000 
d000ae1e l       .text  00000000 
d000ae1e l       .text  00000000 
d000ae22 l       .text  00000000 
d000ae22 l       .text  00000000 
d000ae26 l       .text  00000000 
d000ae26 l       .text  00000000 
d000ae42 l       .text  00000000 
d000ae48 l       .text  00000000 
d000ae48 l       .text  00000000 
d000ae4c l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae54 l       .text  00000000 
d000ae54 l       .text  00000000 
d000ae56 l       .text  00000000 
d000ae56 l       .text  00000000 
d000ae5c l       .text  00000000 
d000ae5c l       .text  00000000 
d000ae62 l       .text  00000000 
d000ae62 l       .text  00000000 
d000ae66 l       .text  00000000 
d000ae6a l       .text  00000000 
d000ae6a l       .text  00000000 
d000ae6c l       .text  00000000 
d000ae6c l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae74 l       .text  00000000 
d000ae7c l       .text  00000000 
d000ae80 l       .text  00000000 
d000ae84 l       .text  00000000 
d000ae88 l       .text  00000000 
d000ae8c l       .text  00000000 
d000ae90 l       .text  00000000 
d000ae94 l       .text  00000000 
d000ae94 l       .text  00000000 
d000ae9a l       .text  00000000 
d000ae9e l       .text  00000000 
d000aea2 l       .text  00000000 
d000aea6 l       .text  00000000 
d000aeaa l       .text  00000000 
d000aeb2 l       .text  00000000 
d000aeb4 l       .text  00000000 
d000aeb8 l       .text  00000000 
d000aeb8 l       .text  00000000 
d000aec0 l       .text  00000000 
d000aec4 l       .text  00000000 
d000aec8 l       .text  00000000 
d000aecc l       .text  00000000 
d000aed0 l       .text  00000000 
d000aed4 l       .text  00000000 
d000aeda l       .text  00000000 
d000aedc l       .text  00000000 
d000aee6 l       .text  00000000 
d000aee6 l       .text  00000000 
d000aef4 l       .text  00000000 
d000aef8 l       .text  00000000 
d000aefc l       .text  00000000 
d000af00 l       .text  00000000 
d000af04 l       .text  00000000 
d000af08 l       .text  00000000 
d000af0c l       .text  00000000 
d000af10 l       .text  00000000 
d000af10 l       .text  00000000 
d000af12 l       .text  00000000 
d000af12 l       .text  00000000 
d000af16 l       .text  00000000 
d000af1a l       .text  00000000 
d000af1e l       .text  00000000 
d000af22 l       .text  00000000 
d000af22 l       .text  00000000 
d000af26 l       .text  00000000 
d000af26 l       .text  00000000 
d000af2a l       .text  00000000 
d000af2a l       .text  00000000 
d000af2e l       .text  00000000 
d000af2e l       .text  00000000 
d000af32 l       .text  00000000 
d000af32 l       .text  00000000 
d000af3a l       .text  00000000 
d000af3a l       .text  00000000 
d000af3c l       .text  00000000 
d000af3c l       .text  00000000 
d000af40 l       .text  00000000 
d000af44 l       .text  00000000 
d000af44 l       .text  00000000 
d000af46 l       .text  00000000 
d000af46 l       .text  00000000 
d000af4a l       .text  00000000 
d000af4e l       .text  00000000 
d000af4e l       .text  00000000 
d000af50 l       .text  00000000 
d000af50 l       .text  00000000 
d000af52 l       .text  00000000 
d000af52 l       .text  00000000 
d000af56 l       .text  00000000 
d000af5e l       .text  00000000 
d000af5e l       .text  00000000 
d000af60 l       .text  00000000 
d000af60 l       .text  00000000 
d000af62 l       .text  00000000 
d000af62 l       .text  00000000 
d000af6c l       .text  00000000 
d000af6c l       .text  00000000 
d000af6e l       .text  00000000 
d000af6e l       .text  00000000 
d000af70 l       .text  00000000 
d000af70 l       .text  00000000 
d000af72 l       .text  00000000 
d000af72 l       .text  00000000 
d000af76 l       .text  00000000 
d000af76 l       .text  00000000 
d000af7e l       .text  00000000 
d000af82 l       .text  00000000 
d000af82 l       .text  00000000 
d000af86 l       .text  00000000 
d000af86 l       .text  00000000 
d000af88 l       .text  00000000 
d000af88 l       .text  00000000 
d000af90 l       .text  00000000 
d000af92 l       .text  00000000 
d000af92 l       .text  00000000 
d000af92 l       .text  00000000 
d000af92 l       .text  00000000 
d000af92 l       .text  00000000 
d000af94 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afac l       .text  00000000 
d000afb0 l       .text  00000000 
d000afb0 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afba l       .text  00000000 
d000afbc l       .text  00000000 
d000afbc l       .text  00000000 
d000afc0 l       .text  00000000 
d000afc0 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afcc l       .text  00000000 
d000afcc l       .text  00000000 
d000afd0 l       .text  00000000 
d000afd4 l       .text  00000000 
d000afd4 l       .text  00000000 
d000afd8 l       .text  00000000 
d000afd8 l       .text  00000000 
d000afda l       .text  00000000 
d000afda l       .text  00000000 
d000afde l       .text  00000000 
d000afde l       .text  00000000 
d000afe4 l       .text  00000000 
d000afe4 l       .text  00000000 
d000afe8 l       .text  00000000 
d000afec l       .text  00000000 
d000afec l       .text  00000000 
d000aff0 l       .text  00000000 
d000aff0 l       .text  00000000 
d000aff2 l       .text  00000000 
d000aff2 l       .text  00000000 
d000aff6 l       .text  00000000 
d000aff6 l       .text  00000000 
d000affa l       .text  00000000 
d000affa l       .text  00000000 
d000affe l       .text  00000000 
d000b002 l       .text  00000000 
d000b002 l       .text  00000000 
d000b006 l       .text  00000000 
d000b006 l       .text  00000000 
d000b008 l       .text  00000000 
d000b008 l       .text  00000000 
d000b00c l       .text  00000000 
d000b00c l       .text  00000000 
d000b010 l       .text  00000000 
d000b010 l       .text  00000000 
d000b014 l       .text  00000000 
d000b018 l       .text  00000000 
d000b018 l       .text  00000000 
d000b01c l       .text  00000000 
d000b01c l       .text  00000000 
d000b01e l       .text  00000000 
d000b01e l       .text  00000000 
d000b022 l       .text  00000000 
d000b022 l       .text  00000000 
d000b026 l       .text  00000000 
d000b026 l       .text  00000000 
d000b02a l       .text  00000000 
d000b02e l       .text  00000000 
d000b02e l       .text  00000000 
d000b032 l       .text  00000000 
d000b032 l       .text  00000000 
d000b034 l       .text  00000000 
d000b034 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b04a l       .text  00000000 
d000b04a l       .text  00000000 
d000b04e l       .text  00000000 
d000b04e l       .text  00000000 
d000b052 l       .text  00000000 
d000b052 l       .text  00000000 
d000b056 l       .text  00000000 
d000b056 l       .text  00000000 
d000b058 l       .text  00000000 
d000b05a l       .text  00000000 
d000b05a l       .text  00000000 
d000b05e l       .text  00000000 
d000b05e l       .text  00000000 
d000b062 l       .text  00000000 
d000b062 l       .text  00000000 
d000b066 l       .text  00000000 
d000b066 l       .text  00000000 
d000b06a l       .text  00000000 
d000b06a l       .text  00000000 
d000b06e l       .text  00000000 
d000b06e l       .text  00000000 
d000b072 l       .text  00000000 
d000b072 l       .text  00000000 
d000b074 l       .text  00000000 
d000b074 l       .text  00000000 
d000b078 l       .text  00000000 
d000b07a l       .text  00000000 
d000b07a l       .text  00000000 
d000b07e l       .text  00000000 
d000b07e l       .text  00000000 
d000b080 l       .text  00000000 
d000b080 l       .text  00000000 
d000b084 l       .text  00000000 
d000b084 l       .text  00000000 
d000b086 l       .text  00000000 
d000b08e l       .text  00000000 
d000b08e l       .text  00000000 
d000b092 l       .text  00000000 
d000b092 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a8 l       .text  00000000 
d000b0ae l       .text  00000000 
d000b0b0 l       .text  00000000 
d000b0b0 l       .text  00000000 
d000b0b2 l       .text  00000000 
d000b0b2 l       .text  00000000 
d000b0b4 l       .text  00000000 
d000b0b4 l       .text  00000000 
d000b0bc l       .text  00000000 
d000b0bc l       .text  00000000 
d000b0be l       .text  00000000 
d000b0be l       .text  00000000 
d000b0c2 l       .text  00000000 
d000b0c2 l       .text  00000000 
d000b0c6 l       .text  00000000 
d000b0ca l       .text  00000000 
d000b0d2 l       .text  00000000 
d000b0d6 l       .text  00000000 
d000b0e2 l       .text  00000000 
d000b0e8 l       .text  00000000 
d000b0f0 l       .text  00000000 
d000b0f4 l       .text  00000000 
d000b100 l       .text  00000000 
d000b106 l       .text  00000000 
d000b10e l       .text  00000000 
d000b11a l       .text  00000000 
d000b120 l       .text  00000000 
d000b128 l       .text  00000000 
d000b12c l       .text  00000000 
d000b138 l       .text  00000000 
d000b13c l       .text  00000000 
d000b140 l       .text  00000000 
d000b144 l       .text  00000000 
d000b146 l       .text  00000000 
d000b146 l       .text  00000000 
d000b148 l       .text  00000000 
d000b148 l       .text  00000000 
d000b14c l       .text  00000000 
d000b14c l       .text  00000000 
d000b150 l       .text  00000000 
d000b150 l       .text  00000000 
d000b15e l       .text  00000000 
d000b162 l       .text  00000000 
d000b166 l       .text  00000000 
d000b168 l       .text  00000000 
d000b16a l       .text  00000000 
d000b170 l       .text  00000000 
d000b170 l       .text  00000000 
d000b178 l       .text  00000000 
d000b17c l       .text  00000000 
d000b18c l       .text  00000000 
d000b18e l       .text  00000000 
d000b190 l       .text  00000000 
d000b198 l       .text  00000000 
d000b198 l       .text  00000000 
000043cc l       .debug_loc     00000000 
000043fd l       .debug_loc     00000000 
0000444f l       .debug_loc     00000000 
00004480 l       .debug_loc     00000000 
000044b1 l       .debug_loc     00000000 
00004503 l       .debug_loc     00000000 
00004534 l       .debug_loc     00000000 
00004570 l       .debug_loc     00000000 
000045a1 l       .debug_loc     00000000 
000045fc l       .debug_loc     00000000 
0000466d l       .debug_loc     00000000 
0000468f l       .debug_loc     00000000 
000046b1 l       .debug_loc     00000000 
000046d3 l       .debug_loc     00000000 
000046f5 l       .debug_loc     00000000 
00004734 l       .debug_loc     00000000 
00004767 l       .debug_loc     00000000 
000047a3 l       .debug_loc     00000000 
000047d6 l       .debug_loc     00000000 
00004814 l       .debug_loc     00000000 
00004847 l       .debug_loc     00000000 
00004885 l       .debug_loc     00000000 
000048b8 l       .debug_loc     00000000 
000048f6 l       .debug_loc     00000000 
00004929 l       .debug_loc     00000000 
00004967 l       .debug_loc     00000000 
0000499a l       .debug_loc     00000000 
000049d8 l       .debug_loc     00000000 
000049f6 l       .debug_loc     00000000 
00004a11 l       .debug_loc     00000000 
00004a2e l       .debug_loc     00000000 
00004a61 l       .debug_loc     00000000 
00004a92 l       .debug_loc     00000000 
00004ab8 l       .debug_loc     00000000 
00004ade l       .debug_loc     00000000 
00004b04 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003172 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000005d0 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002d9a l       .debug_str     00000000 
00002d59 l       .debug_str     00000000 
00002d66 l       .debug_str     00000000 
00002d73 l       .debug_str     00000000 
00002d80 l       .debug_str     00000000 
00002d8d l       .debug_str     00000000 
00002cd8 l       .debug_str     00000000 
00002ca0 l       .debug_str     00000000 
00002cb1 l       .debug_str     00000000 
00002cc5 l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00002d4b l       .debug_str     00000000 
00002ce4 l       .debug_str     00000000 
00002cf7 l       .debug_str     00000000 
00002d0c l       .debug_str     00000000 
00002d21 l       .debug_str     00000000 
00002d36 l       .debug_str     00000000 
0000320d l       .debug_str     00000000 
000031a0 l       .debug_str     00000000 
000068fa l       .debug_str     00000000 
00003220 l       .debug_str     00000000 
00003226 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001667 l       .debug_str     00000000 
000031ab l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001ba7 l       .debug_str     00000000 
0000321a l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00003061 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
00002f0a l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00002f06 l       .debug_str     00000000 
0000654f l       .debug_str     00000000 
00002f1a l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00002f30 l       .debug_str     00000000 
000061f0 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000005b8 l       .debug_ranges  00000000 
000031fb l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
000031b1 l       .debug_str     00000000 
000031bf l       .debug_str     00000000 
000031ce l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000031d7 l       .debug_str     00000000 
000031e2 l       .debug_str     00000000 
000031ee l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00002ed7 l       .debug_str     00000000 
00002eb7 l       .debug_str     00000000 
000030e8 l       .debug_str     00000000 
00002f7d l       .debug_str     00000000 
00002f46 l       .debug_str     00000000 
00002f51 l       .debug_str     00000000 
00002f61 l       .debug_str     00000000 
00002f70 l       .debug_str     00000000 
00002ec6 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000538 l       .debug_frame   00000000 
d000adb4 l       .text  00000000 
d000ae72 l       .text  00000000 
d000af92 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b198 l       .text  00000000 
00000000 l    df *ABS*  00000000 crc32.c
d000b198 l       .text  00000000 
d000b198 l       .text  00000000 
d000b198 l       .text  00000000 
d000b19a l       .text  00000000 
d000b19c l       .text  00000000 
d000b19e l       .text  00000000 
d000b19e l       .text  00000000 
d000b19e l       .text  00000000 
d000b19e l       .text  00000000 
d000b19e l       .text  00000000 
d000b1a0 l       .text  00000000 
d000b1b4 l       .text  00000000 
d000b1b4 l       .text  00000000 
d000b1b8 l       .text  00000000 
d000b1b8 l       .text  00000000 
d000b1bc l       .text  00000000 
d000b1bc l       .text  00000000 
d000b1c0 l       .text  00000000 
d000b1c2 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1c6 l       .text  00000000 
d000b1c6 l       .text  00000000 
d000b1c8 l       .text  00000000 
d000b1c8 l       .text  00000000 
d000b1ca l       .text  00000000 
d000b1ca l       .text  00000000 
d000b1cc l       .text  00000000 
d000b1d0 l       .text  00000000 
d000b1d4 l       .text  00000000 
d000b1da l       .text  00000000 
d000b1da l       .text  00000000 
d000b1dc l       .text  00000000 
d000b1dc l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e2 l       .text  00000000 
d000b1e2 l       .text  00000000 
d000b1e6 l       .text  00000000 
d000b1e8 l       .text  00000000 
d000b1e8 l       .text  00000000 
00004b2a l       .debug_loc     00000000 
00004b45 l       .debug_loc     00000000 
00004b7e l       .debug_loc     00000000 
00004b99 l       .debug_loc     00000000 
00004bb4 l       .debug_loc     00000000 
00004bcf l       .debug_loc     00000000 
00004c08 l       .debug_loc     00000000 
00004c2e l       .debug_loc     00000000 
00004c54 l       .debug_loc     00000000 
00004c7a l       .debug_loc     00000000 
00004c95 l       .debug_loc     00000000 
00004cb0 l       .debug_loc     00000000 
00004ce9 l       .debug_loc     00000000 
00004d04 l       .debug_loc     00000000 
00004d3d l       .debug_loc     00000000 
00004d58 l       .debug_loc     00000000 
00004d7e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003232 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000688 l       .debug_ranges  00000000 
00003258 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
00000608 l       .debug_ranges  00000000 
00003263 l       .debug_str     00000000 
000068fa l       .debug_str     00000000 
0000669f l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000025ee l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000326e l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000031e2 l       .debug_str     00000000 
00001835 l       .debug_str     00000000 
00007ebd l       .debug_str     00000000 
00000620 l       .debug_ranges  00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00003277 l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00000638 l       .debug_ranges  00000000 
00000658 l       .debug_ranges  00000000 
00000670 l       .debug_ranges  00000000 
000031d7 l       .debug_str     00000000 
000031ee l       .debug_str     00000000 
0000321a l       .debug_str     00000000 
000005cc l       .debug_frame   00000000 
d000b19e l       .text  00000000 
d000b1e0 l       .text  00000000 
d000b1e8 l       .text  00000000 
00000000 l    df *ABS*  00000000 ast.c
d000b1e8 l       .text  00000000 
d000b1e8 l       .text  00000000 
d000b1e8 l       .text  00000000 
d000b1ea l       .text  00000000 
d000b1ea l       .text  00000000 
d000b1ea l       .text  00000000 
d000b1ec l       .text  00000000 
d000b1ee l       .text  00000000 
d000b1ee l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fe l       .text  00000000 
d000b202 l       .text  00000000 
d000b20a l       .text  00000000 
d000b20e l       .text  00000000 
d000b21c l       .text  00000000 
d000b224 l       .text  00000000 
d000b228 l       .text  00000000 
d000b236 l       .text  00000000 
d000b23e l       .text  00000000 
d000b24c l       .text  00000000 
d000b254 l       .text  00000000 
d000b258 l       .text  00000000 
d000b264 l       .text  00000000 
d000b268 l       .text  00000000 
d000b26c l       .text  00000000 
d000b26c l       .text  00000000 
d000b26e l       .text  00000000 
d000b26e l       .text  00000000 
d000b270 l       .text  00000000 
d000b270 l       .text  00000000 
d000b274 l       .text  00000000 
d000b274 l       .text  00000000 
d000b282 l       .text  00000000 
d000b282 l       .text  00000000 
d000b286 l       .text  00000000 
d000b286 l       .text  00000000 
d000b29e l       .text  00000000 
d000b29e l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a4 l       .text  00000000 
d000b2a4 l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2ae l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2b4 l       .text  00000000 
d000b2b4 l       .text  00000000 
d000b2ba l       .text  00000000 
d000b2be l       .text  00000000 
d000b2be l       .text  00000000 
d000b2ca l       .text  00000000 
d000b2ca l       .text  00000000 
d000b2ce l       .text  00000000 
d000b2d0 l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2e4 l       .text  00000000 
d000b2e8 l       .text  00000000 
d000b2f4 l       .text  00000000 
d000b2f4 l       .text  00000000 
d000b2f8 l       .text  00000000 
d000b2fe l       .text  00000000 
d000b2fe l       .text  00000000 
d000b306 l       .text  00000000 
d000b306 l       .text  00000000 
00004da4 l       .debug_loc     00000000 
00004dd5 l       .debug_loc     00000000 
00004dfb l       .debug_loc     00000000 
00004e21 l       .debug_loc     00000000 
00004e3c l       .debug_loc     00000000 
00004e72 l       .debug_loc     00000000 
00004ea6 l       .debug_loc     00000000 
00004ec1 l       .debug_loc     00000000 
00004edc l       .debug_loc     00000000 
00004f05 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003281 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000006c0 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
000032ad l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000032ba l       .debug_str     00000000 
00001ba7 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
0000111e l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00002e36 l       .debug_str     00000000 
00003009 l       .debug_str     00000000 
000032be l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000065c l       .debug_frame   00000000 
d000b306 l       .text  00000000 
00000000 l    df *ABS*  00000000 flash_ctrl.c
d000b306 l       .text  00000000 
d000b306 l       .text  00000000 
d000b306 l       .text  00000000 
d000b308 l       .text  00000000 
d000b310 l       .text  00000000 
d000b316 l       .text  00000000 
d000b316 l       .text  00000000 
d000b318 l       .text  00000000 
d000b318 l       .text  00000000 
d000b320 l       .text  00000000 
d000b320 l       .text  00000000 
d000b324 l       .text  00000000 
d000b324 l       .text  00000000 
d000b328 l       .text  00000000 
d000b32c l       .text  00000000 
d000b32c l       .text  00000000 
d000b32e l       .text  00000000 
d000b32e l       .text  00000000 
d000b332 l       .text  00000000 
d000b332 l       .text  00000000 
d000b33a l       .text  00000000 
d000b33c l       .text  00000000 
d000b33c l       .text  00000000 
d000b344 l       .text  00000000 
d000b344 l       .text  00000000 
d000b348 l       .text  00000000 
d000b348 l       .text  00000000 
d000b34c l       .text  00000000 
d000b350 l       .text  00000000 
d000b350 l       .text  00000000 
d000b352 l       .text  00000000 
d000b352 l       .text  00000000 
d000b356 l       .text  00000000 
d000b356 l       .text  00000000 
d000b368 l       .text  00000000 
d000b368 l       .text  00000000 
d000b37a l       .text  00000000 
d000b37a l       .text  00000000 
d000b37c l       .text  00000000 
d000b37e l       .text  00000000 
d000b380 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b388 l       .text  00000000 
d000b38e l       .text  00000000 
d000b390 l       .text  00000000 
d000b398 l       .text  00000000 
d000b39e l       .text  00000000 
d000b39e l       .text  00000000 
d000b3a6 l       .text  00000000 
d000b3a6 l       .text  00000000 
d000b3a8 l       .text  00000000 
d000b3a8 l       .text  00000000 
d000b3aa l       .text  00000000 
d000b3aa l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3ae l       .text  00000000 
d000b3b0 l       .text  00000000 
d000b3b0 l       .text  00000000 
d000b3b2 l       .text  00000000 
d000b3b2 l       .text  00000000 
d000b3b4 l       .text  00000000 
d000b3b6 l       .text  00000000 
d000b3b6 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3ba l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3be l       .text  00000000 
d000b3be l       .text  00000000 
d000b3c4 l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3cc l       .text  00000000 
d000b3ce l       .text  00000000 
d000b3d4 l       .text  00000000 
d000b3d6 l       .text  00000000 
d000ba02 l     F .text  00000366 info_cfg_regs
d000b3d6 l       .text  00000000 
d000b3d8 l       .text  00000000 
d000b3da l       .text  00000000 
d000b3da l       .text  00000000 
d000b3e0 l       .text  00000000 
d000b3e0 l       .text  00000000 
d000b3e4 l       .text  00000000 
d000b3e8 l       .text  00000000 
d000b3e8 l       .text  00000000 
d000b3ea l       .text  00000000 
d000b3ea l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3ee l       .text  00000000 
d000b3ee l       .text  00000000 
d000b3f0 l       .text  00000000 
d000b3f0 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f4 l       .text  00000000 
d000b3f6 l       .text  00000000 
d000b3f6 l       .text  00000000 
d000b3f8 l       .text  00000000 
d000b3fa l       .text  00000000 
d000b3fa l       .text  00000000 
d000b3fc l       .text  00000000 
d000b3fc l       .text  00000000 
d000b404 l       .text  00000000 
d000b404 l       .text  00000000 
d000b408 l       .text  00000000 
d000b40a l       .text  00000000 
d000b412 l       .text  00000000 
d000b412 l       .text  00000000 
d000b412 l       .text  00000000 
d000b412 l     F .text  0000007c transaction_start
d000b412 l       .text  00000000 
d000b412 l       .text  00000000 
d000b412 l       .text  00000000 
d000b412 l       .text  00000000 
d000b418 l       .text  00000000 
d000b418 l       .text  00000000 
d000b41a l       .text  00000000 
d000b41a l       .text  00000000 
d000b41c l       .text  00000000 
d000b41e l       .text  00000000 
d000b41e l       .text  00000000 
d000b41e l       .text  00000000 
d000b426 l       .text  00000000 
d000b426 l       .text  00000000 
d000b42a l       .text  00000000 
d000b43a l       .text  00000000 
d000b43a l       .text  00000000 
d000b43c l       .text  00000000 
d000b444 l       .text  00000000 
d000b448 l       .text  00000000 
d000b45a l       .text  00000000 
d000b45a l       .text  00000000 
d000b45c l       .text  00000000 
d000b45e l       .text  00000000 
d000b45e l       .text  00000000 
d000b460 l       .text  00000000 
d000b464 l       .text  00000000 
d000b464 l       .text  00000000 
d000b466 l       .text  00000000 
d000b466 l       .text  00000000 
d000b468 l       .text  00000000 
d000b468 l       .text  00000000 
d000b46c l       .text  00000000 
d000b470 l       .text  00000000 
d000b470 l       .text  00000000 
d000b474 l       .text  00000000 
d000b474 l       .text  00000000 
d000b476 l       .text  00000000 
d000b476 l       .text  00000000 
d000b478 l       .text  00000000 
d000b478 l       .text  00000000 
d000b47e l       .text  00000000 
d000b47e l       .text  00000000 
d000b482 l       .text  00000000 
d000b482 l       .text  00000000 
d000b484 l       .text  00000000 
d000b484 l       .text  00000000 
d000b486 l       .text  00000000 
d000b486 l       .text  00000000 
d000b48e l       .text  00000000 
d000b48e l       .text  00000000 
d000b48e l       .text  00000000 
d000b48e l       .text  00000000 
d000b48e l       .text  00000000 
d000b490 l       .text  00000000 
d000b498 l       .text  00000000 
d000b49a l       .text  00000000 
d000b49c l       .text  00000000 
d000b49e l       .text  00000000 
d000b500 l     F .text  000002b8 info_page_addr
d000b49e l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a0 l       .text  00000000 
d000b4a2 l       .text  00000000 
d000b4a2 l       .text  00000000 
d000b4aa l       .text  00000000 
d000b4aa l       .text  00000000 
d000b4ae l       .text  00000000 
d000b4ba l       .text  00000000 
d000b4ba l       .text  00000000 
d000b4bc l       .text  00000000 
d000b4c0 l       .text  00000000 
d000b4c0 l       .text  00000000 
d000b4c4 l       .text  00000000 
d000b4c4 l       .text  00000000 
d000b4c6 l       .text  00000000 
d000b4c6 l       .text  00000000 
d000b4c8 l       .text  00000000 
d000b4ca l       .text  00000000 
d000b4cc l       .text  00000000 
d000b4cc l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d4 l       .text  00000000 
d000b4d4 l       .text  00000000 
d000b4d8 l       .text  00000000 
d000b4d8 l       .text  00000000 
d000b4da l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4e2 l       .text  00000000 
d000b4e2 l       .text  00000000 
d000b4ea l       .text  00000000 
d000b4ea l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4f4 l       .text  00000000 
d000b4f6 l       .text  00000000 
d000b500 l       .text  00000000 
d000b500 l       .text  00000000 
d000b500 l       .text  00000000 
d000b500 l       .text  00000000 
d000b500 l       .text  00000000 
d000b500 l       .text  00000000 
d000b502 l       .text  00000000 
d000b502 l       .text  00000000 
d000b50a l       .text  00000000 
d000b50a l       .text  00000000 
d000b50e l       .text  00000000 
d000b50e l       .text  00000000 
d000b516 l       .text  00000000 
d000b51a l       .text  00000000 
d000b522 l       .text  00000000 
d000b526 l       .text  00000000 
d000b52a l       .text  00000000 
d000b52e l       .text  00000000 
d000b536 l       .text  00000000 
d000b53a l       .text  00000000 
d000b53a l       .text  00000000 
d000b53a l       .text  00000000 
d000b53a l       .text  00000000 
d000b54a l       .text  00000000 
d000b54a l       .text  00000000 
d000b552 l       .text  00000000 
d000b556 l       .text  00000000 
d000b55e l       .text  00000000 
d000b562 l       .text  00000000 
d000b566 l       .text  00000000 
d000b56a l       .text  00000000 
d000b572 l       .text  00000000 
d000b576 l       .text  00000000 
d000b576 l       .text  00000000 
d000b576 l       .text  00000000 
d000b576 l       .text  00000000 
d000b586 l       .text  00000000 
d000b586 l       .text  00000000 
d000b58e l       .text  00000000 
d000b592 l       .text  00000000 
d000b596 l       .text  00000000 
d000b59a l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5b8 l       .text  00000000 
d000b5b8 l       .text  00000000 
d000b5c0 l       .text  00000000 
d000b5c4 l       .text  00000000 
d000b5c8 l       .text  00000000 
d000b5cc l       .text  00000000 
d000b5d4 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5e8 l       .text  00000000 
d000b5e8 l       .text  00000000 
d000b5f0 l       .text  00000000 
d000b5f4 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b604 l       .text  00000000 
d000b604 l       .text  00000000 
d000b60c l       .text  00000000 
d000b610 l       .text  00000000 
d000b610 l       .text  00000000 
d000b610 l       .text  00000000 
d000b610 l       .text  00000000 
d000b620 l       .text  00000000 
d000b620 l       .text  00000000 
d000b628 l       .text  00000000 
d000b62c l       .text  00000000 
d000b62c l       .text  00000000 
d000b62c l       .text  00000000 
d000b62c l       .text  00000000 
d000b63e l       .text  00000000 
d000b63e l       .text  00000000 
d000b646 l       .text  00000000 
d000b64a l       .text  00000000 
d000b64a l       .text  00000000 
d000b64a l       .text  00000000 
d000b64a l       .text  00000000 
d000b65c l       .text  00000000 
d000b65c l       .text  00000000 
d000b65c l       .text  00000000 
d000b65c l       .text  00000000 
d000b664 l       .text  00000000 
d000b664 l       .text  00000000 
d000b672 l       .text  00000000 
d000b674 l       .text  00000000 
d000b674 l       .text  00000000 
d000b674 l       .text  00000000 
d000b674 l       .text  00000000 
d000b67c l       .text  00000000 
d000b67c l       .text  00000000 
d000b68e l       .text  00000000 
d000b68e l       .text  00000000 
d000b68e l       .text  00000000 
d000b68e l       .text  00000000 
d000b696 l       .text  00000000 
d000b696 l       .text  00000000 
d000b6a8 l       .text  00000000 
d000b6a8 l       .text  00000000 
d000b6a8 l       .text  00000000 
d000b6a8 l       .text  00000000 
d000b6b0 l       .text  00000000 
d000b6b0 l       .text  00000000 
d000b6be l       .text  00000000 
d000b6c0 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6cc l       .text  00000000 
d000b6cc l       .text  00000000 
d000b6cc l       .text  00000000 
d000b6cc l       .text  00000000 
d000b6de l       .text  00000000 
d000b6de l       .text  00000000 
d000b6e6 l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6fa l       .text  00000000 
d000b6fa l       .text  00000000 
d000b702 l       .text  00000000 
d000b706 l       .text  00000000 
d000b706 l       .text  00000000 
d000b706 l       .text  00000000 
d000b706 l       .text  00000000 
d000b718 l       .text  00000000 
d000b718 l       .text  00000000 
d000b720 l       .text  00000000 
d000b724 l       .text  00000000 
d000b724 l       .text  00000000 
d000b724 l       .text  00000000 
d000b724 l       .text  00000000 
d000b736 l       .text  00000000 
d000b736 l       .text  00000000 
d000b73e l       .text  00000000 
d000b742 l       .text  00000000 
d000b742 l       .text  00000000 
d000b742 l       .text  00000000 
d000b742 l       .text  00000000 
d000b754 l       .text  00000000 
d000b754 l       .text  00000000 
d000b75c l       .text  00000000 
d000b760 l       .text  00000000 
d000b760 l       .text  00000000 
d000b760 l       .text  00000000 
d000b760 l       .text  00000000 
d000b770 l       .text  00000000 
d000b770 l       .text  00000000 
d000b778 l       .text  00000000 
d000b77c l       .text  00000000 
d000b77c l       .text  00000000 
d000b77c l       .text  00000000 
d000b77c l       .text  00000000 
d000b78c l       .text  00000000 
d000b78c l       .text  00000000 
d000b794 l       .text  00000000 
d000b798 l       .text  00000000 
d000b798 l       .text  00000000 
d000b798 l       .text  00000000 
d000b798 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7ac l       .text  00000000 
d000b7b0 l       .text  00000000 
d000b7b0 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7c2 l       .text  00000000 
d000b7c4 l       .text  00000000 
d000b7c4 l       .text  00000000 
d000b7c8 l     F .text  000000ae write
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b7ca l       .text  00000000 
d000b7ca l       .text  00000000 
d000b7de l       .text  00000000 
d000b7de l       .text  00000000 
d000b7e0 l       .text  00000000 
d000b7e2 l       .text  00000000 
d000b7e4 l       .text  00000000 
d000b7e6 l       .text  00000000 
d000b7e8 l       .text  00000000 
d000b7ea l       .text  00000000 
d000b7ec l       .text  00000000 
d000b7ec l       .text  00000000 
d000b7ee l       .text  00000000 
d000b7ee l       .text  00000000 
d000b7f0 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b802 l       .text  00000000 
d000b804 l       .text  00000000 
d000b808 l       .text  00000000 
d000b80a l       .text  00000000 
d000b80a l       .text  00000000 
d000b818 l       .text  00000000 
d000b818 l       .text  00000000 
d000b81c l       .text  00000000 
d000b81c l       .text  00000000 
d000b81e l       .text  00000000 
d000b81e l       .text  00000000 
d000b822 l       .text  00000000 
d000b822 l       .text  00000000 
d000b824 l       .text  00000000 
d000b826 l       .text  00000000 
d000b828 l       .text  00000000 
d000b828 l       .text  00000000 
d000b82c l       .text  00000000 
d000b82c l       .text  00000000 
d000b830 l       .text  00000000 
d000b830 l       .text  00000000 
d000b832 l       .text  00000000 
d000b832 l       .text  00000000 
d000b836 l       .text  00000000 
d000b836 l       .text  00000000 
d000b842 l       .text  00000000 
d000b842 l       .text  00000000 
d000b844 l       .text  00000000 
d000b84a l       .text  00000000 
d000b84e l       .text  00000000 
d000b850 l       .text  00000000 
d000b852 l       .text  00000000 
d000b856 l       .text  00000000 
d000b858 l       .text  00000000 
d000b858 l       .text  00000000 
d000b85a l       .text  00000000 
d000b85a l       .text  00000000 
d000b85e l       .text  00000000 
d000b876 l       .text  00000000 
d000b876 l       .text  00000000 
d000b876 l       .text  00000000 
d000b876 l       .text  00000000 
d000b876 l       .text  00000000 
d000b878 l       .text  00000000 
d000b878 l       .text  00000000 
d000b87a l       .text  00000000 
d000b87e l       .text  00000000 
d000b88e l       .text  00000000 
d000b88e l       .text  00000000 
d000b892 l       .text  00000000 
d000b892 l       .text  00000000 
d000b896 l       .text  00000000 
d000b896 l       .text  00000000 
d000b89a l       .text  00000000 
d000b89a l       .text  00000000 
d000b89c l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a4 l       .text  00000000 
d000b8a4 l       .text  00000000 
d000b8ac l       .text  00000000 
d000b8ac l       .text  00000000 
d000b8ae l       .text  00000000 
d000b8b6 l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8be l       .text  00000000 
d000b8be l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8ca l       .text  00000000 
d000b8ca l       .text  00000000 
d000b8da l       .text  00000000 
d000b8da l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e2 l       .text  00000000 
d000b8ea l       .text  00000000 
d000b8ee l       .text  00000000 
d000b902 l       .text  00000000 
d000b902 l       .text  00000000 
d000b904 l       .text  00000000 
d000b904 l       .text  00000000 
d000b906 l       .text  00000000 
d000b906 l       .text  00000000 
d000b90a l       .text  00000000 
d000b90a l       .text  00000000 
d000b912 l       .text  00000000 
d000b916 l       .text  00000000 
d000b91a l       .text  00000000 
d000b91a l       .text  00000000 
d000b91e l       .text  00000000 
d000b920 l       .text  00000000 
d000b920 l       .text  00000000 
d000b922 l       .text  00000000 
d000b922 l       .text  00000000 
d000b924 l       .text  00000000 
d000b924 l       .text  00000000 
d000b926 l       .text  00000000 
d000b926 l       .text  00000000 
d000b928 l       .text  00000000 
d000b928 l       .text  00000000 
d000b92e l       .text  00000000 
d000b92e l       .text  00000000 
d000b932 l       .text  00000000 
d000b932 l       .text  00000000 
d000b93e l       .text  00000000 
d000b93e l       .text  00000000 
d000b940 l       .text  00000000 
d000b940 l       .text  00000000 
d000b944 l       .text  00000000 
d000b944 l       .text  00000000 
d000b94c l       .text  00000000 
d000b94e l       .text  00000000 
d000b950 l       .text  00000000 
d000b95c l       .text  00000000 
d000b960 l       .text  00000000 
d000b962 l       .text  00000000 
d000b964 l       .text  00000000 
d000b964 l       .text  00000000 
d000b96c l       .text  00000000 
d000b96c l       .text  00000000 
d000b96c l       .text  00000000 
d000b96c l       .text  00000000 
d000b96c l       .text  00000000 
d000b974 l       .text  00000000 
d000b974 l       .text  00000000 
d000b978 l       .text  00000000 
d000b97c l       .text  00000000 
d000b97c l       .text  00000000 
d000b97c l       .text  00000000 
d000b97c l       .text  00000000 
d000b97c l       .text  00000000 
d000b97c l       .text  00000000 
d000b97e l       .text  00000000 
d000b984 l       .text  00000000 
d000b986 l       .text  00000000 
d000b98e l       .text  00000000 
d000b994 l       .text  00000000 
d000b994 l       .text  00000000 
d000b998 l       .text  00000000 
d000b998 l       .text  00000000 
d000b99a l       .text  00000000 
d000b99a l       .text  00000000 
d000b99c l       .text  00000000 
d000b99c l       .text  00000000 
d000b99e l       .text  00000000 
d000b9a0 l       .text  00000000 
d000b9a0 l       .text  00000000 
d000b9a2 l       .text  00000000 
d000b9a2 l       .text  00000000 
d000b9a4 l       .text  00000000 
d000b9a8 l       .text  00000000 
d000b9aa l       .text  00000000 
d000b9aa l       .text  00000000 
d000b9ac l       .text  00000000 
d000b9ae l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b6 l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c6 l       .text  00000000 
d000b9c8 l       .text  00000000 
d000b9c8 l       .text  00000000 
d000b9ca l       .text  00000000 
d000b9cc l       .text  00000000 
d000b9cc l       .text  00000000 
d000b9d2 l       .text  00000000 
d000b9d2 l       .text  00000000 
d000b9d6 l       .text  00000000 
d000b9d6 l       .text  00000000 
d000b9d8 l       .text  00000000 
d000b9d8 l       .text  00000000 
d000b9da l       .text  00000000 
d000b9da l       .text  00000000 
d000b9dc l       .text  00000000 
d000b9dc l       .text  00000000 
d000b9de l       .text  00000000 
d000b9de l       .text  00000000 
d000b9e2 l       .text  00000000 
d000b9e2 l       .text  00000000 
d000b9e4 l       .text  00000000 
d000b9e6 l       .text  00000000 
d000b9e6 l       .text  00000000 
d000b9e8 l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9ec l       .text  00000000 
d000b9ec l       .text  00000000 
d000b9f4 l       .text  00000000 
d000b9f4 l       .text  00000000 
d000b9f8 l       .text  00000000 
d000b9fa l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba02 l       .text  00000000 
d000ba04 l       .text  00000000 
d000ba04 l       .text  00000000 
d000ba0c l       .text  00000000 
d000ba0c l       .text  00000000 
d000ba10 l       .text  00000000 
d000ba10 l       .text  00000000 
d000ba18 l       .text  00000000 
d000ba1c l       .text  00000000 
d000ba24 l       .text  00000000 
d000ba28 l       .text  00000000 
d000ba2c l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba38 l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba56 l       .text  00000000 
d000ba56 l       .text  00000000 
d000ba5e l       .text  00000000 
d000ba62 l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6e l       .text  00000000 
d000ba72 l       .text  00000000 
d000ba76 l       .text  00000000 
d000ba7e l       .text  00000000 
d000ba82 l       .text  00000000 
d000ba82 l       .text  00000000 
d000ba82 l       .text  00000000 
d000ba82 l       .text  00000000 
d000ba9a l       .text  00000000 
d000ba9c l       .text  00000000 
d000ba9c l       .text  00000000 
d000baa4 l       .text  00000000 
d000baa8 l       .text  00000000 
d000baac l       .text  00000000 
d000bab0 l       .text  00000000 
d000bab8 l       .text  00000000 
d000babc l       .text  00000000 
d000babc l       .text  00000000 
d000babc l       .text  00000000 
d000babc l       .text  00000000 
d000bad4 l       .text  00000000 
d000bad6 l       .text  00000000 
d000bad6 l       .text  00000000 
d000bade l       .text  00000000 
d000bae2 l       .text  00000000 
d000bae6 l       .text  00000000 
d000baea l       .text  00000000 
d000baf2 l       .text  00000000 
d000baf6 l       .text  00000000 
d000baf6 l       .text  00000000 
d000baf6 l       .text  00000000 
d000baf6 l       .text  00000000 
d000bb0e l       .text  00000000 
d000bb10 l       .text  00000000 
d000bb10 l       .text  00000000 
d000bb18 l       .text  00000000 
d000bb1c l       .text  00000000 
d000bb1c l       .text  00000000 
d000bb1c l       .text  00000000 
d000bb1c l       .text  00000000 
d000bb34 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb3e l       .text  00000000 
d000bb42 l       .text  00000000 
d000bb42 l       .text  00000000 
d000bb42 l       .text  00000000 
d000bb42 l       .text  00000000 
d000bb5a l       .text  00000000 
d000bb5c l       .text  00000000 
d000bb5c l       .text  00000000 
d000bb64 l       .text  00000000 
d000bb68 l       .text  00000000 
d000bb68 l       .text  00000000 
d000bb68 l       .text  00000000 
d000bb68 l       .text  00000000 
d000bb80 l       .text  00000000 
d000bb82 l       .text  00000000 
d000bb82 l       .text  00000000 
d000bb8a l       .text  00000000 
d000bb8e l       .text  00000000 
d000bb8e l       .text  00000000 
d000bb8e l       .text  00000000 
d000bb8e l       .text  00000000 
d000bba6 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bbb0 l       .text  00000000 
d000bbb0 l       .text  00000000 
d000bbc0 l       .text  00000000 
d000bbc8 l       .text  00000000 
d000bbca l       .text  00000000 
d000bbca l       .text  00000000 
d000bbca l       .text  00000000 
d000bbca l       .text  00000000 
d000bbd2 l       .text  00000000 
d000bbd2 l       .text  00000000 
d000bbe2 l       .text  00000000 
d000bbea l       .text  00000000 
d000bbec l       .text  00000000 
d000bbec l       .text  00000000 
d000bbec l       .text  00000000 
d000bbec l       .text  00000000 
d000bbf4 l       .text  00000000 
d000bbf4 l       .text  00000000 
d000bc04 l       .text  00000000 
d000bc0c l       .text  00000000 
d000bc0e l       .text  00000000 
d000bc0e l       .text  00000000 
d000bc0e l       .text  00000000 
d000bc0e l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc16 l       .text  00000000 
d000bc26 l       .text  00000000 
d000bc2e l       .text  00000000 
d000bc30 l       .text  00000000 
d000bc30 l       .text  00000000 
d000bc38 l       .text  00000000 
d000bc3c l       .text  00000000 
d000bc3c l       .text  00000000 
d000bc3c l       .text  00000000 
d000bc3c l       .text  00000000 
d000bc54 l       .text  00000000 
d000bc56 l       .text  00000000 
d000bc56 l       .text  00000000 
d000bc5e l       .text  00000000 
d000bc62 l       .text  00000000 
d000bc62 l       .text  00000000 
d000bc62 l       .text  00000000 
d000bc62 l       .text  00000000 
d000bc7a l       .text  00000000 
d000bc7c l       .text  00000000 
d000bc7c l       .text  00000000 
d000bc84 l       .text  00000000 
d000bc88 l       .text  00000000 
d000bc88 l       .text  00000000 
d000bc88 l       .text  00000000 
d000bc88 l       .text  00000000 
d000bca0 l       .text  00000000 
d000bca2 l       .text  00000000 
d000bca2 l       .text  00000000 
d000bcaa l       .text  00000000 
d000bcae l       .text  00000000 
d000bcae l       .text  00000000 
d000bcae l       .text  00000000 
d000bcae l       .text  00000000 
d000bcc6 l       .text  00000000 
d000bcc8 l       .text  00000000 
d000bcc8 l       .text  00000000 
d000bcd0 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcd4 l       .text  00000000 
d000bcec l       .text  00000000 
d000bcee l       .text  00000000 
d000bcee l       .text  00000000 
d000bcf6 l       .text  00000000 
d000bcfa l       .text  00000000 
d000bcfa l       .text  00000000 
d000bcfa l       .text  00000000 
d000bcfa l       .text  00000000 
d000bd12 l       .text  00000000 
d000bd14 l       .text  00000000 
d000bd14 l       .text  00000000 
d000bd1c l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd3a l       .text  00000000 
d000bd3a l       .text  00000000 
d000bd42 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd5e l       .text  00000000 
d000bd60 l       .text  00000000 
d000bd60 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd6a l       .text  00000000 
d000bd6a l       .text  00000000 
d000bd6e l       .text  00000000 
d000bd6e l       .text  00000000 
d000bd72 l       .text  00000000 
d000bd72 l       .text  00000000 
d000bd74 l       .text  00000000 
d000bd80 l       .text  00000000 
d000bd80 l       .text  00000000 
d000bd82 l       .text  00000000 
d000bd86 l       .text  00000000 
d000bd8a l       .text  00000000 
d000bd98 l       .text  00000000 
d000bd98 l       .text  00000000 
d000bd9c l       .text  00000000 
d000bda0 l       .text  00000000 
d000bda4 l       .text  00000000 
d000bda4 l       .text  00000000 
d000bdac l       .text  00000000 
d000bdac l       .text  00000000 
00004f20 l       .debug_loc     00000000 
00004f44 l       .debug_loc     00000000 
00004f6a l       .debug_loc     00000000 
00004f8e l       .debug_loc     00000000 
00004fde l       .debug_loc     00000000 
00005002 l       .debug_loc     00000000 
0000501d l       .debug_loc     00000000 
00005041 l       .debug_loc     00000000 
00005065 l       .debug_loc     00000000 
000050c6 l       .debug_loc     00000000 
000050ea l       .debug_loc     00000000 
00005105 l       .debug_loc     00000000 
0000512d l       .debug_loc     00000000 
00005163 l       .debug_loc     00000000 
0000517e l       .debug_loc     00000000 
000051a0 l       .debug_loc     00000000 
000051c9 l       .debug_loc     00000000 
000051e9 l       .debug_loc     00000000 
0000520b l       .debug_loc     00000000 
00005226 l       .debug_loc     00000000 
00005248 l       .debug_loc     00000000 
00005263 l       .debug_loc     00000000 
0000527e l       .debug_loc     00000000 
000052a6 l       .debug_loc     00000000 
000052c1 l       .debug_loc     00000000 
00005309 l       .debug_loc     00000000 
0000532b l       .debug_loc     00000000 
0000534d l       .debug_loc     00000000 
00005368 l       .debug_loc     00000000 
00005383 l       .debug_loc     00000000 
000053a5 l       .debug_loc     00000000 
000053c7 l       .debug_loc     00000000 
000053e2 l       .debug_loc     00000000 
00005404 l       .debug_loc     00000000 
0000541f l       .debug_loc     00000000 
0000543a l       .debug_loc     00000000 
00005455 l       .debug_loc     00000000 
0000547b l       .debug_loc     00000000 
000054a1 l       .debug_loc     00000000 
000054bd l       .debug_loc     00000000 
000054d8 l       .debug_loc     00000000 
000054f3 l       .debug_loc     00000000 
0000550e l       .debug_loc     00000000 
00005536 l       .debug_loc     00000000 
00005576 l       .debug_loc     00000000 
000055a8 l       .debug_loc     00000000 
000055cf l       .debug_loc     00000000 
000055ea l       .debug_loc     00000000 
00005606 l       .debug_loc     00000000 
00005628 l       .debug_loc     00000000 
00005643 l       .debug_loc     00000000 
00005662 l       .debug_loc     00000000 
00005684 l       .debug_loc     00000000 
000056a8 l       .debug_loc     00000000 
000056c6 l       .debug_loc     00000000 
000056e8 l       .debug_loc     00000000 
0000570a l       .debug_loc     00000000 
00005725 l       .debug_loc     00000000 
0000574b l       .debug_loc     00000000 
00005771 l       .debug_loc     00000000 
00005797 l       .debug_loc     00000000 
000057b2 l       .debug_loc     00000000 
000057ce l       .debug_loc     00000000 
000057e9 l       .debug_loc     00000000 
00005804 l       .debug_loc     00000000 
0000581f l       .debug_loc     00000000 
00005916 l       .debug_loc     00000000 
0000593c l       .debug_loc     00000000 
00005962 l       .debug_loc     00000000 
00005988 l       .debug_loc     00000000 
000059a3 l       .debug_loc     00000000 
000059c9 l       .debug_loc     00000000 
000059ef l       .debug_loc     00000000 
00005a0a l       .debug_loc     00000000 
00005a30 l       .debug_loc     00000000 
00005a82 l       .debug_loc     00000000 
00005a9d l       .debug_loc     00000000 
00005ab8 l       .debug_loc     00000000 
00005ade l       .debug_loc     00000000 
00005b0f l       .debug_loc     00000000 
00005b40 l       .debug_loc     00000000 
00005b5b l       .debug_loc     00000000 
00005b76 l       .debug_loc     00000000 
00005b91 l       .debug_loc     00000000 
00005bac l       .debug_loc     00000000 
00005bdd l       .debug_loc     00000000 
00005c0e l       .debug_loc     00000000 
00005c34 l       .debug_loc     00000000 
00005c8d l       .debug_loc     00000000 
00005cb6 l       .debug_loc     00000000 
00005ceb l       .debug_loc     00000000 
00005d1e l       .debug_loc     00000000 
00005d5b l       .debug_loc     00000000 
00005d76 l       .debug_loc     00000000 
00005d9c l       .debug_loc     00000000 
00005db7 l       .debug_loc     00000000 
00005ddd l       .debug_loc     00000000 
00005df8 l       .debug_loc     00000000 
00005e13 l       .debug_loc     00000000 
00005e44 l       .debug_loc     00000000 
00005e6c l       .debug_loc     00000000 
00005e92 l       .debug_loc     00000000 
00005eb4 l       .debug_loc     00000000 
00005edd l       .debug_loc     00000000 
00005ef8 l       .debug_loc     00000000 
00005f1a l       .debug_loc     00000000 
00005f35 l       .debug_loc     00000000 
00005f57 l       .debug_loc     00000000 
00005f72 l       .debug_loc     00000000 
00005f8d l       .debug_loc     00000000 
00005fb5 l       .debug_loc     00000000 
00005fd0 l       .debug_loc     00000000 
00006018 l       .debug_loc     00000000 
0000603a l       .debug_loc     00000000 
0000605c l       .debug_loc     00000000 
00006077 l       .debug_loc     00000000 
00006092 l       .debug_loc     00000000 
000060b4 l       .debug_loc     00000000 
000060cf l       .debug_loc     00000000 
000060f1 l       .debug_loc     00000000 
0000610c l       .debug_loc     00000000 
00006203 l       .debug_loc     00000000 
00006229 l       .debug_loc     00000000 
0000624f l       .debug_loc     00000000 
00006275 l       .debug_loc     00000000 
0000629c l       .debug_loc     00000000 
000062db l       .debug_loc     00000000 
000062f6 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000032c8 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000818 l       .debug_ranges  00000000 
000032fb l       .debug_str     00000000 
00001b87 l       .debug_str     00000000 
00001b72 l       .debug_str     00000000 
000018ee l       .debug_str     00000000 
0000190a l       .debug_str     00000000 
0000192a l       .debug_str     00000000 
00001948 l       .debug_str     00000000 
0000196a l       .debug_str     00000000 
0000198c l       .debug_str     00000000 
000019ae l       .debug_str     00000000 
000019cf l       .debug_str     00000000 
000019f0 l       .debug_str     00000000 
00001a11 l       .debug_str     00000000 
00001a32 l       .debug_str     00000000 
00001a4e l       .debug_str     00000000 
00001a6a l       .debug_str     00000000 
00001a87 l       .debug_str     00000000 
00001aa4 l       .debug_str     00000000 
00001ac6 l       .debug_str     00000000 
00001ae8 l       .debug_str     00000000 
00001b0d l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
00001b4f l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
00001d8f l       .debug_str     00000000 
00001d5f l       .debug_str     00000000 
00001d77 l       .debug_str     00000000 
00003376 l       .debug_str     00000000 
00003313 l       .debug_str     00000000 
0000332b l       .debug_str     00000000 
00003344 l       .debug_str     00000000 
0000335d l       .debug_str     00000000 
00001d17 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00001010 l       .debug_str     00000000 
0000338b l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00003381 l       .debug_str     00000000 
000025f8 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
00003602 l       .debug_str     00000000 
000018b0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
000010fa l       .debug_str     00000000 
000034ce l       .debug_str     00000000 
000034d6 l       .debug_str     00000000 
00003519 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
00003423 l       .debug_str     00000000 
00003523 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
000006d8 l       .debug_ranges  00000000 
00003443 l       .debug_str     00000000 
00001b7d l       .debug_str     00000000 
000033fc l       .debug_str     00000000 
000006f0 l       .debug_ranges  00000000 
00000708 l       .debug_ranges  00000000 
00000720 l       .debug_ranges  00000000 
00000fff l       .debug_str     00000000 
0000339c l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
00003405 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000345b l       .debug_str     00000000 
0000357f l       .debug_str     00000000 
0000357c l       .debug_str     00000000 
000067af l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
000079a1 l       .debug_str     00000000 
000033bd l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00003471 l       .debug_str     00000000 
00003486 l       .debug_str     00000000 
000035c9 l       .debug_str     00000000 
000035e5 l       .debug_str     00000000 
000035f0 l       .debug_str     00000000 
000035fa l       .debug_str     00000000 
00000738 l       .debug_ranges  00000000 
00000750 l       .debug_ranges  00000000 
00000768 l       .debug_ranges  00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
00001f67 l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00003498 l       .debug_str     00000000 
000024d0 l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00006797 l       .debug_str     00000000 
00001f97 l       .debug_str     00000000 
0000247f l       .debug_str     00000000 
00001d9a l       .debug_str     00000000 
00002495 l       .debug_str     00000000 
00002315 l       .debug_str     00000000 
00000780 l       .debug_ranges  00000000 
00000798 l       .debug_ranges  00000000 
00001835 l       .debug_str     00000000 
00001fc8 l       .debug_str     00000000 
0000168a l       .debug_str     00000000 
00003614 l       .debug_str     00000000 
0000245d l       .debug_str     00000000 
00001f61 l       .debug_str     00000000 
000007b8 l       .debug_ranges  00000000 
00001f2b l       .debug_str     00000000 
000007d0 l       .debug_ranges  00000000 
000007e8 l       .debug_ranges  00000000 
00000800 l       .debug_ranges  00000000 
000024f3 l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
000033c7 l       .debug_str     00000000 
000033e1 l       .debug_str     00000000 
000031c9 l       .debug_str     00000000 
00003413 l       .debug_str     00000000 
000033ef l       .debug_str     00000000 
000034a7 l       .debug_str     00000000 
00003508 l       .debug_str     00000000 
000034f9 l       .debug_str     00000000 
000034e7 l       .debug_str     00000000 
000034f2 l       .debug_str     00000000 
000034f6 l       .debug_str     00000000 
00001f45 l       .debug_str     00000000 
00003568 l       .debug_str     00000000 
00003556 l       .debug_str     00000000 
00003527 l       .debug_str     00000000 
0000352f l       .debug_str     00000000 
00003538 l       .debug_str     00000000 
00003542 l       .debug_str     00000000 
0000354d l       .debug_str     00000000 
000035d0 l       .debug_str     00000000 
000035bd l       .debug_str     00000000 
00003586 l       .debug_str     00000000 
0000358e l       .debug_str     00000000 
000035a6 l       .debug_str     00000000 
0000361d l       .debug_str     00000000 
00001f56 l       .debug_str     00000000 
000028f8 l       .debug_str     00000000 
0000248f l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
00000698 l       .debug_frame   00000000 
d000b386 l       .text  00000000 
d000b3cc l       .text  00000000 
d000b412 l       .text  00000000 
d000b48e l       .text  00000000 
d000b500 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7c8 l       .text  00000000 
d000b876 l       .text  00000000 
d000b8bc l       .text  00000000 
d000b96c l       .text  00000000 
d000b97c l       .text  00000000 
d000b9be l       .text  00000000 
d000ba02 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bdac l       .text  00000000 
00000000 l    df *ABS*  00000000 ibex.c
d000bdac l       .text  00000000 
d000bdac l       .text  00000000 
d000bdac l       .text  00000000 
d000bdae l       .text  00000000 
d000bdb6 l       .text  00000000 
d000bdb8 l       .text  00000000 
d000bdb8 l       .text  00000000 
d000bdbc l       .text  00000000 
d000bdbe l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdca l       .text  00000000 
d000bdca l       .text  00000000 
d000bdd0 l       .text  00000000 
d000bdd0 l       .text  00000000 
d000bdd4 l       .text  00000000 
d000bdda l       .text  00000000 
d000bdda l       .text  00000000 
d000bdde l       .text  00000000 
d000bde4 l       .text  00000000 
d000bde4 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bdee l       .text  00000000 
d000bdee l       .text  00000000 
d000bdf2 l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdfc l       .text  00000000 
d000be02 l       .text  00000000 
d000be02 l       .text  00000000 
d000be06 l       .text  00000000 
d000be06 l       .text  00000000 
d000be08 l       .text  00000000 
d000be0a l       .text  00000000 
d000be12 l       .text  00000000 
d000be12 l       .text  00000000 
00006330 l       .debug_loc     00000000 
0000634b l       .debug_loc     00000000 
00006371 l       .debug_loc     00000000 
0000638c l       .debug_loc     00000000 
000063a7 l       .debug_loc     00000000 
000063c2 l       .debug_loc     00000000 
000063e8 l       .debug_loc     00000000 
00006403 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003630 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008c0 l       .debug_ranges  00000000 
000026a0 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
0000366f l       .debug_str     00000000 
0000365d l       .debug_str     00000000 
0000160b l       .debug_str     00000000 
00003697 l       .debug_str     00000000 
000036a5 l       .debug_str     00000000 
00001750 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
00003681 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00000884 l       .debug_frame   00000000 
d000be12 l       .text  00000000 
00000000 l    df *ABS*  00000000 keymgr.c
d000be12 l     F .text  0000005e expected_state_check
d000be12 l       .text  00000000 
d000be12 l       .text  00000000 
d000be12 l       .text  00000000 
d000be14 l       .text  00000000 
d000be1c l       .text  00000000 
d000be1e l       .text  00000000 
d000be24 l       .text  00000000 
d000be24 l       .text  00000000 
d000be28 l       .text  00000000 
d000be28 l       .text  00000000 
d000be2c l       .text  00000000 
d000be2c l       .text  00000000 
d000be30 l       .text  00000000 
d000be30 l       .text  00000000 
d000be34 l       .text  00000000 
d000be34 l       .text  00000000 
d000be38 l       .text  00000000 
d000be3c l       .text  00000000 
d000be3c l       .text  00000000 
d000be40 l       .text  00000000 
d000be40 l       .text  00000000 
d000be48 l       .text  00000000 
d000be48 l       .text  00000000 
d000be4c l       .text  00000000 
d000be4c l       .text  00000000 
d000be54 l       .text  00000000 
d000be54 l       .text  00000000 
d000be5c l       .text  00000000 
d000be64 l       .text  00000000 
d000be66 l       .text  00000000 
d000be68 l       .text  00000000 
d000be6a l       .text  00000000 
d000be70 l       .text  00000000 
d000be70 l       .text  00000000 
d000be70 l       .text  00000000 
d000be70 l       .text  00000000 
d000be70 l       .text  00000000 
d000be72 l       .text  00000000 
d000be7e l       .text  00000000 
d000be80 l       .text  00000000 
d000be82 l       .text  00000000 
d000be90 l       .text  00000000 
d000be90 l       .text  00000000 
d000be9a l       .text  00000000 
d000be9e l       .text  00000000 
d000be9e l       .text  00000000 
d000bea0 l       .text  00000000 
d000bea0 l       .text  00000000 
d000bea4 l       .text  00000000 
d000bea4 l       .text  00000000 
d000beaa l       .text  00000000 
d000beaa l       .text  00000000 
d000beb8 l       .text  00000000 
d000bebc l       .text  00000000 
d000bebc l       .text  00000000 
d000bebe l       .text  00000000 
d000bebe l       .text  00000000 
d000bec2 l       .text  00000000 
d000bec2 l       .text  00000000 
d000beca l       .text  00000000 
d000bed2 l       .text  00000000 
d000bede l       .text  00000000 
d000bede l       .text  00000000 
d000bede l       .text  00000000 
d000bede l       .text  00000000 
d000bede l       .text  00000000 
d000bede l       .text  00000000 
d000bee0 l       .text  00000000 
d000bee4 l       .text  00000000 
d000bee6 l       .text  00000000 
d000beee l       .text  00000000 
d000bef2 l       .text  00000000 
d000bef2 l       .text  00000000 
d000bef6 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
0000641e l       .debug_loc     00000000 
00006444 l       .debug_loc     00000000 
0000645f l       .debug_loc     00000000 
0000647a l       .debug_loc     00000000 
000064a0 l       .debug_loc     00000000 
000064bb l       .debug_loc     00000000 
000064d6 l       .debug_loc     00000000 
000064f1 l       .debug_loc     00000000 
0000650c l       .debug_loc     00000000 
00006532 l       .debug_loc     00000000 
00006558 l       .debug_loc     00000000 
0000658b l       .debug_loc     00000000 
000065be l       .debug_loc     00000000 
000065e4 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000036b0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008e0 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000d23 l       .debug_str     00000000 
00000c70 l       .debug_str     00000000 
00000c82 l       .debug_str     00000000 
00000c93 l       .debug_str     00000000 
00000cae l       .debug_str     00000000 
00000ccf l       .debug_str     00000000 
00000ce4 l       .debug_str     00000000 
00000cf9 l       .debug_str     00000000 
00000d0d l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000036df l       .debug_str     00000000 
00003750 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
000018b0 l       .debug_str     00000000 
000036eb l       .debug_str     00000000 
00003768 l       .debug_str     00000000 
000033bd l       .debug_str     00000000 
00003777 l       .debug_str     00000000 
00003787 l       .debug_str     00000000 
00003792 l       .debug_str     00000000 
000033c7 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
0000339c l       .debug_str     00000000 
000015da l       .debug_str     00000000 
0000379c l       .debug_str     00000000 
000037b2 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
00003700 l       .debug_str     00000000 
000015f0 l       .debug_str     00000000 
000037cc l       .debug_str     00000000 
0000371e l       .debug_str     00000000 
00003061 l       .debug_str     00000000 
0000373b l       .debug_str     00000000 
000015c7 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
00000dd6 l       .debug_str     00000000 
00000dc1 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000037d8 l       .debug_str     00000000 
000008e0 l       .debug_frame   00000000 
d000be70 l       .text  00000000 
d000bede l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf04 l       .text  00000000 
00000000 l    df *ABS*  00000000 pinmux.c
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf08 l       .text  00000000 
d000bf10 l       .text  00000000 
d000bf10 l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf16 l       .text  00000000 
d000bf16 l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf2a l       .text  00000000 
d000bf2a l       .text  00000000 
d000bf2c l       .text  00000000 
d000bf2c l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf3a l       .text  00000000 
d000bf3a l       .text  00000000 
d000bf40 l       .text  00000000 
d000bf40 l       .text  00000000 
d000bf4a l       .text  00000000 
d000bf4a l       .text  00000000 
d000bf4c l       .text  00000000 
d000bf4c l       .text  00000000 
d000bf52 l       .text  00000000 
d000bf52 l       .text  00000000 
d000bf5a l       .text  00000000 
d000bf5a l       .text  00000000 
d000bf5e l       .text  00000000 
d000bf5e l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf64 l       .text  00000000 
0000660a l       .debug_loc     00000000 
00006628 l       .debug_loc     00000000 
0000663b l       .debug_loc     00000000 
00006655 l       .debug_loc     00000000 
0000666f l       .debug_loc     00000000 
00006689 l       .debug_loc     00000000 
000066a4 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000037e7 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003816 l       .debug_str     00000000 
00004cc8 l       .debug_str     00000000 
00004cbb l       .debug_str     00000000 
00003825 l       .debug_str     00000000 
0000477d l       .debug_str     00000000 
000029fc l       .debug_str     00000000 
000041b4 l       .debug_str     00000000 
00004192 l       .debug_str     00000000 
0000382c l       .debug_str     00000000 
00003854 l       .debug_str     00000000 
0000387c l       .debug_str     00000000 
000038a4 l       .debug_str     00000000 
000038cc l       .debug_str     00000000 
000038f4 l       .debug_str     00000000 
0000391c l       .debug_str     00000000 
00003944 l       .debug_str     00000000 
0000396c l       .debug_str     00000000 
00003994 l       .debug_str     00000000 
000039bc l       .debug_str     00000000 
000039e5 l       .debug_str     00000000 
00003a0e l       .debug_str     00000000 
00003a37 l       .debug_str     00000000 
00003a60 l       .debug_str     00000000 
00003a89 l       .debug_str     00000000 
00003ab2 l       .debug_str     00000000 
00003adb l       .debug_str     00000000 
00003b04 l       .debug_str     00000000 
00003b2d l       .debug_str     00000000 
00003b56 l       .debug_str     00000000 
00003b7f l       .debug_str     00000000 
00003ba8 l       .debug_str     00000000 
00003bd1 l       .debug_str     00000000 
00003bfa l       .debug_str     00000000 
00003c23 l       .debug_str     00000000 
00003c4c l       .debug_str     00000000 
00003c75 l       .debug_str     00000000 
00003c9e l       .debug_str     00000000 
00003cc7 l       .debug_str     00000000 
00003cf0 l       .debug_str     00000000 
00003d19 l       .debug_str     00000000 
00003d42 l       .debug_str     00000000 
00003d68 l       .debug_str     00000000 
00003d8e l       .debug_str     00000000 
00003db4 l       .debug_str     00000000 
00003dda l       .debug_str     00000000 
00003e00 l       .debug_str     00000000 
00003e26 l       .debug_str     00000000 
00003e50 l       .debug_str     00000000 
00003e7a l       .debug_str     00000000 
00003ea4 l       .debug_str     00000000 
00003ece l       .debug_str     00000000 
00003ef4 l       .debug_str     00000000 
00003f1a l       .debug_str     00000000 
00003f40 l       .debug_str     00000000 
00003f66 l       .debug_str     00000000 
00003f94 l       .debug_str     00000000 
00003fbf l       .debug_str     00000000 
00003fea l       .debug_str     00000000 
00004015 l       .debug_str     00000000 
0000404a l       .debug_str     00000000 
0000407c l       .debug_str     00000000 
000040ae l       .debug_str     00000000 
000040e0 l       .debug_str     00000000 
00004112 l       .debug_str     00000000 
00004145 l       .debug_str     00000000 
0000416f l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00004783 l       .debug_str     00000000 
00004769 l       .debug_str     00000000 
000041d8 l       .debug_str     00000000 
000041fc l       .debug_str     00000000 
0000421f l       .debug_str     00000000 
0000423b l       .debug_str     00000000 
00004257 l       .debug_str     00000000 
00004273 l       .debug_str     00000000 
0000428f l       .debug_str     00000000 
000042ab l       .debug_str     00000000 
000042c7 l       .debug_str     00000000 
000042e3 l       .debug_str     00000000 
000042ff l       .debug_str     00000000 
0000431b l       .debug_str     00000000 
00004337 l       .debug_str     00000000 
00004353 l       .debug_str     00000000 
0000436f l       .debug_str     00000000 
0000438b l       .debug_str     00000000 
000043a7 l       .debug_str     00000000 
000043c3 l       .debug_str     00000000 
000043df l       .debug_str     00000000 
000043fb l       .debug_str     00000000 
00004417 l       .debug_str     00000000 
00004433 l       .debug_str     00000000 
00004450 l       .debug_str     00000000 
0000446d l       .debug_str     00000000 
0000448a l       .debug_str     00000000 
000044a6 l       .debug_str     00000000 
000044c2 l       .debug_str     00000000 
000044de l       .debug_str     00000000 
000044fa l       .debug_str     00000000 
00004516 l       .debug_str     00000000 
00004532 l       .debug_str     00000000 
0000454e l       .debug_str     00000000 
0000456a l       .debug_str     00000000 
00004586 l       .debug_str     00000000 
000045a2 l       .debug_str     00000000 
000045bf l       .debug_str     00000000 
000045dc l       .debug_str     00000000 
000045f9 l       .debug_str     00000000 
00004615 l       .debug_str     00000000 
00004631 l       .debug_str     00000000 
0000464d l       .debug_str     00000000 
00004669 l       .debug_str     00000000 
00004685 l       .debug_str     00000000 
000046a1 l       .debug_str     00000000 
000046bd l       .debug_str     00000000 
000046d9 l       .debug_str     00000000 
000046f6 l       .debug_str     00000000 
00004713 l       .debug_str     00000000 
00004730 l       .debug_str     00000000 
0000474d l       .debug_str     00000000 
00004ca1 l       .debug_str     00000000 
00004c89 l       .debug_str     00000000 
0000479f l       .debug_str     00000000 
000047b9 l       .debug_str     00000000 
000047d3 l       .debug_str     00000000 
000047ed l       .debug_str     00000000 
00004807 l       .debug_str     00000000 
00004821 l       .debug_str     00000000 
0000483b l       .debug_str     00000000 
00004855 l       .debug_str     00000000 
0000486f l       .debug_str     00000000 
00004889 l       .debug_str     00000000 
000048a3 l       .debug_str     00000000 
000048bd l       .debug_str     00000000 
000048d7 l       .debug_str     00000000 
000048f1 l       .debug_str     00000000 
0000490b l       .debug_str     00000000 
00004925 l       .debug_str     00000000 
0000493f l       .debug_str     00000000 
00004959 l       .debug_str     00000000 
00004973 l       .debug_str     00000000 
0000498d l       .debug_str     00000000 
000049a8 l       .debug_str     00000000 
000049c3 l       .debug_str     00000000 
000049de l       .debug_str     00000000 
000049f8 l       .debug_str     00000000 
00004a12 l       .debug_str     00000000 
00004a2c l       .debug_str     00000000 
00004a46 l       .debug_str     00000000 
00004a60 l       .debug_str     00000000 
00004a7a l       .debug_str     00000000 
00004a94 l       .debug_str     00000000 
00004aae l       .debug_str     00000000 
00004ac8 l       .debug_str     00000000 
00004ae2 l       .debug_str     00000000 
00004afd l       .debug_str     00000000 
00004b18 l       .debug_str     00000000 
00004b33 l       .debug_str     00000000 
00004b4d l       .debug_str     00000000 
00004b67 l       .debug_str     00000000 
00004b81 l       .debug_str     00000000 
00004b9b l       .debug_str     00000000 
00004bb5 l       .debug_str     00000000 
00004bcf l       .debug_str     00000000 
00004be9 l       .debug_str     00000000 
00004c03 l       .debug_str     00000000 
00004c1e l       .debug_str     00000000 
00004c39 l       .debug_str     00000000 
00004c54 l       .debug_str     00000000 
00004c6f l       .debug_str     00000000 
00004cd7 l       .debug_str     00000000 
00004ce6 l       .debug_str     00000000 
00004cf5 l       .debug_str     00000000 
00004d01 l       .debug_str     00000000 
00005e6f l       .debug_str     00000000 
00005e61 l       .debug_str     00000000 
000071fd l       .debug_str     00000000 
00005e3d l       .debug_str     00000000 
000052a4 l       .debug_str     00000000 
00005288 l       .debug_str     00000000 
00004d0e l       .debug_str     00000000 
00004d2b l       .debug_str     00000000 
00004d48 l       .debug_str     00000000 
00004d65 l       .debug_str     00000000 
00004d82 l       .debug_str     00000000 
00004d9f l       .debug_str     00000000 
00004dbc l       .debug_str     00000000 
00004dd9 l       .debug_str     00000000 
00004df6 l       .debug_str     00000000 
00004e13 l       .debug_str     00000000 
00004e30 l       .debug_str     00000000 
00004e4d l       .debug_str     00000000 
00004e6a l       .debug_str     00000000 
00004e87 l       .debug_str     00000000 
00004ea4 l       .debug_str     00000000 
00004ec1 l       .debug_str     00000000 
00004ede l       .debug_str     00000000 
00004efb l       .debug_str     00000000 
00004f18 l       .debug_str     00000000 
00004f35 l       .debug_str     00000000 
00004f53 l       .debug_str     00000000 
00004f71 l       .debug_str     00000000 
00004f8f l       .debug_str     00000000 
00004fac l       .debug_str     00000000 
00004fc9 l       .debug_str     00000000 
00004fe6 l       .debug_str     00000000 
00005003 l       .debug_str     00000000 
00005020 l       .debug_str     00000000 
0000503d l       .debug_str     00000000 
0000505a l       .debug_str     00000000 
00005077 l       .debug_str     00000000 
00005094 l       .debug_str     00000000 
000050b1 l       .debug_str     00000000 
000050cf l       .debug_str     00000000 
000050ed l       .debug_str     00000000 
0000510b l       .debug_str     00000000 
00005128 l       .debug_str     00000000 
00005145 l       .debug_str     00000000 
00005162 l       .debug_str     00000000 
0000517f l       .debug_str     00000000 
0000519c l       .debug_str     00000000 
000051b9 l       .debug_str     00000000 
000051d6 l       .debug_str     00000000 
000051f3 l       .debug_str     00000000 
00005211 l       .debug_str     00000000 
0000522f l       .debug_str     00000000 
0000524d l       .debug_str     00000000 
0000526b l       .debug_str     00000000 
00005e44 l       .debug_str     00000000 
00005e29 l       .debug_str     00000000 
000052c2 l       .debug_str     00000000 
000052e7 l       .debug_str     00000000 
0000530b l       .debug_str     00000000 
00005331 l       .debug_str     00000000 
00005353 l       .debug_str     00000000 
00005375 l       .debug_str     00000000 
00005397 l       .debug_str     00000000 
000053b9 l       .debug_str     00000000 
000053db l       .debug_str     00000000 
000053fd l       .debug_str     00000000 
0000541f l       .debug_str     00000000 
00005441 l       .debug_str     00000000 
00005463 l       .debug_str     00000000 
00005485 l       .debug_str     00000000 
000054a8 l       .debug_str     00000000 
000054cb l       .debug_str     00000000 
000054ee l       .debug_str     00000000 
00005511 l       .debug_str     00000000 
00005534 l       .debug_str     00000000 
00005557 l       .debug_str     00000000 
0000557a l       .debug_str     00000000 
0000559d l       .debug_str     00000000 
000055c0 l       .debug_str     00000000 
000055e3 l       .debug_str     00000000 
00005606 l       .debug_str     00000000 
00005629 l       .debug_str     00000000 
0000564c l       .debug_str     00000000 
0000566f l       .debug_str     00000000 
00005692 l       .debug_str     00000000 
000056b5 l       .debug_str     00000000 
000056d8 l       .debug_str     00000000 
000056fb l       .debug_str     00000000 
0000571e l       .debug_str     00000000 
00005741 l       .debug_str     00000000 
00005764 l       .debug_str     00000000 
00005787 l       .debug_str     00000000 
000057a7 l       .debug_str     00000000 
000057c7 l       .debug_str     00000000 
000057e7 l       .debug_str     00000000 
00005807 l       .debug_str     00000000 
00005827 l       .debug_str     00000000 
00005847 l       .debug_str     00000000 
0000586b l       .debug_str     00000000 
0000588f l       .debug_str     00000000 
000058b3 l       .debug_str     00000000 
000058d7 l       .debug_str     00000000 
000058f7 l       .debug_str     00000000 
00005917 l       .debug_str     00000000 
00005937 l       .debug_str     00000000 
00005957 l       .debug_str     00000000 
0000597d l       .debug_str     00000000 
000059a3 l       .debug_str     00000000 
000059c9 l       .debug_str     00000000 
000059ef l       .debug_str     00000000 
00005a13 l       .debug_str     00000000 
00005a37 l       .debug_str     00000000 
00005a5c l       .debug_str     00000000 
00005a8b l       .debug_str     00000000 
00005aba l       .debug_str     00000000 
00005ae9 l       .debug_str     00000000 
00005b18 l       .debug_str     00000000 
00005b47 l       .debug_str     00000000 
00005b76 l       .debug_str     00000000 
00005ba5 l       .debug_str     00000000 
00005bd4 l       .debug_str     00000000 
00005c03 l       .debug_str     00000000 
00005c26 l       .debug_str     00000000 
00005c49 l       .debug_str     00000000 
00005c6c l       .debug_str     00000000 
00005c8f l       .debug_str     00000000 
00005cb2 l       .debug_str     00000000 
00005cd5 l       .debug_str     00000000 
00005cfa l       .debug_str     00000000 
00005d2a l       .debug_str     00000000 
00005d57 l       .debug_str     00000000 
00005d84 l       .debug_str     00000000 
00005db1 l       .debug_str     00000000 
00005dde l       .debug_str     00000000 
00005e0c l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00005e7f l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00005e90 l       .debug_str     00000000 
00005e9a l       .debug_str     00000000 
00005ea0 l       .debug_str     00000000 
00005eaa l       .debug_str     00000000 
00001068 l       .debug_str     00000000 
00005eb1 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
000009ac l       .debug_frame   00000000 
d000bf64 l       .text  00000000 
00000000 l    df *ABS*  00000000 retention_sram.c
d000bf64 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf72 l       .text  00000000 
d000bf72 l       .text  00000000 
d000bf74 l       .text  00000000 
d000bf74 l       .text  00000000 
00000000 l       .debug_str     00000000 
00005ebe l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000928 l       .debug_ranges  00000000 
000026a0 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00005ef5 l       .debug_str     00000000 
00001181 l       .debug_str     00000000 
00000fe6 l       .debug_str     00000000 
00001161 l       .debug_str     00000000 
00001172 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000114e l       .debug_str     00000000 
00005f0d l       .debug_str     00000000 
00005f06 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
0000113a l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00005f22 l       .debug_str     00000000 
00007ba9 l       .debug_str     00000000 
000009d8 l       .debug_frame   00000000 
d000bf6a l       .text  00000000 
d000bf74 l       .text  00000000 
00000000 l    df *ABS*  00000000 rstmgr.c
d000bf74 l       .text  00000000 
d000bf74 l       .text  00000000 
d000bf74 l       .text  00000000 
d000bf78 l       .text  00000000 
d000bf78 l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7e l       .text  00000000 
d000bf7e l       .text  00000000 
d000bf84 l       .text  00000000 
d000bf84 l       .text  00000000 
d000bf86 l       .text  00000000 
d000bf8e l       .text  00000000 
d000bf8e l       .text  00000000 
d000bf92 l       .text  00000000 
d000bf92 l       .text  00000000 
d000bf94 l       .text  00000000 
d000bf94 l       .text  00000000 
d000bf96 l       .text  00000000 
d000bf96 l       .text  00000000 
d000bf98 l       .text  00000000 
d000bf9a l       .text  00000000 
d000bf9c l       .text  00000000 
d000bfa0 l       .text  00000000 
d000bfa4 l       .text  00000000 
d000bfa4 l       .text  00000000 
d000bfa6 l       .text  00000000 
d000bfa6 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfac l       .text  00000000 
d000bfac l       .text  00000000 
d000bfae l       .text  00000000 
d000bfae l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb8 l       .text  00000000 
d000bfb8 l       .text  00000000 
d000bfba l       .text  00000000 
d000bfba l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfc0 l       .text  00000000 
d000bfc0 l       .text  00000000 
000066bf l       .debug_loc     00000000 
000066e1 l       .debug_loc     00000000 
00006708 l       .debug_loc     00000000 
0000672a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005f3a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000950 l       .debug_ranges  00000000 
00005f69 l       .debug_str     00000000 
00005f8b l       .debug_str     00000000 
00005f7b l       .debug_str     00000000 
00000f79 l       .debug_str     00000000 
00002868 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00001d08 l       .debug_str     00000000 
00001c68 l       .debug_str     00000000 
00001c7b l       .debug_str     00000000 
00001c8f l       .debug_str     00000000 
00001ca2 l       .debug_str     00000000 
00001cb6 l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001cdf l       .debug_str     00000000 
00001cf3 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00005f9f l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
00001128 l       .debug_str     00000000 
00001190 l       .debug_str     00000000 
00000fec l       .debug_str     00000000 
00005fcc l       .debug_str     00000000 
00005fb9 l       .debug_str     00000000 
000024e6 l       .debug_str     00000000 
00000a2c l       .debug_frame   00000000 
d000bfa8 l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfc0 l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000bfc0 l       .text  00000000 
d000bfc0 l       .text  00000000 
d000bfc0 l       .text  00000000 
d000bfc4 l       .text  00000000 
d000bfc4 l       .text  00000000 
d000bfca l       .text  00000000 
d000bfca l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfd0 l       .text  00000000 
d000bfd0 l       .text  00000000 
d000bfd4 l       .text  00000000 
d000bfd4 l       .text  00000000 
d000bfda l       .text  00000000 
d000bfda l       .text  00000000 
d000bfdc l       .text  00000000 
d000bfdc l       .text  00000000 
d000bfde l       .text  00000000 
d000bfde l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe8 l       .text  00000000 
d000bfe8 l       .text  00000000 
d000bfec l       .text  00000000 
d000bfec l       .text  00000000 
d000bfee l       .text  00000000 
d000bfee l       .text  00000000 
d000bfee l       .text  00000000 
d000bfee l       .text  00000000 
d000bfee l       .text  00000000 
d000bff2 l       .text  00000000 
d000bff2 l       .text  00000000 
d000bff4 l       .text  00000000 
d000bff4 l       .text  00000000 
d000bff6 l       .text  00000000 
d000bff6 l       .text  00000000 
d000bff8 l       .text  00000000 
d000bff8 l       .text  00000000 
d000c000 l       .text  00000000 
d000c000 l       .text  00000000 
d000c002 l       .text  00000000 
d000c002 l       .text  00000000 
d000c004 l       .text  00000000 
d000c004 l       .text  00000000 
d000c006 l       .text  00000000 
d000c006 l       .text  00000000 
d000c008 l       .text  00000000 
d000c00a l       .text  00000000 
d000c00a l       .text  00000000 
00006751 l       .debug_loc     00000000 
0000676c l       .debug_loc     00000000 
00006788 l       .debug_loc     00000000 
000067af l       .debug_loc     00000000 
000067d4 l       .debug_loc     00000000 
000067fb l       .debug_loc     00000000 
0000681d l       .debug_loc     00000000 
00006838 l       .debug_loc     00000000 
00006853 l       .debug_loc     00000000 
0000686e l       .debug_loc     00000000 
00006889 l       .debug_loc     00000000 
000068a4 l       .debug_loc     00000000 
000068d5 l       .debug_loc     00000000 
000068fb l       .debug_loc     00000000 
00006916 l       .debug_loc     00000000 
00006931 l       .debug_loc     00000000 
0000694c l       .debug_loc     00000000 
00006967 l       .debug_loc     00000000 
00006982 l       .debug_loc     00000000 
000069a8 l       .debug_loc     00000000 
000069ce l       .debug_loc     00000000 
000069e9 l       .debug_loc     00000000 
00006a04 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005fe5 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000978 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00006012 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00001074 l       .debug_str     00000000 
00006052 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000601d l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
0000602a l       .debug_str     00000000 
00003165 l       .debug_str     00000000 
0000669f l       .debug_str     00000000 
00006037 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00006042 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00006048 l       .debug_str     00000000 
00006c74 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000a80 l       .debug_frame   00000000 
d000bfee l       .text  00000000 
d000c00a l       .text  00000000 
00000000 l    df *ABS*  00000000 watchdog.c
d000c00a l       .text  00000000 
d000c00a l       .text  00000000 
d000c00a l       .text  00000000 
d000c00c l       .text  00000000 
d000c00c l       .text  00000000 
d000c010 l       .text  00000000 
d000c010 l       .text  00000000 
d000c010 l       .text  00000000 
d000c012 l       .text  00000000 
d000c012 l       .text  00000000 
d000c01a l       .text  00000000 
d000c01a l       .text  00000000 
d000c01e l       .text  00000000 
d000c01e l       .text  00000000 
d000c022 l       .text  00000000 
d000c026 l       .text  00000000 
d000c02e l       .text  00000000 
d000c032 l       .text  00000000 
d000c040 l       .text  00000000 
d000c048 l       .text  00000000 
d000c04c l       .text  00000000 
d000c05a l       .text  00000000 
d000c062 l       .text  00000000 
d000c070 l       .text  00000000 
d000c078 l       .text  00000000 
d000c07c l       .text  00000000 
d000c088 l       .text  00000000 
d000c096 l       .text  00000000 
d000c09a l       .text  00000000 
d000c0a6 l       .text  00000000 
d000c0aa l       .text  00000000 
d000c0aa l       .text  00000000 
d000c0ae l       .text  00000000 
d000c0b2 l       .text  00000000 
d000c0b2 l       .text  00000000 
d000c0b4 l       .text  00000000 
d000c0b4 l       .text  00000000 
d000c0b6 l       .text  00000000 
d000c0b6 l       .text  00000000 
d000c0b8 l       .text  00000000 
d000c0c8 l       .text  00000000 
d000c0ce l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d8 l       .text  00000000 
d000c0da l       .text  00000000 
d000c0da l       .text  00000000 
d000c0dc l       .text  00000000 
d000c0e2 l       .text  00000000 
d000c0e2 l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ec l       .text  00000000 
d000c0f2 l       .text  00000000 
d000c0f4 l       .text  00000000 
d000c0fc l       .text  00000000 
d000c102 l       .text  00000000 
d000c102 l       .text  00000000 
d000c104 l       .text  00000000 
d000c104 l       .text  00000000 
d000c10e l       .text  00000000 
d000c10e l       .text  00000000 
d000c114 l       .text  00000000 
d000c114 l       .text  00000000 
d000c118 l       .text  00000000 
d000c118 l       .text  00000000 
d000c11a l       .text  00000000 
d000c11a l       .text  00000000 
d000c11c l       .text  00000000 
d000c11c l       .text  00000000 
d000c122 l       .text  00000000 
d000c126 l       .text  00000000 
d000c126 l       .text  00000000 
d000c128 l       .text  00000000 
d000c128 l       .text  00000000 
d000c128 l       .text  00000000 
d000c12c l       .text  00000000 
d000c12c l       .text  00000000 
d000c130 l       .text  00000000 
d000c140 l       .text  00000000 
d000c140 l       .text  00000000 
d000c142 l       .text  00000000 
d000c146 l       .text  00000000 
d000c14a l       .text  00000000 
d000c15a l       .text  00000000 
d000c15a l       .text  00000000 
d000c160 l       .text  00000000 
d000c164 l       .text  00000000 
d000c164 l       .text  00000000 
d000c16a l       .text  00000000 
d000c16a l       .text  00000000 
d000c16c l       .text  00000000 
d000c16c l       .text  00000000 
d000c170 l       .text  00000000 
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
d000c17e l       .text  00000000 
d000c17e l       .text  00000000 
d000c17e l       .text  00000000 
d000c17e l       .text  00000000 
d000c17e l       .text  00000000 
d000c184 l       .text  00000000 
d000c18a l       .text  00000000 
d000c18a l       .text  00000000 
d000c18a l       .text  00000000 
00006a1f l       .debug_loc     00000000 
00006a45 l       .debug_loc     00000000 
00006a6b l       .debug_loc     00000000 
00006aa2 l       .debug_loc     00000000 
00006ac8 l       .debug_loc     00000000 
00006ae3 l       .debug_loc     00000000 
00006b17 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006064 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000009a0 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00006095 l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
000060ab l       .debug_str     00000000 
000060b7 l       .debug_str     00000000 
000060c3 l       .debug_str     00000000 
00006172 l       .debug_str     00000000 
000060d0 l       .debug_str     00000000 
00006109 l       .debug_str     00000000 
00006148 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000010de l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
000061dd l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
0000619c l       .debug_str     00000000 
000061f0 l       .debug_str     00000000 
00007ba9 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
0000120b l       .debug_str     00000000 
000061af l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
000061bc l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
000061f7 l       .debug_str     00000000 
000061e7 l       .debug_str     00000000 
000061c9 l       .debug_str     00000000 
000061d8 l       .debug_str     00000000 
00000ad4 l       .debug_frame   00000000 
d000c0ea l       .text  00000000 
d000c17e l       .text  00000000 
d000c18a l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host_autogen.c
d000c18a l       .text  00000000 
d000c18a l       .text  00000000 
d000c18a l       .text  00000000 
d000c18a l       .text  00000000 
d000c18c l       .text  00000000 
d000c18e l       .text  00000000 
d000c192 l       .text  00000000 
d000c194 l       .text  00000000 
d000c196 l       .text  00000000 
d000c198 l       .text  00000000 
d000c198 l       .text  00000000 
00006b62 l       .debug_loc     00000000 
00006b7d l       .debug_loc     00000000 
00006b98 l       .debug_loc     00000000 
00006bb3 l       .debug_loc     00000000 
00006bcf l       .debug_loc     00000000 
00006beb l       .debug_loc     00000000 
00006c06 l       .debug_loc     00000000 
00006c21 l       .debug_loc     00000000 
00006c3c l       .debug_loc     00000000 
00006c57 l       .debug_loc     00000000 
00006c72 l       .debug_loc     00000000 
00006c8d l       .debug_loc     00000000 
00006ca8 l       .debug_loc     00000000 
00006cc3 l       .debug_loc     00000000 
00006ce9 l       .debug_loc     00000000 
00006d04 l       .debug_loc     00000000 
00006d1f l       .debug_loc     00000000 
00006d3d l       .debug_loc     00000000 
00006d64 l       .debug_loc     00000000 
00006d7f l       .debug_loc     00000000 
00006d9a l       .debug_loc     00000000 
00006db5 l       .debug_loc     00000000 
00006dd3 l       .debug_loc     00000000 
00006dfa l       .debug_loc     00000000 
00006e15 l       .debug_loc     00000000 
00006e30 l       .debug_loc     00000000 
00006e4b l       .debug_loc     00000000 
00006e66 l       .debug_loc     00000000 
00006e8c l       .debug_loc     00000000 
00006ea7 l       .debug_loc     00000000 
00006ec2 l       .debug_loc     00000000 
00006ee8 l       .debug_loc     00000000 
00006f08 l       .debug_loc     00000000 
00006f2e l       .debug_loc     00000000 
00006f4c l       .debug_loc     00000000 
00006f67 l       .debug_loc     00000000 
00006f82 l       .debug_loc     00000000 
00006fa2 l       .debug_loc     00000000 
00006fc8 l       .debug_loc     00000000 
00006fee l       .debug_loc     00000000 
00007009 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006209 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000009d0 l       .debug_ranges  00000000 
0000623a l       .debug_str     00000000 
00006274 l       .debug_str     00000000 
00006267 l       .debug_str     00000000 
00006244 l       .debug_str     00000000 
00006255 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000321 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002c5 l       .debug_str     00000000 
000002cf l       .debug_str     00000000 
000002da l       .debug_str     00000000 
000002e5 l       .debug_str     00000000 
000002f5 l       .debug_str     00000000 
00000304 l       .debug_str     00000000 
00000313 l       .debug_str     00000000 
0000629e l       .debug_str     00000000 
00006283 l       .debug_str     00000000 
000062dc l       .debug_str     00000000 
000062b1 l       .debug_str     00000000 
000062c5 l       .debug_str     00000000 
00006312 l       .debug_str     00000000 
000062ed l       .debug_str     00000000 
00006300 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000f04 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
000002a6 l       .debug_str     00000000 
0000631d l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00006331 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006386 l       .debug_str     00000000 
000062ab l       .debug_str     00000000 
000064ce l       .debug_str     00000000 
000064d8 l       .debug_str     00000000 
0000639f l       .debug_str     00000000 
000062e9 l       .debug_str     00000000 
00007ff2 l       .debug_str     00000000 
0000633b l       .debug_str     00000000 
000063b9 l       .debug_str     00000000 
000064e7 l       .debug_str     00000000 
0000634e l       .debug_str     00000000 
0000637c l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00006369 l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000063d4 l       .debug_str     00000000 
000063e5 l       .debug_str     00000000 
00006512 l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
000063f0 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
00006411 l       .debug_str     00000000 
0000642e l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00006521 l       .debug_str     00000000 
00006445 l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
0000653c l       .debug_str     00000000 
0000654c l       .debug_str     00000000 
00006462 l       .debug_str     00000000 
00006557 l       .debug_str     00000000 
0000647f l       .debug_str     00000000 
0000649c l       .debug_str     00000000 
00001716 l       .debug_str     00000000 
000002af l       .debug_str     00000000 
000002a2 l       .debug_str     00000000 
000064b9 l       .debug_str     00000000 
000064f0 l       .debug_str     00000000 
0000652f l       .debug_str     00000000 
00006562 l       .debug_str     00000000 
00000b4c l       .debug_frame   00000000 
d000c198 l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host.c
d000c198 l       .text  00000000 
d000c198 l       .text  00000000 
d000c198 l       .text  00000000 
d000c19a l       .text  00000000 
d000c19c l       .text  00000000 
d000c1a4 l       .text  00000000 
d000c1a8 l       .text  00000000 
d000c1a8 l       .text  00000000 
d000c1ac l       .text  00000000 
d000c1ac l       .text  00000000 
d000c1b0 l       .text  00000000 
d000c1b6 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1c2 l       .text  00000000 
d000c1c4 l       .text  00000000 
d000c1c4 l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1d2 l       .text  00000000 
d000c1d2 l       .text  00000000 
d000c1d4 l       .text  00000000 
d000c1d4 l       .text  00000000 
d000c1da l       .text  00000000 
d000c1da l       .text  00000000 
d000c1de l       .text  00000000 
d000c1de l       .text  00000000 
d000c1e2 l       .text  00000000 
d000c1ea l       .text  00000000 
d000c1ea l       .text  00000000 
d000c1ee l       .text  00000000 
d000c1ee l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f6 l       .text  00000000 
d000c1fc l       .text  00000000 
d000c200 l       .text  00000000 
d000c208 l       .text  00000000 
d000c208 l       .text  00000000 
d000c20a l       .text  00000000 
d000c20a l       .text  00000000 
d000c20e l       .text  00000000 
d000c20e l       .text  00000000 
d000c212 l       .text  00000000 
d000c212 l       .text  00000000 
d000c214 l       .text  00000000 
d000c214 l       .text  00000000 
d000c216 l       .text  00000000 
d000c216 l       .text  00000000 
d000c21c l       .text  00000000 
d000c21c l       .text  00000000 
d000c21e l       .text  00000000 
d000c222 l       .text  00000000 
d000c226 l       .text  00000000 
d000c228 l       .text  00000000 
d000c234 l       .text  00000000 
d000c234 l       .text  00000000 
d000c236 l       .text  00000000 
d000c236 l       .text  00000000 
d000c23a l       .text  00000000 
d000c23a l       .text  00000000 
d000c23e l       .text  00000000 
d000c23e l       .text  00000000 
d000c242 l       .text  00000000 
d000c242 l       .text  00000000 
d000c246 l       .text  00000000 
d000c246 l       .text  00000000 
d000c24c l       .text  00000000 
d000c24e l       .text  00000000 
d000c250 l       .text  00000000 
d000c252 l       .text  00000000 
d000c254 l       .text  00000000 
d000c256 l       .text  00000000 
d000c256 l       .text  00000000 
d000c256 l       .text  00000000 
d000c256 l       .text  00000000 
d000c256 l       .text  00000000 
d000c258 l       .text  00000000 
d000c266 l       .text  00000000 
d000c268 l       .text  00000000 
d000c26a l       .text  00000000 
d000c26e l       .text  00000000 
d000c270 l       .text  00000000 
d000c272 l       .text  00000000 
d000c272 l       .text  00000000 
d000c27a l       .text  00000000 
d000c280 l       .text  00000000 
d000c280 l       .text  00000000 
d000c288 l       .text  00000000 
d000c298 l       .text  00000000 
d000c298 l       .text  00000000 
d000c29c l       .text  00000000 
d000c29c l       .text  00000000 
d000c2a0 l       .text  00000000 
d000c2aa l       .text  00000000 
d000c2aa l       .text  00000000 
d000c2ac l       .text  00000000 
d000c2ae l       .text  00000000 
d000c2ae l       .text  00000000 
d000c2b8 l       .text  00000000 
d000c2bc l       .text  00000000 
d000c2bc l       .text  00000000 
d000c2be l       .text  00000000 
d000c2be l       .text  00000000 
d000c2c0 l       .text  00000000 
d000c2c0 l       .text  00000000 
d000c2c2 l       .text  00000000 
d000c2c2 l       .text  00000000 
d000c2c4 l       .text  00000000 
d000c2c4 l       .text  00000000 
d000c44c l     F .text  00000038 enqueue_word
d000c2c8 l       .text  00000000 
d000c2c8 l       .text  00000000 
d000c2ca l       .text  00000000 
d000c2ca l       .text  00000000 
d000c2cc l       .text  00000000 
d000c2ce l       .text  00000000 
d000c2ce l       .text  00000000 
d000c2d2 l       .text  00000000 
d000c2d2 l       .text  00000000 
d000c2d8 l       .text  00000000 
d000c2dc l       .text  00000000 
d000c2dc l       .text  00000000 
d000c2e0 l       .text  00000000 
d000c2e0 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e8 l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2f0 l       .text  00000000 
d000c2f0 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f8 l       .text  00000000 
d000c300 l       .text  00000000 
d000c300 l       .text  00000000 
d000c308 l       .text  00000000 
d000c308 l       .text  00000000 
d000c30c l       .text  00000000 
d000c312 l       .text  00000000 
d000c316 l       .text  00000000 
d000c31e l       .text  00000000 
d000c324 l       .text  00000000 
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
d000c32a l       .text  00000000 
d000c32a l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c32e l       .text  00000000 
d000c32e l       .text  00000000 
d000c330 l       .text  00000000 
d000c330 l       .text  00000000 
d000c334 l       .text  00000000 
d000c334 l       .text  00000000 
d000c336 l       .text  00000000 
d000c336 l       .text  00000000 
d000c338 l       .text  00000000 
d000c338 l       .text  00000000 
d000c33a l       .text  00000000 
d000c33a l       .text  00000000 
d000c33c l       .text  00000000 
d000c33c l       .text  00000000 
d000c340 l       .text  00000000 
d000c340 l       .text  00000000 
d000c342 l       .text  00000000 
d000c342 l       .text  00000000 
d000c348 l       .text  00000000 
d000c34a l       .text  00000000 
d000c34e l       .text  00000000 
d000c34e l       .text  00000000 
d000c354 l       .text  00000000 
d000c358 l       .text  00000000 
d000c35a l       .text  00000000 
d000c35a l       .text  00000000 
d000c360 l       .text  00000000 
d000c364 l       .text  00000000 
d000c364 l       .text  00000000 
d000c366 l       .text  00000000 
d000c366 l       .text  00000000 
d000c368 l       .text  00000000 
d000c368 l       .text  00000000 
d000c36a l       .text  00000000 
d000c36a l       .text  00000000 
d000c36c l       .text  00000000 
d000c36c l       .text  00000000 
d000c370 l       .text  00000000 
d000c370 l       .text  00000000 
d000c372 l       .text  00000000 
d000c372 l       .text  00000000 
d000c374 l       .text  00000000 
d000c376 l       .text  00000000 
d000c376 l       .text  00000000 
d000c37a l       .text  00000000 
d000c37a l       .text  00000000 
d000c380 l       .text  00000000 
d000c384 l       .text  00000000 
d000c384 l       .text  00000000 
d000c388 l       .text  00000000 
d000c388 l       .text  00000000 
d000c38c l       .text  00000000 
d000c38c l       .text  00000000 
d000c390 l       .text  00000000 
d000c396 l       .text  00000000 
d000c398 l       .text  00000000 
d000c398 l       .text  00000000 
d000c39a l       .text  00000000 
d000c39a l       .text  00000000 
d000c39c l       .text  00000000 
d000c39c l       .text  00000000 
d000c3a4 l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3b0 l       .text  00000000 
d000c3b2 l       .text  00000000 
d000c3b4 l       .text  00000000 
d000c3b6 l       .text  00000000 
d000c3b8 l       .text  00000000 
d000c3ba l       .text  00000000 
d000c3be l       .text  00000000 
d000c3c0 l       .text  00000000 
d000c3c2 l       .text  00000000 
d000c3c2 l       .text  00000000 
d000c3c6 l       .text  00000000 
d000c3c8 l       .text  00000000 
d000c3c8 l       .text  00000000 
d000c3ce l       .text  00000000 
d000c3ce l       .text  00000000 
d000c3d2 l       .text  00000000 
d000c3d2 l       .text  00000000 
d000c3d4 l       .text  00000000 
d000c3d4 l       .text  00000000 
d000c3d6 l       .text  00000000 
d000c3d6 l       .text  00000000 
d000c3d8 l       .text  00000000 
d000c3d8 l       .text  00000000 
d000c3dc l       .text  00000000 
d000c3dc l       .text  00000000 
d000c3de l       .text  00000000 
d000c3de l       .text  00000000 
d000c3e0 l       .text  00000000 
d000c3e0 l       .text  00000000 
d000c3e2 l       .text  00000000 
d000c3e2 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3ea l       .text  00000000 
d000c3ea l       .text  00000000 
d000c3ec l       .text  00000000 
d000c3ec l       .text  00000000 
d000c3ee l       .text  00000000 
d000c3f2 l       .text  00000000 
d000c3f2 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3fa l       .text  00000000 
d000c3fa l       .text  00000000 
d000c400 l       .text  00000000 
d000c400 l       .text  00000000 
d000c402 l       .text  00000000 
d000c402 l       .text  00000000 
d000c406 l       .text  00000000 
d000c406 l       .text  00000000 
d000c408 l       .text  00000000 
d000c40a l       .text  00000000 
d000c40a l       .text  00000000 
d000c40e l       .text  00000000 
d000c40e l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c412 l       .text  00000000 
d000c412 l       .text  00000000 
d000c416 l       .text  00000000 
d000c416 l       .text  00000000 
d000c418 l       .text  00000000 
d000c418 l       .text  00000000 
d000c41a l       .text  00000000 
d000c41a l       .text  00000000 
d000c41c l       .text  00000000 
d000c41c l       .text  00000000 
d000c41e l       .text  00000000 
d000c41e l       .text  00000000 
d000c420 l       .text  00000000 
d000c420 l       .text  00000000 
d000c422 l       .text  00000000 
d000c422 l       .text  00000000 
d000c424 l       .text  00000000 
d000c424 l       .text  00000000 
d000c42a l       .text  00000000 
d000c42a l       .text  00000000 
d000c42c l       .text  00000000 
d000c42c l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c430 l       .text  00000000 
d000c432 l       .text  00000000 
d000c434 l       .text  00000000 
d000c434 l       .text  00000000 
d000c436 l       .text  00000000 
d000c436 l       .text  00000000 
d000c438 l       .text  00000000 
d000c43e l       .text  00000000 
d000c43e l       .text  00000000 
d000c440 l       .text  00000000 
d000c440 l       .text  00000000 
d000c442 l       .text  00000000 
d000c442 l       .text  00000000 
d000c444 l       .text  00000000 
d000c444 l       .text  00000000 
d000c446 l       .text  00000000 
d000c446 l       .text  00000000 
d000c448 l       .text  00000000 
d000c448 l       .text  00000000 
d000c44a l       .text  00000000 
d000c44a l       .text  00000000 
d000c44c l       .text  00000000 
d000c44c l       .text  00000000 
d000c44c l       .text  00000000 
d000c44c l       .text  00000000 
d000c44c l       .text  00000000 
d000c44c l       .text  00000000 
d000c44e l       .text  00000000 
d000c452 l       .text  00000000 
d000c454 l       .text  00000000 
d000c454 l       .text  00000000 
d000c45a l       .text  00000000 
d000c45c l       .text  00000000 
d000c462 l       .text  00000000 
d000c462 l       .text  00000000 
d000c464 l       .text  00000000 
d000c464 l       .text  00000000 
d000c466 l       .text  00000000 
d000c466 l       .text  00000000 
d000c46c l       .text  00000000 
d000c46e l       .text  00000000 
d000c46e l       .text  00000000 
d000c470 l       .text  00000000 
d000c470 l       .text  00000000 
d000c474 l       .text  00000000 
d000c474 l       .text  00000000 
d000c476 l       .text  00000000 
d000c476 l       .text  00000000 
d000c478 l       .text  00000000 
d000c478 l       .text  00000000 
d000c47a l       .text  00000000 
d000c47a l       .text  00000000 
d000c47c l       .text  00000000 
d000c47c l       .text  00000000 
d000c47e l       .text  00000000 
d000c482 l       .text  00000000 
d000c484 l       .text  00000000 
d000c484 l       .text  00000000 
d000c484 l       .text  00000000 
d000c484 l       .text  00000000 
d000c484 l       .text  00000000 
d000c486 l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a2 l       .text  00000000 
d000c4a2 l       .text  00000000 
d000c4a4 l       .text  00000000 
d000c4a4 l       .text  00000000 
d000c4a6 l       .text  00000000 
d000c4a6 l       .text  00000000 
d000c4aa l       .text  00000000 
d000c4ac l       .text  00000000 
d000c4ae l       .text  00000000 
d000c4c4 l       .text  00000000 
d000c4da l       .text  00000000 
d000c4dc l       .text  00000000 
d000c4dc l       .text  00000000 
d000c4e0 l       .text  00000000 
d000c4e0 l       .text  00000000 
d000c4e2 l       .text  00000000 
d000c4e2 l       .text  00000000 
d000c4e6 l       .text  00000000 
d000c4e6 l       .text  00000000 
d000c4ee l       .text  00000000 
d000c4f2 l       .text  00000000 
d000c500 l       .text  00000000 
d000c502 l       .text  00000000 
d000c502 l       .text  00000000 
d000c504 l       .text  00000000 
d000c504 l       .text  00000000 
d000c508 l       .text  00000000 
d000c508 l       .text  00000000 
d000c50c l       .text  00000000 
d000c50c l       .text  00000000 
d000c510 l       .text  00000000 
d000c510 l       .text  00000000 
d000c516 l       .text  00000000 
d000c516 l       .text  00000000 
d000c51a l       .text  00000000 
d000c51a l       .text  00000000 
d000c51e l       .text  00000000 
d000c51e l       .text  00000000 
d000c522 l       .text  00000000 
d000c524 l       .text  00000000 
d000c524 l       .text  00000000 
d000c526 l       .text  00000000 
d000c526 l       .text  00000000 
d000c52a l       .text  00000000 
d000c52a l       .text  00000000 
d000c52e l       .text  00000000 
d000c52e l       .text  00000000 
d000c530 l       .text  00000000 
d000c530 l       .text  00000000 
d000c542 l       .text  00000000 
d000c542 l       .text  00000000 
d000c546 l       .text  00000000 
d000c546 l       .text  00000000 
d000c54e l       .text  00000000 
d000c552 l       .text  00000000 
d000c552 l       .text  00000000 
d000c558 l       .text  00000000 
d000c55a l       .text  00000000 
d000c55c l       .text  00000000 
d000c55c l       .text  00000000 
d000c560 l       .text  00000000 
d000c560 l       .text  00000000 
d000c564 l       .text  00000000 
d000c566 l       .text  00000000 
d000c568 l       .text  00000000 
d000c570 l       .text  00000000 
d000c572 l       .text  00000000 
d000c572 l       .text  00000000 
d000c576 l       .text  00000000 
d000c576 l       .text  00000000 
d000c57a l       .text  00000000 
d000c57a l       .text  00000000 
d000c57e l       .text  00000000 
d000c57e l       .text  00000000 
d000c584 l       .text  00000000 
d000c584 l       .text  00000000 
d000c586 l       .text  00000000 
d000c586 l       .text  00000000 
d000c588 l       .text  00000000 
d000c588 l       .text  00000000 
d000c58a l       .text  00000000 
d000c58e l       .text  00000000 
d000c58e l       .text  00000000 
d000c592 l       .text  00000000 
d000c592 l       .text  00000000 
d000c596 l       .text  00000000 
d000c598 l       .text  00000000 
d000c59a l       .text  00000000 
d000c59e l       .text  00000000 
d000c59e l       .text  00000000 
d000c5a0 l       .text  00000000 
d000c5a0 l       .text  00000000 
d000c5a2 l       .text  00000000 
d000c5a2 l       .text  00000000 
d000c5a6 l       .text  00000000 
d000c5a6 l       .text  00000000 
d000c5aa l       .text  00000000 
d000c5aa l       .text  00000000 
d000c5ac l       .text  00000000 
d000c5b8 l       .text  00000000 
d000c5bc l       .text  00000000 
d000c5bc l       .text  00000000 
d000c5c0 l       .text  00000000 
d000c5c0 l       .text  00000000 
d000c5c4 l       .text  00000000 
d000c5c4 l       .text  00000000 
d000c5c6 l       .text  00000000 
d000c5c8 l       .text  00000000 
d000c5c8 l       .text  00000000 
d000c5cc l       .text  00000000 
d000c5cc l       .text  00000000 
d000c5d0 l       .text  00000000 
d000c5d0 l       .text  00000000 
d000c5d2 l       .text  00000000 
d000c5de l       .text  00000000 
d000c5e0 l       .text  00000000 
d000c5e0 l       .text  00000000 
d000c5e8 l       .text  00000000 
d000c5e8 l       .text  00000000 
d000c5ec l       .text  00000000 
d000c5ec l       .text  00000000 
d000c5f0 l       .text  00000000 
d000c5f6 l       .text  00000000 
d000c5fa l       .text  00000000 
d000c5fa l       .text  00000000 
d000c5fe l       .text  00000000 
d000c5fe l       .text  00000000 
d000c600 l       .text  00000000 
d000c600 l       .text  00000000 
d000c602 l       .text  00000000 
d000c602 l       .text  00000000 
d000c604 l       .text  00000000 
d000c604 l       .text  00000000 
d000c606 l       .text  00000000 
d000c606 l       .text  00000000 
d000c60a l       .text  00000000 
d000c60a l       .text  00000000 
d000c60e l       .text  00000000 
d000c610 l       .text  00000000 
d000c61a l       .text  00000000 
d000c61a l       .text  00000000 
d000c622 l       .text  00000000 
d000c626 l       .text  00000000 
d000c630 l       .text  00000000 
d000c634 l       .text  00000000 
d000c63a l       .text  00000000 
d000c646 l       .text  00000000 
d000c646 l       .text  00000000 
d000c648 l       .text  00000000 
d000c64c l       .text  00000000 
d000c650 l       .text  00000000 
d000c650 l       .text  00000000 
d000c652 l       .text  00000000 
d000c662 l       .text  00000000 
d000c670 l       .text  00000000 
d000c670 l       .text  00000000 
d000c674 l       .text  00000000 
d000c674 l       .text  00000000 
00007024 l       .debug_loc     00000000 
0000703f l       .debug_loc     00000000 
0000705a l       .debug_loc     00000000 
00007080 l       .debug_loc     00000000 
0000709b l       .debug_loc     00000000 
000070b6 l       .debug_loc     00000000 
000070da l       .debug_loc     00000000 
000070f5 l       .debug_loc     00000000 
00007110 l       .debug_loc     00000000 
0000712b l       .debug_loc     00000000 
0000714f l       .debug_loc     00000000 
0000716a l       .debug_loc     00000000 
00007185 l       .debug_loc     00000000 
000071a0 l       .debug_loc     00000000 
000071bb l       .debug_loc     00000000 
000071df l       .debug_loc     00000000 
000071fa l       .debug_loc     00000000 
00007215 l       .debug_loc     00000000 
00007246 l       .debug_loc     00000000 
00007277 l       .debug_loc     00000000 
000072a8 l       .debug_loc     00000000 
000072c3 l       .debug_loc     00000000 
000072de l       .debug_loc     00000000 
00007301 l       .debug_loc     00000000 
0000731c l       .debug_loc     00000000 
00007337 l       .debug_loc     00000000 
00007375 l       .debug_loc     00000000 
00007394 l       .debug_loc     00000000 
000073af l       .debug_loc     00000000 
000073dc l       .debug_loc     00000000 
000073ff l       .debug_loc     00000000 
0000741a l       .debug_loc     00000000 
00007435 l       .debug_loc     00000000 
00007458 l       .debug_loc     00000000 
00007473 l       .debug_loc     00000000 
0000748e l       .debug_loc     00000000 
000074cc l       .debug_loc     00000000 
000074eb l       .debug_loc     00000000 
00007506 l       .debug_loc     00000000 
00007526 l       .debug_loc     00000000 
00007541 l       .debug_loc     00000000 
0000755d l       .debug_loc     00000000 
00007578 l       .debug_loc     00000000 
00007593 l       .debug_loc     00000000 
000075b6 l       .debug_loc     00000000 
000075d7 l       .debug_loc     00000000 
00007624 l       .debug_loc     00000000 
0000763f l       .debug_loc     00000000 
00007666 l       .debug_loc     00000000 
0000768b l       .debug_loc     00000000 
000076ad l       .debug_loc     00000000 
000076c8 l       .debug_loc     00000000 
000076ea l       .debug_loc     00000000 
0000770b l       .debug_loc     00000000 
00007726 l       .debug_loc     00000000 
00007746 l       .debug_loc     00000000 
00007762 l       .debug_loc     00000000 
0000777d l       .debug_loc     00000000 
0000779f l       .debug_loc     00000000 
000077ba l       .debug_loc     00000000 
000077e0 l       .debug_loc     00000000 
000077fc l       .debug_loc     00000000 
00007817 l       .debug_loc     00000000 
00007839 l       .debug_loc     00000000 
00007855 l       .debug_loc     00000000 
00007875 l       .debug_loc     00000000 
00007897 l       .debug_loc     00000000 
000078b2 l       .debug_loc     00000000 
000078cd l       .debug_loc     00000000 
000078f3 l       .debug_loc     00000000 
00007923 l       .debug_loc     00000000 
0000793e l       .debug_loc     00000000 
0000795e l       .debug_loc     00000000 
00007980 l       .debug_loc     00000000 
000079a0 l       .debug_loc     00000000 
000079c6 l       .debug_loc     00000000 
000079e1 l       .debug_loc     00000000 
00007a16 l       .debug_loc     00000000 
00007a5e l       .debug_loc     00000000 
00007a9a l       .debug_loc     00000000 
00007ab5 l       .debug_loc     00000000 
00007af1 l       .debug_loc     00000000 
00007b2d l       .debug_loc     00000000 
00007b54 l       .debug_loc     00000000 
00007b6f l       .debug_loc     00000000 
00007b8f l       .debug_loc     00000000 
00007bb1 l       .debug_loc     00000000 
00007bd5 l       .debug_loc     00000000 
00007bf0 l       .debug_loc     00000000 
00007c0b l       .debug_loc     00000000 
00007c2d l       .debug_loc     00000000 
00007c56 l       .debug_loc     00000000 
00007c7a l       .debug_loc     00000000 
00007c95 l       .debug_loc     00000000 
00007cb0 l       .debug_loc     00000000 
00007ccb l       .debug_loc     00000000 
00007ce6 l       .debug_loc     00000000 
00007d01 l       .debug_loc     00000000 
00007d23 l       .debug_loc     00000000 
00007d3e l       .debug_loc     00000000 
00007d60 l       .debug_loc     00000000 
00007d7c l       .debug_loc     00000000 
00007d97 l       .debug_loc     00000000 
00007db2 l       .debug_loc     00000000 
00007dcd l       .debug_loc     00000000 
00007df4 l       .debug_loc     00000000 
00007e19 l       .debug_loc     00000000 
00007e3d l       .debug_loc     00000000 
00007e64 l       .debug_loc     00000000 
00007e94 l       .debug_loc     00000000 
00007ebc l       .debug_loc     00000000 
00007ed9 l       .debug_loc     00000000 
00007eff l       .debug_loc     00000000 
00007f1a l       .debug_loc     00000000 
00007f35 l       .debug_loc     00000000 
00007f57 l       .debug_loc     00000000 
00007f79 l       .debug_loc     00000000 
00007faa l       .debug_loc     00000000 
00007fe9 l       .debug_loc     00000000 
0000801a l       .debug_loc     00000000 
00008035 l       .debug_loc     00000000 
00008051 l       .debug_loc     00000000 
00008075 l       .debug_loc     00000000 
0000809c l       .debug_loc     00000000 
000080be l       .debug_loc     00000000 
000080e0 l       .debug_loc     00000000 
00008102 l       .debug_loc     00000000 
0000811e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006585 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b98 l       .debug_ranges  00000000 
00000321 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002c5 l       .debug_str     00000000 
000002cf l       .debug_str     00000000 
000002da l       .debug_str     00000000 
000002e5 l       .debug_str     00000000 
000002f5 l       .debug_str     00000000 
00000304 l       .debug_str     00000000 
00000313 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000045a l       .debug_str     00000000 
000003ad l       .debug_str     00000000 
000003ca l       .debug_str     00000000 
000003e8 l       .debug_str     00000000 
00000404 l       .debug_str     00000000 
0000041d l       .debug_str     00000000 
00000436 l       .debug_str     00000000 
000004b7 l       .debug_str     00000000 
00000474 l       .debug_str     00000000 
0000048d l       .debug_str     00000000 
000004a2 l       .debug_str     00000000 
000004f6 l       .debug_str     00000000 
000004ca l       .debug_str     00000000 
000004e0 l       .debug_str     00000000 
00006610 l       .debug_str     00000000 
000065a6 l       .debug_str     00000000 
000065c0 l       .debug_str     00000000 
000065d7 l       .debug_str     00000000 
000065ee l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00006627 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00006331 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000633b l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00006639 l       .debug_str     00000000 
000002a6 l       .debug_str     00000000 
00006646 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
000002af l       .debug_str     00000000 
000002a2 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
0000664b l       .debug_str     00000000 
0000665a l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00006662 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00006675 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
0000631d l       .debug_str     00000000 
0000678a l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00000a38 l       .debug_ranges  00000000 
00000a50 l       .debug_ranges  00000000 
00006685 l       .debug_str     00000000 
00006692 l       .debug_str     00000000 
00006697 l       .debug_str     00000000 
000066a4 l       .debug_str     00000000 
000066b2 l       .debug_str     00000000 
000066aa l       .debug_str     00000000 
00000f79 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000066b8 l       .debug_str     00000000 
000066c0 l       .debug_str     00000000 
000066c9 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
000067a2 l       .debug_str     00000000 
000067c6 l       .debug_str     00000000 
00000a68 l       .debug_ranges  00000000 
00000a80 l       .debug_ranges  00000000 
00001224 l       .debug_str     00000000 
000067b9 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00000af8 l       .debug_ranges  00000000 
000066d6 l       .debug_str     00000000 
000066e5 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
0000159b l       .debug_str     00000000 
000066ec l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
00000e0b l       .debug_str     00000000 
000061f0 l       .debug_str     00000000 
000067ca l       .debug_str     00000000 
00000a98 l       .debug_ranges  00000000 
00000ab0 l       .debug_ranges  00000000 
00000ac8 l       .debug_ranges  00000000 
00000ae0 l       .debug_ranges  00000000 
00000ec7 l       .debug_str     00000000 
0000654f l       .debug_str     00000000 
000066fc l       .debug_str     00000000 
00006709 l       .debug_str     00000000 
0000670e l       .debug_str     00000000 
00006714 l       .debug_str     00000000 
00006726 l       .debug_str     00000000 
00006721 l       .debug_str     00000000 
0000172c l       .debug_str     00000000 
00000f92 l       .debug_str     00000000 
00007ff2 l       .debug_str     00000000 
000021cd l       .debug_str     00000000 
00006765 l       .debug_str     00000000 
000004c4 l       .debug_str     00000000 
00007197 l       .debug_str     00000000 
00006773 l       .debug_str     00000000 
000068fb l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00001664 l       .debug_str     00000000 
00000f80 l       .debug_str     00000000 
00000f86 l       .debug_str     00000000 
00000f8c l       .debug_str     00000000 
00000f2f l       .debug_str     00000000 
00000f4b l       .debug_str     00000000 
00000f60 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000672e l       .debug_str     00000000 
00006740 l       .debug_str     00000000 
0000661d l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
00006746 l       .debug_str     00000000 
0000675f l       .debug_str     00000000 
00000ee7 l       .debug_str     00000000 
0000676d l       .debug_str     00000000 
00006779 l       .debug_str     00000000 
00001716 l       .debug_str     00000000 
00000f16 l       .debug_str     00000000 
000067d2 l       .debug_str     00000000 
00001723 l       .debug_str     00000000 
00000b80 l       .debug_ranges  00000000 
00000b18 l       .debug_ranges  00000000 
00000b30 l       .debug_ranges  00000000 
00000b48 l       .debug_ranges  00000000 
00000b68 l       .debug_ranges  00000000 
00002ff5 l       .debug_str     00000000 
00001700 l       .debug_str     00000000 
00000e77 l       .debug_str     00000000 
00000e22 l       .debug_str     00000000 
00000e2c l       .debug_str     00000000 
00000e45 l       .debug_str     00000000 
00006032 l       .debug_str     00000000 
00000e51 l       .debug_str     00000000 
00000e57 l       .debug_str     00000000 
00000e5c l       .debug_str     00000000 
00000e6d l       .debug_str     00000000 
00000e72 l       .debug_str     00000000 
00000c20 l       .debug_frame   00000000 
d000c256 l       .text  00000000 
d000c3ae l       .text  00000000 
d000c430 l       .text  00000000 
d000c44c l       .text  00000000 
d000c484 l       .text  00000000 
d000c674 l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000c674 l       .text  00000000 
d000c674 l       .text  00000000 
d000c674 l       .text  00000000 
d000c676 l       .text  00000000 
d000c678 l       .text  00000000 
d000c67e l       .text  00000000 
d000c682 l       .text  00000000 
d000c686 l       .text  00000000 
d000c68a l       .text  00000000 
d000c68a l       .text  00000000 
d000c694 l       .text  00000000 
d000c696 l       .text  00000000 
d000c696 l       .text  00000000 
d000c698 l       .text  00000000 
d000c698 l       .text  00000000 
d000c69e l       .text  00000000 
d000c69e l       .text  00000000 
d000c6a8 l       .text  00000000 
d000c6aa l       .text  00000000 
d000c6aa l       .text  00000000 
d000c6be l       .text  00000000 
d000c6be l       .text  00000000 
d000c6c0 l       .text  00000000 
d000c6c0 l       .text  00000000 
d000c6ca l       .text  00000000 
d000c6cc l       .text  00000000 
d000c6cc l       .text  00000000 
d000c6e0 l       .text  00000000 
d000c6e0 l       .text  00000000 
d000c6e2 l       .text  00000000 
00000078 l     O .logs.fields   00000014 test_status_set.kLogFields.2
d000c6e2 l       .text  00000000 
d000c6ea l       .text  00000000 
d000c6ea l       .text  00000000 
d000c6f4 l       .text  00000000 
d000c6f6 l       .text  00000000 
d000c6f6 l       .text  00000000 
00000064 l     O .logs.fields   00000014 test_status_set.kLogFields
d000c6fe l       .text  00000000 
d000c706 l       .text  00000000 
d000c706 l       .text  00000000 
d000c710 l       .text  00000000 
d000c712 l       .text  00000000 
d000c712 l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
00008145 l       .debug_loc     00000000 
00008163 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006933 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000eb7 l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000003a1 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006b79 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000032c l       .debug_str     00000000 
00000341 l       .debug_str     00000000 
0000035a l       .debug_str     00000000 
0000036c l       .debug_str     00000000 
0000037d l       .debug_str     00000000 
0000038f l       .debug_str     00000000 
00006961 l       .debug_str     00000000 
00006988 l       .debug_str     00000000 
0000697a l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
0000631d l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00006331 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000ea0 l       .debug_str     00000000 
00000e8b l       .debug_str     00000000 
000069a0 l       .debug_str     00000000 
00000cc8 l       .debug_frame   00000000 
d000c71a l       .text  00000000 
00000000 l    df *ABS*  00000000 hart.c
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71e l       .text  00000000 
d000c71e l       .text  00000000 
d000c720 l       .text  00000000 
d000c720 l       .text  00000000 
00008176 l       .debug_loc     00000000 
00008191 l       .debug_loc     00000000 
000081b8 l       .debug_loc     00000000 
000081df l       .debug_loc     00000000 
000081fb l       .debug_loc     00000000 
00008228 l       .debug_loc     00000000 
0000824f l       .debug_loc     00000000 
00008276 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000069a6 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000bd0 l       .debug_ranges  00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000069c3 l       .debug_str     00000000 
000069d4 l       .debug_str     00000000 
000069de l       .debug_str     00000000 
000069e9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006a04 l       .debug_str     00000000 
00006a15 l       .debug_str     00000000 
00007606 l       .debug_str     00000000 
00002f76 l       .debug_str     00000000 
000069f6 l       .debug_str     00000000 
00005fb9 l       .debug_str     00000000 
000069a0 l       .debug_str     00000000 
0000365d l       .debug_str     00000000 
00000cf4 l       .debug_frame   00000000 
d000c720 l       .text  00000000 
00000000 l    df *ABS*  00000000 log.c
d000c720 l       .text  00000000 
d000c720 l       .text  00000000 
d000c720 l       .text  00000000 
d000c722 l       .text  00000000 
d000c728 l       .text  00000000 
d000c72a l       .text  00000000 
d000c738 l       .text  00000000 
d000c742 l       .text  00000000 
d000c748 l       .text  00000000 
d000c748 l       .text  00000000 
d000c74a l       .text  00000000 
d000c74e l       .text  00000000 
d000c74e l       .text  00000000 
d000c758 l       .text  00000000 
d000c758 l       .text  00000000 
d000c75a l       .text  00000000 
d000c75e l       .text  00000000 
d000c75e l       .text  00000000 
d000c760 l       .text  00000000 
d000c760 l       .text  00000000 
d000c762 l       .text  00000000 
d000c762 l       .text  00000000 
d000c766 l       .text  00000000 
d000c766 l       .text  00000000 
d000c76c l       .text  00000000 
d000c77a l       .text  00000000 
d000c77a l       .text  00000000 
e0002060 l     O .bss   00000002 base_log_internal_core.global_log_counter
d000c782 l       .text  00000000 
d000c78e l       .text  00000000 
d000c790 l       .text  00000000 
d000c79a l       .text  00000000 
d000c79a l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a8 l       .text  00000000 
d000c7aa l       .text  00000000 
d000c7ae l       .text  00000000 
d000c7ae l       .text  00000000 
d000c7b8 l       .text  00000000 
d000c7b8 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c2 l       .text  00000000 
d000c7c4 l       .text  00000000 
d000c7ca l       .text  00000000 
d000c7ca l       .text  00000000 
d000c7d4 l       .text  00000000 
d000c7d4 l       .text  00000000 
d000c7da l       .text  00000000 
d000c7da l       .text  00000000 
d000c7de l       .text  00000000 
d000c7de l       .text  00000000 
d000c7e0 l       .text  00000000 
d000c7e0 l       .text  00000000 
d000c7e2 l       .text  00000000 
d000c7e2 l       .text  00000000 
d000c7e4 l       .text  00000000 
d000c7e8 l       .text  00000000 
d000c7ec l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7f0 l       .text  00000000 
d000c7f0 l       .text  00000000 
d000c7f2 l       .text  00000000 
d000c7f2 l       .text  00000000 
d000c7f6 l       .text  00000000 
d000c7f6 l       .text  00000000 
00008292 l       .debug_loc     00000000 
000082ba l       .debug_loc     00000000 
000082d5 l       .debug_loc     00000000 
00008311 l       .debug_loc     00000000 
0000832d l       .debug_loc     00000000 
00008348 l       .debug_loc     00000000 
00008363 l       .debug_loc     00000000 
0000837e l       .debug_loc     00000000 
000083bc l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006a1a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000bf8 l       .debug_ranges  00000000 
00000ea0 l       .debug_str     00000000 
00006a36 l       .debug_str     00000000 
00006a84 l       .debug_str     00000000 
00006a88 l       .debug_str     00000000 
00006a96 l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00006a49 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00006a5c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006a63 l       .debug_str     00000000 
00006a6b l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00006a77 l       .debug_str     00000000 
0000631d l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00006331 l       .debug_str     00000000 
00000e8b l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
00006aa0 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006b79 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
000029ed l       .debug_str     00000000 
000029e3 l       .debug_str     00000000 
00000d54 l       .debug_frame   00000000 
d000c7c2 l       .text  00000000 
d000c7f6 l       .text  00000000 
00000000 l    df *ABS*  00000000 print.c
d000c7f6 l     F .text  00000004 base_dev_null
e0002064 l     O .bss   00000008 base_stdout
d000c7f6 l       .text  00000000 
d000c7f6 l       .text  00000000 
d000c7f6 l       .text  00000000 
d000c7f8 l       .text  00000000 
d000c7f8 l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fc l       .text  00000000 
d000c7fe l       .text  00000000 
d000c80c l       .text  00000000 
d000c814 l       .text  00000000 
d000c814 l       .text  00000000 
d000c81a l       .text  00000000 
d000c81a l       .text  00000000 
d000c81c l       .text  00000000 
d000c81c l       .text  00000000 
d000c81e l       .text  00000000 
d000c81e l       .text  00000000 
d000c822 l       .text  00000000 
d000c824 l       .text  00000000 
d000c826 l       .text  00000000 
d000c826 l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c834 l       .text  00000000 
d000c83a l       .text  00000000 
d000c83a l       .text  00000000 
d000c83c l       .text  00000000 
d000c83c l       .text  00000000 
d000c842 l       .text  00000000 
d000c844 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c846 l       .text  00000000 
d000c848 l       .text  00000000 
d000c862 l       .text  00000000 
d000c864 l       .text  00000000 
d000c866 l       .text  00000000 
d000c868 l       .text  00000000 
d000c86a l       .text  00000000 
d000c86c l       .text  00000000 
d000c86e l       .text  00000000 
d000c876 l       .text  00000000 
d000c876 l       .text  00000000 
d000c878 l       .text  00000000 
d000c878 l       .text  00000000 
d000c87c l       .text  00000000 
d000c880 l       .text  00000000 
d000c894 l       .text  00000000 
d000c894 l       .text  00000000 
d000c89e l       .text  00000000 
d000c8a2 l       .text  00000000 
d000c8a6 l       .text  00000000 
d000c8a8 l       .text  00000000 
d000c8aa l       .text  00000000 
d000c8aa l       .text  00000000 
d000c8ac l       .text  00000000 
d000c8ae l       .text  00000000 
d000c8b4 l       .text  00000000 
d000c8b4 l       .text  00000000 
d000c8b6 l       .text  00000000 
d000c8b6 l       .text  00000000 
d000c8ba l       .text  00000000 
d000c8ba l       .text  00000000 
d000c8c6 l       .text  00000000 
d000c8ca l       .text  00000000 
d000c8ca l       .text  00000000 
d000c8d6 l       .text  00000000 
d000c8d6 l       .text  00000000 
d000c8de l       .text  00000000 
d000c8de l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8f0 l       .text  00000000 
d000c8f0 l       .text  00000000 
d000c8f4 l       .text  00000000 
d000c8fc l       .text  00000000 
d000c900 l       .text  00000000 
d000c900 l       .text  00000000 
d000c904 l       .text  00000000 
d000c90a l       .text  00000000 
d000c90e l       .text  00000000 
d000c910 l       .text  00000000 
d000c914 l       .text  00000000 
d000c914 l       .text  00000000 
d000c918 l       .text  00000000 
d000c91e l       .text  00000000 
d000c91e l       .text  00000000 
d000c922 l       .text  00000000 
d000c936 l       .text  00000000 
d000c936 l       .text  00000000 
d000c938 l       .text  00000000 
d000c93e l       .text  00000000 
d000c942 l       .text  00000000 
d000c946 l       .text  00000000 
d000c946 l       .text  00000000 
d000c94e l       .text  00000000 
d000c950 l       .text  00000000 
d000c95e l       .text  00000000 
d000c95e l       .text  00000000 
d000c962 l       .text  00000000 
d000c96e l       .text  00000000 
d000c96e l       .text  00000000 
d000c972 l       .text  00000000 
d000c972 l       .text  00000000 
d000c980 l       .text  00000000 
d000c980 l       .text  00000000 
d000c982 l       .text  00000000 
d000c986 l       .text  00000000 
d000c986 l       .text  00000000 
d000c98a l       .text  00000000 
d000eee0 l     O .rodata        00000010 kDigitsLow
d000c99c l       .text  00000000 
d000c99c l       .text  00000000 
d000c9a4 l       .text  00000000 
d000c9ac l       .text  00000000 
d000c9ac l       .text  00000000 
d000c9b6 l       .text  00000000 
d000c9b6 l       .text  00000000 
d000c9ba l       .text  00000000 
d000c9ba l       .text  00000000 
d000c9c4 l       .text  00000000 
d000c9c4 l       .text  00000000 
d000c9cc l       .text  00000000 
d000c9cc l       .text  00000000 
d000c9d0 l       .text  00000000 
d000ef0d l     O .rodata        00000010 kDigitsHigh
d000c9da l       .text  00000000 
d000c9da l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e8 l       .text  00000000 
d000c9f2 l       .text  00000000 
d000c9f2 l       .text  00000000 
d000c9f6 l       .text  00000000 
d000ca00 l       .text  00000000 
d000ca00 l       .text  00000000 
d000ca08 l       .text  00000000 
d000ca08 l       .text  00000000 
d000ca0c l       .text  00000000 
d000ca16 l       .text  00000000 
d000ca16 l       .text  00000000 
d000ca20 l       .text  00000000 
d000ca24 l       .text  00000000 
d000ca28 l       .text  00000000 
d000ca28 l       .text  00000000 
d000ca34 l       .text  00000000 
d000ca34 l       .text  00000000 
d000ca38 l       .text  00000000 
d000ca42 l       .text  00000000 
d000ca46 l       .text  00000000 
d000ca46 l       .text  00000000 
d000ca48 l       .text  00000000 
d000ca48 l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca50 l       .text  00000000 
d000ca5a l       .text  00000000 
d000ca5a l       .text  00000000 
d000ca5e l       .text  00000000 
d000ca6a l       .text  00000000 
d000ca6a l       .text  00000000 
d000ca6e l       .text  00000000 
d000ca6e l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca86 l       .text  00000000 
d000ca86 l       .text  00000000 
d000ca8a l       .text  00000000 
d000ca8a l       .text  00000000 
d000cdba l     F .text  0000007e write_digits
d000caa0 l       .text  00000000 
d000caa0 l       .text  00000000 
d000caa6 l       .text  00000000 
d000caa6 l       .text  00000000 
d000cab0 l       .text  00000000 
d000cab0 l       .text  00000000 
d000cab2 l       .text  00000000 
d000cabc l       .text  00000000 
d000cabc l       .text  00000000 
d000cac6 l       .text  00000000 
d000cac6 l       .text  00000000 
d000cac8 l       .text  00000000 
d000cac8 l       .text  00000000 
d000caca l       .text  00000000 
d000caca l       .text  00000000 
d000cace l       .text  00000000 
d000cace l       .text  00000000 
d000cad2 l       .text  00000000 
d000cad4 l       .text  00000000 
d000cad8 l       .text  00000000 
d000cad8 l       .text  00000000 
d000cadc l       .text  00000000 
d000cadc l       .text  00000000 
d000cae8 l       .text  00000000 
d000cae8 l       .text  00000000 
d000caea l       .text  00000000 
d000caea l       .text  00000000 
d000caec l       .text  00000000 
d000caec l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf8 l       .text  00000000 
d000caf8 l       .text  00000000 
d000cb06 l       .text  00000000 
d000cb06 l       .text  00000000 
d000cb08 l       .text  00000000 
d000cb16 l       .text  00000000 
d000cb16 l       .text  00000000 
d000cb1a l       .text  00000000 
d000cb1a l       .text  00000000 
d000cb1e l       .text  00000000 
d000cb1e l       .text  00000000 
d000cb2c l       .text  00000000 
d000cb2c l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb38 l       .text  00000000 
d000cb38 l       .text  00000000 
d000cb3a l       .text  00000000 
d000cb3a l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb50 l       .text  00000000 
d000cb50 l       .text  00000000 
d000cb52 l       .text  00000000 
d000cb60 l       .text  00000000 
d000cb60 l       .text  00000000 
d000cb62 l       .text  00000000 
d000cb62 l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb6c l       .text  00000000 
d000cb70 l       .text  00000000 
d000cb72 l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb80 l       .text  00000000 
d000cb8a l       .text  00000000 
d000cb8a l       .text  00000000 
d000cb8e l       .text  00000000 
d000cb9a l       .text  00000000 
d000cb9a l       .text  00000000 
d000cb9e l       .text  00000000 
d000cb9e l       .text  00000000 
d000cba8 l       .text  00000000 
d000cba8 l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb4 l       .text  00000000 
d000cbbc l       .text  00000000 
d000cbbc l       .text  00000000 
d000cbc6 l       .text  00000000 
d000cbc6 l       .text  00000000 
d000cbd0 l       .text  00000000 
d000cbd0 l       .text  00000000 
d000cbd4 l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbe6 l       .text  00000000 
d000cbe8 l       .text  00000000 
d000cbe8 l       .text  00000000 
d000cbec l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbfe l       .text  00000000 
d000cbfe l       .text  00000000 
d000cc02 l       .text  00000000 
d000cc0a l       .text  00000000 
d000cc0a l       .text  00000000 
d000ccd4 l     F .text  000000e6 hex_dump
d000cc14 l       .text  00000000 
d000cc16 l       .text  00000000 
d000ef1d l     O .rodata        0000000f kUnknownSpec
d000cc16 l       .text  00000000 
d000cc20 l       .text  00000000 
d000cc20 l       .text  00000000 
d000cc24 l       .text  00000000 
d000cc26 l       .text  00000000 
d000cc26 l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc30 l       .text  00000000 
d000cc30 l       .text  00000000 
d000cc34 l       .text  00000000 
d000cc40 l       .text  00000000 
d000cc40 l       .text  00000000 
d000cc42 l       .text  00000000 
d000cc42 l       .text  00000000 
d000cc56 l       .text  00000000 
d000cc56 l       .text  00000000 
d000cc5a l       .text  00000000 
d000cc68 l       .text  00000000 
d000cc68 l       .text  00000000 
d000cc6c l       .text  00000000 
d000cc6c l       .text  00000000 
d000cc72 l       .text  00000000 
d000cc72 l       .text  00000000 
d000cc74 l       .text  00000000 
d000cc74 l       .text  00000000 
d000cc76 l       .text  00000000 
d000cc76 l       .text  00000000 
d000cc7e l       .text  00000000 
d000cc80 l       .text  00000000 
d000cc82 l       .text  00000000 
d000cc88 l       .text  00000000 
d000cc88 l       .text  00000000 
d000cc94 l       .text  00000000 
d000eef0 l     O .rodata        00000011 kErrorNul
d000cc94 l       .text  00000000 
d000cc9e l       .text  00000000 
d000cc9e l       .text  00000000 
d000cca2 l       .text  00000000 
d000cca6 l       .text  00000000 
d000cca8 l       .text  00000000 
d000cca8 l       .text  00000000 
d000ccb8 l       .text  00000000 
d000ccbc l       .text  00000000 
d000ccc8 l       .text  00000000 
d000ef01 l     O .rodata        0000000c kErrorTooWide
d000ccc8 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd6 l       .text  00000000 
d000ccee l       .text  00000000 
d000ccf0 l       .text  00000000 
d000ccf2 l       .text  00000000 
d000ccf4 l       .text  00000000 
d000ccf6 l       .text  00000000 
d000ccfa l       .text  00000000 
d000ccfa l       .text  00000000 
d000ccfe l       .text  00000000 
d000cd02 l       .text  00000000 
d000cd02 l       .text  00000000 
d000cd0e l       .text  00000000 
d000cd0e l       .text  00000000 
d000cd10 l       .text  00000000 
d000cd12 l       .text  00000000 
d000cd18 l       .text  00000000 
d000cd18 l       .text  00000000 
d000cd1c l       .text  00000000 
d000cd20 l       .text  00000000 
d000cd20 l       .text  00000000 
d000cd28 l       .text  00000000 
d000cd28 l       .text  00000000 
d000cd2a l       .text  00000000 
d000cd2c l       .text  00000000 
d000cd2c l       .text  00000000 
d000cd2e l       .text  00000000 
d000cd2e l       .text  00000000 
d000cd34 l       .text  00000000 
d000cd34 l       .text  00000000 
d000cd36 l       .text  00000000 
d000cd36 l       .text  00000000 
d000cd3a l       .text  00000000 
d000cd3e l       .text  00000000 
d000cd44 l       .text  00000000 
d000cd44 l       .text  00000000 
d000cd4a l       .text  00000000 
d000cd52 l       .text  00000000 
d000cd52 l       .text  00000000 
d000cd54 l       .text  00000000 
d000cd58 l       .text  00000000 
d000cd5c l       .text  00000000 
d000cd62 l       .text  00000000 
d000cd66 l       .text  00000000 
d000cd6a l       .text  00000000 
d000cd6c l       .text  00000000 
d000cd72 l       .text  00000000 
d000cd74 l       .text  00000000 
d000cd7c l       .text  00000000 
d000cd82 l       .text  00000000 
d000cd86 l       .text  00000000 
d000cd86 l       .text  00000000 
d000cd88 l       .text  00000000 
d000cd8a l       .text  00000000 
d000cd8a l       .text  00000000 
d000cd8c l       .text  00000000 
d000cd8e l       .text  00000000 
d000cd92 l       .text  00000000 
d000cd92 l       .text  00000000 
d000cd94 l       .text  00000000 
d000cd9a l       .text  00000000 
d000cd9a l       .text  00000000 
d000cd9c l       .text  00000000 
d000cda4 l       .text  00000000 
d000cda6 l       .text  00000000 
d000cdaa l       .text  00000000 
d000cdac l       .text  00000000 
d000cdae l       .text  00000000 
d000cdb0 l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdbc l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdc0 l       .text  00000000 
d000cdc0 l       .text  00000000 
d000cdc2 l       .text  00000000 
d000cdc4 l       .text  00000000 
d000cdc8 l       .text  00000000 
d000cdc8 l       .text  00000000 
d000cdca l       .text  00000000 
d000cdca l       .text  00000000 
d000cdd6 l       .text  00000000 
d000cdd6 l       .text  00000000 
d000cdd8 l       .text  00000000 
d000cddc l       .text  00000000 
d000cde4 l       .text  00000000 
d000cde4 l       .text  00000000 
d000cde6 l       .text  00000000 
d000cdea l       .text  00000000 
d000cdee l       .text  00000000 
d000cdee l       .text  00000000 
d000cdf0 l       .text  00000000 
d000cdf0 l       .text  00000000 
d000cdf4 l       .text  00000000 
d000cdfa l       .text  00000000 
d000cdfa l       .text  00000000 
d000cdfc l       .text  00000000 
d000cdfe l       .text  00000000 
d000ce00 l       .text  00000000 
d000ce04 l       .text  00000000 
d000ce08 l       .text  00000000 
d000ce0c l       .text  00000000 
d000ce0c l       .text  00000000 
d000ce16 l       .text  00000000 
d000ce1a l       .text  00000000 
d000ce1c l       .text  00000000 
d000ce20 l       .text  00000000 
d000ce24 l       .text  00000000 
d000ce26 l       .text  00000000 
d000ce28 l       .text  00000000 
d000ce2a l       .text  00000000 
d000ce2a l       .text  00000000 
d000ce30 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce38 l       .text  00000000 
d000ce38 l       .text  00000000 
000083d9 l       .debug_loc     00000000 
00008405 l       .debug_loc     00000000 
00008420 l       .debug_loc     00000000 
00008446 l       .debug_loc     00000000 
00008472 l       .debug_loc     00000000 
000084a3 l       .debug_loc     00000000 
000084d4 l       .debug_loc     00000000 
00008510 l       .debug_loc     00000000 
00008541 l       .debug_loc     00000000 
00008568 l       .debug_loc     00000000 
00008599 l       .debug_loc     00000000 
000085b4 l       .debug_loc     00000000 
000085d0 l       .debug_loc     00000000 
000085eb l       .debug_loc     00000000 
00008611 l       .debug_loc     00000000 
00008637 l       .debug_loc     00000000 
00008673 l       .debug_loc     00000000 
0000877e l       .debug_loc     00000000 
000088d8 l       .debug_loc     00000000 
000089d8 l       .debug_loc     00000000 
00008ae3 l       .debug_loc     00000000 
00008b03 l       .debug_loc     00000000 
00008b29 l       .debug_loc     00000000 
00008b59 l       .debug_loc     00000000 
00008d91 l       .debug_loc     00000000 
00008dad l       .debug_loc     00000000 
00008dc8 l       .debug_loc     00000000 
00008f3d l       .debug_loc     00000000 
0000908d l       .debug_loc     00000000 
000091a1 l       .debug_loc     00000000 
000091c7 l       .debug_loc     00000000 
000091e2 l       .debug_loc     00000000 
000091fd l       .debug_loc     00000000 
00009218 l       .debug_loc     00000000 
00009233 l       .debug_loc     00000000 
0000924e l       .debug_loc     00000000 
0000926a l       .debug_loc     00000000 
00009285 l       .debug_loc     00000000 
000092a0 l       .debug_loc     00000000 
000092bb l       .debug_loc     00000000 
000092d6 l       .debug_loc     00000000 
00009308 l       .debug_loc     00000000 
0000933b l       .debug_loc     00000000 
00009356 l       .debug_loc     00000000 
000093a9 l       .debug_loc     00000000 
000093dc l       .debug_loc     00000000 
000093f7 l       .debug_loc     00000000 
00009412 l       .debug_loc     00000000 
0000942d l       .debug_loc     00000000 
00009448 l       .debug_loc     00000000 
00009463 l       .debug_loc     00000000 
0000947e l       .debug_loc     00000000 
00009499 l       .debug_loc     00000000 
000094b4 l       .debug_loc     00000000 
000094cf l       .debug_loc     00000000 
000094ea l       .debug_loc     00000000 
00009505 l       .debug_loc     00000000 
00009521 l       .debug_loc     00000000 
00009540 l       .debug_loc     00000000 
0000955b l       .debug_loc     00000000 
0000958c l       .debug_loc     00000000 
000095b2 l       .debug_loc     00000000 
000095e3 l       .debug_loc     00000000 
00009614 l       .debug_loc     00000000 
0000962f l       .debug_loc     00000000 
0000964a l       .debug_loc     00000000 
00009665 l       .debug_loc     00000000 
00009696 l       .debug_loc     00000000 
000096b1 l       .debug_loc     00000000 
000096cc l       .debug_loc     00000000 
000096e8 l       .debug_loc     00000000 
0000970e l       .debug_loc     00000000 
0000973f l       .debug_loc     00000000 
0000975a l       .debug_loc     00000000 
00009775 l       .debug_loc     00000000 
0000979b l       .debug_loc     00000000 
000097c1 l       .debug_loc     00000000 
000097dc l       .debug_loc     00000000 
000097f7 l       .debug_loc     00000000 
00009812 l       .debug_loc     00000000 
0000982d l       .debug_loc     00000000 
0000984c l       .debug_loc     00000000 
00009867 l       .debug_loc     00000000 
00009882 l       .debug_loc     00000000 
0000989e l       .debug_loc     00000000 
000098b9 l       .debug_loc     00000000 
000098d4 l       .debug_loc     00000000 
000098f3 l       .debug_loc     00000000 
00009919 l       .debug_loc     00000000 
0000994a l       .debug_loc     00000000 
000099a2 l       .debug_loc     00000000 
000099ec l       .debug_loc     00000000 
00009a3e l       .debug_loc     00000000 
00009a7b l       .debug_loc     00000000 
00009ab7 l       .debug_loc     00000000 
00009b21 l       .debug_loc     00000000 
00009b6a l       .debug_loc     00000000 
00009bd4 l       .debug_loc     00000000 
00009bfa l       .debug_loc     00000000 
00009c15 l       .debug_loc     00000000 
00009c30 l       .debug_loc     00000000 
00009c57 l       .debug_loc     00000000 
00009c9f l       .debug_loc     00000000 
00009cc5 l       .debug_loc     00000000 
00009ceb l       .debug_loc     00000000 
00009d11 l       .debug_loc     00000000 
00009d2c l       .debug_loc     00000000 
00009d5c l       .debug_loc     00000000 
00009d82 l       .debug_loc     00000000 
00009db4 l       .debug_loc     00000000 
00009df2 l       .debug_loc     00000000 
00009e21 l       .debug_loc     00000000 
00009e3c l       .debug_loc     00000000 
00009e6f l       .debug_loc     00000000 
00009e8a l       .debug_loc     00000000 
00009ec6 l       .debug_loc     00000000 
00009eec l       .debug_loc     00000000 
00009f07 l       .debug_loc     00000000 
00009f22 l       .debug_loc     00000000 
00009f3d l       .debug_loc     00000000 
00009f93 l       .debug_loc     00000000 
00009fc2 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006aab l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000d48 l       .debug_ranges  00000000 
00006ac9 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00006ae8 l       .debug_str     00000000 
00006b00 l       .debug_str     00000000 
00006af4 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00006df2 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006b0e l       .debug_str     00000000 
00006b18 l       .debug_str     00000000 
00006e4a l       .debug_str     00000000 
00006b26 l       .debug_str     00000000 
000052a0 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000004c4 l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00002a4a l       .debug_str     00000000 
00006ecc l       .debug_str     00000000 
00001281 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00006edc l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006b30 l       .debug_str     00000000 
00006b3c l       .debug_str     00000000 
00006b49 l       .debug_str     00000000 
00006b98 l       .debug_str     00000000 
00006b87 l       .debug_str     00000000 
00006b60 l       .debug_str     00000000 
00006b6f l       .debug_str     00000000 
00006b7e l       .debug_str     00000000 
00006bab l       .debug_str     00000000 
00000321 l       .debug_str     00000000 
000002be l       .debug_str     00000000 
000002c5 l       .debug_str     00000000 
000002cf l       .debug_str     00000000 
000002da l       .debug_str     00000000 
000002e5 l       .debug_str     00000000 
000002f5 l       .debug_str     00000000 
00000304 l       .debug_str     00000000 
00000313 l       .debug_str     00000000 
00006bb6 l       .debug_str     00000000 
00006bbf l       .debug_str     00000000 
00006bca l       .debug_str     00000000 
00006bd2 l       .debug_str     00000000 
00006bde l       .debug_str     00000000 
00006bea l       .debug_str     00000000 
00006bf7 l       .debug_str     00000000 
00006c07 l       .debug_str     00000000 
00006c18 l       .debug_str     00000000 
00006c25 l       .debug_str     00000000 
00006c2e l       .debug_str     00000000 
00006c38 l       .debug_str     00000000 
00006c42 l       .debug_str     00000000 
00006c4d l       .debug_str     00000000 
00006c57 l       .debug_str     00000000 
00006c62 l       .debug_str     00000000 
0000326e l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00006c79 l       .debug_str     00000000 
00006c70 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
00000294 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00006c8f l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00006c84 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
00006da0 l       .debug_str     00000000 
00006ca3 l       .debug_str     00000000 
00006dae l       .debug_str     00000000 
00006c74 l       .debug_str     00000000 
00006dbf l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00006cb3 l       .debug_str     00000000 
00006a77 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
000029ed l       .debug_str     00000000 
000029e3 l       .debug_str     00000000 
00006a6b l       .debug_str     00000000 
00000c10 l       .debug_ranges  00000000 
00006dcd l       .debug_str     00000000 
00006e57 l       .debug_str     00000000 
00006e92 l       .debug_str     00000000 
00000cf0 l       .debug_ranges  00000000 
00006d41 l       .debug_str     00000000 
00000c28 l       .debug_ranges  00000000 
00000c50 l       .debug_ranges  00000000 
00000c70 l       .debug_ranges  00000000 
00000c88 l       .debug_ranges  00000000 
00000cc0 l       .debug_ranges  00000000 
00000ca8 l       .debug_ranges  00000000 
00000cd8 l       .debug_ranges  00000000 
00006ccd l       .debug_str     00000000 
00006ce3 l       .debug_str     00000000 
00003256 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00006cec l       .debug_str     00000000 
00006d22 l       .debug_str     00000000 
00006d0f l       .debug_str     00000000 
00006cf4 l       .debug_str     00000000 
00007ff2 l       .debug_str     00000000 
00006d05 l       .debug_str     00000000 
00006d2b l       .debug_str     00000000 
00006d3d l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
00003573 l       .debug_str     00000000 
0000357f l       .debug_str     00000000 
00006d46 l       .debug_str     00000000 
00006d53 l       .debug_str     00000000 
00006d5b l       .debug_str     00000000 
00007606 l       .debug_str     00000000 
00006d5f l       .debug_str     00000000 
00007616 l       .debug_str     00000000 
00007070 l       .debug_str     00000000 
00006d63 l       .debug_str     00000000 
00006e41 l       .debug_str     00000000 
00007ebd l       .debug_str     00000000 
00006ec1 l       .debug_str     00000000 
00006eb8 l       .debug_str     00000000 
00006ed3 l       .debug_str     00000000 
000064d4 l       .debug_str     00000000 
00006ddb l       .debug_str     00000000 
00006de9 l       .debug_str     00000000 
00006e61 l       .debug_str     00000000 
000014f8 l       .debug_str     00000000 
00006df7 l       .debug_str     00000000 
00006d72 l       .debug_str     00000000 
00006b94 l       .debug_str     00000000 
00006e04 l       .debug_str     00000000 
00006e2e l       .debug_str     00000000 
00006e7e l       .debug_str     00000000 
00006b79 l       .debug_str     00000000 
00000d30 l       .debug_ranges  00000000 
00006e71 l       .debug_str     00000000 
00006e8d l       .debug_str     00000000 
00006ea0 l       .debug_str     00000000 
00001835 l       .debug_str     00000000 
00000d10 l       .debug_ranges  00000000 
00006e6a l       .debug_str     00000000 
00006eaf l       .debug_str     00000000 
0000669f l       .debug_str     00000000 
00006d84 l       .debug_str     00000000 
00006d98 l       .debug_str     00000000 
00006e11 l       .debug_str     00000000 
00006e20 l       .debug_str     00000000 
00005f06 l       .debug_str     00000000 
00000d98 l       .debug_frame   00000000 
d000c7fa l       .text  00000000 
d000c82c l       .text  00000000 
d000c846 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000cdba l       .text  00000000 
d000ce38 l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000ce38 l       .text  00000000 
d000ce38 l       .text  00000000 
d000ce38 l       .text  00000000 
d000ce38 l       .text  00000000 
d000ce3c l       .text  00000000 
d000ce44 l       .text  00000000 
d000ce44 l       .text  00000000 
d000ce48 l       .text  00000000 
d000ce48 l       .text  00000000 
d000ce54 l       .text  00000000 
d000ce56 l       .text  00000000 
d000ce56 l       .text  00000000 
d000ce5a l       .text  00000000 
d000ce66 l       .text  00000000 
d000ce68 l       .text  00000000 
d000ce6c l       .text  00000000 
d000ce6e l       .text  00000000 
d000ce6e l       .text  00000000 
d000ce72 l       .text  00000000 
d000ce72 l       .text  00000000 
d000ce76 l       .text  00000000 
d000ce76 l       .text  00000000 
d000ce78 l       .text  00000000 
d000ce78 l       .text  00000000 
d000ce7c l       .text  00000000 
d000ce7c l       .text  00000000 
d000ce7e l       .text  00000000 
d000ce82 l       .text  00000000 
d000ce82 l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce8a l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce94 l       .text  00000000 
d000ce96 l       .text  00000000 
d000ce96 l       .text  00000000 
d000ce9c l       .text  00000000 
d000ce9c l       .text  00000000 
d000cea2 l       .text  00000000 
d000cea2 l       .text  00000000 
d000cea4 l       .text  00000000 
d000cea4 l       .text  00000000 
d000ceaa l       .text  00000000 
d000ceaa l       .text  00000000 
00009fdd l       .debug_loc     00000000 
00009ff8 l       .debug_loc     00000000 
0000a029 l       .debug_loc     00000000 
0000a04f l       .debug_loc     00000000 
0000a075 l       .debug_loc     00000000 
0000a090 l       .debug_loc     00000000 
0000a0b2 l       .debug_loc     00000000 
0000a0d9 l       .debug_loc     00000000 
0000a100 l       .debug_loc     00000000 
0000a124 l       .debug_loc     00000000 
0000a155 l       .debug_loc     00000000 
0000a170 l       .debug_loc     00000000 
0000a1a1 l       .debug_loc     00000000 
0000a1fb l       .debug_loc     00000000 
0000a237 l       .debug_loc     00000000 
0000a25b l       .debug_loc     00000000 
0000a280 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006ee2 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000df8 l       .debug_ranges  00000000 
00006efe l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006f0e l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000703c l       .debug_str     00000000 
00006f1b l       .debug_str     00000000 
00006f1f l       .debug_str     00000000 
00006f2a l       .debug_str     00000000 
00006f33 l       .debug_str     00000000 
00006f44 l       .debug_str     00000000 
00006f56 l       .debug_str     00000000 
00006f60 l       .debug_str     00000000 
00006f6f l       .debug_str     00000000 
00006f81 l       .debug_str     00000000 
00006f94 l       .debug_str     00000000 
00006fa8 l       .debug_str     00000000 
00006fb1 l       .debug_str     00000000 
00006fbd l       .debug_str     00000000 
00006fcc l       .debug_str     00000000 
00006fd6 l       .debug_str     00000000 
00006fe3 l       .debug_str     00000000 
00006fed l       .debug_str     00000000 
00006ffe l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000326e l       .debug_str     00000000 
0000704d l       .debug_str     00000000 
0000705b l       .debug_str     00000000 
00007064 l       .debug_str     00000000 
00007167 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
00007074 l       .debug_str     00000000 
0000287b l       .debug_str     00000000 
00007082 l       .debug_str     00000000 
00006d5f l       .debug_str     00000000 
00000de0 l       .debug_ranges  00000000 
00007069 l       .debug_str     00000000 
00004c9f l       .debug_str     00000000 
00003573 l       .debug_str     00000000 
0000357f l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00006d63 l       .debug_str     00000000 
0000708c l       .debug_str     00000000 
00007070 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00000f8c l       .debug_frame   00000000 
d000ceaa l       .text  00000000 
00000000 l    df *ABS*  00000000 rom_epmp.c
d000ceaa l       .text  00000000 
d000ceaa l       .text  00000000 
d000ceaa l       .text  00000000 
d000ceac l       .text  00000000 
d000ceac l       .text  00000000 
d000ceb2 l       .text  00000000 
d000ceb2 l       .text  00000000 
d000ceb2 l       .text  00000000 
d000ceb4 l       .text  00000000 
d000ceb4 l       .text  00000000 
d000cebc l       .text  00000000 
d000cebc l       .text  00000000 
d000cec0 l       .text  00000000 
d000cec0 l       .text  00000000 
d000cec4 l       .text  00000000 
d000cec8 l       .text  00000000 
d000ced0 l       .text  00000000 
d000ced4 l       .text  00000000 
d000cee2 l       .text  00000000 
d000ceea l       .text  00000000 
d000ceee l       .text  00000000 
d000cefc l       .text  00000000 
d000cf04 l       .text  00000000 
d000cf12 l       .text  00000000 
d000cf1a l       .text  00000000 
d000cf1e l       .text  00000000 
d000cf2a l       .text  00000000 
d000cf2c l       .text  00000000 
d000cf32 l       .text  00000000 
d000cf3a l       .text  00000000 
d000cf3e l       .text  00000000 
d000cf4a l       .text  00000000 
d000cf4c l       .text  00000000 
d000cf50 l       .text  00000000 
d000cf58 l       .text  00000000 
d000cf64 l       .text  00000000 
d000cf64 l       .text  00000000 
d000cf6c l       .text  00000000 
d000cf6e l       .text  00000000 
d000cf70 l       .text  00000000 
d000cf78 l       .text  00000000 
d000cf7a l       .text  00000000 
d000cf7c l       .text  00000000 
d000cf7c l       .text  00000000 
d000cf7e l       .text  00000000 
d000cf84 l       .text  00000000 
d000cf84 l       .text  00000000 
d000cf8e l       .text  00000000 
d000cf8e l       .text  00000000 
d000cf90 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cf9a l       .text  00000000 
d000cf9a l       .text  00000000 
d000cfa2 l       .text  00000000 
d000cfa2 l       .text  00000000 
d000cfa8 l       .text  00000000 
d000cfa8 l       .text  00000000 
d000cfae l       .text  00000000 
d000cfae l       .text  00000000 
d000cfb4 l       .text  00000000 
d000cfb4 l       .text  00000000 
d000cfba l       .text  00000000 
d000cfba l       .text  00000000 
d000cfbe l       .text  00000000 
d000cfbe l       .text  00000000 
d000cfc2 l       .text  00000000 
d000cfc6 l       .text  00000000 
d000cfc6 l       .text  00000000 
d000cfc8 l       .text  00000000 
d000cfc8 l       .text  00000000 
d000cfcc l       .text  00000000 
d000cfcc l       .text  00000000 
d000cfd4 l       .text  00000000 
d000cfd6 l       .text  00000000 
d000cfde l       .text  00000000 
d000cfde l       .text  00000000 
d000cfe4 l       .text  00000000 
d000cfe4 l       .text  00000000 
d000cfe6 l       .text  00000000 
d000cfe6 l       .text  00000000 
d000cfe8 l       .text  00000000 
d000cfe8 l       .text  00000000 
d000cfec l       .text  00000000 
d000cff6 l       .text  00000000 
d000cff6 l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000d000 l       .text  00000000 
d000d000 l       .text  00000000 
d000d008 l       .text  00000000 
d000d00a l       .text  00000000 
d000d00a l       .text  00000000 
d000d00c l       .text  00000000 
d000d00c l       .text  00000000 
d000d012 l       .text  00000000 
d000d012 l       .text  00000000 
d000d016 l       .text  00000000 
d000d016 l       .text  00000000 
d000d01a l       .text  00000000 
d000d022 l       .text  00000000 
d000d026 l       .text  00000000 
d000d02a l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d032 l       .text  00000000 
d000d032 l       .text  00000000 
d000d034 l       .text  00000000 
d000d034 l       .text  00000000 
d000d036 l       .text  00000000 
d000d036 l       .text  00000000 
d000d038 l       .text  00000000 
d000d038 l       .text  00000000 
d000d040 l       .text  00000000 
d000d046 l       .text  00000000 
d000d046 l       .text  00000000 
d000d04a l       .text  00000000 
d000d04a l       .text  00000000 
d000d052 l       .text  00000000 
d000d05a l       .text  00000000 
d000d05e l       .text  00000000 
d000d060 l       .text  00000000 
d000d060 l       .text  00000000 
d000d060 l       .text  00000000 
d000d060 l       .text  00000000 
d000d060 l       .text  00000000 
d000d064 l       .text  00000000 
d000d06e l       .text  00000000 
d000d072 l       .text  00000000 
d000d072 l       .text  00000000 
d000d074 l       .text  00000000 
d000d074 l       .text  00000000 
d000d07c l       .text  00000000 
d000d07c l       .text  00000000 
d000d080 l       .text  00000000 
d000d080 l       .text  00000000 
d000d084 l       .text  00000000 
d000d088 l       .text  00000000 
d000d090 l       .text  00000000 
d000d094 l       .text  00000000 
d000d0a2 l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0ae l       .text  00000000 
d000d0bc l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0d2 l       .text  00000000 
d000d0da l       .text  00000000 
d000d0de l       .text  00000000 
d000d0ea l       .text  00000000 
d000d0ec l       .text  00000000 
d000d0f0 l       .text  00000000 
d000d0f2 l       .text  00000000 
d000d0fa l       .text  00000000 
d000d0fe l       .text  00000000 
d000d10a l       .text  00000000 
d000d10c l       .text  00000000 
d000d110 l       .text  00000000 
d000d110 l       .text  00000000 
d000d114 l       .text  00000000 
d000d116 l       .text  00000000 
d000d116 l       .text  00000000 
d000d11e l       .text  00000000 
d000d11e l       .text  00000000 
0000a2a2 l       .debug_loc     00000000 
0000a2d3 l       .debug_loc     00000000 
0000a2f9 l       .debug_loc     00000000 
0000a355 l       .debug_loc     00000000 
0000a3b1 l       .debug_loc     00000000 
0000a3ff l       .debug_loc     00000000 
0000a437 l       .debug_loc     00000000 
0000a493 l       .debug_loc     00000000 
0000a4bf l       .debug_loc     00000000 
0000a4eb l       .debug_loc     00000000 
0000a50f l       .debug_loc     00000000 
0000a545 l       .debug_loc     00000000 
0000a569 l       .debug_loc     00000000 
0000a58d l       .debug_loc     00000000 
0000a5c3 l       .debug_loc     00000000 
0000a5e7 l       .debug_loc     00000000 
0000a627 l       .debug_loc     00000000 
0000a64b l       .debug_loc     00000000 
0000a669 l       .debug_loc     00000000 
0000a685 l       .debug_loc     00000000 
0000a6a9 l       .debug_loc     00000000 
0000a6cd l       .debug_loc     00000000 
0000a6f6 l       .debug_loc     00000000 
0000a71a l       .debug_loc     00000000 
0000a737 l       .debug_loc     00000000 
0000a76d l       .debug_loc     00000000 
0000a791 l       .debug_loc     00000000 
0000a7b5 l       .debug_loc     00000000 
0000a7d5 l       .debug_loc     00000000 
0000a801 l       .debug_loc     00000000 
0000a825 l       .debug_loc     00000000 
0000a852 l       .debug_loc     00000000 
0000a87f l       .debug_loc     00000000 
0000a89a l       .debug_loc     00000000 
0000a8be l       .debug_loc     00000000 
0000a8ef l       .debug_loc     00000000 
0000a915 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007093 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000e40 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007152 l       .debug_str     00000000 
000070bc l       .debug_str     00000000 
000070ce l       .debug_str     00000000 
000070e6 l       .debug_str     00000000 
000070fe l       .debug_str     00000000 
00007117 l       .debug_str     00000000 
00007132 l       .debug_str     00000000 
00007192 l       .debug_str     00000000 
0000715c l       .debug_str     00000000 
00007169 l       .debug_str     00000000 
00007176 l       .debug_str     00000000 
00007183 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000719c l       .debug_str     00000000 
00001e70 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00007157 l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001539 l       .debug_str     00000000 
0000152d l       .debug_str     00000000 
00007606 l       .debug_str     00000000 
00007616 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
000071b5 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
000071c1 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000071dc l       .debug_str     00000000 
0000110a l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
000010da l       .debug_str     00000000 
000071f5 l       .debug_str     00000000 
000071fc l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
0000216f l       .debug_str     00000000 
00007201 l       .debug_str     00000000 
00007212 l       .debug_str     00000000 
0000721b l       .debug_str     00000000 
00000e10 l       .debug_ranges  00000000 
00000e28 l       .debug_ranges  00000000 
00005f06 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000164c l       .debug_str     00000000 
00007227 l       .debug_str     00000000 
00001632 l       .debug_str     00000000 
000010c4 l       .debug_str     00000000 
00006896 l       .debug_str     00000000 
0000688f l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000fc0 l       .debug_frame   00000000 
d000cffe l       .text  00000000 
d000d02c l       .text  00000000 
d000d060 l       .text  00000000 
d000d11e l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify.c
d000d11e l       .text  00000000 
d000d11e l       .text  00000000 
d000d11e l       .text  00000000 
d000d120 l       .text  00000000 
d000d13c l       .text  00000000 
d000d13e l       .text  00000000 
d000d140 l       .text  00000000 
d000d144 l       .text  00000000 
d000d144 l       .text  00000000 
d000d146 l       .text  00000000 
d000d146 l       .text  00000000 
d000d150 l       .text  00000000 
d000d152 l       .text  00000000 
d000d154 l       .text  00000000 
d000d154 l       .text  00000000 
d000d158 l       .text  00000000 
d000d158 l       .text  00000000 
d000d15c l       .text  00000000 
d000d160 l       .text  00000000 
d000d168 l       .text  00000000 
d000d16c l       .text  00000000 
d000d17a l       .text  00000000 
d000d182 l       .text  00000000 
d000d186 l       .text  00000000 
d000d194 l       .text  00000000 
d000d19c l       .text  00000000 
d000d1aa l       .text  00000000 
d000d1b2 l       .text  00000000 
d000d1b6 l       .text  00000000 
d000d1c2 l       .text  00000000 
d000d1ca l       .text  00000000 
d000d1ce l       .text  00000000 
d000d1ce l       .text  00000000 
d000d1d2 l       .text  00000000 
d000d1d6 l       .text  00000000 
d000d1da l       .text  00000000 
d000d1da l       .text  00000000 
d000d1de l       .text  00000000 
d000d1e2 l       .text  00000000 
d000d1e2 l       .text  00000000 
d000d1e8 l       .text  00000000 
d000d1f0 l       .text  00000000 
d000d1f0 l       .text  00000000 
d000d1f4 l       .text  00000000 
d000d200 l       .text  00000000 
d000d200 l       .text  00000000 
d000d208 l       .text  00000000 
d000d208 l       .text  00000000 
d000d20c l       .text  00000000 
d000d210 l       .text  00000000 
d000d210 l       .text  00000000 
d000d212 l       .text  00000000 
d000d212 l       .text  00000000 
d000d216 l       .text  00000000 
d000d216 l       .text  00000000 
d000d21a l       .text  00000000 
d000d21a l       .text  00000000 
d000d21e l       .text  00000000 
d000f5b4 l     O .rodata        00000180 kSigverifyShares
d000d228 l       .text  00000000 
d000d228 l       .text  00000000 
d000d22a l       .text  00000000 
d000d22c l       .text  00000000 
d000d22e l       .text  00000000 
d000d230 l       .text  00000000 
d000d232 l       .text  00000000 
d000d234 l       .text  00000000 
d000d236 l       .text  00000000 
d000d236 l       .text  00000000 
d000d238 l       .text  00000000 
d000d238 l       .text  00000000 
d000d242 l       .text  00000000 
d000d242 l       .text  00000000 
d000d244 l       .text  00000000 
d000d244 l       .text  00000000 
d000d246 l       .text  00000000 
d000d246 l       .text  00000000 
d000d24a l       .text  00000000 
d000d252 l       .text  00000000 
d000f734 l     O .rodata        00000014 sigverify_encoded_message_check.kEncodedSha256
d000d25e l       .text  00000000 
d000d268 l       .text  00000000 
d000d268 l       .text  00000000 
d000d26a l       .text  00000000 
d000d26c l       .text  00000000 
d000d26e l       .text  00000000 
d000d270 l       .text  00000000 
d000d274 l       .text  00000000 
d000d274 l       .text  00000000 
d000d276 l       .text  00000000 
d000d276 l       .text  00000000 
d000d278 l       .text  00000000 
d000d282 l       .text  00000000 
d000d282 l       .text  00000000 
d000d288 l       .text  00000000 
d000d288 l       .text  00000000 
d000d28c l       .text  00000000 
d000d294 l       .text  00000000 
d000d294 l       .text  00000000 
d000d298 l       .text  00000000 
d000d2a0 l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b2 l       .text  00000000 
d000d2bc l       .text  00000000 
d000d2bc l       .text  00000000 
d000d2be l       .text  00000000 
d000d2be l       .text  00000000 
d000d2c0 l       .text  00000000 
d000d2c8 l       .text  00000000 
d000d2c8 l       .text  00000000 
d000d2d8 l       .text  00000000 
d000d2da l       .text  00000000 
d000d2dc l       .text  00000000 
d000d2dc l       .text  00000000 
d000d2de l       .text  00000000 
d000d2de l       .text  00000000 
d000d2ee l       .text  00000000 
d000d2fa l       .text  00000000 
d000d2fe l       .text  00000000 
d000d2fe l       .text  00000000 
d000d2fe l       .text  00000000 
d000d2fe l       .text  00000000 
d000d300 l       .text  00000000 
d000d300 l       .text  00000000 
d000d304 l       .text  00000000 
d000d304 l       .text  00000000 
d000d30c l       .text  00000000 
d000d30c l       .text  00000000 
d000d30e l       .text  00000000 
d000d310 l       .text  00000000 
d000d312 l       .text  00000000 
d000d314 l       .text  00000000 
d000d318 l       .text  00000000 
d000d31c l       .text  00000000 
d000d31e l       .text  00000000 
d000d322 l       .text  00000000 
d000d324 l       .text  00000000 
d000d326 l       .text  00000000 
d000d328 l       .text  00000000 
d000d32a l       .text  00000000 
d000d32e l       .text  00000000 
d000d32e l       .text  00000000 
d000d330 l       .text  00000000 
d000d330 l       .text  00000000 
d000d338 l       .text  00000000 
d000d338 l       .text  00000000 
d000d33c l       .text  00000000 
d000d348 l       .text  00000000 
d000d34c l       .text  00000000 
d000d350 l       .text  00000000 
d000d354 l       .text  00000000 
d000d356 l       .text  00000000 
d000d35c l       .text  00000000 
d000d35c l       .text  00000000 
d000d35e l       .text  00000000 
d000d35e l       .text  00000000 
d000d362 l       .text  00000000 
d000d362 l       .text  00000000 
d000d366 l       .text  00000000 
d000d366 l       .text  00000000 
d000d374 l       .text  00000000 
d000d374 l       .text  00000000 
d000d37c l       .text  00000000 
d000d380 l       .text  00000000 
d000d388 l       .text  00000000 
d000d38c l       .text  00000000 
d000d39c l       .text  00000000 
d000d39c l       .text  00000000 
d000d3a4 l       .text  00000000 
d000d3a4 l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ae l       .text  00000000 
d000d3b6 l       .text  00000000 
d000d3b8 l       .text  00000000 
d000d3ba l       .text  00000000 
d000d3ba l       .text  00000000 
d000d3bc l       .text  00000000 
d000d3c0 l       .text  00000000 
d000d3c6 l       .text  00000000 
d000d3c6 l       .text  00000000 
d000d3ce l       .text  00000000 
d000d3ce l       .text  00000000 
d000d3d2 l       .text  00000000 
d000d3da l       .text  00000000 
d000d3da l       .text  00000000 
d000d3de l       .text  00000000 
d000d3e2 l       .text  00000000 
d000d3e2 l       .text  00000000 
d000d3e4 l       .text  00000000 
d000d3f2 l       .text  00000000 
d000d3f2 l       .text  00000000 
d000d3f8 l       .text  00000000 
d000d3f8 l       .text  00000000 
d000d3fa l       .text  00000000 
d000d3fc l       .text  00000000 
d000d3fe l       .text  00000000 
d000d400 l       .text  00000000 
d000d404 l       .text  00000000 
d000d404 l       .text  00000000 
d000d408 l       .text  00000000 
d000d408 l       .text  00000000 
d000d40a l       .text  00000000 
d000d412 l       .text  00000000 
d000d416 l       .text  00000000 
d000d416 l       .text  00000000 
d000d41a l       .text  00000000 
d000d41a l       .text  00000000 
d000d41c l       .text  00000000 
d000d424 l       .text  00000000 
d000d428 l       .text  00000000 
d000d428 l       .text  00000000 
d000d42c l       .text  00000000 
d000d42c l       .text  00000000 
d000d42e l       .text  00000000 
d000d436 l       .text  00000000 
d000d43a l       .text  00000000 
d000d43c l       .text  00000000 
d000d43e l       .text  00000000 
d000d446 l       .text  00000000 
d000d446 l       .text  00000000 
0000a93f l       .debug_loc     00000000 
0000a99c l       .debug_loc     00000000 
0000a9f9 l       .debug_loc     00000000 
0000aa2a l       .debug_loc     00000000 
0000aa5b l       .debug_loc     00000000 
0000aab8 l       .debug_loc     00000000 
0000aade l       .debug_loc     00000000 
0000ab0f l       .debug_loc     00000000 
0000ab35 l       .debug_loc     00000000 
0000ab50 l       .debug_loc     00000000 
0000ab6b l       .debug_loc     00000000 
0000abb2 l       .debug_loc     00000000 
0000abcd l       .debug_loc     00000000 
0000ac14 l       .debug_loc     00000000 
0000ac5b l       .debug_loc     00000000 
0000acf6 l       .debug_loc     00000000 
0000ad1d l       .debug_loc     00000000 
0000ad5a l       .debug_loc     00000000 
0000ad99 l       .debug_loc     00000000 
0000adde l       .debug_loc     00000000 
0000ae17 l       .debug_loc     00000000 
0000ae56 l       .debug_loc     00000000 
0000ae93 l       .debug_loc     00000000 
0000aeba l       .debug_loc     00000000 
0000aee0 l       .debug_loc     00000000 
0000aefb l       .debug_loc     00000000 
0000af21 l       .debug_loc     00000000 
0000af47 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000072ad l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000ef0 l       .debug_ranges  00000000 
000072e1 l       .debug_str     00000000 
000072f0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
000072f7 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
00007308 l       .debug_str     00000000 
00007323 l       .debug_str     00000000 
00007345 l       .debug_str     00000000 
00007366 l       .debug_str     00000000 
0000738c l       .debug_str     00000000 
000073b0 l       .debug_str     00000000 
00001c54 l       .debug_str     00000000 
000073d3 l       .debug_str     00000000 
000073e8 l       .debug_str     00000000 
000073fe l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00007414 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00007430 l       .debug_str     00000000 
00007450 l       .debug_str     00000000 
00001802 l       .debug_str     00000000 
000017dd l       .debug_str     00000000 
00007458 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00007464 l       .debug_str     00000000 
00000325 l       .debug_str     00000000 
00001771 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
000014ff l       .debug_str     00000000 
00001269 l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
000074af l       .debug_str     00000000 
00000e68 l       .debug_ranges  00000000 
000018b0 l       .debug_str     00000000 
00000e88 l       .debug_ranges  00000000 
00000ea0 l       .debug_ranges  00000000 
00000eb8 l       .debug_ranges  00000000 
00000ed0 l       .debug_ranges  00000000 
000010a5 l       .debug_str     00000000 
00007469 l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
00007480 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
000014c6 l       .debug_str     00000000 
0000129f l       .debug_str     00000000 
00001317 l       .debug_str     00000000 
00007497 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
000012b7 l       .debug_str     00000000 
000010b0 l       .debug_str     00000000 
000013f4 l       .debug_str     00000000 
000074fb l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00001329 l       .debug_str     00000000 
0000130e l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000012eb l       .debug_str     00000000 
000012fd l       .debug_str     00000000 
000012c1 l       .debug_str     00000000 
00001020 l       .debug_frame   00000000 
d000d3ac l       .text  00000000 
d000d446 l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_ibex.c
d000d446 l       .text  00000000 
d000d446 l       .text  00000000 
d000d446 l       .text  00000000 
d000d448 l       .text  00000000 
d000d464 l       .text  00000000 
d000d466 l       .text  00000000 
d000d468 l       .text  00000000 
d000d46a l       .text  00000000 
d000d47e l       .text  00000000 
d000d47e l       .text  00000000 
d000d484 l       .text  00000000 
d000d48a l       .text  00000000 
d000d48a l       .text  00000000 
d000d48e l       .text  00000000 
d000d490 l       .text  00000000 
d000d490 l       .text  00000000 
d000d498 l       .text  00000000 
d000d498 l       .text  00000000 
d000d49c l       .text  00000000 
d000d4a8 l       .text  00000000 
d000d4a8 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4c2 l       .text  00000000 
d000d4c8 l       .text  00000000 
d000d4cc l       .text  00000000 
d000d4cc l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4d4 l       .text  00000000 
d000d4d6 l       .text  00000000 
d000d4d6 l       .text  00000000 
d000d4da l       .text  00000000 
d000d4da l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4de l       .text  00000000 
d000d4de l       .text  00000000 
d000d4e2 l       .text  00000000 
d000d4e2 l       .text  00000000 
d000d4f6 l       .text  00000000 
d000d4f6 l       .text  00000000 
d000d4fa l       .text  00000000 
d000d4fa l       .text  00000000 
d000d4fe l       .text  00000000 
d000d4fe l       .text  00000000 
d000d502 l       .text  00000000 
d000d506 l       .text  00000000 
d000d50e l       .text  00000000 
d000d510 l       .text  00000000 
d000d510 l       .text  00000000 
d000d514 l       .text  00000000 
d000d514 l       .text  00000000 
d000d516 l       .text  00000000 
d000d51a l       .text  00000000 
d000d51a l       .text  00000000 
d000d51c l       .text  00000000 
d000d520 l       .text  00000000 
d000d520 l       .text  00000000 
d000d524 l       .text  00000000 
d000d524 l       .text  00000000 
d000d528 l       .text  00000000 
d000d528 l       .text  00000000 
d000d530 l       .text  00000000 
d000d530 l       .text  00000000 
d000d536 l       .text  00000000 
d000d53c l       .text  00000000 
d000d53c l       .text  00000000 
d000d540 l       .text  00000000 
d000d542 l       .text  00000000 
d000d542 l       .text  00000000 
d000d54a l       .text  00000000 
d000d54a l       .text  00000000 
d000d54e l       .text  00000000 
d000d552 l       .text  00000000 
d000d552 l       .text  00000000 
d000d558 l       .text  00000000 
d000d55e l       .text  00000000 
d000d562 l       .text  00000000 
d000d562 l       .text  00000000 
d000d566 l       .text  00000000 
d000d56a l       .text  00000000 
d000d56a l       .text  00000000 
d000d56c l       .text  00000000 
d000d56c l       .text  00000000 
d000d570 l       .text  00000000 
d000d570 l       .text  00000000 
d000d572 l       .text  00000000 
d000d572 l       .text  00000000 
d000d574 l       .text  00000000 
d000d574 l       .text  00000000 
d000d578 l       .text  00000000 
d000d578 l       .text  00000000 
d000d57c l       .text  00000000 
d000d582 l       .text  00000000 
d000d582 l       .text  00000000 
d000d584 l       .text  00000000 
d000d588 l       .text  00000000 
d000d588 l       .text  00000000 
d000d662 l     F .text  00000132 mont_mul
d000d592 l       .text  00000000 
d000d592 l       .text  00000000 
d000d59c l       .text  00000000 
d000d59c l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5ba l       .text  00000000 
d000d5ba l       .text  00000000 
d000d5c4 l       .text  00000000 
d000d5c4 l       .text  00000000 
d000d5c6 l       .text  00000000 
d000d5c6 l       .text  00000000 
d000d5d0 l       .text  00000000 
d000d5d0 l       .text  00000000 
d000d5da l       .text  00000000 
d000d5da l       .text  00000000 
d000d5dc l       .text  00000000 
d000d5dc l       .text  00000000 
d000d5de l       .text  00000000 
d000d5de l       .text  00000000 
d000d5e8 l       .text  00000000 
d000d5e8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5fa l       .text  00000000 
d000d5fc l       .text  00000000 
d000d5fc l       .text  00000000 
d000d600 l       .text  00000000 
d000d602 l       .text  00000000 
d000d602 l       .text  00000000 
d000d60c l       .text  00000000 
d000d60c l       .text  00000000 
d000d610 l       .text  00000000 
d000d618 l       .text  00000000 
d000d618 l       .text  00000000 
d000d61e l       .text  00000000 
d000d624 l       .text  00000000 
d000d628 l       .text  00000000 
d000d628 l       .text  00000000 
d000d62c l       .text  00000000 
d000d62c l       .text  00000000 
d000d630 l       .text  00000000 
d000d632 l       .text  00000000 
d000d632 l       .text  00000000 
d000d636 l       .text  00000000 
d000d636 l       .text  00000000 
d000d638 l       .text  00000000 
d000d638 l       .text  00000000 
d000d63a l       .text  00000000 
d000d63a l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d642 l       .text  00000000 
d000d646 l       .text  00000000 
d000d64a l       .text  00000000 
d000d652 l       .text  00000000 
d000d662 l       .text  00000000 
d000d662 l       .text  00000000 
d000d662 l       .text  00000000 
d000d662 l       .text  00000000 
d000d662 l       .text  00000000 
d000d664 l       .text  00000000 
d000d676 l       .text  00000000 
d000d678 l       .text  00000000 
d000d67a l       .text  00000000 
d000d67c l       .text  00000000 
d000d67e l       .text  00000000 
d000d680 l       .text  00000000 
d000d690 l       .text  00000000 
d000d690 l       .text  00000000 
d000d692 l       .text  00000000 
d000d692 l       .text  00000000 
d000d6a2 l       .text  00000000 
d000d6a2 l       .text  00000000 
d000d6ae l       .text  00000000 
d000d6b2 l       .text  00000000 
d000d6b8 l       .text  00000000 
d000d6c0 l       .text  00000000 
d000d6c2 l       .text  00000000 
d000d6c2 l       .text  00000000 
d000d6c6 l       .text  00000000 
d000d6ca l       .text  00000000 
d000d6d0 l       .text  00000000 
d000d6d0 l       .text  00000000 
d000d6d4 l       .text  00000000 
d000d6d4 l       .text  00000000 
d000d6d8 l       .text  00000000 
d000d6dc l       .text  00000000 
d000d6dc l       .text  00000000 
d000d6de l       .text  00000000 
d000d6e2 l       .text  00000000 
d000d6e6 l       .text  00000000 
d000d6e6 l       .text  00000000 
d000d6e8 l       .text  00000000 
d000d6e8 l       .text  00000000 
d000d6ee l       .text  00000000 
d000d6f4 l       .text  00000000 
d000d6fc l       .text  00000000 
d000d704 l       .text  00000000 
d000d704 l       .text  00000000 
d000d706 l       .text  00000000 
d000d70c l       .text  00000000 
d000d70e l       .text  00000000 
d000d714 l       .text  00000000 
d000d714 l       .text  00000000 
d000d71c l       .text  00000000 
d000d720 l       .text  00000000 
d000d720 l       .text  00000000 
d000d72a l       .text  00000000 
d000d72c l       .text  00000000 
d000d734 l       .text  00000000 
d000d736 l       .text  00000000 
d000d736 l       .text  00000000 
d000d73a l       .text  00000000 
d000d73e l       .text  00000000 
d000d73e l       .text  00000000 
d000d740 l       .text  00000000 
d000d740 l       .text  00000000 
d000d742 l       .text  00000000 
d000d742 l       .text  00000000 
d000d746 l       .text  00000000 
d000d746 l       .text  00000000 
d000d74a l       .text  00000000 
d000d74e l       .text  00000000 
d000d750 l       .text  00000000 
d000d752 l       .text  00000000 
d000d752 l       .text  00000000 
d000d758 l       .text  00000000 
d000d75e l       .text  00000000 
d000d762 l       .text  00000000 
d000d762 l       .text  00000000 
d000d766 l       .text  00000000 
d000d766 l       .text  00000000 
d000d76a l       .text  00000000 
d000d76c l       .text  00000000 
d000d76c l       .text  00000000 
d000d770 l       .text  00000000 
d000d770 l       .text  00000000 
d000d772 l       .text  00000000 
d000d772 l       .text  00000000 
d000d774 l       .text  00000000 
d000d774 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d77a l       .text  00000000 
d000d77e l       .text  00000000 
d000d77e l       .text  00000000 
d000d780 l       .text  00000000 
d000d782 l       .text  00000000 
d000d788 l       .text  00000000 
d000d78a l       .text  00000000 
d000d794 l       .text  00000000 
d000d794 l       .text  00000000 
0000af62 l       .debug_loc     00000000 
0000af88 l       .debug_loc     00000000 
0000afae l       .debug_loc     00000000 
0000afd4 l       .debug_loc     00000000 
0000affa l       .debug_loc     00000000 
0000b02d l       .debug_loc     00000000 
0000b053 l       .debug_loc     00000000 
0000b06e l       .debug_loc     00000000 
0000b0ac l       .debug_loc     00000000 
0000b0d6 l       .debug_loc     00000000 
0000b0f1 l       .debug_loc     00000000 
0000b117 l       .debug_loc     00000000 
0000b13d l       .debug_loc     00000000 
0000b170 l       .debug_loc     00000000 
0000b18b l       .debug_loc     00000000 
0000b1c4 l       .debug_loc     00000000 
0000b1f7 l       .debug_loc     00000000 
0000b21d l       .debug_loc     00000000 
0000b250 l       .debug_loc     00000000 
0000b26b l       .debug_loc     00000000 
0000b291 l       .debug_loc     00000000 
0000b2b7 l       .debug_loc     00000000 
0000b2dd l       .debug_loc     00000000 
0000b303 l       .debug_loc     00000000 
0000b32a l       .debug_loc     00000000 
0000b39f l       .debug_loc     00000000 
0000b3ba l       .debug_loc     00000000 
0000b424 l       .debug_loc     00000000 
0000b45a l       .debug_loc     00000000 
0000b480 l       .debug_loc     00000000 
0000b4b3 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000074b6 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000f70 l       .debug_ranges  00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
000018a7 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00007503 l       .debug_str     00000000 
00000325 l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
0000261a l       .debug_str     00000000 
00007511 l       .debug_str     00000000 
00007522 l       .debug_str     00000000 
00007529 l       .debug_str     00000000 
0000752e l       .debug_str     00000000 
00007469 l       .debug_str     00000000 
00007542 l       .debug_str     00000000 
00000f10 l       .debug_ranges  00000000 
00000f28 l       .debug_ranges  00000000 
00000f40 l       .debug_ranges  00000000 
00005f06 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00007539 l       .debug_str     00000000 
00003ef2 l       .debug_str     00000000 
000030e6 l       .debug_str     00000000 
00007546 l       .debug_str     00000000 
0000754b l       .debug_str     00000000 
0000754f l       .debug_str     00000000 
00001771 l       .debug_str     00000000 
00000f58 l       .debug_ranges  00000000 
00000fba l       .debug_str     00000000 
00001084 l       .debug_frame   00000000 
d000d662 l       .text  00000000 
d000d794 l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_otbn.c
d000d794 l       .text  00000000 
d000d794 l       .text  00000000 
d000d794 l       .text  00000000 
d000d796 l       .text  00000000 
d000d7a2 l       .text  00000000 
d000d7a4 l       .text  00000000 
d000d7a6 l       .text  00000000 
d000d7a8 l       .text  00000000 
d000d7a8 l       .text  00000000 
d000d7ac l       .text  00000000 
d000f748 l     O .rodata        00000010 kOtbnAppRsa
d000d7ac l       .text  00000000 
d000d7b4 l       .text  00000000 
d000d7b4 l       .text  00000000 
d000d7ca l       .text  00000000 
d000d7ca l       .text  00000000 
d000d7cc l       .text  00000000 
d000d7cc l       .text  00000000 
d000d7d0 l       .text  00000000 
d000d7d0 l       .text  00000000 
d000d7d4 l       .text  00000000 
d000d7e0 l       .text  00000000 
d000d7e0 l       .text  00000000 
d000d7e4 l       .text  00000000 
d000d7ee l       .text  00000000 
d000d7ee l       .text  00000000 
d000d7f0 l       .text  00000000 
d000d7f0 l       .text  00000000 
d000d7f4 l       .text  00000000 
d000d7f4 l       .text  00000000 
d000d7f8 l       .text  00000000 
d000d804 l       .text  00000000 
d000d804 l       .text  00000000 
d000d808 l       .text  00000000 
d000d812 l       .text  00000000 
d000d812 l       .text  00000000 
d000d814 l       .text  00000000 
d000d814 l       .text  00000000 
d000d818 l       .text  00000000 
d000d824 l       .text  00000000 
d000d824 l       .text  00000000 
d000d828 l       .text  00000000 
d000d832 l       .text  00000000 
d000d832 l       .text  00000000 
d000d834 l       .text  00000000 
d000d834 l       .text  00000000 
d000d838 l       .text  00000000 
d000d838 l       .text  00000000 
d000d83c l       .text  00000000 
d000d848 l       .text  00000000 
d000d848 l       .text  00000000 
d000d84a l       .text  00000000 
d000d84c l       .text  00000000 
d000d84c l       .text  00000000 
d000d84e l       .text  00000000 
d000d84e l       .text  00000000 
d000d852 l       .text  00000000 
d000d85e l       .text  00000000 
d000d85e l       .text  00000000 
d000d860 l       .text  00000000 
d000d862 l       .text  00000000 
d000d862 l       .text  00000000 
d000d864 l       .text  00000000 
d000d864 l       .text  00000000 
d000d874 l       .text  00000000 
d000d874 l       .text  00000000 
d000d878 l       .text  00000000 
d000d878 l       .text  00000000 
d000d87a l       .text  00000000 
d000d87a l       .text  00000000 
d000d882 l       .text  00000000 
d000d882 l       .text  00000000 
d000d886 l       .text  00000000 
d000d886 l       .text  00000000 
d000d88e l       .text  00000000 
d000d89a l       .text  00000000 
d000d8a6 l       .text  00000000 
d000d8a6 l       .text  00000000 
d000d8aa l       .text  00000000 
d000d8b4 l       .text  00000000 
d000d8b4 l       .text  00000000 
d000d8b6 l       .text  00000000 
d000d8ba l       .text  00000000 
d000d8bc l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c6 l       .text  00000000 
d000d8ce l       .text  00000000 
d000d8d0 l       .text  00000000 
d000d8d2 l       .text  00000000 
d000d8d4 l       .text  00000000 
d000d8d4 l       .text  00000000 
d000d8dc l       .text  00000000 
d000d8dc l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e8 l       .text  00000000 
d000d8ea l       .text  00000000 
d000d8ec l       .text  00000000 
d000d8f2 l       .text  00000000 
d000d8f2 l       .text  00000000 
d000d8fa l       .text  00000000 
d000d8fc l       .text  00000000 
d000d8fe l       .text  00000000 
d000d900 l       .text  00000000 
d000d906 l       .text  00000000 
d000d906 l       .text  00000000 
0000b4ce l       .debug_loc     00000000 
0000b52b l       .debug_loc     00000000 
0000b588 l       .debug_loc     00000000 
0000b5e5 l       .debug_loc     00000000 
0000b60b l       .debug_loc     00000000 
0000b626 l       .debug_loc     00000000 
0000b641 l       .debug_loc     00000000 
0000b667 l       .debug_loc     00000000 
0000b682 l       .debug_loc     00000000 
0000b69d l       .debug_loc     00000000 
0000b6c3 l       .debug_loc     00000000 
0000b6de l       .debug_loc     00000000 
0000b704 l       .debug_loc     00000000 
0000b71f l       .debug_loc     00000000 
0000b745 l       .debug_loc     00000000 
0000b760 l       .debug_loc     00000000 
0000b786 l       .debug_loc     00000000 
0000b7a1 l       .debug_loc     00000000 
0000b7c7 l       .debug_loc     00000000 
0000b7e2 l       .debug_loc     00000000 
0000b813 l       .debug_loc     00000000 
0000b844 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007554 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000f88 l       .debug_ranges  00000000 
0000758b l       .debug_str     00000000 
0000759c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000075a8 l       .debug_str     00000000 
000075b9 l       .debug_str     00000000 
000075ca l       .debug_str     00000000 
000075dc l       .debug_str     00000000 
00007623 l       .debug_str     00000000 
0000761a l       .debug_str     00000000 
000075e8 l       .debug_str     00000000 
000075f3 l       .debug_str     00000000 
000075fc l       .debug_str     00000000 
0000760c l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
0000762e l       .debug_str     00000000 
00007643 l       .debug_str     00000000 
00007659 l       .debug_str     00000000 
00007671 l       .debug_str     00000000 
000073d3 l       .debug_str     00000000 
000073e8 l       .debug_str     00000000 
000073fe l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00007689 l       .debug_str     00000000 
0000774f l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
000067c6 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000076bd l       .debug_str     00000000 
000076f4 l       .debug_str     00000000 
000076a4 l       .debug_str     00000000 
000076b2 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000076c4 l       .debug_str     00000000 
0000775c l       .debug_str     00000000 
00007775 l       .debug_str     00000000 
00001269 l       .debug_str     00000000 
00007780 l       .debug_str     00000000 
000025fd l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
000076e0 l       .debug_str     00000000 
000076ea l       .debug_str     00000000 
000076f8 l       .debug_str     00000000 
0000770f l       .debug_str     00000000 
00007720 l       .debug_str     00000000 
0000773b l       .debug_str     00000000 
00007480 l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
00007542 l       .debug_str     00000000 
00000325 l       .debug_str     00000000 
00007754 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
000010e4 l       .debug_frame   00000000 
d000d8c4 l       .text  00000000 
d000d906 l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn_util.c
d000d906 l       .text  00000000 
d000d906 l       .text  00000000 
d000d906 l       .text  00000000 
d000d906 l       .text  00000000 
d000d920 l       .text  00000000 
d000d922 l       .text  00000000 
d000d922 l       .text  00000000 
d000d922 l       .text  00000000 
d000d922 l       .text  00000000 
d000d922 l       .text  00000000 
d000d924 l       .text  00000000 
d000d936 l       .text  00000000 
d000d938 l       .text  00000000 
d000d938 l       .text  00000000 
d000d93a l       .text  00000000 
d000d93e l       .text  00000000 
d000d93e l       .text  00000000 
d000d946 l       .text  00000000 
d000d94a l       .text  00000000 
d000d94c l       .text  00000000 
d000d94e l       .text  00000000 
d000d94e l       .text  00000000 
d000d952 l       .text  00000000 
d000d952 l       .text  00000000 
d000d954 l       .text  00000000 
d000d956 l       .text  00000000 
d000d956 l       .text  00000000 
d000d956 l       .text  00000000 
d000d956 l       .text  00000000 
d000d95a l       .text  00000000 
d000d95a l       .text  00000000 
d000d95e l       .text  00000000 
d000d96a l       .text  00000000 
d000d96a l       .text  00000000 
d000d96e l       .text  00000000 
d000d972 l       .text  00000000 
d000d972 l       .text  00000000 
d000d976 l       .text  00000000 
d000d97a l       .text  00000000 
d000d97e l       .text  00000000 
d000d982 l       .text  00000000 
d000d982 l       .text  00000000 
d000d984 l       .text  00000000 
d000d986 l       .text  00000000 
d000d986 l       .text  00000000 
d000d986 l       .text  00000000 
d000d986 l       .text  00000000 
d000d98a l       .text  00000000 
d000d98a l       .text  00000000 
d000d98e l       .text  00000000 
d000d99a l       .text  00000000 
d000d99a l       .text  00000000 
d000d99c l       .text  00000000 
d000d99c l       .text  00000000 
d000d9a0 l       .text  00000000 
d000d9a4 l       .text  00000000 
d000d9a4 l       .text  00000000 
d000d9a8 l       .text  00000000 
d000d9aa l       .text  00000000 
d000d9aa l       .text  00000000 
d000d9aa l       .text  00000000 
d000d9aa l       .text  00000000 
d000d9ae l       .text  00000000 
d000d9ba l       .text  00000000 
d000d9ba l       .text  00000000 
d000d9bc l       .text  00000000 
d000d9bc l       .text  00000000 
d000d9be l       .text  00000000 
d000d9be l       .text  00000000 
d000d9c2 l       .text  00000000 
d000d9c2 l       .text  00000000 
d000d9ca l       .text  00000000 
d000d9d6 l       .text  00000000 
d000d9d6 l       .text  00000000 
d000d9d8 l       .text  00000000 
d000d9d8 l       .text  00000000 
d000d9dc l       .text  00000000 
d000d9e0 l       .text  00000000 
d000d9e0 l       .text  00000000 
d000d9e2 l       .text  00000000 
d000d9e2 l       .text  00000000 
d000d9e6 l       .text  00000000 
d000d9e6 l       .text  00000000 
d000d9ea l       .text  00000000 
d000d9f6 l       .text  00000000 
d000d9f6 l       .text  00000000 
d000da0e l       .text  00000000 
d000da14 l       .text  00000000 
d000da16 l       .text  00000000 
d000da24 l       .text  00000000 
d000da28 l       .text  00000000 
d000da2e l       .text  00000000 
d000da2e l       .text  00000000 
d000da2e l       .text  00000000 
d000da2e l       .text  00000000 
d000da2e l       .text  00000000 
d000da30 l       .text  00000000 
d000da30 l       .text  00000000 
d000da32 l       .text  00000000 
d000da34 l       .text  00000000 
d000da34 l       .text  00000000 
d000da34 l       .text  00000000 
d000da38 l       .text  00000000 
d000da38 l       .text  00000000 
d000da3c l       .text  00000000 
d000da3e l       .text  00000000 
d000da4a l       .text  00000000 
d000da4c l       .text  00000000 
d000da4c l       .text  00000000 
d000da54 l       .text  00000000 
d000da56 l       .text  00000000 
d000da5c l       .text  00000000 
d000da5c l       .text  00000000 
d000da60 l       .text  00000000 
d000da64 l       .text  00000000 
d000da6a l       .text  00000000 
d000da6a l       .text  00000000 
d000da6a l       .text  00000000 
d000da6a l       .text  00000000 
d000da6a l       .text  00000000 
d000da6c l       .text  00000000 
d000da6e l       .text  00000000 
d000da6e l       .text  00000000 
d000da70 l       .text  00000000 
d000da72 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da76 l       .text  00000000 
d000da78 l       .text  00000000 
d000da78 l       .text  00000000 
d000da7a l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
0000b875 l       .debug_loc     00000000 
0000b89b l       .debug_loc     00000000 
0000b8c3 l       .debug_loc     00000000 
0000b8e9 l       .debug_loc     00000000 
0000b904 l       .debug_loc     00000000 
0000b940 l       .debug_loc     00000000 
0000b95b l       .debug_loc     00000000 
0000b981 l       .debug_loc     00000000 
0000b99c l       .debug_loc     00000000 
0000b9c2 l       .debug_loc     00000000 
0000b9dd l       .debug_loc     00000000 
0000ba03 l       .debug_loc     00000000 
0000ba1e l       .debug_loc     00000000 
0000ba44 l       .debug_loc     00000000 
0000ba5f l       .debug_loc     00000000 
0000ba85 l       .debug_loc     00000000 
0000baa0 l       .debug_loc     00000000 
0000babb l       .debug_loc     00000000 
0000baec l       .debug_loc     00000000 
0000bb12 l       .debug_loc     00000000 
0000bb38 l       .debug_loc     00000000 
0000bb53 l       .debug_loc     00000000 
0000bb79 l       .debug_loc     00000000 
0000bb9f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007792 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000fb8 l       .debug_ranges  00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000793d l       .debug_str     00000000 
000077bc l       .debug_str     00000000 
000077d0 l       .debug_str     00000000 
000077e8 l       .debug_str     00000000 
00007800 l       .debug_str     00000000 
00007816 l       .debug_str     00000000 
0000782e l       .debug_str     00000000 
0000783f l       .debug_str     00000000 
0000785d l       .debug_str     00000000 
0000787b l       .debug_str     00000000 
00007898 l       .debug_str     00000000 
000078b5 l       .debug_str     00000000 
000078d5 l       .debug_str     00000000 
000078f2 l       .debug_str     00000000 
00007912 l       .debug_str     00000000 
0000792c l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
0000794b l       .debug_str     00000000 
0000795f l       .debug_str     00000000 
000076e0 l       .debug_str     00000000 
000068fa l       .debug_str     00000000 
0000797e l       .debug_str     00000000 
000076f4 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
00007623 l       .debug_str     00000000 
0000761a l       .debug_str     00000000 
000075e8 l       .debug_str     00000000 
000075f3 l       .debug_str     00000000 
000075fc l       .debug_str     00000000 
0000760c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000076ea l       .debug_str     00000000 
00007a11 l       .debug_str     00000000 
00007a20 l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
00000fa0 l       .debug_ranges  00000000 
00007997 l       .debug_str     00000000 
000079af l       .debug_str     00000000 
000079c2 l       .debug_str     00000000 
000079d2 l       .debug_str     00000000 
000079e5 l       .debug_str     00000000 
0000770f l       .debug_str     00000000 
00007070 l       .debug_str     00000000 
000079f5 l       .debug_str     00000000 
000076f8 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
00002919 l       .debug_str     00000000 
0000773b l       .debug_str     00000000 
00007a2f l       .debug_str     00000000 
00007a02 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000076bd l       .debug_str     00000000 
0000774f l       .debug_str     00000000 
000076a4 l       .debug_str     00000000 
000076b2 l       .debug_str     00000000 
000017a8 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000759c l       .debug_str     00000000 
00001134 l       .debug_frame   00000000 
d000d922 l       .text  00000000 
d000da2e l       .text  00000000 
d000da6a l       .text  00000000 
d000da74 l       .text  00000000 
d000da7c l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn.c
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7e l       .text  00000000 
d000da7e l       .text  00000000 
d000da7e l       .text  00000000 
d000da7e l       .text  00000000 
d000da82 l       .text  00000000 
d000da82 l       .text  00000000 
d000da82 l       .text  00000000 
d000da82 l       .text  00000000 
d000da8a l       .text  00000000 
d000da8a l       .text  00000000 
d000da8c l       .text  00000000 
d000da8c l       .text  00000000 
d000da8e l       .text  00000000 
d000da8e l       .text  00000000 
d000da90 l       .text  00000000 
d000da90 l       .text  00000000 
d000da92 l       .text  00000000 
d000da92 l       .text  00000000 
d000da96 l       .text  00000000 
d000da96 l       .text  00000000 
d000da98 l       .text  00000000 
d000da9c l       .text  00000000 
d000da9c l       .text  00000000 
d000da9e l       .text  00000000 
d000da9e l       .text  00000000 
d000daa2 l       .text  00000000 
d000daa2 l       .text  00000000 
d000daa6 l       .text  00000000 
d000daa6 l       .text  00000000 
d000dab6 l       .text  00000000 
d000dab6 l       .text  00000000 
d000dab8 l       .text  00000000 
d000dab8 l       .text  00000000 
d000dac2 l       .text  00000000 
d000dac4 l       .text  00000000 
d000dac8 l       .text  00000000 
d000dacc l       .text  00000000 
d000dace l       .text  00000000 
d000dace l       .text  00000000 
d000dace l       .text  00000000 
d000dace l       .text  00000000 
d000dace l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad2 l       .text  00000000 
d000dad8 l       .text  00000000 
d000dade l       .text  00000000 
d000dade l       .text  00000000 
d000dae6 l       .text  00000000 
d000dae6 l       .text  00000000 
d000daf0 l     F .text  00000076 otbn_cmd_run
d000daf0 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf2 l       .text  00000000 
d000daf2 l       .text  00000000 
d000dafa l       .text  00000000 
d000dafa l       .text  00000000 
d000dafc l       .text  00000000 
d000dafc l       .text  00000000 
d000dafe l       .text  00000000 
d000dafe l       .text  00000000 
d000dafe l       .text  00000000 
d000dafe l       .text  00000000 
d000db02 l       .text  00000000 
d000db02 l       .text  00000000 
d000db06 l       .text  00000000 
d000db06 l       .text  00000000 
d000db12 l       .text  00000000 
d000db12 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db18 l       .text  00000000 
d000db18 l       .text  00000000 
d000db1a l       .text  00000000 
d000db1a l       .text  00000000 
d000db1c l       .text  00000000 
d000db20 l       .text  00000000 
d000db20 l       .text  00000000 
d000db2c l       .text  00000000 
d000db2c l       .text  00000000 
d000db2e l       .text  00000000 
d000db2e l       .text  00000000 
d000db30 l       .text  00000000 
d000db30 l       .text  00000000 
d000db32 l       .text  00000000 
d000db32 l       .text  00000000 
d000db34 l       .text  00000000 
d000db34 l       .text  00000000 
d000db36 l       .text  00000000 
d000db36 l       .text  00000000 
d000db36 l       .text  00000000 
d000db3a l       .text  00000000 
d000db3a l       .text  00000000 
d000db3e l       .text  00000000 
d000db3e l       .text  00000000 
d000db3e l       .text  00000000 
d000db3e l       .text  00000000 
d000db40 l       .text  00000000 
d000db44 l       .text  00000000 
d000db54 l       .text  00000000 
d000db54 l       .text  00000000 
d000db56 l       .text  00000000 
d000db56 l       .text  00000000 
d000db62 l       .text  00000000 
d000db62 l       .text  00000000 
d000db64 l       .text  00000000 
d000db66 l       .text  00000000 
d000db66 l       .text  00000000 
d000db66 l       .text  00000000 
d000db66 l       .text  00000000 
d000db66 l       .text  00000000 
d000db6a l       .text  00000000 
d000db6a l       .text  00000000 
d000db6c l       .text  00000000 
d000db6c l       .text  00000000 
d000db6e l       .text  00000000 
d000db6e l       .text  00000000 
d000db6e l       .text  00000000 
d000db6e l       .text  00000000 
d000db6e l       .text  00000000 
d000db76 l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db7c l       .text  00000000 
d000db7c l       .text  00000000 
d000db7c l       .text  00000000 
d000db7e l       .text  00000000 
d000db82 l       .text  00000000 
d000db90 l       .text  00000000 
d000db98 l       .text  00000000 
d000db98 l       .text  00000000 
d000dba6 l       .text  00000000 
d000dba6 l       .text  00000000 
d000dba8 l       .text  00000000 
d000dba8 l       .text  00000000 
d000dbac l       .text  00000000 
d000dbac l       .text  00000000 
d000dbb0 l       .text  00000000 
d000dbc0 l       .text  00000000 
d000dbc0 l       .text  00000000 
d000dbc2 l       .text  00000000 
d000dbd0 l     F .text  00000068 otbn_write
d000dbc2 l       .text  00000000 
d000dbc4 l       .text  00000000 
d000dbc4 l       .text  00000000 
d000dbc8 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd2 l       .text  00000000 
d000dbda l       .text  00000000 
d000dbdc l       .text  00000000 
d000dbde l       .text  00000000 
d000dbe0 l       .text  00000000 
d000dbe0 l       .text  00000000 
d000dbe2 l       .text  00000000 
d000dbe2 l       .text  00000000 
d000dbe4 l       .text  00000000 
d000dbe4 l       .text  00000000 
d000dbe6 l       .text  00000000 
d000dbe6 l       .text  00000000 
d000dbea l       .text  00000000 
d000dbea l       .text  00000000 
d000dbec l       .text  00000000 
d000dbf0 l       .text  00000000 
d000dbf0 l       .text  00000000 
d000dbf4 l       .text  00000000 
d000dbfa l       .text  00000000 
d000dbfc l       .text  00000000 
d000dbfe l       .text  00000000 
d000dbfe l       .text  00000000 
d000dc00 l       .text  00000000 
d000dc00 l       .text  00000000 
d000dc02 l       .text  00000000 
d000dc02 l       .text  00000000 
d000dc04 l       .text  00000000 
d000dc04 l       .text  00000000 
d000dc08 l       .text  00000000 
d000dc08 l       .text  00000000 
d000dc0a l       .text  00000000 
d000dc0c l       .text  00000000 
d000dc0e l       .text  00000000 
d000dc1a l       .text  00000000 
d000dc1a l       .text  00000000 
d000dc1c l       .text  00000000 
d000dc1c l       .text  00000000 
d000dc20 l       .text  00000000 
d000dc20 l       .text  00000000 
d000dc2c l       .text  00000000 
d000dc2e l       .text  00000000 
d000dc30 l       .text  00000000 
d000dc32 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc40 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dc48 l       .text  00000000 
d000dc48 l       .text  00000000 
d000dc48 l       .text  00000000 
d000dc4a l       .text  00000000 
d000dc4e l       .text  00000000 
d000dc60 l       .text  00000000 
d000dc68 l       .text  00000000 
d000dc68 l       .text  00000000 
d000dc76 l       .text  00000000 
d000dc76 l       .text  00000000 
d000dc78 l       .text  00000000 
d000dc78 l       .text  00000000 
d000dc7c l       .text  00000000 
d000dc7c l       .text  00000000 
d000dc80 l       .text  00000000 
d000dc90 l       .text  00000000 
d000dc90 l       .text  00000000 
d000dc92 l       .text  00000000 
d000dc92 l       .text  00000000 
d000dc94 l       .text  00000000 
d000dc94 l       .text  00000000 
d000dc98 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca4 l       .text  00000000 
d000dcb6 l       .text  00000000 
d000dcbe l       .text  00000000 
d000dcbe l       .text  00000000 
d000dccc l       .text  00000000 
d000dccc l       .text  00000000 
d000dcce l       .text  00000000 
d000dcce l       .text  00000000 
d000dcd2 l       .text  00000000 
d000dcd2 l       .text  00000000 
d000dcd8 l       .text  00000000 
d000dcd8 l       .text  00000000 
d000dce4 l       .text  00000000 
d000dce4 l       .text  00000000 
d000dce4 l       .text  00000000 
d000dce4 l       .text  00000000 
d000dce6 l       .text  00000000 
d000dce6 l       .text  00000000 
d000dcea l       .text  00000000 
d000dcea l       .text  00000000 
d000dcf0 l       .text  00000000 
d000dcf2 l       .text  00000000 
d000dcf2 l       .text  00000000 
d000dcf4 l       .text  00000000 
d000dcf4 l       .text  00000000 
d000dcf6 l       .text  00000000 
d000dcf8 l       .text  00000000 
d000dcf8 l       .text  00000000 
d000dcfa l       .text  00000000 
d000dcfa l       .text  00000000 
d000dd02 l       .text  00000000 
d000dd02 l       .text  00000000 
d000dd10 l       .text  00000000 
d000dd10 l       .text  00000000 
d000dd12 l       .text  00000000 
d000dd12 l       .text  00000000 
d000dd16 l       .text  00000000 
d000dd16 l       .text  00000000 
0000bbc5 l       .debug_loc     00000000 
0000bbed l       .debug_loc     00000000 
0000bc13 l       .debug_loc     00000000 
0000bc39 l       .debug_loc     00000000 
0000bc5f l       .debug_loc     00000000 
0000bc85 l       .debug_loc     00000000 
0000bcab l       .debug_loc     00000000 
0000bceb l       .debug_loc     00000000 
0000bd06 l       .debug_loc     00000000 
0000bd2c l       .debug_loc     00000000 
0000bd53 l       .debug_loc     00000000 
0000bd7a l       .debug_loc     00000000 
0000bdb6 l       .debug_loc     00000000 
0000bdd1 l       .debug_loc     00000000 
0000bdf7 l       .debug_loc     00000000 
0000be12 l       .debug_loc     00000000 
0000be2d l       .debug_loc     00000000 
0000be48 l       .debug_loc     00000000 
0000be63 l       .debug_loc     00000000 
0000be7e l       .debug_loc     00000000 
0000bea4 l       .debug_loc     00000000 
0000beca l       .debug_loc     00000000 
0000bef0 l       .debug_loc     00000000 
0000bf16 l       .debug_loc     00000000 
0000bf3d l       .debug_loc     00000000 
0000bf79 l       .debug_loc     00000000 
0000bfaa l       .debug_loc     00000000 
0000bfd0 l       .debug_loc     00000000 
0000bfeb l       .debug_loc     00000000 
0000c006 l       .debug_loc     00000000 
0000c021 l       .debug_loc     00000000 
0000c03c l       .debug_loc     00000000 
0000c062 l       .debug_loc     00000000 
0000c088 l       .debug_loc     00000000 
0000c0ae l       .debug_loc     00000000 
0000c0c9 l       .debug_loc     00000000 
0000c0ef l       .debug_loc     00000000 
0000c12c l       .debug_loc     00000000 
0000c153 l       .debug_loc     00000000 
0000c190 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007a39 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001070 l       .debug_ranges  00000000 
00007a66 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007a79 l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00007b15 l       .debug_str     00000000 
00007a8c l       .debug_str     00000000 
00007a9c l       .debug_str     00000000 
00007ab3 l       .debug_str     00000000 
00007ace l       .debug_str     00000000 
00007ae9 l       .debug_str     00000000 
00007b03 l       .debug_str     00000000 
00007b59 l       .debug_str     00000000 
00007b21 l       .debug_str     00000000 
00007b31 l       .debug_str     00000000 
00007b45 l       .debug_str     00000000 
0000793d l       .debug_str     00000000 
000077bc l       .debug_str     00000000 
000077d0 l       .debug_str     00000000 
000077e8 l       .debug_str     00000000 
00007800 l       .debug_str     00000000 
00007816 l       .debug_str     00000000 
0000782e l       .debug_str     00000000 
0000783f l       .debug_str     00000000 
0000785d l       .debug_str     00000000 
0000787b l       .debug_str     00000000 
00007898 l       .debug_str     00000000 
000078b5 l       .debug_str     00000000 
000078d5 l       .debug_str     00000000 
000078f2 l       .debug_str     00000000 
00007912 l       .debug_str     00000000 
0000792c l       .debug_str     00000000 
00007bf7 l       .debug_str     00000000 
00007b62 l       .debug_str     00000000 
00007b71 l       .debug_str     00000000 
00002333 l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00001ba7 l       .debug_str     00000000 
00007942 l       .debug_str     00000000 
0000357f l       .debug_str     00000000 
00000fe8 l       .debug_ranges  00000000 
00007c04 l       .debug_str     00000000 
00007b7d l       .debug_str     00000000 
00007c29 l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
00007a25 l       .debug_str     00000000 
00002bf9 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00001008 l       .debug_ranges  00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007997 l       .debug_str     00000000 
00007b83 l       .debug_str     00000000 
00003206 l       .debug_str     00000000 
00007ba5 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000079f5 l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00007bae l       .debug_str     00000000 
00007bc0 l       .debug_str     00000000 
00007720 l       .debug_str     00000000 
000079af l       .debug_str     00000000 
00007bd0 l       .debug_str     00000000 
00007be1 l       .debug_str     00000000 
00007bee l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000079c2 l       .debug_str     00000000 
000018b6 l       .debug_str     00000000 
0000109a l       .debug_str     00000000 
000079d2 l       .debug_str     00000000 
000079e5 l       .debug_str     00000000 
00007a02 l       .debug_str     00000000 
00002919 l       .debug_str     00000000 
00001020 l       .debug_ranges  00000000 
00001038 l       .debug_ranges  00000000 
00007c0f l       .debug_str     00000000 
00001058 l       .debug_ranges  00000000 
00007c1e l       .debug_str     00000000 
000011b8 l       .debug_frame   00000000 
d000dace l       .text  00000000 
d000daf0 l       .text  00000000 
d000db66 l       .text  00000000 
d000db6e l       .text  00000000 
d000db7a l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dc38 l       .text  00000000 
d000dc46 l       .text  00000000 
d000dca0 l       .text  00000000 
d000dd16 l       .text  00000000 
00000000 l    df *ABS*  00000000 rnd.c
d000dd16 l       .text  00000000 
d000dd16 l       .text  00000000 
d000dd16 l       .text  00000000 
d000dd18 l       .text  00000000 
d000dd18 l       .text  00000000 
d000dd1a l       .text  00000000 
d000dd20 l       .text  00000000 
d000dd20 l       .text  00000000 
d000dd24 l       .text  00000000 
d000dd28 l       .text  00000000 
d000dd2c l       .text  00000000 
d000dd2c l       .text  00000000 
d000dd2e l       .text  00000000 
d000dd2e l       .text  00000000 
d000dd30 l       .text  00000000 
d000dd34 l       .text  00000000 
d000dd34 l       .text  00000000 
d000dd38 l       .text  00000000 
d000dd38 l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3c l       .text  00000000 
d000dd3c l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
0000c1b7 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007c33 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
000009fb l       .debug_str     00000000 
00000a0d l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
0000109a l       .debug_str     00000000 
00003009 l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
000012c0 l       .debug_frame   00000000 
d000dd42 l       .text  00000000 
00000000 l    df *ABS*  00000000 epmp_state.c
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd46 l       .text  00000000 
d000dd46 l       .text  00000000 
d000dd4e l       .text  00000000 
d000dd52 l       .text  00000000 
d000dd56 l       .text  00000000 
d000dd56 l       .text  00000000 
d000dd5a l       .text  00000000 
d000dd5a l       .text  00000000 
d000dd5e l       .text  00000000 
d000dd5e l       .text  00000000 
d000dd62 l       .text  00000000 
d000dd62 l       .text  00000000 
d000dd64 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd6a l       .text  00000000 
d000dd6e l       .text  00000000 
d000dd70 l       .text  00000000 
d000dd72 l       .text  00000000 
d000dd72 l       .text  00000000 
d000dd76 l       .text  00000000 
d000dd76 l       .text  00000000 
d000dd78 l       .text  00000000 
d000dd7c l       .text  00000000 
d000dd7e l       .text  00000000 
d000dd82 l       .text  00000000 
d000dd84 l       .text  00000000 
d000dd86 l       .text  00000000 
d000dd86 l       .text  00000000 
d000dd8a l       .text  00000000 
d000dd8a l       .text  00000000 
d000dd8c l       .text  00000000 
d000dd90 l       .text  00000000 
d000dd92 l       .text  00000000 
d000dd96 l       .text  00000000 
d000dd98 l       .text  00000000 
d000dd9a l       .text  00000000 
d000dd9a l       .text  00000000 
d000dd9e l       .text  00000000 
d000dd9e l       .text  00000000 
d000dda0 l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda6 l       .text  00000000 
d000ddaa l       .text  00000000 
d000ddac l       .text  00000000 
d000ddae l       .text  00000000 
d000ddae l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddb4 l       .text  00000000 
d000ddb8 l       .text  00000000 
d000ddba l       .text  00000000 
d000ddbe l       .text  00000000 
d000ddc0 l       .text  00000000 
d000ddc2 l       .text  00000000 
d000ddc2 l       .text  00000000 
d000ddc6 l       .text  00000000 
d000ddc6 l       .text  00000000 
d000ddc8 l       .text  00000000 
d000ddcc l       .text  00000000 
d000ddce l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd4 l       .text  00000000 
d000ddd6 l       .text  00000000 
d000ddd6 l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000dddc l       .text  00000000 
d000dde0 l       .text  00000000 
d000dde2 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde8 l       .text  00000000 
d000ddea l       .text  00000000 
d000ddea l       .text  00000000 
d000ddee l       .text  00000000 
d000ddee l       .text  00000000 
d000ddf0 l       .text  00000000 
d000ddf4 l       .text  00000000 
d000ddf6 l       .text  00000000 
d000ddfa l       .text  00000000 
d000ddfc l       .text  00000000 
d000ddfe l       .text  00000000 
d000ddfe l       .text  00000000 
d000de02 l       .text  00000000 
d000de02 l       .text  00000000 
d000de04 l       .text  00000000 
d000de08 l       .text  00000000 
d000de0a l       .text  00000000 
d000de0e l       .text  00000000 
d000de10 l       .text  00000000 
d000de12 l       .text  00000000 
d000de12 l       .text  00000000 
d000de16 l       .text  00000000 
d000de16 l       .text  00000000 
d000de18 l       .text  00000000 
d000de1c l       .text  00000000 
d000de1e l       .text  00000000 
d000de22 l       .text  00000000 
d000de24 l       .text  00000000 
d000de26 l       .text  00000000 
d000de26 l       .text  00000000 
d000de2a l       .text  00000000 
d000de2a l       .text  00000000 
d000de2c l       .text  00000000 
d000de30 l       .text  00000000 
d000de32 l       .text  00000000 
d000de36 l       .text  00000000 
d000de38 l       .text  00000000 
d000de3a l       .text  00000000 
d000de3a l       .text  00000000 
d000de3e l       .text  00000000 
d000de3e l       .text  00000000 
d000de40 l       .text  00000000 
d000de44 l       .text  00000000 
d000de46 l       .text  00000000 
d000de4a l       .text  00000000 
d000de4c l       .text  00000000 
d000de4e l       .text  00000000 
d000de4e l       .text  00000000 
d000de52 l       .text  00000000 
d000de52 l       .text  00000000 
d000de54 l       .text  00000000 
d000de58 l       .text  00000000 
d000de5a l       .text  00000000 
d000de5e l       .text  00000000 
d000de60 l       .text  00000000 
d000de62 l       .text  00000000 
d000de62 l       .text  00000000 
d000de66 l       .text  00000000 
d000de66 l       .text  00000000 
d000de68 l       .text  00000000 
d000de6c l       .text  00000000 
d000de6e l       .text  00000000 
d000de72 l       .text  00000000 
d000de74 l       .text  00000000 
d000de76 l       .text  00000000 
d000de76 l       .text  00000000 
d000de7a l       .text  00000000 
d000de7a l       .text  00000000 
d000de7c l       .text  00000000 
d000de80 l       .text  00000000 
d000de82 l       .text  00000000 
d000de86 l       .text  00000000 
d000de88 l       .text  00000000 
d000de8a l       .text  00000000 
d000de8a l       .text  00000000 
d000de8e l       .text  00000000 
d000de8e l       .text  00000000 
d000de90 l       .text  00000000 
d000de94 l       .text  00000000 
d000de96 l       .text  00000000 
d000de9a l       .text  00000000 
d000de9c l       .text  00000000 
d000de9e l       .text  00000000 
d000de9e l       .text  00000000 
d000dea2 l       .text  00000000 
d000dea2 l       .text  00000000 
d000dea4 l       .text  00000000 
d000dea8 l       .text  00000000 
d000deaa l       .text  00000000 
d000deae l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb2 l       .text  00000000 
d000deb2 l       .text  00000000 
d000deb6 l       .text  00000000 
d000deb6 l       .text  00000000 
d000deb8 l       .text  00000000 
d000debc l       .text  00000000 
d000debe l       .text  00000000 
d000dec2 l       .text  00000000 
d000dec4 l       .text  00000000 
d000dec6 l       .text  00000000 
d000dec6 l       .text  00000000 
d000deca l       .text  00000000 
d000deca l       .text  00000000 
d000decc l       .text  00000000 
d000ded0 l       .text  00000000 
d000ded2 l       .text  00000000 
d000ded6 l       .text  00000000 
d000ded8 l       .text  00000000 
d000deda l       .text  00000000 
d000deda l       .text  00000000 
d000dede l       .text  00000000 
d000dede l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee4 l       .text  00000000 
d000dee6 l       .text  00000000 
d000deec l       .text  00000000 
d000deec l       .text  00000000 
d000deee l       .text  00000000 
d000deee l       .text  00000000 
d000def2 l       .text  00000000 
d000def2 l       .text  00000000 
d000def4 l       .text  00000000 
d000def6 l       .text  00000000 
d000def8 l       .text  00000000 
d000defc l       .text  00000000 
d000defe l       .text  00000000 
d000defe l       .text  00000000 
d000df00 l       .text  00000000 
d000df00 l       .text  00000000 
d000df02 l       .text  00000000 
d000df02 l       .text  00000000 
d000df06 l       .text  00000000 
d000df06 l       .text  00000000 
d000df12 l       .text  00000000 
d000df16 l       .text  00000000 
d000df16 l       .text  00000000 
d000df1a l       .text  00000000 
d000df26 l       .text  00000000 
d000df28 l       .text  00000000 
d000df28 l       .text  00000000 
d000df2c l       .text  00000000 
d000df2e l       .text  00000000 
d000df30 l       .text  00000000 
d000df30 l       .text  00000000 
0000c1ca l       .debug_loc     00000000 
0000c1f0 l       .debug_loc     00000000 
0000c216 l       .debug_loc     00000000 
0000c242 l       .debug_loc     00000000 
0000c262 l       .debug_loc     00000000 
0000c281 l       .debug_loc     00000000 
0000c2a1 l       .debug_loc     00000000 
0000c2c7 l       .debug_loc     00000000 
0000c2e2 l       .debug_loc     00000000 
0000c2fd l       .debug_loc     00000000 
0000c31a l       .debug_loc     00000000 
0000c33a l       .debug_loc     00000000 
0000c359 l       .debug_loc     00000000 
0000c379 l       .debug_loc     00000000 
0000c39f l       .debug_loc     00000000 
0000c3ba l       .debug_loc     00000000 
0000c3d5 l       .debug_loc     00000000 
0000c402 l       .debug_loc     00000000 
0000c41d l       .debug_loc     00000000 
0000c43d l       .debug_loc     00000000 
0000c45c l       .debug_loc     00000000 
0000c47c l       .debug_loc     00000000 
0000c4a2 l       .debug_loc     00000000 
0000c4e0 l       .debug_loc     00000000 
0000c4fb l       .debug_loc     00000000 
0000c516 l       .debug_loc     00000000 
0000c531 l       .debug_loc     00000000 
0000c54c l       .debug_loc     00000000 
0000c567 l       .debug_loc     00000000 
0000c582 l       .debug_loc     00000000 
0000c59d l       .debug_loc     00000000 
0000c5b8 l       .debug_loc     00000000 
0000c5d3 l       .debug_loc     00000000 
0000c5ee l       .debug_loc     00000000 
0000c609 l       .debug_loc     00000000 
0000c624 l       .debug_loc     00000000 
0000c63f l       .debug_loc     00000000 
0000c65a l       .debug_loc     00000000 
0000c675 l       .debug_loc     00000000 
0000c690 l       .debug_loc     00000000 
0000c6ab l       .debug_loc     00000000 
0000c6c6 l       .debug_loc     00000000 
0000c6e1 l       .debug_loc     00000000 
0000c6fc l       .debug_loc     00000000 
0000c717 l       .debug_loc     00000000 
0000c73d l       .debug_loc     00000000 
0000c774 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007c5f l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000010e0 l       .debug_ranges  00000000 
00006884 l       .debug_str     00000000 
000068a6 l       .debug_str     00000000 
0000688f l       .debug_str     00000000 
00006896 l       .debug_str     00000000 
0000689e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000009f1 l       .debug_str     00000000 
000005dd l       .debug_str     00000000 
000005e6 l       .debug_str     00000000 
000005f4 l       .debug_str     00000000 
00000615 l       .debug_str     00000000 
0000062b l       .debug_str     00000000 
00000647 l       .debug_str     00000000 
0000065c l       .debug_str     00000000 
00000678 l       .debug_str     00000000 
00000694 l       .debug_str     00000000 
000006a8 l       .debug_str     00000000 
000006bc l       .debug_str     00000000 
000006d1 l       .debug_str     00000000 
000006ea l       .debug_str     00000000 
000006fe l       .debug_str     00000000 
00000712 l       .debug_str     00000000 
00000722 l       .debug_str     00000000 
00000735 l       .debug_str     00000000 
0000074f l       .debug_str     00000000 
00000766 l       .debug_str     00000000 
00000780 l       .debug_str     00000000 
0000079c l       .debug_str     00000000 
000007b8 l       .debug_str     00000000 
000007cf l       .debug_str     00000000 
000007e5 l       .debug_str     00000000 
000007fd l       .debug_str     00000000 
00000815 l       .debug_str     00000000 
0000082e l       .debug_str     00000000 
00000847 l       .debug_str     00000000 
00000860 l       .debug_str     00000000 
00000879 l       .debug_str     00000000 
00000898 l       .debug_str     00000000 
000008b6 l       .debug_str     00000000 
000008d0 l       .debug_str     00000000 
000008e9 l       .debug_str     00000000 
00000905 l       .debug_str     00000000 
00000923 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
0000095b l       .debug_str     00000000 
00000977 l       .debug_str     00000000 
0000098e l       .debug_str     00000000 
000009a7 l       .debug_str     00000000 
000009bd l       .debug_str     00000000 
000009dc l       .debug_str     00000000 
00001621 l       .debug_str     00000000 
00007c8a l       .debug_str     00000000 
00007c97 l       .debug_str     00000000 
00002ff5 l       .debug_str     00000000 
00007c9e l       .debug_str     00000000 
00004c9f l       .debug_str     00000000 
00000fe2 l       .debug_str     00000000 
00007152 l       .debug_str     00000000 
000070bc l       .debug_str     00000000 
000070ce l       .debug_str     00000000 
000070e6 l       .debug_str     00000000 
000070fe l       .debug_str     00000000 
00007117 l       .debug_str     00000000 
00007132 l       .debug_str     00000000 
00007192 l       .debug_str     00000000 
0000715c l       .debug_str     00000000 
00007169 l       .debug_str     00000000 
00007176 l       .debug_str     00000000 
00007183 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000fff l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
0000719c l       .debug_str     00000000 
00001e70 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00007157 l       .debug_str     00000000 
000071dc l       .debug_str     00000000 
000071c1 l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
00000fba l       .debug_str     00000000 
000071b5 l       .debug_str     00000000 
00001539 l       .debug_str     00000000 
0000152d l       .debug_str     00000000 
00007606 l       .debug_str     00000000 
00007616 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
000012ec l       .debug_frame   00000000 
d000df30 l       .text  00000000 
00000000 l    df *ABS*  00000000 hmac.c
d000df30 l       .text  00000000 
d000df30 l       .text  00000000 
d000df30 l       .text  00000000 
d000df34 l       .text  00000000 
d000df34 l       .text  00000000 
d000df38 l       .text  00000000 
d000df38 l       .text  00000000 
d000df3e l       .text  00000000 
d000df3e l       .text  00000000 
d000df42 l       .text  00000000 
d000df42 l       .text  00000000 
d000df46 l       .text  00000000 
d000df46 l       .text  00000000 
d000df48 l       .text  00000000 
d000df48 l       .text  00000000 
d000df4a l       .text  00000000 
d000df4a l       .text  00000000 
d000df4a l       .text  00000000 
d000df4a l       .text  00000000 
d000df4a l       .text  00000000 
d000df4a l       .text  00000000 
d000df4e l       .text  00000000 
d000df58 l       .text  00000000 
d000df62 l       .text  00000000 
d000df62 l       .text  00000000 
d000df66 l       .text  00000000 
d000df6a l       .text  00000000 
d000df6a l       .text  00000000 
d000df6e l       .text  00000000 
d000df6e l       .text  00000000 
d000df70 l       .text  00000000 
d000df74 l       .text  00000000 
d000df7e l       .text  00000000 
d000df86 l       .text  00000000 
d000df86 l       .text  00000000 
d000df88 l       .text  00000000 
d000df8a l       .text  00000000 
d000df8e l       .text  00000000 
d000df94 l       .text  00000000 
d000df94 l       .text  00000000 
d000df96 l       .text  00000000 
d000df96 l       .text  00000000 
d000df9a l       .text  00000000 
d000df9a l       .text  00000000 
d000df9c l       .text  00000000 
d000df9c l       .text  00000000 
d000df9e l       .text  00000000 
d000df9e l       .text  00000000 
d000dfa2 l       .text  00000000 
d000dfa2 l       .text  00000000 
d000dfa8 l       .text  00000000 
d000dfac l       .text  00000000 
d000dfae l       .text  00000000 
d000dfb0 l       .text  00000000 
d000dfb0 l       .text  00000000 
d000dfb6 l       .text  00000000 
d000dfb6 l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfc2 l       .text  00000000 
d000dfc2 l       .text  00000000 
d000dfc4 l       .text  00000000 
d000dfc4 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfca l       .text  00000000 
d000dfca l       .text  00000000 
d000dfcc l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfd8 l       .text  00000000 
d000dfd8 l       .text  00000000 
d000dfdc l       .text  00000000 
d000dfdc l       .text  00000000 
d000dfde l       .text  00000000 
d000dfde l       .text  00000000 
d000dfe4 l       .text  00000000 
d000dfe4 l       .text  00000000 
d000dfe6 l       .text  00000000 
d000dfe8 l       .text  00000000 
d000dfec l       .text  00000000 
d000dfec l       .text  00000000 
d000dfee l       .text  00000000 
d000dfee l       .text  00000000 
0000c79a l       .debug_loc     00000000 
0000c7c2 l       .debug_loc     00000000 
0000c7e8 l       .debug_loc     00000000 
0000c824 l       .debug_loc     00000000 
0000c83f l       .debug_loc     00000000 
0000c866 l       .debug_loc     00000000 
0000c881 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007ca3 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001120 l       .debug_ranges  00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002846 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000014a2 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
00007cd0 l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000014b3 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00007ce0 l       .debug_str     00000000 
00001108 l       .debug_ranges  00000000 
00007cea l       .debug_str     00000000 
000022c0 l       .debug_str     00000000 
00002348 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
0000635f l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000015b0 l       .debug_str     00000000 
000014e6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001340 l       .debug_frame   00000000 
d000df4a l       .text  00000000 
d000dfb8 l       .text  00000000 
d000dfee l       .text  00000000 
00000000 l    df *ABS*  00000000 lifecycle.c
d000dfee l       .text  00000000 
d000dfee l       .text  00000000 
d000dfee l       .text  00000000 
d000dff0 l       .text  00000000 
d000dff2 l       .text  00000000 
d000dffa l       .text  00000000 
d000dffa l       .text  00000000 
d000dffc l       .text  00000000 
d000dffc l       .text  00000000 
d000e002 l       .text  00000000 
d000e002 l       .text  00000000 
d000e004 l       .text  00000000 
d000e004 l       .text  00000000 
d000e006 l       .text  00000000 
d000e006 l       .text  00000000 
d000e00e l       .text  00000000 
d000e00e l       .text  00000000 
d000e012 l       .text  00000000 
d000e012 l       .text  00000000 
d000e01a l       .text  00000000 
d000e01e l       .text  00000000 
d000e026 l       .text  00000000 
d000e02a l       .text  00000000 
d000e032 l       .text  00000000 
d000e036 l       .text  00000000 
d000e044 l       .text  00000000 
d000e04c l       .text  00000000 
d000e050 l       .text  00000000 
d000e058 l       .text  00000000 
d000e05c l       .text  00000000 
d000e064 l       .text  00000000 
d000e068 l       .text  00000000 
d000e076 l       .text  00000000 
d000e07a l       .text  00000000 
d000e07e l       .text  00000000 
d000e086 l       .text  00000000 
d000e08a l       .text  00000000 
d000e098 l       .text  00000000 
d000e09c l       .text  00000000 
d000e0a0 l       .text  00000000 
d000e0a8 l       .text  00000000 
d000e0ac l       .text  00000000 
d000e0bc l       .text  00000000 
d000e0bc l       .text  00000000 
d000e0c2 l       .text  00000000 
d000e0c2 l       .text  00000000 
d000e0d0 l       .text  00000000 
d000e0de l       .text  00000000 
d000e0e6 l       .text  00000000 
d000e0f4 l       .text  00000000 
d000e0fc l       .text  00000000 
d000e10c l       .text  00000000 
d000e10c l       .text  00000000 
d000e112 l       .text  00000000 
d000e11a l       .text  00000000 
d000e11e l       .text  00000000 
d000e12c l       .text  00000000 
d000e134 l       .text  00000000 
d000e138 l       .text  00000000 
d000e148 l       .text  00000000 
d000e148 l       .text  00000000 
d000e14e l       .text  00000000 
d000e156 l       .text  00000000 
d000e15a l       .text  00000000 
d000e166 l       .text  00000000 
d000e16a l       .text  00000000 
d000e16e l       .text  00000000 
d000e174 l       .text  00000000 
d000e174 l       .text  00000000 
d000e17c l       .text  00000000 
d000e180 l       .text  00000000 
d000e190 l       .text  00000000 
d000e190 l       .text  00000000 
d000e196 l       .text  00000000 
d000e196 l       .text  00000000 
d000e19e l       .text  00000000 
d000e19e l       .text  00000000 
d000e19e l       .text  00000000 
d000e19e l       .text  00000000 
d000e19e l       .text  00000000 
d000e1a0 l       .text  00000000 
d000e1aa l       .text  00000000 
d000e1ac l       .text  00000000 
d000e1ba l       .text  00000000 
d000e1ba l       .text  00000000 
d000e1c0 l       .text  00000000 
d000e1c0 l       .text  00000000 
d000e1c4 l       .text  00000000 
d000e1c6 l       .text  00000000 
d000e1c6 l       .text  00000000 
d000e1c8 l       .text  00000000 
d000e1c8 l       .text  00000000 
d000e1cc l       .text  00000000 
d000e1cc l       .text  00000000 
d000e1d0 l       .text  00000000 
d000e1da l       .text  00000000 
d000e1da l       .text  00000000 
d000e1da l       .text  00000000 
d000e1da l       .text  00000000 
d000e1da l       .text  00000000 
d000e1dc l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e2 l       .text  00000000 
d000e1ea l       .text  00000000 
d000e1ec l       .text  00000000 
d000e1ec l       .text  00000000 
d000e1f0 l       .text  00000000 
d000e1f0 l       .text  00000000 
d000e1f8 l       .text  00000000 
d000e1fa l       .text  00000000 
d000e200 l       .text  00000000 
d000e200 l       .text  00000000 
0000c8b4 l       .debug_loc     00000000 
0000c8db l       .debug_loc     00000000 
0000c901 l       .debug_loc     00000000 
0000c953 l       .debug_loc     00000000 
0000c97a l       .debug_loc     00000000 
0000c995 l       .debug_loc     00000000 
0000c9bb l       .debug_loc     00000000 
0000c9ee l       .debug_loc     00000000 
0000ca14 l       .debug_loc     00000000 
0000ca39 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007cf7 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001140 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000026a0 l       .debug_str     00000000 
00007308 l       .debug_str     00000000 
00007d29 l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000028e7 l       .debug_str     00000000 
00000efb l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
00001027 l       .debug_str     00000000 
00001016 l       .debug_str     00000000 
00000ffa l       .debug_str     00000000 
00001e81 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000010b0 l       .debug_str     00000000 
00002fcc l       .debug_str     00000000 
0000339c l       .debug_str     00000000 
00007497 l       .debug_str     00000000 
000012b7 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
000028a6 l       .debug_str     00000000 
000028e0 l       .debug_str     00000000 
000031bb l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000012c1 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00002906 l       .debug_str     00000000 
000028d6 l       .debug_str     00000000 
000028bb l       .debug_str     00000000 
000028cd l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000108b l       .debug_str     00000000 
00001384 l       .debug_frame   00000000 
d000e19e l       .text  00000000 
d000e1da l       .text  00000000 
d000e200 l       .text  00000000 
00000000 l    df *ABS*  00000000 otp.c
d000e200 l       .text  00000000 
d000e200 l       .text  00000000 
d000e200 l       .text  00000000 
d000e204 l       .text  00000000 
d000e206 l       .text  00000000 
d000e206 l       .text  00000000 
d000e208 l       .text  00000000 
d000e208 l       .text  00000000 
d000e208 l       .text  00000000 
0000ca54 l       .debug_loc     00000000 
0000ca6f l       .debug_loc     00000000 
0000ca8a l       .debug_loc     00000000 
0000caa8 l       .debug_loc     00000000 
0000cae4 l       .debug_loc     00000000 
0000caff l       .debug_loc     00000000 
0000cb25 l       .debug_loc     00000000 
0000cb4b l       .debug_loc     00000000 
0000cb69 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007d41 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001168 l       .debug_ranges  00000000 
000026a0 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000010a5 l       .debug_str     00000000 
00006765 l       .debug_str     00000000 
0000339c l       .debug_str     00000000 
00007d6d l       .debug_str     00000000 
0000286d l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00007d78 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
00007a25 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00007d81 l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
00001400 l       .debug_frame   00000000 
d000e208 l       .text  00000000 
00000000 l    df *ABS*  00000000 sec_mmio.c
d000e208 l       .text  00000000 
d000e208 l       .text  00000000 
d000e208 l       .text  00000000 
d000e208 l       .text  00000000 
d000e20a l       .text  00000000 
d000e20a l       .text  00000000 
d000e20c l       .text  00000000 
d000e20c l       .text  00000000 
d000e20e l       .text  00000000 
d000e20e l       .text  00000000 
d000e210 l       .text  00000000 
d000e210 l       .text  00000000 
d000e210 l       .text  00000000 
d000e210 l       .text  00000000 
d000e218 l       .text  00000000 
d000e21a l       .text  00000000 
d000e21a l       .text  00000000 
d000e21a l       .text  00000000 
d000e21a l       .text  00000000 
d000e21c l       .text  00000000 
d000e21c l       .text  00000000 
d000e21c l       .text  00000000 
d000e21c l       .text  00000000 
d000e21e l       .text  00000000 
d000e21e l       .text  00000000 
d000e21e l       .text  00000000 
d000e21e l       .text  00000000 
d000e226 l       .text  00000000 
d000e226 l       .text  00000000 
d000e22e l       .text  00000000 
d000e230 l       .text  00000000 
d000e230 l       .text  00000000 
d000e232 l       .text  00000000 
d000e234 l       .text  00000000 
d000e236 l       .text  00000000 
d000e236 l       .text  00000000 
d000e23e l       .text  00000000 
d000e240 l       .text  00000000 
d000e240 l       .text  00000000 
d000e242 l       .text  00000000 
d000e242 l       .text  00000000 
d000e244 l       .text  00000000 
d000e246 l       .text  00000000 
d000e254 l       .text  00000000 
d000e254 l       .text  00000000 
d000e260 l       .text  00000000 
d000e262 l       .text  00000000 
d000e262 l       .text  00000000 
d000e262 l       .text  00000000 
d000e262 l       .text  00000000 
d000e262 l       .text  00000000 
d000e264 l       .text  00000000 
d000e26e l       .text  00000000 
d000e270 l       .text  00000000 
d000e270 l       .text  00000000 
d000e274 l       .text  00000000 
d000e274 l       .text  00000000 
d000e27c l       .text  00000000 
d000e27c l       .text  00000000 
d000e280 l       .text  00000000 
d000e280 l       .text  00000000 
d000e280 l       .text  00000000 
d000e280 l       .text  00000000 
d000e2a8 l     F .text  0000006e upsert_register
d000e286 l       .text  00000000 
d000e286 l       .text  00000000 
d000e288 l       .text  00000000 
d000e288 l       .text  00000000 
d000e298 l       .text  00000000 
d000e29e l       .text  00000000 
d000e2a0 l       .text  00000000 
d000e2a2 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e2b4 l       .text  00000000 
d000e2b4 l       .text  00000000 
d000e2b6 l       .text  00000000 
d000e2b6 l       .text  00000000 
d000e2b8 l       .text  00000000 
d000e2b8 l       .text  00000000 
d000e2bc l       .text  00000000 
d000e2bc l       .text  00000000 
d000e2c0 l       .text  00000000 
d000e2c0 l       .text  00000000 
d000e2c8 l       .text  00000000 
d000e2cc l       .text  00000000 
d000e2ce l       .text  00000000 
d000e2ce l       .text  00000000 
d000e2d0 l       .text  00000000 
d000e2d0 l       .text  00000000 
d000e2d8 l       .text  00000000 
d000e2d8 l       .text  00000000 
d000e2da l       .text  00000000 
d000e2da l       .text  00000000 
d000e2dc l       .text  00000000 
d000e2dc l       .text  00000000 
d000e2e0 l       .text  00000000 
d000e2e0 l       .text  00000000 
d000e2e2 l       .text  00000000 
d000e2e2 l       .text  00000000 
d000e2e6 l       .text  00000000 
d000e2e6 l       .text  00000000 
d000e2ea l       .text  00000000 
d000e2ea l       .text  00000000 
d000e2f4 l       .text  00000000 
d000e2f8 l       .text  00000000 
d000e2fa l       .text  00000000 
d000e2fe l       .text  00000000 
d000e304 l       .text  00000000 
d000e308 l       .text  00000000 
d000e314 l       .text  00000000 
d000e316 l       .text  00000000 
d000e316 l       .text  00000000 
d000e316 l       .text  00000000 
d000e316 l       .text  00000000 
d000e316 l       .text  00000000 
d000e318 l       .text  00000000 
d000e320 l       .text  00000000 
d000e322 l       .text  00000000 
d000e322 l       .text  00000000 
d000e32c l       .text  00000000 
d000e32c l       .text  00000000 
d000e330 l       .text  00000000 
d000e330 l       .text  00000000 
d000e330 l       .text  00000000 
d000e330 l       .text  00000000 
d000e334 l       .text  00000000 
d000e336 l       .text  00000000 
d000e336 l       .text  00000000 
d000e338 l       .text  00000000 
d000e338 l       .text  00000000 
d000e348 l       .text  00000000 
d000e348 l       .text  00000000 
d000e350 l       .text  00000000 
d000e356 l       .text  00000000 
d000e362 l       .text  00000000 
d000e362 l       .text  00000000 
d000e362 l       .text  00000000 
d000e362 l       .text  00000000 
d000e362 l       .text  00000000 
d000e364 l       .text  00000000 
d000e36c l       .text  00000000 
d000e36e l       .text  00000000 
d000e36e l       .text  00000000 
d000e370 l       .text  00000000 
d000e370 l       .text  00000000 
d000e37a l       .text  00000000 
d000e37a l       .text  00000000 
d000e37e l       .text  00000000 
d000e37e l       .text  00000000 
d000e37e l       .text  00000000 
d000e37e l       .text  00000000 
d000e382 l       .text  00000000 
d000e384 l       .text  00000000 
d000e384 l       .text  00000000 
d000e386 l       .text  00000000 
d000e386 l       .text  00000000 
d000e396 l       .text  00000000 
d000e396 l       .text  00000000 
d000e39e l       .text  00000000 
d000e3a4 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e3bc l       .text  00000000 
d000e3bc l       .text  00000000 
d000e3be l       .text  00000000 
d000e3be l       .text  00000000 
d000e3c0 l       .text  00000000 
d000e3c0 l       .text  00000000 
d000e3c4 l       .text  00000000 
d000e3c4 l       .text  00000000 
d000e3c6 l       .text  00000000 
d000e3ca l       .text  00000000 
d000e3ca l       .text  00000000 
d000e3ce l       .text  00000000 
d000e3d2 l       .text  00000000 
d000e3d2 l       .text  00000000 
d000e3e0 l       .text  00000000 
d000e3e0 l       .text  00000000 
d000e3e2 l       .text  00000000 
d000e3e2 l       .text  00000000 
d000e3ea l       .text  00000000 
d000e3ea l       .text  00000000 
d000e3ec l       .text  00000000 
d000e3f8 l       .text  00000000 
d000e3fc l       .text  00000000 
d000e3fc l       .text  00000000 
d000e3fe l       .text  00000000 
d000e400 l       .text  00000000 
d000e400 l       .text  00000000 
d000e402 l       .text  00000000 
d000e402 l       .text  00000000 
d000e404 l       .text  00000000 
d000e404 l       .text  00000000 
d000e408 l       .text  00000000 
d000e408 l       .text  00000000 
d000e414 l       .text  00000000 
d000e41e l       .text  00000000 
d000e420 l       .text  00000000 
d000e420 l       .text  00000000 
d000e420 l       .text  00000000 
d000e420 l       .text  00000000 
d000e420 l       .text  00000000 
d000e428 l       .text  00000000 
d000e428 l       .text  00000000 
d000e42a l       .text  00000000 
d000e42a l       .text  00000000 
d000e432 l       .text  00000000 
d000e434 l       .text  00000000 
d000e436 l       .text  00000000 
d000e438 l       .text  00000000 
d000e438 l       .text  00000000 
d000e43a l       .text  00000000 
d000e446 l       .text  00000000 
d000e448 l       .text  00000000 
d000e448 l       .text  00000000 
d000e44a l       .text  00000000 
d000e44c l       .text  00000000 
d000e44c l       .text  00000000 
d000e44c l       .text  00000000 
d000e44c l       .text  00000000 
d000e464 l       .text  00000000 
d000e46a l       .text  00000000 
d000e46c l       .text  00000000 
d000e46c l       .text  00000000 
0000cb85 l       .debug_loc     00000000 
0000cbac l       .debug_loc     00000000 
0000cbd3 l       .debug_loc     00000000 
0000cbfa l       .debug_loc     00000000 
0000cc35 l       .debug_loc     00000000 
0000cc64 l       .debug_loc     00000000 
0000cc7f l       .debug_loc     00000000 
0000cca5 l       .debug_loc     00000000 
0000ccc0 l       .debug_loc     00000000 
0000ccdb l       .debug_loc     00000000 
0000ccf6 l       .debug_loc     00000000 
0000cd33 l       .debug_loc     00000000 
0000cd5a l       .debug_loc     00000000 
0000cd75 l       .debug_loc     00000000 
0000cd9b l       .debug_loc     00000000 
0000cdc1 l       .debug_loc     00000000 
0000cde7 l       .debug_loc     00000000 
0000ce02 l       .debug_loc     00000000 
0000ce1d l       .debug_loc     00000000 
0000ce43 l       .debug_loc     00000000 
0000ce5e l       .debug_loc     00000000 
0000ce79 l       .debug_loc     00000000 
0000ce94 l       .debug_loc     00000000 
0000ced1 l       .debug_loc     00000000 
0000cef8 l       .debug_loc     00000000 
0000cf13 l       .debug_loc     00000000 
0000cf2e l       .debug_loc     00000000 
0000cf49 l       .debug_loc     00000000 
0000cf64 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007d9d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001250 l       .debug_ranges  00000000 
000068f1 l       .debug_str     00000000 
00006924 l       .debug_str     00000000 
000068fe l       .debug_str     00000000 
00006912 l       .debug_str     00000000 
00006909 l       .debug_str     00000000 
00007e63 l       .debug_str     00000000 
000011cd l       .debug_str     00000000 
0000691e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00007dcb l       .debug_str     00000000 
00007ddb l       .debug_str     00000000 
00007deb l       .debug_str     00000000 
000011be l       .debug_str     00000000 
00007b7d l       .debug_str     00000000 
00007e44 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00007e48 l       .debug_str     00000000 
00001220 l       .debug_ranges  00000000 
00001238 l       .debug_ranges  00000000 
00007e4f l       .debug_str     00000000 
00007dfa l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000103a l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
0000105a l       .debug_str     00000000 
00001684 l       .debug_str     00000000 
00001190 l       .debug_ranges  00000000 
000011a8 l       .debug_ranges  00000000 
000011c0 l       .debug_ranges  00000000 
000011d8 l       .debug_ranges  00000000 
00007e0e l       .debug_str     00000000 
000011f0 l       .debug_ranges  00000000 
000022c0 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
00000fa7 l       .debug_str     00000000 
0000339c l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
00007e37 l       .debug_str     00000000 
00007e27 l       .debug_str     00000000 
00001208 l       .debug_ranges  00000000 
00002846 l       .debug_str     00000000 
000033ac l       .debug_str     00000000 
000033c7 l       .debug_str     00000000 
000011d4 l       .debug_str     00000000 
00007e5a l       .debug_str     00000000 
00000325 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000146c l       .debug_frame   00000000 
d000e262 l       .text  00000000 
d000e2a8 l       .text  00000000 
d000e316 l       .text  00000000 
d000e362 l       .text  00000000 
d000e3b0 l       .text  00000000 
d000e420 l       .text  00000000 
d000e46c l       .text  00000000 
00000000 l    df *ABS*  00000000 memory.c
d000e46c l       .text  00000000 
d000e46c l       .text  00000000 
d000e46c l       .text  00000000 
d000e46c l       .text  00000000 
d000e474 l       .text  00000000 
d000e478 l       .text  00000000 
d000e478 l       .text  00000000 
d000e47c l       .text  00000000 
d000e47c l       .text  00000000 
d000e480 l       .text  00000000 
d000e480 l       .text  00000000 
d000e48c l       .text  00000000 
d000e48e l       .text  00000000 
d000e48e l       .text  00000000 
d000e494 l       .text  00000000 
d000e494 l       .text  00000000 
d000e498 l       .text  00000000 
d000e49a l       .text  00000000 
d000e49e l       .text  00000000 
d000e49e l       .text  00000000 
d000e4a0 l       .text  00000000 
d000e4a0 l       .text  00000000 
d000e4a2 l       .text  00000000 
d000e4a2 l       .text  00000000 
d000e4aa l       .text  00000000 
d000e4ae l       .text  00000000 
d000e4b0 l       .text  00000000 
d000e4b4 l       .text  00000000 
d000e4b8 l       .text  00000000 
d000e4b8 l       .text  00000000 
d000e4bc l       .text  00000000 
d000e4bc l       .text  00000000 
d000e4c0 l       .text  00000000 
d000e4c2 l       .text  00000000 
d000e4c2 l       .text  00000000 
d000e4c6 l       .text  00000000 
d000e4c6 l       .text  00000000 
d000e4c8 l       .text  00000000 
d000e4c8 l       .text  00000000 
d000e4ca l       .text  00000000 
d000e4ca l       .text  00000000 
d000e4ce l       .text  00000000 
d000e4ce l       .text  00000000 
d000e4d2 l       .text  00000000 
d000e4d4 l       .text  00000000 
d000e4da l       .text  00000000 
d000e4da l       .text  00000000 
d000e4de l       .text  00000000 
d000e4e2 l       .text  00000000 
d000e4ea l       .text  00000000 
d000e4ea l       .text  00000000 
d000e4ec l       .text  00000000 
d000e4ec l       .text  00000000 
d000e4ee l       .text  00000000 
d000e4ee l       .text  00000000 
d000e4f4 l       .text  00000000 
d000e4f4 l       .text  00000000 
d000e4f4 l       .text  00000000 
d000e4f4 l       .text  00000000 
d000e4f4 l       .text  00000000 
d000e4f8 l       .text  00000000 
d000e4f8 l       .text  00000000 
d000e4fc l       .text  00000000 
d000e4fc l       .text  00000000 
d000e504 l       .text  00000000 
d000e504 l       .text  00000000 
d000e508 l       .text  00000000 
d000e50c l       .text  00000000 
d000e50c l       .text  00000000 
d000e50e l       .text  00000000 
d000e50e l       .text  00000000 
d000e512 l       .text  00000000 
d000e512 l       .text  00000000 
d000e516 l       .text  00000000 
d000e516 l       .text  00000000 
d000e518 l       .text  00000000 
d000e51a l       .text  00000000 
d000e51c l       .text  00000000 
d000e51c l       .text  00000000 
d000e520 l       .text  00000000 
d000e524 l       .text  00000000 
d000e534 l       .text  00000000 
d000e534 l       .text  00000000 
d000e538 l       .text  00000000 
d000e538 l       .text  00000000 
d000e53a l       .text  00000000 
d000e53a l       .text  00000000 
d000e53c l       .text  00000000 
d000e53c l       .text  00000000 
d000e540 l       .text  00000000 
d000e540 l       .text  00000000 
d000e546 l       .text  00000000 
d000e54a l       .text  00000000 
d000e54a l       .text  00000000 
d000e54e l       .text  00000000 
d000e552 l       .text  00000000 
d000e554 l       .text  00000000 
d000e556 l       .text  00000000 
d000e556 l       .text  00000000 
d000e556 l       .text  00000000 
d000e556 l       .text  00000000 
d000e556 l       .text  00000000 
d000e55a l       .text  00000000 
d000e55a l       .text  00000000 
d000e55e l       .text  00000000 
d000e55e l       .text  00000000 
d000e56c l       .text  00000000 
d000e570 l       .text  00000000 
d000e570 l       .text  00000000 
d000e57c l       .text  00000000 
d000e57c l       .text  00000000 
d000e580 l       .text  00000000 
d000e582 l       .text  00000000 
d000e586 l       .text  00000000 
d000e586 l       .text  00000000 
d000e588 l       .text  00000000 
d000e588 l       .text  00000000 
d000e58c l       .text  00000000 
d000e58c l       .text  00000000 
d000e58e l       .text  00000000 
d000e596 l       .text  00000000 
d000e596 l       .text  00000000 
d000e59a l       .text  00000000 
d000e59a l       .text  00000000 
d000e5a2 l       .text  00000000 
d000e5aa l       .text  00000000 
d000e5ae l       .text  00000000 
d000e5b0 l       .text  00000000 
d000e5b0 l       .text  00000000 
d000e5b6 l       .text  00000000 
d000e5b6 l       .text  00000000 
d000e5b8 l       .text  00000000 
d000e5ba l       .text  00000000 
d000e5ba l       .text  00000000 
d000e5be l       .text  00000000 
d000e5be l       .text  00000000 
d000e5c2 l       .text  00000000 
d000e5c4 l       .text  00000000 
d000e5c4 l       .text  00000000 
d000e5c8 l       .text  00000000 
d000e5ca l       .text  00000000 
d000e5ca l       .text  00000000 
d000e5ce l       .text  00000000 
d000e5ce l       .text  00000000 
d000e5d0 l       .text  00000000 
d000e5d0 l       .text  00000000 
d000e5d4 l       .text  00000000 
d000e5d8 l       .text  00000000 
d000e5da l       .text  00000000 
d000e5da l       .text  00000000 
d000e5e2 l       .text  00000000 
d000e5ea l       .text  00000000 
d000e5ee l       .text  00000000 
d000e5f0 l       .text  00000000 
d000e5f0 l       .text  00000000 
d000e5f4 l       .text  00000000 
d000e5f4 l       .text  00000000 
d000e5f6 l       .text  00000000 
d000e5f8 l       .text  00000000 
d000e5fa l       .text  00000000 
d000e5fa l       .text  00000000 
d000e5fe l       .text  00000000 
d000e600 l       .text  00000000 
d000e600 l       .text  00000000 
d000e600 l       .text  00000000 
d000e600 l       .text  00000000 
d000e600 l       .text  00000000 
d000e604 l       .text  00000000 
d000e604 l       .text  00000000 
d000e608 l       .text  00000000 
d000e608 l       .text  00000000 
d000e610 l       .text  00000000 
d000e614 l       .text  00000000 
d000e618 l       .text  00000000 
d000e61a l       .text  00000000 
d000e61c l       .text  00000000 
d000e61c l       .text  00000000 
d000e620 l       .text  00000000 
d000e624 l       .text  00000000 
d000e624 l       .text  00000000 
d000e626 l       .text  00000000 
d000e628 l       .text  00000000 
d000e62a l       .text  00000000 
d000e630 l       .text  00000000 
d000e630 l       .text  00000000 
d000e632 l       .text  00000000 
d000e636 l       .text  00000000 
d000e642 l       .text  00000000 
d000e650 l       .text  00000000 
d000e650 l       .text  00000000 
d000e654 l       .text  00000000 
d000e656 l       .text  00000000 
d000e656 l       .text  00000000 
d000e65a l       .text  00000000 
d000e65e l       .text  00000000 
d000e65e l       .text  00000000 
d000e662 l       .text  00000000 
d000e666 l       .text  00000000 
d000e66a l       .text  00000000 
d000e66e l       .text  00000000 
d000e672 l       .text  00000000 
d000e672 l       .text  00000000 
d000e676 l       .text  00000000 
d000e67a l       .text  00000000 
d000e67c l       .text  00000000 
d000e67c l       .text  00000000 
d000e67e l       .text  00000000 
d000e682 l       .text  00000000 
d000e682 l       .text  00000000 
d000e68a l       .text  00000000 
d000e68e l       .text  00000000 
d000e68e l       .text  00000000 
d000e692 l       .text  00000000 
d000e696 l       .text  00000000 
d000e69a l       .text  00000000 
d000e69c l       .text  00000000 
d000e6a0 l       .text  00000000 
d000e6a0 l       .text  00000000 
d000e6a4 l       .text  00000000 
d000e6a4 l       .text  00000000 
d000e6a8 l       .text  00000000 
d000e6aa l       .text  00000000 
d000e6aa l       .text  00000000 
d000e6ae l       .text  00000000 
d000e6ae l       .text  00000000 
d000e6ae l       .text  00000000 
d000e6ae l       .text  00000000 
d000e6ae l       .text  00000000 
d000e6b2 l       .text  00000000 
d000e6b2 l       .text  00000000 
d000e6b6 l       .text  00000000 
d000e6b6 l       .text  00000000 
d000e6be l       .text  00000000 
d000e6be l       .text  00000000 
d000e6c2 l       .text  00000000 
d000e6c4 l       .text  00000000 
d000e6c8 l       .text  00000000 
d000e6c8 l       .text  00000000 
d000e6ca l       .text  00000000 
d000e6ca l       .text  00000000 
d000e6ce l       .text  00000000 
d000e6ce l       .text  00000000 
d000e6d4 l       .text  00000000 
d000e6d4 l       .text  00000000 
d000e6d8 l       .text  00000000 
d000e6d8 l       .text  00000000 
d000e6e0 l       .text  00000000 
d000e6e4 l       .text  00000000 
d000e6e4 l       .text  00000000 
d000e6e6 l       .text  00000000 
d000e6ea l       .text  00000000 
d000e6ea l       .text  00000000 
d000e6ec l       .text  00000000 
d000e6ee l       .text  00000000 
d000e6ee l       .text  00000000 
d000e6f6 l       .text  00000000 
d000e6f6 l       .text  00000000 
d000e6fa l       .text  00000000 
d000e6fa l       .text  00000000 
d000e704 l       .text  00000000 
d000e708 l       .text  00000000 
d000e708 l       .text  00000000 
d000e70c l       .text  00000000 
d000e70c l       .text  00000000 
d000e710 l       .text  00000000 
d000e714 l       .text  00000000 
d000e714 l       .text  00000000 
d000e718 l       .text  00000000 
d000e71c l       .text  00000000 
d000e71c l       .text  00000000 
d000e71e l       .text  00000000 
d000e722 l       .text  00000000 
d000e722 l       .text  00000000 
d000e726 l       .text  00000000 
d000e72a l       .text  00000000 
d000e72e l       .text  00000000 
d000e732 l       .text  00000000 
d000e736 l       .text  00000000 
d000e738 l       .text  00000000 
d000e738 l       .text  00000000 
d000e73c l       .text  00000000 
d000e73c l       .text  00000000 
d000e73e l       .text  00000000 
d000e740 l       .text  00000000 
d000e740 l       .text  00000000 
d000e748 l       .text  00000000 
d000e74c l       .text  00000000 
d000e74c l       .text  00000000 
d000e74e l       .text  00000000 
d000e752 l       .text  00000000 
d000e752 l       .text  00000000 
d000e754 l       .text  00000000 
d000e756 l       .text  00000000 
d000e756 l       .text  00000000 
d000e758 l       .text  00000000 
d000e758 l       .text  00000000 
d000e75c l       .text  00000000 
d000e75c l       .text  00000000 
d000e75e l       .text  00000000 
d000e75e l       .text  00000000 
d000e762 l       .text  00000000 
d000e762 l       .text  00000000 
d000e764 l       .text  00000000 
d000e764 l       .text  00000000 
d000e768 l       .text  00000000 
d000e768 l       .text  00000000 
d000e76a l       .text  00000000 
d000e76a l       .text  00000000 
d000e76c l       .text  00000000 
d000e76c l       .text  00000000 
d000e76e l       .text  00000000 
d000e76e l       .text  00000000 
0000cf8a l       .debug_loc     00000000 
0000cfb0 l       .debug_loc     00000000 
0000cfd6 l       .debug_loc     00000000 
0000cffc l       .debug_loc     00000000 
0000d022 l       .debug_loc     00000000 
0000d041 l       .debug_loc     00000000 
0000d060 l       .debug_loc     00000000 
0000d086 l       .debug_loc     00000000 
0000d0a1 l       .debug_loc     00000000 
0000d0ea l       .debug_loc     00000000 
0000d110 l       .debug_loc     00000000 
0000d132 l       .debug_loc     00000000 
0000d14d l       .debug_loc     00000000 
0000d168 l       .debug_loc     00000000 
0000d183 l       .debug_loc     00000000 
0000d19e l       .debug_loc     00000000 
0000d1b9 l       .debug_loc     00000000 
0000d1d4 l       .debug_loc     00000000 
0000d224 l       .debug_loc     00000000 
0000d23f l       .debug_loc     00000000 
0000d25a l       .debug_loc     00000000 
0000d27c l       .debug_loc     00000000 
0000d297 l       .debug_loc     00000000 
0000d2b2 l       .debug_loc     00000000 
0000d2cd l       .debug_loc     00000000 
0000d2e8 l       .debug_loc     00000000 
0000d303 l       .debug_loc     00000000 
0000d322 l       .debug_loc     00000000 
0000d341 l       .debug_loc     00000000 
0000d367 l       .debug_loc     00000000 
0000d382 l       .debug_loc     00000000 
0000d3cb l       .debug_loc     00000000 
0000d3f1 l       .debug_loc     00000000 
0000d40c l       .debug_loc     00000000 
0000d427 l       .debug_loc     00000000 
0000d442 l       .debug_loc     00000000 
0000d45d l       .debug_loc     00000000 
0000d478 l       .debug_loc     00000000 
0000d493 l       .debug_loc     00000000 
0000d4ae l       .debug_loc     00000000 
0000d4cd l       .debug_loc     00000000 
0000d4ec l       .debug_loc     00000000 
0000d507 l       .debug_loc     00000000 
0000d54e l       .debug_loc     00000000 
0000d569 l       .debug_loc     00000000 
0000d584 l       .debug_loc     00000000 
0000d5aa l       .debug_loc     00000000 
0000d5c5 l       .debug_loc     00000000 
0000d5e0 l       .debug_loc     00000000 
0000d5fb l       .debug_loc     00000000 
0000d616 l       .debug_loc     00000000 
0000d631 l       .debug_loc     00000000 
0000d657 l       .debug_loc     00000000 
0000d672 l       .debug_loc     00000000 
0000d698 l       .debug_loc     00000000 
0000d6be l       .debug_loc     00000000 
0000d6db l       .debug_loc     00000000 
0000d736 l       .debug_loc     00000000 
0000d751 l       .debug_loc     00000000 
0000d777 l       .debug_loc     00000000 
0000d79d l       .debug_loc     00000000 
0000d7b8 l       .debug_loc     00000000 
0000d7de l       .debug_loc     00000000 
0000d83b l       .debug_loc     00000000 
0000d856 l       .debug_loc     00000000 
0000d871 l       .debug_loc     00000000 
0000d8ce l       .debug_loc     00000000 
0000d8eb l       .debug_loc     00000000 
0000d906 l       .debug_loc     00000000 
0000d94d l       .debug_loc     00000000 
0000d968 l       .debug_loc     00000000 
0000d983 l       .debug_loc     00000000 
0000d99e l       .debug_loc     00000000 
0000d9b9 l       .debug_loc     00000000 
0000d9d4 l       .debug_loc     00000000 
0000d9fa l       .debug_loc     00000000 
0000da15 l       .debug_loc     00000000 
0000da30 l       .debug_loc     00000000 
0000da4b l       .debug_loc     00000000 
0000da66 l       .debug_loc     00000000 
0000da93 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007e6f l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001320 l       .debug_ranges  00000000 
00007e8b l       .debug_str     00000000 
00007e95 l       .debug_str     00000000 
00007e9f l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007ea9 l       .debug_str     00000000 
00007f50 l       .debug_str     00000000 
00007f5a l       .debug_str     00000000 
00006d27 l       .debug_str     00000000 
00007ec3 l       .debug_str     00000000 
00007ece l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000326e l       .debug_str     00000000 
00007eda l       .debug_str     00000000 
00007eec l       .debug_str     00000000 
00007efc l       .debug_str     00000000 
00007eb1 l       .debug_str     00000000 
00007a25 l       .debug_str     00000000 
00001f23 l       .debug_str     00000000 
00007460 l       .debug_str     00000000 
00003619 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00007e54 l       .debug_str     00000000 
000014f8 l       .debug_str     00000000 
00002919 l       .debug_str     00000000 
0000291e l       .debug_str     00000000 
00007f1f l       .debug_str     00000000 
00007f25 l       .debug_str     00000000 
00007ef0 l       .debug_str     00000000 
0000754d l       .debug_str     00000000 
00007f00 l       .debug_str     00000000 
000012b0 l       .debug_ranges  00000000 
00001835 l       .debug_str     00000000 
00001298 l       .debug_ranges  00000000 
00005f06 l       .debug_str     00000000 
00007f2a l       .debug_str     00000000 
00007f31 l       .debug_str     00000000 
000012c8 l       .debug_ranges  00000000 
00001fde l       .debug_str     00000000 
00007f39 l       .debug_str     00000000 
00007f3d l       .debug_str     00000000 
00007f41 l       .debug_str     00000000 
00007f46 l       .debug_str     00000000 
00007f4b l       .debug_str     00000000 
00007f55 l       .debug_str     00000000 
00007754 l       .debug_str     00000000 
00007616 l       .debug_str     00000000 
00006a5c l       .debug_str     00000000 
00007f60 l       .debug_str     00000000 
000012e0 l       .debug_ranges  00000000 
00007f65 l       .debug_str     00000000 
00007f0c l       .debug_str     00000000 
0000669f l       .debug_str     00000000 
00006a63 l       .debug_str     00000000 
000012f8 l       .debug_ranges  00000000 
00006627 l       .debug_str     00000000 
0000699b l       .debug_str     00000000 
000066b8 l       .debug_str     00000000 
000066c0 l       .debug_str     00000000 
00006331 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00001528 l       .debug_frame   00000000 
d000e4f4 l       .text  00000000 
d000e556 l       .text  00000000 
d000e600 l       .text  00000000 
d000e6ae l       .text  00000000 
d000e76e l       .text  00000000 
00000000 l    df *ABS*  00000000 device_sim_verilator.c
d000e76e l       .text  00000000 
d000e76e l       .text  00000000 
d000e76e l       .text  00000000 
d000e76e l       .text  00000000 
d000e770 l       .text  00000000 
d000e770 l       .text  00000000 
0000dab3 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007f6d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001380 l       .debug_ranges  00000000 
00007f97 l       .debug_str     00000000 
00007ff7 l       .debug_str     00000000 
00007feb l       .debug_str     00000000 
00007fa3 l       .debug_str     00000000 
00007fb0 l       .debug_str     00000000 
00007fc4 l       .debug_str     00000000 
00007fd5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00008005 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00008015 l       .debug_str     00000000 
00008033 l       .debug_str     00000000 
0000804a l       .debug_str     00000000 
0000805a l       .debug_str     00000000 
0000806a l       .debug_str     00000000 
00008078 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00008086 l       .debug_str     00000000 
0000809b l       .debug_str     00000000 
000080b2 l       .debug_str     00000000 
00000ded l       .debug_str     00000000 
000080cb l       .debug_str     00000000 
000080e7 l       .debug_str     00000000 
00000e67 l       .debug_str     00000000 
000069f6 l       .debug_str     00000000 
00006a15 l       .debug_str     00000000 
000011a4 l       .debug_str     00000000 
000015ec l       .debug_frame   00000000 
d000e770 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_rsa_keys_fake.c
00000000 l       .debug_str     00000000 
0000722e l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00007270 l       .debug_str     00000000 
00003270 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007285 l       .debug_str     00000000 
0000729b l       .debug_str     00000000 
00002c14 l       .debug_str     00000000 
00002c02 l       .debug_str     00000000 
0000149e l       .debug_str     00000000 
00002acf l       .debug_str     00000000 
0000180d l       .debug_str     00000000 
00001490 l       .debug_str     00000000 
0000407a l       .debug_str     00000000 
00001489 l       .debug_str     00000000 
00001288 l       .debug_str     00000000 
00001273 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002b54 l       .debug_str     00000000 
00002ac5 l       .debug_str     00000000 
00002a84 l       .debug_str     00000000 
00002a9a l       .debug_str     00000000 
00002ab0 l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/run_rsa_verify_3072_rr_modexp.s
d000f758 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_run_rsa_verify_3072
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/vendor/veri-titan/gen/otbn_modexp.s
d000f82c l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_0
d000f850 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_1
d000f88c l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mont_loop
d000f958 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw2
d000f99c l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw25
d000f94c l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_2
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/rsa_verify_3072_rr.s
d000f9e0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_subtract_modulus_var
d000fa10 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_double_mod_var
d000fa64 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sel_aa
00000000 l    df *ABS*  00000000 static_critical_boot_measurements.c
00000000 l       .debug_str     00000000 
000067d7 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0000681e l       .debug_str     00000000 
00006830 l       .debug_str     00000000 
00000197 l       .debug_str     00000000 
00000dd6 l       .debug_str     00000000 
00000dc1 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_epmp_state.c
00000000 l       .debug_str     00000000 
00006844 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00006884 l       .debug_str     00000000 
000068a6 l       .debug_str     00000000 
0000688f l       .debug_str     00000000 
00006896 l       .debug_str     00000000 
0000689e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_sec_mmio.c
00000000 l       .debug_str     00000000 
000068b3 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000068f1 l       .debug_str     00000000 
00006924 l       .debug_str     00000000 
000068fe l       .debug_str     00000000 
00006912 l       .debug_str     00000000 
00006909 l       .debug_str     00000000 
00007e63 l       .debug_str     00000000 
000011cd l       .debug_str     00000000 
0000691e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
d000e262 g     F .text  00000046 sec_mmio_read32
d000c430 g     F .text  0000001c dif_spi_host_output_set_enabled
e00024c8 g     O .bss   00000044 rstmgr_alert_info
d000d11e g     F .text  0000028e sigverify_rsa_verify
e0002058 g     O .bss   00000004 lc_state
00080000 g       *ABS*  00000000 _rom_ext_virtual_size
d0008100 g     F .vectors       00000080 _rom_interrupt_vector_c
d000b876 g     F .text  00000046 flash_ctrl_data_erase
d000a22e g     F .text  00000182 printf
d000dd16 g     F .text  0000002c rnd_uint32
e0002858 g       .bss   00000000 __global_pointer$
000003a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_end
e0000000 g     O .static_critical       00000020 boot_measurements
d000d8c4 g     F .text  00000042 sigverify_mod_exp_otbn
d000e6ae g     F .text  000000c0 memrchr
d000f0c0 g     O .rodata        00000004 kSigverifyRsaKeysCnt
d000b386 g     F .text  00000046 flash_ctrl_data_default_cfg_set
d000db7a g     F .text  00000056 otbn_imem_write
d000ea08 g       .shutdown      00000000 _text_end
d000e19e g     F .text  0000003c lifecycle_device_id_get
d000a05c g     F .text  000000fa spi_device_init
d000f758 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_start
d0009516 g     F .text  00000024 boot_policy_manifests_get
34002000 g       *ABS*  00000000 _epmp_text_tor_lo
d000bede g     F .text  00000024 keymgr_creator_max_ver_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
38007000 g       *ABS*  00000000 _epmp_stack_guard_na4
d0010000 g       .vectors       00000000 _chip_info_end
d000d060 g     F .text  000000be rom_epmp_config_debug_rom
d000faf8 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_end
d000b1e0 g     F .text  00000008 crc32_finish
000000fc g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_montmul
d000f78c g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000a93c g     F .text  000002ea shutdown_init
d000ae72 g     F .text  00000120 alert_class_configure
d000a21a g     F .text  00000014 uart_sendchar
d000e46c g     F .text  00000088 memcpy
d000acf4 g     F .text  000000c0 alert_configure
d000f0c8 g     O .rodata        000004ec kSigverifyRsaKeys
d0009c68 g     F .text  00000396 bootstrap
d000839c g     F .crt   0000001e rom_interrupt_handler
00000000 g       *ABS*  00000000 __abi_shutdown$
d000b0a6 g     F .text  000000f2 alert_config_check
e0002058 g       .bss   00000000 _bss_start
d0008180 g     F .crt   0000021a _rom_start_boot
d000e420 g     F .text  0000004c sec_mmio_check_counters
00000000 g       *ABS*  00000000 __DYNAMIC
d000b97c g     F .text  00000042 flash_ctrl_data_default_perms_set
d000bdac g     F .text  00000066 ibex_addr_remap_0_set
d000b19e g     F .text  00000042 crc32_add32
d000df4a g     F .text  0000006e hmac_sha256_update
d000db66 g     F .text  00000008 otbn_instruction_count_get
d000b198 g     F .text  00000006 crc32_init
d000839c g     F .crt   0000001e rom_exception_handler
d0008000 g       .vectors       00000000 _text_start
00000320 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_buf
d000e3b0 g     F .text  00000070 sec_mmio_check_values
d000c7c2 g     F .text  00000034 base_log_internal_dv
d000b8bc g     F .text  000000b0 flash_ctrl_data_erase_verify
d000c71a g     F .text  00000006 abort
e0000020 g     O .static_critical       00000054 epmp_state
d0009b68 g     F .text  000000aa boot_data_check
d000b1e8 g     F .text  0000011e ast_check
d000e316 g     F .text  0000004c sec_mmio_write32
d000dc46 g     F .text  0000005a otbn_dmem_write
d000b306 g     F .text  00000080 flash_ctrl_init
d000bfa8 g     F .text  00000008 rstmgr_reason_clear
d000be70 g     F .text  0000006e keymgr_sw_binding_set
d000c198 g     F .text  000000be dif_spi_host_fifo_write
d000fa68 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_compute_rr
e000250c g       .bss   00000000 _bss_end
d000bf64 g     F .text  00000006 retention_sram_get
d000b96c g     F .text  00000010 flash_ctrl_exec_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000bf74 g     F .text  00000034 rstmgr_reason_get
d000d794 g     F .text  00000130 run_otbn_rsa_3072_modexp
d000da2e g     F .text  0000003c otbn_execute_app
e000206c g     O .bss   00000400 _rom_shadow_stack
d000e200 g     F .text  00000008 otp_read32
e0001fd4 g     O .data  00000084 status_codes
00001fc4 g       *ABS*  00000000 _static_critical_size
d000fb08 g     O .rodata        00000004 kAstCheckPollCpuCycles
d000a1ec g     F .text  0000002e uart_set_cfg
e0002488 g     O .bss   00000040 boot_data
d000e1da g     F .text  00000026 lifecycle_hw_rev_get
d00083f8 g     F .crt   0000003a crt_section_copy
d000a1da g     F .text  0000000a spi_device_flash_status_clear
d000dace g     F .text  00000022 otbn_execute
d000bfc0 g     F .text  0000002e uart_init
d000da74 g     F .text  00000008 otbn_copy_data_from_otbn
d000e208 g     F .text  0000005a sec_mmio_init
d000e600 g     F .text  000000ae memchr
d000d3ac g     F .text  0000009a sigverify_usage_constraints_get
000001a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_rr
d000af92 g     F .text  00000114 alert_config_crc32
d000c484 g     F .text  000001f0 dif_spi_host_transaction
d000bf02 g     F .text  00000002 keymgr_state_check
d000a156 g     F .text  00000084 spi_device_cmd_get
d0008000 g       .vectors       00000000 _rom_boot_address
d000c256 g     F .text  00000158 dif_spi_host_fifo_read
d000b3cc g     F .text  00000046 flash_ctrl_info_cfg_set
000004a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_out_buf
d000adb4 g     F .text  000000be alert_local_configure
d000e362 g     F .text  0000004e sec_mmio_write32_shadowed
d000fb04 g     O .rodata        00000004 kUartTxFifoCpuCycles
d0009c12 g     F .text  00000056 bootstrap_requested
00004000 g       *ABS*  00000000 _stack_size
d000d906 g     F .text  0000001c otbn_init
d000c846 g     F .text  0000048e base_vfprintf
d000f0c4 g     O .rodata        00000004 kSigverifyRsaKeysStep
d000da6a g     F .text  0000000a otbn_copy_data_to_otbn
e0001fc4 g     O .data  00000010 remu10_table
d000c82c g     F .text  0000001a base_vprintf
d000df30 g     F .text  0000001a hmac_sha256_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_mod
d000c198  w    F .text  000000be spi_host_fifo_write_alias
e0000074 g     O .static_critical       00001f50 sec_mmio_ctx
d000e4f4 g     F .text  00000062 memset
d000bd68 g     F .text  00000044 flash_ctrl_bank_erase_perms_set
d00088be g     F .text  0000022e spi_flash_load_data
d000d922 g     F .text  0000010c otbn_load_app
e0020000 g       .vectors       00000000 _stack_end
d00095f4 g     F .text  000001da boot_data_read
d000fb00 g     O .rodata        00000004 kUartNCOValue
d000cffe g     F .text  0000002e rom_epmp_unlock_rom_ext_rx
d000b48e g     F .text  00000072 flash_ctrl_info_read
d000e76e g     F .text  00000002 device_fpga_version_print
e001c000 g       *ABS*  00000000 _stack_start
d000dfb8 g     F .text  00000036 hmac_sha256_final
d000bf6a g     F .text  0000000a retention_sram_init
d00083d4 g     F .crt   00000024 crt_section_clear
d000dd42 g     F .text  000001ee epmp_state_check
d000dca0 g     F .text  00000076 otbn_dmem_read
00000000 g       *ABS*  00000000 _dv_log_offset
d000ff80 g       *ABS*  00000000 _chip_info_start
d000c256  w    F .text  00000158 spi_host_fifo_read_alias
d000db6e g     F .text  0000000c otbn_imem_sec_wipe
d000c0ea g     F .text  00000094 watchdog_configure
d000fb00 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_start
d000ecd0 g     O .rodata        0000006c kSpiDeviceSfdpTable
e000246c g     O .bss   00000018 rom_counters
d000c3ae g     F .text  00000082 dif_spi_host_configure
d000a1e4 g     F .text  00000008 spi_device_flash_status_get
d000fb0c g     O .rodata        00000004 kDeviceTestStatusAddress
00000800 g       *ABS*  00000000 _epmp_reset_rx_size
d00083bc g     F .crt   00000018 _asm_exception_handler
d000da7c g     F .text  00000052 otbn_busy_wait_for_done
d0008000 g     F .vectors       00000084 _rom_interrupt_vector_asm
d000ceaa g     F .text  00000154 rom_epmp_state_init
d000c7fa g     F .text  00000032 base_printf
00000620 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_end
d0008aec g     F .text  0000028c rom_main
d000fb10 g     O .rodata        00000004 kDeviceLogBypassUartAddress
d000f854 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_montmul
00000180 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_m0inv
00000080 g       *ABS*  00000000 _chip_info_size
d000c17e g     F .text  0000000c watchdog_disable
d000953a g     F .text  000000ba boot_policy_manifest_check
00000310 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_compute_rr
00000000 g       *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000fb00 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000ac26 g     F .text  000000ce rom_printf
d000d446 g     F .text  0000021c sigverify_mod_exp_ibex
d0008434 g     F .crt   0000008c rom_epmp_init
00000034 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000e556 g     F .text  000000aa memrcmp
d000b9be g     F .text  00000044 flash_ctrl_info_perms_set
d000ce38 g     F .text  00000072 status_extract
d000c18a g     F .text  0000000e dif_spi_host_init
d000dc38 g     F .text  0000000e otbn_dmem_sec_wipe
d000e770 g     F .shutdown      00000298 shutdown_finalize
d0008800 g     F .text  000000be init_spi_host
d000bfb0 g     F .text  00000010 rstmgr_reset
d000d02c g     F .text  00000034 rom_epmp_unlock_rom_ext_r
90000000 g       .vectors       00000000 _rom_ext_virtual_start_address
d000c00a g     F .text  000000e0 watchdog_init
d000b7b8 g     F .text  00000010 flash_ctrl_data_write
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000c674 g     F .text  000000a6 test_status_set
d000bf04 g     F .text  00000060 pinmux_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_start
d000a5b4 g     F .text  0000012e sigverify_rsa_key_get
d000dfee g     F .text  000001b0 lifecycle_state_get
d000c720 g     F .text  000000a2 base_log_internal_core
d000bfee g     F .text  0000001c uart_putchar
d000839c g     F .crt   0000001e rom_nmi_handler
34003a82 g       *ABS*  00000000 _epmp_text_tor_hi



Disassembly of section .vectors:

d0008000 <_rom_interrupt_vector_asm>:
_rom_interrupt_vector_asm():
d0008000:       3bc0006f                j       d00083bc <_asm_exception_handler>
d0008004:       3b80006f                j       d00083bc <_asm_exception_handler>
d0008008:       3b40006f                j       d00083bc <_asm_exception_handler>
d000800c:       3b00006f                j       d00083bc <_asm_exception_handler>
d0008010:       3ac0006f                j       d00083bc <_asm_exception_handler>
d0008014:       3a80006f                j       d00083bc <_asm_exception_handler>
d0008018:       3a40006f                j       d00083bc <_asm_exception_handler>
d000801c:       3a00006f                j       d00083bc <_asm_exception_handler>
d0008020:       39c0006f                j       d00083bc <_asm_exception_handler>
d0008024:       3980006f                j       d00083bc <_asm_exception_handler>
d0008028:       3940006f                j       d00083bc <_asm_exception_handler>
d000802c:       3900006f                j       d00083bc <_asm_exception_handler>
d0008030:       38c0006f                j       d00083bc <_asm_exception_handler>
d0008034:       3880006f                j       d00083bc <_asm_exception_handler>
d0008038:       3840006f                j       d00083bc <_asm_exception_handler>
d000803c:       3800006f                j       d00083bc <_asm_exception_handler>
d0008040:       37c0006f                j       d00083bc <_asm_exception_handler>
d0008044:       3780006f                j       d00083bc <_asm_exception_handler>
d0008048:       3740006f                j       d00083bc <_asm_exception_handler>
d000804c:       3700006f                j       d00083bc <_asm_exception_handler>
d0008050:       36c0006f                j       d00083bc <_asm_exception_handler>
d0008054:       3680006f                j       d00083bc <_asm_exception_handler>
d0008058:       3640006f                j       d00083bc <_asm_exception_handler>
d000805c:       3600006f                j       d00083bc <_asm_exception_handler>
d0008060:       35c0006f                j       d00083bc <_asm_exception_handler>
d0008064:       3580006f                j       d00083bc <_asm_exception_handler>
d0008068:       3540006f                j       d00083bc <_asm_exception_handler>
d000806c:       3500006f                j       d00083bc <_asm_exception_handler>
d0008070:       34c0006f                j       d00083bc <_asm_exception_handler>
d0008074:       3480006f                j       d00083bc <_asm_exception_handler>
d0008078:       3440006f                j       d00083bc <_asm_exception_handler>
d000807c:       3400006f                j       d00083bc <_asm_exception_handler>
d0008080:       1000006f                j       d0008180 <_rom_start_boot>
d0008084:       c0001073                unimp
d0008088:       c0001073                unimp
d000808c:       c0001073                unimp
d0008090:       c0001073                unimp
d0008094:       c0001073                unimp
d0008098:       c0001073                unimp
d000809c:       c0001073                unimp
d00080a0:       c0001073                unimp
d00080a4:       c0001073                unimp
d00080a8:       c0001073                unimp
d00080ac:       c0001073                unimp
d00080b0:       c0001073                unimp
d00080b4:       c0001073                unimp
d00080b8:       c0001073                unimp
d00080bc:       c0001073                unimp
d00080c0:       c0001073                unimp
d00080c4:       c0001073                unimp
d00080c8:       c0001073                unimp
d00080cc:       c0001073                unimp
d00080d0:       c0001073                unimp
d00080d4:       c0001073                unimp
d00080d8:       c0001073                unimp
d00080dc:       c0001073                unimp
d00080e0:       c0001073                unimp
d00080e4:       c0001073                unimp
d00080e8:       c0001073                unimp
d00080ec:       c0001073                unimp
d00080f0:       c0001073                unimp
d00080f4:       c0001073                unimp
d00080f8:       c0001073                unimp
d00080fc:       c0001073                unimp

d0008100 <_rom_interrupt_vector_c>:
_rom_interrupt_vector_c():
d0008100:       29c0006f                j       d000839c <rom_exception_handler>
d0008104:       2980006f                j       d000839c <rom_exception_handler>
d0008108:       2940006f                j       d000839c <rom_exception_handler>
d000810c:       2900006f                j       d000839c <rom_exception_handler>
d0008110:       28c0006f                j       d000839c <rom_exception_handler>
d0008114:       2880006f                j       d000839c <rom_exception_handler>
d0008118:       2840006f                j       d000839c <rom_exception_handler>
d000811c:       2800006f                j       d000839c <rom_exception_handler>
d0008120:       27c0006f                j       d000839c <rom_exception_handler>
d0008124:       2780006f                j       d000839c <rom_exception_handler>
d0008128:       2740006f                j       d000839c <rom_exception_handler>
d000812c:       2700006f                j       d000839c <rom_exception_handler>
d0008130:       26c0006f                j       d000839c <rom_exception_handler>
d0008134:       2680006f                j       d000839c <rom_exception_handler>
d0008138:       2640006f                j       d000839c <rom_exception_handler>
d000813c:       2600006f                j       d000839c <rom_exception_handler>
d0008140:       25c0006f                j       d000839c <rom_exception_handler>
d0008144:       2580006f                j       d000839c <rom_exception_handler>
d0008148:       2540006f                j       d000839c <rom_exception_handler>
d000814c:       2500006f                j       d000839c <rom_exception_handler>
d0008150:       24c0006f                j       d000839c <rom_exception_handler>
d0008154:       2480006f                j       d000839c <rom_exception_handler>
d0008158:       2440006f                j       d000839c <rom_exception_handler>
d000815c:       2400006f                j       d000839c <rom_exception_handler>
d0008160:       23c0006f                j       d000839c <rom_exception_handler>
d0008164:       2380006f                j       d000839c <rom_exception_handler>
d0008168:       2340006f                j       d000839c <rom_exception_handler>
d000816c:       2300006f                j       d000839c <rom_exception_handler>
d0008170:       22c0006f                j       d000839c <rom_exception_handler>
d0008174:       2280006f                j       d000839c <rom_exception_handler>
d0008178:       2240006f                j       d000839c <rom_exception_handler>
d000817c:       2200006f                j       d000839c <rom_exception_handler>

Disassembly of section .crt:

d0008180 <_rom_start_boot>:
_rom_start_boot():
d0008180:       ff000537                lui     a0,0xff000
d0008184:       01452283                lw      t0,20(a0) # ff000014 <_stack_end+0x1efe0014>
d0008188:       00029863                bnez    t0,d0008198 <.SECURE_BOOT>
d000818c:       ff000537                lui     a0,0xff000
d0008190:       01852283                lw      t0,24(a0) # ff000018 <_stack_end+0x1efe0018>
d0008194:       00028c63                beqz    t0,d00081ac <kRomStartBootMaybeHalt+0xc>

d0008198 <.SECURE_BOOT>:
d0008198:       0fffa197                auipc   gp,0xfffa
d000819c:       6c018193                addi    gp,gp,1728 # e0002858 <__global_pointer$>

d00081a0 <kRomStartBootMaybeHalt>:
d00081a0:           c0131537            lui     a0,0xc0131
d00081a4:           10852283            lw      t0,264(a0) # c0131108 <_stack_end+0xe0111108>
d00081a8:           00029563            bnez    t0,d00081b2 <kRomStartBootExecEn>
d00081ac:       /-> 10500073            wfi
d00081b0:       \-- bff5                        j       d00081ac <kRomStartBootMaybeHalt+0xc>

d00081b2 <kRomStartBootExecEn>:
d00081b2:       c11f02b7                lui     t0,0xc11f0
d00081b6:       4309                    li      t1,2
d00081b8:       0462a623                sw      t1,76(t0) # c11f004c <_stack_end+0xe11d004c>
d00081bc:       c04002b7                lui     t0,0xc0400
d00081c0:       537d                    li      t1,-1
d00081c2:       0262a623                sw      t1,44(t0) # c040002c <_stack_end+0xe03e002c>
d00081c6:       4305                    li      t1,1
d00081c8:       0062ac23                sw      t1,24(t0)
d00081cc:       c04702b7                lui     t0,0xc0470
d00081d0:       00037337                lui     t1,0x37
d00081d4:       ee830313                addi    t1,t1,-280 # 36ee8 <WDOG_BARK_THOLD>
d00081d8:       0062ac23                sw      t1,24(t0) # c0470018 <_stack_end+0xe0450018>
d00081dc:       00031337                lui     t1,0x31
d00081e0:       d4030313                addi    t1,t1,-704 # 30d40 <WDOG_BITE_THOLD>

d00081e4 <kRomStartStoreT1ToBiteThold>:
d00081e4:       0062ae23                sw      t1,28(t0)
d00081e8:       4305                    li      t1,1
d00081ea:       0062aa23                sw      t1,20(t0)

d00081ee <kRomStartWatchdogEnabled>:
d00081ee:              72c5                     lui     t0,0xffff1
d00081f0:              88828293                 addi    t0,t0,-1912 # ffff0888 <_stack_end+0x1ffd0888>
d00081f4:              3042b073                 csrc    mie,t0
d00081f8:              c0131537                 lui     a0,0xc0131
d00081fc:              0dc52283                 lw      t0,220(a0) # c01310dc <_stack_end+0xe01110dc>
d0008200:              4319                     li      t1,6
d0008202:          /-- 02629563                 bne     t0,t1,d000822c <kRomStartWatchdogEnabled+0x3e>
d0008206:          |   c0480537                 lui     a0,0xc0480
d000820a:          |   c04805b7                 lui     a1,0xc0480
d000820e:          |   09c58593                 addi    a1,a1,156 # c048009c <_stack_end+0xe046009c>
d0008212:          |   c0131637                 lui     a2,0xc0131
d0008216:          |   04060613                 addi    a2,a2,64 # c0131040 <_stack_end+0xe0111040>
d000821a:          |   2af9                     jal     d00083f8 <crt_section_copy>
d000821c:          |   c0131537                 lui     a0,0xc0131
d0008220:          |   0fc52283                 lw      t0,252(a0) # c01310fc <_stack_end+0xe01110fc>
d0008224:          |   c0420537                 lui     a0,0xc0420
d0008228:          |   00552a23                 sw      t0,20(a0) # c0420014 <_stack_end+0xe0400014>
d000822c:          \-> c0131537                 lui     a0,0xc0131
d0008230:              11c52283                 lw      t0,284(a0) # c013111c <_stack_end+0xe011111c>
d0008234:              73900f93                 li      t6,1849
d0008238:       /----- 0bf29f63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d000823c:       |      c01315b7                 lui     a1,0xc0131
d0008240:       |      11c5a303                 lw      t1,284(a1) # c013111c <_stack_end+0xe011111c>
d0008244:       |  /-- 01f30663                 beq     t1,t6,d0008250 <kRomStartWatchdogEnabled+0x62>
d0008248:       |  |   0000                     unimp
d000824a:       |  |   0000                     unimp
d000824c:       |  |   0000                     unimp
d000824e:       |  |   0000                     unimp
d0008250:       |  \-> c0460537                 lui     a0,0xc0460
d0008254:       |      40050513                 addi    a0,a0,1024 # c0460400 <_stack_end+0xe0440400>
d0008258:       |      42b1                     li      t0,12
d000825a:       |      04552c23                 sw      t0,88(a0)
d000825e:       |      4291                     li      t0,4
d0008260:       |      04552e23                 sw      t0,92(a0)
d0008264:       |      06552023                 sw      t0,96(a0)
d0008268:       |      c0460537                 lui     a0,0xc0460
d000826c:       |      0e850513                 addi    a0,a0,232 # c04600e8 <_stack_end+0xe04400e8>
d0008270:       |      42e1                     li      t0,24
d0008272:       |      04552c23                 sw      t0,88(a0)
d0008276:       |      42e5                     li      t0,25
d0008278:       |      04552e23                 sw      t0,92(a0)
d000827c:       |      42e9                     li      t0,26
d000827e:       |      06552023                 sw      t0,96(a0)
d0008282:       |      c0040537                 lui     a0,0xc0040
d0008286:       |      01052283                 lw      t0,16(a0) # c0040010 <_stack_end+0xe0020010>
d000828a:       |      01c00f37                 lui     t5,0x1c00
d000828e:       |      01e2f2b3                 and     t0,t0,t5
d0008292:       |      01800eb7                 lui     t4,0x1800
d0008296:       |      739e8e93                 addi    t4,t4,1849 # 1800739 <_rom_ext_virtual_size+0x1780739>
d000829a:       |      01d2c2b3                 xor     t0,t0,t4
d000829e:       +----- 05f29c63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d00082a2:       |      73900f93                 li      t6,1849
d00082a6:       |      c00405b7                 lui     a1,0xc0040
d00082aa:       |      0105a303                 lw      t1,16(a1) # c0040010 <_stack_end+0xe0020010>
d00082ae:       |      01e37333                 and     t1,t1,t5
d00082b2:       |      01d34333                 xor     t1,t1,t4
d00082b6:       |  /-- 01f30663                 beq     t1,t6,d00082c2 <kRomStartWatchdogEnabled+0xd4>
d00082ba:       |  |   0000                     unimp
d00082bc:       |  |   0000                     unimp
d00082be:       |  |   0000                     unimp
d00082c0:       |  |   0000                     unimp
d00082c2:       |  \-> b0001073                 csrw    mcycle,zero
d00082c6:       |      c0470537                 lui     a0,0xc0470
d00082ca:       |      00052a23                 sw      zero,20(a0) # c0470014 <_stack_end+0xe0450014>
d00082ce:       |  /-> c0131537                 lui     a0,0xc0131
d00082d2:       |  |   12052283                 lw      t0,288(a0) # c0131120 <_stack_end+0xe0111120>
d00082d6:       |  |   b0002373                 csrr    t1,mcycle
d00082da:       |  \-- fe536ae3                 bltu    t1,t0,d00082ce <kRomStartWatchdogEnabled+0xe0>
d00082de:       |  /-> c0140537                 lui     a0,0xc0140
d00082e2:       |  |   00452283                 lw      t0,4(a0) # c0140004 <_stack_end+0xe0120004>
d00082e6:       |  |   0022f293                 andi    t0,t0,2
d00082ea:       |  \-- fe028ae3                 beqz    t0,d00082de <kRomStartWatchdogEnabled+0xf0>
d00082ee:       |      0000                     unimp
d00082f0:       |      0000                     unimp
d00082f2:       |      0000                     unimp
d00082f4:       |      0000                     unimp
d00082f6:       \----> c1160537                 lui     a0,0xc1160
d00082fa:              009092b7                 lui     t0,0x909
d00082fe:              09928293                 addi    t0,t0,153 # 909099 <_rom_ext_virtual_size+0x889099>
d0008302:              02552223                 sw      t0,36(a0) # c1160024 <_stack_end+0xe1140024>
d0008306:              4299                     li      t0,6
d0008308:              02552023                 sw      t0,32(a0)
d000830c:              c1150537                 lui     a0,0xc1150
d0008310:              66600293                 li      t0,1638
d0008314:              00552a23                 sw      t0,20(a0) # c1150014 <_stack_end+0xe1130014>
d0008318:              c1170537                 lui     a0,0xc1170
d000831c:              62a9                     lui     t0,0xa
d000831e:              96628293                 addi    t0,t0,-1690 # 9966 <_stack_size+0x5966>
d0008322:              00552a23                 sw      t0,20(a0) # c1170014 <_stack_end+0xe1150014>
d0008326:              c11c0537                 lui     a0,0xc11c0
d000832a:              458d                     li      a1,3
d000832c:              c94c                     sw      a1,20(a0)
d000832e:              4081                     li      ra,0
d0008330:              4101                     li      sp,0
d0008332:              4201                     li      tp,0
d0008334:              4281                     li      t0,0
d0008336:              4301                     li      t1,0
d0008338:              4381                     li      t2,0
d000833a:              4401                     li      s0,0
d000833c:              4481                     li      s1,0
d000833e:              4501                     li      a0,0
d0008340:              4581                     li      a1,0
d0008342:              4601                     li      a2,0
d0008344:              4681                     li      a3,0
d0008346:              4701                     li      a4,0
d0008348:              4781                     li      a5,0
d000834a:              4801                     li      a6,0
d000834c:              4881                     li      a7,0
d000834e:              4901                     li      s2,0
d0008350:              4981                     li      s3,0
d0008352:              4a01                     li      s4,0
d0008354:              4a81                     li      s5,0
d0008356:              4b01                     li      s6,0
d0008358:              4b81                     li      s7,0
d000835a:              4c01                     li      s8,0
d000835c:              4c81                     li      s9,0
d000835e:              4d01                     li      s10,0
d0008360:              4d81                     li      s11,0
d0008362:              4e01                     li      t3,0
d0008364:              4e81                     li      t4,0
d0008366:              4f01                     li      t5,0
d0008368:              4f81                     li      t6,0
d000836a:              20e9                     jal     d0008434 <rom_epmp_init>
d000836c:              0fffa517                 auipc   a0,0xfffa
d0008370:              cec50513                 addi    a0,a0,-788 # e0002058 <lc_state>
d0008374:              cb418593                 addi    a1,gp,-844 # e000250c <_bss_end>
d0008378:              28b1                     jal     d00083d4 <crt_section_clear>
d000837a:              10018117                 auipc   sp,0x10018
d000837e:              c7610113                 addi    sp,sp,-906 # e001fff0 <_stack_start+0x3ff0>
d0008382:              0fffa917                 auipc   s2,0xfffa
d0008386:              cea90913                 addi    s2,s2,-790 # e000206c <_rom_shadow_stack>
d000838a:              00000297                 auipc   t0,0x0
d000838e:              d7728293                 addi    t0,t0,-649 # d0008101 <_rom_interrupt_vector_c+0x1>
d0008392:              30529073                 csrw    mtvec,t0
d0008396:              7560006f                 j       d0008aec <rom_main>
d000839a:              0000                     unimp

d000839c <rom_exception_handler>:
rom_irq_error():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:98

boot_data_t boot_data = {0};
OT_ALWAYS_INLINE
static rom_error_t rom_irq_error(void) {
  uint32_t mcause;
  CSR_READ(CSR_REG_MCAUSE, &mcause);
d000839c:       34202573                csrr    a0,mcause
d00083a0:       800005b7                lui     a1,0x80000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:109
  //
  // Preserve the MSB and shift the 7 LSBs into the upper byte.
  // (we preserve 7 instead of 5 because the verilog hardcodes the unused bits
  // as zero and those would be the next bits used should the number of
  // interrupt causes increase).
  mcause = (mcause & 0x80000000) | ((mcause & 0x7f) << 24);
d00083a4:       8de9                    and     a1,a1,a0
d00083a6:       0566                    slli    a0,a0,0x19
d00083a8:       8105                    srli    a0,a0,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:110
  return kErrorInterrupt + mcause;
d00083aa:       8d4d                    or      a0,a0,a1
d00083ac:       004955b7                lui     a1,0x495
d00083b0:       20258593                addi    a1,a1,514 # 495202 <_rom_ext_virtual_size+0x415202>
d00083b4:       8d4d                    or      a0,a0,a1
rom_interrupt_handler():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:576
  shutdown_finalize(rom_try_boot());
}

void rom_interrupt_handler(void) {
  register rom_error_t error asm("a0") = rom_irq_error();
  asm volatile("tail shutdown_finalize;" ::"r"(error));
d00083b6:       3ba0606f                j       d000e770 <shutdown_finalize>
d00083ba:       0000                    unimp

d00083bc <_asm_exception_handler>:
_asm_exception_handler():
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:29
  .global _asm_exception_handler
  .type _asm_exception_handler, @function
_asm_exception_handler:
.L_exception_loop:
  // Request a system reset.
  li t0, TOP_EARLGREY_RSTMGR_AON_BASE_ADDR
d00083bc:       /-> c04102b7            lui     t0,0xc0410
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:30
  li t1, MULTIBIT_ASM_BOOL4_TRUE
d00083c0:       |   4319                        li      t1,6
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:31
  sw t1, RSTMGR_RESET_REQ_REG_OFFSET(t0)
d00083c2:       |   0062a223            sw      t1,4(t0) # c0410004 <_stack_end+0xe03f0004>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:37

  // Disable access to flash.
  //
  // This is done after requesting a reset so that this function will
  // work even if it is in flash.
  li t0, TOP_EARLGREY_FLASH_CTRL_CORE_BASE_ADDR
d00083c6:       |   c10002b7            lui     t0,0xc1000
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:38
  sw zero, FLASH_CTRL_DIS_REG_OFFSET(t0)
d00083ca:       |   0002a823            sw      zero,16(t0) # c1000010 <_stack_end+0xe0fe0010>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:40

  wfi
d00083ce:       |   10500073            wfi
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:41
  j   .L_exception_loop
d00083d2:       \-- b7ed                        j       d00083bc <_asm_exception_handler>

d00083d4 <crt_section_clear>:
crt_section_clear():
/proc/self/cwd/sw/device/lib/crt/crt.S:41
  .global crt_section_clear
  .type crt_section_clear, @function
crt_section_clear:

  // Check that start is before end.
  bgeu a0, a1, .L_clear_nothing
d00083d4:       /-------- 00b57e63              bgeu    a0,a1,d00083f0 <crt_section_clear+0x1c>
/proc/self/cwd/sw/device/lib/crt/crt.S:44

  // Check that start and end are word aligned.
  or   t0, a0, a1
d00083d8:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:45
  andi t0, t0, 0x3
d00083dc:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:46
  bnez t0, .L_clear_error
d00083e0:       |  /----- 00029b63              bnez    t0,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:51

.L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
d00083e4:       |  |  /-> 00052023              sw      zero,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:52
  addi a0, a0, 4
d00083e8:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:53
  bltu a0, a1, .L_clear_loop
d00083ea:       |  |  \-- feb56de3              bltu    a0,a1,d00083e4 <crt_section_clear+0x10>
/proc/self/cwd/sw/device/lib/crt/crt.S:54
  ret
d00083ee:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:59

.L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_clear_error
d00083f0:       \--+----X 00b51363              bne     a0,a1,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:60
  ret
d00083f4:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:63

.L_clear_error:
  unimp
d00083f6:          \----> 0000                  unimp

d00083f8 <crt_section_copy>:
crt_section_copy():
/proc/self/cwd/sw/device/lib/crt/crt.S:95
  .global crt_section_copy
  .type crt_section_copy, @function
crt_section_copy:

  // Check that start is before end.
  bgeu a0, a1, .L_copy_nothing
d00083f8:       /-------- 02b57963              bgeu    a0,a1,d000842a <crt_section_copy+0x32>
/proc/self/cwd/sw/device/lib/crt/crt.S:98

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
d00083fc:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:99
  or   t0, t0, a2
d0008400:       |         00c2e2b3              or      t0,t0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:100
  andi t0, t0, 0x3
d0008404:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:101
  bnez t0, .L_copy_error
d0008408:       |  /----- 02029463              bnez    t0,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:118
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
d000840c:       |  |      40c502b3              sub     t0,a0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:119
  sub  t1, a1, a0           // end - start
d0008410:       |  |      40a58333              sub     t1,a1,a0
/proc/self/cwd/sw/device/lib/crt/crt.S:120
  bltu t0, t1, .L_copy_error
d0008414:       |  +----- 0062ee63              bltu    t0,t1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:125

.L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
d0008418:       |  |  /-> 00062283              lw      t0,0(a2)
/proc/self/cwd/sw/device/lib/crt/crt.S:126
  addi a2, a2, 4
d000841c:       |  |  |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/lib/crt/crt.S:127
  sw   t0, 0(a0)
d000841e:       |  |  |   00552023              sw      t0,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:128
  addi a0, a0, 4
d0008422:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:129
  bltu a0, a1, .L_copy_loop
d0008424:       |  |  \-- feb56ae3              bltu    a0,a1,d0008418 <crt_section_copy+0x20>
/proc/self/cwd/sw/device/lib/crt/crt.S:130
  ret
d0008428:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:135

.L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_copy_error
d000842a:       \--+----X 00b51363              bne     a0,a1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:136
  ret
d000842e:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:139

.L_copy_error:
  unimp
d0008430:          \----> 0000                  unimp
d0008432:                 0000                  unimp

d0008434 <rom_epmp_init>:
rom_epmp_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:59
  .extern _epmp_stack_guard_na4

  // Setup PMP address registers.

  // ROM TEXT
  la   t0, _epmp_text_tor_lo
d0008434:       63ffa297                auipc   t0,0x63ffa
d0008438:       bcc28293                addi    t0,t0,-1076 # 34002000 <_stack_end+0x53fe2000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:60
  csrw pmpaddr0, t0
d000843c:       3b029073                csrw    pmpaddr0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:61
  la   t0, _epmp_text_tor_hi
d0008440:       63ffb297                auipc   t0,0x63ffb
d0008444:       64228293                addi    t0,t0,1602 # 34003a82 <_stack_end+0x53fe3a82>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:62
  csrw pmpaddr1, t0
d0008448:       3b129073                csrw    pmpaddr1,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:65

  // ROM
  li   t0, NAPOT(TOP_EARLGREY_ROM_BASE_ADDR, TOP_EARLGREY_ROM_SIZE_BYTES)
d000844c:       340032b7                lui     t0,0x34003
d0008450:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:66
  csrw pmpaddr2, t0
d0008452:       3b229073                csrw    pmpaddr2,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:69

  // ROM_EXT TEXT (configured after signature verification)
  csrw pmpaddr3, zero // ROM_EXT TEXT low
d0008456:       3b301073                csrw    pmpaddr3,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:70
  csrw pmpaddr4, zero // ROM_EXT TEXT high
d000845a:       3b401073                csrw    pmpaddr4,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:73

  // eFLASH
  li   t0, NAPOT(TOP_EARLGREY_EFLASH_BASE_ADDR, TOP_EARLGREY_EFLASH_SIZE_BYTES)
d000845e:       3c0202b7                lui     t0,0x3c020
d0008462:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:74
  csrw pmpaddr5, t0
d0008464:       3b529073                csrw    pmpaddr5,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:77

  // MMIO
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR)
d0008468:       6291                    lui     t0,0x4
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:78
  csrw pmpaddr10, t0
d000846a:       3ba29073                csrw    pmpaddr10,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:79
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR + TOP_EARLGREY_MMIO_SIZE_BYTES)
d000846e:       340002b7                lui     t0,0x34000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:80
  csrw pmpaddr11, t0
d0008472:       3bb29073                csrw    pmpaddr11,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:83

  // Debug ROM
  li   t0, NAPOT(TOP_EARLGREY_RV_DM_MEM_BASE_ADDR, TOP_EARLGREY_RV_DM_MEM_SIZE_BYTES)
d0008476:       1ff00293                li      t0,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:84
  csrw pmpaddr13, t0
d000847a:       3bd29073                csrw    pmpaddr13,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:87

  // Stack guard
  la   t0, _epmp_stack_guard_na4
d000847e:       67fff297                auipc   t0,0x67fff
d0008482:       b8228293                addi    t0,t0,-1150 # 38007000 <_stack_end+0x57fe7000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:88
  csrw pmpaddr14, t0
d0008486:       3be29073                csrw    pmpaddr14,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:91

  // RAM
  li   t0, NAPOT(TOP_EARLGREY_RAM_MAIN_BASE_ADDR, TOP_EARLGREY_RAM_MAIN_SIZE_BYTES)
d000848a:       380042b7                lui     t0,0x38004
d000848e:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:92
  csrw pmpaddr15, t0
d0008490:       3bf29073                csrw    pmpaddr15,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:95

  // Set PMP configuration registers.
  li   t0, CFG_INDEX(1  % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRX) | /* ROM TEXT    */ \
d0008494:       009992b7                lui     t0,0x999
d0008498:       d0028293                addi    t0,t0,-768 # 998d00 <_rom_ext_virtual_size+0x918d00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:97
           CFG_INDEX(2  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* ROM         */
  li   t1, CFG_INDEX(5  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* eFLASH      */
d000849c:       6329                    lui     t1,0xa
d000849e:       90030313                addi    t1,t1,-1792 # 9900 <_stack_size+0x5900>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:98
  li   t2, CFG_INDEX(11 % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRW)   /* MMIO        */
d00084a2:       8b0003b7                lui     t2,0x8b000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:99
  li   t3, CFG_INDEX(13 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRWX)| /* Debug ROM   */ \
d00084a6:       9b90ae37                lui     t3,0x9b90a
d00084aa:       f00e0e13                addi    t3,t3,-256 # 9b909f00 <_stack_end+0xbb8e9f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:104
           CFG_INDEX(14 % 4, EPMP_CFG_A_NA4   | EPMP_CFG_L)   | /* Stack Guard */ \
           CFG_INDEX(15 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRW)   /* RAM         */
  //li   t4, 0x6

  csrw pmpcfg0, t0
d00084ae:       3a029073                csrw    pmpcfg0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:105
  csrw pmpcfg1, t1
d00084b2:       3a131073                csrw    pmpcfg1,t1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:106
  csrw pmpcfg2, t2
d00084b6:       3a239073                csrw    pmpcfg2,t2
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:107
  csrw pmpcfg3, t3
d00084ba:       3a3e1073                csrw    pmpcfg3,t3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:110
  //csrw EPMP_MSECCFG , t4      

  ret
d00084be:       8082                    ret
d00084c0:       0000                    unimp
d00084c2:       0000                    unimp
d00084c4:       0000                    unimp
d00084c6:       0000                    unimp
d00084c8:       0000                    unimp
d00084ca:       0000                    unimp
d00084cc:       0000                    unimp
d00084ce:       0000                    unimp
d00084d0:       0000                    unimp
d00084d2:       0000                    unimp
d00084d4:       0000                    unimp
d00084d6:       0000                    unimp
d00084d8:       0000                    unimp
d00084da:       0000                    unimp
d00084dc:       0000                    unimp
d00084de:       0000                    unimp
d00084e0:       0000                    unimp
d00084e2:       0000                    unimp
d00084e4:       0000                    unimp
d00084e6:       0000                    unimp
d00084e8:       0000                    unimp
d00084ea:       0000                    unimp
d00084ec:       0000                    unimp
d00084ee:       0000                    unimp
d00084f0:       0000                    unimp
d00084f2:       0000                    unimp
d00084f4:       0000                    unimp
d00084f6:       0000                    unimp
d00084f8:       0000                    unimp
d00084fa:       0000                    unimp
d00084fc:       0000                    unimp
d00084fe:       0000                    unimp
d0008500:       0000                    unimp
d0008502:       0000                    unimp
d0008504:       0000                    unimp
d0008506:       0000                    unimp
d0008508:       0000                    unimp
d000850a:       0000                    unimp
d000850c:       0000                    unimp
d000850e:       0000                    unimp
d0008510:       0000                    unimp
d0008512:       0000                    unimp
d0008514:       0000                    unimp
d0008516:       0000                    unimp
d0008518:       0000                    unimp
d000851a:       0000                    unimp
d000851c:       0000                    unimp
d000851e:       0000                    unimp
d0008520:       0000                    unimp
d0008522:       0000                    unimp
d0008524:       0000                    unimp
d0008526:       0000                    unimp
d0008528:       0000                    unimp
d000852a:       0000                    unimp
d000852c:       0000                    unimp
d000852e:       0000                    unimp
d0008530:       0000                    unimp
d0008532:       0000                    unimp
d0008534:       0000                    unimp
d0008536:       0000                    unimp
d0008538:       0000                    unimp
d000853a:       0000                    unimp
d000853c:       0000                    unimp
d000853e:       0000                    unimp
d0008540:       0000                    unimp
d0008542:       0000                    unimp
d0008544:       0000                    unimp
d0008546:       0000                    unimp
d0008548:       0000                    unimp
d000854a:       0000                    unimp
d000854c:       0000                    unimp
d000854e:       0000                    unimp
d0008550:       0000                    unimp
d0008552:       0000                    unimp
d0008554:       0000                    unimp
d0008556:       0000                    unimp
d0008558:       0000                    unimp
d000855a:       0000                    unimp
d000855c:       0000                    unimp
d000855e:       0000                    unimp
d0008560:       0000                    unimp
d0008562:       0000                    unimp
d0008564:       0000                    unimp
d0008566:       0000                    unimp
d0008568:       0000                    unimp
d000856a:       0000                    unimp
d000856c:       0000                    unimp
d000856e:       0000                    unimp
d0008570:       0000                    unimp
d0008572:       0000                    unimp
d0008574:       0000                    unimp
d0008576:       0000                    unimp
d0008578:       0000                    unimp
d000857a:       0000                    unimp
d000857c:       0000                    unimp
d000857e:       0000                    unimp
d0008580:       0000                    unimp
d0008582:       0000                    unimp
d0008584:       0000                    unimp
d0008586:       0000                    unimp
d0008588:       0000                    unimp
d000858a:       0000                    unimp
d000858c:       0000                    unimp
d000858e:       0000                    unimp
d0008590:       0000                    unimp
d0008592:       0000                    unimp
d0008594:       0000                    unimp
d0008596:       0000                    unimp
d0008598:       0000                    unimp
d000859a:       0000                    unimp
d000859c:       0000                    unimp
d000859e:       0000                    unimp
d00085a0:       0000                    unimp
d00085a2:       0000                    unimp
d00085a4:       0000                    unimp
d00085a6:       0000                    unimp
d00085a8:       0000                    unimp
d00085aa:       0000                    unimp
d00085ac:       0000                    unimp
d00085ae:       0000                    unimp
d00085b0:       0000                    unimp
d00085b2:       0000                    unimp
d00085b4:       0000                    unimp
d00085b6:       0000                    unimp
d00085b8:       0000                    unimp
d00085ba:       0000                    unimp
d00085bc:       0000                    unimp
d00085be:       0000                    unimp
d00085c0:       0000                    unimp
d00085c2:       0000                    unimp
d00085c4:       0000                    unimp
d00085c6:       0000                    unimp
d00085c8:       0000                    unimp
d00085ca:       0000                    unimp
d00085cc:       0000                    unimp
d00085ce:       0000                    unimp
d00085d0:       0000                    unimp
d00085d2:       0000                    unimp
d00085d4:       0000                    unimp
d00085d6:       0000                    unimp
d00085d8:       0000                    unimp
d00085da:       0000                    unimp
d00085dc:       0000                    unimp
d00085de:       0000                    unimp
d00085e0:       0000                    unimp
d00085e2:       0000                    unimp
d00085e4:       0000                    unimp
d00085e6:       0000                    unimp
d00085e8:       0000                    unimp
d00085ea:       0000                    unimp
d00085ec:       0000                    unimp
d00085ee:       0000                    unimp
d00085f0:       0000                    unimp
d00085f2:       0000                    unimp
d00085f4:       0000                    unimp
d00085f6:       0000                    unimp
d00085f8:       0000                    unimp
d00085fa:       0000                    unimp
d00085fc:       0000                    unimp
d00085fe:       0000                    unimp
d0008600:       0000                    unimp
d0008602:       0000                    unimp
d0008604:       0000                    unimp
d0008606:       0000                    unimp
d0008608:       0000                    unimp
d000860a:       0000                    unimp
d000860c:       0000                    unimp
d000860e:       0000                    unimp
d0008610:       0000                    unimp
d0008612:       0000                    unimp
d0008614:       0000                    unimp
d0008616:       0000                    unimp
d0008618:       0000                    unimp
d000861a:       0000                    unimp
d000861c:       0000                    unimp
d000861e:       0000                    unimp
d0008620:       0000                    unimp
d0008622:       0000                    unimp
d0008624:       0000                    unimp
d0008626:       0000                    unimp
d0008628:       0000                    unimp
d000862a:       0000                    unimp
d000862c:       0000                    unimp
d000862e:       0000                    unimp
d0008630:       0000                    unimp
d0008632:       0000                    unimp
d0008634:       0000                    unimp
d0008636:       0000                    unimp
d0008638:       0000                    unimp
d000863a:       0000                    unimp
d000863c:       0000                    unimp
d000863e:       0000                    unimp
d0008640:       0000                    unimp
d0008642:       0000                    unimp
d0008644:       0000                    unimp
d0008646:       0000                    unimp
d0008648:       0000                    unimp
d000864a:       0000                    unimp
d000864c:       0000                    unimp
d000864e:       0000                    unimp
d0008650:       0000                    unimp
d0008652:       0000                    unimp
d0008654:       0000                    unimp
d0008656:       0000                    unimp
d0008658:       0000                    unimp
d000865a:       0000                    unimp
d000865c:       0000                    unimp
d000865e:       0000                    unimp
d0008660:       0000                    unimp
d0008662:       0000                    unimp
d0008664:       0000                    unimp
d0008666:       0000                    unimp
d0008668:       0000                    unimp
d000866a:       0000                    unimp
d000866c:       0000                    unimp
d000866e:       0000                    unimp
d0008670:       0000                    unimp
d0008672:       0000                    unimp
d0008674:       0000                    unimp
d0008676:       0000                    unimp
d0008678:       0000                    unimp
d000867a:       0000                    unimp
d000867c:       0000                    unimp
d000867e:       0000                    unimp
d0008680:       0000                    unimp
d0008682:       0000                    unimp
d0008684:       0000                    unimp
d0008686:       0000                    unimp
d0008688:       0000                    unimp
d000868a:       0000                    unimp
d000868c:       0000                    unimp
d000868e:       0000                    unimp
d0008690:       0000                    unimp
d0008692:       0000                    unimp
d0008694:       0000                    unimp
d0008696:       0000                    unimp
d0008698:       0000                    unimp
d000869a:       0000                    unimp
d000869c:       0000                    unimp
d000869e:       0000                    unimp
d00086a0:       0000                    unimp
d00086a2:       0000                    unimp
d00086a4:       0000                    unimp
d00086a6:       0000                    unimp
d00086a8:       0000                    unimp
d00086aa:       0000                    unimp
d00086ac:       0000                    unimp
d00086ae:       0000                    unimp
d00086b0:       0000                    unimp
d00086b2:       0000                    unimp
d00086b4:       0000                    unimp
d00086b6:       0000                    unimp
d00086b8:       0000                    unimp
d00086ba:       0000                    unimp
d00086bc:       0000                    unimp
d00086be:       0000                    unimp
d00086c0:       0000                    unimp
d00086c2:       0000                    unimp
d00086c4:       0000                    unimp
d00086c6:       0000                    unimp
d00086c8:       0000                    unimp
d00086ca:       0000                    unimp
d00086cc:       0000                    unimp
d00086ce:       0000                    unimp
d00086d0:       0000                    unimp
d00086d2:       0000                    unimp
d00086d4:       0000                    unimp
d00086d6:       0000                    unimp
d00086d8:       0000                    unimp
d00086da:       0000                    unimp
d00086dc:       0000                    unimp
d00086de:       0000                    unimp
d00086e0:       0000                    unimp
d00086e2:       0000                    unimp
d00086e4:       0000                    unimp
d00086e6:       0000                    unimp
d00086e8:       0000                    unimp
d00086ea:       0000                    unimp
d00086ec:       0000                    unimp
d00086ee:       0000                    unimp
d00086f0:       0000                    unimp
d00086f2:       0000                    unimp
d00086f4:       0000                    unimp
d00086f6:       0000                    unimp
d00086f8:       0000                    unimp
d00086fa:       0000                    unimp
d00086fc:       0000                    unimp
d00086fe:       0000                    unimp
d0008700:       0000                    unimp
d0008702:       0000                    unimp
d0008704:       0000                    unimp
d0008706:       0000                    unimp
d0008708:       0000                    unimp
d000870a:       0000                    unimp
d000870c:       0000                    unimp
d000870e:       0000                    unimp
d0008710:       0000                    unimp
d0008712:       0000                    unimp
d0008714:       0000                    unimp
d0008716:       0000                    unimp
d0008718:       0000                    unimp
d000871a:       0000                    unimp
d000871c:       0000                    unimp
d000871e:       0000                    unimp
d0008720:       0000                    unimp
d0008722:       0000                    unimp
d0008724:       0000                    unimp
d0008726:       0000                    unimp
d0008728:       0000                    unimp
d000872a:       0000                    unimp
d000872c:       0000                    unimp
d000872e:       0000                    unimp
d0008730:       0000                    unimp
d0008732:       0000                    unimp
d0008734:       0000                    unimp
d0008736:       0000                    unimp
d0008738:       0000                    unimp
d000873a:       0000                    unimp
d000873c:       0000                    unimp
d000873e:       0000                    unimp
d0008740:       0000                    unimp
d0008742:       0000                    unimp
d0008744:       0000                    unimp
d0008746:       0000                    unimp
d0008748:       0000                    unimp
d000874a:       0000                    unimp
d000874c:       0000                    unimp
d000874e:       0000                    unimp
d0008750:       0000                    unimp
d0008752:       0000                    unimp
d0008754:       0000                    unimp
d0008756:       0000                    unimp
d0008758:       0000                    unimp
d000875a:       0000                    unimp
d000875c:       0000                    unimp
d000875e:       0000                    unimp
d0008760:       0000                    unimp
d0008762:       0000                    unimp
d0008764:       0000                    unimp
d0008766:       0000                    unimp
d0008768:       0000                    unimp
d000876a:       0000                    unimp
d000876c:       0000                    unimp
d000876e:       0000                    unimp
d0008770:       0000                    unimp
d0008772:       0000                    unimp
d0008774:       0000                    unimp
d0008776:       0000                    unimp
d0008778:       0000                    unimp
d000877a:       0000                    unimp
d000877c:       0000                    unimp
d000877e:       0000                    unimp
d0008780:       0000                    unimp
d0008782:       0000                    unimp
d0008784:       0000                    unimp
d0008786:       0000                    unimp
d0008788:       0000                    unimp
d000878a:       0000                    unimp
d000878c:       0000                    unimp
d000878e:       0000                    unimp
d0008790:       0000                    unimp
d0008792:       0000                    unimp
d0008794:       0000                    unimp
d0008796:       0000                    unimp
d0008798:       0000                    unimp
d000879a:       0000                    unimp
d000879c:       0000                    unimp
d000879e:       0000                    unimp
d00087a0:       0000                    unimp
d00087a2:       0000                    unimp
d00087a4:       0000                    unimp
d00087a6:       0000                    unimp
d00087a8:       0000                    unimp
d00087aa:       0000                    unimp
d00087ac:       0000                    unimp
d00087ae:       0000                    unimp
d00087b0:       0000                    unimp
d00087b2:       0000                    unimp
d00087b4:       0000                    unimp
d00087b6:       0000                    unimp
d00087b8:       0000                    unimp
d00087ba:       0000                    unimp
d00087bc:       0000                    unimp
d00087be:       0000                    unimp
d00087c0:       0000                    unimp
d00087c2:       0000                    unimp
d00087c4:       0000                    unimp
d00087c6:       0000                    unimp
d00087c8:       0000                    unimp
d00087ca:       0000                    unimp
d00087cc:       0000                    unimp
d00087ce:       0000                    unimp
d00087d0:       0000                    unimp
d00087d2:       0000                    unimp
d00087d4:       0000                    unimp
d00087d6:       0000                    unimp
d00087d8:       0000                    unimp
d00087da:       0000                    unimp
d00087dc:       0000                    unimp
d00087de:       0000                    unimp
d00087e0:       0000                    unimp
d00087e2:       0000                    unimp
d00087e4:       0000                    unimp
d00087e6:       0000                    unimp
d00087e8:       0000                    unimp
d00087ea:       0000                    unimp
d00087ec:       0000                    unimp
d00087ee:       0000                    unimp
d00087f0:       0000                    unimp
d00087f2:       0000                    unimp
d00087f4:       0000                    unimp
d00087f6:       0000                    unimp
d00087f8:       0000                    unimp
d00087fa:       0000                    unimp
d00087fc:       0000                    unimp
d00087fe:       0000                    unimp

Disassembly of section .text:

d0008800 <init_spi_host>:
init_spi_host():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:122
                   uint32_t peripheral_clock_freq_hz) {
d0008800:                 7179                  addi    sp,sp,-48
d0008802:                 d606                  sw      ra,44(sp)
d0008804:                 d422                  sw      s0,40(sp)
d0008806:                 d226                  sw      s1,36(sp)
d0008808:                 d04a                  sw      s2,32(sp)
d000880a:                 842a                  mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:124
      .spi_clock = peripheral_clock_freq_hz / 2,// 100, for tape out 1MHz, in sim 50MHz
d000880c:                 0015d513              srli    a0,a1,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:131
  CHECK_DIF_OK(dif_spi_host_configure(spi_host, config));
d0008810:                 c42a                  sw      a0,8(sp)
d0008812:                 c62e                  sw      a1,12(sp)
d0008814:                 01020537              lui     a0,0x1020
d0008818:                 20250513              addi    a0,a0,514 # 1020202 <_rom_ext_virtual_size+0xfa0202>
d000881c:                 c82a                  sw      a0,16(sp)
d000881e:                 10100513              li      a0,257
d0008822:                 00a11a23              sh      a0,20(sp)
d0008826:                 002c                  addi    a1,sp,8
d0008828:                 8522                  mv      a0,s0
d000882a:                 385030ef              jal     ra,d000c3ae <dif_spi_host_configure>
d000882e:                 00007917              auipc   s2,0x7
d0008832:                 2e290913              addi    s2,s2,738 # d000fb10 <kDeviceLogBypassUartAddress>
d0008836:       /-------- cd0d                  beqz    a0,d0008870 <init_spi_host+0x70>
d0008838:       |         84aa                  mv      s1,a0
d000883a:       |         00092503              lw      a0,0(s2)
d000883e:       |     /-- c901                  beqz    a0,d000884e <init_spi_host+0x4e>
d0008840:       |     |   00000513              li      a0,0
d0008844:       |     |   4585                  li      a1,1
d0008846:       |     |   8626                  mv      a2,s1
d0008848:       |     |   77b030ef              jal     ra,d000c7c2 <base_log_internal_dv>
d000884c:       |  /--|-- a829                  j       d0008866 <init_spi_host+0x66>
d000884e:       |  |  \-> 00006597              auipc   a1,0x6
d0008852:       |  |      3f258593              addi    a1,a1,1010 # d000ec40 <_text_end+0x238>
d0008856:       |  |      0028                  addi    a0,sp,8
d0008858:       |  |      4651                  li      a2,20
d000885a:       |  |      413050ef              jal     ra,d000e46c <memcpy>
d000885e:       |  |      0028                  addi    a0,sp,8
d0008860:       |  |      85a6                  mv      a1,s1
d0008862:       |  |      6bf030ef              jal     ra,d000c720 <base_log_internal_core>
d0008866:       |  \----> 6531                  lui     a0,0xc
d0008868:       |         aad50513              addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d000886c:       |         609030ef              jal     ra,d000c674 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:132
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(spi_host, /*enabled=*/true));
d0008870:       \-------> 4585                  li      a1,1
d0008872:                 8522                  mv      a0,s0
d0008874:                 3bd030ef              jal     ra,d000c430 <dif_spi_host_output_set_enabled>
d0008878:       /-------- cd0d                  beqz    a0,d00088b2 <init_spi_host+0xb2>
d000887a:       |         842a                  mv      s0,a0
d000887c:       |         00092503              lw      a0,0(s2)
d0008880:       |     /-- c901                  beqz    a0,d0008890 <init_spi_host+0x90>
d0008882:       |     |   01400513              li      a0,20
d0008886:       |     |   4585                  li      a1,1
d0008888:       |     |   8622                  mv      a2,s0
d000888a:       |     |   739030ef              jal     ra,d000c7c2 <base_log_internal_dv>
d000888e:       |  /--|-- a829                  j       d00088a8 <init_spi_host+0xa8>
d0008890:       |  |  \-> 00006597              auipc   a1,0x6
d0008894:       |  |      3c458593              addi    a1,a1,964 # d000ec54 <_text_end+0x24c>
d0008898:       |  |      0028                  addi    a0,sp,8
d000889a:       |  |      4651                  li      a2,20
d000889c:       |  |      3d1050ef              jal     ra,d000e46c <memcpy>
d00088a0:       |  |      0028                  addi    a0,sp,8
d00088a2:       |  |      85a2                  mv      a1,s0
d00088a4:       |  |      67d030ef              jal     ra,d000c720 <base_log_internal_core>
d00088a8:       |  \----> 6531                  lui     a0,0xc
d00088aa:       |         aad50513              addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d00088ae:       |         5c7030ef              jal     ra,d000c674 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:133
}
d00088b2:       \-------> 5902                  lw      s2,32(sp)
d00088b4:                 5492                  lw      s1,36(sp)
d00088b6:                 5422                  lw      s0,40(sp)
d00088b8:                 50b2                  lw      ra,44(sp)
d00088ba:                 6145                  addi    sp,sp,48
d00088bc:                 8082                  ret

d00088be <spi_flash_load_data>:
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:135
void spi_flash_load_data(void){
d00088be:                    7125                       addi    sp,sp,-416
d00088c0:                    18112e23           sw      ra,412(sp)
d00088c4:                    18812c23           sw      s0,408(sp)
d00088c8:                    18912a23           sw      s1,404(sp)
d00088cc:                    19212823           sw      s2,400(sp)
d00088d0:                    19312623           sw      s3,396(sp)
d00088d4:                    19412423           sw      s4,392(sp)
d00088d8:                    19512223           sw      s5,388(sp)
d00088dc:                    19612023           sw      s6,384(sp)
d00088e0:                    17712e23           sw      s7,380(sp)
d00088e4:                    17812c23           sw      s8,376(sp)
d00088e8:                    17912a23           sw      s9,372(sp)
d00088ec:                    17a12823           sw      s10,368(sp)
d00088f0:                    17b12623           sw      s11,364(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:157
  CHECK_DIF_OK(dif_spi_host_init(mmio_region_from_addr(base_addr), &spi_host));
d00088f4:                    0fff9597           auipc   a1,0xfff9
d00088f8:                    76858593           addi    a1,a1,1896 # e000205c <spi_host>
d00088fc:                    c0300537           lui     a0,0xc0300
d0008900:                    08b030ef           jal     ra,d000c18a <dif_spi_host_init>
d0008904:                    00007597           auipc   a1,0x7
d0008908:                    20c58593           addi    a1,a1,524 # d000fb10 <kDeviceLogBypassUartAddress>
d000890c:                    0005a903           lw      s2,0(a1)
d0008910:          /-------- cd05                       beqz    a0,d0008948 <spi_flash_load_data+0x8a>
d0008912:          |         842a                       mv      s0,a0
d0008914:          |     /-- 00090963           beqz    s2,d0008926 <spi_flash_load_data+0x68>
d0008918:          |     |   02800513           li      a0,40
d000891c:          |     |   4585                       li      a1,1
d000891e:          |     |   8622                       mv      a2,s0
d0008920:          |     |   6a3030ef           jal     ra,d000c7c2 <base_log_internal_dv>
d0008924:          |  /--|-- a829                       j       d000893e <spi_flash_load_data+0x80>
d0008926:          |  |  \-> 00006597           auipc   a1,0x6
d000892a:          |  |      34258593           addi    a1,a1,834 # d000ec68 <_text_end+0x260>
d000892e:          |  |      1a08                       addi    a0,sp,304
d0008930:          |  |      4651                       li      a2,20
d0008932:          |  |      33b050ef           jal     ra,d000e46c <memcpy>
d0008936:          |  |      1a08                       addi    a0,sp,304
d0008938:          |  |      85a2                       mv      a1,s0
d000893a:          |  |      5e7030ef           jal     ra,d000c720 <base_log_internal_core>
d000893e:          |  \----> 6531                       lui     a0,0xc
d0008940:          |         aad50513           addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d0008944:          |         531030ef           jal     ra,d000c674 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:158
  init_spi_host(&spi_host, (uint32_t)clkHz);
d0008948:          \-------> 0fff9b97           auipc   s7,0xfff9
d000894c:                    714b8b93           addi    s7,s7,1812 # e000205c <spi_host>
d0008950:                    05f5e537           lui     a0,0x5f5e
d0008954:                    10050593           addi    a1,a0,256 # 5f5e100 <_rom_ext_virtual_size+0x5ede100>
d0008958:                    855e                       mv      a0,s7
d000895a:                    355d                       jal     d0008800 <init_spi_host>
d000895c:                    4401                       li      s0,0
d000895e:                    4c01                       li      s8,0
d0008960:                    ff0004b7           lui     s1,0xff000
d0008964:                    4d05                       li      s10,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:160
  *datapath = 1;
d0008966:                    01a4ae23           sw      s10,28(s1) # ff00001c <_stack_end+0x1efe001c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:161
  *address = 0;
d000896a:                    0004a623           sw      zero,12(s1)
d000896e:                    00193b13           seqz    s6,s2
d0008972:                    0fc00913           li      s2,252
d0008976:                    6541                       lui     a0,0x10
d0008978:                    f0050a13           addi    s4,a0,-256 # ff00 <_stack_size+0xbf00>
d000897c:                    03c00993           li      s3,60
d0008980:                    0a000d93           li      s11,160
d0008984:                    00006517           auipc   a0,0x6
d0008988:                    2f850513           addi    a0,a0,760 # d000ec7c <_text_end+0x274>
d000898c:                    c22a                       sw      a0,4(sp)
d000898e:                    6531                       lui     a0,0xc
d0008990:                    aad50a93           addi    s5,a0,-1363 # baad <_stack_size+0x7aad>
d0008994:                    03c00513           li      a0,60
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:163
  for(int j=0;j<num_iter;j++){
d0008998:                    c42a                       sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:164
     addr = j*sizeof(buf);
d000899a:       /----------> 032c0533           mul     a0,s8,s2
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
 * @param bitfield Bitfield to reverse bytes of.
 * @return `bitfield` with the order of bytes reversed.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t bitfield_byteswap32(uint32_t bitfield) {
  return __builtin_bswap32(bitfield);
d000899e:       |            00855593           srli    a1,a0,0x8
d00089a2:       |            0145f5b3           and     a1,a1,s4
d00089a6:       |            01855613           srli    a2,a0,0x18
d00089aa:       |            8dd1                       or      a1,a1,a2
d00089ac:       |            00851613           slli    a2,a0,0x8
d00089b0:       |            00ff06b7           lui     a3,0xff0
d00089b4:       |            8e75                       and     a2,a2,a3
d00089b6:       |            0562                       slli    a0,a0,0x18
d00089b8:       |            8d51                       or      a0,a0,a2
d00089ba:       |            00b56cb3           or      s9,a0,a1
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:166
     segments[0] = (dif_spi_host_segment_t) {
d00089be:       |            12110513           addi    a0,sp,289
d00089c2:       |            463d                       li      a2,15
d00089c4:       |            4581                       li      a1,0
d00089c6:       |            32f050ef           jal     ra,d000e4f4 <memset>
d00089ca:       |            12012823           sw      zero,304(sp)
d00089ce:       |            454d                       li      a0,19
d00089d0:       |            12a10a23           sb      a0,308(sp)
d00089d4:       |            12110593           addi    a1,sp,289
d00089d8:       |            463d                       li      a2,15
d00089da:       |            13510513           addi    a0,sp,309
d00089de:       |            28f050ef           jal     ra,d000e46c <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:170
     segments[1] = (dif_spi_host_segment_t) {
d00089e2:       |            15a12223           sw      s10,324(sp)
d00089e6:       |            14012423           sw      zero,328(sp)
d00089ea:       |            15a12623           sw      s10,332(sp)
d00089ee:       |            15912823           sw      s9,336(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:179
     segments[2] = (dif_spi_host_segment_t) {
d00089f2:       |            4511                       li      a0,4
d00089f4:       |            14a12c23           sw      a0,344(sp)
d00089f8:       |            14012e23           sw      zero,348(sp)
d00089fc:       |            0068                       addi    a0,sp,12
d00089fe:       |            16a12023           sw      a0,352(sp)
d0008a02:       |            17212223           sw      s2,356(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:189
     CHECK_DIF_OK(
d0008a06:       |            1a10                       addi    a2,sp,304
d0008a08:       |            468d                       li      a3,3
d0008a0a:       |            855e                       mv      a0,s7
d0008a0c:       |            4581                       li      a1,0
d0008a0e:       |            277030ef           jal     ra,d000c484 <dif_spi_host_transaction>
d0008a12:       |  /-------- c515                       beqz    a0,d0008a3e <spi_flash_load_data+0x180>
d0008a14:       |  |         8caa                       mv      s9,a0
d0008a16:       |  |     /-- 000b1863           bnez    s6,d0008a26 <spi_flash_load_data+0x168>
d0008a1a:       |  |     |   4585                       li      a1,1
d0008a1c:       |  |     |   4522                       lw      a0,8(sp)
d0008a1e:       |  |     |   8666                       mv      a2,s9
d0008a20:       |  |     |   5a3030ef           jal     ra,d000c7c2 <base_log_internal_dv>
d0008a24:       |  |  /--|-- a811                       j       d0008a38 <spi_flash_load_data+0x17a>
d0008a26:       |  |  |  \-> 0228                       addi    a0,sp,264
d0008a28:       |  |  |      4651                       li      a2,20
d0008a2a:       |  |  |      4592                       lw      a1,4(sp)
d0008a2c:       |  |  |      241050ef           jal     ra,d000e46c <memcpy>
d0008a30:       |  |  |      0228                       addi    a0,sp,264
d0008a32:       |  |  |      85e6                       mv      a1,s9
d0008a34:       |  |  |      4ed030ef           jal     ra,d000c720 <base_log_internal_core>
d0008a38:       |  |  \----> 8556                       mv      a0,s5
d0008a3a:       |  |         43b030ef           jal     ra,d000c674 <test_status_set>
d0008a3e:       |  \-------> 5575                       li      a0,-3
d0008a40:       |            080c                       addi    a1,sp,16
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:194
         *payload_1 = buf[i];
d0008a42:       |        /-> ffc5a603           lw      a2,-4(a1)
d0008a46:       |        |   c090                       sw      a2,0(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:195
         *payload_2 = buf[i+1];
d0008a48:       |        |   4190                       lw      a2,0(a1)
d0008a4a:       |        |   c0d0                       sw      a2,4(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:196
         *payload_3 = buf[i+2];
d0008a4c:       |        |   41d0                       lw      a2,4(a1)
d0008a4e:       |        |   c490                       sw      a2,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:197
         *address   = index;
d0008a50:       |        |   c4c0                       sw      s0,12(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:198
         *start = 0x1;
d0008a52:       |        |   01a4a823           sw      s10,16(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:199
         index++;
d0008a56:       |        |   0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:192
     for(int i = 0; i < buf_size; i += 3) {
d0008a58:       |        |   050d                       addi    a0,a0,3
d0008a5a:       |        |   05b1                       addi    a1,a1,12
d0008a5c:       |        \-- ff3563e3           bltu    a0,s3,d0008a42 <spi_flash_load_data+0x184>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:163
  for(int j=0;j<num_iter;j++){
d0008a60:       |            0c05                       addi    s8,s8,1
d0008a62:       \----------- f3bc1ce3           bne     s8,s11,d000899a <spi_flash_load_data+0xdc>
d0008a66:                    ff000537           lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:204
  *datapath = 0;
d0008a6a:                    00052e23           sw      zero,28(a0) # ff00001c <_stack_end+0x1efe001c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:205
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(&spi_host, false));
d0008a6e:                    0fff9517           auipc   a0,0xfff9
d0008a72:                    5ee50513           addi    a0,a0,1518 # e000205c <spi_host>
d0008a76:                    4581                       li      a1,0
d0008a78:                    1b9030ef           jal     ra,d000c430 <dif_spi_host_output_set_enabled>
d0008a7c:          /-------- cd05                       beqz    a0,d0008ab4 <spi_flash_load_data+0x1f6>
d0008a7e:          |         842a                       mv      s0,a0
d0008a80:          |     /-- 000b1963           bnez    s6,d0008a92 <spi_flash_load_data+0x1d4>
d0008a84:          |     |   05000513           li      a0,80
d0008a88:          |     |   4585                       li      a1,1
d0008a8a:          |     |   8622                       mv      a2,s0
d0008a8c:          |     |   537030ef           jal     ra,d000c7c2 <base_log_internal_dv>
d0008a90:          |  /--|-- a829                       j       d0008aaa <spi_flash_load_data+0x1ec>
d0008a92:          |  |  \-> 00006597           auipc   a1,0x6
d0008a96:          |  |      1fe58593           addi    a1,a1,510 # d000ec90 <_text_end+0x288>
d0008a9a:          |  |      0228                       addi    a0,sp,264
d0008a9c:          |  |      4651                       li      a2,20
d0008a9e:          |  |      1cf050ef           jal     ra,d000e46c <memcpy>
d0008aa2:          |  |      0228                       addi    a0,sp,264
d0008aa4:          |  |      85a2                       mv      a1,s0
d0008aa6:          |  |      47b030ef           jal     ra,d000c720 <base_log_internal_core>
d0008aaa:          |  \----> 6531                       lui     a0,0xc
d0008aac:          |         aad50513           addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d0008ab0:          |         3c5030ef           jal     ra,d000c674 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:206
}
d0008ab4:          \-------> 16c12d83           lw      s11,364(sp)
d0008ab8:                    17012d03           lw      s10,368(sp)
d0008abc:                    17412c83           lw      s9,372(sp)
d0008ac0:                    17812c03           lw      s8,376(sp)
d0008ac4:                    17c12b83           lw      s7,380(sp)
d0008ac8:                    18012b03           lw      s6,384(sp)
d0008acc:                    18412a83           lw      s5,388(sp)
d0008ad0:                    18812a03           lw      s4,392(sp)
d0008ad4:                    18c12983           lw      s3,396(sp)
d0008ad8:                    19012903           lw      s2,400(sp)
d0008adc:                    19412483           lw      s1,404(sp)
d0008ae0:                    19812403           lw      s0,408(sp)
d0008ae4:                    19c12083           lw      ra,412(sp)
d0008ae8:                    611d                       addi    sp,sp,416
d0008aea:                    8082                       ret

d0008aec <rom_main>:
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:537
void rom_main(void) {
d0008aec:                 1101                  addi    sp,sp,-32
d0008aee:                 ce06                  sw      ra,28(sp)
d0008af0:                 cc22                  sw      s0,24(sp)
d0008af2:                 ca26                  sw      s1,20(sp)
d0008af4:                 c84a                  sw      s2,16(sp)
d0008af6:                 c64e                  sw      s3,12(sp)
d0008af8:                 c452                  sw      s4,8(sp)
d0008afa:                 c256                  sw      s5,4(sp)
d0008afc:                 c1418a93              addi    s5,gp,-1004 # e000246c <rom_counters>
d0008b00:                 1a500513              li      a0,421
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:542
  CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomMain);
d0008b04:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:543
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 1, kCfiRomInit);
d0008b08:                 000aa583              lw      a1,0(s5)
d0008b0c:             /-- 00a58663              beq     a1,a0,d0008b18 <rom_main+0x2c>
d0008b10:             |   0000                  unimp
d0008b12:             |   0000                  unimp
d0008b14:             |   0000                  unimp
d0008b16:             |   0000                  unimp
d0008b18:             \-> 000aa503              lw      a0,0(s5)
d0008b1c:                 05a50513              addi    a0,a0,90
d0008b20:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
 * loop; however, the barriers in each loop iteration force a particular order
 * is observed.
 *
 * @param val A value to create a barrier for.
 */
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008b24:                 6505                  lui     a0,0x1
d0008b26:                 83650513              addi    a0,a0,-1994 # 836 <_epmp_reset_rx_size+0x36>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:543
d0008b2a:                 00aaa223              sw      a0,4(s5)
d0008b2e:                 000aa583              lw      a1,0(s5)
d0008b32:                 1ff00613              li      a2,511
d0008b36:             /-- 00c58663              beq     a1,a2,d0008b42 <rom_main+0x56>
d0008b3a:             |   0000                  unimp
d0008b3c:             |   0000                  unimp
d0008b3e:             |   0000                  unimp
d0008b40:             |   0000                  unimp
d0008b42:             \-> 000aa583              lw      a1,0(s5)
d0008b46:                 05a58593              addi    a1,a1,90
d0008b4a:                 00baa023              sw      a1,0(s5)
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:212
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 1);
d0008b4e:                 004aa583              lw      a1,4(s5)
d0008b52:             /-- 00a58663              beq     a1,a0,d0008b5e <rom_main+0x72>
d0008b56:             |   0000                  unimp
d0008b58:             |   0000                  unimp
d0008b5a:             |   0000                  unimp
d0008b5c:             |   0000                  unimp
d0008b5e:             \-> 004aa503              lw      a0,4(s5)
d0008b62:                 05a50513              addi    a0,a0,90
d0008b66:                 00aaa223              sw      a0,4(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:213
  sec_mmio_init();
d0008b6a:                 69e050ef              jal     ra,d000e208 <sec_mmio_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:215
  pinmux_init();
d0008b6e:                 396030ef              jal     ra,d000bf04 <pinmux_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:217
  uart_init(kUartNCOValue);
d0008b72:                 00007517              auipc   a0,0x7
d0008b76:                 f8e50513              addi    a0,a0,-114 # d000fb00 <kUartNCOValue>
d0008b7a:                 4108                  lw      a0,0(a0)
d0008b7c:                 444030ef              jal     ra,d000bfc0 <uart_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:226
  uart_set_cfg(0,(test_freq/baud_rate)>>4);
d0008b80:                 45ed                  li      a1,27
d0008b82:                 4501                  li      a0,0
d0008b84:                 668010ef              jal     ra,d000a1ec <uart_set_cfg>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:231
  CSR_WRITE(CSR_REG_SECURESEED, rnd_uint32());
d0008b88:                 18e050ef              jal     ra,d000dd16 <rnd_uint32>
d0008b8c:                 7c151073              csrw    0x7c1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:235
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d0008b90:                 7c002473              csrr    s0,0x7c0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:238
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET));
d0008b94:                 10c00513              li      a0,268
d0008b98:                 668050ef              jal     ra,d000e200 <otp_read32>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d0008b9c:                 fc047593              andi    a1,s0,-64
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d0008ba0:                 03f57513              andi    a0,a0,63
d0008ba4:                 8d4d                  or      a0,a0,a1
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:239
  CSR_WRITE(CSR_REG_CPUCTRL, cpuctrl_csr);
d0008ba6:                 7c051073              csrw    0x7c0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:241
  lc_state = lifecycle_state_get();
d0008baa:                 444050ef              jal     ra,d000dfee <lifecycle_state_get>
d0008bae:                 0fff9417              auipc   s0,0xfff9
d0008bb2:                 4aa40413              addi    s0,s0,1194 # e0002058 <lc_state>
d0008bb6:                 c008                  sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:244
  rom_epmp_config_debug_rom(lc_state);
d0008bb8:                 4a8040ef              jal     ra,d000d060 <rom_epmp_config_debug_rom>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:247
  watchdog_init(lc_state);
d0008bbc:                 4008                  lw      a0,0(s0)
d0008bbe:                 44c030ef              jal     ra,d000c00a <watchdog_init>
d0008bc2:                 0fff7497              auipc   s1,0xfff7
d0008bc6:                 4b248493              addi    s1,s1,1202 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:248
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bca:                 448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:251
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008bcc:                 4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:248
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bce:                 0591                  addi    a1,a1,4
d0008bd0:                 c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:251
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008bd2:                 56b010ef              jal     ra,d000a93c <shutdown_init>
d0008bd6:                 8a2a                  mv      s4,a0
d0008bd8:                 73900993              li      s3,1849
d0008bdc:       /-------- 09351f63              bne     a0,s3,d0008c7a <rom_main+0x18e>
d0008be0:       |     /-- 013a0663              beq     s4,s3,d0008bec <rom_main+0x100>
d0008be4:       |     |   0000                  unimp
d0008be6:       |     |   0000                  unimp
d0008be8:       |     |   0000                  unimp
d0008bea:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:253
  flash_ctrl_init();
d0008bec:       |     \-> 71a020ef              jal     ra,d000b306 <flash_ctrl_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:254
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008bf0:       |         448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:257
  rom_epmp_state_init(lc_state);
d0008bf2:       |         4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:254
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008bf4:       |         058d                  addi    a1,a1,3
d0008bf6:       |         c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:257
  rom_epmp_state_init(lc_state);
d0008bf8:       |         2b2040ef              jal     ra,d000ceaa <rom_epmp_state_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:260
  HARDENED_RETURN_IF_ERROR(ast_check(lc_state));
d0008bfc:       |         4008                  lw      a0,0(s0)
d0008bfe:       |         5ea020ef              jal     ra,d000b1e8 <ast_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008c02:       |         85aa                  mv      a1,a0
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:260
d0008c04:       |  /----- 07359a63              bne     a1,s3,d0008c78 <rom_main+0x18c>
d0008c08:       |  |      73900a13              li      s4,1849
d0008c0c:       |  |  /-- 01450663              beq     a0,s4,d0008c18 <rom_main+0x12c>
d0008c10:       |  |  |   0000                  unimp
d0008c12:       |  |  |   0000                  unimp
d0008c14:       |  |  |   0000                  unimp
d0008c16:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:264
  uint32_t reset_reasons = rstmgr_reason_get();
d0008c18:       |  |  \-> 35c030ef              jal     ra,d000bf74 <rstmgr_reason_get>
d0008c1c:       |  |      892a                  mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:267
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RET_RAM_RESET_MASK_OFFSET);
d0008c1e:       |  |      10000513              li      a0,256
d0008c22:       |  |      5de050ef              jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:266
      (1 << kRstmgrReasonPowerOn) |
d0008c26:       |  |      00156513              ori     a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:268
  if ((reset_reasons & reset_mask) != 0) {
d0008c2a:       |  |      01257533              and     a0,a0,s2
d0008c2e:       |  |  /-- c119                  beqz    a0,d0008c34 <rom_main+0x148>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:269
    retention_sram_init();
d0008c30:       |  |  |   33a030ef              jal     ra,d000bf6a <retention_sram_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:272
  retention_sram_get()->reset_reasons = reset_reasons;
d0008c34:       |  |  \-> 330030ef              jal     ra,d000bf64 <retention_sram_get>
d0008c38:       |  |      01252023              sw      s2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:273
  rstmgr_reason_clear(reset_reasons);
d0008c3c:       |  |      854a                  mv      a0,s2
d0008c3e:       |  |      36a030ef              jal     ra,d000bfa8 <rstmgr_reason_clear>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:276
  device_fpga_version_print();
d0008c42:       |  |      32d050ef              jal     ra,d000e76e <device_fpga_version_print>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:278
  sec_mmio_check_values(rnd_uint32());
d0008c46:       |  |      0d0050ef              jal     ra,d000dd16 <rnd_uint32>
d0008c4a:       |  |      766050ef              jal     ra,d000e3b0 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:279
  sec_mmio_check_counters(/*expected_check_count=*/1);
d0008c4e:       |  |      4505                  li      a0,1
d0008c50:       |  |      7d0050ef              jal     ra,d000e420 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:281
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 2);
d0008c54:       |  |      004aa503              lw      a0,4(s5)
d0008c58:       |  |      6585                  lui     a1,0x1
d0008c5a:       |  |      89058593              addi    a1,a1,-1904 # 890 <_epmp_reset_rx_size+0x90>
d0008c5e:       |  |  /-- 00b50663              beq     a0,a1,d0008c6a <rom_main+0x17e>
d0008c62:       |  |  |   0000                  unimp
d0008c64:       |  |  |   0000                  unimp
d0008c66:       |  |  |   0000                  unimp
d0008c68:       |  |  |   0000                  unimp
d0008c6a:       |  |  \-> 004aa503              lw      a0,4(s5)
d0008c6e:       |  |      05a50513              addi    a0,a0,90
d0008c72:       |  |      00aaa223              sw      a0,4(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008c76:       +--|----- a011                  j       d0008c7a <rom_main+0x18e>
d0008c78:       |  \----> 8a2a                  mv      s4,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008c7a:       \-------> 8552                  mv      a0,s4
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:545
  SHUTDOWN_IF_ERROR(rom_init());
d0008c7c:       /-------- 0b351463              bne     a0,s3,d0008d24 <rom_main+0x238>
d0008c80:       |         73900913              li      s2,1849
d0008c84:       |     /-- 012a0663              beq     s4,s2,d0008c90 <rom_main+0x1a4>
d0008c88:       |     |   0000                  unimp
d0008c8a:       |     |   0000                  unimp
d0008c8c:       |     |   0000                  unimp
d0008c8e:       |     |   0000                  unimp
d0008c90:       |     \-> ff000537              lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:548
  if(*pad_bootmode == 0x1){
d0008c94:       |         4948                  lw      a0,20(a0)
d0008c96:       |         4585                  li      a1,1
d0008c98:       |     /-- 00b51d63              bne     a0,a1,d0008cb2 <rom_main+0x1c6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:549
    rom_printf("Loading rom_ext from extenal SPI flash\r\n");
d0008c9c:       |     |   00006417              auipc   s0,0x6
d0008ca0:       |     |   f2140413              addi    s0,s0,-223 # d000ebbd <_text_end+0x1b5>
d0008ca4:       |     |   8522                  mv      a0,s0
d0008ca6:       |     |   781010ef              jal     ra,d000ac26 <rom_printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:550
    printf("Loading rom_ext from extenal SPI flash\r\n");
d0008caa:       |     |   8522                  mv      a0,s0
d0008cac:       |     |   582010ef              jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:551
    spi_flash_load_data();
d0008cb0:       |     |   3139                  jal     d00088be <spi_flash_load_data>
rom_bootstrap_message():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:117
  rom_printf("Bootin some fresh cochina!\r\n");
d0008cb2:       |     \-> 00006417              auipc   s0,0x6
d0008cb6:       |         f3440413              addi    s0,s0,-204 # d000ebe6 <_text_end+0x1de>
d0008cba:       |         8522                  mv      a0,s0
d0008cbc:       |         76b010ef              jal     ra,d000ac26 <rom_printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:118
  printf("Bootin some fresh cochina!\r\n");
d0008cc0:       |         8522                  mv      a0,s0
d0008cc2:       |         56c010ef              jal     ra,d000a22e <printf>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:556
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomMain, 3);
d0008cc6:       |         000aa503              lw      a0,0(s5)
d0008cca:       |         25900593              li      a1,601
d0008cce:       |     /-- 00b50663              beq     a0,a1,d0008cda <rom_main+0x1ee>
d0008cd2:       |     |   0000                  unimp
d0008cd4:       |     |   0000                  unimp
d0008cd6:       |     |   0000                  unimp
d0008cd8:       |     |   0000                  unimp
d0008cda:       |     \-> 000aa503              lw      a0,0(s5)
d0008cde:       |         05a50513              addi    a0,a0,90 # ff00005a <_stack_end+0x1efe005a>
d0008ce2:       |         00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:557
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomInit, 3);
d0008ce6:       |         004aa503              lw      a0,4(s5)
d0008cea:       |         6585                  lui     a1,0x1
d0008cec:       |         8ea58593              addi    a1,a1,-1814 # 8ea <_epmp_reset_rx_size+0xea>
d0008cf0:       |     /-- 00b50663              beq     a0,a1,d0008cfc <rom_main+0x210>
d0008cf4:       |     |   0000                  unimp
d0008cf6:       |     |   0000                  unimp
d0008cf8:       |     |   0000                  unimp
d0008cfa:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:559
  hardened_bool_t bootstrap_req = bootstrap_requested();
d0008cfc:       |     \-> 717000ef              jal     ra,d0009c12 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008d00:       |         85aa                  mv      a1,a0
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:560
  if (launder32(bootstrap_req) == kHardenedBoolTrue) {
d0008d02:       |  /----- 03259463              bne     a1,s2,d0008d2a <rom_main+0x23e>
d0008d06:       |  |      73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:561
    HARDENED_CHECK_EQ(bootstrap_req, kHardenedBoolTrue);
d0008d0a:       |  |  /-- 00b50663              beq     a0,a1,d0008d16 <rom_main+0x22a>
d0008d0e:       |  |  |   0000                  unimp
d0008d10:       |  |  |   0000                  unimp
d0008d12:       |  |  |   0000                  unimp
d0008d14:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:562
    rom_bootstrap_message();
d0008d16:       |  |  \-> 208d                  jal     d0008d78 <rom_bootstrap_message>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:563
    watchdog_disable();
d0008d18:       |  |      466030ef              jal     ra,d000c17e <watchdog_disable>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:564
    shutdown_finalize(bootstrap());
d0008d1c:       |  |      74d000ef              jal     ra,d0009c68 <bootstrap>
d0008d20:       |  |      251050ef              jal     ra,d000e770 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:545
  SHUTDOWN_IF_ERROR(rom_init());
d0008d24:       \--|----> 8552                  mv      a0,s4
d0008d26:          |      24b050ef              jal     ra,d000e770 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:568
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 4, kCfiRomTryBoot);
d0008d2a:          \----> 000aa503              lw      a0,0(s5)
d0008d2e:                 2b300593              li      a1,691
d0008d32:             /-- 00b50663              beq     a0,a1,d0008d3e <rom_main+0x252>
d0008d36:             |   0000                  unimp
d0008d38:             |   0000                  unimp
d0008d3a:             |   0000                  unimp
d0008d3c:             |   0000                  unimp
d0008d3e:             \-> 000aa503              lw      a0,0(s5)
d0008d42:                 05a50513              addi    a0,a0,90
d0008d46:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008d4a:                 28f00513              li      a0,655
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:568
d0008d4e:                 00aaa623              sw      a0,12(s5)
d0008d52:                 000aa503              lw      a0,0(s5)
d0008d56:                 30d00593              li      a1,781
d0008d5a:             /-- 00b50663              beq     a0,a1,d0008d66 <rom_main+0x27a>
d0008d5e:             |   0000                  unimp
d0008d60:             |   0000                  unimp
d0008d62:             |   0000                  unimp
d0008d64:             |   0000                  unimp
d0008d66:             \-> 000aa503              lw      a0,0(s5)
d0008d6a:                 05a50513              addi    a0,a0,90
d0008d6e:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:571
  shutdown_finalize(rom_try_boot());
d0008d72:                 201d                  jal     d0008d98 <rom_try_boot>
d0008d74:                 1fd050ef              jal     ra,d000e770 <shutdown_finalize>

d0008d78 <rom_bootstrap_message>:
rom_bootstrap_message():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:116
static void rom_bootstrap_message(void) {
d0008d78:       1141                    addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:117
  rom_printf("Bootin some fresh cochina!\r\n");
d0008d7a:       c606                    sw      ra,12(sp)
d0008d7c:       c422                    sw      s0,8(sp)
d0008d7e:       00006417                auipc   s0,0x6
d0008d82:       e6840413                addi    s0,s0,-408 # d000ebe6 <_text_end+0x1de>
d0008d86:       8522                    mv      a0,s0
d0008d88:       69f010ef                jal     ra,d000ac26 <rom_printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:118
  printf("Bootin some fresh cochina!\r\n");
d0008d8c:       8522                    mv      a0,s0
d0008d8e:       4422                    lw      s0,8(sp)
d0008d90:       40b2                    lw      ra,12(sp)
d0008d92:       0141                    addi    sp,sp,16
d0008d94:       49a0106f                j       d000a22e <printf>

d0008d98 <rom_try_boot>:
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:505
static rom_error_t rom_try_boot(void) {
d0008d98:                    1101                       addi    sp,sp,-32
d0008d9a:                    ce06                       sw      ra,28(sp)
d0008d9c:                    cc22                       sw      s0,24(sp)
d0008d9e:                    ca26                       sw      s1,20(sp)
d0008da0:                    c84a                       sw      s2,16(sp)
d0008da2:                    c64e                       sw      s3,12(sp)
d0008da4:                    c452                       sw      s4,8(sp)
d0008da6:                    c256                       sw      s5,4(sp)
d0008da8:                    c1418413           addi    s0,gp,-1004 # e000246c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:506
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 1);
d0008dac:                    4448                       lw      a0,12(s0)
d0008dae:                    28f00593           li      a1,655
d0008db2:                /-- 00b50663           beq     a0,a1,d0008dbe <rom_try_boot+0x26>
d0008db6:                |   0000                       unimp
d0008db8:                |   0000                       unimp
d0008dba:                |   0000                       unimp
d0008dbc:                |   0000                       unimp
d0008dbe:                \-> 4448                       lw      a0,12(s0)
d0008dc0:                    05a50513           addi    a0,a0,90
d0008dc4:                    c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:509
  HARDENED_RETURN_IF_ERROR(boot_data_read(lc_state, &boot_data));
d0008dc6:                    0fff9517           auipc   a0,0xfff9
d0008dca:                    29250513           addi    a0,a0,658 # e0002058 <lc_state>
d0008dce:                    4108                       lw      a0,0(a0)
d0008dd0:                    c3018593           addi    a1,gp,-976 # e0002488 <boot_data>
d0008dd4:                    021000ef           jal     ra,d00095f4 <boot_data_read>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008dd8:                    85aa                       mv      a1,a0
d0008dda:                    73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:509
d0008dde:       /----------- 1c959c63           bne     a1,s1,d0008fb6 <rom_try_boot+0x21e>
d0008de2:       |        /-- 00950663           beq     a0,s1,d0008dee <rom_try_boot+0x56>
d0008de6:       |        |   0000                       unimp
d0008de8:       |        |   0000                       unimp
d0008dea:       |        |   0000                       unimp
d0008dec:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:511
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008dee:       |        \-> 2725                       jal     d0009516 <boot_policy_manifests_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008df0:       |            4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:512
  uint32_t flash_exec = 0;
d0008df2:       |            c002                       sw      zero,0(sp)
d0008df4:       |            2e900993           li      s3,745
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008df8:       |        /-- 01360663           beq     a2,s3,d0008e04 <rom_try_boot+0x6c>
d0008dfc:       |        |   0000                       unimp
d0008dfe:       |        |   0000                       unimp
d0008e00:       |        |   0000                       unimp
d0008e02:       |        |   0000                       unimp
d0008e04:       |        \-> 4450                       lw      a2,12(s0)
d0008e06:       |            05a60613           addi    a2,a2,90
d0008e0a:       |            c450                       sw      a2,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008e0c:       |            60100a93           li      s5,1537
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
d0008e10:       |            01542423           sw      s5,8(s0)
d0008e14:       |            4450                       lw      a2,12(s0)
d0008e16:       |            34300693           li      a3,835
d0008e1a:       |        /-- 00d60663           beq     a2,a3,d0008e26 <rom_try_boot+0x8e>
d0008e1e:       |        |   0000                       unimp
d0008e20:       |        |   0000                       unimp
d0008e22:       |        |   0000                       unimp
d0008e24:       |        |   0000                       unimp
d0008e26:       |        \-> 4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:511
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008e28:       |            8a2a                       mv      s4,a0
d0008e2a:       |            892e                       mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008e2c:       |            05a60513           addi    a0,a2,90
d0008e30:       |            c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:515
  rom_error_t error = rom_verify(manifests.ordered[0], &flash_exec);
d0008e32:       |            858a                       mv      a1,sp
d0008e34:       |            8552                       mv      a0,s4
d0008e36:       |            2a49                       jal     d0008fc8 <rom_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:516
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 4);
d0008e38:       |            444c                       lw      a1,12(s0)
d0008e3a:       |            39d00613           li      a2,925
d0008e3e:       |        /-- 00c58663           beq     a1,a2,d0008e4a <rom_try_boot+0xb2>
d0008e42:       |        |   0000                       unimp
d0008e44:       |        |   0000                       unimp
d0008e46:       |        |   0000                       unimp
d0008e48:       |        |   0000                       unimp
d0008e4a:       |        \-> 444c                       lw      a1,12(s0)
d0008e4c:       |            05a58593           addi    a1,a1,90
d0008e50:       |            c44c                       sw      a1,12(s0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008e52:       |            85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:518
  if (launder32(error) == kErrorOk) {
d0008e54:       |     /----- 06959c63           bne     a1,s1,d0008ecc <rom_try_boot+0x134>
d0008e58:       |     |      73900493           li      s1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:519
    HARDENED_CHECK_EQ(error, kErrorOk);
d0008e5c:       |     |  /-- 00950663           beq     a0,s1,d0008e68 <rom_try_boot+0xd0>
d0008e60:       |     |  |   0000                       unimp
d0008e62:       |     |  |   0000                       unimp
d0008e64:       |     |  |   0000                       unimp
d0008e66:       |     |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:520
    CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008e68:       |     |  \-> 4408                       lw      a0,8(s0)
d0008e6a:       |     |      6b500593           li      a1,1717
d0008e6e:       |     |  /-- 00b50663           beq     a0,a1,d0008e7a <rom_try_boot+0xe2>
d0008e72:       |     |  |   0000                       unimp
d0008e74:       |     |  |   0000                       unimp
d0008e76:       |     |  |   0000                       unimp
d0008e78:       |     |  |   0000                       unimp
d0008e7a:       |     |  \-> 28f00513           li      a0,655
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:521
    CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomTryBoot);
d0008e7e:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
    CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 1, kCfiRomBoot);
d0008e80:       |     |      444c                       lw      a1,12(s0)
d0008e82:       |     |  /-- 00a58663           beq     a1,a0,d0008e8e <rom_try_boot+0xf6>
d0008e86:       |     |  |   0000                       unimp
d0008e88:       |     |  |   0000                       unimp
d0008e8a:       |     |  |   0000                       unimp
d0008e8c:       |     |  |   0000                       unimp
d0008e8e:       |     |  \-> 4448                       lw      a0,12(s0)
d0008e90:       |     |      05a50513           addi    a0,a0,90
d0008e94:       |     |      c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008e96:       |     |      33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
d0008e9a:       |     |      c848                       sw      a0,20(s0)
d0008e9c:       |     |      4448                       lw      a0,12(s0)
d0008e9e:       |     |  /-- 01350663           beq     a0,s3,d0008eaa <rom_try_boot+0x112>
d0008ea2:       |     |  |   0000                       unimp
d0008ea4:       |     |  |   0000                       unimp
d0008ea6:       |     |  |   0000                       unimp
d0008ea8:       |     |  |   0000                       unimp
d0008eaa:       |     |  \-> 4448                       lw      a0,12(s0)
d0008eac:       |     |      05a50513           addi    a0,a0,90
d0008eb0:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:523
    HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[0], flash_exec));
d0008eb2:       |     |      4582                       lw      a1,0(sp)
d0008eb4:       |     |      8552                       mv      a0,s4
d0008eb6:       |     |      2c49                       jal     d0009148 <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008eb8:       |     |      85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:523
d0008eba:       +-----|----- 0e959e63           bne     a1,s1,d0008fb6 <rom_try_boot+0x21e>
d0008ebe:       |     |  /-- 00950663           beq     a0,s1,d0008eca <rom_try_boot+0x132>
d0008ec2:       |     |  |   0000                       unimp
d0008ec4:       |     |  |   0000                       unimp
d0008ec6:       |     |  |   0000                       unimp
d0008ec8:       |     |  |   0000                       unimp
d0008eca:       |  /--|--\-X a0d5                       j       d0008fae <rom_try_boot+0x216>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:526
  printf("Check 1:rom verify\r\n");
d0008ecc:       |  |  \----> 00006517           auipc   a0,0x6
d0008ed0:       |  |         d3750513           addi    a0,a0,-713 # d000ec03 <_text_end+0x1fb>
d0008ed4:       |  |         35a010ef           jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:527
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 5, kCfiRomVerify);
d0008ed8:       |  |         4448                       lw      a0,12(s0)
d0008eda:       |  |         3f700593           li      a1,1015
d0008ede:       |  |     /-- 00b50663           beq     a0,a1,d0008eea <rom_try_boot+0x152>
d0008ee2:       |  |     |   0000                       unimp
d0008ee4:       |  |     |   0000                       unimp
d0008ee6:       |  |     |   0000                       unimp
d0008ee8:       |  |     |   0000                       unimp
d0008eea:       |  |     \-> 4448                       lw      a0,12(s0)
d0008eec:       |  |         05a50513           addi    a0,a0,90
d0008ef0:       |  |         c448                       sw      a0,12(s0)
d0008ef2:       |  |         01542423           sw      s5,8(s0)
d0008ef6:       |  |         4448                       lw      a0,12(s0)
d0008ef8:       |  |         45100593           li      a1,1105
d0008efc:       |  |     /-- 00b50663           beq     a0,a1,d0008f08 <rom_try_boot+0x170>
d0008f00:       |  |     |   0000                       unimp
d0008f02:       |  |     |   0000                       unimp
d0008f04:       |  |     |   0000                       unimp
d0008f06:       |  |     |   0000                       unimp
d0008f08:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f0a:       |  |         05a50513           addi    a0,a0,90
d0008f0e:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:528
  HARDENED_RETURN_IF_ERROR(rom_verify(manifests.ordered[1], &flash_exec));
d0008f10:       |  |         858a                       mv      a1,sp
d0008f12:       |  |         854a                       mv      a0,s2
d0008f14:       |  |         2855                       jal     d0008fc8 <rom_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008f16:       |  |         85aa                       mv      a1,a0
d0008f18:       |  |         73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:528
d0008f1c:       +--|-------- 08959d63           bne     a1,s1,d0008fb6 <rom_try_boot+0x21e>
d0008f20:       |  |     /-- 00950663           beq     a0,s1,d0008f2c <rom_try_boot+0x194>
d0008f24:       |  |     |   0000                       unimp
d0008f26:       |  |     |   0000                       unimp
d0008f28:       |  |     |   0000                       unimp
d0008f2a:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:529
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 7);
d0008f2c:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f2e:       |  |         4ab00593           li      a1,1195
d0008f32:       |  |     /-- 00b50663           beq     a0,a1,d0008f3e <rom_try_boot+0x1a6>
d0008f36:       |  |     |   0000                       unimp
d0008f38:       |  |     |   0000                       unimp
d0008f3a:       |  |     |   0000                       unimp
d0008f3c:       |  |     |   0000                       unimp
d0008f3e:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f40:       |  |         05a50513           addi    a0,a0,90
d0008f44:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:530
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008f46:       |  |         4408                       lw      a0,8(s0)
d0008f48:       |  |         6b500593           li      a1,1717
d0008f4c:       |  |     /-- 00b50663           beq     a0,a1,d0008f58 <rom_try_boot+0x1c0>
d0008f50:       |  |     |   0000                       unimp
d0008f52:       |  |     |   0000                       unimp
d0008f54:       |  |     |   0000                       unimp
d0008f56:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:532
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 8, kCfiRomBoot);
d0008f58:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f5a:       |  |         50500593           li      a1,1285
d0008f5e:       |  |     /-- 00b50663           beq     a0,a1,d0008f6a <rom_try_boot+0x1d2>
d0008f62:       |  |     |   0000                       unimp
d0008f64:       |  |     |   0000                       unimp
d0008f66:       |  |     |   0000                       unimp
d0008f68:       |  |     |   0000                       unimp
d0008f6a:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f6c:       |  |         05a50513           addi    a0,a0,90
d0008f70:       |  |         c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008f72:       |  |         33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:532
d0008f76:       |  |         c848                       sw      a0,20(s0)
d0008f78:       |  |         4448                       lw      a0,12(s0)
d0008f7a:       |  |         55f00593           li      a1,1375
d0008f7e:       |  |     /-- 00b50663           beq     a0,a1,d0008f8a <rom_try_boot+0x1f2>
d0008f82:       |  |     |   0000                       unimp
d0008f84:       |  |     |   0000                       unimp
d0008f86:       |  |     |   0000                       unimp
d0008f88:       |  |     |   0000                       unimp
d0008f8a:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f8c:       |  |         05a50513           addi    a0,a0,90
d0008f90:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:533
  HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[1], flash_exec));
d0008f92:       |  |         4582                       lw      a1,0(sp)
d0008f94:       |  |         854a                       mv      a0,s2
d0008f96:       |  |         2a4d                       jal     d0009148 <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008f98:       |  |         85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:533
d0008f9a:       +--|-------- 00959e63           bne     a1,s1,d0008fb6 <rom_try_boot+0x21e>
d0008f9e:       |  |         73900593           li      a1,1849
d0008fa2:       |  +-------- 00b50663           beq     a0,a1,d0008fae <rom_try_boot+0x216>
d0008fa6:       |  |         0000                       unimp
d0008fa8:       |  |         0000                       unimp
d0008faa:       |  |         0000                       unimp
d0008fac:       |  |         0000                       unimp
d0008fae:       |  \-------> 014d5537           lui     a0,0x14d5
d0008fb2:       |            20950513           addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1455209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:535
}
d0008fb6:       \----------> 4a92                       lw      s5,4(sp)
d0008fb8:                    4a22                       lw      s4,8(sp)
d0008fba:                    49b2                       lw      s3,12(sp)
d0008fbc:                    4942                       lw      s2,16(sp)
d0008fbe:                    44d2                       lw      s1,20(sp)
d0008fc0:                    4462                       lw      s0,24(sp)
d0008fc2:                    40f2                       lw      ra,28(sp)
d0008fc4:                    6105                       addi    sp,sp,32
d0008fc6:                    8082                       ret

d0008fc8 <rom_verify>:
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:296
                              uint32_t *flash_exec) {
d0008fc8:              7119                     addi    sp,sp,-128
d0008fca:              de86                     sw      ra,124(sp)
d0008fcc:              dca2                     sw      s0,120(sp)
d0008fce:              daa6                     sw      s1,116(sp)
d0008fd0:              d8ca                     sw      s2,112(sp)
d0008fd2:              d6ce                     sw      s3,108(sp)
d0008fd4:              d4d2                     sw      s4,104(sp)
d0008fd6:              d2d6                     sw      s5,100(sp)
d0008fd8:              d0da                     sw      s6,96(sp)
d0008fda:              c1418413                 addi    s0,gp,-1004 # e000246c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:297
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 1);
d0008fde:              4410                     lw      a2,8(s0)
d0008fe0:              60100693                 li      a3,1537
d0008fe4:          /-- 00d60663                 beq     a2,a3,d0008ff0 <rom_verify+0x28>
d0008fe8:          |   0000                     unimp
d0008fea:          |   0000                     unimp
d0008fec:          |   0000                     unimp
d0008fee:          |   0000                     unimp
d0008ff0:          \-> 4410                     lw      a2,8(s0)
d0008ff2:              892e                     mv      s2,a1
d0008ff4:              8b2a                     mv      s6,a0
d0008ff6:              05a60513                 addi    a0,a2,90
d0008ffa:              c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:298
  *flash_exec = 0;
d0008ffc:              0005a023                 sw      zero,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:299
  HARDENED_RETURN_IF_ERROR(boot_policy_manifest_check(manifest, &boot_data));
d0009000:              c3018a13                 addi    s4,gp,-976 # e0002488 <boot_data>
d0009004:              855a                     mv      a0,s6
d0009006:              85d2                     mv      a1,s4
d0009008:              2b0d                     jal     d000953a <boot_policy_manifest_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000900a:              85aa                     mv      a1,a0
d000900c:              73900493                 li      s1,1849
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:299
d0009010:       /----- 12959263                 bne     a1,s1,d0009134 <rom_verify+0x16c>
d0009014:       |  /-- 00950663                 beq     a0,s1,d0009020 <rom_verify+0x58>
d0009018:       |  |   0000                     unimp
d000901a:       |  |   0000                     unimp
d000901c:       |  |   0000                     unimp
d000901e:       |  |   0000                     unimp
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
 * @param key An RSA public key.
 * @return ID of the key.
 */
inline uint32_t sigverify_rsa_key_id_get(
    const sigverify_rsa_buffer_t *modulus) {
  return modulus->data[0];
d0009020:       |  \-> 1b0b2503                 lw      a0,432(s6)
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:302
  HARDENED_RETURN_IF_ERROR(sigverify_rsa_key_get(
d0009024:       |      0fff9a97                 auipc   s5,0xfff9
d0009028:       |      034a8a93                 addi    s5,s5,52 # e0002058 <lc_state>
d000902c:       |      000aa583                 lw      a1,0(s5)
d0009030:       |      08f0                     addi    a2,sp,92
d0009032:       |      582010ef                 jal     ra,d000a5b4 <sigverify_rsa_key_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009036:       |      85aa                     mv      a1,a0
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:302
d0009038:       +----- 0e959e63                 bne     a1,s1,d0009134 <rom_verify+0x16c>
d000903c:       |      1b0b0993                 addi    s3,s6,432
d0009040:       |      73900593                 li      a1,1849
d0009044:       |  /-- 00b50663                 beq     a0,a1,d0009050 <rom_verify+0x88>
d0009048:       |  |   0000                     unimp
d000904a:       |  |   0000                     unimp
d000904c:       |  |   0000                     unimp
d000904e:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:304
  printf("Check 2\r\n");
d0009050:       |  \-> 00006517                 auipc   a0,0x6
d0009054:       |      bc850513                 addi    a0,a0,-1080 # d000ec18 <_text_end+0x210>
d0009058:       |      1d6010ef                 jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:305
  uint32_t clobber_value = rnd_uint32();
d000905c:       |      4bb040ef                 jal     ra,d000dd16 <rnd_uint32>
d0009060:       |      4581                     li      a1,0
d0009062:       |      0fff7617                 auipc   a2,0xfff7
d0009066:       |      f9e60613                 addi    a2,a2,-98 # e0000000 <boot_measurements>
d000906a:       |      02000693                 li      a3,32
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:307
    boot_measurements.rom_ext.data[i] = clobber_value;
d000906e:       |  /-> 00c58733                 add     a4,a1,a2
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:306
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0009072:       |  |   0591                     addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:307
    boot_measurements.rom_ext.data[i] = clobber_value;
d0009074:       |  |   c308                     sw      a0,0(a4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:306
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0009076:       |  \-- fed59ce3                 bne     a1,a3,d000906e <rom_verify+0xa6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:309
  printf("Check 3\r\n");
d000907a:       |      00006517                 auipc   a0,0x6
d000907e:       |      ba850513                 addi    a0,a0,-1112 # d000ec22 <_text_end+0x21a>
d0009082:       |      1ac010ef                 jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:310
  hmac_sha256_init();
d0009086:       |      6ab040ef                 jal     ra,d000df30 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:313
  if (launder32(manifest->security_version) <
d000908a:       |      344b2583                 lw      a1,836(s6)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:314
      boot_data.min_security_version_rom_ext) {
d000908e:       |      030a2503                 lw      a0,48(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:313
  if (launder32(manifest->security_version) <
d0009092:       |  /-- 00a5fa63                 bgeu    a1,a0,d00090a6 <rom_verify+0xde>
d0009096:       |  |   557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:315
    uint32_t extra_word = UINT32_MAX;
d0009098:       |  |   d42a                     sw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:316
    hmac_sha256_update(&extra_word, sizeof(extra_word));
d000909a:       |  |   1028                     addi    a0,sp,40
d000909c:       |  |   4591                     li      a1,4
d000909e:       |  |   6ad040ef                 jal     ra,d000df4a <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:318
  HARDENED_CHECK_GE(manifest->security_version,
d00090a2:       |  |   030a2503                 lw      a0,48(s4)
d00090a6:       |  \-> 344b2583                 lw      a1,836(s6)
d00090aa:       |  /-- 00a5f663                 bgeu    a1,a0,d00090b6 <rom_verify+0xee>
d00090ae:       |  |   0000                     unimp
d00090b0:       |  |   0000                     unimp
d00090b2:       |  |   0000                     unimp
d00090b4:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:323
  sigverify_usage_constraints_get(manifest->usage_constraints.selector_bits,
d00090b6:       |  \-> 180b2503                 lw      a0,384(s6)
d00090ba:       |      102c                     addi    a1,sp,40
d00090bc:       |      2f0040ef                 jal     ra,d000d3ac <sigverify_usage_constraints_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:325
  hmac_sha256_update(&usage_constraints_from_hw,
d00090c0:       |      1028                     addi    a0,sp,40
d00090c2:       |      03000593                 li      a1,48
d00090c6:       |      685040ef                 jal     ra,d000df4a <hmac_sha256_update>
manifest_digest_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:296
    kDigestRegionOffset =
        sizeof(manifest->signature) + sizeof(manifest->usage_constraints),
  };
  return (manifest_digest_region_t){
      .start = (const char *)manifest + kDigestRegionOffset,
      .length = manifest->length - kDigestRegionOffset,
d00090ca:       |      338b2503                 lw      a0,824(s6)
d00090ce:       |      e5050a13                 addi    s4,a0,-432
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:329
  printf("Check 4\r\n");
d00090d2:       |      00006517                 auipc   a0,0x6
d00090d6:       |      b5a50513                 addi    a0,a0,-1190 # d000ec2c <_text_end+0x224>
d00090da:       |      154010ef                 jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:330
  hmac_sha256_update(digest_region.start, digest_region.length);
d00090de:       |      854e                     mv      a0,s3
d00090e0:       |      85d2                     mv      a1,s4
d00090e2:       |      669040ef                 jal     ra,d000df4a <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:333
  hmac_sha256_final(&act_digest);
d00090e6:       |      0028                     addi    a0,sp,8
d00090e8:       |      6d1040ef                 jal     ra,d000dfb8 <hmac_sha256_final>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:337
  memcpy(&boot_measurements.rom_ext, &act_digest,
d00090ec:       |      0fff7517                 auipc   a0,0xfff7
d00090f0:       |      f1450513                 addi    a0,a0,-236 # e0000000 <boot_measurements>
d00090f4:       |      002c                     addi    a1,sp,8
d00090f6:       |      02000613                 li      a2,32
d00090fa:       |      372050ef                 jal     ra,d000e46c <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:339
  printf("Check 5\r\n");
d00090fe:       |      00006517                 auipc   a0,0x6
d0009102:       |      b3850513                 addi    a0,a0,-1224 # d000ec36 <_text_end+0x22e>
d0009106:       |      128010ef                 jal     ra,d000a22e <printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:340
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 2);
d000910a:       |      4408                     lw      a0,8(s0)
d000910c:       |      65b00593                 li      a1,1627
d0009110:       |  /-- 00b50663                 beq     a0,a1,d000911c <rom_verify+0x154>
d0009114:       |  |   0000                     unimp
d0009116:       |  |   0000                     unimp
d0009118:       |  |   0000                     unimp
d000911a:       |  |   0000                     unimp
d000911c:       |  \-> 4408                     lw      a0,8(s0)
d000911e:       |      05a50513                 addi    a0,a0,90
d0009122:       |      c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:341
  return sigverify_rsa_verify(&manifest->signature, key, &act_digest, lc_state,
d0009124:       |      45f6                     lw      a1,92(sp)
d0009126:       |      000aa683                 lw      a3,0(s5)
d000912a:       |      0030                     addi    a2,sp,8
d000912c:       |      855a                     mv      a0,s6
d000912e:       |      874a                     mv      a4,s2
d0009130:       |      7ef030ef                 jal     ra,d000d11e <sigverify_rsa_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:343
}
d0009134:       \----> 5b06                     lw      s6,96(sp)
d0009136:              5a96                     lw      s5,100(sp)
d0009138:              5a26                     lw      s4,104(sp)
d000913a:              59b6                     lw      s3,108(sp)
d000913c:              5946                     lw      s2,112(sp)
d000913e:              54d6                     lw      s1,116(sp)
d0009140:              5466                     lw      s0,120(sp)
d0009142:              50f6                     lw      ra,124(sp)
d0009144:              6109                     addi    sp,sp,128
d0009146:              8082                     ret

d0009148 <rom_boot>:
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:421
static rom_error_t rom_boot(const manifest_t *manifest, uint32_t flash_exec) {
d0009148:                             7179                      addi    sp,sp,-48
d000914a:                             d606                      sw      ra,44(sp)
d000914c:                             d422                      sw      s0,40(sp)
d000914e:                             d226                      sw      s1,36(sp)
d0009150:                             d04a                      sw      s2,32(sp)
d0009152:                             ce4e                      sw      s3,28(sp)
d0009154:                             cc52                      sw      s4,24(sp)
d0009156:                             ca56                      sw      s5,20(sp)
d0009158:                             c85a                      sw      s6,16(sp)
d000915a:                             c65e                      sw      s7,12(sp)
d000915c:                             c462                      sw      s8,8(sp)
d000915e:                             c266                      sw      s9,4(sp)
d0009160:                             c1418a13                  addi    s4,gp,-1004 # e000246c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:422
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 1);
d0009164:                             014a2603                  lw      a2,20(s4)
d0009168:                             33c00693                  li      a3,828
d000916c:                         /-- 00d60663                  beq     a2,a3,d0009178 <rom_boot+0x30>
d0009170:                         |   0000                      unimp
d0009172:                         |   0000                      unimp
d0009174:                         |   0000                      unimp
d0009176:                         |   0000                      unimp
d0009178:                         \-> 014a2603                  lw      a2,20(s4)
d000917c:                             892e                      mv      s2,a1
d000917e:                             84aa                      mv      s1,a0
d0009180:                             05a60513                  addi    a0,a2,90
d0009184:                             00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:423
  HARDENED_RETURN_IF_ERROR(keymgr_state_check(kKeymgrStateReset));
d0009188:                             4501                      li      a0,0
d000918a:                             579020ef                  jal     ra,d000bf02 <keymgr_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000918e:                             85aa                      mv      a1,a0
d0009190:                             73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:423
d0009194:       /-------------------- 34859263                  bne     a1,s0,d00094d8 <rom_boot+0x390>
d0009198:       |                 /-- 00850663                  beq     a0,s0,d00091a4 <rom_boot+0x5c>
d000919c:       |                 |   0000                      unimp
d000919e:       |                 |   0000                      unimp
d00091a0:       |                 |   0000                      unimp
d00091a2:       |                 |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:426
      &manifest->binding_value;
d00091a4:       |                 \-> 35048993                  addi    s3,s1,848
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:428
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_KEYMGR_ROM_EXT_MEAS_EN_OFFSET);
d00091a8:       |                     56400513                  li      a0,1380
d00091ac:       |                     054050ef                  jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00091b0:       |                     85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:429
  if (launder32(use_rom_ext_measurement) == kHardenedBoolTrue) {
d00091b2:       |           /-------- 00859f63                  bne     a1,s0,d00091d0 <rom_boot+0x88>
d00091b6:       |           |         73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:430
    HARDENED_CHECK_EQ(use_rom_ext_measurement, kHardenedBoolTrue);
d00091ba:       |           |     /-- 00b50663                  beq     a0,a1,d00091c6 <rom_boot+0x7e>
d00091be:       |           |     |   0000                      unimp
d00091c0:       |           |     |   0000                      unimp
d00091c2:       |           |     |   0000                      unimp
d00091c4:       |           |     |   0000                      unimp
d00091c6:       |           |     \-> 0fff7597                  auipc   a1,0xfff7
d00091ca:       |           |         e3a58593                  addi    a1,a1,-454 # e0000000 <boot_measurements>
d00091ce:       |           |  /----- a811                      j       d00091e2 <rom_boot+0x9a>
d00091d0:       |           \--|----> 73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:434
    HARDENED_CHECK_NE(use_rom_ext_measurement, kHardenedBoolTrue);
d00091d4:       |              |  /-- 00b51663                  bne     a0,a1,d00091e0 <rom_boot+0x98>
d00091d8:       |              |  |   0000                      unimp
d00091da:       |              |  |   0000                      unimp
d00091dc:       |              |  |   0000                      unimp
d00091de:       |              |  |   0000                      unimp
d00091e0:       |              |  \-> 85ce                      mv      a1,s3
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:436
  keymgr_sw_binding_set(&manifest->binding_value, attestation_measurement);
d00091e2:       |              \----> 854e                      mv      a0,s3
d00091e4:       |                     48d020ef                  jal     ra,d000be70 <keymgr_sw_binding_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:437
  keymgr_creator_max_ver_set(manifest->max_key_version);
d00091e8:       |                     3704a503                  lw      a0,880(s1)
d00091ec:       |                     4f3020ef                  jal     ra,d000bede <keymgr_creator_max_ver_set>
d00091f0:       |                     0fff7a97                  auipc   s5,0xfff7
d00091f4:       |                     e84a8a93                  addi    s5,s5,-380 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:438
  SEC_MMIO_WRITE_INCREMENT(kKeymgrSecMmioSwBindingSet +
d00091f8:       |                     008aa503                  lw      a0,8(s5)
d00091fc:       |                     054d                      addi    a0,a0,19
d00091fe:       |                     00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:441
  sec_mmio_check_counters(/*expected_check_count=*/2);
d0009202:       |                     4509                      li      a0,2
d0009204:       |                     21c050ef                  jal     ra,d000e420 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:449
  switch (launder32(manifest->address_translation)) {
d0009208:       |                     3304a503                  lw      a0,816(s1)
manifest_code_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:308
 * @param manifest A manifest.
 * return Executable region of the image.
 */
inline epmp_region_t manifest_code_region_get(const manifest_t *manifest) {
  return (epmp_region_t){
      .start = (uintptr_t)manifest + manifest->code_start,
d000920c:       |                     3744ab83                  lw      s7,884(s1)
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:309
      .end = (uintptr_t)manifest + manifest->code_end,
d0009210:       |                     3784ac03                  lw      s8,888(s1)
manifest_entry_point_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:325
 *
 * @param manfiest A manifest.
 * return Entry point address.
 */
inline uintptr_t manifest_entry_point_get(const manifest_t *manifest) {
  return (uintptr_t)manifest + manifest->entry_point;
d0009214:       |                     37c4ab03                  lw      s6,892(s1)
d0009218:       |                     1d400593                  li      a1,468
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:449
d000921c:       |              /----- 00b51c63                  bne     a0,a1,d0009234 <rom_boot+0xec>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:470
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolFalse);
d0009220:       |              |      3304a503                  lw      a0,816(s1)
d0009224:       |              |  /-- 00b50663                  beq     a0,a1,d0009230 <rom_boot+0xe8>
d0009228:       |              |  |   0000                      unimp
d000922a:       |              |  |   0000                      unimp
d000922c:       |              |  |   0000                      unimp
d000922e:       |              |  |   0000                      unimp
d0009230:       |              |  \-> 89a6                      mv      s3,s1
d0009232:       |           /--|----- a08d                      j       d0009294 <rom_boot+0x14c>
d0009234:       |           |  \----> 73900c93                  li      s9,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:449
  switch (launder32(manifest->address_translation)) {
d0009238:       |  /--------|-------- 2b951f63                  bne     a0,s9,d00094f6 <rom_boot+0x3ae>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:451
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolTrue);
d000923c:       |  |        |         3304a503                  lw      a0,816(s1)
d0009240:       |  |        |     /-- 01950663                  beq     a0,s9,d000924c <rom_boot+0x104>
d0009244:       |  |        |     |   0000                      unimp
d0009246:       |  |        |     |   0000                      unimp
d0009248:       |  |        |     |   0000                      unimp
d000924a:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:452
      ibex_addr_remap_0_set((uintptr_t)_rom_ext_virtual_start_address,
d000924c:       |  |        |     \-> bfff7997                  auipc   s3,0xbfff7
d0009250:       |  |        |         db498993                  addi    s3,s3,-588 # 90000000 <_rom_ext_virtual_start_address>
d0009254:       |  |        |         30077417                  auipc   s0,0x30077
d0009258:       |  |        |         dac40413                  addi    s0,s0,-596 # 80000 <_stack_end+0x20060000>
d000925c:       |  |        |         854e                      mv      a0,s3
d000925e:       |  |        |         85a6                      mv      a1,s1
d0009260:       |  |        |         8622                      mv      a2,s0
d0009262:       |  |        |         34b020ef                  jal     ra,d000bdac <ibex_addr_remap_0_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:454
      SEC_MMIO_WRITE_INCREMENT(kAddressTranslationSecMmioConfigure);
d0009266:       |  |        |         008aa503                  lw      a0,8(s5)
d000926a:       |  |        |         0519                      addi    a0,a0,6
d000926c:       |  |        |         00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:457
      HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009270:       |  |        |         2d3040ef                  jal     ra,d000dd42 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009274:       |  |        |         85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:457
d0009276:       +--|--------|-------- 27959163                  bne     a1,s9,d00094d8 <rom_boot+0x390>
d000927a:       |  |        |         73900593                  li      a1,1849
d000927e:       |  |        |     /-- 00b50663                  beq     a0,a1,d000928a <rom_boot+0x142>
d0009282:       |  |        |     |   0000                      unimp
d0009284:       |  |        |     |   0000                      unimp
d0009286:       |  |        |     |   0000                      unimp
d0009288:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:458
      rom_epmp_unlock_rom_ext_r(
d000928a:       |  |        |     \-> 008985b3                  add     a1,s3,s0
d000928e:       |  |        |         854e                      mv      a0,s3
d0009290:       |  |        |         59d030ef                  jal     ra,d000d02c <rom_epmp_unlock_rom_ext_r>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:477
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009294:       |  |        \-------> 2af040ef                  jal     ra,d000dd42 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009298:       |  |                  85aa                      mv      a1,a0
d000929a:       |  |                  73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:477
d000929e:       +--|----------------- 22859d63                  bne     a1,s0,d00094d8 <rom_boot+0x390>
d00092a2:       |  |                  018985b3                  add     a1,s3,s8
d00092a6:       |  |                  01798633                  add     a2,s3,s7
d00092aa:       |  |              /-- 00850663                  beq     a0,s0,d00092b6 <rom_boot+0x16e>
d00092ae:       |  |              |   0000                      unimp
d00092b0:       |  |              |   0000                      unimp
d00092b2:       |  |              |   0000                      unimp
d00092b4:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:478
  rom_epmp_unlock_rom_ext_rx(text_region);
d00092b6:       |  |              \-> 8532                      mv      a0,a2
d00092b8:       |  |                  547030ef                  jal     ra,d000cffe <rom_epmp_unlock_rom_ext_rx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:479
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d00092bc:       |  |                  287040ef                  jal     ra,d000dd42 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00092c0:       |  |                  85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:479
d00092c2:       +--|----------------- 20859b63                  bne     a1,s0,d00094d8 <rom_boot+0x390>
d00092c6:       |  |                  73900413                  li      s0,1849
d00092ca:       |  |              /-- 00850663                  beq     a0,s0,d00092d6 <rom_boot+0x18e>
d00092ce:       |  |              |   0000                      unimp
d00092d0:       |  |              |   0000                      unimp
d00092d2:       |  |              |   0000                      unimp
d00092d4:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:481
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomBoot, 2, kCfiRomPreBootCheck);
d00092d6:       |  |              \-> 014a2503                  lw      a0,20(s4)
d00092da:       |  |                  39600593                  li      a1,918
d00092de:       |  |              /-- 00b50663                  beq     a0,a1,d00092ea <rom_boot+0x1a2>
d00092e2:       |  |              |   0000                      unimp
d00092e4:       |  |              |   0000                      unimp
d00092e6:       |  |              |   0000                      unimp
d00092e8:       |  |              |   0000                      unimp
d00092ea:       |  |              \-> 014a2503                  lw      a0,20(s4)
d00092ee:       |  |                  05a50513                  addi    a0,a0,90
d00092f2:       |  |                  00aa2a23                  sw      a0,20(s4)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d00092f6:       |  |                  49400513                  li      a0,1172
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:481
d00092fa:       |  |                  00aa2823                  sw      a0,16(s4)
d00092fe:       |  |                  014a2583                  lw      a1,20(s4)
d0009302:       |  |                  3f000613                  li      a2,1008
d0009306:       |  |              /-- 00c58663                  beq     a1,a2,d0009312 <rom_boot+0x1ca>
d000930a:       |  |              |   0000                      unimp
d000930c:       |  |              |   0000                      unimp
d000930e:       |  |              |   0000                      unimp
d0009310:       |  |              |   0000                      unimp
d0009312:       |  |              \-> 014a2583                  lw      a1,20(s4)
d0009316:       |  |                  05a58593                  addi    a1,a1,90
d000931a:       |  |                  00ba2a23                  sw      a1,20(s4)
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:371
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 1);
d000931e:       |  |                  010a2583                  lw      a1,16(s4)
d0009322:       |  |              /-- 00a58663                  beq     a1,a0,d000932e <rom_boot+0x1e6>
d0009326:       |  |              |   0000                      unimp
d0009328:       |  |              |   0000                      unimp
d000932a:       |  |              |   0000                      unimp
d000932c:       |  |              |   0000                      unimp
d000932e:       |  |              \-> 010a2503                  lw      a0,16(s4)
d0009332:       |  |                  05a50513                  addi    a0,a0,90
d0009336:       |  |                  00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:374
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d000933a:       |  |                  0fff9497                  auipc   s1,0xfff9
d000933e:       |  |                  d1e48493                  addi    s1,s1,-738 # e0002058 <lc_state>
d0009342:       |  |                  4088                      lw      a0,0(s1)
d0009344:       |  |                  563010ef                  jal     ra,d000b0a6 <alert_config_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0009348:       |  |                  85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:374
d000934a:       |  |  /-------------- 1a859463                  bne     a1,s0,d00094f2 <rom_boot+0x3aa>
d000934e:       |  |  |           /-- 00850663                  beq     a0,s0,d000935a <rom_boot+0x212>
d0009352:       |  |  |           |   0000                      unimp
d0009354:       |  |  |           |   0000                      unimp
d0009356:       |  |  |           |   0000                      unimp
d0009358:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:375
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 2);
d000935a:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d000935e:       |  |  |               4ee00593                  li      a1,1262
d0009362:       |  |  |           /-- 00b50663                  beq     a0,a1,d000936e <rom_boot+0x226>
d0009366:       |  |  |           |   0000                      unimp
d0009368:       |  |  |           |   0000                      unimp
d000936a:       |  |  |           |   0000                      unimp
d000936c:       |  |  |           |   0000                      unimp
d000936e:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d0009372:       |  |  |               05a50513                  addi    a0,a0,90
d0009376:       |  |  |               00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:378
  lifecycle_state_t lc_state_check = lifecycle_state_get();
d000937a:       |  |  |               475040ef                  jal     ra,d000dfee <lifecycle_state_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000937e:       |  |  |               85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:379
  if (launder32(lc_state_check) != lc_state) {
d0009380:       |  |  |               4090                      lw      a2,0(s1)
d0009382:       |  |  |  /----------- 16c59e63                  bne     a1,a2,d00094fe <rom_boot+0x3b6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:382
  HARDENED_CHECK_EQ(lc_state_check, lc_state);
d0009386:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d0009392 <rom_boot+0x24a>
d000938a:       |  |  |  |        |   0000                      unimp
d000938c:       |  |  |  |        |   0000                      unimp
d000938e:       |  |  |  |        |   0000                      unimp
d0009390:       |  |  |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:383
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 3);
d0009392:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d0009396:       |  |  |  |            54800593                  li      a1,1352
d000939a:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d00093a6 <rom_boot+0x25e>
d000939e:       |  |  |  |        |   0000                      unimp
d00093a0:       |  |  |  |        |   0000                      unimp
d00093a2:       |  |  |  |        |   0000                      unimp
d00093a4:       |  |  |  |        |   0000                      unimp
d00093a6:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d00093aa:       |  |  |  |            05a50513                  addi    a0,a0,90
d00093ae:       |  |  |  |            00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:386
  rom_error_t boot_data_ok = boot_data_check(&boot_data);
d00093b2:       |  |  |  |            c3018513                  addi    a0,gp,-976 # e0002488 <boot_data>
d00093b6:       |  |  |  |            7b2000ef                  jal     ra,d0009b68 <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00093ba:       |  |  |  |            862a                      mv      a2,a0
d00093bc:       |  |  |  |            73900593                  li      a1,1849
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:387
  if (launder32(boot_data_ok) != kErrorOk) {
d00093c0:       |  |  |  |  /-------- 14b61363                  bne     a2,a1,d0009506 <rom_boot+0x3be>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:390
  HARDENED_CHECK_EQ(boot_data_ok, kErrorOk);
d00093c4:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d00093d0 <rom_boot+0x288>
d00093c8:       |  |  |  |  |     |   0000                      unimp
d00093ca:       |  |  |  |  |     |   0000                      unimp
d00093cc:       |  |  |  |  |     |   0000                      unimp
d00093ce:       |  |  |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:391
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 4);
d00093d0:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d00093d4:       |  |  |  |  |         5a200593                  li      a1,1442
d00093d8:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d00093e4 <rom_boot+0x29c>
d00093dc:       |  |  |  |  |     |   0000                      unimp
d00093de:       |  |  |  |  |     |   0000                      unimp
d00093e0:       |  |  |  |  |     |   0000                      unimp
d00093e2:       |  |  |  |  |     |   0000                      unimp
d00093e4:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d00093e8:       |  |  |  |  |         05a50513                  addi    a0,a0,90
d00093ec:       |  |  |  |  |         00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:396
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET);
d00093f0:       |  |  |  |  |         10c00513                  li      a0,268
d00093f4:       |  |  |  |  |         60d040ef                  jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:397
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d00093f8:       |  |  |  |  |         7c0025f3                  csrr    a1,0x7c0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d00093fc:       |  |  |  |  |         eff5f593                  andi    a1,a1,-257
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009400:       |  |  |  |  |         862e                      mv      a2,a1
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:401
  if (launder32(cpuctrl_csr) != cpuctrl_otp) {
d0009402:       |  |  |  |  |  /----- 10a61663                  bne     a2,a0,d000950e <rom_boot+0x3c6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:404
  HARDENED_CHECK_EQ(cpuctrl_csr, cpuctrl_otp);
d0009406:       |  |  |  |  |  |  /-- 00a58663                  beq     a1,a0,d0009412 <rom_boot+0x2ca>
d000940a:       |  |  |  |  |  |  |   0000                      unimp
d000940c:       |  |  |  |  |  |  |   0000                      unimp
d000940e:       |  |  |  |  |  |  |   0000                      unimp
d0009410:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:405
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 5);
d0009412:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d0009416:       |  |  |  |  |  |      5fc00593                  li      a1,1532
d000941a:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009426 <rom_boot+0x2de>
d000941e:       |  |  |  |  |  |  |   0000                      unimp
d0009420:       |  |  |  |  |  |  |   0000                      unimp
d0009422:       |  |  |  |  |  |  |   0000                      unimp
d0009424:       |  |  |  |  |  |  |   0000                      unimp
d0009426:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d000942a:       |  |  |  |  |  |      01698433                  add     s0,s3,s6
d000942e:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009432:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:407
  sec_mmio_check_counters(/*expected_check_count=*/3);
d0009436:       |  |  |  |  |  |      450d                      li      a0,3
d0009438:       |  |  |  |  |  |      7e9040ef                  jal     ra,d000e420 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:408
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 6);
d000943c:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d0009440:       |  |  |  |  |  |      65600593                  li      a1,1622
d0009444:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009450 <rom_boot+0x308>
d0009448:       |  |  |  |  |  |  |   0000                      unimp
d000944a:       |  |  |  |  |  |  |   0000                      unimp
d000944c:       |  |  |  |  |  |  |   0000                      unimp
d000944e:       |  |  |  |  |  |  |   0000                      unimp
d0009450:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d0009454:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009458:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:483
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 4);
d000945c:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d0009460:       |  |  |  |  |  |      44a00593                  li      a1,1098
d0009464:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009470 <rom_boot+0x328>
d0009468:       |  |  |  |  |  |  |   0000                      unimp
d000946a:       |  |  |  |  |  |  |   0000                      unimp
d000946c:       |  |  |  |  |  |  |   0000                      unimp
d000946e:       |  |  |  |  |  |  |   0000                      unimp
d0009470:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d0009474:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009478:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:484
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomPreBootCheck, 7);
d000947c:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d0009480:       |  |  |  |  |  |      6b000593                  li      a1,1712
d0009484:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009490 <rom_boot+0x348>
d0009488:       |  |  |  |  |  |  |   0000                      unimp
d000948a:       |  |  |  |  |  |  |   0000                      unimp
d000948c:       |  |  |  |  |  |  |   0000                      unimp
d000948e:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:487
  flash_ctrl_exec_set(flash_exec);
d0009490:       |  |  |  |  |  |  \-> 854a                      mv      a0,s2
d0009492:       |  |  |  |  |  |      4da020ef                  jal     ra,d000b96c <flash_ctrl_exec_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:488
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioExecSet);
d0009496:       |  |  |  |  |  |      008aa503                  lw      a0,8(s5)
d000949a:       |  |  |  |  |  |      0505                      addi    a0,a0,1
d000949c:       |  |  |  |  |  |      00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:490
  sec_mmio_check_values(rnd_uint32());
d00094a0:       |  |  |  |  |  |      077040ef                  jal     ra,d000dd16 <rnd_uint32>
d00094a4:       |  |  |  |  |  |      70d040ef                  jal     ra,d000e3b0 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:491
  sec_mmio_check_counters(/*expected_check_count=*/5);
d00094a8:       |  |  |  |  |  |      4515                      li      a0,5
d00094aa:       |  |  |  |  |  |      777040ef                  jal     ra,d000e420 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:494
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 5);
d00094ae:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d00094b2:       |  |  |  |  |  |      4a400593                  li      a1,1188
d00094b6:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00094c2 <rom_boot+0x37a>
d00094ba:       |  |  |  |  |  |  |   0000                      unimp
d00094bc:       |  |  |  |  |  |  |   0000                      unimp
d00094be:       |  |  |  |  |  |  |   0000                      unimp
d00094c0:       |  |  |  |  |  |  |   0000                      unimp
d00094c2:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d00094c6:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00094ca:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
  ((rom_ext_entry_point *)entry_point)();
d00094ce:       |  |  |  |  |  |      9402                      jalr    s0
d00094d0:       |  |  |  |  |  |      014d5537                  lui     a0,0x14d5
d00094d4:       |  |  |  |  |  |      20950513                  addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1455209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:498
}
d00094d8:       \--|--|--|--|--|----> 4c92                      lw      s9,4(sp)
d00094da:          |  |  |  |  |      4c22                      lw      s8,8(sp)
d00094dc:          |  |  |  |  |      4bb2                      lw      s7,12(sp)
d00094de:          |  |  |  |  |      4b42                      lw      s6,16(sp)
d00094e0:          |  |  |  |  |      4ad2                      lw      s5,20(sp)
d00094e2:          |  |  |  |  |      4a62                      lw      s4,24(sp)
d00094e4:          |  |  |  |  |      49f2                      lw      s3,28(sp)
d00094e6:          |  |  |  |  |      5902                      lw      s2,32(sp)
d00094e8:          |  |  |  |  |      5492                      lw      s1,36(sp)
d00094ea:          |  |  |  |  |      5422                      lw      s0,40(sp)
d00094ec:          |  |  |  |  |      50b2                      lw      ra,44(sp)
d00094ee:          |  |  |  |  |      6145                      addi    sp,sp,48
d00094f0:          |  |  |  |  |      8082                      ret
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:374
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d00094f2:          |  \--|--|--|----> 27e050ef                  jal     ra,d000e770 <shutdown_finalize>
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:473
      HARDENED_UNREACHABLE();
d00094f6:          \-----|--|--|----> 0000                      unimp
d00094f8:                |  |  |      0000                      unimp
d00094fa:                |  |  |      0000                      unimp
d00094fc:                |  |  |      0000                      unimp
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:380
    HARDENED_UNREACHABLE();
d00094fe:                \--|--|----> 0000                      unimp
d0009500:                   |  |      0000                      unimp
d0009502:                   |  |      0000                      unimp
d0009504:                   |  |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:388
    HARDENED_UNREACHABLE();
d0009506:                   \--|----> 0000                      unimp
d0009508:                      |      0000                      unimp
d000950a:                      |      0000                      unimp
d000950c:                      |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:402
    HARDENED_UNREACHABLE();
d000950e:                      \----> 0000                      unimp
d0009510:                             0000                      unimp
d0009512:                             0000                      unimp
d0009514:                             0000                      unimp

d0009516 <boot_policy_manifests_get>:
boot_policy_manifests_get():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:15
#include "sw/device/silicon_creator/lib/drivers/lifecycle.h"
#include "sw/device/silicon_creator/lib/error.h"
#include "sw/device/silicon_creator/lib/shutdown.h"
#include "sw/device/silicon_creator/rom/boot_policy_ptrs.h"

boot_policy_manifests_t boot_policy_manifests_get(void) {
d0009516:           f0000537            lui     a0,0xf0000
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:18
  const manifest_t *slot_a = boot_policy_manifest_a_get();
  const manifest_t *slot_b = boot_policy_manifest_b_get();
  if (slot_a->security_version >= slot_b->security_version) {
d000951a:           34452503            lw      a0,836(a0) # f0000344 <_stack_end+0xffe0344>
d000951e:           f00805b7            lui     a1,0xf0080
d0009522:           3445a603            lw      a2,836(a1) # f0080344 <_stack_end+0x10060344>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:26
    };
  }
  return (boot_policy_manifests_t){
      .ordered = {slot_b, slot_a},
  };
}
d0009526:       /-- 00c56563            bltu    a0,a2,d0009530 <boot_policy_manifests_get+0x1a>
d000952a:       |   f0000537            lui     a0,0xf0000
d000952e:       |   8082                        ret
d0009530:       \-> f0080537            lui     a0,0xf0080
d0009534:           f00005b7            lui     a1,0xf0000
d0009538:           8082                        ret

d000953a <boot_policy_manifest_check>:
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:30

rom_error_t boot_policy_manifest_check(const manifest_t *manifest,
                                       const boot_data_t *boot_data) {
  if (manifest->identifier != CHIP_ROM_EXT_IDENTIFIER) {
d000953a:                    33452603           lw      a2,820(a0)
d000953e:                    455256b7           lui     a3,0x45525
d0009542:                    44f68693           addi    a3,a3,1103 # 4552544f <_epmp_stack_guard_na4+0xd51e44f>
d0009546:             /----- 00d61e63           bne     a2,a3,d0009562 <boot_policy_manifest_check+0x28>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:33
    return kErrorBootPolicyBadIdentifier;
  }
  if (manifest->length < CHIP_ROM_EXT_SIZE_MIN ||
d000954a:             |      33852783           lw      a5,824(a0)
d000954e:             |      c8078613           addi    a2,a5,-896
d0009552:             |      66c1                       lui     a3,0x10
d0009554:             |      c8068693           addi    a3,a3,-896 # fc80 <_stack_size+0xbc80>
d0009558:             |  /-- 00c6fb63           bgeu    a3,a2,d000956e <boot_policy_manifest_check+0x34>
d000955c:             |  |   02425537           lui     a0,0x2425
d0009560:          /--|--|-- a019                       j       d0009566 <boot_policy_manifest_check+0x2c>
d0009562:          |  \--|-> 01425537           lui     a0,0x1425
d0009566:          >-----|-> 00d50613           addi    a2,a0,13 # 142500d <_rom_ext_virtual_size+0x13a500d>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:46
    HARDENED_CHECK_GE(manifest->security_version,
                      boot_data->min_security_version_rom_ext);
    return kErrorOk;
  }
  return kErrorBootPolicyRollback;
}
d000956a:       /--|-----|-> 8532                       mv      a0,a2
d000956c:       |  |     |   8082                       ret
manifest_check():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:260
  if (manifest->code_start >= manifest->code_end ||
d000956e:       |  |     \-> 37452683           lw      a3,884(a0)
d0009572:       |  |         37852803           lw      a6,888(a0)
d0009576:       |  |         0106b633           sltu    a2,a3,a6
d000957a:       |  |         00164613           xori    a2,a2,1
d000957e:       |  |         3806b713           sltiu   a4,a3,896
d0009582:       |  |         8f51                       or      a4,a4,a2
d0009584:       |  |         024d4637           lui     a2,0x24d4
d0009588:       |  |         10d60613           addi    a2,a2,269 # 24d410d <_rom_ext_virtual_size+0x245410d>
d000958c:       +--|-------- ff79                       bnez    a4,d000956a <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:262
      manifest->code_end > manifest->length ||
d000958e:       |  |         0107b733           sltu    a4,a5,a6
d0009592:       |  |         0036f793           andi    a5,a3,3
d0009596:       |  |         00f037b3           snez    a5,a5
d000959a:       |  |         8f5d                       or      a4,a4,a5
d000959c:       |  |         00387793           andi    a5,a6,3
d00095a0:       |  |         00f037b3           snez    a5,a5
d00095a4:       |  |         8f5d                       or      a4,a4,a5
d00095a6:       +--|-------- f371                       bnez    a4,d000956a <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:268
  if (manifest->entry_point < manifest->code_start ||
d00095a8:       |  |         37c52603           lw      a2,892(a0)
d00095ac:       |  |         00d636b3           sltu    a3,a2,a3
d00095b0:       |  |         01063733           sltu    a4,a2,a6
d00095b4:       |  |         00174713           xori    a4,a4,1
d00095b8:       |  |         8ed9                       or      a3,a3,a4
d00095ba:       |  |         8a0d                       andi    a2,a2,3
d00095bc:       |  |         00c03633           snez    a2,a2
d00095c0:       |  |         8e55                       or      a2,a2,a3
d00095c2:       |  |     /-- ea09                       bnez    a2,d00095d4 <boot_policy_manifest_check+0x9a>
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d00095c4:       |  |     |   34452603           lw      a2,836(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:40
      boot_data->min_security_version_rom_ext) {
d00095c8:       |  |     |   598c                       lw      a1,48(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d00095ca:       |  |  /--|-- 00b67a63           bgeu    a2,a1,d00095de <boot_policy_manifest_check+0xa4>
d00095ce:       |  |  |  |   03425537           lui     a0,0x3425
d00095d2:       |  \--|--|-- bf51                       j       d0009566 <boot_policy_manifest_check+0x2c>
d00095d4:       |     |  \-> 014d4537           lui     a0,0x14d4
d00095d8:       |     |      10d50613           addi    a2,a0,269 # 14d410d <_rom_ext_virtual_size+0x145410d>
d00095dc:       +-----|----- b779                       j       d000956a <boot_policy_manifest_check+0x30>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:41
    HARDENED_CHECK_GE(manifest->security_version,
d00095de:       |     \----> 34452503           lw      a0,836(a0)
d00095e2:       |        /-- 00b57663           bgeu    a0,a1,d00095ee <boot_policy_manifest_check+0xb4>
d00095e6:       |        |   0000                       unimp
d00095e8:       |        |   0000                       unimp
d00095ea:       |        |   0000                       unimp
d00095ec:       |        |   0000                       unimp
d00095ee:       |        \-> 73900613           li      a2,1849
d00095f2:       \----------- bfa5                       j       d000956a <boot_policy_manifest_check+0x30>

d00095f4 <boot_data_read>:
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:543
  boot_data_digest_compute(boot_data, &boot_data->digest);

  return res;
}

rom_error_t boot_data_read(lifecycle_state_t lc_state, boot_data_t *boot_data) {
d00095f4:                                   7179                        addi    sp,sp,-48
d00095f6:                                   d606                        sw      ra,44(sp)
d00095f8:                                   d422                        sw      s0,40(sp)
d00095fa:                                   d226                        sw      s1,36(sp)
d00095fc:                                   d04a                        sw      s2,32(sp)
d00095fe:                                   892e                        mv      s2,a1
d0009600:                                   842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
  active_page_info_t active_page;
  HARDENED_RETURN_IF_ERROR(boot_data_active_page_find(&active_page, boot_data));
d0009602:                                   0028                        addi    a0,sp,8
d0009604:                                   22e9                        jal     d00097ce <boot_data_active_page_find>
d0009606:                                   84aa                        mv      s1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009608:                                   85aa                        mv      a1,a0
d000960a:                                   73900513            li      a0,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
d000960e:       /-------------------------- 18a59e63            bne     a1,a0,d00097aa <boot_data_read+0x1b6>
d0009612:       |                       /-- 00a48663            beq     s1,a0,d000961e <boot_data_read+0x2a>
d0009616:       |                       |   0000                        unimp
d0009618:       |                       |   0000                        unimp
d000961a:       |                       |   0000                        unimp
d000961c:       |                       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d000961e:       |                       \-> 4552                        lw      a0,20(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009620:       |                           85aa                        mv      a1,a0
d0009622:       |                           1d400613            li      a2,468
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
d0009626:       |                 /-------- 04c59d63            bne     a1,a2,d0009680 <boot_data_read+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:551
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
      return kErrorOk;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolFalse);
d000962a:       |                 |     /-- 00c50663            beq     a0,a2,d0009636 <boot_data_read+0x42>
d000962e:       |                 |     |   0000                        unimp
d0009630:       |                 |     |   0000                        unimp
d0009632:       |                 |     |   0000                        unimp
d0009634:       |                 |     |   0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:490
  uint32_t allowed_in_prod = otp_read32(
d0009636:       |                 |     \-> 11800513            li      a0,280
d000963a:       |                 |         3c7040ef            jal     ra,d000e200 <otp_read32>
d000963e:       |                 |         014245b7            lui     a1,0x1424
d0009642:       |                 |         40d58593            addi    a1,a1,1037 # 142440d <_rom_ext_virtual_size+0x13a440d>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:492
  rom_error_t res = lc_state ^ launder32(kErrorBootDataNotFound);
d0009646:       |                 |         8da1                        xor     a1,a1,s0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009648:       |                 |         8622                        mv      a2,s0
d000964a:       |                 |         cf8d06b7            lui     a3,0xcf8d0
d000964e:       |                 |         aaa68713            addi    a4,a3,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d0009652:       |                 |  /----- 04c75263            bge     a4,a2,d0009696 <boot_data_read+0xa2>
d0009656:       |                 |  |      aab68693            addi    a3,a3,-1365
d000965a:       |              /--|--|----- 06d60a63            beq     a2,a3,d00096ce <boot_data_read+0xda>
d000965e:       |              |  |  |      0b5a76b7            lui     a3,0xb5a7
d0009662:       |              |  |  |      5e068693            addi    a3,a3,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d0009666:       |           /--|--|--|----- 08d61363            bne     a2,a3,d00096ec <boot_data_read+0xf8>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:500
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000966a:       |           |  |  |  |  /-- 00d40663            beq     s0,a3,d0009676 <boot_data_read+0x82>
d000966e:       |           |  |  |  |  |   0000                        unimp
d0009670:       |           |  |  |  |  |   0000                        unimp
d0009672:       |           |  |  |  |  |   0000                        unimp
d0009674:       |           |  |  |  |  |   0000                        unimp
d0009676:       |           |  |  |  |  \-> 0a183537            lui     a0,0xa183
d000967a:       |           |  |  |  |      6d450513            addi    a0,a0,1748 # a1836d4 <_rom_ext_virtual_size+0xa1036d4>
d000967e:       |        /--|--|--|--|----- a0d9                        j       d0009744 <boot_data_read+0x150>
d0009680:       |        |  |  |  \--|----> 73900493            li      s1,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d0009684:       |  /-----|--|--|-----|----- 12959d63            bne     a1,s1,d00097be <boot_data_read+0x1ca>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:548
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
d0009688:       |  |     |  |  |     |  /-- 00950663            beq     a0,s1,d0009694 <boot_data_read+0xa0>
d000968c:       |  |     |  |  |     |  |   0000                        unimp
d000968e:       |  |     |  |  |     |  |   0000                        unimp
d0009690:       |  |     |  |  |     |  |   0000                        unimp
d0009692:       |  |     |  |  |     |  |   0000                        unimp
d0009694:       +--|-----|--|--|-----|--\-X aa19                        j       d00097aa <boot_data_read+0x1b6>
d0009696:       |  |     |  |  |     \----> 91b9b6b7            lui     a3,0x91b9b
d000969a:       |  |     |  |  |            68a68693            addi    a3,a3,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000969e:       |  |     |  |  |     /----- 08d61363            bne     a2,a3,d0009724 <boot_data_read+0x130>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:512
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d00096a2:       |  |     |  |  |     |  /-- 00d40663            beq     s0,a3,d00096ae <boot_data_read+0xba>
d00096a6:       |  |     |  |  |     |  |   0000                        unimp
d00096a8:       |  |     |  |  |     |  |   0000                        unimp
d00096aa:       |  |     |  |  |     |  |   0000                        unimp
d00096ac:       |  |     |  |  |     |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096ae:       |  |     |  |  |     |  \-> 872a                        mv      a4,a0
d00096b0:       |  |     |  |  |     |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:514
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d00096b4:       |  |  /--|--|--|-----|----- 10c71263            bne     a4,a2,d00097b8 <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:515
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d00096b8:       |  |  |  |  |  |     |  /-- 00c50663            beq     a0,a2,d00096c4 <boot_data_read+0xd0>
d00096bc:       |  |  |  |  |  |     |  |   0000                        unimp
d00096be:       |  |  |  |  |  |     |  |   0000                        unimp
d00096c0:       |  |  |  |  |  |     |  |   0000                        unimp
d00096c2:       |  |  |  |  |  |     |  |   0000                        unimp
d00096c4:       |  |  |  |  |  |     |  \-> 90fbf537            lui     a0,0x90fbf
d00096c8:       |  |  |  |  |  |     |      5be50513            addi    a0,a0,1470 # 90fbf5be <_stack_end+0xb0f9f5be>
d00096cc:       |  |  |  +--|--|-----|----- a8a5                        j       d0009744 <boot_data_read+0x150>
d00096ce:       |  |  |  |  |  \-----|----> cf8d0537            lui     a0,0xcf8d0
d00096d2:       |  |  |  |  |        |      aab50513            addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:520
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d00096d6:       |  |  |  |  |        |  /-- 00a40663            beq     s0,a0,d00096e2 <boot_data_read+0xee>
d00096da:       |  |  |  |  |        |  |   0000                        unimp
d00096dc:       |  |  |  |  |        |  |   0000                        unimp
d00096de:       |  |  |  |  |        |  |   0000                        unimp
d00096e0:       |  |  |  |  |        |  |   0000                        unimp
d00096e2:       |  |  |  |  |        |  \-> cecec537            lui     a0,0xcecec
d00096e6:       |  |  |  |  |        |      99f50513            addi    a0,a0,-1633 # ceceb99f <_stack_end+0xeeccb99f>
d00096ea:       |  |  |  +--|--------|----- a8a9                        j       d0009744 <boot_data_read+0x150>
d00096ec:       |  |  |  |  \--------|----> 65f256b7            lui     a3,0x65f25
d00096f0:       |  |  |  |           |      20f68693            addi    a3,a3,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00096f4:       |  |  |  |        /--|----- 0cd61963            bne     a2,a3,d00097c6 <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:504
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d00096f8:       |  |  |  |        |  |  /-- 00d40663            beq     s0,a3,d0009704 <boot_data_read+0x110>
d00096fc:       |  |  |  |        |  |  |   0000                        unimp
d00096fe:       |  |  |  |        |  |  |   0000                        unimp
d0009700:       |  |  |  |        |  |  |   0000                        unimp
d0009702:       |  |  |  |        |  |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009704:       |  |  |  |        |  |  \-> 872a                        mv      a4,a0
d0009706:       |  |  |  |        |  |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:506
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d000970a:       |  |  +--|--------|--|----- 0ac71763            bne     a4,a2,d00097b8 <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:507
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d000970e:       |  |  |  |        |  |  /-- 00c50663            beq     a0,a2,d000971a <boot_data_read+0x126>
d0009712:       |  |  |  |        |  |  |   0000                        unimp
d0009714:       |  |  |  |        |  |  |   0000                        unimp
d0009716:       |  |  |  |        |  |  |   0000                        unimp
d0009718:       |  |  |  |        |  |  |   0000                        unimp
d000971a:       |  |  |  |        |  |  \-> 64b01537            lui     a0,0x64b01
d000971e:       |  |  |  |        |  |      13b50513            addi    a0,a0,315 # 64b0113b <_epmp_stack_guard_na4+0x2cafa13b>
d0009722:       |  |  |  +--------|--|----- a00d                        j       d0009744 <boot_data_read+0x150>
d0009724:       |  |  |  |        |  \----> b2866537            lui     a0,0xb2866
d0009728:       |  |  |  |        |         fbb50513            addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000972c:       |  |  |  |        +-------- 08a61d63            bne     a2,a0,d00097c6 <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:496
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d0009730:       |  |  |  |        |     /-- 00a40663            beq     s0,a0,d000973c <boot_data_read+0x148>
d0009734:       |  |  |  |        |     |   0000                        unimp
d0009736:       |  |  |  |        |     |   0000                        unimp
d0009738:       |  |  |  |        |     |   0000                        unimp
d000973a:       |  |  |  |        |     |   0000                        unimp
d000973c:       |  |  |  |        |     \-> b3c42537            lui     a0,0xb3c42
d0009740:       |  |  |  |        |         c8f50513            addi    a0,a0,-881 # b3c41c8f <_stack_end+0xd3c21c8f>
d0009744:       |  |  |  \--------|-------> 00a5c4b3            xor     s1,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009748:       |  |  |           |  /----> 85a6                        mv      a1,s1
d000974a:       |  |  |           |  |      73900513            li      a0,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:527
  HARDENED_RETURN_IF_ERROR(res);
d000974e:       +--|--|-----------|--|----- 04a59e63            bne     a1,a0,d00097aa <boot_data_read+0x1b6>
d0009752:       |  |  |           |  |  /-- 00a48663            beq     s1,a0,d000975e <boot_data_read+0x16a>
d0009756:       |  |  |           |  |  |   0000                        unimp
d0009758:       |  |  |           |  |  |   0000                        unimp
d000975a:       |  |  |           |  |  |   0000                        unimp
d000975c:       |  |  |           |  |  |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:529
  boot_data->is_valid = kBootDataValidEntry;
d000975e:       |  |  |           |  |  \-> 02090413            addi    s0,s2,32
d0009762:       |  |  |           |  |      557d                        li      a0,-1
d0009764:       |  |  |           |  |      02a92223            sw      a0,36(s2)
d0009768:       |  |  |           |  |      02a92023            sw      a0,32(s2)
d000976c:       |  |  |           |  |      41445537            lui     a0,0x41445
d0009770:       |  |  |           |  |      f4250513            addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:530
  boot_data->identifier = kBootDataIdentifier;
d0009774:       |  |  |           |  |      02a92423            sw      a0,40(s2)
d0009778:       |  |  |           |  |      4515                        li      a0,5
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:531
  boot_data->counter = kBootDataDefaultCounterVal;
d000977a:       |  |  |           |  |      02a92623            sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:533
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_ROM_EXT_OFFSET);
d000977e:       |  |  |           |  |      11000513            li      a0,272
d0009782:       |  |  |           |  |      27f040ef            jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:532
  boot_data->min_security_version_rom_ext =
d0009786:       |  |  |           |  |      02a92823            sw      a0,48(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:535
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_BL0_OFFSET);
d000978a:       |  |  |           |  |      11400513            li      a0,276
d000978e:       |  |  |           |  |      273040ef            jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:534
  boot_data->min_security_version_bl0 =
d0009792:       |  |  |           |  |      02a92a23            sw      a0,52(s2)
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d0009796:       |  |  |           |  |      79a040ef            jal     ra,d000df30 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d000979a:       |  |  |           |  |      02000593            li      a1,32
d000979e:       |  |  |           |  |      8522                        mv      a0,s0
d00097a0:       |  |  |           |  |      7aa040ef            jal     ra,d000df4a <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d00097a4:       |  |  |           |  |      854a                        mv      a0,s2
d00097a6:       |  |  |           |  |      013040ef            jal     ra,d000dfb8 <hmac_sha256_final>
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:556
      return boot_data_default_get(lc_state, boot_data);
    default:
      HARDENED_UNREACHABLE();
  }
}
d00097aa:       \--|--|-----------|--|----> 8526                        mv      a0,s1
d00097ac:          |  |           |  |      5902                        lw      s2,32(sp)
d00097ae:          |  |           |  |      5492                        lw      s1,36(sp)
d00097b0:          |  |           |  |      5422                        lw      s0,40(sp)
d00097b2:          |  |           |  |      50b2                        lw      ra,44(sp)
d00097b4:          |  |           |  |      6145                        addi    sp,sp,48
d00097b6:          |  |           |  |      8082                        ret
d00097b8:          |  \-----------|--|----> 00d5c4b3            xor     s1,a1,a3
d00097bc:          |              |  \----- b771                        j       d0009748 <boot_data_read+0x154>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:554
      HARDENED_UNREACHABLE();
d00097be:          \--------------|-------> 0000                        unimp
d00097c0:                         |         0000                        unimp
d00097c2:                         |         0000                        unimp
d00097c4:                         |         0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:524
      HARDENED_UNREACHABLE();
d00097c6:                         \-------> 0000                        unimp
d00097c8:                                   0000                        unimp
d00097ca:                                   0000                        unimp
d00097cc:                                   0000                        unimp

d00097ce <boot_data_active_page_find>:
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:457
                                              boot_data_t *boot_data) {
d00097ce:                                         716d                  addi    sp,sp,-272
d00097d0:                                         10112623              sw      ra,268(sp)
d00097d4:                                         10812423              sw      s0,264(sp)
d00097d8:                                         10912223              sw      s1,260(sp)
d00097dc:                                         11212023              sw      s2,256(sp)
d00097e0:                                         dfce                  sw      s3,252(sp)
d00097e2:                                         ddd2                  sw      s4,248(sp)
d00097e4:                                         dbd6                  sw      s5,244(sp)
d00097e6:                                         d9da                  sw      s6,240(sp)
d00097e8:                                         d7de                  sw      s7,236(sp)
d00097ea:                                         d5e2                  sw      s8,232(sp)
d00097ec:                                         d3e6                  sw      s9,228(sp)
d00097ee:                                         d1ea                  sw      s10,224(sp)
d00097f0:                                         cfee                  sw      s11,220(sp)
d00097f2:                                         8b2a                  mv      s6,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00097f4:                                         4501                  li      a0,0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:458
  *page_info = (active_page_info_t){
d00097f6:                                         000b2023              sw      zero,0(s6)
d00097fa:                                         1d400913              li      s2,468
d00097fe:                                         012b2223              sw      s2,4(s6)
d0009802:                                         02000c13              li      s8,32
d0009806:                                         018b2423              sw      s8,8(s6)
d000980a:                                         012b2623              sw      s2,12(s6)
d000980e:                                         018b2823              sw      s8,16(s6)
d0009812:                                         4605                  li      a2,1
d0009814:                                         c02e                  sw      a1,0(sp)
d0009816:                                         4b81                  li      s7,0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009818:       /-------------------------------- 30a66b63              bltu    a2,a0,d0009b2e <boot_data_active_page_find+0x360>
d000981c:       |                                 4b81                  li      s7,0
d000981e:       |                                 00005517              auipc   a0,0x5
d0009822:       |                                 48650513              addi    a0,a0,1158 # d000eca4 <kPages>
d0009826:       |                                 c22a                  sw      a0,4(sp)
d0009828:       |                                 44a5                  li      s1,9
d000982a:       |                                 73900d13              li      s10,1849
d000982e:       |                                 4cc1                  li      s9,16
d0009830:       |                                 41445537              lui     a0,0x41445
d0009834:       |                                 f4250513              addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
d0009838:       |                                 c62a                  sw      a0,12(sp)
d000983a:       |                                 03424537              lui     a0,0x3424
d000983e:       |                                 40d50513              addi    a0,a0,1037 # 342440d <_rom_ext_virtual_size+0x33a440d>
d0009842:       |                                 c42a                  sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009844:       |  /----------------------------> 002b9513              slli    a0,s7,0x2
d0009848:       |  |                              4592                  lw      a1,4(sp)
d000984a:       |  |                              952e                  add     a0,a0,a1
d000984c:       |  |                              00052a03              lw      s4,0(a0)
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:429
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d0009850:       |  |                              4519                  li      a0,6
d0009852:       |  |                              c8aa                  sw      a0,80(sp)
d0009854:       |  |                              caa6                  sw      s1,84(sp)
d0009856:       |  |                              cca6                  sw      s1,88(sp)
d0009858:       |  |                              088c                  addi    a1,sp,80
d000985a:       |  |                              8552                  mv      a0,s4
d000985c:       |  |                              162020ef              jal     ra,d000b9be <flash_ctrl_info_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009860:       |  |                              4501                  li      a0,0
d0009862:       |  |                              4d81                  li      s11,0
d0009864:       |  |                              1d400993              li      s3,468
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d0009868:       |  |                              45fd                  li      a1,31
d000986a:       |  |              /-------------- 10a5e263              bltu    a1,a0,d000996e <boot_data_active_page_find+0x1a0>
d000986e:       |  |              |               4d81                  li      s11,0
d0009870:       |  |              |               1d400993              li      s3,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d0009874:       |  |              |  /----------> 002d9513              slli    a0,s11,0x2
d0009878:       |  |              |  |            088c                  addi    a1,sp,80
d000987a:       |  |              |  |            00a584b3              add     s1,a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:126
  *masked_identifier = 0;
d000987e:       |  |              |  |            0004a023              sw      zero,0(s1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:128
  const uint32_t offset = index * sizeof(boot_data_t) + kIsValidOffset;
d0009882:       |  |              |  |            006d9a93              slli    s5,s11,0x6
d0009886:       |  |              |  |            020ae593              ori     a1,s5,32
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
  HARDENED_RETURN_IF_ERROR(flash_ctrl_info_read(page, offset, 3, buf));
d000988a:       |  |              |  |            460d                  li      a2,3
d000988c:       |  |              |  |            0994                  addi    a3,sp,208
d000988e:       |  |              |  |            8552                  mv      a0,s4
d0009890:       |  |              |  |            3ff010ef              jal     ra,d000b48e <flash_ctrl_info_read>
d0009894:       |  |              |  |            842a                  mv      s0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009896:       |  |              |  |            85aa                  mv      a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
d0009898:       |  |              |  |     /----- 03a59363              bne     a1,s10,d00098be <boot_data_active_page_find+0xf0>
d000989c:       |  |              |  |     |      73900513              li      a0,1849
d00098a0:       |  |              |  |     |  /-- 00a40663              beq     s0,a0,d00098ac <boot_data_active_page_find+0xde>
d00098a4:       |  |              |  |     |  |   0000                  unimp
d00098a6:       |  |              |  |     |  |   0000                  unimp
d00098a8:       |  |              |  |     |  |   0000                  unimp
d00098aa:       |  |              |  |     |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:130
  *masked_identifier = buf[0] & buf[1] & buf[2];
d00098ac:       |  |              |  |     |  \-> 454e                  lw      a0,208(sp)
d00098ae:       |  |              |  |     |      45de                  lw      a1,212(sp)
d00098b0:       |  |              |  |     |      466e                  lw      a2,216(sp)
d00098b2:       |  |              |  |     |      8d6d                  and     a0,a0,a1
d00098b4:       |  |              |  |     |      8d71                  and     a0,a0,a2
d00098b6:       |  |              |  |     |      c088                  sw      a0,0(s1)
d00098b8:       |  |              |  |     |      73900413              li      s0,1849
d00098bc:       |  |              |  |     |  /-- a011                  j       d00098c0 <boot_data_active_page_find+0xf2>
d00098be:       |  |              |  |     \--|-> 4501                  li      a0,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098c0:       |  |              |  |        \-> 85a2                  mv      a1,s0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d00098c2:       |  |  /-----------|--|----------- 23a59063              bne     a1,s10,d0009ae2 <boot_data_active_page_find+0x314>
d00098c6:       |  |  |           |  |        /-- 01a40663              beq     s0,s10,d00098d2 <boot_data_active_page_find+0x104>
d00098ca:       |  |  |           |  |        |   0000                  unimp
d00098cc:       |  |  |           |  |        |   0000                  unimp
d00098ce:       |  |  |           |  |        |   0000                  unimp
d00098d0:       |  |  |           |  |        |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:335
    if (sniff_results[i] == kFlashCtrlErasedWord) {
d00098d2:       |  |  |           |  |        \-> 55fd                  li      a1,-1
d00098d4:       |  |  |           |  |  /-------- 08b51263              bne     a0,a1,d0009958 <boot_data_active_page_find+0x18a>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d00098d8:       |  |  |           |  |  |         4641                  li      a2,16
d00098da:       |  |  |           |  |  |         0814                  addi    a3,sp,16
d00098dc:       |  |  |           |  |  |         8552                  mv      a0,s4
d00098de:       |  |  |           |  |  |         85d6                  mv      a1,s5
d00098e0:       |  |  |           |  |  |         3af010ef              jal     ra,d000b48e <flash_ctrl_info_read>
d00098e4:       |  |  |           |  |  |         842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d00098e6:       |  |  +-----------|--|--|-------- 1fa51e63              bne     a0,s10,d0009ae2 <boot_data_active_page_find+0x314>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098ea:       |  |  |           |  |  |         4581                  li      a1,0
d00098ec:       |  |  |           |  |  |         73900513              li      a0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
d00098f0:       |  |  |           |  |  |     /-- 00a40663              beq     s0,a0,d00098fc <boot_data_active_page_find+0x12e>
d00098f4:       |  |  |           |  |  |     |   0000                  unimp
d00098f6:       |  |  |           |  |  |     |   0000                  unimp
d00098f8:       |  |  |           |  |  |     |   0000                  unimp
d00098fa:       |  |  |           |  |  |     |   0000                  unimp
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098fc:       |  |  |           |  |  |     \-> 463d                  li      a2,15
d00098fe:       |  |  |           |  |  |  /----- 00b66e63              bltu    a2,a1,d000991a <boot_data_active_page_find+0x14c>
d0009902:       |  |  |           |  |  |  |      4601                  li      a2,0
d0009904:       |  |  |           |  |  |  |      55fd                  li      a1,-1
d0009906:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considered a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d0009908:       |  |  |           |  |  |  |  /-> 4298                  lw      a4,0(a3)
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:84
    res &= read_32(boot_data);
d000990a:       |  |  |           |  |  |  |  |   8df9                  and     a1,a1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d000990c:       |  |  |           |  |  |  |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:85
    is_empty &= read_32(boot_data);
d000990e:       |  |  |           |  |  |  |  |   8d79                  and     a0,a0,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009910:       |  |  |           |  |  |  |  |   8732                  mv      a4,a2
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:86
    boot_data = (char *)boot_data + sizeof(uint32_t);
d0009912:       |  |  |           |  |  |  |  |   0691                  addi    a3,a3,4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d0009914:       |  |  |           |  |  |  |  \-- ff976ae3              bltu    a4,s9,d0009908 <boot_data_active_page_find+0x13a>
d0009918:       |  |  |           |  |  |  |  /-- a019                  j       d000991e <boot_data_active_page_find+0x150>
d000991a:       |  |  |           |  |  |  \--|-> 4601                  li      a2,0
d000991c:       |  |  |           |  |  |     |   55fd                  li      a1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:88
  HARDENED_CHECK_EQ(i, kBootDataNumWords);
d000991e:       |  |  |           |  |  |  /--\-X 01960663              beq     a2,s9,d000992a <boot_data_active_page_find+0x15c>
d0009922:       |  |  |           |  |  |  |      0000                  unimp
d0009924:       |  |  |           |  |  |  |      0000                  unimp
d0009926:       |  |  |           |  |  |  |      0000                  unimp
d0009928:       |  |  |           |  |  |  |      0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000992a:       |  |  |           |  |  |  \----> 862e                  mv      a2,a1
d000992c:       |  |  |           |  |  |         1d400993              li      s3,468
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:89
  if (launder32(res) == kFlashCtrlErasedWord) {
d0009930:       |  |  |           |  |  |         56fd                  li      a3,-1
d0009932:       |  |  |           |  |  |  /----- 00d61a63              bne     a2,a3,d0009946 <boot_data_active_page_find+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:90
    HARDENED_CHECK_EQ(res, kFlashCtrlErasedWord);
d0009936:       |  |  |           |  |  |  |      567d                  li      a2,-1
d0009938:       |  |  |           |  |  |  |  /-- 00c58663              beq     a1,a2,d0009944 <boot_data_active_page_find+0x176>
d000993c:       |  |  |           |  |  |  |  |   0000                  unimp
d000993e:       |  |  |           |  |  |  |  |   0000                  unimp
d0009940:       |  |  |           |  |  |  |  |   0000                  unimp
d0009942:       |  |  |           |  |  |  |  |   0000                  unimp
d0009944:       |  |  |           |  |  |  |  \-> 89aa                  mv      s3,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009946:       |  |  |           |  |  |  \----> 854e                  mv      a0,s3
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:338
      if (launder32(has_empty_entry) == kHardenedBoolTrue) {
d0009948:       |  |  |           |  |  |     /-- 01a50d63              beq     a0,s10,d0009962 <boot_data_active_page_find+0x194>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:342
      HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolFalse);
d000994c:       |  |  |           |  |  +-----|-- 01298663              beq     s3,s2,d0009958 <boot_data_active_page_find+0x18a>
d0009950:       |  |  |           |  |  |     |   0000                  unimp
d0009952:       |  |  |           |  |  |     |   0000                  unimp
d0009954:       |  |  |           |  |  |     |   0000                  unimp
d0009956:       |  |  |           |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d0009958:       |  |  |           |  |  \-----|-> 0d85                  addi    s11,s11,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000995a:       |  |  |           |  |        |   856e                  mv      a0,s11
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
d000995c:       |  |  |           |  \--------|-- f1856ce3              bltu    a0,s8,d0009874 <boot_data_active_page_find+0xa6>
d0009960:       |  |  |           +-----------|-- a039                  j       d000996e <boot_data_active_page_find+0x1a0>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:339
        HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolTrue);
d0009962:       |  |  |           +-----------\-X 01a98663              beq     s3,s10,d000996e <boot_data_active_page_find+0x1a0>
d0009966:       |  |  |           |               0000                  unimp
d0009968:       |  |  |           |               0000                  unimp
d000996a:       |  |  |           |               0000                  unimp
d000996c:       |  |  |           |               0000                  unimp
d000996e:       |  |  |           \-------------> 895a                  mv      s2,s6
d0009970:       |  |  |                           02000513              li      a0,32
d0009974:       |  |  |                           fffd8c13              addi    s8,s11,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:347
  HARDENED_CHECK_LE(i, kBootDataEntriesPerPage);
d0009978:       |  |  |                       /-- 01b57663              bgeu    a0,s11,d0009984 <boot_data_active_page_find+0x1b6>
d000997c:       |  |  |                       |   0000                  unimp
d000997e:       |  |  |                       |   0000                  unimp
d0009980:       |  |  |                       |   0000                  unimp
d0009982:       |  |  |                       |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009984:       |  |  |                       \-> 8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d0009986:       |  |  |           /-------------- 07b57863              bgeu    a0,s11,d00099f6 <boot_data_active_page_find+0x228>
d000998a:       |  |  |           |               4b01                  li      s6,0
d000998c:       |  |  |           |               006d9513              slli    a0,s11,0x6
d0009990:       |  |  |           |               fc050493              addi    s1,a0,-64
d0009994:       |  |  |           |               002d9513              slli    a0,s11,0x2
d0009998:       |  |  |           |               00ec                  addi    a1,sp,76
d000999a:       |  |  |           |               00a58ab3              add     s5,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000999e:       |  |  |           |     /-------> 855a                  mv      a0,s6
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
d00099a0:       |  |  |           |  /--|-------- 05b57c63              bgeu    a0,s11,d00099f8 <boot_data_active_page_find+0x22a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:357
    if (sniff_results[i] == kBootDataIdentifier) {
d00099a4:       |  |  |           |  |  |         000aa503              lw      a0,0(s5)
d00099a8:       |  |  |           |  |  |         45b2                  lw      a1,12(sp)
d00099aa:       |  |  |           |  |  |  /----- 02b51d63              bne     a0,a1,d00099e4 <boot_data_active_page_find+0x216>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d00099ae:       |  |  |           |  |  |  |      4641                  li      a2,16
d00099b0:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
d00099b2:       |  |  |           |  |  |  |      8552                  mv      a0,s4
d00099b4:       |  |  |           |  |  |  |      85a6                  mv      a1,s1
d00099b6:       |  |  |           |  |  |  |      2d9010ef              jal     ra,d000b48e <flash_ctrl_info_read>
d00099ba:       |  |  |           |  |  |  |      842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:358
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d00099bc:       |  |  |        /--|--|--|--|----- 0ba51263              bne     a0,s10,d0009a60 <boot_data_active_page_find+0x292>
d00099c0:       |  |  |        |  |  |  |  |  /-- 01a40663              beq     s0,s10,d00099cc <boot_data_active_page_find+0x1fe>
d00099c4:       |  |  |        |  |  |  |  |  |   0000                  unimp
d00099c6:       |  |  |        |  |  |  |  |  |   0000                  unimp
d00099c8:       |  |  |        |  |  |  |  |  |   0000                  unimp
d00099ca:       |  |  |        |  |  |  |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:359
      rom_error_t is_valid = boot_data_check(&buf);
d00099cc:       |  |  |        |  |  |  |  |  \-> 0808                  addi    a0,sp,16
d00099ce:       |  |  |        |  |  |  |  |      2a69                  jal     d0009b68 <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00099d0:       |  |  |        |  |  |  |  |      85aa                  mv      a1,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:360
      if (launder32(is_valid) == kErrorOk) {
d00099d2:       |  |  |  /-----|--|--|--|--|----- 15a58663              beq     a1,s10,d0009b1e <boot_data_active_page_find+0x350>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:367
      HARDENED_CHECK_EQ(is_valid, kErrorBootDataInvalid);
d00099d6:       |  |  |  |     |  |  |  |  |      45a2                  lw      a1,8(sp)
d00099d8:       |  |  |  |     |  |  |  |  +----- 00b50663              beq     a0,a1,d00099e4 <boot_data_active_page_find+0x216>
d00099dc:       |  |  |  |     |  |  |  |  |      0000                  unimp
d00099de:       |  |  |  |     |  |  |  |  |      0000                  unimp
d00099e0:       |  |  |  |     |  |  |  |  |      0000                  unimp
d00099e2:       |  |  |  |     |  |  |  |  |      0000                  unimp
d00099e4:       |  |  |  |     |  |  |  |  \----> 1c7d                  addi    s8,s8,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:355
       --i, ++j) {
d00099e6:       |  |  |  |     |  |  |  |         0b05                  addi    s6,s6,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00099e8:       |  |  |  |     |  |  |  |         8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d00099ea:       |  |  |  |     |  |  |  |         fc048493              addi    s1,s1,-64
d00099ee:       |  |  |  |     |  |  |  |         1af1                  addi    s5,s5,-4
d00099f0:       |  |  |  |     |  |  |  \-------- fbb567e3              bltu    a0,s11,d000999e <boot_data_active_page_find+0x1d0>
d00099f4:       |  |  |  |     |  |  +----------- a011                  j       d00099f8 <boot_data_active_page_find+0x22a>
d00099f6:       |  |  |  |     |  \--|----------> 4b01                  li      s6,0
d00099f8:       |  |  |  |     |     \----------> 1d400593              li      a1,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:373
  HARDENED_CHECK_LE(j, first_empty_index);
d00099fc:       |  |  |  |  /--|--------------/-X 016df663              bgeu    s11,s6,d0009a08 <boot_data_active_page_find+0x23a>
d0009a00:       |  |  |  |  |  |              |   0000                  unimp
d0009a02:       |  |  |  |  |  |              |   0000                  unimp
d0009a04:       |  |  |  |  |  |              |   0000                  unimp
d0009a06:       |  |  |  |  |  |              |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009a08:       |  |  |  |  |  |              \-> 852e                  mv      a0,a1
d0009a0a:       |  |  |  |  |  |                  73900413              li      s0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:375
  if (launder32(has_valid_entry) == kHardenedBoolTrue) {
d0009a0e:       |  |  |  |  |  +----------------- 04851963              bne     a0,s0,d0009a60 <boot_data_active_page_find+0x292>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:376
    HARDENED_CHECK_EQ(has_valid_entry, kHardenedBoolTrue);
d0009a12:       |  |  |  |  |  |              /-- 01a58663              beq     a1,s10,d0009a1e <boot_data_active_page_find+0x250>
d0009a16:       |  |  |  |  |  |              |   0000                  unimp
d0009a18:       |  |  |  |  |  |              |   0000                  unimp
d0009a1a:       |  |  |  |  |  |              |   0000                  unimp
d0009a1c:       |  |  |  |  |  |              |   0000                  unimp
d0009a1e:       |  |  |  |  |  |              \-> 8b4a                  mv      s6,s2
d0009a20:       |  |  |  |  |  |                  86ae                  mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:377
    if (launder32(page_info->has_valid_entry) == kHardenedBoolFalse) {
d0009a22:       |  |  |  |  |  |                  00c92583              lw      a1,12(s2)
d0009a26:       |  |  |  |  |  |                  00c92503              lw      a0,12(s2)
d0009a2a:       |  |  |  |  |  |                  1d400913              li      s2,468
d0009a2e:       |  |  |  |  |  |           /----- 03259d63              bne     a1,s2,d0009a68 <boot_data_active_page_find+0x29a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:379
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolFalse);
d0009a32:       |  |  |  |  |  |           |  /-- 01250663              beq     a0,s2,d0009a3e <boot_data_active_page_find+0x270>
d0009a36:       |  |  |  |  |  |           |  |   0000                  unimp
d0009a38:       |  |  |  |  |  |           |  |   0000                  unimp
d0009a3a:       |  |  |  |  |  |           |  |   0000                  unimp
d0009a3c:       |  |  |  |  |  |           |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:380
      *page_info = (active_page_info_t){
d0009a3e:       |  |  |  |  |  |           |  \-> 014b2023              sw      s4,0(s6)
d0009a42:       |  |  |  |  |  |           |      013b2223              sw      s3,4(s6)
d0009a46:       |  |  |  |  |  |           |      01bb2423              sw      s11,8(s6)
d0009a4a:       |  |  |  |  |  |           |      00db2623              sw      a3,12(s6)
d0009a4e:       |  |  |  |  |  |           |      018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:387
      *boot_data = buf;
d0009a52:       |  |  |  |  |  |           |      080c                  addi    a1,sp,16
d0009a54:       |  |  |  |  |  |           |      04000613              li      a2,64
d0009a58:       |  |  |  |  |  |           |      4502                  lw      a0,0(sp)
d0009a5a:       |  |  |  |  |  |     /-----|----> 213040ef              jal     ra,d000e46c <memcpy>
d0009a5e:       |  |  |  |  |  |  /--|-----|----- a041                  j       d0009ade <boot_data_active_page_find+0x310>
d0009a60:       |  |  |  |  |  \--|--|-----|----> 8b4a                  mv      s6,s2
d0009a62:       |  |  |  |  |     |  |     |      1d400913              li      s2,468
d0009a66:       |  |  |  |  |     +--|-----|----- a8a5                  j       d0009ade <boot_data_active_page_find+0x310>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d0009a68:       |  |  |  |  |     |  |  /--\----X 05a51863              bne     a0,s10,d0009ab8 <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:389
               launder32(buf.counter) > boot_data->counter) {
d0009a6c:       |  |  |  |  |     |  |  |         5572                  lw      a0,60(sp)
d0009a6e:       |  |  |  |  |     |  |  |         4582                  lw      a1,0(sp)
d0009a70:       |  |  |  |  |     |  |  |         55cc                  lw      a1,44(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d0009a72:       |  |  |  |  |     |  |  +-------- 04a5f363              bgeu    a1,a0,d0009ab8 <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:391
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009a76:       |  |  |  |  |     |  |  |         00cb2503              lw      a0,12(s6)
d0009a7a:       |  |  |  |  |     |  |  |         73900413              li      s0,1849
d0009a7e:       |  |  |  |  |     |  |  |     /-- 00850663              beq     a0,s0,d0009a8a <boot_data_active_page_find+0x2bc>
d0009a82:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a84:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a86:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a88:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:392
      HARDENED_CHECK_GT(buf.counter, boot_data->counter);
d0009a8a:       |  |  |  |  |     |  |  |     \-> 5672                  lw      a2,60(sp)
d0009a8c:       |  |  |  |  |     |  |  |         4502                  lw      a0,0(sp)
d0009a8e:       |  |  |  |  |     |  |  |         554c                  lw      a1,44(a0)
d0009a90:       |  |  |  |  |     |  |  |     /-- 00c5e663              bltu    a1,a2,d0009a9c <boot_data_active_page_find+0x2ce>
d0009a94:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a96:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a98:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a9a:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:393
      *page_info = (active_page_info_t){
d0009a9c:       |  |  |  |  |     |  |  |     \-> 014b2023              sw      s4,0(s6)
d0009aa0:       |  |  |  |  |     |  |  |         013b2223              sw      s3,4(s6)
d0009aa4:       |  |  |  |  |     |  |  |         01bb2423              sw      s11,8(s6)
d0009aa8:       |  |  |  |  |     |  |  |         00db2623              sw      a3,12(s6)
d0009aac:       |  |  |  |  |     |  |  |         018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:400
      *boot_data = buf;
d0009ab0:       |  |  |  |  |     |  |  |         080c                  addi    a1,sp,16
d0009ab2:       |  |  |  |  |     |  |  |         04000613              li      a2,64
d0009ab6:       |  |  |  |  |     |  \--|-------- b755                  j       d0009a5a <boot_data_active_page_find+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:402
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009ab8:       |  |  |  |  |     |     \-------> 00cb2503              lw      a0,12(s6)
d0009abc:       |  |  |  |  |     |               73900413              li      s0,1849
d0009ac0:       |  |  |  |  |     |           /-- 00850663              beq     a0,s0,d0009acc <boot_data_active_page_find+0x2fe>
d0009ac4:       |  |  |  |  |     |           |   0000                  unimp
d0009ac6:       |  |  |  |  |     |           |   0000                  unimp
d0009ac8:       |  |  |  |  |     |           |   0000                  unimp
d0009aca:       |  |  |  |  |     |           |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:405
      HARDENED_CHECK_LT(buf.counter, boot_data->counter);
d0009acc:       |  |  |  |  |     |           \-> 5572                  lw      a0,60(sp)
d0009ace:       |  |  |  |  |     |               4582                  lw      a1,0(sp)
d0009ad0:       |  |  |  |  |     |               55cc                  lw      a1,44(a1)
d0009ad2:       |  |  |  |  |     +-------------- 00b56663              bltu    a0,a1,d0009ade <boot_data_active_page_find+0x310>
d0009ad6:       |  |  |  |  |     |               0000                  unimp
d0009ad8:       |  |  |  |  |     |               0000                  unimp
d0009ada:       |  |  |  |  |     |               0000                  unimp
d0009adc:       |  |  |  |  |     |               0000                  unimp
d0009ade:       |  |  |  |  |     \-------------> 02000c13              li      s8,32
d0009ae2:       |  |  \--|--|-------------------> 44a5                  li      s1,9
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:436
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d0009ae4:       |  |     |  |                     c8a6                  sw      s1,80(sp)
d0009ae6:       |  |     |  |                     caa6                  sw      s1,84(sp)
d0009ae8:       |  |     |  |                     cca6                  sw      s1,88(sp)
d0009aea:       |  |     |  |                     088c                  addi    a1,sp,80
d0009aec:       |  |     |  |                     8552                  mv      a0,s4
d0009aee:       |  |     |  |                     6d1010ef              jal     ra,d000b9be <flash_ctrl_info_perms_set>
d0009af2:       |  |     |  |                     0fff6517              auipc   a0,0xfff6
d0009af6:       |  |     |  |                     58250513              addi    a0,a0,1410 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:441
  SEC_MMIO_WRITE_INCREMENT(2 * kFlashCtrlSecMmioInfoPermsSet);
d0009afa:       |  |     |  |                     450c                  lw      a1,8(a0)
d0009afc:       |  |     |  |                     0589                  addi    a1,a1,2
d0009afe:       |  |     |  |                     c50c                  sw      a1,8(a0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b00:       |  |     |  |                     8522                  mv      a0,s0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009b02:       |  |     |  |              /----- 03a51f63              bne     a0,s10,d0009b40 <boot_data_active_page_find+0x372>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009b06:       |  |     |  |              |      0b85                  addi    s7,s7,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009b08:       |  |     |  |              |  /-- 01a40663              beq     s0,s10,d0009b14 <boot_data_active_page_find+0x346>
d0009b0c:       |  |     |  |              |  |   0000                  unimp
d0009b0e:       |  |     |  |              |  |   0000                  unimp
d0009b10:       |  |     |  |              |  |   0000                  unimp
d0009b12:       |  |     |  |              |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b14:       |  |     |  |              |  \-> 855e                  mv      a0,s7
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009b16:       |  |     |  |              |      4589                  li      a1,2
d0009b18:       |  \-----|--|--------------|----- d2b566e3              bltu    a0,a1,d0009844 <boot_data_active_page_find+0x76>
d0009b1c:       +--------|--|--------------|----- a809                  j       d0009b2e <boot_data_active_page_find+0x360>
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:361
        HARDENED_CHECK_EQ(is_valid, kErrorOk);
d0009b1e:       |        \--|--------------|--/-X 01a50663              beq     a0,s10,d0009b2a <boot_data_active_page_find+0x35c>
d0009b22:       |           |              |  |   0000                  unimp
d0009b24:       |           |              |  |   0000                  unimp
d0009b26:       |           |              |  |   0000                  unimp
d0009b28:       |           |              |  |   0000                  unimp
d0009b2a:       |           |              |  \-> 85aa                  mv      a1,a0
d0009b2c:       |           \--------------|----- bdc1                  j       d00099fc <boot_data_active_page_find+0x22e>
d0009b2e:       \--------------------------|----> 4509                  li      a0,2
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:471
  HARDENED_CHECK_EQ(i, ARRAYSIZE(kPages));
d0009b30:                                  |  /-- 00ab8663              beq     s7,a0,d0009b3c <boot_data_active_page_find+0x36e>
d0009b34:                                  |  |   0000                  unimp
d0009b36:                                  |  |   0000                  unimp
d0009b38:                                  |  |   0000                  unimp
d0009b3a:                                  |  |   0000                  unimp
d0009b3c:                                  |  \-> 73900413              li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:474
}
d0009b40:                                  \----> 8522                  mv      a0,s0
d0009b42:                                         4dfe                  lw      s11,220(sp)
d0009b44:                                         5d0e                  lw      s10,224(sp)
d0009b46:                                         5c9e                  lw      s9,228(sp)
d0009b48:                                         5c2e                  lw      s8,232(sp)
d0009b4a:                                         5bbe                  lw      s7,236(sp)
d0009b4c:                                         5b4e                  lw      s6,240(sp)
d0009b4e:                                         5ade                  lw      s5,244(sp)
d0009b50:                                         5a6e                  lw      s4,248(sp)
d0009b52:                                         59fe                  lw      s3,252(sp)
d0009b54:                                         10012903              lw      s2,256(sp)
d0009b58:                                         10412483              lw      s1,260(sp)
d0009b5c:                                         10812403              lw      s0,264(sp)
d0009b60:                                         10c12083              lw      ra,268(sp)
d0009b64:                                         6151                  addi    sp,sp,272
d0009b66:                                         8082                  ret

d0009b68 <boot_data_check>:
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:627
 * Checks whether the digest of a boot data entry is valid.
 *
 * @param boot_data A buffer that holds a boot data entry.
 * @return Whether the digest of the entry is valid.
 */
rom_error_t boot_data_check(const boot_data_t *boot_data) {
d0009b68:              7179                     addi    sp,sp,-48
d0009b6a:              d606                     sw      ra,44(sp)
d0009b6c:              d422                     sw      s0,40(sp)
d0009b6e:              d226                     sw      s1,36(sp)
d0009b70:              d04a                     sw      s2,32(sp)
d0009b72:              892a                     mv      s2,a0
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d0009b74:              3bc040ef                 jal     ra,d000df30 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009b78:              02090513                 addi    a0,s2,32
d0009b7c:              02000593                 li      a1,32
d0009b80:              3ca040ef                 jal     ra,d000df4a <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d0009b84:              850a                     mv      a0,sp
d0009b86:              848a                     mv      s1,sp
d0009b88:              430040ef                 jal     ra,d000dfb8 <hmac_sha256_final>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b8c:              4681                     li      a3,0
d0009b8e:              03424737                 lui     a4,0x3424
d0009b92:              40d70513                 addi    a0,a4,1037 # 342440d <_rom_ext_virtual_size+0x33a440d>
d0009b96:              479d                     li      a5,7
d0009b98:              4581                     li      a1,0
d0009b9a:              862a                     mv      a2,a0
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  rom_error_t error = kErrorBootDataInvalid;
  hmac_digest_t act_digest;
  boot_data_digest_compute(boot_data, &act_digest);

  size_t i = 0;
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b9c:       /----- 02d7ea63                 bltu    a5,a3,d0009bd0 <boot_data_check+0x68>
d0009ba0:       |      4581                     li      a1,0
d0009ba2:       |      00005697                 auipc   a3,0x5
d0009ba6:       |      10a68693                 addi    a3,a3,266 # d000ecac <kCheckShares>
d0009baa:       |      40d70613                 addi    a2,a4,1037
d0009bae:       |      4821                     li      a6,8
d0009bb0:       |      87ca                     mv      a5,s2
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:638
    error ^=
        boot_data->digest.digest[i] ^ act_digest.digest[i] ^ kCheckShares[i];
d0009bb2:       |  /-> 4380                     lw      s0,0(a5)
d0009bb4:       |  |   4098                     lw      a4,0(s1)
d0009bb6:       |  |   0006a883                 lw      a7,0(a3)
d0009bba:       |  |   8e21                     xor     a2,a2,s0
d0009bbc:       |  |   8e39                     xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009bbe:       |  |   0585                     addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:637
    error ^=
d0009bc0:       |  |   01164633                 xor     a2,a2,a7
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bc4:       |  |   872e                     mv      a4,a1
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009bc6:       |  |   0691                     addi    a3,a3,4
d0009bc8:       |  |   0791                     addi    a5,a5,4
d0009bca:       |  |   0491                     addi    s1,s1,4
d0009bcc:       |  \-- ff0763e3                 bltu    a4,a6,d0009bb2 <boot_data_check+0x4a>
d0009bd0:       \----> 46a1                     li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:640
  }
  HARDENED_CHECK_EQ(i, kHmacDigestNumWords);
d0009bd2:          /-- 00d58663                 beq     a1,a3,d0009bde <boot_data_check+0x76>
d0009bd6:          |   0000                     unimp
d0009bd8:          |   0000                     unimp
d0009bda:          |   0000                     unimp
d0009bdc:          |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:641
  error ^= boot_data->identifier ^ kCheckShares[kHmacDigestNumWords];
d0009bde:          \-> 02892583                 lw      a1,40(s2)
d0009be2:              8db1                     xor     a1,a1,a2
d0009be4:              381df637                 lui     a2,0x381df
d0009be8:              e3a60613                 addi    a2,a2,-454 # 381dee3a <_epmp_stack_guard_na4+0x1d7e3a>
d0009bec:              8db1                     xor     a1,a1,a2
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bee:              86ae                     mv      a3,a1
d0009bf0:              73900613                 li      a2,1849
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:642
  if (launder32(error) == kErrorOk) {
d0009bf4:       /----- 00c69963                 bne     a3,a2,d0009c06 <boot_data_check+0x9e>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:643
    HARDENED_CHECK_EQ(error, kErrorOk);
d0009bf8:       |  /-- 00c58663                 beq     a1,a2,d0009c04 <boot_data_check+0x9c>
d0009bfc:       |  |   0000                     unimp
d0009bfe:       |  |   0000                     unimp
d0009c00:       |  |   0000                     unimp
d0009c02:       |  |   0000                     unimp
d0009c04:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:648
    return error;
  }

  return kErrorBootDataInvalid;
}
d0009c06:       \----> 5902                     lw      s2,32(sp)
d0009c08:              5492                     lw      s1,36(sp)
d0009c0a:              5422                     lw      s0,40(sp)
d0009c0c:              50b2                     lw      ra,44(sp)
d0009c0e:              6145                     addi    sp,sp,48
d0009c10:              8082                     ret

d0009c12 <bootstrap_requested>:
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:335

  spi_device_flash_status_clear();
  return error;
}

hardened_bool_t bootstrap_requested(void) {
d0009c12:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:337
  uint32_t res =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d0009c14:              c606                     sw      ra,12(sp)
d0009c16:              36400513                 li      a0,868
d0009c1a:              5e6040ef                 jal     ra,d000e200 <otp_read32>
d0009c1e:              85aa                     mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009c20:              86aa                     mv      a3,a0
d0009c22:              73900613                 li      a2,1849
d0009c26:              1d400513                 li      a0,468
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:338
  if (launder32(res) != kHardenedBoolTrue) {
d0009c2a:       /----- 02c69c63                 bne     a3,a2,d0009c62 <bootstrap_requested+0x50>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:341
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009c2e:       |  /-- 00c58663                 beq     a1,a2,d0009c3a <bootstrap_requested+0x28>
d0009c32:       |  |   0000                     unimp
d0009c34:       |  |   0000                     unimp
d0009c36:       |  |   0000                     unimp
d0009c38:       |  |   0000                     unimp
d0009c3a:       |  \-> c00406b7                 lui     a3,0xc0040
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
 * @param addr the address to read from.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t abs_mmio_read32(uint32_t addr) {
  return *((volatile uint32_t *)addr);
d0009c3e:       |      4a94                     lw      a3,16(a3)
d0009c40:       |      01c00737                 lui     a4,0x1c00
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:347

  // A single read is sufficient since we expect strong pull-ups on the strap
  // pins.
  res ^= SW_STRAP_BOOTSTRAP;
  res ^=
      abs_mmio_read32(TOP_EARLGREY_GPIO_BASE_ADDR + GPIO_DATA_IN_REG_OFFSET) &
d0009c44:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:346
  res ^=
d0009c46:       |      8db5                     xor     a1,a1,a3
d0009c48:       |      8db9                     xor     a1,a1,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009c4a:       |      86ae                     mv      a3,a1
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:349
      SW_STRAP_MASK;
  if (launder32(res) != kHardenedBoolTrue) {
d0009c4c:       +----- 00c69b63                 bne     a3,a2,d0009c62 <bootstrap_requested+0x50>
d0009c50:       |      73900513                 li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:352
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009c54:       |  /-- 00a58663                 beq     a1,a0,d0009c60 <bootstrap_requested+0x4e>
d0009c58:       |  |   0000                     unimp
d0009c5a:       |  |   0000                     unimp
d0009c5c:       |  |   0000                     unimp
d0009c5e:       |  |   0000                     unimp
d0009c60:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:354
  return res;
}
d0009c62:       \----> 40b2                     lw      ra,12(sp)
d0009c64:              0141                     addi    sp,sp,16
d0009c66:              8082                     ret

d0009c68 <bootstrap>:
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:356

rom_error_t bootstrap(void) {
d0009c68:                                                  7149                 addi    sp,sp,-368
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:357
  hardened_bool_t requested = bootstrap_requested();
d0009c6a:                                                  16112623             sw      ra,364(sp)
d0009c6e:                                                  16812423             sw      s0,360(sp)
d0009c72:                                                  16912223             sw      s1,356(sp)
d0009c76:                                                  17212023             sw      s2,352(sp)
d0009c7a:                                                  15312e23             sw      s3,348(sp)
d0009c7e:                                                  15412c23             sw      s4,344(sp)
d0009c82:                                                  15512a23             sw      s5,340(sp)
d0009c86:                                                  15612823             sw      s6,336(sp)
d0009c8a:                                                  15712623             sw      s7,332(sp)
d0009c8e:                                                  15812423             sw      s8,328(sp)
d0009c92:                                                  15912223             sw      s9,324(sp)
d0009c96:                                                  15a12023             sw      s10,320(sp)
d0009c9a:                                                  13b12e23             sw      s11,316(sp)
d0009c9e:                                                  3f95                 jal     d0009c12 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009ca0:                                                  85aa                 mv      a1,a0
d0009ca2:                                                  73900493             li      s1,1849
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:358
  if (launder32(requested) != kHardenedBoolTrue) {
d0009ca6:       /----------------------------------------- 30959963             bne     a1,s1,d0009fb8 <bootstrap+0x350>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:361
    return kErrorBootstrapNotRequested;
  }
  HARDENED_CHECK_EQ(requested, kHardenedBoolTrue);
d0009caa:       |                                      /-- 00950663             beq     a0,s1,d0009cb6 <bootstrap+0x4e>
d0009cae:       |                                      |   0000                 unimp
d0009cb0:       |                                      |   0000                 unimp
d0009cb2:       |                                      |   0000                 unimp
d0009cb4:       |                                      |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:363

  spi_device_init();
d0009cb6:       |                                      \-> 265d                 jal     d000a05c <spi_device_init>
d0009cb8:       |                                          d4576cb7             lui     s9,0xd4576
d0009cbc:       |                                          543c8d93             addi    s11,s9,1347 # d4576543 <_stack_end+0xf4556543>
d0009cc0:       |                                          03425537             lui     a0,0x3425
d0009cc4:       |                                          30350d13             addi    s10,a0,771 # 3425303 <_rom_ext_virtual_size+0x33a5303>
d0009cc8:       |                                          bdd8d537             lui     a0,0xbdd8d
d0009ccc:       |                                          a6050993             addi    s3,a0,-1440 # bdd8ca60 <_stack_end+0xddd6ca60>
d0009cd0:       |                                          09900a93             li      s5,153
d0009cd4:       |                                          fff00537             lui     a0,0xfff00
d0009cd8:       |                                          051d                 addi    a0,a0,7
d0009cda:       |                                          ce2a                 sw      a0,28(sp)
d0009cdc:       |                                          02425537             lui     a0,0x2425
d0009ce0:       |                                          30350513             addi    a0,a0,771 # 2425303 <_rom_ext_virtual_size+0x23a5303>
d0009ce4:       |                                          cc2a                 sw      a0,24(sp)
d0009ce6:       |                                          4919                 li      s2,6
d0009ce8:       |                                          01425537             lui     a0,0x1425
d0009cec:       |                                          30350513             addi    a0,a0,771 # 1425303 <_rom_ext_virtual_size+0x13a5303>
d0009cf0:       |                                          ca2a                 sw      a0,20(sp)
d0009cf2:       |                                          af0eb537             lui     a0,0xaf0eb
d0009cf6:       |                                          b8b50513             addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d0009cfa:       |                                          c82a                 sw      a0,16(sp)
d0009cfc:       |                                          6505                 lui     a0,0x1
d0009cfe:       |                                          80050513             addi    a0,a0,-2048 # 800 <_epmp_reset_rx_size>
d0009d02:       |                                          c62a                 sw      a0,12(sp)
d0009d04:       |                                          0c700b93             li      s7,199
d0009d08:       |                                          f3c72537             lui     a0,0xf3c72
d0009d0c:       |                                          bac50b13             addi    s6,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
d0009d10:       |                                          8032a537             lui     a0,0x8032a
d0009d14:       |                                          be950c13             addi    s8,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009d18:       |  /-------------------------------------> 856e                 mv      a0,s11
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:369

  // Bootstrap event loop.
  bootstrap_state_t state = kBootstrapStateErase;
  rom_error_t error = kErrorUnknown;
  while (true) {
    switch (launder32(state)) {
d0009d1a:       |  |                             /-------- 07350163             beq     a0,s3,d0009d7c <bootstrap+0x114>
d0009d1e:       |  |                    /--------|-------- 11650f63             beq     a0,s6,d0009e3c <bootstrap+0x1d4>
d0009d22:       |  |                    |        |         543c8593             addi    a1,s9,1347
d0009d26:       |  |              /-----|--------|-------- 16b51a63             bne     a0,a1,d0009e9a <bootstrap+0x232>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:371
      case kBootstrapStateErase:
        HARDENED_CHECK_EQ(state, kBootstrapStateErase);
d0009d2a:       |  |              |     |        |     /-- 00bd8663             beq     s11,a1,d0009d36 <bootstrap+0xce>
d0009d2e:       |  |              |     |        |     |   0000                 unimp
d0009d30:       |  |              |     |        |     |   0000                 unimp
d0009d32:       |  |              |     |        |     |   0000                 unimp
d0009d34:       |  |              |     |        |     |   0000                 unimp
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:225
  HARDENED_CHECK_EQ(*state, kBootstrapStateErase);
d0009d36:       |  |              |     |        |  /--\-X 00bd8663             beq     s11,a1,d0009d42 <bootstrap+0xda>
d0009d3a:       |  |              |     |        |  |      0000                 unimp
d0009d3c:       |  |              |     |        |  |      0000                 unimp
d0009d3e:       |  |              |     |        |  |      0000                 unimp
d0009d40:       |  |              |     |        |  |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:228
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009d42:       |  |              |     |        |  \----> 1008                 addi    a0,sp,32
d0009d44:       |  |              |     |        |         2909                 jal     d000a156 <spi_device_cmd_get>
d0009d46:       |  |              |  /--|--------|-------- 14951c63             bne     a0,s1,d0009e9e <bootstrap+0x236>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
  if (!bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009d4a:       |  |              |  |  |        |         2969                 jal     d000a1e4 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d0009d4c:       |  |              |  |  |        |         8909                 andi    a0,a0,2
d0009d4e:       |  |              |  |  |        |         73900413             li      s0,1849
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
d0009d52:       |  |     /--------|--|--|--------|-------- 24050363             beqz    a0,d0009f98 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:235
  switch (cmd.opcode) {
d0009d56:       |  |     |        |  |  |        |         5502                 lw      a0,32(sp)
d0009d58:       |  |     |        |  |  |        |     /-- 01750663             beq     a0,s7,d0009d64 <bootstrap+0xfc>
d0009d5c:       |  |     |        |  |  |        |     |   02000593             li      a1,32
d0009d60:       |  |     |  /-----|--|--|--------|-----|-- 22b51b63             bne     a0,a1,d0009f96 <bootstrap+0x32e>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:238
      error = bootstrap_chip_erase();
d0009d64:       |  |     |  |     |  |  |        |     \-> 2c69                 jal     d0009ffe <bootstrap_chip_erase>
d0009d66:       |  |     |  |     |  |  |        |         842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:239
      HARDENED_RETURN_IF_ERROR(error);
d0009d68:       |  |     +--|-----|--|--|--------|-------- 22951863             bne     a0,s1,d0009f98 <bootstrap+0x330>
d0009d6c:       |  |     |  |     |  |  |        |     /-- 00940663             beq     s0,s1,d0009d78 <bootstrap+0x110>
d0009d70:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d72:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d74:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d76:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d78:       |  |     |  |     |  |  |        |     \-> 8dda                 mv      s11,s6
d0009d7a:       |  |     +--|-----|--|--|--------|-------- ac39                 j       d0009f98 <bootstrap+0x330>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:379
      case kBootstrapStateEraseVerify:
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
        error = bootstrap_handle_erase_verify(&state);
        break;
      case kBootstrapStateProgram:
        HARDENED_CHECK_EQ(state, kBootstrapStateProgram);
d0009d7c:       |  |     |  |     |  |  |        \-----/-X 013d8663             beq     s11,s3,d0009d88 <bootstrap+0x120>
d0009d80:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d82:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d84:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d86:       |  |     |  |     |  |  |              |   0000                 unimp
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:291
  HARDENED_CHECK_EQ(*state, kBootstrapStateProgram);
d0009d88:       |  |     |  |     |  |  |           /--\-X 013d8663             beq     s11,s3,d0009d94 <bootstrap+0x12c>
d0009d8c:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d8e:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d90:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d92:       |  |     |  |     |  |  |           |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:294
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009d94:       |  |     |  |     |  |  |           \----> 1008                 addi    a0,sp,32
d0009d96:       |  |     |  |     |  |  |                  26c1                 jal     d000a156 <spi_device_cmd_get>
d0009d98:       |  |     |  |     |  |  |                  842a                 mv      s0,a0
d0009d9a:       |  |     +--|-----|--|--|----------------- 1e951f63             bne     a0,s1,d0009f98 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009d9e:       |  |     |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009da0:       |  |  /--|--|-----|--|--|----------------- 25550d63             beq     a0,s5,d0009ffa <bootstrap+0x392>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:297
      !bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009da4:       |  |  |  |  |     |  |  |                  2181                 jal     d000a1e4 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d0009da6:       |  |  |  |  |     |  |  |                  8909                 andi    a0,a0,2
d0009da8:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009dac:       |  |  |  +--|-----|--|--|----------------- 1e050663             beqz    a0,d0009f98 <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009db0:       |  |  |  |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009db2:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
d0009db6:       |  |  |  |  |     |  |  |                  09800593             li      a1,152
d0009dba:       |  |  |  |  |     |  |  |     /----------- 0ea5c463             blt     a1,a0,d0009ea2 <bootstrap+0x23a>
d0009dbe:       |  |  |  |  |     |  |  |     |            4589                 li      a1,2
d0009dc0:       |  |  |  |  |     |  |  |  /--|----------- 0eb50663             beq     a0,a1,d0009eac <bootstrap+0x244>
d0009dc4:       |  |  |  |  |     |  |  |  |  |            02000593             li      a1,32
d0009dc8:       |  |  |  |  |  /--|--|--|--|--|----------- 1ab51e63             bne     a0,a1,d0009f84 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:307
      error = bootstrap_sector_erase(cmd.address);
d0009dcc:       |  |  |  |  |  |  |  |  |  |  |            5512                 lw      a0,36(sp)
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:103
  if (addr >= kMaxAddress) {
d0009dce:       |  |  |  |  |  |  |  |  |  |  |            01455593             srli    a1,a0,0x14
d0009dd2:       |  |  |  |  |  |  |  |  |  |  |            4452                 lw      s0,20(sp)
d0009dd4:       |  |  |  |  |  +--|--|--|--|--|----------- 1a059863             bnez    a1,d0009f84 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:106
  addr &= kPageAddrMask;
d0009dd8:       |  |  |  |  |  |  |  |  |  |  |            75fd                 lui     a1,0xfffff
d0009dda:       |  |  |  |  |  |  |  |  |  |  |            00b57a33             and     s4,a0,a1
d0009dde:       |  |  |  |  |  |  |  |  |  |  |            4519                 li      a0,6
d0009de0:       |  |  |  |  |  |  |  |  |  |  |            4925                 li      s2,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:108
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009de2:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009de6:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009dea:       |  |  |  |  |  |  |  |  |  |  |            12a12c23             sw      a0,312(sp)
d0009dee:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009df0:       |  |  |  |  |  |  |  |  |  |  |            38d010ef             jal     ra,d000b97c <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:113
  rom_error_t err_0 = flash_ctrl_data_erase(addr, kFlashCtrlEraseTypePage);
d0009df4:       |  |  |  |  |  |  |  |  |  |  |            8552                 mv      a0,s4
d0009df6:       |  |  |  |  |  |  |  |  |  |  |            4bc2                 lw      s7,16(sp)
d0009df8:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009dfa:       |  |  |  |  |  |  |  |  |  |  |            27d010ef             jal     ra,d000b876 <flash_ctrl_data_erase>
d0009dfe:       |  |  |  |  |  |  |  |  |  |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:115
      addr + FLASH_CTRL_PARAM_BYTES_PER_PAGE, kFlashCtrlEraseTypePage);
d0009e00:       |  |  |  |  |  |  |  |  |  |  |            4532                 lw      a0,12(sp)
d0009e02:       |  |  |  |  |  |  |  |  |  |  |            00aa6533             or      a0,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:114
  rom_error_t err_1 = flash_ctrl_data_erase(
d0009e06:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009e08:       |  |  |  |  |  |  |  |  |  |  |            26f010ef             jal     ra,d000b876 <flash_ctrl_data_erase>
d0009e0c:       |  |  |  |  |  |  |  |  |  |  |            8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:116
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009e0e:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009e12:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009e16:       |  |  |  |  |  |  |  |  |  |  |            13212c23             sw      s2,312(sp)
d0009e1a:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009e1c:       |  |  |  |  |  |  |  |  |  |  |            361010ef             jal     ra,d000b97c <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e20:       |  |  |  |  |  |  |  |  |  |  |            8522                 mv      a0,s0
d0009e22:       |  |  |  |  |  |  |  |  |  |  |     /----- 00951963             bne     a0,s1,d0009e34 <bootstrap+0x1cc>
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:122
  HARDENED_RETURN_IF_ERROR(err_0);
d0009e26:       |  |  |  |  |  |  |  |  |  |  |     |  /-- 00940663             beq     s0,s1,d0009e32 <bootstrap+0x1ca>
d0009e2a:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009e2c:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009e2e:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009e30:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009e32:       |  |  |  |  |  |  |  |  |  |  |     |  \-> 8452                 mv      s0,s4
d0009e34:       |  |  |  |  |  |  |  |  |  |  |     \----> 4919                 li      s2,6
d0009e36:       |  |  |  |  |  |  |  |  |  |  |            0c700b93             li      s7,199
d0009e3a:       |  |  |  |  |  +--|--|--|--|--|----------- a2a9                 j       d0009f84 <bootstrap+0x31c>
d0009e3c:       |  |  |  |  |  |  |  |  \--|--|----------> f3c72537             lui     a0,0xf3c72
d0009e40:       |  |  |  |  |  |  |  |     |  |            bac50513             addi    a0,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:375
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
d0009e44:       |  |  |  |  |  |  |  |     |  |        /-- 00ad8663             beq     s11,a0,d0009e50 <bootstrap+0x1e8>
d0009e48:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e4a:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e4c:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e4e:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:263
  HARDENED_CHECK_EQ(*state, kBootstrapStateEraseVerify);
d0009e50:       |  |  |  |  |  |  |  |     |  |     /--\-X 00ad8663             beq     s11,a0,d0009e5c <bootstrap+0x1f4>
d0009e54:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009e56:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009e58:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009e5a:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:265
  rom_error_t err_0 = flash_ctrl_data_erase_verify(0, kFlashCtrlEraseTypeBank);
d0009e5c:       |  |  |  |  |  |  |  |     |  |     \----> 4501                 li      a0,0
d0009e5e:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009e60:       |  |  |  |  |  |  |  |     |  |            25d010ef             jal     ra,d000b8bc <flash_ctrl_data_erase_verify>
d0009e64:       |  |  |  |  |  |  |  |     |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:266
  rom_error_t err_1 = flash_ctrl_data_erase_verify(
d0009e66:       |  |  |  |  |  |  |  |     |  |            00080537             lui     a0,0x80
d0009e6a:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009e6c:       |  |  |  |  |  |  |  |     |  |            251010ef             jal     ra,d000b8bc <flash_ctrl_data_erase_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e70:       |  |  |  |  |  |  |  |     |  |            85a2                 mv      a1,s0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:268
  HARDENED_RETURN_IF_ERROR(err_0);
d0009e72:       |  |  |  +--|--|--|--|-----|--|----------- 12959363             bne     a1,s1,d0009f98 <bootstrap+0x330>
d0009e76:       |  |  |  |  |  |  |  |     |  |        /-- 00940663             beq     s0,s1,d0009e82 <bootstrap+0x21a>
d0009e7a:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e7c:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e7e:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e80:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e82:       |  |  |  |  |  |  |  |     |  |        \-> 85aa                 mv      a1,a0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:269
  HARDENED_RETURN_IF_ERROR(err_1);
d0009e84:       |  |  |  |  |  |  |  +-----|--|----------- 00959d63             bne     a1,s1,d0009e9e <bootstrap+0x236>
d0009e88:       |  |  |  |  |  |  |  |     |  |        /-- 00950663             beq     a0,s1,d0009e94 <bootstrap+0x22c>
d0009e8c:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e8e:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e90:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e92:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:272
  spi_device_flash_status_clear();
d0009e94:       |  |  |  |  |  |  |  |     |  |        \-> 2699                 jal     d000a1da <spi_device_flash_status_clear>
d0009e96:       |  |  |  |  |  |  |  |     |  |            8dce                 mv      s11,s3
d0009e98:       |  |  |  +--|--|--|--|-----|--|----------- a201                 j       d0009f98 <bootstrap+0x330>
d0009e9a:       |  |  |  |  |  |  \--|-----|--|----------> 846a                 mv      s0,s10
d0009e9c:       |  |  |  +--|--|-----|-----|--|----------- a8f5                 j       d0009f98 <bootstrap+0x330>
d0009e9e:       |  |  |  |  |  |     \-----|--|----------> 842a                 mv      s0,a0
d0009ea0:       |  |  |  +--|--|-----------|--|----------- a8e5                 j       d0009f98 <bootstrap+0x330>
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009ea2:       |  |  |  |  |  |           |  \--/-------X 05751063             bne     a0,s7,d0009ee2 <bootstrap+0x27a>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:304
      error = bootstrap_chip_erase();
d0009ea6:       |  |  |  |  |  |           |     |         2aa1                 jal     d0009ffe <bootstrap_chip_erase>
d0009ea8:       |  |  |  |  |  |           |     |         842a                 mv      s0,a0
d0009eaa:       |  |  |  |  |  +-----------|-----|-------- a8e9                 j       d0009f84 <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:310
      error = bootstrap_page_program(cmd.address, cmd.payload_byte_count,
d0009eac:       |  |  |  |  |  |           \-----|-------> 5a12                 lw      s4,36(sp)
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:163
  if (addr & kFlashWordMask || addr >= kMaxAddress) {
d0009eae:       |  |  |  |  |  |                 |         4572                 lw      a0,28(sp)
d0009eb0:       |  |  |  |  |  |                 |         00aa7533             and     a0,s4,a0
d0009eb4:       |  |  |  |  |  |                 |         4462                 lw      s0,24(sp)
d0009eb6:       |  |  |  |  |  +-----------------|-------- e579                 bnez    a0,d0009f84 <bootstrap+0x31c>
d0009eb8:       |  |  |  |  |  |                 |         5522                 lw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:168
  size_t flash_word_misalignment = byte_count & kFlashWordMask;
d0009eba:       |  |  |  |  |  |                 |         00757593             andi    a1,a0,7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:169
  if (flash_word_misalignment > 0) {
d0009ebe:       |  |  |  |  |  |                 |  /----- c58d                 beqz    a1,d0009ee8 <bootstrap+0x280>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009ec0:       |  |  |  |  |  |                 |  |      ff85e613             ori     a2,a1,-8
d0009ec4:       |  |  |  |  |  |                 |  |      0ff00713             li      a4,255
d0009ec8:       |  |  |  |  |  |                 |  |      02c10b93             addi    s7,sp,44
d0009ecc:       |  |  |  |  |  |                 |  |  /-> 86b2                 mv      a3,a2
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009ece:       |  |  |  |  |  |                 |  |  |   00150593             addi    a1,a0,1 # 80001 <_rom_ext_virtual_size+0x1>
d0009ed2:       |  |  |  |  |  |                 |  |  |   955e                 add     a0,a0,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009ed4:       |  |  |  |  |  |                 |  |  |   0605                 addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009ed6:       |  |  |  |  |  |                 |  |  |   00e50023             sb      a4,0(a0)
d0009eda:       |  |  |  |  |  |                 |  |  |   852e                 mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009edc:       |  |  |  |  |  |                 |  |  \-- fed678e3             bgeu    a2,a3,d0009ecc <bootstrap+0x264>
d0009ee0:       |  |  |  |  |  |                 |  |  /-- a039                 j       d0009eee <bootstrap+0x286>
d0009ee2:       |  |  |  |  |  +-----------------\--|--|-X 0b551163             bne     a0,s5,d0009f84 <bootstrap+0x31c>
d0009ee6:       |  |  +--|--|--|--------------------|--|-- aa11                 j       d0009ffa <bootstrap+0x392>
d0009ee8:       |  |  |  |  |  |                    \--|-> 85aa                 mv      a1,a0
d0009eea:       |  |  |  |  |  |                       |   02c10b93             addi    s7,sp,44
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:176
  size_t rem_word_count = byte_count / sizeof(uint32_t);
d0009eee:       |  |  |  |  |  |                       \-> 0025da93             srli    s5,a1,0x2
d0009ef2:       |  |  |  |  |  |                           4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:178
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009ef4:       |  |  |  |  |  |                           12a12823             sw      a0,304(sp)
d0009ef8:       |  |  |  |  |  |                           13212a23             sw      s2,308(sp)
d0009efc:       |  |  |  |  |  |                           12a12c23             sw      a0,312(sp)
d0009f00:       |  |  |  |  |  |                           1a08                 addi    a0,sp,304
d0009f02:       |  |  |  |  |  |                           27b010ef             jal     ra,d000b97c <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:186
  size_t prog_page_misalignment = addr & kFlashProgPageMask;
d0009f06:       |  |  |  |  |  |                           0ffa7513             andi    a0,s4,255
d0009f0a:       |  |  |  |  |  |                           73900413             li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:187
  if (prog_page_misalignment > 0) {
d0009f0e:       |  |  |  |  |  |        /----------------- cd59                 beqz    a0,d0009fac <bootstrap+0x344>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:189
        (kFlashProgPageSize - prog_page_misalignment) / sizeof(uint32_t);
d0009f10:       |  |  |  |  |  |        |                  10000593             li      a1,256
d0009f14:       |  |  |  |  |  |        |                  40a58533             sub     a0,a1,a0
d0009f18:       |  |  |  |  |  |        |                  8109                 srli    a0,a0,0x2
d0009f1a:       |  |  |  |  |  |        |                  8bd6                 mv      s7,s5
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:190
    if (word_count > rem_word_count) {
d0009f1c:       |  |  |  |  |  |        |              /-- 00aae363             bltu    s5,a0,d0009f22 <bootstrap+0x2ba>
d0009f20:       |  |  |  |  |  |        |              |   8baa                 mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:193
    err_0 = flash_ctrl_data_write(addr, word_count, data);
d0009f22:       |  |  |  |  |  |        |              \-> 8552                 mv      a0,s4
d0009f24:       |  |  |  |  |  |        |                  85de                 mv      a1,s7
d0009f26:       |  |  |  |  |  |        |                  1070                 addi    a2,sp,44
d0009f28:       |  |  |  |  |  |        |                  091010ef             jal     ra,d000b7b8 <flash_ctrl_data_write>
d0009f2c:       |  |  |  |  |  |        |                  892a                 mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:194
    rem_word_count -= word_count;
d0009f2e:       |  |  |  |  |  |        |                  417a8ab3             sub     s5,s5,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:195
    data += word_count * sizeof(uint32_t);
d0009f32:       |  |  |  |  |  |        |                  002b9513             slli    a0,s7,0x2
d0009f36:       |  |  |  |  |  |        |                  100c                 addi    a1,sp,32
d0009f38:       |  |  |  |  |  |        |                  952e                 add     a0,a0,a1
d0009f3a:       |  |  |  |  |  |        |                  00c50613             addi    a2,a0,12
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:198
    addr &= ~kFlashProgPageMask;
d0009f3e:       |  |  |  |  |  |        |                  f00a7a13             andi    s4,s4,-256
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009f42:       |  |  |  |  |  |        |  /-------------- 000a8763             beqz    s5,d0009f50 <bootstrap+0x2e8>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:202
    err_1 = flash_ctrl_data_write(addr, rem_word_count, data);
d0009f46:       |  |  |  |  |  |        |  |  /----------> 8552                 mv      a0,s4
d0009f48:       |  |  |  |  |  |        |  |  |            85d6                 mv      a1,s5
d0009f4a:       |  |  |  |  |  |        |  |  |            06f010ef             jal     ra,d000b7b8 <flash_ctrl_data_write>
d0009f4e:       |  |  |  |  |  |        |  |  |            842a                 mv      s0,a0
d0009f50:       |  |  |  |  |  |        |  >--|----------> 4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:204
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009f52:       |  |  |  |  |  |        |  |  |            12a12823             sw      a0,304(sp)
d0009f56:       |  |  |  |  |  |        |  |  |            12a12a23             sw      a0,308(sp)
d0009f5a:       |  |  |  |  |  |        |  |  |            12a12c23             sw      a0,312(sp)
d0009f5e:       |  |  |  |  |  |        |  |  |            1a08                 addi    a0,sp,304
d0009f60:       |  |  |  |  |  |        |  |  |            21d010ef             jal     ra,d000b97c <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f64:       |  |  |  |  |  |        |  |  |            854a                 mv      a0,s2
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:210
  HARDENED_RETURN_IF_ERROR(err_0);
d0009f66:       |  |  |  |  |  |        |  |  |  /-------- 00951963             bne     a0,s1,d0009f78 <bootstrap+0x310>
d0009f6a:       |  |  |  |  |  |        |  |  |  |  /----- 00990663             beq     s2,s1,d0009f76 <bootstrap+0x30e>
d0009f6e:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f70:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f72:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f74:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f76:       |  |  |  |  |  |        |  |  |  |  \--/-X a011                 j       d0009f7a <bootstrap+0x312>
d0009f78:       |  |  |  |  |  |        |  |  |  \-----|-> 844a                 mv      s0,s2
d0009f7a:       |  |  |  |  |  |        |  |  |        \-> 09900a93             li      s5,153
d0009f7e:       |  |  |  |  |  |        |  |  |            0c700b93             li      s7,199
d0009f82:       |  |  |  |  |  |        |  |  |            4919                 li      s2,6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f84:       |  |  |  |  |  \--------|--|--|----------> 8522                 mv      a0,s0
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:329
  HARDENED_RETURN_IF_ERROR(error);
d0009f86:       |  |  |  +--|-----------|--|--|----------- 00951963             bne     a0,s1,d0009f98 <bootstrap+0x330>
d0009f8a:       |  |  |  |  +-----------|--|--|----------- 00940663             beq     s0,s1,d0009f96 <bootstrap+0x32e>
d0009f8e:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f90:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f92:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f94:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f96:       |  |  |  |  \-----------|--|--|----------> 2491                 jal     d000a1da <spi_device_flash_status_clear>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f98:       |  |  |  \--------------|--|--|----------> 8522                 mv      a0,s0
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:385
        error = bootstrap_handle_program(&state);
        break;
      default:
        error = kErrorBootstrapInvalidState;
    }
    HARDENED_RETURN_IF_ERROR(error);
d0009f9a:       |  |  |                 |  |  |     /----- 02951363             bne     a0,s1,d0009fc0 <bootstrap+0x358>
d0009f9e:       |  |  |                 |  |  |     |  /-- 00940663             beq     s0,s1,d0009faa <bootstrap+0x342>
d0009fa2:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009fa4:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009fa6:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009fa8:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009faa:       |  \--|-----------------|--|--|-----|--\-X b3bd                 j       d0009d18 <bootstrap+0xb0>
d0009fac:       |     |                 \--|--|-----|----> 73900913             li      s2,1849
d0009fb0:       |     |                    |  |     |      865e                 mv      a2,s7
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009fb2:       |     |                    |  \-----|----- f80a9ae3             bnez    s5,d0009f46 <bootstrap+0x2de>
d0009fb6:       |     |                    \--------|----- bf69                 j       d0009f50 <bootstrap+0x2e8>
d0009fb8:       \-----|-----------------------------|----> 04425537             lui     a0,0x4425
d0009fbc:             |                             |      30d50413             addi    s0,a0,781 # 442530d <_rom_ext_virtual_size+0x43a530d>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:388
  }
  HARDENED_UNREACHABLE();
}
d0009fc0:             |                             \----> 8522                 mv      a0,s0
d0009fc2:             |                                    13c12d83             lw      s11,316(sp)
d0009fc6:             |                                    14012d03             lw      s10,320(sp)
d0009fca:             |                                    14412c83             lw      s9,324(sp)
d0009fce:             |                                    14812c03             lw      s8,328(sp)
d0009fd2:             |                                    14c12b83             lw      s7,332(sp)
d0009fd6:             |                                    15012b03             lw      s6,336(sp)
d0009fda:             |                                    15412a83             lw      s5,340(sp)
d0009fde:             |                                    15812a03             lw      s4,344(sp)
d0009fe2:             |                                    15c12983             lw      s3,348(sp)
d0009fe6:             |                                    16012903             lw      s2,352(sp)
d0009fea:             |                                    16412483             lw      s1,356(sp)
d0009fee:             |                                    16812403             lw      s0,360(sp)
d0009ff2:             |                                    16c12083             lw      ra,364(sp)
d0009ff6:             |                                    6175                 addi    sp,sp,368
d0009ff8:             |                                    8082                 ret
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:314
      rstmgr_reset();
d0009ffa:             \----------------------------------> 7b7010ef             jal     ra,d000bfb0 <rstmgr_reset>

d0009ffe <bootstrap_chip_erase>:
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:72
static rom_error_t bootstrap_chip_erase(void) {
d0009ffe:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:73
  flash_ctrl_bank_erase_perms_set(kHardenedBoolTrue);
d000a000:              c606                     sw      ra,12(sp)
d000a002:              c422                     sw      s0,8(sp)
d000a004:              c226                     sw      s1,4(sp)
d000a006:              c04a                     sw      s2,0(sp)
d000a008:              73900513                 li      a0,1849
d000a00c:              73900913                 li      s2,1849
d000a010:              559010ef                 jal     ra,d000bd68 <flash_ctrl_bank_erase_perms_set>
d000a014:              8032a537                 lui     a0,0x8032a
d000a018:              be950493                 addi    s1,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:74
  rom_error_t err_0 = flash_ctrl_data_erase(0, kFlashCtrlEraseTypeBank);
d000a01c:              4501                     li      a0,0
d000a01e:              85a6                     mv      a1,s1
d000a020:              057010ef                 jal     ra,d000b876 <flash_ctrl_data_erase>
d000a024:              842a                     mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:75
  rom_error_t err_1 = flash_ctrl_data_erase(FLASH_CTRL_PARAM_BYTES_PER_BANK,
d000a026:              00080537                 lui     a0,0x80
d000a02a:              85a6                     mv      a1,s1
d000a02c:              04b010ef                 jal     ra,d000b876 <flash_ctrl_data_erase>
d000a030:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:77
  flash_ctrl_bank_erase_perms_set(kHardenedBoolFalse);
d000a032:              1d400513                 li      a0,468
d000a036:              533010ef                 jal     ra,d000bd68 <flash_ctrl_bank_erase_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a03a:              8522                     mv      a0,s0
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:79
  HARDENED_RETURN_IF_ERROR(err_0);
d000a03c:       /----- 01251963                 bne     a0,s2,d000a04e <bootstrap_chip_erase+0x50>
d000a040:       |  /-- 01240663                 beq     s0,s2,d000a04c <bootstrap_chip_erase+0x4e>
d000a044:       |  |   0000                     unimp
d000a046:       |  |   0000                     unimp
d000a048:       |  |   0000                     unimp
d000a04a:       |  |   0000                     unimp
d000a04c:       |  \-> 8426                     mv      s0,s1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:81
}
d000a04e:       \----> 8522                     mv      a0,s0
d000a050:              4902                     lw      s2,0(sp)
d000a052:              4492                     lw      s1,4(sp)
d000a054:              4422                     lw      s0,8(sp)
d000a056:              40b2                     lw      ra,12(sp)
d000a058:              0141                     addi    sp,sp,16
d000a05a:              8082                     ret

d000a05c <spi_device_init>:
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:499
                             cmd_info.handled_in_sw);
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_0_VALID_0_BIT, true);
  abs_mmio_write32(kBase + cmd_info.reg_offset, reg);
}

void spi_device_init(void) {
d000a05c:           1141                        addi    sp,sp,-16
d000a05e:           c606                        sw      ra,12(sp)
d000a060:           c422                        sw      s0,8(sp)
d000a062:           c226                        sw      s1,4(sp)
d000a064:           c0052537            lui     a0,0xc0052
d000a068:           c0050413            addi    s0,a0,-1024 # c0051c00 <_stack_end+0xe0031c00>
d000a06c:           6521                        lui     a0,0x8
d000a06e:           f0050513            addi    a0,a0,-256 # 7f00 <_stack_size+0x3f00>
d000a072:           c00504b7            lui     s1,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a076:           c8c8                        sw      a0,20(s1)
d000a078:           6505                        lui     a0,0x1
d000a07a:           c7f50513            addi    a0,a0,-897 # c7f <_epmp_reset_rx_size+0x47f>
d000a07e:           c0a8                        sw      a0,64(s1)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:522
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_CC_REG_OFFSET, reg);
  // Note: The code below assumes that chip revision and generation numbers
  // from the life cycle controller (16-bits each) will fit in the revision and
  // generation fields of the device ID (3 and 4 bits, respectively).
  lifecycle_hw_rev_t hw_rev;
  lifecycle_hw_rev_get(&hw_rev);
d000a080:           850a                        mv      a0,sp
d000a082:           158040ef            jal     ra,d000e1da <lifecycle_hw_rev_get>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:524
  reg = bitfield_field32_write(0, SPI_DEVICE_DEV_ID_CHIP_REV_FIELD,
                               hw_rev.chip_rev);
d000a086:           00215583            lhu     a1,2(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:527
  reg = bitfield_bit32_write(reg, SPI_DEVICE_DEV_ID_ROM_BOOTSTRAP_BIT, true);
  reg = bitfield_field32_write(reg, SPI_DEVICE_DEV_ID_CHIP_GEN_FIELD,
                               hw_rev.chip_gen);
d000a08a:           00011603            lh      a2,0(sp)
d000a08e:           4501                        li      a0,0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a090:           899d                        andi    a1,a1,7
d000a092:           0612                        slli    a2,a2,0x4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000a094:           0f067613            andi    a2,a2,240
d000a098:           8dd1                        or      a1,a1,a2
d000a09a:           00ef1637            lui     a2,0xef1
d000a09e:           40860613            addi    a2,a2,1032 # ef1408 <_rom_ext_virtual_size+0xe71408>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a0a2:           8dd1                        or      a1,a1,a2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0a4:           c0ec                        sw      a1,68(s1)
d000a0a6:           00005597            auipc   a1,0x5
d000a0aa:           c2a58593            addi    a1,a1,-982 # d000ecd0 <kSpiDeviceSfdpTable>
d000a0ae:           06c00613            li      a2,108
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a0b2:       /-> 00b506b3            add     a3,a0,a1
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000a0b6:       |   4294                        lw      a3,0(a3)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a0b8:       |   00850733            add     a4,a0,s0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_ID_REG_OFFSET, reg);

  // Write SFDP table to the reserved region in spi_device buffer.
  uint32_t dest = kSfdpAreaStartAddr;
  const char *table = (const char *)&kSpiDeviceSfdpTable;
  for (size_t i = 0; i < kSpiDeviceSfdpTableNumWords; ++i) {
d000a0bc:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0be:       |   c314                        sw      a3,0(a4)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
d000a0c0:       \-- fec519e3            bne     a0,a2,d000a0b2 <spi_device_init+0x56>
d000a0c4:           c0052637            lui     a2,0xc0052
d000a0c8:           c6860593            addi    a1,a2,-920 # c0051c68 <_stack_end+0xe0031c68>
d000a0cc:           557d                        li      a0,-1
d000a0ce:           cfc60613            addi    a2,a2,-772
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0d2:       /-> 00458693            addi    a3,a1,4
d000a0d6:       |   c1c8                        sw      a0,4(a1)
d000a0d8:       |   85b6                        mv      a1,a3
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:543
    abs_mmio_write32(dest, read_32(table));
    dest += sizeof(uint32_t);
    table += sizeof(uint32_t);
  }
  // Fill the remaining space with `0xff`s.
  for (; dest < kSfdpAreaEndAddr; dest += sizeof(uint32_t)) {
d000a0da:       \-- fec6ece3            bltu    a3,a2,d000a0d2 <spi_device_init+0x76>
d000a0de:           5571                        li      a0,-4
d000a0e0:           0fc00593            li      a1,252
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0e4:       /-> 00a40633            add     a2,s0,a0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
    abs_mmio_write32(dest, UINT32_MAX);
  }

  // Reset the payload buffer to prevent access faults when reading beyond
  // current payload depth (see #11782).
  for (size_t i = 0; i < kSpiDevicePayloadAreaNumBytes; i += sizeof(uint32_t)) {
d000a0e8:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0ea:       |   10062223            sw      zero,260(a2)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
d000a0ee:       \-- feb56be3            bltu    a0,a1,d000a0e4 <spi_device_init+0x88>
d000a0f2:           c0050537            lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a0f6:           02052e23            sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
d000a0fa:           800005b7            lui     a1,0x80000
d000a0fe:           00558613            addi    a2,a1,5 # 80000005 <_stack_end+0x9ffe0005>
d000a102:           08c52823            sw      a2,144(a0)
d000a106:           09f58613            addi    a2,a1,159
d000a10a:           08c52e23            sw      a2,156(a0)
d000a10e:           8000f637            lui     a2,0x8000f
d000a112:           25a60613            addi    a2,a2,602 # 8000f25a <_stack_end+0x9ffef25a>
d000a116:           0ac52023            sw      a2,160(a0)
d000a11a:           83000637            lui     a2,0x83000
d000a11e:           0c760693            addi    a3,a2,199 # 830000c7 <_stack_end+0xa2fe00c7>
d000a122:           0ad52e23            sw      a3,188(a0)
d000a126:           22060693            addi    a3,a2,544
d000a12a:           0cd52023            sw      a3,192(a0)
d000a12e:           20260693            addi    a3,a2,514
d000a132:           0cd52223            sw      a3,196(a0)
d000a136:           09960613            addi    a2,a2,153
d000a13a:           0cc52423            sw      a2,200(a0)
d000a13e:           00658613            addi    a2,a1,6
d000a142:           0ec52c23            sw      a2,248(a0)
d000a146:           0591                        addi    a1,a1,4
d000a148:           0eb52e23            sw      a1,252(a0)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:622
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_WREN_VALID_BIT, true);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WREN_REG_OFFSET, reg);
  reg = bitfield_field32_write(reg, SPI_DEVICE_CMD_INFO_WRDI_OPCODE_FIELD,
                               kSpiDeviceOpcodeWriteDisable);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WRDI_REG_OFFSET, reg);
}
d000a14c:           4492                        lw      s1,4(sp)
d000a14e:           4422                        lw      s0,8(sp)
d000a150:           40b2                        lw      ra,12(sp)
d000a152:           0141                        addi    sp,sp,16
d000a154:           8082                        ret

d000a156 <spi_device_cmd_get>:
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:624

rom_error_t spi_device_cmd_get(spi_device_cmd_t *cmd) {
d000a156:                 c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a15a:             /-> 4190                  lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000a15c:             |   04067693              andi    a3,a2,64
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:627
  uint32_t reg = 0;
  bool cmd_pending = false;
  while (!cmd_pending) {
d000a160:             \-- deed                  beqz    a3,d000a15a <spi_device_cmd_get+0x4>
d000a162:                 10067693              andi    a3,a2,256
d000a166:                 c00505b7              lui     a1,0xc0050
d000a16a:                 567d                  li      a2,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a16c:                 c190                  sw      a2,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:635
    reg = abs_mmio_read32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET);
    cmd_pending = bitfield_bit32_read(
        reg, SPI_DEVICE_INTR_COMMON_UPLOAD_CMDFIFO_NOT_EMPTY_BIT);
  }
  abs_mmio_write32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET, UINT32_MAX);
  if (bitfield_bit32_read(reg,
d000a16e:       /-------- e2a5                  bnez    a3,d000a1ce <spi_device_cmd_get+0x78>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a170:       |         4db4                  lw      a3,88(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:640
                          SPI_DEVICE_INTR_COMMON_UPLOAD_PAYLOAD_OVERFLOW_BIT)) {
    return kErrorSpiDevicePayloadOverflow;
  }

  cmd->opcode = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_CMDFIFO_REG_OFFSET);
d000a172:       |         c114                  sw      a3,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:641
  cmd->address = kSpiDeviceNoAddress;
d000a174:       |         c150                  sw      a2,4(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a176:       |         49ac                  lw      a1,80(a1)
d000a178:       |         6621                  lui     a2,0x8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000a17a:       |         8df1                  and     a1,a1,a2
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:643
  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS_REG_OFFSET);
  if (bitfield_bit32_read(reg,
d000a17c:       |     /-- c589                  beqz    a1,d000a186 <spi_device_cmd_get+0x30>
d000a17e:       |     |   c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a182:       |     |   4dec                  lw      a1,92(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:645
                          SPI_DEVICE_UPLOAD_STATUS_ADDRFIFO_NOTEMPTY_BIT)) {
    cmd->address =
d000a184:       |     |   c14c                  sw      a1,4(a0)
d000a186:       |     \-> c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a18a:       |         49ec                  lw      a1,84(a1)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000a18c:       |         1ff5f593              andi    a1,a1,511
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:650
        abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_ADDRFIFO_REG_OFFSET);
  }

  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS2_REG_OFFSET);
  cmd->payload_byte_count =
d000a190:       |         c50c                  sw      a1,8(a0)
d000a192:       |         10000613              li      a2,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:653
      bitfield_field32_read(reg, SPI_DEVICE_UPLOAD_STATUS2_PAYLOAD_DEPTH_FIELD);
  // `payload_byte_count` can be at most `kSpiDevicePayloadAreaNumBytes`.
  HARDENED_CHECK_LE(cmd->payload_byte_count, kSpiDevicePayloadAreaNumBytes);
d000a196:       |     /-- 00b67663              bgeu    a2,a1,d000a1a2 <spi_device_cmd_get+0x4c>
d000a19a:       |     |   0000                  unimp
d000a19c:       |     |   0000                  unimp
d000a19e:       |     |   0000                  unimp
d000a1a0:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  uint32_t src =
      kBase + SPI_DEVICE_BUFFER_REG_OFFSET + kSpiDevicePayloadAreaOffset;
  char *dest = (char *)&cmd->payload;
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a1a2:       |     \-> 4510                  lw      a2,8(a0)
d000a1a4:       |         73900813              li      a6,1849
d000a1a8:       |  /----- c61d                  beqz    a2,d000a1d6 <spi_device_cmd_get+0x80>
d000a1aa:       |  |      4601                  li      a2,0
d000a1ac:       |  |      00c50693              addi    a3,a0,12
d000a1b0:       |  |      c0052737              lui     a4,0xc0052
d000a1b4:       |  |      d0070713              addi    a4,a4,-768 # c0051d00 <_stack_end+0xe0031d00>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:658
    write_32(abs_mmio_read32(src + i), dest + i);
d000a1b8:       |  |  /-> 00e607b3              add     a5,a2,a4
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a1bc:       |  |  |   439c                  lw      a5,0(a5)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
 */
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a1be:       |  |  |   00c685b3              add     a1,a3,a2
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000a1c2:       |  |  |   c19c                  sw      a5,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a1c4:       |  |  |   450c                  lw      a1,8(a0)
d000a1c6:       |  |  |   0611                  addi    a2,a2,4
d000a1c8:       |  |  \-- feb668e3              bltu    a2,a1,d000a1b8 <spi_device_cmd_get+0x62>
d000a1cc:       |  +----- a029                  j       d000a1d6 <spi_device_cmd_get+0x80>
d000a1ce:       \--|----> 01535537              lui     a0,0x1535
d000a1d2:          |      00d50813              addi    a6,a0,13 # 153500d <_rom_ext_virtual_size+0x14b500d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:662
  }

  return kErrorOk;
}
d000a1d6:          \----> 8542                  mv      a0,a6
d000a1d8:                 8082                  ret

d000a1da <spi_device_flash_status_clear>:
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:664

void spi_device_flash_status_clear(void) {
d000a1da:       c0050537                lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a1de:       02052e23                sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:666
  abs_mmio_write32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET, 0);
}
d000a1e2:       8082                    ret

d000a1e4 <spi_device_flash_status_get>:
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:668

uint32_t spi_device_flash_status_get(void) {
d000a1e4:       c0050537                lui     a0,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a1e8:       5d48                    lw      a0,60(a0)
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:669
  return abs_mmio_read32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET);
d000a1ea:       8082                    ret

d000a1ec <uart_set_cfg>:
uart_set_cfg():
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:25
 *              There is a prescaler in place that already divides the SoC
 *              clock by 16.  Since this is a counter, a value of 1 means that
 *              the SoC clock divided by 16*2 = 32 is used. A value of 31 would mean
 *              that we use the SoC clock divided by 16*32 = 512.
 */
void uart_set_cfg(int parity, uint16_t clk_counter) {
d000a1ec:       40000537                lui     a0,0x40000
d000a1f0:       08300613                li      a2,131
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:27
  unsigned int i;
  *(volatile unsigned int*)(UART_REG_LCR) = 0x83; //sets 8N1 and set DLAB to 1
d000a1f4:       c550                    sw      a2,12(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:28
  *(volatile unsigned int*)(UART_REG_DLM) = (clk_counter >> 8) & 0xFF;
d000a1f6:       0085d613                srli    a2,a1,0x8
d000a1fa:       c150                    sw      a2,4(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:29
  *(volatile unsigned int*)(UART_REG_DLL) =  clk_counter       & 0xFF;
d000a1fc:       0ff5f593                andi    a1,a1,255
d000a200:       c10c                    sw      a1,0(a0)
d000a202:       0a700593                li      a1,167
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:30
  *(volatile unsigned int*)(UART_REG_FCR) = 0xA7; //enables 16byte FIFO and clear FIFOs
d000a206:       c50c                    sw      a1,8(a0)
d000a208:       458d                    li      a1,3
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:31
  *(volatile unsigned int*)(UART_REG_LCR) = 0x03; //sets 8N1 and set DLAB to 0
d000a20a:       c54c                    sw      a1,12(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:33

  *(volatile unsigned int*)(UART_REG_IER) = ((*(volatile unsigned int*)(UART_REG_IER)) & 0xF0) | 0x02; // set IER (interrupt enable register) on UART
d000a20c:       414c                    lw      a1,4(a0)
d000a20e:       0f05f593                andi    a1,a1,240
d000a212:       0025e593                ori     a1,a1,2
d000a216:       c14c                    sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:34
}
d000a218:       8082                    ret

d000a21a <uart_sendchar>:
uart_sendchar():
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:60
  while((*((volatile int*)UART_REG_LSR) & 0x1) != 0x1);

  return *(volatile int*)UART_REG_RBR;
}

void uart_sendchar(const char c) {
d000a21a:           400005b7            lui     a1,0x40000
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:62
  // wait until there is space in the fifo
  while( (*(volatile unsigned int*)(UART_REG_LSR) & 0x20) == 0);
d000a21e:       /-> 49d0                        lw      a2,20(a1)
d000a220:       |   02067613            andi    a2,a2,32
d000a224:       \-- de6d                        beqz    a2,d000a21e <uart_sendchar+0x4>
d000a226:           400005b7            lui     a1,0x40000
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:65

  // load FIFO
  *(volatile unsigned int*)(UART_REG_THR) = c;
d000a22a:           c188                        sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:66
}
d000a22c:           8082                        ret

d000a22e <printf>:
printf():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:236

  return pc;
}

int printf(const char *format, ...)
{
d000a22e:                                      711d                     addi    sp,sp,-96
d000a230:                                      de06                     sw      ra,60(sp)
d000a232:                                      dc22                     sw      s0,56(sp)
d000a234:                                      da26                     sw      s1,52(sp)
d000a236:                                      d84a                     sw      s2,48(sp)
d000a238:                                      d64e                     sw      s3,44(sp)
d000a23a:                                      d452                     sw      s4,40(sp)
d000a23c:                                      d256                     sw      s5,36(sp)
d000a23e:                                      d05a                     sw      s6,32(sp)
d000a240:                                      ce5e                     sw      s7,28(sp)
d000a242:                                      cc62                     sw      s8,24(sp)
d000a244:                                      ca66                     sw      s9,20(sp)
d000a246:                                      c86a                     sw      s10,16(sp)
d000a248:                                      c66e                     sw      s11,12(sp)
d000a24a:                                      84aa                     mv      s1,a0
d000a24c:                                      4a01                     li      s4,0
d000a24e:                                      cec6                     sw      a7,92(sp)
d000a250:                                      ccc2                     sw      a6,88(sp)
d000a252:                                      cabe                     sw      a5,84(sp)
d000a254:                                      c8ba                     sw      a4,80(sp)
d000a256:                                      c6b6                     sw      a3,76(sp)
d000a258:                                      c4b2                     sw      a2,72(sp)
d000a25a:                                      c2ae                     sw      a1,68(sp)
d000a25c:                                      04410c93                 addi    s9,sp,68
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:240
  int pc;
  va_list va;

  va_start(va, format);
d000a260:                                      c266                     sw      s9,4(sp)
d000a262:                                      02500913                 li      s2,37
d000a266:                                      02d00993                 li      s3,45
d000a26a:                                      03000b13                 li      s6,48
d000a26e:                                      4aa5                     li      s5,9
d000a270:                                      4429                     li      s0,10
d000a272:                                      07200b93                 li      s7,114
d000a276:                                      05800c13                 li      s8,88
d000a27a:                                      07800d93                 li      s11,120
d000a27e:                                      07500d13                 li      s10,117
qprint():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:173
  for (; *format != 0; ++format)
d000a282:       /----------------------------> 0004c503                 lbu     a0,0(s1)
d000a286:       |                          /-- 01250463                 beq     a0,s2,d000a28e <printf+0x60>
d000a28a:       |                 /--------|-- ed19                     bnez    a0,d000a2a8 <printf+0x7a>
d000a28c:       |  /--------------|--------|-- a211                     j       d000a390 <printf+0x162>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:179
      if (*format == '\0') break;
d000a28e:       |  |              |        \-> 0014c603                 lbu     a2,1(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:177
      ++format;
d000a292:       |  |              |            00148593                 addi    a1,s1,1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:179
      if (*format == '\0') break;
d000a296:       |  |              |        /-- 01260863                 beq     a2,s2,d000a2a6 <printf+0x78>
d000a29a:       |  |              |  /-----|-- 01360a63                 beq     a2,s3,d000a2ae <printf+0x80>
d000a29e:       |  +--------------|--|-----|-- 0e060963                 beqz    a2,d000a390 <printf+0x162>
d000a2a2:       |  |              |  |     |   4601                     li      a2,0
d000a2a4:       |  |              |  |  /--|-- a801                     j       d000a2b4 <printf+0x86>
d000a2a6:       |  |              |  |  |  \-> 84ae                     mv      s1,a1
putchar():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:64
  uart_sendchar(s);
d000a2a8:       |  |              \--|--|----> 3f8d                     jal     d000a21a <uart_sendchar>
qprint():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:227
      ++pc;
d000a2aa:       |  |                 |  |      0a05                     addi    s4,s4,1
d000a2ac:       |  |  /--------------|--|----- a0c5                     j       d000a38c <printf+0x15e>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:183
        ++format;
d000a2ae:       |  |  |              \--|----> 00248593                 addi    a1,s1,2
d000a2b2:       |  |  |                 |      4605                     li      a2,1
d000a2b4:       |  |  |                 \----> 00266693                 ori     a3,a2,2
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:186
      while (*format == '0')
d000a2b8:       |  |  |                        fff58493                 addi    s1,a1,-1
d000a2bc:       |  |  |                    /-> 0014c503                 lbu     a0,1(s1)
d000a2c0:       |  |  |                    |   8732                     mv      a4,a2
d000a2c2:       |  |  |                    |   0485                     addi    s1,s1,1
d000a2c4:       |  |  |                    |   8636                     mv      a2,a3
d000a2c6:       |  |  |                    \-- ff650be3                 beq     a0,s6,d000a2bc <printf+0x8e>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:191
      for ( ; *format >= '0' && *format <= '9'; ++format) {
d000a2ca:       |  |  |                        fd050593                 addi    a1,a0,-48
d000a2ce:       |  |  |                        4681                     li      a3,0
d000a2d0:       |  |  |                        0ff5f593                 andi    a1,a1,255
d000a2d4:       |  |  |                 /----- 02bae563                 bltu    s5,a1,d000a2fe <printf+0xd0>
d000a2d8:       |  |  |                 |      85a6                     mv      a1,s1
d000a2da:       |  |  |                 |  /-> 0ff57613                 andi    a2,a0,255
d000a2de:       |  |  |                 |  |   0015c503                 lbu     a0,1(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:192
        width *= 10;
d000a2e2:       |  |  |                 |  |   028686b3                 mul     a3,a3,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:193
        width += *format - '0';
d000a2e6:       |  |  |                 |  |   9636                     add     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:191
      for ( ; *format >= '0' && *format <= '9'; ++format) {
d000a2e8:       |  |  |                 |  |   00158493                 addi    s1,a1,1
d000a2ec:       |  |  |                 |  |   fd050593                 addi    a1,a0,-48
d000a2f0:       |  |  |                 |  |   0ff5f793                 andi    a5,a1,255
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:193
        width += *format - '0';
d000a2f4:       |  |  |                 |  |   fd060693                 addi    a3,a2,-48
d000a2f8:       |  |  |                 |  |   85a6                     mv      a1,s1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:191
      for ( ; *format >= '0' && *format <= '9'; ++format) {
d000a2fa:       |  |  |                 |  \-- fe87e0e3                 bltu    a5,s0,d000a2da <printf+0xac>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:195
      if( *format == 's' ) {
d000a2fe:       |  |  |                 \--/-X 02abc463                 blt     s7,a0,d000a326 <printf+0xf8>
d000a302:       |  |  |                 /--|-- 05850363                 beq     a0,s8,d000a348 <printf+0x11a>
d000a306:       |  |  |                 |  |   06300593                 li      a1,99
d000a30a:       |  |  |        /--------|--|-- 04b50663                 beq     a0,a1,d000a356 <printf+0x128>
d000a30e:       |  |  |        |        |  |   06400593                 li      a1,100
d000a312:       |  |  +--------|--------|--|-- 06b51d63                 bne     a0,a1,d000a38c <printf+0x15e>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:201
        pc += qprinti (out, va_arg(va, int), 10, 1, width, pad, 'a');
d000a316:       |  |  |        |        |  |   000ca503                 lw      a0,0(s9)
d000a31a:       |  |  |        |        |  |   0c91                     addi    s9,s9,4
d000a31c:       |  |  |        |        |  |   45a9                     li      a1,10
d000a31e:       |  |  |        |        |  |   4605                     li      a2,1
d000a320:       |  |  |        |        |  |   06100793                 li      a5,97
d000a324:       |  |  |  /-----|--------|--|-- a095                     j       d000a388 <printf+0x15a>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:195
      if( *format == 's' ) {
d000a326:       |  |  |  |     |  /-----|--\-X 05b50563                 beq     a0,s11,d000a370 <printf+0x142>
d000a32a:       |  |  |  |  /--|--|-----|----- 05a50863                 beq     a0,s10,d000a37a <printf+0x14c>
d000a32e:       |  |  |  |  |  |  |     |      07300593                 li      a1,115
d000a332:       |  |  +--|--|--|--|-----|----- 04b51d63                 bne     a0,a1,d000a38c <printf+0x15e>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:196
        register char *s = va_arg(va, char*);
d000a336:       |  |  |  |  |  |  |     |      000ca503                 lw      a0,0(s9)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:197
        pc += qprints (out, s?s:"(null)", width, pad);
d000a33a:       |  |  |  |  |  |  |     |  /-- e509                     bnez    a0,d000a344 <printf+0x116>
d000a33c:       |  |  |  |  |  |  |     |  |   00005517                 auipc   a0,0x5
d000a340:       |  |  |  |  |  |  |     |  |   a0050513                 addi    a0,a0,-1536 # d000ed3c <kSpiDeviceSfdpTable+0x6c>
d000a344:       |  |  |  |  |  |  |     |  \-> 0c91                     addi    s9,s9,4
d000a346:       |  |  |  |  |  |  |     |  /-- a00d                     j       d000a368 <printf+0x13a>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:213
        pc += qprinti (out, va_arg(va, uint32_t), 16, 0, width, pad, 'A');
d000a348:       |  |  |  |  |  |  |     \--|-> 000ca503                 lw      a0,0(s9)
d000a34c:       |  |  |  |  |  |  |        |   0c91                     addi    s9,s9,4
d000a34e:       |  |  |  |  |  |  |        |   45c1                     li      a1,16
d000a350:       |  |  |  |  |  |  |        |   04100793                 li      a5,65
d000a354:       |  |  |  |  |  |  |  /-----|-- a80d                     j       d000a386 <printf+0x158>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:217
        scr[0] = va_arg(va, int);
d000a356:       |  |  |  |  |  \--|--|-----|-> 000ca503                 lw      a0,0(s9)
d000a35a:       |  |  |  |  |     |  |     |   0c91                     addi    s9,s9,4
d000a35c:       |  |  |  |  |     |  |     |   00a10523                 sb      a0,10(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:218
        scr[1] = '\0';
d000a360:       |  |  |  |  |     |  |     |   000105a3                 sb      zero,11(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:219
        pc += qprints (out, scr, width, pad);
d000a364:       |  |  |  |  |     |  |     |   00a10513                 addi    a0,sp,10
d000a368:       |  |  |  |  |     |  |     \-> 85b6                     mv      a1,a3
d000a36a:       |  |  |  |  |     |  |         863a                     mv      a2,a4
d000a36c:       |  |  |  |  |     |  |         2091                     jal     d000a3b0 <qprints>
d000a36e:       |  |  |  |  |     |  |  /----- a831                     j       d000a38a <printf+0x15c>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:209
        pc += qprinti (out, va_arg(va, uint32_t), 16, 0, width, pad, 'a');
d000a370:       |  |  |  |  |     \--|--|----> 000ca503                 lw      a0,0(s9)
d000a374:       |  |  |  |  |        |  |      0c91                     addi    s9,s9,4
d000a376:       |  |  |  |  |        |  |      45c1                     li      a1,16
d000a378:       |  |  |  |  |        |  |  /-- a029                     j       d000a382 <printf+0x154>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:205
        pc += qprinti (out, va_arg(va, unsigned int), 10, 0, width, pad, 'a');
d000a37a:       |  |  |  |  \--------|--|--|-> 000ca503                 lw      a0,0(s9)
d000a37e:       |  |  |  |           |  |  |   0c91                     addi    s9,s9,4
d000a380:       |  |  |  |           |  |  |   45a9                     li      a1,10
d000a382:       |  |  |  |           |  |  \-> 06100793                 li      a5,97
d000a386:       |  |  |  |           \--|----> 4601                     li      a2,0
d000a388:       |  |  |  \--------------|----> 28d5                     jal     d000a47c <qprinti>
d000a38a:       |  |  |                 \----> 9a2a                     add     s4,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:173
  for (; *format != 0; ++format)
d000a38c:       |  |  \----------------------> 0485                     addi    s1,s1,1
d000a38e:       \--|-------------------------- bdd5                     j       d000a282 <printf+0x54>
printf():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:246

  pc = qprint(0, format, va);

  va_end(va);

  return pc;
d000a390:          \-------------------------> 8552                     mv      a0,s4
d000a392:                                      4db2                     lw      s11,12(sp)
d000a394:                                      4d42                     lw      s10,16(sp)
d000a396:                                      4cd2                     lw      s9,20(sp)
d000a398:                                      4c62                     lw      s8,24(sp)
d000a39a:                                      4bf2                     lw      s7,28(sp)
d000a39c:                                      5b02                     lw      s6,32(sp)
d000a39e:                                      5a92                     lw      s5,36(sp)
d000a3a0:                                      5a22                     lw      s4,40(sp)
d000a3a2:                                      59b2                     lw      s3,44(sp)
d000a3a4:                                      5942                     lw      s2,48(sp)
d000a3a6:                                      54d2                     lw      s1,52(sp)
d000a3a8:                                      5462                     lw      s0,56(sp)
d000a3aa:                                      50f2                     lw      ra,60(sp)
d000a3ac:                                      6125                     addi    sp,sp,96
d000a3ae:                                      8082                     ret

d000a3b0 <qprints>:
qprints():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:80
{
d000a3b0:                       1101                    addi    sp,sp,-32
d000a3b2:                       ce06                    sw      ra,28(sp)
d000a3b4:                       cc22                    sw      s0,24(sp)
d000a3b6:                       ca26                    sw      s1,20(sp)
d000a3b8:                       c84a                    sw      s2,16(sp)
d000a3ba:                       c64e                    sw      s3,12(sp)
d000a3bc:                       c452                    sw      s4,8(sp)
d000a3be:                       c256                    sw      s5,4(sp)
d000a3c0:                       8a2e                    mv      s4,a1
d000a3c2:                       892a                    mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:83
  if (width > 0) {
d000a3c4:          /----------- 02b05463                blez    a1,d000a3ec <qprints+0x3c>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:86
    for (ptr = string; *ptr; ++ptr) ++len;
d000a3c8:          |            00094503                lbu     a0,0(s2)
d000a3cc:       /--|----------- c505                    beqz    a0,d000a3f4 <qprints+0x44>
d000a3ce:       |  |            4681                    li      a3,0
d000a3d0:       |  |            00190593                addi    a1,s2,1
d000a3d4:       |  |        /-> 00d58533                add     a0,a1,a3
d000a3d8:       |  |        |   00054703                lbu     a4,0(a0)
d000a3dc:       |  |        |   00168513                addi    a0,a3,1
d000a3e0:       |  |        |   86aa                    mv      a3,a0
d000a3e2:       |  |        \-- fb6d                    bnez    a4,d000a3d4 <qprints+0x24>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:87
    if (len >= width) width = 0;
d000a3e4:       |  |  /-------- 01454b63                blt     a0,s4,d000a3fa <qprints+0x4a>
d000a3e8:       |  |  |     /-> 4581                    li      a1,0
d000a3ea:       |  |  |  /--|-- a811                    j       d000a3fe <qprints+0x4e>
d000a3ec:       |  \--|--|--|-> 4481                    li      s1,0
d000a3ee:       |     |  |  |   02000993                li      s3,32
d000a3f2:       |  /--|--|--|-- a0b1                    j       d000a43e <qprints+0x8e>
d000a3f4:       \--|--|--|--|-> 4501                    li      a0,0
d000a3f6:          |  |  |  \-- ff4559e3                bge     a0,s4,d000a3e8 <qprints+0x38>
d000a3fa:          |  \--|----> 40aa05b3                sub     a1,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:89
    if (pad & PAD_ZERO) padchar = '0';
d000a3fe:          |     \----> 00267693                andi    a3,a2,2
d000a402:          |            02000993                li      s3,32
d000a406:          |        /-- c299                    beqz    a3,d000a40c <qprints+0x5c>
d000a408:          |        |   03000993                li      s3,48
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:91
  if (!(pad & PAD_RIGHT)) {
d000a40c:          |        \-> 8a05                    andi    a2,a2,1
d000a40e:          |            00163613                seqz    a2,a2
d000a412:          |            00b026b3                sgtz    a3,a1
d000a416:          |            8e75                    and     a2,a2,a3
d000a418:          |     /----- c20d                    beqz    a2,d000a43a <qprints+0x8a>
d000a41a:          |     |      4401                    li      s0,0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:92
    for ( ; width > 0; --width) {
d000a41c:          |     |      40aa04b3                sub     s1,s4,a0
d000a420:          |     |      4a85                    li      s5,1
putchar():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:64
  uart_sendchar(s);
d000a422:          |     |  /-> 854e                    mv      a0,s3
d000a424:          |     |  |   3bdd                    jal     d000a21a <uart_sendchar>
qprints():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:92
    for ( ; width > 0; --width) {
d000a426:          |     |  |   147d                    addi    s0,s0,-1
d000a428:          |     |  |   00848a33                add     s4,s1,s0
d000a42c:          |     |  |   001a0513                addi    a0,s4,1
d000a430:          |     |  \-- feaac9e3                blt     s5,a0,d000a422 <qprints+0x72>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:97
  for ( ; *string ; ++string) {
d000a434:          |     |      408004b3                neg     s1,s0
d000a438:          +-----|----- a019                    j       d000a43e <qprints+0x8e>
d000a43a:          |     \----> 4481                    li      s1,0
d000a43c:          |            8a2e                    mv      s4,a1
d000a43e:          \----------> 00094503                lbu     a0,0(s2)
d000a442:             /-------- c919                    beqz    a0,d000a458 <qprints+0xa8>
d000a444:             |         00190413                addi    s0,s2,1
putchar():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:64
  uart_sendchar(s);
d000a448:             |     /-> 0ff57513                andi    a0,a0,255
d000a44c:             |     |   33f9                    jal     d000a21a <uart_sendchar>
qprints():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:97
  for ( ; *string ; ++string) {
d000a44e:             |     |   00044503                lbu     a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:99
    ++pc;
d000a452:             |     |   0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:97
  for ( ; *string ; ++string) {
d000a454:             |     |   0405                    addi    s0,s0,1
d000a456:             |     \-- f96d                    bnez    a0,d000a448 <qprints+0x98>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:101
  for ( ; width > 0; --width) {
d000a458:             \--/----X 01405863                blez    s4,d000a468 <qprints+0xb8>
d000a45c:                |      94d2                    add     s1,s1,s4
putchar():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:64
  uart_sendchar(s);
d000a45e:                |  /-> 854e                    mv      a0,s3
d000a460:                |  |   3b6d                    jal     d000a21a <uart_sendchar>
qprints():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:101
  for ( ; width > 0; --width) {
d000a462:                |  |   1a7d                    addi    s4,s4,-1
d000a464:                |  \-- fe0a1de3                bnez    s4,d000a45e <qprints+0xae>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:106
  return pc;
d000a468:                \----> 8526                    mv      a0,s1
d000a46a:                       4a92                    lw      s5,4(sp)
d000a46c:                       4a22                    lw      s4,8(sp)
d000a46e:                       49b2                    lw      s3,12(sp)
d000a470:                       4942                    lw      s2,16(sp)
d000a472:                       44d2                    lw      s1,20(sp)
d000a474:                       4462                    lw      s0,24(sp)
d000a476:                       40f2                    lw      ra,28(sp)
d000a478:                       6105                    addi    sp,sp,32
d000a47a:                       8082                    ret

d000a47c <qprinti>:
qprinti():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:110
{
d000a47c:                          7139                 addi    sp,sp,-64
d000a47e:                          de06                 sw      ra,60(sp)
d000a480:                          dc22                 sw      s0,56(sp)
d000a482:                          da26                 sw      s1,52(sp)
d000a484:                          d84a                 sw      s2,48(sp)
d000a486:                          d64e                 sw      s3,44(sp)
d000a488:                          893a                 mv      s2,a4
d000a48a:                          89b6                 mv      s3,a3
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:116
  if (i == 0)
d000a48c:             /----------- cd39                 beqz    a0,d000a4ea <qprinti+0x6e>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:123
  if (sg && b == 10 && i < 0)
d000a48e:             |            00c03633             snez    a2,a2
d000a492:             |            ff658693             addi    a3,a1,-10
d000a496:             |            0016b693             seqz    a3,a3
d000a49a:             |            8e75                 and     a2,a2,a3
d000a49c:             |            00052693             slti    a3,a0,0
d000a4a0:             |            00d67833             and     a6,a2,a3
d000a4a4:             |        /-- 00080463             beqz    a6,d000a4ac <qprinti+0x30>
d000a4a8:             |        |   40a00533             neg     a0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:129
  s = print_buf + PRINT_BUF_LEN-1;
d000a4ac:             |        \-> 02b10693             addi    a3,sp,43
d000a4b0:             |            4641                 li      a2,16
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:130
  *s = '\0';
d000a4b2:             |            020105a3             sb      zero,43(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:133
  if(b == 16) {
d000a4b6:             |  /-------- 04c59563             bne     a1,a2,d000a500 <qprinti+0x84>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:135
    while (u) {
d000a4ba:       /-----|--|-------- c579                 beqz    a0,d000a588 <qprinti+0x10c>
d000a4bc:       |     |  |         0c678613             addi    a2,a5,198
d000a4c0:       |     |  |         4725                 li      a4,9
d000a4c2:       |     |  |         47c1                 li      a5,16
d000a4c4:       |     |  |  /----> 84aa                 mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:136
      int t = u & 0xF;
d000a4c6:       |     |  |  |      893d                 andi    a0,a0,15
d000a4c8:       |     |  |  |      85b2                 mv      a1,a2
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:138
      if (t >= 10)
d000a4ca:       |     |  |  |  /-- 00a76363             bltu    a4,a0,d000a4d0 <qprinti+0x54>
d000a4ce:       |     |  |  |  |   4581                 li      a1,0
d000a4d0:       |     |  |  |  \-> 952e                 add     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:141
      *--s = t + '0';
d000a4d2:       |     |  |  |      03050513             addi    a0,a0,48
d000a4d6:       |     |  |  |      fff68413             addi    s0,a3,-1
d000a4da:       |     |  |  |      fea68fa3             sb      a0,-1(a3)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:142
      u >>= 4;
d000a4de:       |     |  |  |      0044d513             srli    a0,s1,0x4
d000a4e2:       |     |  |  |      86a2                 mv      a3,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:135
    while (u) {
d000a4e4:       |     |  |  \----- fef4f0e3             bgeu    s1,a5,d000a4c4 <qprinti+0x48>
d000a4e8:       |     |  |  /----- a8ad                 j       d000a562 <qprinti+0xe6>
d000a4ea:       |     \--|--|----> 03000513             li      a0,48
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:118
    print_buf[0] = '0';
d000a4ee:       |        |  |      00a10623             sb      a0,12(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:119
    print_buf[1] = '\0';
d000a4f2:       |        |  |      000106a3             sb      zero,13(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:120
    return qprints (out, print_buf, width, pad);
d000a4f6:       |        |  |      0068                 addi    a0,sp,12
d000a4f8:       |        |  |      85ce                 mv      a1,s3
d000a4fa:       |        |  |      864a                 mv      a2,s2
d000a4fc:       |        |  |      3d55                 jal     d000a3b0 <qprints>
d000a4fe:       |  /-----|--|----- a065                 j       d000a5a6 <qprinti+0x12a>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:146
    while (u) {
d000a500:       +--|-----\--|----X c541                 beqz    a0,d000a588 <qprinti+0x10c>
d000a502:       |  |        |      1999a5b7             lui     a1,0x1999a
d000a506:       |  |        |      99958593             addi    a1,a1,-1639 # 19999999 <_rom_ext_virtual_size+0x19919999>
d000a50a:       |  |        |      0fff8717             auipc   a4,0xfff8
d000a50e:       |  |        |      aba70713             addi    a4,a4,-1350 # e0001fc4 <remu10_table>
d000a512:       |  |        |      57d9                 li      a5,-10
remu10():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:58
  n = (0x19999999 * n + (n >> 1) + (n >> 3)) >> 28;
d000a514:       |  |        |  /-> 02b50633             mul     a2,a0,a1
d000a518:       |  |        |  |   00155493             srli    s1,a0,0x1
d000a51c:       |  |        |  |   9626                 add     a2,a2,s1
d000a51e:       |  |        |  |   00355413             srli    s0,a0,0x3
d000a522:       |  |        |  |   9622                 add     a2,a2,s0
d000a524:       |  |        |  |   8271                 srli    a2,a2,0x1c
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:59
  return remu10_table[n];
d000a526:       |  |        |  |   963a                 add     a2,a2,a4
d000a528:       |  |        |  |   00060603             lb      a2,0(a2)
qprinti():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:147
      *--s = remu10(u) + '0';
d000a52c:       |  |        |  |   03060613             addi    a2,a2,48
divu10():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:42
  q = (n >> 1) + (n >> 2);
d000a530:       |  |        |  |   00255413             srli    s0,a0,0x2
d000a534:       |  |        |  |   94a2                 add     s1,s1,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:43
  q = q + (q >> 4);
d000a536:       |  |        |  |   0044d413             srli    s0,s1,0x4
d000a53a:       |  |        |  |   94a2                 add     s1,s1,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:44
  q = q + (q >> 8);
d000a53c:       |  |        |  |   0084d413             srli    s0,s1,0x8
d000a540:       |  |        |  |   94a2                 add     s1,s1,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:45
  q = q + (q >> 16);
d000a542:       |  |        |  |   0104d413             srli    s0,s1,0x10
d000a546:       |  |        |  |   94a2                 add     s1,s1,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:46
  q = q >> 3;
d000a548:       |  |        |  |   808d                 srli    s1,s1,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:47
  r = n - q * 10;
d000a54a:       |  |        |  |   02f48433             mul     s0,s1,a5
d000a54e:       |  |        |  |   9522                 add     a0,a0,s0
qprinti():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:147
      *--s = remu10(u) + '0';
d000a550:       |  |        |  |   fff68413             addi    s0,a3,-1
divu10():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:49
  return q + ((r + 6) >> 4);
d000a554:       |  |        |  |   0519                 addi    a0,a0,6
d000a556:       |  |        |  |   8111                 srli    a0,a0,0x4
d000a558:       |  |        |  |   9526                 add     a0,a0,s1
qprinti():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:147
      *--s = remu10(u) + '0';
d000a55a:       |  |        |  |   fec68fa3             sb      a2,-1(a3)
d000a55e:       |  |        |  |   86a2                 mv      a3,s0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:146
    while (u) {
d000a560:       |  |        |  \-- f955                 bnez    a0,d000a514 <qprinti+0x98>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:152
  if (neg) {
d000a562:       |  |  /-----\----X 02080663             beqz    a6,d000a58e <qprinti+0x112>
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:153
    if( width && (pad & PAD_ZERO) )
d000a566:       |  |  |  /-------> 0019b513             seqz    a0,s3
d000a56a:       |  |  |  |         00297593             andi    a1,s2,2
d000a56e:       |  |  |  |         0015b593             seqz    a1,a1
d000a572:       |  |  |  |         8d4d                 or      a0,a0,a1
d000a574:       |  |  |  |  /----- cd19                 beqz    a0,d000a592 <qprinti+0x116>
d000a576:       |  |  |  |  |      4481                 li      s1,0
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:161
      *--s = '-';
d000a578:       |  |  |  |  |      fff40513             addi    a0,s0,-1
d000a57c:       |  |  |  |  |      02d00593             li      a1,45
d000a580:       |  |  |  |  |      feb40fa3             sb      a1,-1(s0)
d000a584:       |  |  |  |  |      842a                 mv      s0,a0
d000a586:       |  |  |  |  |  /-- a819                 j       d000a59c <qprinti+0x120>
d000a588:       \--|--|--|--|--|-> 8436                 mv      s0,a3
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:152
  if (neg) {
d000a58a:          |  |  \--|--|-- fc081ee3             bnez    a6,d000a566 <qprinti+0xea>
d000a58e:          |  \-----|--|-> 4481                 li      s1,0
d000a590:          |        |  +-- a031                 j       d000a59c <qprinti+0x120>
putchar():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:64
  uart_sendchar(s);
d000a592:          |        \--|-> 02d00513             li      a0,45
d000a596:          |           |   3151                 jal     d000a21a <uart_sendchar>
qprinti():
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:157
      --width;
d000a598:          |           |   19fd                 addi    s3,s3,-1
d000a59a:          |           |   4485                 li      s1,1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:164
  return pc + qprints (out, s, width, pad);
d000a59c:          |           \-> 8522                 mv      a0,s0
d000a59e:          |               85ce                 mv      a1,s3
d000a5a0:          |               864a                 mv      a2,s2
d000a5a2:          |               3539                 jal     d000a3b0 <qprints>
d000a5a4:          |               9526                 add     a0,a0,s1
/proc/self/cwd/sw/device/silicon_creator/rom/string_lib.c:165
}
d000a5a6:          \-------------> 59b2                 lw      s3,44(sp)
d000a5a8:                          5942                 lw      s2,48(sp)
d000a5aa:                          54d2                 lw      s1,52(sp)
d000a5ac:                          5462                 lw      s0,56(sp)
d000a5ae:                          50f2                 lw      ra,60(sp)
d000a5b0:                          6121                 addi    sp,sp,64
d000a5b2:                          8082                 ret

d000a5b4 <sigverify_rsa_key_get>:
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:183
      HARDENED_UNREACHABLE();
  }
}

rom_error_t sigverify_rsa_key_get(uint32_t key_id, lifecycle_state_t lc_state,
                                  const sigverify_rsa_key_t **key) {
d000a5b4:                    7179                       addi    sp,sp,-48
d000a5b6:                    d606                       sw      ra,44(sp)
d000a5b8:                    d422                       sw      s0,40(sp)
d000a5ba:                    d226                       sw      s1,36(sp)
d000a5bc:                    d04a                       sw      s2,32(sp)
d000a5be:                    ce4e                       sw      s3,28(sp)
d000a5c0:                    cc52                       sw      s4,24(sp)
d000a5c2:                    ca56                       sw      s5,20(sp)
d000a5c4:                    c85a                       sw      s6,16(sp)
d000a5c6:                    c65e                       sw      s7,12(sp)
d000a5c8:                    c462                       sw      s8,8(sp)
d000a5ca:                    c266                       sw      s9,4(sp)
d000a5cc:                    c06a                       sw      s10,0(sp)
d000a5ce:                    8932                       mv      s2,a2
d000a5d0:                    89ae                       mv      s3,a1
d000a5d2:                    8aaa                       mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t cand_key_index = UINT32_MAX;
  // Random start index that is less than `kSigverifyRsaKeysCnt`.
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a5d4:                    742030ef           jal     ra,d000dd16 <rnd_uint32>
d000a5d8:                    00005597           auipc   a1,0x5
d000a5dc:                    ae858593           addi    a1,a1,-1304 # d000f0c0 <kSigverifyRsaKeysCnt>
d000a5e0:                    0005ab83           lw      s7,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5e4:                    4581                       li      a1,0
d000a5e6:                    00005b17           auipc   s6,0x5
d000a5ea:                    ae2b0b13           addi    s6,s6,-1310 # d000f0c8 <kSigverifyRsaKeys>
d000a5ee:                    4401                       li      s0,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  size_t iter_cnt = 0;
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a5f0:       /----------- 0975f163           bgeu    a1,s7,d000a672 <sigverify_rsa_key_get+0xbe>
d000a5f4:       |            00005597           auipc   a1,0x5
d000a5f8:       |            ad058593           addi    a1,a1,-1328 # d000f0c4 <kSigverifyRsaKeysStep>
d000a5fc:       |            0005ac03           lw      s8,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a600:       |            02abb4b3           mulhu   s1,s7,a0
d000a604:       |            5a7d                       li      s4,-1
d000a606:       |            1a400c93           li      s9,420
d000a60a:       |            73900d13           li      s10,1849
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
d000a60e:       |  /-------> 03948533           mul     a0,s1,s9
d000a612:       |  |         016505b3           add     a1,a0,s6
d000a616:       |  |         418c                       lw      a1,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a618:       |  |         862e                       mv      a2,a1
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:191
    const sigverify_rom_key_t *k = &kSigverifyRsaKeys[i];
    size_t k_id = sigverify_rsa_key_id_get(&k->key.n);
    if (launder32(k_id) == key_id) {
d000a61a:       |  |  /----- 03561863           bne     a2,s5,d000a64a <sigverify_rsa_key_get+0x96>
d000a61e:       |  |  |      955a                       add     a0,a0,s6
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      HARDENED_CHECK_EQ(k_id, key_id);
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a620:       |  |  |      1a052503           lw      a0,416(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:192
      HARDENED_CHECK_EQ(k_id, key_id);
d000a624:       |  |  |  /-- 01558663           beq     a1,s5,d000a630 <sigverify_rsa_key_get+0x7c>
d000a628:       |  |  |  |   0000                       unimp
d000a62a:       |  |  |  |   0000                       unimp
d000a62c:       |  |  |  |   0000                       unimp
d000a62e:       |  |  |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a630:       |  |  |  \-> 85ce                       mv      a1,s3
d000a632:       |  |  |      8626                       mv      a2,s1
d000a634:       |  |  |      207d                       jal     d000a6e2 <key_is_valid>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a636:       |  |  |      85aa                       mv      a1,a0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:194
      if (launder32(error) == kErrorOk) {
d000a638:       |  |  +----- 01a59963           bne     a1,s10,d000a64a <sigverify_rsa_key_get+0x96>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:195
        HARDENED_CHECK_EQ(error, kErrorOk);
d000a63c:       |  |  |  /-- 01a50663           beq     a0,s10,d000a648 <sigverify_rsa_key_get+0x94>
d000a640:       |  |  |  |   0000                       unimp
d000a642:       |  |  |  |   0000                       unimp
d000a644:       |  |  |  |   0000                       unimp
d000a646:       |  |  |  |   0000                       unimp
d000a648:       |  |  |  \-> 8a26                       mv      s4,s1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:199
        cand_key_index = i;
      }
    }
    i += kSigverifyRsaKeysStep;
d000a64a:       |  |  \----> 009c0533           add     a0,s8,s1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a64e:       |  |         862a                       mv      a2,a0
d000a650:       |  |         4581                       li      a1,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:200
    if (launder32(i) >= kSigverifyRsaKeysCnt) {
d000a652:       |  |     /-- 01766363           bltu    a2,s7,d000a658 <sigverify_rsa_key_get+0xa4>
d000a656:       |  |     |   85de                       mv      a1,s7
d000a658:       |  |     \-> 40b504b3           sub     s1,a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a65c:       |  |         0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:203
      i -= kSigverifyRsaKeysCnt;
    }
    HARDENED_CHECK_LT(i, kSigverifyRsaKeysCnt);
d000a65e:       |  |     /-- 0174e663           bltu    s1,s7,d000a66a <sigverify_rsa_key_get+0xb6>
d000a662:       |  |     |   0000                       unimp
d000a664:       |  |     |   0000                       unimp
d000a666:       |  |     |   0000                       unimp
d000a668:       |  |     |   0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a66a:       |  |     \-> 8522                       mv      a0,s0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a66c:       |  \-------- fb7561e3           bltu    a0,s7,d000a60e <sigverify_rsa_key_get+0x5a>
d000a670:       |        /-- a011                       j       d000a674 <sigverify_rsa_key_get+0xc0>
d000a672:       \--------|-> 5a7d                       li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:205
  }
  HARDENED_CHECK_EQ(iter_cnt, kSigverifyRsaKeysCnt);
d000a674:             /--\-X 01740663           beq     s0,s7,d000a680 <sigverify_rsa_key_get+0xcc>
d000a678:             |      0000                       unimp
d000a67a:             |      0000                       unimp
d000a67c:             |      0000                       unimp
d000a67e:             |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a680:             \----> 8552                       mv      a0,s4
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:207

  if (launder32(cand_key_index) < kSigverifyRsaKeysCnt) {
d000a682:             /----- 03757e63           bgeu    a0,s7,d000a6be <sigverify_rsa_key_get+0x10a>
d000a686:             |      1a400513           li      a0,420
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a68a:             |      02aa0533           mul     a0,s4,a0
d000a68e:             |      01650433           add     s0,a0,s6
d000a692:             |      1a042503           lw      a0,416(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:208
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
d000a696:             |  /-- 017a6663           bltu    s4,s7,d000a6a2 <sigverify_rsa_key_get+0xee>
d000a69a:             |  |   0000                       unimp
d000a69c:             |  |   0000                       unimp
d000a69e:             |  |   0000                       unimp
d000a6a0:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a6a2:             |  \-> 85ce                       mv      a1,s3
d000a6a4:             |      8652                       mv      a2,s4
d000a6a6:             |      2835                       jal     d000a6e2 <key_is_valid>
d000a6a8:             |      73900593           li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:211
                                     lc_state, cand_key_index);
    HARDENED_CHECK_EQ(error, kErrorOk);
d000a6ac:             |  /-- 00b50663           beq     a0,a1,d000a6b8 <sigverify_rsa_key_get+0x104>
d000a6b0:             |  |   0000                       unimp
d000a6b2:             |  |   0000                       unimp
d000a6b4:             |  |   0000                       unimp
d000a6b6:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:212
    *key = &kSigverifyRsaKeys[cand_key_index].key;
d000a6b8:             |  \-> 00892023           sw      s0,0(s2)
d000a6bc:             |  /-- a029                       j       d000a6c6 <sigverify_rsa_key_get+0x112>
d000a6be:             \--|-> 02535537           lui     a0,0x2535
d000a6c2:                |   60350513           addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:217
    return error;
  }

  return kErrorSigverifyBadKey;
}
d000a6c6:                \-> 4d02                       lw      s10,0(sp)
d000a6c8:                    4c92                       lw      s9,4(sp)
d000a6ca:                    4c22                       lw      s8,8(sp)
d000a6cc:                    4bb2                       lw      s7,12(sp)
d000a6ce:                    4b42                       lw      s6,16(sp)
d000a6d0:                    4ad2                       lw      s5,20(sp)
d000a6d2:                    4a62                       lw      s4,24(sp)
d000a6d4:                    49f2                       lw      s3,28(sp)
d000a6d6:                    5902                       lw      s2,32(sp)
d000a6d8:                    5492                       lw      s1,36(sp)
d000a6da:                    5422                       lw      s0,40(sp)
d000a6dc:                    50b2                       lw      ra,44(sp)
d000a6de:                    6145                       addi    sp,sp,48
d000a6e0:                    8082                       ret

d000a6e2 <key_is_valid>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a6e2:                                         86ae                  mv      a3,a1
d000a6e4:                                         cf8d0737              lui     a4,0xcf8d0
d000a6e8:                                         aaa70793              addi    a5,a4,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a6ec:                                  /----- 04d7d663              bge     a5,a3,d000a738 <key_is_valid+0x56>
d000a6f0:                                  |      aab70713              addi    a4,a4,-1365
d000a6f4:                               /--|----- 04e68f63              beq     a3,a4,d000a752 <key_is_valid+0x70>
d000a6f8:                               |  |      0b5a7737              lui     a4,0xb5a7
d000a6fc:                               |  |      5e070713              addi    a4,a4,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000a700:                         /-----|--|----- 08e69763              bne     a3,a4,d000a78e <key_is_valid+0xac>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a704:                         |     |  |  /-- 00e58663              beq     a1,a4,d000a710 <key_is_valid+0x2e>
d000a708:                         |     |  |  |   0000                  unimp
d000a70a:                         |     |  |  |   0000                  unimp
d000a70c:                         |     |  |  |   0000                  unimp
d000a70e:                         |     |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a710:                         |     |  |  \-> 85aa                  mv      a1,a0
d000a712:                         |     |  |      7a01a6b7              lui     a3,0x7a01a
d000a716:                         |     |  |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a71a:             /-----------|-----|--|----- 0cd58f63              beq     a1,a3,d000a7f8 <key_is_valid+0x116>
d000a71e:             |           |     |  |      43a846b7              lui     a3,0x43a84
d000a722:             |           |     |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a726:       /-----|-----------|-----|--|----- 10d59563              bne     a1,a3,d000a830 <key_is_valid+0x14e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:88
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a72a:       |     |           |     |  |  /-- 00d50663              beq     a0,a3,d000a736 <key_is_valid+0x54>
d000a72e:       |     |           |     |  |  |   0000                  unimp
d000a730:       |     |           |     |  |  |   0000                  unimp
d000a732:       |     |           |     |  |  |   0000                  unimp
d000a734:       |     |           |     |  |  |   0000                  unimp
d000a736:       |  /--|-----------|-----|--|--\-X a8dd                  j       d000a82c <key_is_valid+0x14a>
d000a738:       |  |  |           |     |  \----> 91b9b737              lui     a4,0x91b9b
d000a73c:       |  |  |           |     |         68a70713              addi    a4,a4,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a740:       |  |  |           |  /--|-------- 06e69563              bne     a3,a4,d000a7aa <key_is_valid+0xc8>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:169
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a744:       |  |  |           |  |  |     /-- 00e58663              beq     a1,a4,d000a750 <key_is_valid+0x6e>
d000a748:       |  |  |           |  |  |     |   0000                  unimp
d000a74a:       |  |  |           |  |  |     |   0000                  unimp
d000a74c:       |  |  |           |  |  |     |   0000                  unimp
d000a74e:       |  |  |           |  |  |     |   0000                  unimp
d000a750:       |  |  |           |  |  |  /--\-X a899                  j       d000a7a6 <key_is_valid+0xc4>
d000a752:       |  |  |           |  |  \--|----> cf8d06b7              lui     a3,0xcf8d0
d000a756:       |  |  |           |  |     |      aab68693              addi    a3,a3,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:175
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a75a:       |  |  |           |  |     |  /-- 00d58663              beq     a1,a3,d000a766 <key_is_valid+0x84>
d000a75e:       |  |  |           |  |     |  |   0000                  unimp
d000a760:       |  |  |           |  |     |  |   0000                  unimp
d000a762:       |  |  |           |  |     |  |   0000                  unimp
d000a764:       |  |  |           |  |     |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a766:       |  |  |           |  |     |  \-> 85aa                  mv      a1,a0
d000a768:       |  |  |           |  |     |      7a01a6b7              lui     a3,0x7a01a
d000a76c:       |  |  |           |  |     |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a770:       |  |  |           |  |  /--|----- 06d58d63              beq     a1,a3,d000a7ea <key_is_valid+0x108>
d000a774:       |  |  |           |  |  |  |      43a846b7              lui     a3,0x43a84
d000a778:       |  |  |           |  |  |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a77c:       |  |  |     /-----|--|--|--|----- 08d59c63              bne     a1,a3,d000a814 <key_is_valid+0x132>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:61
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a780:       |  |  |     |     |  |  |  |  /-- 00d50663              beq     a0,a3,d000a78c <key_is_valid+0xaa>
d000a784:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a786:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a788:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a78a:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a78c:       |  +--|-----|-----|--|--|--|--\-X a045                  j       d000a82c <key_is_valid+0x14a>
d000a78e:       |  |  |     |     \--|--|--|----> 65f25737              lui     a4,0x65f25
d000a792:       |  |  |     |        |  |  |      20f70713              addi    a4,a4,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a796:       |  |  |  /--|--------|--|--|----- 0ce69d63              bne     a3,a4,d000a870 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:166
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a79a:       |  |  |  |  |        |  |  +----- 00e58663              beq     a1,a4,d000a7a6 <key_is_valid+0xc4>
d000a79e:       |  |  |  |  |        |  |  |      0000                  unimp
d000a7a0:       |  |  |  |  |        |  |  |      0000                  unimp
d000a7a2:       |  |  |  |  |        |  |  |      0000                  unimp
d000a7a4:       |  |  |  |  |        |  |  |      0000                  unimp
d000a7a6:       |  |  |  |  |        |  |  \----> 85b2                  mv      a1,a2
d000a7a8:       |  |  |  |  |        |  |         a0e5                  j       d000a890 <key_is_valid_in_lc_state_prod>
d000a7aa:       |  |  |  |  |        \--|-------> b2866637              lui     a2,0xb2866
d000a7ae:       |  |  |  |  |           |         fbb60613              addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a7b2:       |  |  |  +--|-----------|-------- 0ac69f63              bne     a3,a2,d000a870 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:163
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a7b6:       |  |  |  |  |           |     /-- 00c58663              beq     a1,a2,d000a7c2 <key_is_valid+0xe0>
d000a7ba:       |  |  |  |  |           |     |   0000                  unimp
d000a7bc:       |  |  |  |  |           |     |   0000                  unimp
d000a7be:       |  |  |  |  |           |     |   0000                  unimp
d000a7c0:       |  |  |  |  |           |     |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a7c2:       |  |  |  |  |           |     \-> 85aa                  mv      a1,a0
d000a7c4:       |  |  |  |  |           |         7a01a637              lui     a2,0x7a01a
d000a7c8:       |  |  |  |  |           |         47160613              addi    a2,a2,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a7cc:       |  |  |  |  |           |  /----- 02c58d63              beq     a1,a2,d000a806 <key_is_valid+0x124>
d000a7d0:       |  |  |  |  |           |  |      43a84637              lui     a2,0x43a84
d000a7d4:       |  |  |  |  |           |  |      9ad60613              addi    a2,a2,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a7d8:       |  |  |  |  |     /-----|--|----- 06c59d63              bne     a1,a2,d000a852 <key_is_valid+0x170>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:141
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a7dc:       |  |  |  |  |     |     |  |  /-- 00c50663              beq     a0,a2,d000a7e8 <key_is_valid+0x106>
d000a7e0:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a7e2:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a7e4:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a7e6:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a7e8:       |  |  |  |  |  /--|-----|--|--\-X a049                  j       d000a86a <key_is_valid+0x188>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:64
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a7ea:       |  |  |  |  |  |  |     \--|--/-X 00d50663              beq     a0,a3,d000a7f6 <key_is_valid+0x114>
d000a7ee:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a7f0:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a7f2:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a7f4:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a7f6:       |  |  |  |  |  |  |     /--|--\-X a889                  j       d000a848 <key_is_valid+0x166>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:91
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a7f8:       |  |  \--|--|--|--|-----|--|--/-X 00d50663              beq     a0,a3,d000a804 <key_is_valid+0x122>
d000a7fc:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a7fe:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a800:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a802:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a804:       |  +-----|--|--|--|-----|--|--\-X a025                  j       d000a82c <key_is_valid+0x14a>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:144
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a806:       |  |     |  |  |  |     |  \--/-X 00c50663              beq     a0,a2,d000a812 <key_is_valid+0x130>
d000a80a:       |  |     |  |  |  |     |     |   0000                  unimp
d000a80c:       |  |     |  |  |  |     |     |   0000                  unimp
d000a80e:       |  |     |  |  |  |     |     |   0000                  unimp
d000a810:       |  |     |  |  |  |     |     |   0000                  unimp
d000a812:       |  |     |  |  |  |     +-----\-X a81d                  j       d000a848 <key_is_valid+0x166>
d000a814:       |  |     |  \--|--|-----|-------> 3ff0d6b7              lui     a3,0x3ff0d
d000a818:       |  |     |     |  |     |         81968693              addi    a3,a3,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a81c:       |  |     |     |  |  /--|-------- 04d59e63              bne     a1,a3,d000a878 <key_is_valid+0x196>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:58
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a820:       |  +-----|-----|--|--|--|-------- 00d50663              beq     a0,a3,d000a82c <key_is_valid+0x14a>
d000a824:       |  |     |     |  |  |  |         0000                  unimp
d000a826:       |  |     |     |  |  |  |         0000                  unimp
d000a828:       |  |     |     |  |  |  |         0000                  unimp
d000a82a:       |  |     |     |  |  |  |         0000                  unimp
d000a82c:       |  \-----|-----|--|--|--|-------> 8532                  mv      a0,a2
d000a82e:       |        |     |  |  |  |         a0d1                  j       d000a8f2 <key_is_valid_in_otp>
d000a830:       \--------|-----|--|--|--|-------> 3ff0d637              lui     a2,0x3ff0d
d000a834:                |     |  |  |  |         81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a838:                |     |  |  |  |  /----- 04c59463              bne     a1,a2,d000a880 <key_is_valid+0x19e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:85
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a83c:                |     |  |  |  +--|----- 00c50663              beq     a0,a2,d000a848 <key_is_valid+0x166>
d000a840:                |     |  |  |  |  |      0000                  unimp
d000a842:                |     |  |  |  |  |      0000                  unimp
d000a844:                |     |  |  |  |  |      0000                  unimp
d000a846:                |     |  |  |  |  |      0000                  unimp
d000a848:                |     |  |  |  \--|----> 02535537              lui     a0,0x2535
d000a84c:                |     |  |  |     |      60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a850:                |     |  |  |     |      8082                  ret
d000a852:                |     |  \--|-----|----> 3ff0d637              lui     a2,0x3ff0d
d000a856:                |     |     |     |      81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a85a:                |     |     |     |  /-- 02c59763              bne     a1,a2,d000a888 <key_is_valid+0x1a6>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:138
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a85e:                |     +-----|-----|--|-- 00c50663              beq     a0,a2,d000a86a <key_is_valid+0x188>
d000a862:                |     |     |     |  |   0000                  unimp
d000a864:                |     |     |     |  |   0000                  unimp
d000a866:                |     |     |     |  |   0000                  unimp
d000a868:                |     |     |     |  |   0000                  unimp
d000a86a:                |     \-----|-----|--|-> 73900513              li      a0,1849
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a86e:                |           |     |  |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:178
      HARDENED_UNREACHABLE();
d000a870:                \-----------|-----|--|-> 0000                  unimp
d000a872:                            |     |  |   0000                  unimp
d000a874:                            |     |  |   0000                  unimp
d000a876:                            |     |  |   0000                  unimp
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:67
      HARDENED_UNREACHABLE();
d000a878:                            \-----|--|-> 0000                  unimp
d000a87a:                                  |  |   0000                  unimp
d000a87c:                                  |  |   0000                  unimp
d000a87e:                                  |  |   0000                  unimp
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:94
      HARDENED_UNREACHABLE();
d000a880:                                  \--|-> 0000                  unimp
d000a882:                                     |   0000                  unimp
d000a884:                                     |   0000                  unimp
d000a886:                                     |   0000                  unimp
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:147
      HARDENED_UNREACHABLE();
d000a888:                                     \-> 0000                  unimp
d000a88a:                                         0000                  unimp
d000a88c:                                         0000                  unimp
d000a88e:                                         0000                  unimp

d000a890 <key_is_valid_in_lc_state_prod>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a890:                 862a                  mv      a2,a0
d000a892:                 7a01a6b7              lui     a3,0x7a01a
d000a896:                 47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_prod():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a89a:          /----- 02d60063              beq     a2,a3,d000a8ba <key_is_valid_in_lc_state_prod+0x2a>
d000a89e:          |      43a846b7              lui     a3,0x43a84
d000a8a2:          |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a8a6:       /--|----- 02d61163              bne     a2,a3,d000a8c8 <key_is_valid_in_lc_state_prod+0x38>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:115
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a8aa:       |  |  /-- 00d50663              beq     a0,a3,d000a8b6 <key_is_valid_in_lc_state_prod+0x26>
d000a8ae:       |  |  |   0000                  unimp
d000a8b0:       |  |  |   0000                  unimp
d000a8b2:       |  |  |   0000                  unimp
d000a8b4:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:116
      return key_is_valid_in_otp(key_index);
d000a8b6:       |  |  \-> 852e                  mv      a0,a1
d000a8b8:       |  |      a82d                  j       d000a8f2 <key_is_valid_in_otp>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:118
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a8ba:       |  \--/-X 00d50663              beq     a0,a3,d000a8c6 <key_is_valid_in_lc_state_prod+0x36>
d000a8be:       |     |   0000                  unimp
d000a8c0:       |     |   0000                  unimp
d000a8c2:       |     |   0000                  unimp
d000a8c4:       |     |   0000                  unimp
d000a8c6:       |  /--\-X a829                  j       d000a8e0 <key_is_valid_in_lc_state_prod+0x50>
d000a8c8:       \--|----> 3ff0d5b7              lui     a1,0x3ff0d
d000a8cc:          |      81958593              addi    a1,a1,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a8d0:          |  /-- 00b61d63              bne     a2,a1,d000a8ea <key_is_valid_in_lc_state_prod+0x5a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:112
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a8d4:          +--|-- 00b50663              beq     a0,a1,d000a8e0 <key_is_valid_in_lc_state_prod+0x50>
d000a8d8:          |  |   0000                  unimp
d000a8da:          |  |   0000                  unimp
d000a8dc:          |  |   0000                  unimp
d000a8de:          |  |   0000                  unimp
d000a8e0:          \--|-> 02535537              lui     a0,0x2535
d000a8e4:             |   60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:123
}
d000a8e8:             |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:121
      HARDENED_UNREACHABLE();
d000a8ea:             \-> 0000                  unimp
d000a8ec:                 0000                  unimp
d000a8ee:                 0000                  unimp
d000a8f0:                 0000                  unimp

d000a8f2 <key_is_valid_in_otp>:
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:27
static rom_error_t key_is_valid_in_otp(size_t key_index) {
d000a8f2:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:29
      OTP_CTRL_PARAM_CREATOR_SW_CFG_KEY_IS_VALID_OFFSET +
d000a8f4:              c606                     sw      ra,12(sp)
d000a8f6:              c422                     sw      s0,8(sp)
d000a8f8:              0e850593                 addi    a1,a0,232
d000a8fc:              99f1                     andi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:33
      .index = (key_index % kSigverifyNumEntriesPerOtpWord) * 8,
d000a8fe:              00351413                 slli    s0,a0,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:36
      bitfield_field32_read(otp_read32(addr), field);
d000a902:              852e                     mv      a0,a1
d000a904:              0fd030ef                 jal     ra,d000e200 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a908:              00855533                 srl     a0,a0,s0
d000a90c:              0ff57513                 andi    a0,a0,255
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a910:              862a                     mv      a2,a0
d000a912:              0a500593                 li      a1,165
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:37
  if (launder32(is_valid) == kHardenedByteBoolTrue) {
d000a916:       /----- 00b61b63                 bne     a2,a1,d000a92c <key_is_valid_in_otp+0x3a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:38
    HARDENED_CHECK_EQ(is_valid, kHardenedByteBoolTrue);
d000a91a:       |  /-- 00b50663                 beq     a0,a1,d000a926 <key_is_valid_in_otp+0x34>
d000a91e:       |  |   0000                     unimp
d000a920:       |  |   0000                     unimp
d000a922:       |  |   0000                     unimp
d000a924:       |  |   0000                     unimp
d000a926:       |  \-> 73900513                 li      a0,1849
d000a92a:       |  /-- a029                     j       d000a934 <key_is_valid_in_otp+0x42>
d000a92c:       \--|-> 02535537                 lui     a0,0x2535
d000a930:          |   60350513                 addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24b5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:42
}
d000a934:          \-> 4422                     lw      s0,8(sp)
d000a936:              40b2                     lw      ra,12(sp)
d000a938:              0141                     addi    sp,sp,16
d000a93a:              8082                     ret

d000a93c <shutdown_init>:
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:78
    default:
      return 0;
  }
}

rom_error_t shutdown_init(lifecycle_state_t lc_state) {
d000a93c:                                7119                   addi    sp,sp,-128
d000a93e:                                de86                   sw      ra,124(sp)
d000a940:                                dca2                   sw      s0,120(sp)
d000a942:                                daa6                   sw      s1,116(sp)
d000a944:                                d8ca                   sw      s2,112(sp)
d000a946:                                d6ce                   sw      s3,108(sp)
d000a948:                                d4d2                   sw      s4,104(sp)
d000a94a:                                d2d6                   sw      s5,100(sp)
d000a94c:                                d0da                   sw      s6,96(sp)
d000a94e:                                cede                   sw      s7,92(sp)
d000a950:                                cce2                   sw      s8,88(sp)
d000a952:                                cae6                   sw      s9,84(sp)
d000a954:                                c8ea                   sw      s10,80(sp)
d000a956:                                c6ee                   sw      s11,76(sp)
d000a958:                                892a                   mv      s2,a0
d000a95a:                                cf8d05b7               lui     a1,0xcf8d0
d000a95e:                                aaa58613               addi    a2,a1,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  };

  // Are we in a lifecycle state which needs alert configuration?
  uint32_t lc_shift;
  uint32_t lc_shift_masked;
  switch (launder32(lc_state)) {
d000a962:                         /----- 02a65563               bge     a2,a0,d000a98c <shutdown_init+0x50>
d000a966:                         |      aab58593               addi    a1,a1,-1365
d000a96a:                      /--|----- 04b50063               beq     a0,a1,d000a9aa <shutdown_init+0x6e>
d000a96e:                      |  |      0b5a75b7               lui     a1,0xb5a7
d000a972:                      |  |      5e058593               addi    a1,a1,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000a976:                   /--|--|----- 04b51963               bne     a0,a1,d000a9c8 <shutdown_init+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:109
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      lc_shift = kLcShiftProdEnd;
      lc_shift_masked = launder32(kLcShiftProdEnd) ^ kLcStateProdEnd;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a97a:                   |  |  |  /-- 00b90663               beq     s2,a1,d000a986 <shutdown_init+0x4a>
d000a97e:                   |  |  |  |   0000                   unimp
d000a980:                   |  |  |  |   0000                   unimp
d000a982:                   |  |  |  |   0000                   unimp
d000a984:                   |  |  |  |   0000                   unimp
d000a986:                   |  |  |  \-> 49c1                   li      s3,16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a988:                   |  |  |      4541                   li      a0,16
d000a98a:                /--|--|--|----- a8a9                   j       d000a9e4 <shutdown_init+0xa8>
d000a98c:                |  |  |  \----> 91b9b5b7               lui     a1,0x91b9b
d000a990:                |  |  |         68a58593               addi    a1,a1,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a994:       /--------|--|--|-------- 24b51863               bne     a0,a1,d000abe4 <shutdown_init+0x2a8>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:104
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a998:       |        |  |  |     /-- 00b90663               beq     s2,a1,d000a9a4 <shutdown_init+0x68>
d000a99c:       |        |  |  |     |   0000                   unimp
d000a99e:       |        |  |  |     |   0000                   unimp
d000a9a0:       |        |  |  |     |   0000                   unimp
d000a9a2:       |        |  |  |     |   0000                   unimp
d000a9a4:       |        |  |  |     \-> 49a1                   li      s3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a9a6:       |        |  |  |         4521                   li      a0,8
d000a9a8:       |        +--|--|-------- a835                   j       d000a9e4 <shutdown_init+0xa8>
d000a9aa:       |        |  |  \-------> cf8d0537               lui     a0,0xcf8d0
d000a9ae:       |        |  |            aab50513               addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:114
      lc_shift = kLcShiftDev;
      lc_shift_masked = launder32(kLcShiftDev) ^ kLcStateDev;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a9b2:       |        |  |        /-- 00a90663               beq     s2,a0,d000a9be <shutdown_init+0x82>
d000a9b6:       |        |  |        |   0000                   unimp
d000a9b8:       |        |  |        |   0000                   unimp
d000a9ba:       |        |  |        |   0000                   unimp
d000a9bc:       |        |  |        |   0000                   unimp
d000a9be:       |        |  |        \-> 49e1                   li      s3,24
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a9c0:       |        |  |            45e1                   li      a1,24
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:116
      lc_shift = kLcShiftRma;
      lc_shift_masked = launder32(kLcShiftRma) ^ kLcStateRma;
d000a9c2:       |        |  |            00a5ca33               xor     s4,a1,a0
d000a9c6:       |        |  |        /-- a00d                   j       d000a9e8 <shutdown_init+0xac>
d000a9c8:       |        |  \--------|-> 65f255b7               lui     a1,0x65f25
d000a9cc:       |        |           |   20f58593               addi    a1,a1,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a9d0:       |  /-----|-----------|-- 24b51763               bne     a0,a1,d000ac1e <shutdown_init+0x2e2>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a9d4:       |  |     |           |   4501                   li      a0,0
d000a9d6:       |  |     |           |   4981                   li      s3,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:97
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a9d8:       |  |     +-----------|-- 00b90663               beq     s2,a1,d000a9e4 <shutdown_init+0xa8>
d000a9dc:       |  |     |           |   0000                   unimp
d000a9de:       |  |     |           |   0000                   unimp
d000a9e0:       |  |     |           |   0000                   unimp
d000a9e2:       |  |     |           |   0000                   unimp
d000a9e4:       |  |     \-----------|-> 00b54a33               xor     s4,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:128
  // Each of these OTP words is composed of 4 byte enums with the enable and
  // escalate configs per alert class (a/b/c/d).
  size_t i = 0;
  rom_error_t error = kErrorOk;
  uint32_t class_enable =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASS_EN_OFFSET);
d000a9e8:       |  |                 \-> 36800513               li      a0,872
d000a9ec:       |  |                     015030ef               jal     ra,d000e200 <otp_read32>
d000a9f0:       |  |                     842a                   mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:130
  uint32_t class_escalate =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ESCALATION_OFFSET);
d000a9f2:       |  |                     36c00513               li      a0,876
d000a9f6:       |  |                     00b030ef               jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a9fa:       |  |                     4581                   li      a1,0
d000a9fc:       |  |                     5afd                   li      s5,-1
d000a9fe:       |  |                     460d                   li      a2,3
d000aa00:       |  |                     5b7d                   li      s6,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  alert_enable_t enable[ALERT_CLASSES];
  alert_escalate_t escalate[ALERT_CLASSES];
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000aa02:       |  |              /----- 02b66e63               bltu    a2,a1,d000aa3e <shutdown_init+0x102>
d000aa06:       |  |              |      4601                   li      a2,0
d000aa08:       |  |              |      1874                   addi    a3,sp,60
d000aa0a:       |  |              |      1078                   addi    a4,sp,44
d000aa0c:       |  |              |      4585                   li      a1,1
d000aa0e:       |  |              |      4791                   li      a5,4
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000aa10:       |  |              |  /-> 00c454b3               srl     s1,s0,a2
d000aa14:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:134
    enable[i] = (alert_enable_t)bitfield_field32_read(
d000aa18:       |  |              |  |   c284                   sw      s1,0(a3)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000aa1a:       |  |              |  |   00c554b3               srl     s1,a0,a2
d000aa1e:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:136
        class_enable, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
    escalate[i] = (alert_escalate_t)bitfield_field32_read(
d000aa22:       |  |              |  |   c304                   sw      s1,0(a4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aa24:       |  |              |  |   84ae                   mv      s1,a1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000aa26:       |  |              |  |   0691                   addi    a3,a3,4
d000aa28:       |  |              |  |   0711                   addi    a4,a4,4
d000aa2a:       |  |              |  |   0585                   addi    a1,a1,1
d000aa2c:       |  |              |  |   0621                   addi    a2,a2,8
d000aa2e:       |  |              |  \-- fef4e1e3               bltu    s1,a5,d000aa10 <shutdown_init+0xd4>
d000aa32:       |  |              |      4515                   li      a0,5
d000aa34:       |  |              |      73900b13               li      s6,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:139
        class_escalate, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
  }
  if (i != ALERT_CLASSES) {
d000aa38:       |  |              +----- 00a58363               beq     a1,a0,d000aa3e <shutdown_init+0x102>
d000aa3c:       |  |              |      5b7d                   li      s6,-1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aa3e:       |  |              \----> 4501                   li      a0,0
d000aa40:       |  |                     04000593               li      a1,64
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
    error = kErrorUnknown;
  }

  // For each alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000aa44:       |  |  /----------------- 06a5e863               bltu    a1,a0,d000aab4 <shutdown_init+0x178>
d000aa48:       |  |  |                  4481                   li      s1,0
d000aa4a:       |  |  |                  37000413               li      s0,880
d000aa4e:       |  |  |                  03200a93               li      s5,50
d000aa52:       |  |  |                  03c10b93               addi    s7,sp,60
d000aa56:       |  |  |                  73900c13               li      s8,1849
d000aa5a:       |  |  |                  04100c93               li      s9,65
d000aa5e:       |  |  |                  0a700d13               li      s10,167
d000aa62:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:148
       ++i) {
    uint32_t value =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION_OFFSET +
d000aa66:       |  |  |  /-------------> 8522                   mv      a0,s0
d000aa68:       |  |  |  |               798030ef               jal     ra,d000e200 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000aa6c:       |  |  |  |               01355533               srl     a0,a0,s3
d000aa70:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000aa74:       |  |  |  |  /----------- 01558a63               beq     a1,s5,d000aa88 <shutdown_init+0x14c>
d000aa78:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000aa84 <shutdown_init+0x148>
d000aa7c:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000aa8c <shutdown_init+0x150>
d000aa80:       |  |  |  |  |  |     |   4505                   li      a0,1
d000aa82:       |  |  |  |  |  |  /--|-- a031                   j       d000aa8e <shutdown_init+0x152>
d000aa84:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000aa86:       |  |  |  |  |  |  +----- a021                   j       d000aa8e <shutdown_init+0x152>
d000aa88:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000aa8a:       |  |  |  |     |  +----- a011                   j       d000aa8e <shutdown_init+0x152>
d000aa8c:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:152
                   i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_configure(i, cls, enable[clsindex(cls)]);
d000aa8e:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000aa90:       |  |  |  |               955e                   add     a0,a0,s7
d000aa92:       |  |  |  |               4110                   lw      a2,0(a0)
d000aa94:       |  |  |  |               8526                   mv      a0,s1
d000aa96:       |  |  |  |               2cb9                   jal     d000acf4 <alert_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:153
    if (e != kErrorOk) {
d000aa98:       |  |  |  |           /-- 01850363               beq     a0,s8,d000aa9e <shutdown_init+0x162>
d000aa9c:       |  |  |  |           |   8b2a                   mv      s6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:146
       ++i) {
d000aa9e:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aaa0:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000aaa2:       |  |  |  |               0411                   addi    s0,s0,4
d000aaa4:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000aa66 <shutdown_init+0x12a>
d000aaa8:       |  |  |                  04100513               li      a0,65
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:159
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000aaac:       |  |  |              /-- 00a48363               beq     s1,a0,d000aab2 <shutdown_init+0x176>
d000aab0:       |  |  |              |   5b7d                   li      s6,-1
d000aab2:       |  |  |              \-> 8ada                   mv      s5,s6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aab4:       |  |  \----------------> 4501                   li      a0,0
d000aab6:       |  |                     4619                   li      a2,6
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
    error = kErrorUnknown;
  }

  // For each local alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0;
d000aab8:       |  |  /----------------- 06a66663               bltu    a2,a0,d000ab24 <shutdown_init+0x1e8>
d000aabc:       |  |  |                  4481                   li      s1,0
d000aabe:       |  |  |                  4b000413               li      s0,1200
d000aac2:       |  |  |                  03200b13               li      s6,50
d000aac6:       |  |  |                  03c10b93               addi    s7,sp,60
d000aaca:       |  |  |                  73900c13               li      s8,1849
d000aace:       |  |  |                  4c9d                   li      s9,7
d000aad0:       |  |  |                  0a700d13               li      s10,167
d000aad4:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:168
       launder32(i) < ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
       ++i) {
    uint32_t value = otp_read32(
d000aad8:       |  |  |  /-------------> 8522                   mv      a0,s0
d000aada:       |  |  |  |               726030ef               jal     ra,d000e200 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000aade:       |  |  |  |               01355533               srl     a0,a0,s3
d000aae2:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000aae6:       |  |  |  |  /----------- 01658a63               beq     a1,s6,d000aafa <shutdown_init+0x1be>
d000aaea:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000aaf6 <shutdown_init+0x1ba>
d000aaee:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000aafe <shutdown_init+0x1c2>
d000aaf2:       |  |  |  |  |  |     |   4505                   li      a0,1
d000aaf4:       |  |  |  |  |  |  /--|-- a031                   j       d000ab00 <shutdown_init+0x1c4>
d000aaf6:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000aaf8:       |  |  |  |  |  |  +----- a021                   j       d000ab00 <shutdown_init+0x1c4>
d000aafa:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000aafc:       |  |  |  |     |  +----- a011                   j       d000ab00 <shutdown_init+0x1c4>
d000aafe:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:173
        OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_LOCAL_ALERT_CLASSIFICATION_OFFSET +
        i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_local_configure(i, cls, enable[clsindex(cls)]);
d000ab00:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000ab02:       |  |  |  |               955e                   add     a0,a0,s7
d000ab04:       |  |  |  |               4110                   lw      a2,0(a0)
d000ab06:       |  |  |  |               8526                   mv      a0,s1
d000ab08:       |  |  |  |               2475                   jal     d000adb4 <alert_local_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:174
    if (e != kErrorOk) {
d000ab0a:       |  |  |  |           /-- 01850363               beq     a0,s8,d000ab10 <shutdown_init+0x1d4>
d000ab0e:       |  |  |  |           |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:167
       ++i) {
d000ab10:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ab12:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
  for (i = 0;
d000ab14:       |  |  |  |               0411                   addi    s0,s0,4
d000ab16:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000aad8 <shutdown_init+0x19c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:180
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000ab1a:       |  |  |                  ff948513               addi    a0,s1,-7
d000ab1e:       |  |  |                  00153593               seqz    a1,a0
d000ab22:       |  |  |              /-- a011                   j       d000ab26 <shutdown_init+0x1ea>
d000ab24:       |  |  \--------------|-> 4581                   li      a1,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ab26:       |  |                 \-> 4601                   li      a2,0
d000ab28:       |  |                     468d                   li      a3,3
d000ab2a:       |  |                     557d                   li      a0,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
      kAlertClassB,
      kAlertClassC,
      kAlertClassD,
  };
  alert_class_config_t config;
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000ab2c:       |  |        /----------- 0cc6ea63               bltu    a3,a2,d000ac00 <shutdown_init+0x2c4>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:185
  if ((lc_shift_masked ^ lc_state) != lc_shift) {
d000ab30:       |  |        |            012a4533               xor     a0,s4,s2
d000ab34:       |  |        |            01354533               xor     a0,a0,s3
d000ab38:       |  |        |            00153513               seqz    a0,a0
d000ab3c:       |  |        |            8d6d                   and     a0,a0,a1
d000ab3e:       |  |        |        /-- e111                   bnez    a0,d000ab42 <shutdown_init+0x206>
d000ab40:       |  |        |        |   5afd                   li      s5,-1
d000ab42:       |  |        |        \-> 4c01                   li      s8,0
d000ab44:       |  |        |            51000913               li      s2,1296
d000ab48:       |  |        |            03c10a13               addi    s4,sp,60
d000ab4c:       |  |        |            02c10b13               addi    s6,sp,44
d000ab50:       |  |        |            4b8d                   li      s7,3
d000ab52:       |  |        |            4491                   li      s1,4
d000ab54:       |  |        |            00004d17               auipc   s10,0x4
d000ab58:       |  |        |            1f0d0d13               addi    s10,s10,496 # d000ed44 <kSpiDeviceSfdpTable+0x74>
d000ab5c:       |  |        |            73900d93               li      s11,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000ab60:       |  |        |  /-------> 002c1993               slli    s3,s8,0x2
d000ab64:       |  |        |  |         013a0533               add     a0,s4,s3
d000ab68:       |  |        |  |         4108                   lw      a0,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000ab6a:       |  |        |  |         013b05b3               add     a1,s6,s3
d000ab6e:       |  |        |  |         418c                   lw      a1,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000ab70:       |  |        |  |         c42a                   sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000ab72:       |  |        |  |         c62e                   sw      a1,12(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:201
    config.accum_threshold =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH_OFFSET +
d000ab74:       |  |        |  |         4f098513               addi    a0,s3,1264
d000ab78:       |  |        |  |         688030ef               jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:200
    config.accum_threshold =
d000ab7c:       |  |        |  |         c82a                   sw      a0,16(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:204
                   i * sizeof(uint32_t));
    config.timeout_cycles =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_TIMEOUT_CYCLES_OFFSET +
d000ab7e:       |  |        |  |         50098513               addi    a0,s3,1280
d000ab82:       |  |        |  |         67e030ef               jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ab86:       |  |        |  |         4581                   li      a1,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:203
    config.timeout_cycles =
d000ab88:       |  |        |  |         ca2a                   sw      a0,20(sp)
d000ab8a:       |  |        |  |         547d                   li      s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
                   i * sizeof(uint32_t));
    size_t phase = 0;
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000ab8c:       |  |        |  |  /----- 02bbe863               bltu    s7,a1,d000abbc <shutdown_init+0x280>
d000ab90:       |  |        |  |  |      4c85                   li      s9,1
d000ab92:       |  |        |  |  |      01810a13               addi    s4,sp,24
d000ab96:       |  |        |  |  |      844a                   mv      s0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:208
      config.phase_cycles[phase] = otp_read32(
d000ab98:       |  |        |  |  |  /-> 8522                   mv      a0,s0
d000ab9a:       |  |        |  |  |  |   666030ef               jal     ra,d000e200 <otp_read32>
d000ab9e:       |  |        |  |  |  |   00aa2023               sw      a0,0(s4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000aba2:       |  |        |  |  |  |   8566                   mv      a0,s9
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000aba4:       |  |        |  |  |  |   0411                   addi    s0,s0,4
d000aba6:       |  |        |  |  |  |   0c85                   addi    s9,s9,1
d000aba8:       |  |        |  |  |  |   0a11                   addi    s4,s4,4
d000abaa:       |  |        |  |  |  \-- fe9567e3               bltu    a0,s1,d000ab98 <shutdown_init+0x25c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:212
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_PHASE_CYCLES_OFFSET +
          (i * ARRAYSIZE(config.phase_cycles) + phase) * sizeof(uint32_t));
    }
    if (phase != ARRAYSIZE(config.phase_cycles)) {
d000abae:       |  |        |  |  |      4515                   li      a0,5
d000abb0:       |  |        |  |  |  /-- 00ac8363               beq     s9,a0,d000abb6 <shutdown_init+0x27a>
d000abb4:       |  |        |  |  |  |   5afd                   li      s5,-1
d000abb6:       |  |        |  |  |  \-> 8456                   mv      s0,s5
d000abb8:       |  |        |  |  |      03c10a13               addi    s4,sp,60
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:216
      error = kErrorUnknown;
    }

    rom_error_t e = alert_class_configure(kClasses[i], &config);
d000abbc:       |  |        |  |  \----> 01a98533               add     a0,s3,s10
d000abc0:       |  |        |  |         4108                   lw      a0,0(a0)
d000abc2:       |  |        |  |         002c                   addi    a1,sp,8
d000abc4:       |  |        |  |         247d                   jal     d000ae72 <alert_class_configure>
d000abc6:       |  |        |  |         8aa2                   mv      s5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:217
    if (e != kErrorOk) {
d000abc8:       |  |        |  |     /-- 01b50363               beq     a0,s11,d000abce <shutdown_init+0x292>
d000abcc:       |  |        |  |     |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000abce:       |  |        |  |     \-> 0c05                   addi    s8,s8,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000abd0:       |  |        |  |         8562                   mv      a0,s8
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
d000abd2:       |  |        |  |         0941                   addi    s2,s2,16
d000abd4:       |  |        |  \-------- f89566e3               bltu    a0,s1,d000ab60 <shutdown_init+0x224>
d000abd8:       |  |        |            4511                   li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:223
      // Keep going if there is an error programming an alert class. We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_CLASSES) {
d000abda:       |  |        |        /-- 00ac0363               beq     s8,a0,d000abe0 <shutdown_init+0x2a4>
d000abde:       |  |        |        |   5afd                   li      s5,-1
d000abe0:       |  |        |        \-> 8556                   mv      a0,s5
d000abe2:       |  |        +----------- a839                   j       d000ac00 <shutdown_init+0x2c4>
d000abe4:       \--|--------|----------> b28665b7               lui     a1,0xb2866
d000abe8:          |        |            fbb58593               addi    a1,a1,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000abec:          +--------|----------- 02b51963               bne     a0,a1,d000ac1e <shutdown_init+0x2e2>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:92
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000abf0:          |        |        /-- 00b90663               beq     s2,a1,d000abfc <shutdown_init+0x2c0>
d000abf4:          |        |        |   0000                   unimp
d000abf6:          |        |        |   0000                   unimp
d000abf8:          |        |        |   0000                   unimp
d000abfa:          |        |        |   0000                   unimp
d000abfc:          |        |        \-> 73900513               li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:227
    error = kErrorUnknown;
  }
  return error;
}
d000ac00:          |        \----------> 4db6                   lw      s11,76(sp)
d000ac02:          |                     4d46                   lw      s10,80(sp)
d000ac04:          |                     4cd6                   lw      s9,84(sp)
d000ac06:          |                     4c66                   lw      s8,88(sp)
d000ac08:          |                     4bf6                   lw      s7,92(sp)
d000ac0a:          |                     5b06                   lw      s6,96(sp)
d000ac0c:          |                     5a96                   lw      s5,100(sp)
d000ac0e:          |                     5a26                   lw      s4,104(sp)
d000ac10:          |                     59b6                   lw      s3,108(sp)
d000ac12:          |                     5946                   lw      s2,112(sp)
d000ac14:          |                     54d6                   lw      s1,116(sp)
d000ac16:          |                     5466                   lw      s0,120(sp)
d000ac18:          |                     50f6                   lw      ra,124(sp)
d000ac1a:          |                     6109                   addi    sp,sp,128
d000ac1c:          |                     8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:119
      HARDENED_UNREACHABLE();
d000ac1e:          \-------------------> 0000                   unimp
d000ac20:                                0000                   unimp
d000ac22:                                0000                   unimp
d000ac24:                                0000                   unimp

d000ac26 <rom_printf>:
rom_printf():
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:13
#include <stdarg.h>
#include <stdint.h>

#include "sw/device/silicon_creator/lib/drivers/uart.h"

rom_error_t rom_printf(const char *format, ...) {
d000ac26:                          715d                 addi    sp,sp,-80
d000ac28:                          d606                 sw      ra,44(sp)
d000ac2a:                          d422                 sw      s0,40(sp)
d000ac2c:                          d226                 sw      s1,36(sp)
d000ac2e:                          d04a                 sw      s2,32(sp)
d000ac30:                          ce4e                 sw      s3,28(sp)
d000ac32:                          cc52                 sw      s4,24(sp)
d000ac34:                          ca56                 sw      s5,20(sp)
d000ac36:                          c85a                 sw      s6,16(sp)
d000ac38:                          c65e                 sw      s7,12(sp)
d000ac3a:                          84aa                 mv      s1,a0
d000ac3c:                          c6c6                 sw      a7,76(sp)
d000ac3e:                          c4c2                 sw      a6,72(sp)
d000ac40:                          c2be                 sw      a5,68(sp)
d000ac42:                          c0ba                 sw      a4,64(sp)
d000ac44:                          de36                 sw      a3,60(sp)
d000ac46:                          dc32                 sw      a2,56(sp)
d000ac48:                          da2e                 sw      a1,52(sp)
d000ac4a:                          1848                 addi    a0,sp,52
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:15
  va_list args;
  va_start(args, format);
d000ac4c:                          c42a                 sw      a0,8(sp)
d000ac4e:                          02500a13             li      s4,37
d000ac52:                          014c4537             lui     a0,0x14c4
d000ac56:                          70d50913             addi    s2,a0,1805 # 14c470d <_rom_ext_virtual_size+0x144470d>
d000ac5a:                          07800993             li      s3,120
d000ac5e:                          00004b97             auipc   s7,0x4
d000ac62:                          106b8b93             addi    s7,s7,262 # d000ed64 <rom_printf.kHexTable>
d000ac66:                          07300a93             li      s5,115
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17

  while (*format != '\0') {
d000ac6a:       /----------------> 0004c503             lbu     a0,0(s1)
d000ac6e:       |              /-- 01450763             beq     a0,s4,d000ac7c <rom_printf+0x56>
d000ac72:       |  /-----------|-- c13d                 beqz    a0,d000acd8 <rom_printf+0xb2>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:19
    if (*format != '%') {
      uart_putchar(*format++);
d000ac74:       |  |           |   0485                 addi    s1,s1,1
d000ac76:       |  |           |   378010ef             jal     ra,d000bfee <uart_putchar>
d000ac7a:       +--|-----------|-- bfc5                 j       d000ac6a <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:24
      continue;
    }

    ++format;  // Skip over the '%'.
    switch (*format++) {
d000ac7c:       |  |           \-> 0014c503             lbu     a0,1(s1)
d000ac80:       |  |               00248b13             addi    s6,s1,2
d000ac84:       |  |     /-------- 03350863             beq     a0,s3,d000acb4 <rom_printf+0x8e>
d000ac88:       |  |  /--|-------- 05551a63             bne     a0,s5,d000acdc <rom_printf+0xb6>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:27
      case 's': {
        // Print a null-terminated string.
        const char *str = va_arg(args, const char *);
d000ac8c:       |  |  |  |         4522                 lw      a0,8(sp)
d000ac8e:       |  |  |  |         00450593             addi    a1,a0,4
d000ac92:       |  |  |  |         c42e                 sw      a1,8(sp)
d000ac94:       |  |  |  |         410c                 lw      a1,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
d000ac96:       |  |  |  |         0005c503             lbu     a0,0(a1)
d000ac9a:       |  |  |  |         84da                 mv      s1,s6
d000ac9c:       +--|--|--|-------- d579                 beqz    a0,d000ac6a <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17
  while (*format != '\0') {
d000ac9e:       |  |  |  |         00158413             addi    s0,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:29
          uart_putchar(*str++);
d000aca2:       |  |  |  |     /-> 0ff57513             andi    a0,a0,255
d000aca6:       |  |  |  |     |   348010ef             jal     ra,d000bfee <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
d000acaa:       |  |  |  |     |   00044503             lbu     a0,0(s0)
d000acae:       |  |  |  |     |   0405                 addi    s0,s0,1
d000acb0:       |  |  |  |     \-- f96d                 bnez    a0,d000aca2 <rom_printf+0x7c>
d000acb2:       |  |  |  |  /----- a00d                 j       d000acd4 <rom_printf+0xae>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:36
        break;
      }
      case 'x': {
        // Print an `unsigned int` in hexadecimal.
        static const char kHexTable[16] = "0123456789abcdef";
        unsigned int v = va_arg(args, unsigned int);
d000acb4:       |  |  |  \--|----> 4522                 lw      a0,8(sp)
d000acb6:       |  |  |     |      00450593             addi    a1,a0,4
d000acba:       |  |  |     |      c42e                 sw      a1,8(sp)
d000acbc:       |  |  |     |      4104                 lw      s1,0(a0)
d000acbe:       |  |  |     |      4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:39
        for (int i = 0; i < sizeof(v) * 2; ++i) {
          int shift = sizeof(v) * 8 - 4;
          uart_putchar(kHexTable[v >> shift]);
d000acc0:       |  |  |     |  /-> 01c4d513             srli    a0,s1,0x1c
d000acc4:       |  |  |     |  |   955e                 add     a0,a0,s7
d000acc6:       |  |  |     |  |   00054503             lbu     a0,0(a0)
d000acca:       |  |  |     |  |   324010ef             jal     ra,d000bfee <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
d000acce:       |  |  |     |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:40
          v <<= 4;
d000acd0:       |  |  |     |  |   0492                 slli    s1,s1,0x4
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
d000acd2:       |  |  |     |  \-- f47d                 bnez    s0,d000acc0 <rom_printf+0x9a>
d000acd4:       |  |  |     \----> 84da                 mv      s1,s6
d000acd6:       \--|--|----------- bf51                 j       d000ac6a <rom_printf+0x44>
d000acd8:          \--|----------> 73900913             li      s2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:52
    }
  }

  va_end(args);
  return kErrorOk;
}
d000acdc:             \----------> 854a                 mv      a0,s2
d000acde:                          4bb2                 lw      s7,12(sp)
d000ace0:                          4b42                 lw      s6,16(sp)
d000ace2:                          4ad2                 lw      s5,20(sp)
d000ace4:                          4a62                 lw      s4,24(sp)
d000ace6:                          49f2                 lw      s3,28(sp)
d000ace8:                          5902                 lw      s2,32(sp)
d000acea:                          5492                 lw      s1,36(sp)
d000acec:                          5422                 lw      s0,40(sp)
d000acee:                          50b2                 lw      ra,44(sp)
d000acf0:                          6161                 addi    sp,sp,80
d000acf2:                          8082                 ret

d000acf4 <alert_configure>:
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:22
enum {
  kBase = TOP_EARLGREY_ALERT_HANDLER_BASE_ADDR,
};

rom_error_t alert_configure(size_t index, alert_class_t cls,
                            alert_enable_t enabled) {
d000acf4:                             04000693                  li      a3,64
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:23
  if (index >= ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000acf8:                         /-- 00a6f763                  bgeu    a3,a0,d000ad06 <alert_configure+0x12>
d000acfc:                         |   01415537                  lui     a0,0x1415
d000ad00:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x1394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000ad04:       |                 |   8082                      ret
d000ad06:       |                 \-> c01506b7                  lui     a3,0xc0150
d000ad0a:       |                     22068693                  addi    a3,a3,544 # c0150220 <_stack_end+0xe0130220>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:26
  index *= 4;
d000ad0e:       |                     00251713                  slli    a4,a0,0x2
d000ad12:       |                     09300793                  li      a5,147
d000ad16:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000ad1a:       |                 /-- 02b7d563                  bge     a5,a1,d000ad44 <alert_configure+0x50>
d000ad1e:       |                 |   09400793                  li      a5,148
d000ad22:       |  /--------------|-- 08f58563                  beq     a1,a5,d000adac <alert_configure+0xb8>
d000ad26:       |  |              |   0a700793                  li      a5,167
d000ad2a:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000ad5c <alert_configure+0x68>
d000ad2e:       |  |     |        |   0ee00793                  li      a5,238
d000ad32:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000ad98 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:31
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ad36:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000ad3a:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ad3e:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000ad42:       |  |  |  |  /-----|-- a035                      j       d000ad6e <alert_configure+0x7a>
d000ad44:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000ad48:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000ad64 <alert_configure+0x70>
d000ad4c:       |  |  |  |  |  |      06400793                  li      a5,100
d000ad50:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000ad98 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:36
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ad54:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000ad58:       |  |  |  |  |  |      4785                      li      a5,1
d000ad5a:       |  |  |  |  |  |  /-- a801                      j       d000ad6a <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:41
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ad5c:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000ad60:       |  |  |     |  |  |   4789                      li      a5,2
d000ad62:       |  |  |     |  |  +-- a021                      j       d000ad6a <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:46
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ad64:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000ad68:       |  |  |     |     |   478d                      li      a5,3
d000ad6a:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000ad6c:       |  |  |     |         c19c                      sw      a5,0(a1)
d000ad6e:       |  |  |     \-------> 459d                      li      a1,7
d000ad70:       |  |  |           /-- 02b60763                  beq     a2,a1,d000ad9e <alert_configure+0xaa>
d000ad74:       |  |  |           |   0a900593                  li      a1,169
d000ad78:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000adac <alert_configure+0xb8>
d000ad7c:       |  |  |           |   0d200593                  li      a1,210
d000ad80:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000adae <alert_configure+0xba>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:61
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000ad84:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000ad88:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ad8a:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ad8e:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ad92:       |  |  |        |  |   de05ac23                  sw      zero,-520(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000ad96:       |  |  |        |  |   8082                      ret
d000ad98:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000ad9c:       +--|-----------|--|-- b795                      j       d000ad00 <alert_configure+0xc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:67
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000ad9e:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000ada2:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ada4:       |  |           |      eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ada8:       |  |           |      eec5ae23                  sw      a2,-260(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000adac:       |  \-----------|----> 8082                      ret
d000adae:       |              \----> 03415537                  lui     a0,0x3415
d000adb2:       \-------------------- b7b9                      j       d000ad00 <alert_configure+0xc>

d000adb4 <alert_local_configure>:
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:76

rom_error_t alert_local_configure(size_t index, alert_class_t cls,
                                  alert_enable_t enabled) {
d000adb4:                             4699                      li      a3,6
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:77
  if (index >= ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000adb6:                         /-- 00a6f763                  bgeu    a3,a0,d000adc4 <alert_local_configure+0x10>
d000adba:                         |   01415537                  lui     a0,0x1415
d000adbe:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x1394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000adc2:       |                 |   8082                      ret
d000adc4:       |                 \-> c01506b7                  lui     a3,0xc0150
d000adc8:       |                     46068693                  addi    a3,a3,1120 # c0150460 <_stack_end+0xe0130460>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:80
  index *= 4;
d000adcc:       |                     00251713                  slli    a4,a0,0x2
d000add0:       |                     09300793                  li      a5,147
d000add4:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000add8:       |                 /-- 02b7d563                  bge     a5,a1,d000ae02 <alert_local_configure+0x4e>
d000addc:       |                 |   09400793                  li      a5,148
d000ade0:       |  /--------------|-- 08f58563                  beq     a1,a5,d000ae6a <alert_local_configure+0xb6>
d000ade4:       |  |              |   0a700793                  li      a5,167
d000ade8:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000ae1a <alert_local_configure+0x66>
d000adec:       |  |     |        |   0ee00793                  li      a5,238
d000adf0:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000ae56 <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:85
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000adf4:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000adf8:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000adfc:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000ae00:       |  |  |  |  /-----|-- a035                      j       d000ae2c <alert_local_configure+0x78>
d000ae02:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000ae06:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000ae22 <alert_local_configure+0x6e>
d000ae0a:       |  |  |  |  |  |      06400793                  li      a5,100
d000ae0e:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000ae56 <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:90
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ae12:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000ae16:       |  |  |  |  |  |      4785                      li      a5,1
d000ae18:       |  |  |  |  |  |  /-- a801                      j       d000ae28 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:95
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ae1a:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000ae1e:       |  |  |     |  |  |   4789                      li      a5,2
d000ae20:       |  |  |     |  |  +-- a021                      j       d000ae28 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:100
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000ae22:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000ae26:       |  |  |     |     |   478d                      li      a5,3
d000ae28:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000ae2a:       |  |  |     |         c19c                      sw      a5,0(a1)
d000ae2c:       |  |  |     \-------> 459d                      li      a1,7
d000ae2e:       |  |  |           /-- 02b60763                  beq     a2,a1,d000ae5c <alert_local_configure+0xa8>
d000ae32:       |  |  |           |   0a900593                  li      a1,169
d000ae36:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000ae6a <alert_local_configure+0xb6>
d000ae3a:       |  |  |           |   0d200593                  li      a1,210
d000ae3e:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000ae6c <alert_local_configure+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:115
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000ae42:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000ae46:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ae48:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ae4c:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ae50:       |  |  |        |  |   fc05a423                  sw      zero,-56(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000ae54:       |  |  |        |  |   8082                      ret
d000ae56:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000ae5a:       +--|-----------|--|-- b795                      j       d000adbe <alert_local_configure+0xa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:121
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000ae5c:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000ae60:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ae62:       |  |           |      fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ae66:       |  |           |      fec5a223                  sw      a2,-28(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000ae6a:       |  \-----------|----> 8082                      ret
d000ae6c:       |              \----> 03415537                  lui     a0,0x3415
d000ae70:       \-------------------- b7b9                      j       d000adbe <alert_local_configure+0xa>

d000ae72 <alert_class_configure>:
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:130

rom_error_t alert_class_configure(alert_class_t cls,
                                  const alert_class_config_t *config) {
d000ae72:                          862a                 mv      a2,a0
d000ae74:                          02415537             lui     a0,0x2415
d000ae78:                          0a600693             li      a3,166
d000ae7c:                          80350513             addi    a0,a0,-2045 # 2414803 <_rom_ext_virtual_size+0x2394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:147
      reg, ALERT_HANDLER_CLASSA_CTRL_SHADOWED_MAP_E3_FIELD, 3);

  // All of the alert class register blocks are identical but at different
  // offsets.  We'll treat everything like Class A, but add in the offset
  // to the other classes.
  switch (cls) {
d000ae80:                      /-- 00c6cd63             blt     a3,a2,d000ae9a <alert_class_configure+0x28>
d000ae84:                      |   03200693             li      a3,50
d000ae88:                /-----|-- 02d60363             beq     a2,a3,d000aeae <alert_class_configure+0x3c>
d000ae8c:                |     |   06400693             li      a3,100
d000ae90:       /--------|-----|-- 08d61063             bne     a2,a3,d000af10 <alert_class_configure+0x9e>
d000ae94:       |        |     |   03800813             li      a6,56
d000ae98:       |        |  /--|-- a005                 j       d000aeb8 <alert_class_configure+0x46>
d000ae9a:       |        |  |  \-> 0a700693             li      a3,167
d000ae9e:       |        |  |  /-- 00d60b63             beq     a2,a3,d000aeb4 <alert_class_configure+0x42>
d000aea2:       |        |  |  |   0ee00693             li      a3,238
d000aea6:       +--------|--|--|-- 06d61563             bne     a2,a3,d000af10 <alert_class_configure+0x9e>
d000aeaa:       |        |  |  |   4801                 li      a6,0
d000aeac:       |        |  +--|-- a031                 j       d000aeb8 <alert_class_configure+0x46>
d000aeae:       |        \--|--|-> 0a800813             li      a6,168
d000aeb2:       |           +--|-- a019                 j       d000aeb8 <alert_class_configure+0x46>
d000aeb4:       |           |  \-> 07000813             li      a6,112
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:168
      break;
    case kAlertClassX:
    default:
      return kErrorAlertBadClass;
  }
  switch (config->enabled) {
d000aeb8:       |           \----> 0005a883             lw      a7,0(a1)
d000aebc:       |                  471d                 li      a4,7
d000aebe:       |                  6511                 lui     a0,0x4
d000aec0:       |        /-------- 02e88163             beq     a7,a4,d000aee2 <alert_class_configure+0x70>
d000aec4:       |        |         0a900713             li      a4,169
d000aec8:       |        |  /----- 00e88a63             beq     a7,a4,d000aedc <alert_class_configure+0x6a>
d000aecc:       |        |  |      0d200513             li      a0,210
d000aed0:       |  /-----|--|----- 0aa89c63             bne     a7,a0,d000af88 <alert_class_configure+0x116>
d000aed4:       |  |     |  |      6511                 lui     a0,0x4
d000aed6:       |  |     |  |      90350713             addi    a4,a0,-1789 # 3903 <_static_critical_size+0x193f>
d000aeda:       |  |     |  |  /-- a031                 j       d000aee6 <alert_class_configure+0x74>
d000aedc:       |  |     |  \--|-> 90050713             addi    a4,a0,-1792
d000aee0:       |  |     |     +-- a019                 j       d000aee6 <alert_class_configure+0x74>
d000aee2:       |  |     \-----|-> 90150713             addi    a4,a0,-1791
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
    case kAlertEnableNone:
      break;
    default:
      return kErrorAlertBadEnable;
  }
  switch (config->escalation) {
d000aee6:       |  |           \-> 41dc                 lw      a5,4(a1)
d000aee8:       |  |               04415537             lui     a0,0x4415
d000aeec:       |  |               0b800693             li      a3,184
d000aef0:       |  |               80350513             addi    a0,a0,-2045 # 4414803 <_rom_ext_virtual_size+0x4394803>
d000aef4:       |  |           /-- 00f6df63             bge     a3,a5,d000af12 <alert_class_configure+0xa0>
d000aef8:       |  |           |   0b900693             li      a3,185
d000aefc:       |  |  /--------|-- 02d78963             beq     a5,a3,d000af2e <alert_class_configure+0xbc>
d000af00:       |  |  |        |   0cb00693             li      a3,203
d000af04:       |  |  |     /--|-- 02d78363             beq     a5,a3,d000af2a <alert_class_configure+0xb8>
d000af08:       |  |  |     |  |   0d100693             li      a3,209
d000af0c:       |  |  |  /--|--|-- 02d78363             beq     a5,a3,d000af32 <alert_class_configure+0xc0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
    abs_mmio_write32(kBase + ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET + offset,
                     0);
  }

  return kErrorOk;
}
d000af10:       >--|--|--|--|--|-> 8082                 ret
d000af12:       |  |  |  |  |  \-> 02500693             li      a3,37
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
  switch (config->escalation) {
d000af16:       |  |  |  |  |  /-- 00d78863             beq     a5,a3,d000af26 <alert_class_configure+0xb4>
d000af1a:       |  |  |  |  |  |   07600693             li      a3,118
d000af1e:       +--|--|--|--|--|-- fed799e3             bne     a5,a3,d000af10 <alert_class_configure+0x9e>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000af22:       |  |  |  |  |  |   02076713             ori     a4,a4,32
d000af26:       |  |  |  |  |  \-> 01076713             ori     a4,a4,16
d000af2a:       |  |  |  |  \----> 00876713             ori     a4,a4,8
d000af2e:       |  |  \--|-------> 00476713             ori     a4,a4,4
d000af32:       |  |     \-------> c0150537             lui     a0,0xc0150
d000af36:       |  |               49850513             addi    a0,a0,1176 # c0150498 <_stack_end+0xe0130498>
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:206
      kBase + ALERT_HANDLER_CLASSA_CTRL_SHADOWED_REG_OFFSET + offset, reg);
d000af3a:       |  |               982a                 add     a6,a6,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000af3c:       |  |               00e82223             sw      a4,4(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000af40:       |  |               00e82223             sw      a4,4(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:209
      config->accum_threshold);
d000af44:       |  |               4588                 lw      a0,8(a1)
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000af46:       |  |               00a82a23             sw      a0,20(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000af4a:       |  |               00a82a23             sw      a0,20(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:212
      config->timeout_cycles);
d000af4e:       |  |               45d8                 lw      a4,12(a1)
d000af50:       |  |               4501                 li      a0,0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000af52:       |  |               00e82c23             sw      a4,24(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000af56:       |  |               00e82c23             sw      a4,24(a6)
d000af5a:       |  |               02080713             addi    a4,a6,32
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000af5e:       |  |               05c1                 addi    a1,a1,16
d000af60:       |  |               47c1                 li      a5,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:217
        config->phase_cycles[i]);
d000af62:       |  |           /-> 00a58633             add     a2,a1,a0
d000af66:       |  |           |   4210                 lw      a2,0(a2)
d000af68:       |  |           |   00a706b3             add     a3,a4,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000af6c:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000af6e:       |  |           |   0511                 addi    a0,a0,4
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000af70:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
d000af72:       |  |           \-- fef518e3             bne     a0,a5,d000af62 <alert_class_configure+0xf0>
d000af76:       |  |               0d200593             li      a1,210
d000af7a:       |  |               73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:220
  if (config->enabled == kAlertEnableLocked) {
d000af7e:       \--|-------------- f8b899e3             bne     a7,a1,d000af10 <alert_class_configure+0x9e>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000af82:          |               00082023             sw      zero,0(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
}
d000af86:          |               8082                 ret
d000af88:          \-------------> 03415537             lui     a0,0x3415
d000af8c:                          80350513             addi    a0,a0,-2045 # 3414803 <_rom_ext_virtual_size+0x3394803>
d000af90:                          8082                 ret

d000af92 <alert_config_crc32>:
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:260
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
    crc32_add_reg(ctx, offset);
  }
}

uint32_t alert_config_crc32(void) {
d000af92:              7179                     addi    sp,sp,-48
d000af94:              d606                     sw      ra,44(sp)
d000af96:              d422                     sw      s0,40(sp)
d000af98:              d226                     sw      s1,36(sp)
d000af9a:              d04a                     sw      s2,32(sp)
d000af9c:              ce4e                     sw      s3,28(sp)
d000af9e:              cc52                     sw      s4,24(sp)
d000afa0:              ca56                     sw      s5,20(sp)
d000afa2:              c85a                     sw      s6,16(sp)
d000afa4:              c0150537                 lui     a0,0xc0150
d000afa8:              01850913                 addi    s2,a0,24 # c0150018 <_stack_end+0xe0130018>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:262
  uint32_t ctx;
  crc32_init(&ctx);
d000afac:              0068                     addi    a0,sp,12
d000afae:              22ed                     jal     d000b198 <crc32_init>
d000afb0:              4401                     li      s0,0
d000afb2:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000afb6:          /-> 01240533                 add     a0,s0,s2
d000afba:          |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000afbc:          |   0068                     addi    a0,sp,12
d000afbe:          |   22c5                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000afc0:          |   0411                     addi    s0,s0,4
d000afc2:          \-- fe941ae3                 bne     s0,s1,d000afb6 <alert_config_crc32+0x24>
d000afc6:              4401                     li      s0,0
d000afc8:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000afcc:          /-> 00890533                 add     a0,s2,s0
d000afd0:          |   10452583                 lw      a1,260(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000afd4:          |   0068                     addi    a0,sp,12
d000afd6:          |   22e1                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000afd8:          |   0411                     addi    s0,s0,4
d000afda:          \-- fe9419e3                 bne     s0,s1,d000afcc <alert_config_crc32+0x3a>
d000afde:              4401                     li      s0,0
d000afe0:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000afe4:          /-> 00890533                 add     a0,s2,s0
d000afe8:          |   20852583                 lw      a1,520(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000afec:          |   0068                     addi    a0,sp,12
d000afee:          |   2a45                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000aff0:          |   0411                     addi    s0,s0,4
d000aff2:          \-- fe9419e3                 bne     s0,s1,d000afe4 <alert_config_crc32+0x52>
d000aff6:              4401                     li      s0,0
d000aff8:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000affa:          /-> 00890533                 add     a0,s2,s0
d000affe:          |   41052583                 lw      a1,1040(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000b002:          |   0068                     addi    a0,sp,12
d000b004:          |   2a69                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000b006:          |   0411                     addi    s0,s0,4
d000b008:          \-- fe9419e3                 bne     s0,s1,d000affa <alert_config_crc32+0x68>
d000b00c:              4401                     li      s0,0
d000b00e:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b010:          /-> 00890533                 add     a0,s2,s0
d000b014:          |   42c52583                 lw      a1,1068(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000b018:          |   0068                     addi    a0,sp,12
d000b01a:          |   2251                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000b01c:          |   0411                     addi    s0,s0,4
d000b01e:          \-- fe9419e3                 bne     s0,s1,d000b010 <alert_config_crc32+0x7e>
d000b022:              4401                     li      s0,0
d000b024:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b026:          /-> 00890533                 add     a0,s2,s0
d000b02a:          |   44852583                 lw      a1,1096(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000b02e:          |   0068                     addi    a0,sp,12
d000b030:          |   22bd                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000b032:          |   0411                     addi    s0,s0,4
d000b034:          \-- fe9419e3                 bne     s0,s1,d000b026 <alert_config_crc32+0x94>
d000b038:              4a01                     li      s4,0
d000b03a:              c0150537                 lui     a0,0xc0150
d000b03e:              4b850413                 addi    s0,a0,1208 # c01504b8 <_stack_end+0xe01304b8>
d000b042:              03800993                 li      s3,56
d000b046:              4b41                     li      s6,16
d000b048:              4a91                     li      s5,4
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:282
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
    enum {
      kClassStep = ALERT_HANDLER_CLASSB_REGWEN_REG_OFFSET -
                   ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET,
    };
    uint32_t classOffset = kClassStep * class;
d000b04a:       /----> 033a0533                 mul     a0,s4,s3
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000b04e:       |      00a904b3                 add     s1,s2,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b052:       |      4804a583                 lw      a1,1152(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000b056:       |      0068                     addi    a0,sp,12
d000b058:       |      2299                     jal     d000b19e <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b05a:       |      4844a583                 lw      a1,1156(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000b05e:       |      0068                     addi    a0,sp,12
d000b060:       |      2a3d                     jal     d000b19e <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b062:       |      4944a583                 lw      a1,1172(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000b066:       |      0068                     addi    a0,sp,12
d000b068:       |      2a1d                     jal     d000b19e <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b06a:       |      4984a583                 lw      a1,1176(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000b06e:       |      0068                     addi    a0,sp,12
d000b070:       |      223d                     jal     d000b19e <crc32_add32>
d000b072:       |      4481                     li      s1,0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b074:       |  /-> 00940533                 add     a0,s0,s1
d000b078:       |  |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000b07a:       |  |   0068                     addi    a0,sp,12
d000b07c:       |  |   220d                     jal     d000b19e <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000b07e:       |  |   0491                     addi    s1,s1,4
d000b080:       |  \-- ff649ae3                 bne     s1,s6,d000b074 <alert_config_crc32+0xe2>
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:277
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
d000b084:       |      0a05                     addi    s4,s4,1
d000b086:       |      03840413                 addi    s0,s0,56
d000b08a:       \----- fd5a10e3                 bne     s4,s5,d000b04a <alert_config_crc32+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:299
    crc32_add_regs(
        &ctx, classOffset + ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED_REG_OFFSET,
        ALERT_HANDLER_PARAM_N_PHASES);
  }

  return crc32_finish(&ctx);
d000b08e:              0068                     addi    a0,sp,12
d000b090:              2a81                     jal     d000b1e0 <crc32_finish>
d000b092:              4b42                     lw      s6,16(sp)
d000b094:              4ad2                     lw      s5,20(sp)
d000b096:              4a62                     lw      s4,24(sp)
d000b098:              49f2                     lw      s3,28(sp)
d000b09a:              5902                     lw      s2,32(sp)
d000b09c:              5492                     lw      s1,36(sp)
d000b09e:              5422                     lw      s0,40(sp)
d000b0a0:              50b2                     lw      ra,44(sp)
d000b0a2:              6145                     addi    sp,sp,48
d000b0a4:              8082                     ret

d000b0a6 <alert_config_check>:
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:302
}

rom_error_t alert_config_check(lifecycle_state_t lc_state) {
d000b0a6:                             1141                      addi    sp,sp,-16
d000b0a8:                             c606                      sw      ra,12(sp)
d000b0aa:                             c422                      sw      s0,8(sp)
d000b0ac:                             c226                      sw      s1,4(sp)
d000b0ae:                             842a                      mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
  uint32_t crc32 = alert_config_crc32();
d000b0b0:                             35cd                      jal     d000af92 <alert_config_crc32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b0b2:                             85a2                      mv      a1,s0
d000b0b4:                             cf8d0637                  lui     a2,0xcf8d0
d000b0b8:                             aaa60693                  addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
d000b0bc:                             84aa                      mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  rom_error_t res = lc_state ^ crc32;
  switch (launder32(lc_state)) {
d000b0be:                      /----- 02b6d563                  bge     a3,a1,d000b0e8 <alert_config_check+0x42>
d000b0c2:                      |      aab60513                  addi    a0,a2,-1365
d000b0c6:                   /--|----- 04a58063                  beq     a1,a0,d000b106 <alert_config_check+0x60>
d000b0ca:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000b0ce:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000b0d2:                /--|--|----- 04a59763                  bne     a1,a0,d000b120 <alert_config_check+0x7a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:324
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      res ^= otp_read32(
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_END_OFFSET);
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000b0d6:                |  |  |  /-- 00a40663                  beq     s0,a0,d000b0e2 <alert_config_check+0x3c>
d000b0da:                |  |  |  |   0000                      unimp
d000b0dc:                |  |  |  |   0000                      unimp
d000b0de:                |  |  |  |   0000                      unimp
d000b0e0:                |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:326
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_DEV_OFFSET);
d000b0e2:                |  |  |  \-> 55800513                  li      a0,1368
d000b0e6:             /--|--|--|----- a899                      j       d000b13c <alert_config_check+0x96>
d000b0e8:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000b0ec:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000b0f0:       /-----|--|--|-------- 08a59063                  bne     a1,a0,d000b170 <alert_config_check+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:319
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000b0f4:       |     |  |  |     /-- 00a40663                  beq     s0,a0,d000b100 <alert_config_check+0x5a>
d000b0f8:       |     |  |  |     |   0000                      unimp
d000b0fa:       |     |  |  |     |   0000                      unimp
d000b0fc:       |     |  |  |     |   0000                      unimp
d000b0fe:       |     |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:320
      res ^= otp_read32(
d000b100:       |     |  |  |     \-> 55400513                  li      a0,1364
d000b104:       |     +--|--|-------- a825                      j       d000b13c <alert_config_check+0x96>
d000b106:       |     |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000b10a:       |     |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:329
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000b10e:       |     |  |        /-- 00a40663                  beq     s0,a0,d000b11a <alert_config_check+0x74>
d000b112:       |     |  |        |   0000                      unimp
d000b114:       |     |  |        |   0000                      unimp
d000b116:       |     |  |        |   0000                      unimp
d000b118:       |     |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:331
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_RMA_OFFSET);
d000b11a:       |     |  |        \-> 55c00513                  li      a0,1372
d000b11e:       |     +--|----------- a839                      j       d000b13c <alert_config_check+0x96>
d000b120:       |     |  \----------> 65f25537                  lui     a0,0x65f25
d000b124:       |     |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000b128:       |  /--|-------------- 06a59463                  bne     a1,a0,d000b190 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:314
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000b12c:       |  |  |           /-- 00a40663                  beq     s0,a0,d000b138 <alert_config_check+0x92>
d000b130:       |  |  |           |   0000                      unimp
d000b132:       |  |  |           |   0000                      unimp
d000b134:       |  |  |           |   0000                      unimp
d000b136:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:316
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_OFFSET);
d000b138:       |  |  |           \-> 55000513                  li      a0,1360
d000b13c:       |  |  \-------------> 0c4030ef                  jal     ra,d000e200 <otp_read32>
d000b140:       |  |     /----------> 0084c5b3                  xor     a1,s1,s0
d000b144:       |  |     |            8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b146:       |  |     |            862a                      mv      a2,a0
d000b148:       |  |     |            73900593                  li      a1,1849
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:336
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  if (launder32(res) != kErrorOk) {
d000b14c:       |  |     |  /-------- 00b61963                  bne     a2,a1,d000b15e <alert_config_check+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:339
    return kErrorAlertBadCrc32;
  }
  HARDENED_CHECK_EQ(res, kErrorOk);
d000b150:       |  |     |  |  /----- 00b50663                  beq     a0,a1,d000b15c <alert_config_check+0xb6>
d000b154:       |  |     |  |  |      0000                      unimp
d000b156:       |  |     |  |  |      0000                      unimp
d000b158:       |  |     |  |  |      0000                      unimp
d000b15a:       |  |     |  |  |      0000                      unimp
d000b15c:       |  |     |  |  \--/-X a029                      j       d000b166 <alert_config_check+0xc0>
d000b15e:       |  |     |  \-----|-> 05415537                  lui     a0,0x5415
d000b162:       |  |     |        |   80350513                  addi    a0,a0,-2045 # 5414803 <_rom_ext_virtual_size+0x5394803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:341
  return res;
}
d000b166:       |  |     |        \-> 4492                      lw      s1,4(sp)
d000b168:       |  |     |            4422                      lw      s0,8(sp)
d000b16a:       |  |     |            40b2                      lw      ra,12(sp)
d000b16c:       |  |     |            0141                      addi    sp,sp,16
d000b16e:       |  |     |            8082                      ret
d000b170:       \--|-----|----------> b2866537                  lui     a0,0xb2866
d000b174:          |     |            fbb50613                  addi    a2,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000b178:          +-----|----------- 00c59c63                  bne     a1,a2,d000b190 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:307
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000b17c:          |     |        /-- 00c40663                  beq     s0,a2,d000b188 <alert_config_check+0xe2>
d000b180:          |     |        |   0000                      unimp
d000b182:          |     |        |   0000                      unimp
d000b184:          |     |        |   0000                      unimp
d000b186:          |     |        |   0000                      unimp
d000b188:          |     |        \-> 88250513                  addi    a0,a0,-1918
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:311
      res ^= crc32 ^ kMask;
d000b18c:          |     |            8d25                      xor     a0,a0,s1
d000b18e:          |     \----------- bf4d                      j       d000b140 <alert_config_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:334
      HARDENED_UNREACHABLE();
d000b190:          \----------------> 0000                      unimp
d000b192:                             0000                      unimp
d000b194:                             0000                      unimp
d000b196:                             0000                      unimp

d000b198 <crc32_init>:
crc32_init():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:18
   * CRC32 polynomial.
   */
  kCrc32Poly = 0xedb88320,
};

void crc32_init(uint32_t *ctx) { *ctx = UINT32_MAX; }
d000b198:       55fd                    li      a1,-1
d000b19a:       c10c                    sw      a1,0(a0)
d000b19c:       8082                    ret

d000b19e <crc32_add32>:
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:39
      *ctx ^= kCrc32Poly;
    }
  }
}

void crc32_add32(uint32_t *ctx, uint32_t word) {
d000b19e:                 1141                  addi    sp,sp,-16
d000b1a0:                 4681                  li      a3,0
d000b1a2:                 c62e                  sw      a1,12(sp)
d000b1a4:                 4110                  lw      a2,0(a0)
d000b1a6:                 edb88737              lui     a4,0xedb88
d000b1aa:                 32070713              addi    a4,a4,800 # edb88320 <_stack_end+0xdb68320>
d000b1ae:                 4891                  li      a7,4
d000b1b0:                 00c10813              addi    a6,sp,12
crc32_add8():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:29
  *ctx ^= byte;
d000b1b4:       /-------> 0ff5f593              andi    a1,a1,255
d000b1b8:       |         8e2d                  xor     a2,a2,a1
d000b1ba:       |         45a1                  li      a1,8
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:31
    bool lsb = *ctx & 1;
d000b1bc:       |  /----> 00167793              andi    a5,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:32
    *ctx >>= 1;
d000b1c0:       |  |      8205                  srli    a2,a2,0x1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:33
    if (lsb) {
d000b1c2:       |  |  /-- c391                  beqz    a5,d000b1c6 <crc32_add32+0x28>
d000b1c4:       |  |  |   8e39                  xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:30
  for (size_t i = 0; i < 8; ++i) {
d000b1c6:       |  |  \-> 15fd                  addi    a1,a1,-1
d000b1c8:       |  \----- f9f5                  bnez    a1,d000b1bc <crc32_add32+0x1e>
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:41
  char *bytes = (char *)&word;
  for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000b1ca:       |         0685                  addi    a3,a3,1
d000b1cc:       |     /-- 01168763              beq     a3,a7,d000b1da <crc32_add32+0x3c>
d000b1d0:       |     |   00d805b3              add     a1,a6,a3
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:42
    crc32_add8(ctx, bytes[i]);
d000b1d4:       |     |   0005c583              lbu     a1,0(a1)
d000b1d8:       \-----|-- bff1                  j       d000b1b4 <crc32_add32+0x16>
d000b1da:             \-> c110                  sw      a2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:44
  }
}
d000b1dc:                 0141                  addi    sp,sp,16
d000b1de:                 8082                  ret

d000b1e0 <crc32_finish>:
crc32_finish():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:64
  for (; len > 0; --len, ++data) {
    crc32_add8(ctx, *data);
  }
}

uint32_t crc32_finish(const uint32_t *ctx) { return *ctx ^ UINT32_MAX; }
d000b1e0:       4108                    lw      a0,0(a0)
d000b1e2:       fff54513                not     a0,a0
d000b1e6:       8082                    ret

d000b1e8 <ast_check>:
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:26

enum {
  kBase = TOP_EARLGREY_SENSOR_CTRL_BASE_ADDR,
};

rom_error_t ast_check(lifecycle_state_t lc_state) {
d000b1e8:                          1141                 addi    sp,sp,-16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b1ea:                          c606                 sw      ra,12(sp)
d000b1ec:                          85aa                 mv      a1,a0
d000b1ee:                          cf8d0637             lui     a2,0xcf8d0
d000b1f2:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  // In some lifecycle states we want to continue the boot process even if the
  // AST is not initialized. Note that in these states OTP may not have been
  // configured.
  switch (launder32(lc_state)) {
d000b1f6:                   /----- 02b6d363             bge     a3,a1,d000b21c <ast_check+0x34>
d000b1fa:                   |      aab60613             addi    a2,a2,-1365
d000b1fe:                /--|----- 02c58c63             beq     a1,a2,d000b236 <ast_check+0x4e>
d000b202:                |  |      0b5a7637             lui     a2,0xb5a7
d000b206:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000b20a:             /--|--|----- 04c59163             bne     a1,a2,d000b24c <ast_check+0x64>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:38
      return kErrorOk;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
      return kErrorOk;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000b20e:             |  |  |  /-- 00c50663             beq     a0,a2,d000b21a <ast_check+0x32>
d000b212:             |  |  |  |   0000                 unimp
d000b214:             |  |  |  |   0000                 unimp
d000b216:             |  |  |  |   0000                 unimp
d000b218:             |  |  |  |   0000                 unimp
d000b21a:          /--|--|--|--\-X a0a9                 j       d000b264 <ast_check+0x7c>
d000b21c:          |  |  |  \----> 91b9b637             lui     a2,0x91b9b
d000b220:          |  |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000b224:       /--|--|--|-------- 0ac59c63             bne     a1,a2,d000b2dc <ast_check+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:44
      break;
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000b228:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000b234 <ast_check+0x4c>
d000b22c:       |  |  |  |     |   0000                 unimp
d000b22e:       |  |  |  |     |   0000                 unimp
d000b230:       |  |  |  |     |   0000                 unimp
d000b232:       |  |  |  |     |   0000                 unimp
d000b234:       |  +--|--|-----\-X a805                 j       d000b264 <ast_check+0x7c>
d000b236:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000b23a:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:35
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000b23e:       |  |  |        /-- 00b50663             beq     a0,a1,d000b24a <ast_check+0x62>
d000b242:       |  |  |        |   0000                 unimp
d000b244:       |  |  |        |   0000                 unimp
d000b246:       |  |  |        |   0000                 unimp
d000b248:       |  |  |        |   0000                 unimp
d000b24a:       |  |  |  /-----\-X a06d                 j       d000b2f4 <ast_check+0x10c>
d000b24c:       |  |  \--|-------> 65f25637             lui     a2,0x65f25
d000b250:       |  |     |         20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000b254:       |  |  /--|-------- 0ac59563             bne     a1,a2,d000b2fe <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:41
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000b258:       |  +--|--|-------- 00c50663             beq     a0,a2,d000b264 <ast_check+0x7c>
d000b25c:       |  |  |  |         0000                 unimp
d000b25e:       |  |  |  |         0000                 unimp
d000b260:       |  |  |  |         0000                 unimp
d000b262:       |  |  |  |         0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:52
      HARDENED_UNREACHABLE();
  }

  // OTP can be configured to skip AST initialization. In this situation we do
  // not check that AST_INIT_DONE is set.
  uint32_t en = otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_AST_INIT_EN_OFFSET);
d000b264:       |  \--|--|-------> 0dc00513             li      a0,220
d000b268:       |     |  |         799020ef             jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b26c:       |     |  |         862a                 mv      a2,a0
d000b26e:       |     |  |         45a5                 li      a1,9
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:53
  if (launder32(en) == kMultiBitBool4False) {
d000b270:       |     |  |  /----- 00b61963             bne     a2,a1,d000b282 <ast_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:54
    HARDENED_CHECK_EQ(en, kMultiBitBool4False);
d000b274:       |     |  |  |  /-- 00b50663             beq     a0,a1,d000b280 <ast_check+0x98>
d000b278:       |     |  |  |  |   0000                 unimp
d000b27a:       |     |  |  |  |   0000                 unimp
d000b27c:       |     |  |  |  |   0000                 unimp
d000b27e:       |     |  |  |  |   0000                 unimp
d000b280:       |     |  +--|--\-X a895                 j       d000b2f4 <ast_check+0x10c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:62

  // AST initialization may take up to 100us. It is most likely already complete
  // at this point but for resilience poll for up to 100us.
  uint32_t mcycle;
  rom_error_t res = kErrorAstInitNotDone;
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000b282:       |     |  |  \----> b0001073             csrw    mcycle,zero
d000b286:       |     |  |         00005517             auipc   a0,0x5
d000b28a:       |     |  |         88250513             addi    a0,a0,-1918 # d000fb08 <kAstCheckPollCpuCycles>
d000b28e:       |     |  |         00052803             lw      a6,0(a0)
d000b292:       |     |  |         01415537             lui     a0,0x1415
d000b296:       |     |  |         30d50693             addi    a3,a0,781 # 141530d <_rom_ext_virtual_size+0x139530d>
d000b29a:       |     |  |         c0490637             lui     a2,0xc0490
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:64
  do {
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000b29e:       |     |  |  /----> b0002773             csrr    a4,mcycle
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b2a2:       |     |  |  |      5248                 lw      a0,36(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000b2a4:       |     |  |  |      00157793             andi    a5,a0,1
d000b2a8:       |     |  |  |      63100513             li      a0,1585
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:90

  // The code below reads the AST_INIT_DONE bit twice and modifies `res` with
  // the result of each attempt. `res` should be `kHardenedBoolTrue` if all
  // attempts return true.
  hardened_bool_t res = 0x631;
  res |= done_bit_get() << 3;
d000b2ac:       |     |  |  |  /-- c399                 beqz    a5,d000b2b2 <ast_check+0xca>
d000b2ae:       |     |  |  |  |   63900513             li      a0,1593
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b2b2:       |     |  |  |  \-> 525c                 lw      a5,36(a2)
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:91
  res |= done_bit_get() << 8;
d000b2b4:       |     |  |  |      07a2                 slli    a5,a5,0x8
d000b2b6:       |     |  |  |      1007f793             andi    a5,a5,256
d000b2ba:       |     |  |  |      00f565b3             or      a1,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:93

  if (res != kHardenedBoolTrue) {
d000b2be:       |     |  |  |      8c758793             addi    a5,a1,-1849
d000b2c2:       |     |  |  |      73900513             li      a0,1849
d000b2c6:       |     |  |  |      00f037b3             snez    a5,a5
d000b2ca:       |     |  |  |  /-- 00a58363             beq     a1,a0,d000b2d0 <ast_check+0xe8>
d000b2ce:       |     |  |  |  |   8536                 mv      a0,a3
d000b2d0:       |     |  |  |  \-> 010735b3             sltu    a1,a4,a6
d000b2d4:       |     |  |  |      8dfd                 and     a1,a1,a5
d000b2d6:       |     |  |  |      86aa                 mv      a3,a0
d000b2d8:       |     |  |  \----- f1f9                 bnez    a1,d000b29e <ast_check+0xb6>
d000b2da:       |     |  |     /-- a839                 j       d000b2f8 <ast_check+0x110>
d000b2dc:       \-----|--|-----|-> b2866637             lui     a2,0xb2866
d000b2e0:             |  |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000b2e4:             +--|-----|-- 00c59d63             bne     a1,a2,d000b2fe <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000b2e8:             |  +-----|-- 00c50663             beq     a0,a2,d000b2f4 <ast_check+0x10c>
d000b2ec:             |  |     |   0000                 unimp
d000b2ee:             |  |     |   0000                 unimp
d000b2f0:             |  |     |   0000                 unimp
d000b2f2:             |  |     |   0000                 unimp
d000b2f4:             |  \-----|-> 73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:75
}
d000b2f8:             |        \-> 40b2                 lw      ra,12(sp)
d000b2fa:             |            0141                 addi    sp,sp,16
d000b2fc:             |            8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:47
      HARDENED_UNREACHABLE();
d000b2fe:             \----------> 0000                 unimp
d000b300:                          0000                 unimp
d000b302:                          0000                 unimp
d000b304:                          0000                 unimp

d000b306 <flash_ctrl_init>:
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:295
  const info_cfg_regs_t regs = info_cfg_regs(info_page);
  sec_mmio_write32(regs.cfg_addr, 0);
  sec_mmio_write32(regs.cfg_wen_addr, 0);
}

void flash_ctrl_init(void) {
d000b306:       1101                    addi    sp,sp,-32
d000b308:       ce06                    sw      ra,28(sp)
d000b30a:       cc22                    sw      s0,24(sp)
d000b30c:       ca26                    sw      s1,20(sp)
d000b30e:       c84a                    sw      s2,16(sp)
d000b310:       c1000537                lui     a0,0xc1000
d000b314:       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b316:       cd0c                    sw      a1,24(a0)
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:305
  // Initialize the flash controller.
  abs_mmio_write32(kBase + FLASH_CTRL_INIT_REG_OFFSET,
                   bitfield_bit32_write(0, FLASH_CTRL_INIT_VAL_BIT, true));
  // Configure default scrambling, ECC, and HE settings for the data partition.
  uint32_t otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_DATA_DEFAULT_CFG_OFFSET);
d000b318:       0f000513                li      a0,240
d000b31c:       6e5020ef                jal     ra,d000e200 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000b320:       0ff57593                andi    a1,a0,255
d000b324:       00855613                srli    a2,a0,0x8
d000b328:       0ff67613                andi    a2,a2,255
d000b32c:       8141                    srli    a0,a0,0x10
d000b32e:       0ff57513                andi    a0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:312
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_data_default_cfg_set(data_default_cfg);
d000b332:       c02e                    sw      a1,0(sp)
d000b334:       c232                    sw      a2,4(sp)
d000b336:       c42a                    sw      a0,8(sp)
d000b338:       850a                    mv      a0,sp
d000b33a:       20b1                    jal     d000b386 <flash_ctrl_data_default_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:315
  // Configure scrambling, ECC, and HE for `boot_data` pages.
  otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_INFO_BOOT_DATA_CFG_OFFSET);
d000b33c:       0f400513                li      a0,244
d000b340:       6c1020ef                jal     ra,d000e200 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000b344:       0ff57913                andi    s2,a0,255
d000b348:       00855593                srli    a1,a0,0x8
d000b34c:       0ff5f493                andi    s1,a1,255
d000b350:       8141                    srli    a0,a0,0x10
d000b352:       0ff57413                andi    s0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:322
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData0, boot_data_cfg);
d000b356:       c04a                    sw      s2,0(sp)
d000b358:       c226                    sw      s1,4(sp)
d000b35a:       c422                    sw      s0,8(sp)
d000b35c:       fa38d537                lui     a0,0xfa38d
d000b360:       9f650513                addi    a0,a0,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000b364:       858a                    mv      a1,sp
d000b366:       209d                    jal     d000b3cc <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:323
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData1, boot_data_cfg);
d000b368:       c04a                    sw      s2,0(sp)
d000b36a:       c226                    sw      s1,4(sp)
d000b36c:       c422                    sw      s0,8(sp)
d000b36e:       389c4537                lui     a0,0x389c4
d000b372:       49e50513                addi    a0,a0,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
d000b376:       858a                    mv      a1,sp
d000b378:       2891                    jal     d000b3cc <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:324
}
d000b37a:       4942                    lw      s2,16(sp)
d000b37c:       44d2                    lw      s1,20(sp)
d000b37e:       4462                    lw      s0,24(sp)
d000b380:       40f2                    lw      ra,28(sp)
d000b382:       6105                    addi    sp,sp,32
d000b384:       8082                    ret

d000b386 <flash_ctrl_data_default_cfg_set>:
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:495
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
  sec_mmio_write32(cfg_addr, reg);
}

void flash_ctrl_data_default_cfg_set(flash_ctrl_cfg_t cfg) {
d000b386:       1141                    addi    sp,sp,-16
d000b388:       c606                    sw      ra,12(sp)
d000b38a:       c422                    sw      s0,8(sp)
d000b38c:       c226                    sw      s1,4(sp)
d000b38e:       842a                    mv      s0,a0
d000b390:       c1000537                lui     a0,0xc1000
d000b394:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:499
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioDataDefaultCfgSet, 1);

  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000b398:       8526                    mv      a0,s1
d000b39a:       6c9020ef                jal     ra,d000e262 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:501
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_SCRAMBLE_EN_FIELD,
                               cfg.scrambling);
d000b39e:       400c                    lw      a1,0(s0)
d000b3a0:       ff001637                lui     a2,0xff001
d000b3a4:       167d                    addi    a2,a2,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b3a6:       8d71                    and     a0,a0,a2
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b3a8:       05f2                    slli    a1,a1,0x1c
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:503
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_ECC_EN_FIELD,
                               cfg.ecc);
d000b3aa:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b3ac:       81c1                    srli    a1,a1,0x10
d000b3ae:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:505
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_HE_EN_FIELD,
                               cfg.he);
d000b3b0:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b3b2:       0672                    slli    a2,a2,0x1c
d000b3b4:       8231                    srli    a2,a2,0xc
d000b3b6:       8d51                    or      a0,a0,a2
d000b3b8:       05f2                    slli    a1,a1,0x1c
d000b3ba:       81a1                    srli    a1,a1,0x8
d000b3bc:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:506
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000b3be:       8526                    mv      a0,s1
d000b3c0:       4492                    lw      s1,4(sp)
d000b3c2:       4422                    lw      s0,8(sp)
d000b3c4:       40b2                    lw      ra,12(sp)
d000b3c6:       0141                    addi    sp,sp,16
d000b3c8:       74f0206f                j       d000e316 <sec_mmio_write32>

d000b3cc <flash_ctrl_info_cfg_set>:
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:510
}

void flash_ctrl_info_cfg_set(flash_ctrl_info_page_t info_page,
                             flash_ctrl_cfg_t cfg) {
d000b3cc:       1141                    addi    sp,sp,-16
d000b3ce:       c606                    sw      ra,12(sp)
d000b3d0:       c422                    sw      s0,8(sp)
d000b3d2:       c226                    sw      s1,4(sp)
d000b3d4:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:513
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioInfoCfgSet, 1);

  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000b3d6:       2535                    jal     d000ba02 <info_cfg_regs>
d000b3d8:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:515
  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000b3da:       852e                    mv      a0,a1
d000b3dc:       687020ef                jal     ra,d000e262 <sec_mmio_read32>
d000b3e0:       f00105b7                lui     a1,0xf0010
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:520
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_EN_0_FIELD, kMultiBitBool4True);
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_SCRAMBLE_EN_0_FIELD,
      cfg.scrambling);
d000b3e4:       4010                    lw      a2,0(s0)
d000b3e6:       15c1                    addi    a1,a1,-16
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b3e8:       8d6d                    and     a0,a0,a1
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:522
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ECC_EN_0_FIELD, cfg.ecc);
d000b3ea:       404c                    lw      a1,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b3ec:       0672                    slli    a2,a2,0x1c
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:524
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_HE_EN_0_FIELD, cfg.he);
d000b3ee:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b3f0:       8231                    srli    a2,a2,0xc
d000b3f2:       05f2                    slli    a1,a1,0x1c
d000b3f4:       81a1                    srli    a1,a1,0x8
d000b3f6:       06f2                    slli    a3,a3,0x1c
d000b3f8:       8291                    srli    a3,a3,0x4
d000b3fa:       8d51                    or      a0,a0,a2
d000b3fc:       8d4d                    or      a0,a0,a1
d000b3fe:       8d55                    or      a0,a0,a3
d000b400:       00656593                ori     a1,a0,6
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:525
  sec_mmio_write32(cfg_addr, reg);
d000b404:       8526                    mv      a0,s1
d000b406:       4492                    lw      s1,4(sp)
d000b408:       4422                    lw      s0,8(sp)
d000b40a:       40b2                    lw      ra,12(sp)
d000b40c:       0141                    addi    sp,sp,16
d000b40e:       7090206f                j       d000e316 <sec_mmio_write32>

d000b412 <transaction_start>:
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:87
  abs_mmio_write32(kBase + FLASH_CTRL_ADDR_REG_OFFSET, params.addr);
d000b412:                 410c                  lw      a1,0(a0)
d000b414:                 c1000637              lui     a2,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b418:                 d24c                  sw      a1,36(a2)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000b41a:                 4510                  lw      a2,8(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:90
      bitfield_bit32_read(params.partition, FLASH_CTRL_PARTITION_BIT_IS_INFO);
d000b41c:                 454c                  lw      a1,12(a0)
d000b41e:                 af0eb6b7              lui     a3,0xaf0eb
d000b422:                 b8b68693              addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000b426:          /----- 00d61b63              bne     a2,a3,d000b43c <transaction_start+0x2a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:100
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypePage);
d000b42a:          |      4518                  lw      a4,8(a0)
d000b42c:          |      4601                  li      a2,0
d000b42e:          |  /-- 00d70663              beq     a4,a3,d000b43a <transaction_start+0x28>
d000b432:          |  |   0000                  unimp
d000b434:          |  |   0000                  unimp
d000b436:          |  |   0000                  unimp
d000b438:          |  |   0000                  unimp
d000b43a:       /--|--\-X a005                  j       d000b45a <transaction_start+0x48>
d000b43c:       |  \----> 8032a6b7              lui     a3,0x8032a
d000b440:       |         be968693              addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000b444:       |  /----- 04d61163              bne     a2,a3,d000b486 <transaction_start+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:96
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypeBank);
d000b448:       |  |      4510                  lw      a2,8(a0)
d000b44a:       |  |  /-- 00d60663              beq     a2,a3,d000b456 <transaction_start+0x44>
d000b44e:       |  |  |   0000                  unimp
d000b450:       |  |  |   0000                  unimp
d000b452:       |  |  |   0000                  unimp
d000b454:       |  |  |   0000                  unimp
d000b456:       |  |  \-> 08000613              li      a2,128
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:108
      bitfield_field32_write(reg, FLASH_CTRL_CONTROL_OP_FIELD, params.op_type);
d000b45a:       \--|----> 4154                  lw      a3,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:115
                               params.word_count - 1);
d000b45c:          |      4908                  lw      a0,16(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b45e:          |      0692                  slli    a3,a3,0x4
d000b460:          |      0306f693              andi    a3,a3,48
d000b464:          |      05a2                  slli    a1,a1,0x8
d000b466:          |      0542                  slli    a0,a0,0x10
d000b468:          |      0fff0737              lui     a4,0xfff0
d000b46c:          |      953a                  add     a0,a0,a4
d000b46e:          |      8d79                  and     a0,a0,a4
d000b470:          |      7005f593              andi    a1,a1,1792
d000b474:          |      8dd1                  or      a1,a1,a2
d000b476:          |      8dd5                  or      a1,a1,a3
d000b478:          |      8d4d                  or      a0,a0,a1
d000b47a:          |      00156513              ori     a0,a0,1
d000b47e:          |      c10005b7              lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b482:          |      d188                  sw      a0,32(a1)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:117
}
d000b484:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:104
      HARDENED_UNREACHABLE();
d000b486:          \----> 0000                  unimp
d000b488:                 0000                  unimp
d000b48a:                 0000                  unimp
d000b48c:                 0000                  unimp

d000b48e <flash_ctrl_info_read>:
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:359
                                 void *data) {
d000b48e:              7179                     addi    sp,sp,-48
d000b490:              d606                     sw      ra,44(sp)
d000b492:              d422                     sw      s0,40(sp)
d000b494:              d226                     sw      s1,36(sp)
d000b496:              d04a                     sw      s2,32(sp)
d000b498:              8436                     mv      s0,a3
d000b49a:              84b2                     mv      s1,a2
d000b49c:              892e                     mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:360
  const uint32_t addr = info_page_addr(info_page) + offset;
d000b49e:              208d                     jal     d000b500 <info_page_addr>
d000b4a0:              954a                     add     a0,a0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:361
  transaction_start((transaction_params_t){
d000b4a2:              c42a                     sw      a0,8(sp)
d000b4a4:              c602                     sw      zero,12(sp)
d000b4a6:              af0eb537                 lui     a0,0xaf0eb
d000b4aa:              b8b50513                 addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b4ae:              c82a                     sw      a0,16(sp)
d000b4b0:              4505                     li      a0,1
d000b4b2:              ca2a                     sw      a0,20(sp)
d000b4b4:              cc26                     sw      s1,24(sp)
d000b4b6:              0028                     addi    a0,sp,8
d000b4b8:              3fa9                     jal     d000b412 <transaction_start>
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000b4ba:       /----- c889                     beqz    s1,d000b4cc <flash_ctrl_info_read+0x3e>
d000b4bc:       |      c1000537                 lui     a0,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b4c0:       |  /-> 1b052583                 lw      a1,432(a0) # c10001b0 <_stack_end+0xe0fe01b0>
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000b4c4:       |  |   c00c                     sw      a1,0(s0)
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
d000b4c6:       |  |   14fd                     addi    s1,s1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:130
    data = (char *)data + sizeof(uint32_t);
d000b4c8:       |  |   0411                     addi    s0,s0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000b4ca:       |  \-- f8fd                     bnez    s1,d000b4c0 <flash_ctrl_info_read+0x32>
d000b4cc:       \----> c10005b7                 lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b4d0:          /-> 16c5a503                 lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000b4d4:          |   00157613                 andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b4d8:          \-- de65                     beqz    a2,d000b4d0 <flash_ctrl_info_read+0x42>
d000b4da:              c10005b7                 lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b4de:              1605a623                 sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b4e2:              00257593                 andi    a1,a0,2
d000b4e6:              73900513                 li      a0,1849
d000b4ea:          /-- c589                     beqz    a1,d000b4f4 <flash_ctrl_info_read+0x66>
d000b4ec:          |   02464537                 lui     a0,0x2464
d000b4f0:          |   30d50513                 addi    a0,a0,781 # 246430d <_rom_ext_virtual_size+0x23e430d>
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:370
  return wait_for_done(kErrorFlashCtrlInfoRead);
d000b4f4:          \-> 5902                     lw      s2,32(sp)
d000b4f6:              5492                     lw      s1,36(sp)
d000b4f8:              5422                     lw      s0,40(sp)
d000b4fa:              50b2                     lw      ra,44(sp)
d000b4fc:              6145                     addi    sp,sp,48
d000b4fe:              8082                     ret

d000b500 <info_page_addr>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b500:                                                        85aa                   mv      a1,a0
d000b502:                                                        f56af637               lui     a2,0xf56af
d000b506:                                                        4ba60613               addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_page_addr():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b50a:                                                 /----- 04b64063               blt     a2,a1,d000b54a <info_page_addr+0x4a>
d000b50e:                                                 |      ad887637               lui     a2,0xad887
d000b512:                                                 |      d3a60613               addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b516:                                              /--|----- 06b64863               blt     a2,a1,d000b586 <info_page_addr+0x86>
d000b51a:                                              |  |      a4f6f637               lui     a2,0xa4f6f
d000b51e:                                              |  |      6c260693               addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b522:                                        /-----|--|----- 0cb6d363               bge     a3,a1,d000b5e8 <info_page_addr+0xe8>
d000b526:                                        |     |  |      6c360613               addi    a2,a2,1731
d000b52a:                            /-----------|-----|--|----- 12c58963               beq     a1,a2,d000b65c <info_page_addr+0x15c>
d000b52e:                            |           |     |  |      ad3b6637               lui     a2,0xad3b6
d000b532:                            |           |     |  |      bee60613               addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b536:             /--------------|-----------|-----|--|----- 18c59563               bne     a1,a2,d000b6c0 <info_page_addr+0x1c0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b53a:             |              |           |     |  |  /-- 00c50663               beq     a0,a2,d000b546 <info_page_addr+0x46>
d000b53e:             |              |           |     |  |  |   0000                   unimp
d000b540:             |              |           |     |  |  |   0000                   unimp
d000b542:             |              |           |     |  |  |   0000                   unimp
d000b544:             |              |           |     |  |  |   0000                   unimp
d000b546:             |              |           |     |  |  \-> 6589                   lui     a1,0x2
d000b548:       /-----|--------------|-----------|-----|--|----- a495                   j       d000b7ac <info_page_addr+0x2ac>
d000b54a:       |     |              |           |     |  \----> 238cf637               lui     a2,0x238cf
d000b54e:       |     |              |           |     |         15b60613               addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2384f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b552:       |     |              |           |     |  /----- 06b64363               blt     a2,a1,d000b5b8 <info_page_addr+0xb8>
d000b556:       |     |              |           |     |  |      fa38d637               lui     a2,0xfa38d
d000b55a:       |     |              |           |     |  |      9f560693               addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b55e:       |     |              |           |  /--|--|----- 0ab6d363               bge     a3,a1,d000b604 <info_page_addr+0x104>
d000b562:       |     |              |           |  |  |  |      9f660613               addi    a2,a2,-1546
d000b566:       |     |              |  /--------|--|--|--|----- 10c58763               beq     a1,a2,d000b674 <info_page_addr+0x174>
d000b56a:       |     |              |  |        |  |  |  |      10adc637               lui     a2,0x10adc
d000b56e:       |     |              |  |        |  |  |  |      6aa60613               addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a5c6aa>
d000b572:       |     |  /-----------|--|--------|--|--|--|----- 16c59663               bne     a1,a2,d000b6de <info_page_addr+0x1de>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b576:       |     |  |           |  |        |  |  |  |  /-- 00c50663               beq     a0,a2,d000b582 <info_page_addr+0x82>
d000b57a:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b57c:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b57e:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b580:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b582:       |     |  |           |  |        |  |  |  |  \-> 6585                   lui     a1,0x1
d000b584:       +-----|--|-----------|--|--------|--|--|--|----- a425                   j       d000b7ac <info_page_addr+0x2ac>
d000b586:       |     |  |           |  |        |  |  \--|----> e3ffb637               lui     a2,0xe3ffb
d000b58a:       |     |  |           |  |        |  |     |      c8560693               addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b58e:       |     |  |           |  |        |  |  /--|----- 08b6d963               bge     a3,a1,d000b620 <info_page_addr+0x120>
d000b592:       |     |  |           |  |        |  |  |  |      c8660613               addi    a2,a2,-890
d000b596:       |     |  |           |  |  /-----|--|--|--|----- 0ec58c63               beq     a1,a2,d000b68e <info_page_addr+0x18e>
d000b59a:       |     |  |           |  |  |     |  |  |  |      ec309637               lui     a2,0xec309
d000b59e:       |     |  |           |  |  |     |  |  |  |      46160613               addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b5a2:       |     |  |  /--------|--|--|-----|--|--|--|----- 14c59c63               bne     a1,a2,d000b6fa <info_page_addr+0x1fa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b5a6:       |     |  |  |        |  |  |     |  |  |  |  /-- 00c50663               beq     a0,a2,d000b5b2 <info_page_addr+0xb2>
d000b5aa:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b5ac:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b5ae:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b5b0:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b5b2:       |     |  |  |        |  |  |     |  |  |  |  \-> 00085537               lui     a0,0x85
d000b5b6:       |  /--|--|--|--------|--|--|-----|--|--|--|----- aacd                   j       d000b7a8 <info_page_addr+0x2a8>
d000b5b8:       |  |  |  |  |        |  |  |     |  |  |  \----> 5f072637               lui     a2,0x5f072
d000b5bc:       |  |  |  |  |        |  |  |     |  |  |         77d60693               addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b5c0:       |  |  |  |  |        |  |  |     |  |  |  /----- 06b6df63               bge     a3,a1,d000b63e <info_page_addr+0x13e>
d000b5c4:       |  |  |  |  |        |  |  |     |  |  |  |      77e60613               addi    a2,a2,1918
d000b5c8:       |  |  |  |  |        |  |  |  /--|--|--|--|----- 0ec58063               beq     a1,a2,d000b6a8 <info_page_addr+0x1a8>
d000b5cc:       |  |  |  |  |        |  |  |  |  |  |  |  |      6c86e637               lui     a2,0x6c86e
d000b5d0:       |  |  |  |  |        |  |  |  |  |  |  |  |      98060613               addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b5d4:       |  |  |  |  |     /--|--|--|--|--|--|--|--|----- 14c59263               bne     a1,a2,d000b718 <info_page_addr+0x218>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b5d8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b5e4 <info_page_addr+0xe4>
d000b5dc:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5de:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5e0:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5e2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5e4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6511                   lui     a0,0x4
d000b5e6:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a2c9                   j       d000b7a8 <info_page_addr+0x2a8>
d000b5e8:       |  |  |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637               lui     a2,0x9dc42
d000b5ec:       |  |  |  |  |     |  |  |  |  |     |  |  |      c3360613               addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b5f0:       |  |  |  |  |     |  |  |  |  |  /--|--|--|----- 14c59363               bne     a1,a2,d000b736 <info_page_addr+0x236>
d000b5f4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |      4581                   li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b5f6:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b602 <info_page_addr+0x102>
d000b5fa:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5fc:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b5fe:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b600:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b602:       +--|--|--|--|-----|--|--|--|--|--|--|--|--|--\-X a26d                   j       d000b7ac <info_page_addr+0x2ac>
d000b604:       |  |  |  |  |     |  |  |  |  |  |  \--|--|----> f56af637               lui     a2,0xf56af
d000b608:       |  |  |  |  |     |  |  |  |  |  |     |  |      4bb60613               addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b60c:       |  |  |  |  |     |  |  |  |  |  |  /--|--|----- 14c59463               bne     a1,a2,d000b754 <info_page_addr+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b610:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b61c <info_page_addr+0x11c>
d000b614:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b616:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b618:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b61a:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b61c:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6505                   lui     a0,0x1
d000b61e:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a269                   j       d000b7a8 <info_page_addr+0x2a8>
d000b620:       |  |  |  |  |     |  |  |  |  |  |  |  \--|----> ad887637               lui     a2,0xad887
d000b624:       |  |  |  |  |     |  |  |  |  |  |  |     |      d3b60613               addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b628:       |  |  |  |  |  /--|--|--|--|--|--|--|-----|----- 14c59463               bne     a1,a2,d000b770 <info_page_addr+0x270>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b62c:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  /-- 00c50663               beq     a0,a2,d000b638 <info_page_addr+0x138>
d000b630:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b632:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b634:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b636:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b638:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  \-> 00082537               lui     a0,0x82
d000b63c:       |  +--|--|--|--|--|--|--|--|--|--|--|-----|----- a2b5                   j       d000b7a8 <info_page_addr+0x2a8>
d000b63e:       |  |  |  |  |  |  |  |  |  |  |  |  |     \----> 238cf637               lui     a2,0x238cf
d000b642:       |  |  |  |  |  |  |  |  |  |  |  |  |            15c60613               addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2384f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b646:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------- 14c59363               bne     a1,a2,d000b78c <info_page_addr+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b64a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663               beq     a0,a2,d000b656 <info_page_addr+0x156>
d000b64e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b650:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b652:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b654:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b656:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     \-> 000815b7               lui     a1,0x81
d000b65a:       +--|--|--|--|--|--|--|--|--|--|--|--|--|-------- aa89                   j       d000b7ac <info_page_addr+0x2ac>
d000b65c:       |  |  |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7               lui     a1,0xa4f6f
d000b660:       |  |  |  |  |  |  |     |  |  |  |  |  |         6c358593               addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
d000b664:       |  |  |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b670 <info_page_addr+0x170>
d000b668:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b66a:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b66c:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b66e:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b670:       |  |  |  |  |  |  |     |  |  |  |  |  |     \-> 650d                   lui     a0,0x3
d000b672:       |  +--|--|--|--|--|-----|--|--|--|--|--|-------- aa1d                   j       d000b7a8 <info_page_addr+0x2a8>
d000b674:       |  |  |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7               lui     a1,0xfa38d
d000b678:       |  |  |  |  |  |  |        |  |  |  |  |         9f658593               addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000b67c:       |  |  |  |  |  |  |        |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b688 <info_page_addr+0x188>
d000b680:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b682:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b684:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b686:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b688:       |  |  |  |  |  |  |        |  |  |  |  |     \-> 000805b7               lui     a1,0x80
d000b68c:       +--|--|--|--|--|--|--------|--|--|--|--|-------- a205                   j       d000b7ac <info_page_addr+0x2ac>
d000b68e:       |  |  |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7               lui     a1,0xe3ffb
d000b692:       |  |  |  |  |  |  |           |  |  |  |         c8658593               addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
d000b696:       |  |  |  |  |  |  |           |  |  |  |     /-- 00b50663               beq     a0,a1,d000b6a2 <info_page_addr+0x1a2>
d000b69a:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b69c:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b69e:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b6a0:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b6a2:       |  |  |  |  |  |  |           |  |  |  |     \-> 000835b7               lui     a1,0x83
d000b6a6:       +--|--|--|--|--|--|-----------|--|--|--|-------- a219                   j       d000b7ac <info_page_addr+0x2ac>
d000b6a8:       |  |  |  |  |  |  |           \--|--|--|-------> 5f0725b7               lui     a1,0x5f072
d000b6ac:       |  |  |  |  |  |  |              |  |  |         77e58593               addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
d000b6b0:       |  |  |  |  |  |  |              |  |  |     /-- 00b50663               beq     a0,a1,d000b6bc <info_page_addr+0x1bc>
d000b6b4:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b6b6:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b6b8:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b6ba:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b6bc:       |  |  |  |  |  |  |              |  |  |     \-> 6515                   lui     a0,0x5
d000b6be:       |  +--|--|--|--|--|--------------|--|--|-------- a0ed                   j       d000b7a8 <info_page_addr+0x2a8>
d000b6c0:       |  |  \--|--|--|--|--------------|--|--|-------> ad5dd637               lui     a2,0xad5dd
d000b6c4:       |  |     |  |  |  |              |  |  |         31d60613               addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b6c8:       |  |     |  |  |  |              |  |  |  /----- 0ec59463               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b6cc:       |  |     |  |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b6d8 <info_page_addr+0x1d8>
d000b6d0:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b6d2:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b6d4:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b6d6:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b6d8:       |  |     |  |  |  |              |  |  |  |  \-> 00083537               lui     a0,0x83
d000b6dc:       |  +-----|--|--|--|--------------|--|--|--|----- a0f1                   j       d000b7a8 <info_page_addr+0x2a8>
d000b6de:       |  |     \--|--|--|--------------|--|--|--|----> 118b6637               lui     a2,0x118b6
d000b6e2:       |  |        |  |  |              |  |  |  |      dbb60613               addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11835dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b6e6:       |  |        |  |  |              |  |  |  +----- 0cc59563               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b6ea:       |  |        |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b6f6 <info_page_addr+0x1f6>
d000b6ee:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b6f0:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b6f2:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b6f4:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b6f6:       |  |        |  |  |              |  |  |  |  \-> 6509                   lui     a0,0x2
d000b6f8:       |  +--------|--|--|--------------|--|--|--|----- a845                   j       d000b7a8 <info_page_addr+0x2a8>
d000b6fa:       |  |        \--|--|--------------|--|--|--|----> f4f49637               lui     a2,0xf4f49
d000b6fe:       |  |           |  |              |  |  |  |      c3d60613               addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b702:       |  |           |  |              |  |  |  +----- 0ac59763               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b706:       |  |           |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b712 <info_page_addr+0x212>
d000b70a:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b70c:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b70e:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b710:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b712:       |  |           |  |              |  |  |  |  \-> 00084537               lui     a0,0x84
d000b716:       |  +-----------|--|--------------|--|--|--|----- a849                   j       d000b7a8 <info_page_addr+0x2a8>
d000b718:       |  |           |  \--------------|--|--|--|----> 7dfbe637               lui     a2,0x7dfbe
d000b71c:       |  |           |                 |  |  |  |      f9b60613               addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b720:       |  |           |                 |  |  |  +----- 08c59863               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b724:       |  |           |                 |  |  |  |  /-- 00c50663               beq     a0,a2,d000b730 <info_page_addr+0x230>
d000b728:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b72a:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b72c:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b72e:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b730:       |  |           |                 |  |  |  |  \-> 000825b7               lui     a1,0x82
d000b734:       +--|-----------|-----------------|--|--|--|----- a8a5                   j       d000b7ac <info_page_addr+0x2ac>
d000b736:       |  |           |                 \--|--|--|----> 9fbb8637               lui     a2,0x9fbb8
d000b73a:       |  |           |                    |  |  |      40e60613               addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b73e:       |  |           |                    |  |  +----- 06c59963               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b742:       |  |           |                    |  |  |  /-- 00c50663               beq     a0,a2,d000b74e <info_page_addr+0x24e>
d000b746:       |  |           |                    |  |  |  |   0000                   unimp
d000b748:       |  |           |                    |  |  |  |   0000                   unimp
d000b74a:       |  |           |                    |  |  |  |   0000                   unimp
d000b74c:       |  |           |                    |  |  |  |   0000                   unimp
d000b74e:       |  |           |                    |  |  |  \-> 000845b7               lui     a1,0x84
d000b752:       +--|-----------|--------------------|--|--|----- a8a9                   j       d000b7ac <info_page_addr+0x2ac>
d000b754:       |  |           |                    \--|--|----> f646f637               lui     a2,0xf646f
d000b758:       |  |           |                       |  |      11b60613               addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b75c:       |  |           |                       |  +----- 04c59a63               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b760:       |  |           |                       |  |  /-- 00c50663               beq     a0,a2,d000b76c <info_page_addr+0x26c>
d000b764:       |  |           |                       |  |  |   0000                   unimp
d000b766:       |  |           |                       |  |  |   0000                   unimp
d000b768:       |  |           |                       |  |  |   0000                   unimp
d000b76a:       |  |           |                       |  |  |   0000                   unimp
d000b76c:       |  |           |                       |  |  \-> 658d                   lui     a1,0x3
d000b76e:       +--|-----------|-----------------------|--|----- a83d                   j       d000b7ac <info_page_addr+0x2ac>
d000b770:       |  |           \-----------------------|--|----> dd7f3637               lui     a2,0xdd7f3
d000b774:       |  |                                   |  |      4dc60613               addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b778:       |  |                                   |  +----- 02c59c63               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b77c:       |  |                                   |  |  /-- 00c50663               beq     a0,a2,d000b788 <info_page_addr+0x288>
d000b780:       |  |                                   |  |  |   0000                   unimp
d000b782:       |  |                                   |  |  |   0000                   unimp
d000b784:       |  |                                   |  |  |   0000                   unimp
d000b786:       |  |                                   |  |  |   0000                   unimp
d000b788:       |  |                                   |  |  \-> 6591                   lui     a1,0x4
d000b78a:       +--|-----------------------------------|--|----- a00d                   j       d000b7ac <info_page_addr+0x2ac>
d000b78c:       |  |                                   \--|----> 389c4637               lui     a2,0x389c4
d000b790:       |  |                                      |      49e60613               addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b794:       |  |                                      +----- 00c59e63               bne     a1,a2,d000b7b0 <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b798:       |  |                                      |  /-- 00c50663               beq     a0,a2,d000b7a4 <info_page_addr+0x2a4>
d000b79c:       |  |                                      |  |   0000                   unimp
d000b79e:       |  |                                      |  |   0000                   unimp
d000b7a0:       |  |                                      |  |   0000                   unimp
d000b7a2:       |  |                                      |  |   0000                   unimp
d000b7a4:       |  |                                      |  \-> 00081537               lui     a0,0x81
d000b7a8:       |  \--------------------------------------|----> 80050593               addi    a1,a0,-2048 # 80800 <_rom_ext_virtual_size+0x800>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:234
}
d000b7ac:       \-----------------------------------------|----> 852e                   mv      a0,a1
d000b7ae:                                                 |      8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:230
      HARDENED_UNREACHABLE();
d000b7b0:                                                 \----> 0000                   unimp
d000b7b2:                                                        0000                   unimp
d000b7b4:                                                        0000                   unimp
d000b7b6:                                                        0000                   unimp

d000b7b8 <flash_ctrl_data_write>:
flash_ctrl_data_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:374
                                  const void *data) {
d000b7b8:       034646b7                lui     a3,0x3464
d000b7bc:       30d68713                addi    a4,a3,781 # 346430d <_rom_ext_virtual_size+0x33e430d>
d000b7c0:       86b2                    mv      a3,a2
d000b7c2:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:375
  return write(addr, kFlashCtrlPartitionData, word_count, data,
d000b7c4:       4581                    li      a1,0
d000b7c6:       a009                    j       d000b7c8 <write>

d000b7c8 <write>:
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:180
                         rom_error_t error) {
d000b7c8:                    7139                       addi    sp,sp,-64
d000b7ca:                    de06                       sw      ra,60(sp)
d000b7cc:                    dc22                       sw      s0,56(sp)
d000b7ce:                    da26                       sw      s1,52(sp)
d000b7d0:                    d84a                       sw      s2,48(sp)
d000b7d2:                    d64e                       sw      s3,44(sp)
d000b7d4:                    d452                       sw      s4,40(sp)
d000b7d6:                    d256                       sw      s5,36(sp)
d000b7d8:                    d05a                       sw      s6,32(sp)
d000b7da:                    ce5e                       sw      s7,28(sp)
d000b7dc:                    cc62                       sw      s8,24(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b7de:       /----------- ce35                       beqz    a2,d000b85a <write+0x92>
d000b7e0:       |            893a                       mv      s2,a4
d000b7e2:       |            8a36                       mv      s4,a3
d000b7e4:       |            8432                       mv      s0,a2
d000b7e6:       |            89ae                       mv      s3,a1
d000b7e8:       |            8baa                       mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:187
      kWindowWordCount - ((addr / sizeof(uint32_t)) % kWindowWordCount);
d000b7ea:       |            8109                       srli    a0,a0,0x2
d000b7ec:       |            893d                       andi    a0,a0,15
d000b7ee:       |            45c1                       li      a1,16
d000b7f0:       |            40a58533           sub     a0,a1,a0
d000b7f4:       |            4a85                       li      s5,1
d000b7f6:       |            af0eb5b7           lui     a1,0xaf0eb
d000b7fa:       |            b8b58b13           addi    s6,a1,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b7fe:       |            c10004b7           lui     s1,0xc1000
d000b802:       |  /-------> 8c22                       mv      s8,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:191
        word_count < window_word_count ? word_count : window_word_count;
d000b804:       |  |     /-- 00a46363           bltu    s0,a0,d000b80a <write+0x42>
d000b808:       |  |     |   8c2a                       mv      s8,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:193
    transaction_start((transaction_params_t){
d000b80a:       |  |     \-> c05e                       sw      s7,0(sp)
d000b80c:       |  |         c256                       sw      s5,4(sp)
d000b80e:       |  |         c45a                       sw      s6,8(sp)
d000b810:       |  |         c64e                       sw      s3,12(sp)
d000b812:       |  |         c862                       sw      s8,16(sp)
d000b814:       |  |         850a                       mv      a0,sp
d000b816:       |  |         3ef5                       jal     d000b412 <transaction_start>
d000b818:       |  |         8562                       mv      a0,s8
d000b81a:       |  |         85d2                       mv      a1,s4
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000b81c:       |  |     /-> 4190                       lw      a2,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b81e:       |  |     |   1ac4a623           sw      a2,428(s1) # c10001ac <_stack_end+0xe0fe01ac>
fifo_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b822:       |  |     |   157d                       addi    a0,a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:145
    data = (const char *)data + sizeof(uint32_t);
d000b824:       |  |     |   0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b826:       |  |     \-- f97d                       bnez    a0,d000b81c <write+0x54>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b828:       |  |     /-> 16c4a503           lw      a0,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b82c:       |  |     |   00157593           andi    a1,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b830:       |  |     \-- dde5                       beqz    a1,d000b828 <write+0x60>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b832:       |  |         1604a623           sw      zero,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b836:       |  |         00257613           andi    a2,a0,2
d000b83a:       |  |         73900593           li      a1,1849
d000b83e:       |  |         73900513           li      a0,1849
d000b842:       |  |     /-- c211                       beqz    a2,d000b846 <write+0x7e>
d000b844:       |  |     |   854a                       mv      a0,s2
d000b846:       |  |  /--\-X 00b51c63           bne     a0,a1,d000b85e <write+0x96>
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:205
    addr += window_word_count * sizeof(uint32_t);
d000b84a:       |  |  |      002c1513           slli    a0,s8,0x2
d000b84e:       |  |  |      9baa                       add     s7,s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:206
    data = (const char *)data + window_word_count * sizeof(uint32_t);
d000b850:       |  |  |      9a2a                       add     s4,s4,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:207
    word_count -= window_word_count;
d000b852:       |  |  |      41840433           sub     s0,s0,s8
d000b856:       |  |  |      4541                       li      a0,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b858:       |  \--|----- f44d                       bnez    s0,d000b802 <write+0x3a>
d000b85a:       \-----|----> 73900513           li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:212
}
d000b85e:             \----> 4c62                       lw      s8,24(sp)
d000b860:                    4bf2                       lw      s7,28(sp)
d000b862:                    5b02                       lw      s6,32(sp)
d000b864:                    5a92                       lw      s5,36(sp)
d000b866:                    5a22                       lw      s4,40(sp)
d000b868:                    59b2                       lw      s3,44(sp)
d000b86a:                    5942                       lw      s2,48(sp)
d000b86c:                    54d2                       lw      s1,52(sp)
d000b86e:                    5462                       lw      s0,56(sp)
d000b870:                    50f2                       lw      ra,60(sp)
d000b872:                    6121                       addi    sp,sp,64
d000b874:                    8082                       ret

d000b876 <flash_ctrl_data_erase>:
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:388
                                  flash_ctrl_erase_type_t erase_type) {
d000b876:           1101                        addi    sp,sp,-32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:389
  transaction_start((transaction_params_t){
d000b878:           ce06                        sw      ra,28(sp)
d000b87a:           c42a                        sw      a0,8(sp)
d000b87c:           4509                        li      a0,2
d000b87e:           c62a                        sw      a0,12(sp)
d000b880:           c82e                        sw      a1,16(sp)
d000b882:           ca02                        sw      zero,20(sp)
d000b884:           4505                        li      a0,1
d000b886:           cc2a                        sw      a0,24(sp)
d000b888:           0028                        addi    a0,sp,8
d000b88a:           b89ff0ef            jal     ra,d000b412 <transaction_start>
d000b88e:           c10005b7            lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b892:       /-> 16c5a503            lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b896:       |   00157613            andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b89a:       \-- de65                        beqz    a2,d000b892 <flash_ctrl_data_erase+0x1c>
d000b89c:           c10005b7            lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b8a0:           1605a623            sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b8a4:           00257593            andi    a1,a0,2
d000b8a8:           73900513            li      a0,1849
d000b8ac:       /-- c589                        beqz    a1,d000b8b6 <flash_ctrl_data_erase+0x40>
d000b8ae:       |   05464537            lui     a0,0x5464
d000b8b2:       |   30d50513            addi    a0,a0,781 # 546430d <_rom_ext_virtual_size+0x53e430d>
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:397
  return wait_for_done(kErrorFlashCtrlDataErase);
d000b8b6:       \-> 40f2                        lw      ra,28(sp)
d000b8b8:           6105                        addi    sp,sp,32
d000b8ba:           8082                        ret

d000b8bc <flash_ctrl_data_erase_verify>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b8bc:                    862e                       mv      a2,a1
d000b8be:                    af0eb6b7           lui     a3,0xaf0eb
d000b8c2:                    b8b68693           addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b8c6:             /----- 00d61e63           bne     a2,a3,d000b8e2 <flash_ctrl_data_erase_verify+0x26>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:416
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypePage);
d000b8ca:             |  /-- 00d58663           beq     a1,a3,d000b8d6 <flash_ctrl_data_erase_verify+0x1a>
d000b8ce:             |  |   0000                       unimp
d000b8d0:             |  |   0000                       unimp
d000b8d2:             |  |   0000                       unimp
d000b8d4:             |  |   0000                       unimp
d000b8d6:             |  \-> 0c600593           li      a1,198
d000b8da:             |      6605                       lui     a2,0x1
d000b8dc:             |      80060893           addi    a7,a2,-2048 # 800 <_epmp_reset_rx_size>
d000b8e0:          /--|----- a00d                       j       d000b902 <flash_ctrl_data_erase_verify+0x46>
d000b8e2:          |  \----> 8032a6b7           lui     a3,0x8032a
d000b8e6:          |         be968693           addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b8ea:       /--|-------- 06d61d63           bne     a2,a3,d000b964 <flash_ctrl_data_erase_verify+0xa8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:411
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypeBank);
d000b8ee:       |  |     /-- 00d58663           beq     a1,a3,d000b8fa <flash_ctrl_data_erase_verify+0x3e>
d000b8f2:       |  |     |   0000                       unimp
d000b8f4:       |  |     |   0000                       unimp
d000b8f6:       |  |     |   0000                       unimp
d000b8f8:       |  |     |   0000                       unimp
d000b8fa:       |  |     \-> 000808b7           lui     a7,0x80
d000b8fe:       |  |         8c688593           addi    a1,a7,-1850 # 7f8c6 <WDOG_BARK_THOLD+0x489de>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b902:       |  \-------> 4701                       li      a4,0
d000b904:       |            587d                       li      a6,-1
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b906:       |     /----- 03177463           bgeu    a4,a7,d000b92e <flash_ctrl_data_erase_verify+0x72>
d000b90a:       |     |      4701                       li      a4,0
d000b90c:       |     |      411007b3           neg     a5,a7
d000b910:       |     |      8d7d                       and     a0,a0,a5
d000b912:       |     |      f00007b7           lui     a5,0xf0000
d000b916:       |     |      97aa                       add     a5,a5,a0
d000b918:       |     |      557d                       li      a0,-1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b91a:       |     |  /-> 00e786b3           add     a3,a5,a4
d000b91e:       |     |  |   4294                       lw      a3,0(a3)
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
d000b920:       |     |  |   0711                       addi    a4,a4,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:431
    mask &= word;
d000b922:       |     |  |   8d75                       and     a0,a0,a3
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b924:       |     |  |   863a                       mv      a2,a4
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:432
    error &= word;
d000b926:       |     |  |   8df5                       and     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b928:       |     |  \-- ff1669e3           bltu    a2,a7,d000b91a <flash_ctrl_data_erase_verify+0x5e>
d000b92c:       |     |  /-- a019                       j       d000b932 <flash_ctrl_data_erase_verify+0x76>
d000b92e:       |     \--|-> 4701                       li      a4,0
d000b930:       |        |   557d                       li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:434
  HARDENED_CHECK_EQ(i, byte_count);
d000b932:       |     /--\-X 01170663           beq     a4,a7,d000b93e <flash_ctrl_data_erase_verify+0x82>
d000b936:       |     |      0000                       unimp
d000b938:       |     |      0000                       unimp
d000b93a:       |     |      0000                       unimp
d000b93c:       |     |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b93e:       |     \----> 862a                       mv      a2,a0
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:436
  if (launder32(mask) == kFlashCtrlErasedWord) {
d000b940:       |        /-- 01060763           beq     a2,a6,d000b94e <flash_ctrl_data_erase_verify+0x92>
d000b944:       |        |   07464537           lui     a0,0x7464
d000b948:       |        |   30d50513           addi    a0,a0,781 # 746430d <_rom_ext_virtual_size+0x73e430d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b94c:       |        |   8082                       ret
d000b94e:       |        \-> 567d                       li      a2,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:437
    HARDENED_CHECK_EQ(mask, kFlashCtrlErasedWord);
d000b950:       |        /-- 00c50663           beq     a0,a2,d000b95c <flash_ctrl_data_erase_verify+0xa0>
d000b954:       |        |   0000                       unimp
d000b956:       |        |   0000                       unimp
d000b958:       |        |   0000                       unimp
d000b95a:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:438
    return error ^ (byte_count - 1);
d000b95c:       |        \-> fff88513           addi    a0,a7,-1
d000b960:       |            8d2d                       xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b962:       |            8082                       ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:421
      HARDENED_UNREACHABLE();
d000b964:       \----------> 0000                       unimp
d000b966:                    0000                       unimp
d000b968:                    0000                       unimp
d000b96a:                    0000                       unimp

d000b96c <flash_ctrl_exec_set>:
flash_ctrl_exec_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:458
void flash_ctrl_exec_set(uint32_t exec_val) {
d000b96c:       c10005b7                lui     a1,0xc1000
d000b970:       05d1                    addi    a1,a1,20
d000b972:       862a                    mv      a2,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:460
  sec_mmio_write32(kBase + FLASH_CTRL_EXEC_REG_OFFSET, exec_val);
d000b974:       852e                    mv      a0,a1
d000b976:       85b2                    mv      a1,a2
d000b978:       19f0206f                j       d000e316 <sec_mmio_write32>

d000b97c <flash_ctrl_data_default_perms_set>:
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:463
void flash_ctrl_data_default_perms_set(flash_ctrl_perms_t perms) {
d000b97c:       1141                    addi    sp,sp,-16
d000b97e:       c606                    sw      ra,12(sp)
d000b980:       c422                    sw      s0,8(sp)
d000b982:       c226                    sw      s1,4(sp)
d000b984:       842a                    mv      s0,a0
d000b986:       c1000537                lui     a0,0xc1000
d000b98a:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:467
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000b98e:       8526                    mv      a0,s1
d000b990:       0d3020ef                jal     ra,d000e262 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:469
                               perms.read);
d000b994:       400c                    lw      a1,0(s0)
d000b996:       767d                    lui     a2,0xfffff
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b998:       8d71                    and     a0,a0,a2
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:471
                               perms.write);
d000b99a:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b99c:       89bd                    andi    a1,a1,15
d000b99e:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:473
                               perms.erase);
d000b9a0:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b9a2:       0612                    slli    a2,a2,0x4
d000b9a4:       0f067613                andi    a2,a2,240
d000b9a8:       8d51                    or      a0,a0,a2
d000b9aa:       05f2                    slli    a1,a1,0x1c
d000b9ac:       81d1                    srli    a1,a1,0x14
d000b9ae:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:474
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000b9b0:       8526                    mv      a0,s1
d000b9b2:       4492                    lw      s1,4(sp)
d000b9b4:       4422                    lw      s0,8(sp)
d000b9b6:       40b2                    lw      ra,12(sp)
d000b9b8:       0141                    addi    sp,sp,16
d000b9ba:       15d0206f                j       d000e316 <sec_mmio_write32>

d000b9be <flash_ctrl_info_perms_set>:
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:478
                               flash_ctrl_perms_t perms) {
d000b9be:       1141                    addi    sp,sp,-16
d000b9c0:       c606                    sw      ra,12(sp)
d000b9c2:       c422                    sw      s0,8(sp)
d000b9c4:       c226                    sw      s1,4(sp)
d000b9c6:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:481
  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000b9c8:       282d                    jal     d000ba02 <info_cfg_regs>
d000b9ca:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:483
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000b9cc:       852e                    mv      a0,a1
d000b9ce:       095020ef                jal     ra,d000e262 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:487
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_RD_EN_0_FIELD, perms.read);
d000b9d2:       400c                    lw      a1,0(s0)
d000b9d4:       7641                    lui     a2,0xffff0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b9d6:       8d71                    and     a0,a0,a2
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:489
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_PROG_EN_0_FIELD, perms.write);
d000b9d8:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b9da:       0592                    slli    a1,a1,0x4
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:491
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
d000b9dc:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b9de:       0f05f593                andi    a1,a1,240
d000b9e2:       0672                    slli    a2,a2,0x1c
d000b9e4:       8251                    srli    a2,a2,0x14
d000b9e6:       06f2                    slli    a3,a3,0x1c
d000b9e8:       82c1                    srli    a3,a3,0x10
d000b9ea:       8d4d                    or      a0,a0,a1
d000b9ec:       8d51                    or      a0,a0,a2
d000b9ee:       8d55                    or      a0,a0,a3
d000b9f0:       00656593                ori     a1,a0,6
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:492
  sec_mmio_write32(cfg_addr, reg);
d000b9f4:       8526                    mv      a0,s1
d000b9f6:       4492                    lw      s1,4(sp)
d000b9f8:       4422                    lw      s0,8(sp)
d000b9fa:       40b2                    lw      ra,12(sp)
d000b9fc:       0141                    addi    sp,sp,16
d000b9fe:       1190206f                j       d000e316 <sec_mmio_write32>

d000ba02 <info_cfg_regs>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ba02:                                                  85aa                 mv      a1,a0
d000ba04:                                                  f56af637             lui     a2,0xf56af
d000ba08:                                                  4ba60613             addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_cfg_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000ba0c:                                           /----- 04b64563             blt     a2,a1,d000ba56 <info_cfg_regs+0x54>
d000ba10:                                           |      ad887637             lui     a2,0xad887
d000ba14:                                           |      d3a60613             addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000ba18:                                        /--|----- 08b64263             blt     a2,a1,d000ba9c <info_cfg_regs+0x9a>
d000ba1c:                                        |  |      a4f6f637             lui     a2,0xa4f6f
d000ba20:                                        |  |      6c260693             addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000ba24:                                  /-----|--|----- 0eb6d663             bge     a3,a1,d000bb10 <info_cfg_regs+0x10e>
d000ba28:                                  |     |  |      6c360613             addi    a2,a2,1731
d000ba2c:                      /-----------|-----|--|----- 16c58e63             beq     a1,a2,d000bba8 <info_cfg_regs+0x1a6>
d000ba30:                      |           |     |  |      ad3b6637             lui     a2,0xad3b6
d000ba34:                      |           |     |  |      bee60613             addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000ba38:       /--------------|-----------|-----|--|----- 1ec59c63             bne     a1,a2,d000bc30 <info_cfg_regs+0x22e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000ba3c:       |              |           |     |  |  /-- 00c50663             beq     a0,a2,d000ba48 <info_cfg_regs+0x46>
d000ba40:       |              |           |     |  |  |   0000                 unimp
d000ba42:       |              |           |     |  |  |   0000                 unimp
d000ba44:       |              |           |     |  |  |   0000                 unimp
d000ba46:       |              |           |     |  |  |   0000                 unimp
d000ba48:       |              |           |     |  |  \-> c1000537             lui     a0,0xc1000
d000ba4c:       |              |           |     |  |      0cc50593             addi    a1,a0,204 # c10000cc <_stack_end+0xe0fe00cc>
d000ba50:       |              |           |     |  |      0a450513             addi    a0,a0,164
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000ba54:       |              |           |     |  |      8082                 ret
d000ba56:       |              |           |     |  \----> 238cf637             lui     a2,0x238cf
d000ba5a:       |              |           |     |         15b60613             addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2384f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000ba5e:       |              |           |     |  /----- 06b64c63             blt     a2,a1,d000bad6 <info_cfg_regs+0xd4>
d000ba62:       |              |           |     |  |      fa38d637             lui     a2,0xfa38d
d000ba66:       |              |           |     |  |      9f560693             addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000ba6a:       |              |           |  /--|--|----- 0cb6d663             bge     a3,a1,d000bb36 <info_cfg_regs+0x134>
d000ba6e:       |              |           |  |  |  |      9f660613             addi    a2,a2,-1546
d000ba72:       |              |  /--------|--|--|--|----- 14c58c63             beq     a1,a2,d000bbca <info_cfg_regs+0x1c8>
d000ba76:       |              |  |        |  |  |  |      10adc637             lui     a2,0x10adc
d000ba7a:       |              |  |        |  |  |  |      6aa60613             addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a5c6aa>
d000ba7e:       |  /-----------|--|--------|--|--|--|----- 1cc59c63             bne     a1,a2,d000bc56 <info_cfg_regs+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000ba82:       |  |           |  |        |  |  |  |  /-- 00c50663             beq     a0,a2,d000ba8e <info_cfg_regs+0x8c>
d000ba86:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000ba88:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000ba8a:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000ba8c:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000ba8e:       |  |           |  |        |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000ba92:       |  |           |  |        |  |  |  |      0c450593             addi    a1,a0,196 # c10000c4 <_stack_end+0xe0fe00c4>
d000ba96:       |  |           |  |        |  |  |  |      09c50513             addi    a0,a0,156
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000ba9a:       |  |           |  |        |  |  |  |      8082                 ret
d000ba9c:       |  |           |  |        |  |  \--|----> e3ffb637             lui     a2,0xe3ffb
d000baa0:       |  |           |  |        |  |     |      c8560693             addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000baa4:       |  |           |  |        |  |  /--|----- 0ab6dc63             bge     a3,a1,d000bb5c <info_cfg_regs+0x15a>
d000baa8:       |  |           |  |        |  |  |  |      c8660613             addi    a2,a2,-890
d000baac:       |  |           |  |  /-----|--|--|--|----- 14c58063             beq     a1,a2,d000bbec <info_cfg_regs+0x1ea>
d000bab0:       |  |           |  |  |     |  |  |  |      ec309637             lui     a2,0xec309
d000bab4:       |  |           |  |  |     |  |  |  |      46160613             addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000bab8:       |  |  /--------|--|--|-----|--|--|--|----- 1cc59263             bne     a1,a2,d000bc7c <info_cfg_regs+0x27a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000babc:       |  |  |        |  |  |     |  |  |  |  /-- 00c50663             beq     a0,a2,d000bac8 <info_cfg_regs+0xc6>
d000bac0:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000bac2:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000bac4:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000bac6:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000bac8:       |  |  |        |  |  |     |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bacc:       |  |  |        |  |  |     |  |  |  |      14850593             addi    a1,a0,328 # c1000148 <_stack_end+0xe0fe0148>
d000bad0:       |  |  |        |  |  |     |  |  |  |      12050513             addi    a0,a0,288
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bad4:       |  |  |        |  |  |     |  |  |  |      8082                 ret
d000bad6:       |  |  |        |  |  |     |  |  |  \----> 5f072637             lui     a2,0x5f072
d000bada:       |  |  |        |  |  |     |  |  |         77d60693             addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bade:       |  |  |        |  |  |     |  |  |  /----- 0ab6d263             bge     a3,a1,d000bb82 <info_cfg_regs+0x180>
d000bae2:       |  |  |        |  |  |     |  |  |  |      77e60613             addi    a2,a2,1918
d000bae6:       |  |  |        |  |  |  /--|--|--|--|----- 12c58463             beq     a1,a2,d000bc0e <info_cfg_regs+0x20c>
d000baea:       |  |  |        |  |  |  |  |  |  |  |      6c86e637             lui     a2,0x6c86e
d000baee:       |  |  |        |  |  |  |  |  |  |  |      98060613             addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000baf2:       |  |  |     /--|--|--|--|--|--|--|--|----- 1ac59863             bne     a1,a2,d000bca2 <info_cfg_regs+0x2a0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000baf6:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000bb02 <info_cfg_regs+0x100>
d000bafa:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bafc:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bafe:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb00:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb02:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bb06:       |  |  |     |  |  |  |  |  |  |  |  |      0d850593             addi    a1,a0,216 # c10000d8 <_stack_end+0xe0fe00d8>
d000bb0a:       |  |  |     |  |  |  |  |  |  |  |  |      0b050513             addi    a0,a0,176
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bb0e:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000bb10:       |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637             lui     a2,0x9dc42
d000bb14:       |  |  |     |  |  |  |  |     |  |  |      c3360613             addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bb18:       |  |  |     |  |  |  |  |  /--|--|--|----- 1ac59863             bne     a1,a2,d000bcc8 <info_cfg_regs+0x2c6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bb1c:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000bb28 <info_cfg_regs+0x126>
d000bb20:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb22:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb24:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb26:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb28:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bb2c:       |  |  |     |  |  |  |  |  |  |  |  |      0bc50593             addi    a1,a0,188 # c10000bc <_stack_end+0xe0fe00bc>
d000bb30:       |  |  |     |  |  |  |  |  |  |  |  |      09450513             addi    a0,a0,148
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bb34:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000bb36:       |  |  |     |  |  |  |  |  |  \--|--|----> f56af637             lui     a2,0xf56af
d000bb3a:       |  |  |     |  |  |  |  |  |     |  |      4bb60613             addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bb3e:       |  |  |     |  |  |  |  |  |  /--|--|----- 1ac59863             bne     a1,a2,d000bcee <info_cfg_regs+0x2ec>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bb42:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000bb4e <info_cfg_regs+0x14c>
d000bb46:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb48:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb4a:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb4c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb4e:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bb52:       |  |  |     |  |  |  |  |  |  |  |  |      0c050593             addi    a1,a0,192 # c10000c0 <_stack_end+0xe0fe00c0>
d000bb56:       |  |  |     |  |  |  |  |  |  |  |  |      09850513             addi    a0,a0,152
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bb5a:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000bb5c:       |  |  |     |  |  |  |  |  |  |  \--|----> ad887637             lui     a2,0xad887
d000bb60:       |  |  |     |  |  |  |  |  |  |     |      d3b60613             addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bb64:       |  |  |     |  |  |  |  |  |  |  /--|----- 1ac59863             bne     a1,a2,d000bd14 <info_cfg_regs+0x312>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bb68:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000bb74 <info_cfg_regs+0x172>
d000bb6c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb6e:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb70:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb72:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000bb74:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bb78:       |  |  |     |  |  |  |  |  |  |  |  |      13050593             addi    a1,a0,304 # c1000130 <_stack_end+0xe0fe0130>
d000bb7c:       |  |  |     |  |  |  |  |  |  |  |  |      10850513             addi    a0,a0,264
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bb80:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000bb82:       |  |  |     |  |  |  |  |  |  |  |  \----> 238cf637             lui     a2,0x238cf
d000bb86:       |  |  |     |  |  |  |  |  |  |  |         15c60613             addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2384f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bb8a:       |  |  |  /--|--|--|--|--|--|--|--|-------- 1ac59863             bne     a1,a2,d000bd3a <info_cfg_regs+0x338>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bb8e:       |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663             beq     a0,a2,d000bb9a <info_cfg_regs+0x198>
d000bb92:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000bb94:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000bb96:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000bb98:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000bb9a:       |  |  |  |  |  |  |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000bb9e:       |  |  |  |  |  |  |  |  |  |  |  |         12c50593             addi    a1,a0,300 # c100012c <_stack_end+0xe0fe012c>
d000bba2:       |  |  |  |  |  |  |  |  |  |  |  |         10450513             addi    a0,a0,260
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bba6:       |  |  |  |  |  |  |  |  |  |  |  |         8082                 ret
d000bba8:       |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7             lui     a1,0xa4f6f
d000bbac:       |  |  |  |  |     |  |  |  |  |  |         6c358593             addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bbb0:       |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000bbbc <info_cfg_regs+0x1ba>
d000bbb4:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000bbb6:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000bbb8:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000bbba:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000bbbc:       |  |  |  |  |     |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000bbc0:       |  |  |  |  |     |  |  |  |  |  |         0d050593             addi    a1,a0,208 # c10000d0 <_stack_end+0xe0fe00d0>
d000bbc4:       |  |  |  |  |     |  |  |  |  |  |         0a850513             addi    a0,a0,168
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bbc8:       |  |  |  |  |     |  |  |  |  |  |         8082                 ret
d000bbca:       |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7             lui     a1,0xfa38d
d000bbce:       |  |  |  |  |        |  |  |  |  |         9f658593             addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bbd2:       |  |  |  |  |        |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000bbde <info_cfg_regs+0x1dc>
d000bbd6:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000bbd8:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000bbda:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000bbdc:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000bbde:       |  |  |  |  |        |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000bbe2:       |  |  |  |  |        |  |  |  |  |         12450593             addi    a1,a0,292 # c1000124 <_stack_end+0xe0fe0124>
d000bbe6:       |  |  |  |  |        |  |  |  |  |         0fc50513             addi    a0,a0,252
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bbea:       |  |  |  |  |        |  |  |  |  |         8082                 ret
d000bbec:       |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7             lui     a1,0xe3ffb
d000bbf0:       |  |  |  |  |           |  |  |  |         c8658593             addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bbf4:       |  |  |  |  |           |  |  |  |     /-- 00b50663             beq     a0,a1,d000bc00 <info_cfg_regs+0x1fe>
d000bbf8:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000bbfa:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000bbfc:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000bbfe:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000bc00:       |  |  |  |  |           |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000bc04:       |  |  |  |  |           |  |  |  |         13c50593             addi    a1,a0,316 # c100013c <_stack_end+0xe0fe013c>
d000bc08:       |  |  |  |  |           |  |  |  |         11450513             addi    a0,a0,276
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bc0c:       |  |  |  |  |           |  |  |  |         8082                 ret
d000bc0e:       |  |  |  |  |           \--|--|--|-------> 5f0725b7             lui     a1,0x5f072
d000bc12:       |  |  |  |  |              |  |  |         77e58593             addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bc16:       |  |  |  |  |              |  |  |     /-- 00b50663             beq     a0,a1,d000bc22 <info_cfg_regs+0x220>
d000bc1a:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000bc1c:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000bc1e:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000bc20:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000bc22:       |  |  |  |  |              |  |  |     \-> c1000537             lui     a0,0xc1000
d000bc26:       |  |  |  |  |              |  |  |         0e050593             addi    a1,a0,224 # c10000e0 <_stack_end+0xe0fe00e0>
d000bc2a:       |  |  |  |  |              |  |  |         0b850513             addi    a0,a0,184
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bc2e:       |  |  |  |  |              |  |  |         8082                 ret
d000bc30:       \--|--|--|--|--------------|--|--|-------> ad5dd637             lui     a2,0xad5dd
d000bc34:          |  |  |  |              |  |  |         31d60613             addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bc38:          |  |  |  |              |  |  |  /----- 12c59463             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bc3c:          |  |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000bc48 <info_cfg_regs+0x246>
d000bc40:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000bc42:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000bc44:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000bc46:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000bc48:          |  |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bc4c:          |  |  |  |              |  |  |  |      13850593             addi    a1,a0,312 # c1000138 <_stack_end+0xe0fe0138>
d000bc50:          |  |  |  |              |  |  |  |      11050513             addi    a0,a0,272
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bc54:          |  |  |  |              |  |  |  |      8082                 ret
d000bc56:          \--|--|--|--------------|--|--|--|----> 118b6637             lui     a2,0x118b6
d000bc5a:             |  |  |              |  |  |  |      dbb60613             addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11835dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bc5e:             |  |  |              |  |  |  +----- 10c59163             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bc62:             |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000bc6e <info_cfg_regs+0x26c>
d000bc66:             |  |  |              |  |  |  |  |   0000                 unimp
d000bc68:             |  |  |              |  |  |  |  |   0000                 unimp
d000bc6a:             |  |  |              |  |  |  |  |   0000                 unimp
d000bc6c:             |  |  |              |  |  |  |  |   0000                 unimp
d000bc6e:             |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bc72:             |  |  |              |  |  |  |      0c850593             addi    a1,a0,200 # c10000c8 <_stack_end+0xe0fe00c8>
d000bc76:             |  |  |              |  |  |  |      0a050513             addi    a0,a0,160
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bc7a:             |  |  |              |  |  |  |      8082                 ret
d000bc7c:             \--|--|--------------|--|--|--|----> f4f49637             lui     a2,0xf4f49
d000bc80:                |  |              |  |  |  |      c3d60613             addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bc84:                |  |              |  |  |  +----- 0cc59e63             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bc88:                |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000bc94 <info_cfg_regs+0x292>
d000bc8c:                |  |              |  |  |  |  |   0000                 unimp
d000bc8e:                |  |              |  |  |  |  |   0000                 unimp
d000bc90:                |  |              |  |  |  |  |   0000                 unimp
d000bc92:                |  |              |  |  |  |  |   0000                 unimp
d000bc94:                |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bc98:                |  |              |  |  |  |      14050593             addi    a1,a0,320 # c1000140 <_stack_end+0xe0fe0140>
d000bc9c:                |  |              |  |  |  |      11850513             addi    a0,a0,280
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bca0:                |  |              |  |  |  |      8082                 ret
d000bca2:                |  \--------------|--|--|--|----> 7dfbe637             lui     a2,0x7dfbe
d000bca6:                |                 |  |  |  |      f9b60613             addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bcaa:                |                 |  |  |  +----- 0ac59b63             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bcae:                |                 |  |  |  |  /-- 00c50663             beq     a0,a2,d000bcba <info_cfg_regs+0x2b8>
d000bcb2:                |                 |  |  |  |  |   0000                 unimp
d000bcb4:                |                 |  |  |  |  |   0000                 unimp
d000bcb6:                |                 |  |  |  |  |   0000                 unimp
d000bcb8:                |                 |  |  |  |  |   0000                 unimp
d000bcba:                |                 |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000bcbe:                |                 |  |  |  |      13450593             addi    a1,a0,308 # c1000134 <_stack_end+0xe0fe0134>
d000bcc2:                |                 |  |  |  |      10c50513             addi    a0,a0,268
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bcc6:                |                 |  |  |  |      8082                 ret
d000bcc8:                |                 \--|--|--|----> 9fbb8637             lui     a2,0x9fbb8
d000bccc:                |                    |  |  |      40e60613             addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bcd0:                |                    |  |  +----- 08c59863             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bcd4:                |                    |  |  |  /-- 00c50663             beq     a0,a2,d000bce0 <info_cfg_regs+0x2de>
d000bcd8:                |                    |  |  |  |   0000                 unimp
d000bcda:                |                    |  |  |  |   0000                 unimp
d000bcdc:                |                    |  |  |  |   0000                 unimp
d000bcde:                |                    |  |  |  |   0000                 unimp
d000bce0:                |                    |  |  |  \-> c1000537             lui     a0,0xc1000
d000bce4:                |                    |  |  |      14450593             addi    a1,a0,324 # c1000144 <_stack_end+0xe0fe0144>
d000bce8:                |                    |  |  |      11c50513             addi    a0,a0,284
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bcec:                |                    |  |  |      8082                 ret
d000bcee:                |                    \--|--|----> f646f637             lui     a2,0xf646f
d000bcf2:                |                       |  |      11b60613             addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bcf6:                |                       |  +----- 06c59563             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bcfa:                |                       |  |  /-- 00c50663             beq     a0,a2,d000bd06 <info_cfg_regs+0x304>
d000bcfe:                |                       |  |  |   0000                 unimp
d000bd00:                |                       |  |  |   0000                 unimp
d000bd02:                |                       |  |  |   0000                 unimp
d000bd04:                |                       |  |  |   0000                 unimp
d000bd06:                |                       |  |  \-> c1000537             lui     a0,0xc1000
d000bd0a:                |                       |  |      0d450593             addi    a1,a0,212 # c10000d4 <_stack_end+0xe0fe00d4>
d000bd0e:                |                       |  |      0ac50513             addi    a0,a0,172
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bd12:                |                       |  |      8082                 ret
d000bd14:                |                       \--|----> dd7f3637             lui     a2,0xdd7f3
d000bd18:                |                          |      4dc60613             addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bd1c:                |                          +----- 04c59263             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bd20:                |                          |  /-- 00c50663             beq     a0,a2,d000bd2c <info_cfg_regs+0x32a>
d000bd24:                |                          |  |   0000                 unimp
d000bd26:                |                          |  |   0000                 unimp
d000bd28:                |                          |  |   0000                 unimp
d000bd2a:                |                          |  |   0000                 unimp
d000bd2c:                |                          |  \-> c1000537             lui     a0,0xc1000
d000bd30:                |                          |      0dc50593             addi    a1,a0,220 # c10000dc <_stack_end+0xe0fe00dc>
d000bd34:                |                          |      0b450513             addi    a0,a0,180
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bd38:                |                          |      8082                 ret
d000bd3a:                \--------------------------|----> 389c4637             lui     a2,0x389c4
d000bd3e:                                           |      49e60613             addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000bd42:                                           +----- 00c59f63             bne     a1,a2,d000bd60 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000bd46:                                           |  /-- 00c50663             beq     a0,a2,d000bd52 <info_cfg_regs+0x350>
d000bd4a:                                           |  |   0000                 unimp
d000bd4c:                                           |  |   0000                 unimp
d000bd4e:                                           |  |   0000                 unimp
d000bd50:                                           |  |   0000                 unimp
d000bd52:                                           |  \-> c1000537             lui     a0,0xc1000
d000bd56:                                           |      12850593             addi    a1,a0,296 # c1000128 <_stack_end+0xe0fe0128>
d000bd5a:                                           |      10050513             addi    a0,a0,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000bd5e:                                           |      8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:275
      HARDENED_UNREACHABLE();
d000bd60:                                           \----> 0000                 unimp
d000bd62:                                                  0000                 unimp
d000bd64:                                                  0000                 unimp
d000bd66:                                                  0000                 unimp

d000bd68 <flash_ctrl_bank_erase_perms_set>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bd68:                 85aa                  mv      a1,a0
d000bd6a:                 1d400613              li      a2,468
flash_ctrl_bank_erase_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
}

void flash_ctrl_bank_erase_perms_set(hardened_bool_t enable) {
  uint32_t reg;
  switch (launder32(enable)) {
d000bd6e:          /----- 00c59a63              bne     a1,a2,d000bd82 <flash_ctrl_bank_erase_perms_set+0x1a>
d000bd72:          |      4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:539
          0, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_0_BIT, true);
      reg = bitfield_bit32_write(
          reg, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_1_BIT, true);
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(enable, kHardenedBoolFalse);
d000bd74:          |  /-- 00c50663              beq     a0,a2,d000bd80 <flash_ctrl_bank_erase_perms_set+0x18>
d000bd78:          |  |   0000                  unimp
d000bd7a:          |  |   0000                  unimp
d000bd7c:          |  |   0000                  unimp
d000bd7e:          |  |   0000                  unimp
d000bd80:       /--|--\-X a821                  j       d000bd98 <flash_ctrl_bank_erase_perms_set+0x30>
d000bd82:       |  \----> 73900613              li      a2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
  switch (launder32(enable)) {
d000bd86:       |  /----- 00c59f63              bne     a1,a2,d000bda4 <flash_ctrl_bank_erase_perms_set+0x3c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:532
      HARDENED_CHECK_EQ(enable, kHardenedBoolTrue);
d000bd8a:       |  |  /-- 00c50663              beq     a0,a2,d000bd96 <flash_ctrl_bank_erase_perms_set+0x2e>
d000bd8e:       |  |  |   0000                  unimp
d000bd90:       |  |  |   0000                  unimp
d000bd92:       |  |  |   0000                  unimp
d000bd94:       |  |  |   0000                  unimp
d000bd96:       |  |  \-> 458d                  li      a1,3
d000bd98:       \--|----> c1000537              lui     a0,0xc1000
d000bd9c:          |      16850513              addi    a0,a0,360 # c1000168 <_stack_end+0xe0fe0168>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:545
      reg = 0;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32_shadowed(kBase + FLASH_CTRL_MP_BANK_CFG_SHADOWED_REG_OFFSET,
d000bda0:          |      5c20206f              j       d000e362 <sec_mmio_write32_shadowed>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:543
      HARDENED_UNREACHABLE();
d000bda4:          \----> 0000                  unimp
d000bda6:                 0000                  unimp
d000bda8:                 0000                  unimp
d000bdaa:                 0000                  unimp

d000bdac <ibex_addr_remap_0_set>:
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:23
uint32_t ibex_fpga_version(void) {
  return abs_mmio_read32(kBase + RV_CORE_IBEX_FPGA_INFO_REG_OFFSET);
}

void ibex_addr_remap_0_set(uint32_t matching_addr, uint32_t remap_addr,
                           size_t size) {
d000bdac:       1141                    addi    sp,sp,-16
d000bdae:       c606                    sw      ra,12(sp)
d000bdb0:       c422                    sw      s0,8(sp)
d000bdb2:       c226                    sw      s1,4(sp)
d000bdb4:       c04a                    sw      s2,0(sp)
d000bdb6:       892e                    mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:24
  uint32_t mask = matching_addr | ((size - 1) >> 1);
d000bdb8:       fff60593                addi    a1,a2,-1
d000bdbc:       8185                    srli    a1,a1,0x1
d000bdbe:       00a5e4b3                or      s1,a1,a0
d000bdc2:       c11f0437                lui     s0,0xc11f0
d000bdc6:       01c40513                addi    a0,s0,28 # c11f001c <_stack_end+0xe11d001c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:25
  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000bdca:       85a6                    mv      a1,s1
d000bdcc:       54a020ef                jal     ra,d000e316 <sec_mmio_write32>
d000bdd0:       03c40513                addi    a0,s0,60
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:26
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000bdd4:       85a6                    mv      a1,s1
d000bdd6:       540020ef                jal     ra,d000e316 <sec_mmio_write32>
d000bdda:       02440513                addi    a0,s0,36
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:28

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_REMAP_ADDR_0_REG_OFFSET,
d000bdde:       85ca                    mv      a1,s2
d000bde0:       536020ef                jal     ra,d000e316 <sec_mmio_write32>
d000bde4:       04440513                addi    a0,s0,68
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:30
                   remap_addr);
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_REMAP_ADDR_0_REG_OFFSET,
d000bde8:       85ca                    mv      a1,s2
d000bdea:       52c020ef                jal     ra,d000e316 <sec_mmio_write32>
d000bdee:       01440513                addi    a0,s0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:33
                   remap_addr);

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_EN_0_REG_OFFSET, 1);
d000bdf2:       4585                    li      a1,1
d000bdf4:       522020ef                jal     ra,d000e316 <sec_mmio_write32>
d000bdf8:       03440513                addi    a0,s0,52
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:34
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_EN_0_REG_OFFSET, 1);
d000bdfc:       4585                    li      a1,1
d000bdfe:       518020ef                jal     ra,d000e316 <sec_mmio_write32>
icache_invalidate():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:38
/**
 * Invalidates the instruction cache.
 */
inline void icache_invalidate(void) {
#ifdef OT_PLATFORM_RV32
  asm volatile("fence.i");
d000be02:       0000100f                fence.i
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:36
  icache_invalidate();
}
d000be06:       4902                    lw      s2,0(sp)
d000be08:       4492                    lw      s1,4(sp)
d000be0a:       4422                    lw      s0,8(sp)
d000be0c:       40b2                    lw      ra,12(sp)
d000be0e:       0141                    addi    sp,sp,16
d000be10:       8082                    ret

d000be12 <expected_state_check>:
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:39
 * This function reads and clears the status and error code registers.
 *
 * @return `kErrorOk` if the key manager is at the `expected_state` and the
 * status is idle or success.
 */
static rom_error_t expected_state_check(uint32_t expected_state) {
d000be12:           1141                        addi    sp,sp,-16
d000be14:           c606                        sw      ra,12(sp)
d000be16:           c422                        sw      s0,8(sp)
d000be18:           c226                        sw      s1,4(sp)
d000be1a:           c04a                        sw      s2,0(sp)
d000be1c:           892a                        mv      s2,a0
d000be1e:           c1140537            lui     a0,0xc1140
d000be22:           4589                        li      a1,2
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000be24:       /-> 0ec52603            lw      a2,236(a0) # c11400ec <_stack_end+0xe11200ec>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000be28:       |   00367493            andi    s1,a2,3
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
  do {
    op_status = abs_mmio_read32(kBase + KEYMGR_OP_STATUS_REG_OFFSET);
    abs_mmio_write32(kBase + KEYMGR_OP_STATUS_REG_OFFSET, op_status);
    op_status_field =
        bitfield_field32_read(op_status, KEYMGR_OP_STATUS_STATUS_FIELD);
  } while (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_WIP ||
d000be2c:       |   fff48693            addi    a3,s1,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000be30:       |   0ec52623            sw      a2,236(a0)
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
d000be34:       \-- feb6e8e3            bltu    a3,a1,d000be24 <expected_state_check+0x12>
d000be38:           c1140537            lui     a0,0xc1140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000be3c:           0f052403            lw      s0,240(a0) # c11400f0 <_stack_end+0xe11200f0>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000be40:           0e852823            sw      s0,240(a0)
d000be44:           0e850513            addi    a0,a0,232
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:58
  uint32_t error_code = abs_mmio_read32(kBase + KEYMGR_ERR_CODE_REG_OFFSET);
  abs_mmio_write32(kBase + KEYMGR_ERR_CODE_REG_OFFSET, error_code);

  // Read the working state with sec_mmio so that we can check the expected
  // value periodically.
  uint32_t got_state = sec_mmio_read32(kBase + KEYMGR_WORKING_STATE_REG_OFFSET);
d000be48:           41a020ef            jal     ra,d000e262 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:59
  if (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_IDLE &&
d000be4c:           0084e5b3            or      a1,s1,s0
d000be50:           01254533            xor     a0,a0,s2
d000be54:           8dc9                        or      a1,a1,a0
d000be56:           73900513            li      a0,1849
d000be5a:       /-- c589                        beqz    a1,d000be64 <expected_state_check+0x52>
d000be5c:       |   014b5537            lui     a0,0x14b5
d000be60:       |   d0d50513            addi    a0,a0,-755 # 14b4d0d <_rom_ext_virtual_size+0x1434d0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:64
      error_code == 0u && got_state == expected_state) {
    return kErrorOk;
  }
  return kErrorKeymgrInternal;
}
d000be64:       \-> 4902                        lw      s2,0(sp)
d000be66:           4492                        lw      s1,4(sp)
d000be68:           4422                        lw      s0,8(sp)
d000be6a:           40b2                        lw      ra,12(sp)
d000be6c:           0141                        addi    sp,sp,16
d000be6e:           8082                        ret

d000be70 <keymgr_sw_binding_set>:
keymgr_sw_binding_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:78
  return kErrorOk;
}

void keymgr_sw_binding_set(
    const keymgr_binding_value_t *binding_value_sealing,
    const keymgr_binding_value_t *binding_value_attestation) {
d000be70:           1101                        addi    sp,sp,-32
d000be72:           ce06                        sw      ra,28(sp)
d000be74:           cc22                        sw      s0,24(sp)
d000be76:           ca26                        sw      s1,20(sp)
d000be78:           c84a                        sw      s2,16(sp)
d000be7a:           c64e                        sw      s3,12(sp)
d000be7c:           c452                        sw      s4,8(sp)
d000be7e:           892e                        mv      s2,a1
d000be80:           89aa                        mv      s3,a0
d000be82:           4481                        li      s1,0
d000be84:           c1140537            lui     a0,0xc1140
d000be88:           02c50413            addi    s0,a0,44 # c114002c <_stack_end+0xe112002c>
d000be8c:           02000a13            li      s4,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:86
  // Write and lock (rw0c) the software binding value. This register is unlocked
  // by hardware upon a successful state transition.
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_SEALING_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_sealing->data[i]);
d000be90:       /-> 00998533            add     a0,s3,s1
d000be94:       |   410c                        lw      a1,0(a0)
d000be96:       |   00848533            add     a0,s1,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:84
    sec_mmio_write32(
d000be9a:       |   47c020ef            jal     ra,d000e316 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:83
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
d000be9e:       |   0491                        addi    s1,s1,4
d000bea0:       \-- ff4498e3            bne     s1,s4,d000be90 <keymgr_sw_binding_set+0x20>
d000bea4:           4481                        li      s1,0
d000bea6:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:91
  }
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_ATTEST_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_attestation->data[i]);
d000beaa:       /-> 00990533            add     a0,s2,s1
d000beae:       |   410c                        lw      a1,0(a0)
d000beb0:       |   00940533            add     a0,s0,s1
d000beb4:       |   02050513            addi    a0,a0,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:89
    sec_mmio_write32(
d000beb8:       |   45e020ef            jal     ra,d000e316 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:88
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
d000bebc:       |   0491                        addi    s1,s1,4
d000bebe:       \-- ff3496e3            bne     s1,s3,d000beaa <keymgr_sw_binding_set+0x3a>
d000bec2:           c1140537            lui     a0,0xc1140
d000bec6:           02850513            addi    a0,a0,40 # c1140028 <_stack_end+0xe1120028>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:93
  }
  sec_mmio_write32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET, 0);
d000beca:           4581                        li      a1,0
d000becc:           4a22                        lw      s4,8(sp)
d000bece:           49b2                        lw      s3,12(sp)
d000bed0:           4942                        lw      s2,16(sp)
d000bed2:           44d2                        lw      s1,20(sp)
d000bed4:           4462                        lw      s0,24(sp)
d000bed6:           40f2                        lw      ra,28(sp)
d000bed8:           6105                        addi    sp,sp,32
d000beda:           43c0206f            j       d000e316 <sec_mmio_write32>

d000bede <keymgr_creator_max_ver_set>:
keymgr_creator_max_ver_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:102
  while (!abs_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET)) {
  }
  sec_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET);
}

void keymgr_creator_max_ver_set(uint32_t max_key_ver) {
d000bede:       1141                    addi    sp,sp,-16
d000bee0:       c606                    sw      ra,12(sp)
d000bee2:       c422                    sw      s0,8(sp)
d000bee4:       85aa                    mv      a1,a0
d000bee6:       c1140437                lui     s0,0xc1140
d000beea:       09440513                addi    a0,s0,148 # c1140094 <_stack_end+0xe1120094>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:105
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kKeymgrSecMmioCreatorMaxVerSet, 2);
  // Write and lock (rw0c) the max key version.
  sec_mmio_write32_shadowed(
d000beee:       474020ef                jal     ra,d000e362 <sec_mmio_write32_shadowed>
d000bef2:       09040513                addi    a0,s0,144
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:107
      kBase + KEYMGR_MAX_CREATOR_KEY_VER_SHADOWED_REG_OFFSET, max_key_ver);
  sec_mmio_write32(kBase + KEYMGR_MAX_CREATOR_KEY_VER_REGWEN_REG_OFFSET, 0);
d000bef6:       4581                    li      a1,0
d000bef8:       4422                    lw      s0,8(sp)
d000befa:       40b2                    lw      ra,12(sp)
d000befc:       0141                    addi    sp,sp,16
d000befe:       4180206f                j       d000e316 <sec_mmio_write32>

d000bf02 <keymgr_state_check>:
keymgr_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:130

  abs_mmio_write32(kBase + KEYMGR_START_REG_OFFSET, 1);
}

rom_error_t keymgr_state_check(keymgr_state_t expected_state) {
  return expected_state_check(expected_state);
d000bf02:       bf01                    j       d000be12 <expected_state_check>

d000bf04 <pinmux_init>:
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:127
  abs_mmio_write32(
      kBase + PINMUX_MIO_OUTSEL_0_REG_OFFSET + output.mio * sizeof(uint32_t),
      output.outsel);
}

void pinmux_init(void) {
d000bf04:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:129
  uint32_t bootstrap_en =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d000bf06:              c606                     sw      ra,12(sp)
d000bf08:              36400513                 li      a0,868
d000bf0c:              2f4020ef                 jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bf10:              862a                     mv      a2,a0
d000bf12:              73900593                 li      a1,1849
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:130
  if (launder32(bootstrap_en) == kHardenedBoolTrue) {
d000bf16:       /----- 02b61b63                 bne     a2,a1,d000bf4c <pinmux_init+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:131
    HARDENED_CHECK_EQ(bootstrap_en, kHardenedBoolTrue);
d000bf1a:       |  /-- 00b50663                 beq     a0,a1,d000bf26 <pinmux_init+0x22>
d000bf1e:       |  |   0000                     unimp
d000bf20:       |  |   0000                     unimp
d000bf22:       |  |   0000                     unimp
d000bf24:       |  |   0000                     unimp
d000bf26:       |  \-> c0460537                 lui     a0,0xc0460
d000bf2a:       |      4591                     li      a1,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bf2c:       |      44b52c23                 sw      a1,1112(a0) # c0460458 <_stack_end+0xe0440458>
d000bf30:       |      44b52e23                 sw      a1,1116(a0)
d000bf34:       |      46b52023                 sw      a1,1120(a0)
d000bf38:       |      45e1                     li      a1,24
d000bf3a:       |      14b52023                 sw      a1,320(a0)
d000bf3e:       |      45e5                     li      a1,25
d000bf40:       |      14b52223                 sw      a1,324(a0)
d000bf44:       |      14850513                 addi    a0,a0,328
d000bf48:       |      45e9                     li      a1,26
d000bf4a:       |      c10c                     sw      a1,0(a0)
d000bf4c:       \----> c0460537                 lui     a0,0xc0460
d000bf50:              45ed                     li      a1,27
d000bf52:              18b52823                 sw      a1,400(a0) # c0460190 <_stack_end+0xe0440190>
d000bf56:              02d00593                 li      a1,45
d000bf5a:              2eb52823                 sw      a1,752(a0)
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:144
    configure_input(kInputSwStrap2);
  }

  configure_input(kInputUart0);
  configure_output(kOutputUart0);
}
d000bf5e:              40b2                     lw      ra,12(sp)
d000bf60:              0141                     addi    sp,sp,16
d000bf62:              8082                     ret

d000bf64 <retention_sram_get>:
retention_sram_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:25
};

retention_sram_t *retention_sram_get(void) {
  static_assert(sizeof(retention_sram_t) == TOP_EARLGREY_RAM_RET_AON_SIZE_BYTES,
                "Unexpected retention SRAM size.");
  return (retention_sram_t *)TOP_EARLGREY_RAM_RET_AON_BASE_ADDR;
d000bf64:       c0600537                lui     a0,0xc0600
d000bf68:       8082                    ret

d000bf6a <retention_sram_init>:
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:32

void retention_sram_clear(void) {
  memset(retention_sram_get(), 0, sizeof(retention_sram_t));
}

void retention_sram_init(void) {
d000bf6a:       c0500537                lui     a0,0xc0500
d000bf6e:       4589                    li      a1,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bf70:       c94c                    sw      a1,20(a0)
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:35
  uint32_t reg = bitfield_bit32_write(0, SRAM_CTRL_CTRL_INIT_BIT, true);
  abs_mmio_write32(kBase + SRAM_CTRL_CTRL_REG_OFFSET, reg);
}
d000bf72:       8082                    ret

d000bf74 <rstmgr_reason_get>:
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:41
    rstmgr_alert_info.info[i] =
        abs_mmio_read32(kBase + RSTMGR_ALERT_INFO_REG_OFFSET);
  }
}

uint32_t rstmgr_reason_get(void) {
d000bf74:              c0410537                 lui     a0,0xc0410
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bf78:              494c                     lw      a1,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000bf7a:              00f5f613                 andi    a2,a1,15
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:29
  rstmgr_alert_info.length = bitfield_field32_read(
d000bf7e:              c7018593                 addi    a1,gp,-912 # e00024c8 <rstmgr_alert_info>
d000bf82:              c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000bf84:       /----- c205                     beqz    a2,d000bfa4 <rstmgr_reason_get+0x30>
d000bf86:       |      4601                     li      a2,0
d000bf88:       |      4681                     li      a3,0
d000bf8a:       |      00458713                 addi    a4,a1,4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf8e:       |  /-> 0f067793                 andi    a5,a2,240
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bf92:       |  |   c91c                     sw      a5,16(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bf94:       |  |   4d1c                     lw      a5,24(a0)
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:36
    rstmgr_alert_info.info[i] =
d000bf96:       |  |   c31c                     sw      a5,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000bf98:       |  |   419c                     lw      a5,0(a1)
d000bf9a:       |  |   0685                     addi    a3,a3,1
d000bf9c:       |  |   0711                     addi    a4,a4,4
d000bf9e:       |  |   0641                     addi    a2,a2,16
d000bfa0:       |  \-- fef6e7e3                 bltu    a3,a5,d000bf8e <rstmgr_reason_get+0x1a>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000bfa4:       \----> 4508                     lw      a0,8(a0)
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:72
      "kRstmgrReasonLast value incorrect.");

#undef REASON_ASSERT

  rstmgr_alert_info_collect();
  return abs_mmio_read32(kBase + RSTMGR_RESET_INFO_REG_OFFSET);
d000bfa6:              8082                     ret

d000bfa8 <rstmgr_reason_clear>:
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:75
}

void rstmgr_reason_clear(uint32_t reasons) {
d000bfa8:       c04105b7                lui     a1,0xc0410
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bfac:       c588                    sw      a0,8(a1)
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:77
  abs_mmio_write32(kBase + RSTMGR_RESET_INFO_REG_OFFSET, reasons);
}
d000bfae:       8082                    ret

d000bfb0 <rstmgr_reset>:
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:83

void rstmgr_alert_info_enable(void) {
  abs_mmio_write32(kBase + RSTMGR_ALERT_INFO_CTRL_REG_OFFSET, 1);
}

void rstmgr_reset(void) {
d000bfb0:           c0410537            lui     a0,0xc0410
d000bfb4:           0511                        addi    a0,a0,4
d000bfb6:           4599                        li      a1,6
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bfb8:           c10c                        sw      a1,0(a0)
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
  asm volatile("wfi");
d000bfba:       /-> 10500073            wfi
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:87
  abs_mmio_write32(kBase + RSTMGR_RESET_REQ_REG_OFFSET, kMultiBitBool4True);
#ifdef OT_PLATFORM_RV32
  // Wait until the chip resets.
  while (true) {
d000bfbe:       \-- bff5                        j       d000bfba <rstmgr_reset+0xa>

d000bfc0 <uart_init>:
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:37
                   0u);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_STATE_REG_OFFSET,
                   UINT32_MAX);
}

rom_error_t uart_init(uint32_t precalculated_nco) {
d000bfc0:       c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bfc4:       0005a823                sw      zero,16(a1) # c0000010 <_stack_end+0xdffe0010>
d000bfc8:       460d                    li      a2,3
d000bfca:       d190                    sw      a2,32(a1)
d000bfcc:       0205a423                sw      zero,40(a1)
d000bfd0:       0205a823                sw      zero,48(a1)
d000bfd4:       0005a223                sw      zero,4(a1)
d000bfd8:       567d                    li      a2,-1
d000bfda:       c190                    sw      a2,0(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000bfdc:       0542                    slli    a0,a0,0x10
d000bfde:       00156513                ori     a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bfe2:       c988                    sw      a0,16(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_CTRL_REG_OFFSET, reg);

  // Disable interrupts.
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_ENABLE_REG_OFFSET,
                   0u);
  return kErrorOk;
d000bfe4:       73900513                li      a0,1849
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bfe8:       0005a223                sw      zero,4(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
d000bfec:       8082                    ret

d000bfee <uart_putchar>:
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:66
  uint32_t reg =
      abs_mmio_read32(TOP_EARLGREY_UART0_BASE_ADDR + UART_STATUS_REG_OFFSET);
  return bitfield_bit32_read(reg, UART_STATUS_TXIDLE_BIT);
}

void uart_putchar(uint8_t byte) {
d000bfee:           c00005b7            lui     a1,0xc0000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bff2:       /-> 49d0                        lw      a2,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000bff4:       |   8a05                        andi    a2,a2,1
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:68
  // If the transmit FIFO is full, wait.
  while (uart_tx_full()) {
d000bff6:       \-- fe75                        bnez    a2,d000bff2 <uart_putchar+0x4>
d000bff8:           c00005b7            lui     a1,0xc0000
d000bffc:           01c58613            addi    a2,a1,28 # c000001c <_stack_end+0xdffe001c>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000c000:           c208                        sw      a0,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000c002:       /-> 49c8                        lw      a0,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000c004:       |   8921                        andi    a0,a0,8
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:74
  }
  uint32_t reg = bitfield_field32_write(0, UART_WDATA_WDATA_FIELD, byte);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_WDATA_REG_OFFSET, reg);

  // If the transmitter is active, wait.
  while (!uart_tx_idle()) {
d000c006:       \-- dd75                        beqz    a0,d000c002 <uart_putchar+0x14>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:76
  }
}
d000c008:           8082                        ret

d000c00a <watchdog_init>:
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:25

  kCtrlEnable = 1 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
  kCtrlDisable = 0 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
};

void watchdog_init(lifecycle_state_t lc_state) {
d000c00a:                          1101                 addi    sp,sp,-32
d000c00c:                          ce06                 sw      ra,28(sp)
d000c00e:                          cc22                 sw      s0,24(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c010:                          85aa                 mv      a1,a0
d000c012:                          cf8d0637             lui     a2,0xcf8d0
d000c016:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioInit,
                                  kWatchdogSecMmioConfigure);
  // Disable the watchdog bite when in test and RMA lifecycle states.
  hardened_bool_t enable = kHardenedBoolTrue;
  switch (launder32(lc_state)) {
d000c01a:                   /----- 02b6d363             bge     a3,a1,d000c040 <watchdog_init+0x36>
d000c01e:                   |      aab60613             addi    a2,a2,-1365
d000c022:                /--|----- 02c58c63             beq     a1,a2,d000c05a <watchdog_init+0x50>
d000c026:                |  |      0b5a7637             lui     a2,0xb5a7
d000c02a:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000c02e:             /--|--|----- 04c59163             bne     a1,a2,d000c070 <watchdog_init+0x66>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:36
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      enable = kHardenedBoolFalse;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000c032:             |  |  |  /-- 00c50663             beq     a0,a2,d000c03e <watchdog_init+0x34>
d000c036:             |  |  |  |   0000                 unimp
d000c038:             |  |  |  |   0000                 unimp
d000c03a:             |  |  |  |   0000                 unimp
d000c03c:             |  |  |  |   0000                 unimp
d000c03e:       /-----|--|--|--\-X a0a9                 j       d000c088 <watchdog_init+0x7e>
d000c040:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000c044:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000c048:       |  /--|--|-------- 04c59363             bne     a1,a2,d000c08e <watchdog_init+0x84>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:44
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      enable = kHardenedBoolTrue;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000c04c:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000c058 <watchdog_init+0x4e>
d000c050:       |  |  |  |     |   0000                 unimp
d000c052:       |  |  |  |     |   0000                 unimp
d000c054:       |  |  |  |     |   0000                 unimp
d000c056:       |  |  |  |     |   0000                 unimp
d000c058:       +--|--|--|-----\-X a805                 j       d000c088 <watchdog_init+0x7e>
d000c05a:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000c05e:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:48
      enable = kHardenedBoolTrue;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000c062:       |  |  |        /-- 00b50663             beq     a0,a1,d000c06e <watchdog_init+0x64>
d000c066:       |  |  |        |   0000                 unimp
d000c068:       |  |  |        |   0000                 unimp
d000c06a:       |  |  |        |   0000                 unimp
d000c06c:       |  |  |        |   0000                 unimp
d000c06e:       |  |  |     /--\-X a825                 j       d000c0a6 <watchdog_init+0x9c>
d000c070:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000c074:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000c078:       |  |     /--|----- 06c59563             bne     a1,a2,d000c0e2 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:40
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000c07c:       +--|-----|--|----- 00c50663             beq     a0,a2,d000c088 <watchdog_init+0x7e>
d000c080:       |  |     |  |      0000                 unimp
d000c082:       |  |     |  |      0000                 unimp
d000c084:       |  |     |  |      0000                 unimp
d000c086:       |  |     |  |      0000                 unimp
d000c088:       \--|-----|--|----> 73900413             li      s0,1849
d000c08c:          |     |  |  /-- a839                 j       d000c0aa <watchdog_init+0xa0>
d000c08e:          \-----|--|--|-> b2866637             lui     a2,0xb2866
d000c092:                |  |  |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000c096:                +--|--|-- 04c59663             bne     a1,a2,d000c0e2 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000c09a:                |  +--|-- 00c50663             beq     a0,a2,d000c0a6 <watchdog_init+0x9c>
d000c09e:                |  |  |   0000                 unimp
d000c0a0:                |  |  |   0000                 unimp
d000c0a2:                |  |  |   0000                 unimp
d000c0a4:                |  |  |   0000                 unimp
d000c0a6:                |  \--|-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:55
      break;
    default:
      HARDENED_UNREACHABLE();
  }

  uint32_t threshold = otp_read32(
d000c0aa:                |     \-> 56000513             li      a0,1376
d000c0ae:                |         152020ef             jal     ra,d000e200 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c0b2:                |         85aa                 mv      a1,a0
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:59
      OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_WATCHDOG_BITE_THRESHOLD_CYCLES_OFFSET);

  // Disable watchdog if `threshold` is less than minimum.
  if (launder32(threshold) < kWatchdogMinThreshold) {
d000c0b4:                |  /----- e991                 bnez    a1,d000c0c8 <watchdog_init+0xbe>
d000c0b6:                |  |      4585                 li      a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:60
    HARDENED_CHECK_LT(threshold, kWatchdogMinThreshold);
d000c0b8:                |  |  /-- 00b56663             bltu    a0,a1,d000c0c4 <watchdog_init+0xba>
d000c0bc:                |  |  |   0000                 unimp
d000c0be:                |  |  |   0000                 unimp
d000c0c0:                |  |  |   0000                 unimp
d000c0c2:                |  |  |   0000                 unimp
d000c0c4:                |  |  \-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:66
    enable = kHardenedBoolFalse;
  }

  watchdog_configure((watchdog_config_t){
      // 1.125 x bite_threshold
      .bark_threshold = (9 * threshold) / 8,
d000c0c8:                |  \----> 00351593             slli    a1,a0,0x3
d000c0cc:                |         95aa                 add     a1,a1,a0
d000c0ce:                |         818d                 srli    a1,a1,0x3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:64
  watchdog_configure((watchdog_config_t){
d000c0d0:                |         c42e                 sw      a1,8(sp)
d000c0d2:                |         c62a                 sw      a0,12(sp)
d000c0d4:                |         c822                 sw      s0,16(sp)
d000c0d6:                |         0028                 addi    a0,sp,8
d000c0d8:                |         2809                 jal     d000c0ea <watchdog_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:70
      .bite_threshold = threshold,
      .enable = enable,
  });
}
d000c0da:                |         4462                 lw      s0,24(sp)
d000c0dc:                |         40f2                 lw      ra,28(sp)
d000c0de:                |         6105                 addi    sp,sp,32
d000c0e0:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:52
      HARDENED_UNREACHABLE();
d000c0e2:                \-------> 0000                 unimp
d000c0e4:                          0000                 unimp
d000c0e6:                          0000                 unimp
d000c0e8:                          0000                 unimp

d000c0ea <watchdog_configure>:
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:72

void watchdog_configure(watchdog_config_t config) {
d000c0ea:                 1141                  addi    sp,sp,-16
d000c0ec:                 c606                  sw      ra,12(sp)
d000c0ee:                 c422                  sw      s0,8(sp)
d000c0f0:                 c226                  sw      s1,4(sp)
d000c0f2:                 842a                  mv      s0,a0
d000c0f4:                 c04004b7              lui     s1,0xc0400
d000c0f8:                 02c48513              addi    a0,s1,44 # c040002c <_stack_end+0xe03e002c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:75
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioConfigure, 4);
  // Tell pwrmgr we want watchdog reset events to reset the chip.
  sec_mmio_write32(
d000c0fc:                 4589                  li      a1,2
d000c0fe:                 218020ef              jal     ra,d000e316 <sec_mmio_write32>
d000c102:                 4505                  li      a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000c104:                 cc88                  sw      a0,24(s1)
d000c106:                 c04704b7              lui     s1,0xc0470
d000c10a:                 01448513              addi    a0,s1,20 # c0470014 <_stack_end+0xe0450014>
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:83
          0, kTopEarlgreyPowerManagerResetRequestsAonTimerAonAonTimerRstReq,
          true));
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);

  // Set the watchdog bite and bark thresholds.
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000c10e:                 4581                  li      a1,0
d000c110:                 206020ef              jal     ra,d000e316 <sec_mmio_write32>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000c114:                 0204a023              sw      zero,32(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:86
  abs_mmio_write32(kBase + AON_TIMER_WDOG_COUNT_REG_OFFSET, 0);
  abs_mmio_write32(kBase + AON_TIMER_WDOG_BARK_THOLD_REG_OFFSET,
                   config.bark_threshold);
d000c118:                 4008                  lw      a0,0(s0)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000c11a:                 cc88                  sw      a0,24(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:88
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
                   config.bite_threshold);
d000c11c:                 404c                  lw      a1,4(s0)
d000c11e:                 01c48513              addi    a0,s1,28
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:87
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
d000c122:                 1f4020ef              jal     ra,d000e316 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92

  // Enable or disable the watchdog as requested.
  uint32_t ctrl = kCtrlEnable;
  switch (launder32(config.enable)) {
d000c126:                 4408                  lw      a0,8(s0)
d000c128:                 1d400613              li      a2,468
d000c12c:          /----- 00c51b63              bne     a0,a2,d000c142 <watchdog_configure+0x58>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:98
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
      ctrl = kCtrlEnable;
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolFalse);
d000c130:          |      4408                  lw      a0,8(s0)
d000c132:          |      4581                  li      a1,0
d000c134:          |  /-- 00c50663              beq     a0,a2,d000c140 <watchdog_configure+0x56>
d000c138:          |  |   0000                  unimp
d000c13a:          |  |   0000                  unimp
d000c13c:          |  |   0000                  unimp
d000c13e:          |  |   0000                  unimp
d000c140:       /--|--\-X a829                  j       d000c15a <watchdog_configure+0x70>
d000c142:       |  \----> 73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92
  switch (launder32(config.enable)) {
d000c146:       |  /----- 02b51863              bne     a0,a1,d000c176 <watchdog_configure+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:94
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
d000c14a:       |  |      4408                  lw      a0,8(s0)
d000c14c:       |  |  /-- 00b50663              beq     a0,a1,d000c158 <watchdog_configure+0x6e>
d000c150:       |  |  |   0000                  unimp
d000c152:       |  |  |   0000                  unimp
d000c154:       |  |  |   0000                  unimp
d000c156:       |  |  |   0000                  unimp
d000c158:       |  |  \-> 4585                  li      a1,1
d000c15a:       \--|----> c0470537              lui     a0,0xc0470
d000c15e:          |      0551                  addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:104
      ctrl = kCtrlDisable;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, ctrl);
d000c160:          |      1b6020ef              jal     ra,d000e316 <sec_mmio_write32>
d000c164:          |      c0400537              lui     a0,0xc0400
d000c168:          |      4585                  li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000c16a:          |      cd0c                  sw      a1,24(a0)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:109

  // Redundantly re-request the pwrmgr configuration sync since it isn't
  // possible to use sec_mmio for it.
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);
}
d000c16c:          |      4492                  lw      s1,4(sp)
d000c16e:          |      4422                  lw      s0,8(sp)
d000c170:          |      40b2                  lw      ra,12(sp)
d000c172:          |      0141                  addi    sp,sp,16
d000c174:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:102
      HARDENED_UNREACHABLE();
d000c176:          \----> 0000                  unimp
d000c178:                 0000                  unimp
d000c17a:                 0000                  unimp
d000c17c:                 0000                  unimp

d000c17e <watchdog_disable>:
watchdog_disable():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:111

void watchdog_disable(void) {
d000c17e:       c0470537                lui     a0,0xc0470
d000c182:       0551                    addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:113
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioDisable, 1);
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000c184:       4581                    li      a1,0
d000c186:       1900206f                j       d000e316 <sec_mmio_write32>

d000c18a <dif_spi_host_init>:
dif_spi_host_init():
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:19
#include "spi_host_regs.h"  // Generated.

OT_WARN_UNUSED_RESULT
dif_result_t dif_spi_host_init(mmio_region_t base_addr,
                               dif_spi_host_t *spi_host) {
  if (spi_host == NULL) {
d000c18a:       /----- c581                     beqz    a1,d000c192 <dif_spi_host_init+0x8>
d000c18c:       |      4601                     li      a2,0
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:23
    return kDifBadArg;
  }

  spi_host->base_addr = base_addr;
d000c18e:       |      c188                     sw      a0,0(a1)
d000c190:       |  /-- a011                     j       d000c194 <dif_spi_host_init+0xa>
d000c192:       \--|-> 460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:26

  return kDifOk;
}
d000c194:          \-> 8532                     mv      a0,a2
d000c196:              8082                     ret

d000c198 <dif_spi_host_fifo_write>:
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:156
  uint32_t val = read_32((const void *)srcaddr);
  mmio_region_write32(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, val);
}

dif_result_t dif_spi_host_fifo_write(const dif_spi_host_t *spi_host,
                                     const void *src, uint16_t len) {
d000c198:                    468d                       li      a3,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:158
  uintptr_t ptr = (uintptr_t)src;
  if (spi_host == NULL || (src == NULL && len > 0)) {
d000c19a:       /----------- cd45                       beqz    a0,d000c252 <dif_spi_host_fifo_write+0xba>
d000c19c:       |            00b03733           snez    a4,a1
d000c1a0:       |            00163793           seqz    a5,a2
d000c1a4:       |            8f5d                       or      a4,a4,a5
d000c1a6:       +----------- c755                       beqz    a4,d000c252 <dif_spi_host_fifo_write+0xba>
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000c1a8:       |            0035f693           andi    a3,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
    return kDifBadArg;
  }

  // If the pointer starts mis-aligned, write until we are aligned.
  while (misalignment32_of(ptr) && len > 0) {
d000c1ac:       |            00d036b3           snez    a3,a3
d000c1b0:       |            00c03733           snez    a4,a2
d000c1b4:       |            8ef9                       and     a3,a3,a4
d000c1b6:       |  /-------- ce8d                       beqz    a3,d000c1f0 <dif_spi_host_fifo_write+0x58>
d000c1b8:       |  |         04800693           li      a3,72
d000c1bc:       |  |         6741                       lui     a4,0x10
d000c1be:       |  |         fff70813           addi    a6,a4,-1 # ffff <_stack_size+0xbfff>
d000c1c2:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
 * @param offset the offset to read at, in bytes.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t mmio_region_read32(mmio_region_t base, ptrdiff_t offset) {
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c1c4:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c1c6:       |  |  |  |   0ff77713           andi    a4,a4,255
d000c1ca:       |  |  |  \-- fed70de3           beq     a4,a3,d000c1c4 <dif_spi_host_fifo_write+0x2c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000c1ce:       |  |  |      00058883           lb      a7,0(a1)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:165
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
d000c1d2:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:166
    len -= 1;
d000c1d4:       |  |  |      167d                       addi    a2,a2,-1
d000c1d6:       |  |  |      010672b3           and     t0,a2,a6
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
d000c1da:       |  |  |      0035f713           andi    a4,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
  while (misalignment32_of(ptr) && len > 0) {
d000c1de:       |  |  |      00e03333           snez    t1,a4
d000c1e2:       |  |  |      00503733           snez    a4,t0
d000c1e6:       |  |  |      00e37733           and     a4,t1,a4
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write8(mmio_region_t base, ptrdiff_t offset,
                               uint8_t value) {
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000c1ea:       |  |  |      03178423           sb      a7,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
d000c1ee:       |  |  \----- fb71                       bnez    a4,d000c1c2 <dif_spi_host_fifo_write+0x2a>
d000c1f0:       |  \-------> 66c1                       lui     a3,0x10
d000c1f2:       |            fff68893           addi    a7,a3,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  }

  // Write complete 32-bit words to the fifo.
  while (len > 3) {
d000c1f6:       |            01167733           and     a4,a2,a7
d000c1fa:       |            4791                       li      a5,4
d000c1fc:       |  /-------- 02f76363           bltu    a4,a5,d000c222 <dif_spi_host_fifo_write+0x8a>
d000c200:       |  |         04800713           li      a4,72
d000c204:       |  |         480d                       li      a6,3
d000c206:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c208:       |  |  |  /-> 4bd4                       lw      a3,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000c20a:       |  |  |  |   0ff6f693           andi    a3,a3,255
d000c20e:       |  |  |  \-- fee68de3           beq     a3,a4,d000c208 <dif_spi_host_fifo_write+0x70>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000c212:       |  |  |      4194                       lw      a3,0(a1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c214:       |  |  |      d794                       sw      a3,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:173
    tx_fifo_write32(spi_host, ptr);
    ptr += 4;
    len -= 4;
d000c216:       |  |  |      1671                       addi    a2,a2,-4
d000c218:       |  |  |      011676b3           and     a3,a2,a7
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:172
    ptr += 4;
d000c21c:       |  |  |      0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  while (len > 3) {
d000c21e:       |  |  \----- fed864e3           bltu    a6,a3,d000c206 <dif_spi_host_fifo_write+0x6e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  }

  // Clean up any leftover bytes.
  while (len > 0) {
d000c222:       |  \-------> 011676b3           and     a3,a2,a7
d000c226:       |  /-------- c68d                       beqz    a3,d000c250 <dif_spi_host_fifo_write+0xb8>
d000c228:       |  |         04800693           li      a3,72
d000c22c:       |  |         6741                       lui     a4,0x10
d000c22e:       |  |         fff70813           addi    a6,a4,-1 # ffff <_stack_size+0xbfff>
d000c232:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c234:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000c236:       |  |  |  |   0ff77713           andi    a4,a4,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c23a:       |  |  |  \-- fed70de3           beq     a4,a3,d000c234 <dif_spi_host_fifo_write+0x9c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000c23e:       |  |  |      00058703           lb      a4,0(a1)
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000c242:       |  |  |      02e78423           sb      a4,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:180
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
    len -= 1;
d000c246:       |  |  |      167d                       addi    a2,a2,-1
d000c248:       |  |  |      01067733           and     a4,a2,a6
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:179
    ptr += 1;
d000c24c:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  while (len > 0) {
d000c24e:       |  |  \----- f375                       bnez    a4,d000c232 <dif_spi_host_fifo_write+0x9a>
d000c250:       |  \-------> 4681                       li      a3,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:184
  }

  return kDifOk;
}
d000c252:       \----------> 8536                       mv      a0,a3
d000c254:                    8082                       ret

d000c256 <dif_spi_host_fifo_read>:
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:223
  queue->length -= 4;
  return val;
}

dif_result_t dif_spi_host_fifo_read(const dif_spi_host_t *spi_host, void *dst,
                                    uint16_t len) {
d000c256:                       7179                    addi    sp,sp,-48
d000c258:                       d606                    sw      ra,44(sp)
d000c25a:                       d422                    sw      s0,40(sp)
d000c25c:                       d226                    sw      s1,36(sp)
d000c25e:                       d04a                    sw      s2,32(sp)
d000c260:                       ce4e                    sw      s3,28(sp)
d000c262:                       cc52                    sw      s4,24(sp)
d000c264:                       ca56                    sw      s5,20(sp)
d000c266:                       892a                    mv      s2,a0
d000c268:                       450d                    li      a0,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:224
  if (spi_host == NULL || (dst == NULL && len > 0)) {
d000c26a:       /-------------- 12090963                beqz    s2,d000c39c <dif_spi_host_fifo_read+0x146>
d000c26e:       |               89b2                    mv      s3,a2
d000c270:       |               84ae                    mv      s1,a1
d000c272:       |               00b035b3                snez    a1,a1
d000c276:       |               00163613                seqz    a2,a2
d000c27a:       |               8dd1                    or      a1,a1,a2
d000c27c:       +-------------- 12058063                beqz    a1,d000c39c <dif_spi_host_fifo_read+0x146>
d000c280:       |               00003517                auipc   a0,0x3
d000c284:       |               b1050513                addi    a0,a0,-1264 # d000ed90 <rom_printf.kHexTable+0x2c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  }

  uintptr_t ptr = (uintptr_t)dst;
  // We always have to read from the RXFIFO as a 32-bit word.  We use a
  // two-word queue to handle destination and length mis-alignments.
  queue_t queue = {0};
d000c288:       |               454c                    lw      a1,12(a0)
d000c28a:       |               4510                    lw      a2,8(a0)
d000c28c:       |               4154                    lw      a3,4(a0)
d000c28e:       |               c62e                    sw      a1,12(sp)
d000c290:       |               6a41                    lui     s4,0x10
d000c292:       |               c432                    sw      a2,8(sp)
d000c294:       |               c236                    sw      a3,4(sp)
d000c296:       |               4108                    lw      a0,0(a0)
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000c298:       |               0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235

  // If the buffer is misaligned, write a byte at a time until we reach
  // alignment.
  while (misalignment32_of(ptr) && len > 0) {
d000c29c:       |               00b035b3                snez    a1,a1
d000c2a0:       |               01303633                snez    a2,s3
d000c2a4:       |               8df1                    and     a1,a1,a2
d000c2a6:       |               f00a0413                addi    s0,s4,-256 # ff00 <_stack_size+0xbf00>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  queue_t queue = {0};
d000c2aa:       |               c02a                    sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000c2ac:       |  /----------- cdb1                    beqz    a1,d000c308 <dif_spi_host_fifo_read+0xb2>
d000c2ae:       |  |            4501                    li      a0,0
d000c2b0:       |  |            fffa0a93                addi    s5,s4,-1
d000c2b4:       |  |     /----- 00a04b63                bgtz    a0,d000c2ca <dif_spi_host_fifo_read+0x74>
d000c2b8:       |  |  /--|----> 00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c2bc:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000c2be:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000c2c0:       |  |  |  |  \-- ddf5                    beqz    a1,d000c2bc <dif_spi_host_fifo_read+0x66>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c2c2:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:238
    if (queue.length < 1) {
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000c2c4:       |  |  |  |      850a                    mv      a0,sp
d000c2c6:       |  |  |  |      2259                    jal     d000c44c <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000c2c8:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000c2ca:       |  |  |  >----> 45b2                    lw      a1,12(sp)
d000c2cc:       |  |  |  |      4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000c2ce:       |  |  |  |      00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000c2d2:       |  |  |  |      01859713                slli    a4,a1,0x18
d000c2d6:       |  |  |  |      8221                    srli    a2,a2,0x8
d000c2d8:       |  |  |  |      8e59                    or      a2,a2,a4
d000c2da:       |  |  |  |      81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
inline void write_64(uint64_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_64()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint64_t));
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000c2dc:       |  |  |  |      c62e                    sw      a1,12(sp)
d000c2de:       |  |  |  |      c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000c2e0:       |  |  |  |      157d                    addi    a0,a0,-1
d000c2e2:       |  |  |  |      c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:242
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000c2e4:       |  |  |  |      00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:243
    ptr += 1;
d000c2e8:       |  |  |  |      0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:244
    len -= 1;
d000c2ea:       |  |  |  |      19fd                    addi    s3,s3,-1
d000c2ec:       |  |  |  |      0159f533                and     a0,s3,s5
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000c2f0:       |  |  |  |      0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000c2f4:       |  |  |  |      00b035b3                snez    a1,a1
d000c2f8:       |  |  |  |      00a03533                snez    a0,a0
d000c2fc:       |  |  |  |      8d6d                    and     a0,a0,a1
d000c2fe:       |  +--|--|----- c509                    beqz    a0,d000c308 <dif_spi_host_fifo_read+0xb2>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:236
    if (queue.length < 1) {
d000c300:       |  |  |  |      4502                    lw      a0,0(sp)
d000c302:       |  |  |  \----- fca044e3                bgtz    a0,d000c2ca <dif_spi_host_fifo_read+0x74>
d000c306:       |  |  \-------- bf4d                    j       d000c2b8 <dif_spi_host_fifo_read+0x62>
d000c308:       |  \----------> fffa0513                addi    a0,s4,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  }

  // While we can write complete words to memory, operate on 4 bytes at a time.
  while (len > 3) {
d000c30c:       |               00a9f533                and     a0,s3,a0
d000c310:       |               4591                    li      a1,4
d000c312:       |  /----------- 02b56e63                bltu    a0,a1,d000c34e <dif_spi_host_fifo_read+0xf8>
d000c316:       |  |            4a0d                    li      s4,3
d000c318:       |  |            6541                    lui     a0,0x10
d000c31a:       |  |            fff50a93                addi    s5,a0,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:249
    if (queue.length < 4) {
d000c31e:       |  |  /-------> 4502                    lw      a0,0(sp)
d000c320:       |  |  |  /----- 00aa4b63                blt     s4,a0,d000c336 <dif_spi_host_fifo_read+0xe0>
d000c324:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c328:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000c32a:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000c32c:       |  |  |  |  \-- ddf5                    beqz    a1,d000c328 <dif_spi_host_fifo_read+0xd2>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c32e:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:251
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000c330:       |  |  |  |      850a                    mv      a0,sp
d000c332:       |  |  |  |      2a29                    jal     d000c44c <enqueue_word>
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
  queue->length -= 4;
d000c334:       |  |  |  |      4502                    lw      a0,0(sp)
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000c336:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000c338:       |  |  |         4622                    lw      a2,8(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000c33a:       |  |  |         c42e                    sw      a1,8(sp)
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
d000c33c:       |  |  |         1571                    addi    a0,a0,-4
d000c33e:       |  |  |         c02a                    sw      a0,0(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000c340:       |  |  |         c090                    sw      a2,0(s1)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:256
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    write_32(dequeue_word(&queue), (void *)ptr);
    ptr += 4;
    len -= 4;
d000c342:       |  |  |         19f1                    addi    s3,s3,-4
d000c344:       |  |  |         0159f533                and     a0,s3,s5
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:255
    ptr += 4;
d000c348:       |  |  |         0491                    addi    s1,s1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  while (len > 3) {
d000c34a:       |  |  \-------- fcaa6ae3                bltu    s4,a0,d000c31e <dif_spi_host_fifo_read+0xc8>
d000c34e:       |  \----------> 6541                    lui     a0,0x10
d000c350:       |               fff50a13                addi    s4,a0,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  }

  // Finish up any left over buffer a byte at a time.
  while (len > 0) {
d000c354:       |               0149f533                and     a0,s3,s4
d000c358:       |  /----------- c129                    beqz    a0,d000c39a <dif_spi_host_fifo_read+0x144>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:261
    if (queue.length < 1) {
d000c35a:       |  |  /-------> 4502                    lw      a0,0(sp)
d000c35c:       |  |  |  /----- 00a04b63                bgtz    a0,d000c372 <dif_spi_host_fifo_read+0x11c>
d000c360:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c364:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000c366:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000c368:       |  |  |  |  \-- ddf5                    beqz    a1,d000c364 <dif_spi_host_fifo_read+0x10e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c36a:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:263
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000c36c:       |  |  |  |      850a                    mv      a0,sp
d000c36e:       |  |  |  |      28f9                    jal     d000c44c <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000c370:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000c372:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000c374:       |  |  |         4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000c376:       |  |  |         00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000c37a:       |  |  |         01859713                slli    a4,a1,0x18
d000c37e:       |  |  |         8221                    srli    a2,a2,0x8
d000c380:       |  |  |         8e59                    or      a2,a2,a4
d000c382:       |  |  |         81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000c384:       |  |  |         c62e                    sw      a1,12(sp)
d000c386:       |  |  |         c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000c388:       |  |  |         157d                    addi    a0,a0,-1
d000c38a:       |  |  |         c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:267
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000c38c:       |  |  |         00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:269
    ptr += 1;
    len -= 1;
d000c390:       |  |  |         19fd                    addi    s3,s3,-1
d000c392:       |  |  |         0149f533                and     a0,s3,s4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:268
    ptr += 1;
d000c396:       |  |  |         0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  while (len > 0) {
d000c398:       |  |  \-------- f169                    bnez    a0,d000c35a <dif_spi_host_fifo_read+0x104>
d000c39a:       |  \----------> 4501                    li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:273
  }

  return kDifOk;
}
d000c39c:       \-------------> 4ad2                    lw      s5,20(sp)
d000c39e:                       4a62                    lw      s4,24(sp)
d000c3a0:                       49f2                    lw      s3,28(sp)
d000c3a2:                       5902                    lw      s2,32(sp)
d000c3a4:                       5492                    lw      s1,36(sp)
d000c3a6:                       5422                    lw      s0,40(sp)
d000c3a8:                       50b2                    lw      ra,44(sp)
d000c3aa:                       6145                    addi    sp,sp,48
d000c3ac:                       8082                    ret

d000c3ae <dif_spi_host_configure>:
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:66
                                    dif_spi_host_config_t config) {
d000c3ae:              460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:67
  if (spi_host == NULL) {
d000c3b0:       /----- cd35                     beqz    a0,d000c42c <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:70
  if (config.peripheral_clock_freq_hz == 0 || config.spi_clock == 0) {
d000c3b2:       |      41d4                     lw      a3,4(a1)
d000c3b4:       +----- cea5                     beqz    a3,d000c42c <dif_spi_host_configure+0x7e>
d000c3b6:       |      4198                     lw      a4,0(a1)
d000c3b8:       +----- cb35                     beqz    a4,d000c42c <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:75
      ((config.peripheral_clock_freq_hz / config.spi_clock) / 2) - 1;
d000c3ba:       |      02e6d6b3                 divu    a3,a3,a4
d000c3be:       |      8285                     srli    a3,a3,0x1
d000c3c0:       |      16fd                     addi    a3,a3,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:76
  if (divider & ~SPI_HOST_CONFIGOPTS_CLKDIV_0_MASK) {
d000c3c2:       |      0106d713                 srli    a4,a3,0x10
d000c3c6:       +----- e33d                     bnez    a4,d000c42c <dif_spi_host_configure+0x7e>
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:32
  mmio_region_write32(
d000c3c8:       |      4110                     lw      a2,0(a0)
d000c3ca:       |      40000737                 lui     a4,0x40000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c3ce:       |      ca18                     sw      a4,16(a2)
d000c3d0:       |      4110                     lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c3d2:       |  /-> 4a5c                     lw      a5,20(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000c3d4:       |  |   8ff9                     and     a5,a5,a4
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:42
  } while (active);
d000c3d6:       |  \-- fff5                     bnez    a5,d000c3d2 <dif_spi_host_configure+0x24>
d000c3d8:       |      6741                     lui     a4,0x10
d000c3da:       |      177d                     addi    a4,a4,-1
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c3dc:       |  /-> 4a5c                     lw      a5,20(a2)
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:51
  } while (txqd != 0 || rxqd != 0);
d000c3de:       |  |   8ff9                     and     a5,a5,a4
d000c3e0:       |  \-- fff5                     bnez    a5,d000c3dc <dif_spi_host_configure+0x2e>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c3e2:       |      00062823                 sw      zero,16(a2)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c3e6:       |      00858603                 lb      a2,8(a1) # 80000008 <_stack_end+0x9ffe0008>
d000c3ea:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000c3ec:       |      0672                     slli    a2,a2,0x1c
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c3ee:       |      00958703                 lb      a4,9(a1)
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000c3f2:       |      8231                     srli    a2,a2,0xc
d000c3f4:       |      8e55                     or      a2,a2,a3
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:89
                               config.chip_select.lead);
d000c3f6:       |      00a5c683                 lbu     a3,10(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
d000c3fa:       |      0772                     slli    a4,a4,0x1c
d000c3fc:       |      8321                     srli    a4,a4,0x8
d000c3fe:       |      8e59                     or      a2,a2,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c400:       |      8abd                     andi    a3,a3,15
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000c402:       |      00b58703                 lb      a4,11(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c406:       |      06e2                     slli    a3,a3,0x18
d000c408:       |      8e55                     or      a2,a2,a3
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000c40a:       |      00c58683                 lb      a3,12(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c40e:       |      0776                     slli    a4,a4,0x1d
d000c410:       |      8e59                     or      a2,a2,a4
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000c412:       |      00d58583                 lb      a1,13(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c416:       |      06fa                     slli    a3,a3,0x1e
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:94
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CONFIGOPTS_REG_OFFSET, reg);
d000c418:       |      4118                     lw      a4,0(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000c41a:       |      8e55                     or      a2,a2,a3
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c41c:       |      05fe                     slli    a1,a1,0x1f
d000c41e:       |      8dd1                     or      a1,a1,a2
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c420:       |      cf0c                     sw      a1,24(a4)
spi_host_enable():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:60
  mmio_region_write32(
d000c422:       |      4108                     lw      a0,0(a0)
d000c424:       |      4601                     li      a2,0
d000c426:       |      800005b7                 lui     a1,0x80000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c42a:       |      c90c                     sw      a1,16(a0)
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:97
}
d000c42c:       \----> 8532                     mv      a0,a2
d000c42e:              8082                     ret

d000c430 <dif_spi_host_output_set_enabled>:
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:101
  if (spi_host == NULL) {
d000c430:       /-- cd01                        beqz    a0,d000c448 <dif_spi_host_output_set_enabled+0x18>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:106
      mmio_region_read32(spi_host->base_addr, SPI_HOST_CONTROL_REG_OFFSET);
d000c432:       |   4110                        lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c434:       |   4a14                        lw      a3,16(a2)
d000c436:       |   4501                        li      a0,0
d000c438:       |   e0000737            lui     a4,0xe0000
d000c43c:       |   177d                        addi    a4,a4,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000c43e:       |   8ef9                        and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c440:       |   05f6                        slli    a1,a1,0x1d
d000c442:       |   8dd5                        or      a1,a1,a3
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c444:       |   ca0c                        sw      a1,16(a2)
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:112
}
d000c446:       |   8082                        ret
d000c448:       \-> 450d                        li      a0,3
d000c44a:           8082                        ret

d000c44c <enqueue_word>:
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:196
  if (queue->length % sizeof(uint32_t) == 0) {
d000c44c:              4110                     lw      a2,0(a0)
d000c44e:              00367693                 andi    a3,a2,3
d000c452:       /----- c29d                     beqz    a3,d000c478 <enqueue_word+0x2c>
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c454:       |      00160693                 addi    a3,a2,1
d000c458:       |      c114                     sw      a3,0(a0)
d000c45a:       |      962a                     add     a2,a2,a0
d000c45c:       |      00b60423                 sb      a1,8(a2)
d000c460:       |      460d                     li      a2,3
d000c462:       |  /-> 4114                     lw      a3,0(a0)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:202
      data >>= 8;
d000c464:       |  |   81a1                     srli    a1,a1,0x8
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c466:       |  |   00168713                 addi    a4,a3,1
d000c46a:       |  |   c118                     sw      a4,0(a0)
d000c46c:       |  |   96aa                     add     a3,a3,a0
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000c46e:       |  |   167d                     addi    a2,a2,-1
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c470:       |  |   00b68423                 sb      a1,8(a3)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000c474:       |  \-- f67d                     bnez    a2,d000c462 <enqueue_word+0x16>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000c476:       |      8082                     ret
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:197
    write_32(data, queue->data + queue->length);
d000c478:       \----> 962a                     add     a2,a2,a0
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000c47a:              c60c                     sw      a1,8(a2)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:198
    queue->length += 4;
d000c47c:              410c                     lw      a1,0(a0)
d000c47e:              0591                     addi    a1,a1,4
d000c480:              c10c                     sw      a1,0(a0)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000c482:              8082                     ret

d000c484 <dif_spi_host_transaction>:
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:362
}

dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
                                      uint32_t csid,
                                      dif_spi_host_segment_t *segments,
                                      size_t length) {
d000c484:                          7139                 addi    sp,sp,-64
d000c486:                          de06                 sw      ra,60(sp)
d000c488:                          dc22                 sw      s0,56(sp)
d000c48a:                          da26                 sw      s1,52(sp)
d000c48c:                          d84a                 sw      s2,48(sp)
d000c48e:                          d64e                 sw      s3,44(sp)
d000c490:                          d452                 sw      s4,40(sp)
d000c492:                          d256                 sw      s5,36(sp)
d000c494:                          d05a                 sw      s6,32(sp)
d000c496:                          ce5e                 sw      s7,28(sp)
d000c498:                          cc62                 sw      s8,24(sp)
d000c49a:                          ca66                 sw      s9,20(sp)
d000c49c:                          c86a                 sw      s10,16(sp)
d000c49e:                          c66e                 sw      s11,12(sp)
d000c4a0:                          8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:364
  // Write to chip select ID.
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CSID_REG_OFFSET, csid);
d000c4a2:                          4108                 lw      a0,0(a0)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c4a4:                          cd4c                 sw      a1,28(a0)
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368

  // For each segment, write the segment information to the
  // COMMAND register and transmit FIFO.
  for (size_t i = 0; i < length; ++i) {
d000c4a6:       /----------------- 1a068563             beqz    a3,d000c650 <dif_spi_host_transaction+0x1cc>
d000c4aa:       |                  8d36                 mv      s10,a3
d000c4ac:       |                  8932                 mv      s2,a2
d000c4ae:       |                  4401                 li      s0,0
d000c4b0:       |                  fff68a93             addi    s5,a3,-1
d000c4b4:       |                  0016b513             seqz    a0,a3
d000c4b8:       |                  c02a                 sw      a0,0(sp)
d000c4ba:       |                  6505                 lui     a0,0x1
d000c4bc:       |                  c0050b13             addi    s6,a0,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000c4c0:       |                  4851                 li      a6,20
d000c4c2:       |                  4c15                 li      s8,5
d000c4c4:       |                  00003c97             auipc   s9,0x3
d000c4c8:       |                  8b0c8c93             addi    s9,s9,-1872 # d000ed74 <rom_printf.kHexTable+0x10>
d000c4cc:       |                  04800493             li      s1,72
d000c4d0:       |                  6541                 lui     a0,0x10
d000c4d2:       |                  f0050593             addi    a1,a0,-256 # ff00 <_stack_size+0xbf00>
d000c4d6:       |                  c22e                 sw      a1,4(sp)
d000c4d8:       |                  157d                 addi    a0,a0,-1
d000c4da:       |                  c42a                 sw      a0,8(sp)
d000c4dc:       |        /-------> 000a2503             lw      a0,0(s4)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c4e0:       |        |     /-> 494c                 lw      a1,20(a0)
wait_ready():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:120
  } while (!ready);
d000c4e2:       |        |     \-- fe05dfe3             bgez    a1,d000c4e0 <dif_spi_host_transaction+0x5c>
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:372
    bool last_segment = i == length - 1;
    wait_ready(spi_host);
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000c4e6:       |        |         030405b3             mul     a1,s0,a6
d000c4ea:       |        |         95ca                 add     a1,a1,s2
d000c4ec:       |        |         4190                 lw      a2,0(a1)
d000c4ee:       |  /-----|-------- 18cc6163             bltu    s8,a2,d000c670 <dif_spi_host_transaction+0x1ec>
d000c4f2:       |  |     |         060a                 slli    a2,a2,0x2
d000c4f4:       |  |     |         9666                 add     a2,a2,s9
d000c4f6:       |  |     |         4210                 lw      a2,0(a2)
d000c4f8:       |  |     |         015446b3             xor     a3,s0,s5
d000c4fc:       |  |     |         0016bd93             seqz    s11,a3
d000c500:       |  |     |         8602                 jr      a2
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c502:       |  |     |     /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c504:       |  |     |     |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c508:       |  |     |     \-- fe960de3             beq     a2,s1,d000c502 <dif_spi_host_transaction+0x7e>
issue_opcode():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:292
                     segment->opcode);
d000c50c:       |  |     |         00458583             lb      a1,4(a1) # 3004 <_static_critical_size+0x1040>
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000c510:       |  |     |         02b50423             sb      a1,40(a0)
d000c514:       |  |     |         6589                 lui     a1,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c516:       |  |     |     /-- 000d9463             bnez    s11,d000c51e <dif_spi_host_transaction+0x9a>
d000c51a:       |  |     |     |   20058593             addi    a1,a1,512 # 2200 <_static_critical_size+0x23c>
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c51e:       |  |     |     \-> 000a2503             lw      a0,0(s4)
d000c522:       |  |     |  /----- a0c5                 j       d000c602 <dif_spi_host_transaction+0x17e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c524:       |  |     |  |  /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c526:       |  |     |  |  |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c52a:       |  |     |  |  \-- fe960de3             beq     a2,s1,d000c524 <dif_spi_host_transaction+0xa0>
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:301
  uint32_t address = bitfield_byteswap32(segment->address.address);
d000c52e:       |  |     |  |      45d4                 lw      a3,12(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
  return __builtin_bswap32(bitfield);
d000c530:       |  |     |  |      0086d613             srli    a2,a3,0x8
d000c534:       |  |     |  |      4712                 lw      a4,4(sp)
d000c536:       |  |     |  |      8e79                 and     a2,a2,a4
d000c538:       |  |     |  |      0186d713             srli    a4,a3,0x18
d000c53c:       |  |     |  |      8f51                 or      a4,a4,a2
d000c53e:       |  |     |  |      00869793             slli    a5,a3,0x8
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c542:       |  |     |  |      0085a883             lw      a7,8(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
d000c546:       |  |     |  |      00ff0637             lui     a2,0xff0
d000c54a:       |  |     |  |      8ff1                 and     a5,a5,a2
d000c54c:       |  |     |  |      06e2                 slli    a3,a3,0x18
d000c54e:       |  |     |  |      8edd                 or      a3,a3,a5
d000c550:       |  |     |  |      8ed9                 or      a3,a3,a4
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
d000c552:       |  |     |  |      4605                 li      a2,1
d000c554:       |  |     |  |  /-- 00c88363             beq     a7,a2,d000c55a <dif_spi_host_transaction+0xd6>
d000c558:       |  |     |  |  |   82a1                 srli    a3,a3,0x8
d000c55a:       |  |     |  |  \-> 6709                 lui     a4,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c55c:       |  |     |  |  /-- 000d9463             bnez    s11,d000c564 <dif_spi_host_transaction+0xe0>
d000c560:       |  |     |  |  |   20070713             addi    a4,a4,512 # 2200 <_static_critical_size+0x23c>
d000c564:       |  |     |  |  \-> d514                 sw      a3,40(a0)
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:313
  write_command_reg(spi_host, length, segment->address.width,
d000c566:       |  |     |  |      41c8                 lw      a0,4(a1)
d000c568:       |  |     |  |      fff88593             addi    a1,a7,-1
d000c56c:       |  |     |  |      0015b593             seqz    a1,a1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c570:       |  |     |  |      8dd9                 or      a1,a1,a4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c572:       |  |     |  |      00a51613             slli    a2,a0,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c576:       |  |     |  |      000a2503             lw      a0,0(s4)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c57a:       |  |     |  |      01667633             and     a2,a2,s6
d000c57e:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c580:       |  |     |  |      0025e593             ori     a1,a1,2
d000c584:       |  |     |  +----- a8bd                 j       d000c602 <dif_spi_host_transaction+0x17e>
issue_dummy():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:319
  write_command_reg(spi_host, segment->dummy.length, segment->dummy.width,
d000c586:       |  |     |  |      4590                 lw      a2,8(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c588:       |  |     |  |      167d                 addi    a2,a2,-1
d000c58a:       |  |     |  |      1ff67613             andi    a2,a2,511
d000c58e:       |  |     |  |  /-- 000d9463             bnez    s11,d000c596 <dif_spi_host_transaction+0x112>
d000c592:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c596:       |  |     |  |  \-> 41cc                 lw      a1,4(a1)
d000c598:       |  |     |  |      05aa                 slli    a1,a1,0xa
d000c59a:       |  |     |  |      0165f5b3             and     a1,a1,s6
d000c59e:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c5a0:       |  |     |  +----- a08d                 j       d000c602 <dif_spi_host_transaction+0x17e>
issue_data_phase():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:332
      width = segment->tx.width;
d000c5a2:       |  |     |  |      0045a983             lw      s3,4(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:333
      length = segment->tx.length;
d000c5a6:       |  |     |  |      00c5ab83             lw      s7,12(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:335
      spi_host_fifo_write_alias(spi_host, segment->tx.buf, segment->tx.length);
d000c5aa:       |  |     |  |      458c                 lw      a1,8(a1)
d000c5ac:       |  |     |  |      4522                 lw      a0,8(sp)
d000c5ae:       |  |     |  |      00abf633             and     a2,s7,a0
d000c5b2:       |  |     |  |      8552                 mv      a0,s4
d000c5b4:       |  |     |  |      be5ff0ef             jal     ra,d000c198 <dif_spi_host_fifo_write>
d000c5b8:       |  |     |  |      6589                 lui     a1,0x2
d000c5ba:       |  |     |  |  /-- a01d                 j       d000c5e0 <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:345
      width = segment->rx.width;
d000c5bc:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 2004 <_static_critical_size+0x40>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:346
      length = segment->rx.length;
d000c5c0:       |  |     |  |  |   00c5ab83             lw      s7,12(a1)
d000c5c4:       |  |     |  |  |   6585                 lui     a1,0x1
d000c5c6:       |  |     |  |  +-- a829                 j       d000c5e0 <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:338
      width = segment->bidir.width;
d000c5c8:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 1004 <_epmp_reset_rx_size+0x804>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:339
      length = segment->bidir.length;
d000c5cc:       |  |     |  |  |   0105ab83             lw      s7,16(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:341
      spi_host_fifo_write_alias(spi_host, segment->bidir.txbuf,
d000c5d0:       |  |     |  |  |   458c                 lw      a1,8(a1)
d000c5d2:       |  |     |  |  |   4522                 lw      a0,8(sp)
d000c5d4:       |  |     |  |  |   00abf633             and     a2,s7,a0
d000c5d8:       |  |     |  |  |   8552                 mv      a0,s4
d000c5da:       |  |     |  |  |   bbfff0ef             jal     ra,d000c198 <dif_spi_host_fifo_write>
d000c5de:       |  |     |  |  |   658d                 lui     a1,0x3
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c5e0:       |  |     |  |  \-> fffb8513             addi    a0,s7,-1
d000c5e4:       |  |     |  |      1ff57613             andi    a2,a0,511
d000c5e8:       |  |     |  |  /-- 000d9463             bnez    s11,d000c5f0 <dif_spi_host_transaction+0x16c>
d000c5ec:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c5f0:       |  |     |  |  \-> 4851                 li      a6,20
d000c5f2:       |  |     |  |      00a99693             slli    a3,s3,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c5f6:       |  |     |  |      000a2503             lw      a0,0(s4)
d000c5fa:       |  |     |  |      0166f6b3             and     a3,a3,s6
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c5fe:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c600:       |  |     |  |      8dd5                 or      a1,a1,a3
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368
  for (size_t i = 0; i < length; ++i) {
d000c602:       |  |     |  \----> 0405                 addi    s0,s0,1
d000c604:       |  |     |         d10c                 sw      a1,32(a0)
d000c606:       |  |     \-------- eda41be3             bne     s0,s10,d000c4dc <dif_spi_host_transaction+0x58>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
        return kDifBadArg;
    }
  }

  // For each segment which receives data, read from the receive FIFO.
  for (size_t i = 0; i < length; ++i) {
d000c60a:       |  |               4502                 lw      a0,0(sp)
d000c60c:       +--|-------------- e131                 bnez    a0,d000c650 <dif_spi_host_transaction+0x1cc>
d000c60e:       |  |               4401                 li      s0,0
d000c610:       |  |               00c90493             addi    s1,s2,12
d000c614:       |  |               4995                 li      s3,5
d000c616:       |  |               4a91                 li      s5,4
d000c618:       |  |               4b51                 li      s6,20
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:399
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000c61a:       |  |  /----------> ff44a503             lw      a0,-12(s1)
d000c61e:       |  |  |     /----- 01350b63             beq     a0,s3,d000c634 <dif_spi_host_transaction+0x1b0>
d000c622:       |  |  |  /--|----- 03551263             bne     a0,s5,d000c646 <dif_spi_host_transaction+0x1c2>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:401
      case kDifSpiHostSegmentTypeRx:
        spi_host_fifo_read_alias(spi_host, segment->rx.buf, segment->rx.length);
d000c626:       |  |  |  |  |      03640533             mul     a0,s0,s6
d000c62a:       |  |  |  |  |      954a                 add     a0,a0,s2
d000c62c:       |  |  |  |  |      00850593             addi    a1,a0,8
d000c630:       |  |  |  |  |      0531                 addi    a0,a0,12
d000c632:       |  |  |  |  |  /-- a021                 j       d000c63a <dif_spi_host_transaction+0x1b6>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:406
        break;
      case kDifSpiHostSegmentTypeBidirectional:
        spi_host_fifo_read_alias(spi_host, segment->bidir.rxbuf,
                                 segment->bidir.length);
        break;
d000c634:       |  |  |  |  \--|-> 00448513             addi    a0,s1,4
d000c638:       |  |  |  |     |   85a6                 mv      a1,s1
d000c63a:       |  |  |  |     \-> 418c                 lw      a1,0(a1)
d000c63c:       |  |  |  |         00055603             lhu     a2,0(a0)
d000c640:       |  |  |  |         8552                 mv      a0,s4
d000c642:       |  |  |  |         c15ff0ef             jal     ra,d000c256 <dif_spi_host_fifo_read>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
  for (size_t i = 0; i < length; ++i) {
d000c646:       |  |  |  \-------> 0405                 addi    s0,s0,1
d000c648:       |  |  |            1d7d                 addi    s10,s10,-1
d000c64a:       |  |  |            04d1                 addi    s1,s1,20
d000c64c:       |  |  \----------- fc0d17e3             bnez    s10,d000c61a <dif_spi_host_transaction+0x196>
d000c650:       \--|-------------> 4501                 li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:412
      default:
          /* do nothing */;
    }
  }
  return kDifOk;
}
d000c652:          |           /-> 4db2                 lw      s11,12(sp)
d000c654:          |           |   4d42                 lw      s10,16(sp)
d000c656:          |           |   4cd2                 lw      s9,20(sp)
d000c658:          |           |   4c62                 lw      s8,24(sp)
d000c65a:          |           |   4bf2                 lw      s7,28(sp)
d000c65c:          |           |   5b02                 lw      s6,32(sp)
d000c65e:          |           |   5a92                 lw      s5,36(sp)
d000c660:          |           |   5a22                 lw      s4,40(sp)
d000c662:          |           |   59b2                 lw      s3,44(sp)
d000c664:          |           |   5942                 lw      s2,48(sp)
d000c666:          |           |   54d2                 lw      s1,52(sp)
d000c668:          |           |   5462                 lw      s0,56(sp)
d000c66a:          |           |   50f2                 lw      ra,60(sp)
d000c66c:          |           |   6121                 addi    sp,sp,64
d000c66e:          |           |   8082                 ret
d000c670:          \-----------|-> 450d                 li      a0,3
d000c672:                      \-- b7c5                 j       d000c652 <dif_spi_host_transaction+0x1ce>

d000c674 <test_status_set>:
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
d000c674:                    1101                       addi    sp,sp,-32
d000c676:                    ce06                       sw      ra,28(sp)
d000c678:                    65b1                       lui     a1,0xc
d000c67a:                    aad58593           addi    a1,a1,-1363 # baad <_stack_size+0x7aad>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:26
  switch (test_status) {
d000c67e:             /----- 02b50063           beq     a0,a1,d000c69e <test_status_set+0x2a>
d000c682:             |      65a5                       lui     a1,0x9
d000c684:             |      05b5                       addi    a1,a1,13
d000c686:          /--|----- 02b50d63           beq     a0,a1,d000c6c0 <test_status_set+0x4c>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c68a:          |  |      00003597           auipc   a1,0x3
d000c68e:          |  |      48258593           addi    a1,a1,1154 # d000fb0c <kDeviceTestStatusAddress>
d000c692:          |  |      418c                       lw      a1,0(a1)
d000c694:          |  |  /-- c191                       beqz    a1,d000c698 <test_status_set+0x24>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c696:          |  |  |   c188                       sw      a0,0(a1)
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
d000c698:          |  |  \-> 40f2                       lw      ra,28(sp)
d000c69a:          |  |      6105                       addi    sp,sp,32
d000c69c:          |  |      8082                       ret
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c69e:          |  \----> 00003517           auipc   a0,0x3
d000c6a2:          |         47250513           addi    a0,a0,1138 # d000fb10 <kDeviceLogBypassUartAddress>
d000c6a6:          |         4108                       lw      a0,0(a0)
d000c6a8:          |  /----- ed0d                       bnez    a0,d000c6e2 <test_status_set+0x6e>
d000c6aa:          |  |      00002597           auipc   a1,0x2
d000c6ae:          |  |      74658593           addi    a1,a1,1862 # d000edf0 <rom_printf.kHexTable+0x8c>
d000c6b2:          |  |      0028                       addi    a0,sp,8
d000c6b4:          |  |      4651                       li      a2,20
d000c6b6:          |  |      5b7010ef           jal     ra,d000e46c <memcpy>
d000c6ba:          |  |      0028                       addi    a0,sp,8
d000c6bc:          |  |      2095                       jal     d000c720 <base_log_internal_core>
d000c6be:          |  |  /-- a035                       j       d000c6ea <test_status_set+0x76>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c6c0:          \--|--|-> 00003517           auipc   a0,0x3
d000c6c4:             |  |   45050513           addi    a0,a0,1104 # d000fb10 <kDeviceLogBypassUartAddress>
d000c6c8:             |  |   4108                       lw      a0,0(a0)
d000c6ca:       /-----|--|-- e915                       bnez    a0,d000c6fe <test_status_set+0x8a>
d000c6cc:       |     |  |   00002597           auipc   a1,0x2
d000c6d0:       |     |  |   71058593           addi    a1,a1,1808 # d000eddc <rom_printf.kHexTable+0x78>
d000c6d4:       |     |  |   0028                       addi    a0,sp,8
d000c6d6:       |     |  |   4651                       li      a2,20
d000c6d8:       |     |  |   595010ef           jal     ra,d000e46c <memcpy>
d000c6dc:       |     |  |   0028                       addi    a0,sp,8
d000c6de:       |     |  |   2089                       jal     d000c720 <base_log_internal_core>
d000c6e0:       |  /--|--|-- a01d                       j       d000c706 <test_status_set+0x92>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c6e2:       |  |  \--|-> 07800513           li      a0,120
d000c6e6:       |  |     |   4581                       li      a1,0
d000c6e8:       |  |     |   28e9                       jal     d000c7c2 <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c6ea:       |  |     \-> 00003517           auipc   a0,0x3
d000c6ee:       |  |         42250513           addi    a0,a0,1058 # d000fb0c <kDeviceTestStatusAddress>
d000c6f2:       |  |         4108                       lw      a0,0(a0)
d000c6f4:       |  |  /----- c115                       beqz    a0,d000c718 <test_status_set+0xa4>
d000c6f6:       |  |  |      65b1                       lui     a1,0xc
d000c6f8:       |  |  |      aad58593           addi    a1,a1,-1363 # baad <_stack_size+0x7aad>
d000c6fc:       |  |  |  /-- a829                       j       d000c716 <test_status_set+0xa2>
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c6fe:       \--|--|--|-> 06400513           li      a0,100
d000c702:          |  |  |   4581                       li      a1,0
d000c704:          |  |  |   287d                       jal     d000c7c2 <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c706:          \--|--|-> 00003517           auipc   a0,0x3
d000c70a:             |  |   40650513           addi    a0,a0,1030 # d000fb0c <kDeviceTestStatusAddress>
d000c70e:             |  |   4108                       lw      a0,0(a0)
d000c710:             +--|-- c501                       beqz    a0,d000c718 <test_status_set+0xa4>
d000c712:             |  |   65a5                       lui     a1,0x9
d000c714:             |  |   05b5                       addi    a1,a1,13
d000c716:             |  \-> c10c                       sw      a1,0(a0)
d000c718:             \----> 2009                       jal     d000c71a <abort>

d000c71a <abort>:
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
d000c71a:       /-> 10500073            wfi
abort():
/proc/self/cwd/sw/device/lib/runtime/hart.c:21
  while ((ibex_mcycle_read() - start) < cycles) {
  }
}

noreturn void abort(void) {
  while (true) {
d000c71e:       \-- bff5                        j       d000c71a <abort>

d000c720 <base_log_internal_core>:
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
d000c720:              7179                     addi    sp,sp,-48
d000c722:              c606                     sw      ra,12(sp)
d000c724:              c422                     sw      s0,8(sp)
d000c726:              c226                     sw      s1,4(sp)
d000c728:              842a                     mv      s0,a0
d000c72a:              d646                     sw      a7,44(sp)
d000c72c:              d442                     sw      a6,40(sp)
d000c72e:              d23e                     sw      a5,36(sp)
d000c730:              d03a                     sw      a4,32(sp)
d000c732:              ce36                     sw      a3,28(sp)
d000c734:              cc32                     sw      a2,24(sp)
d000c736:              ca2e                     sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
d000c738:              4148                     lw      a0,4(a0)
d000c73a:              800005b7                 lui     a1,0x80000
d000c73e:              fff58613                 addi    a2,a1,-1 # 7fffffff <_stack_end+0x9ffdffff>
d000c742:              4581                     li      a1,0
d000c744:              6bd010ef                 jal     ra,d000e600 <memchr>
d000c748:              4054                     lw      a3,4(s0)
d000c74a:              40d50633                 sub     a2,a0,a3
/proc/self/cwd/sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
d000c74e:              02f00593                 li      a1,47
d000c752:              8536                     mv      a0,a3
d000c754:              75b010ef                 jal     ra,d000e6ae <memrchr>
/proc/self/cwd/sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
d000c758:       /----- c501                     beqz    a0,d000c760 <base_log_internal_core+0x40>
/proc/self/cwd/sw/device/lib/runtime/log.c:54
    base_name = log.file_name;
  } else {
    ++base_name;  // Remove the final '/'.
d000c75a:       |      00150693                 addi    a3,a0,1
d000c75e:       |  /-- a011                     j       d000c762 <base_log_internal_core+0x42>
/proc/self/cwd/sw/device/lib/runtime/log.c:52
    base_name = log.file_name;
d000c760:       \--|-> 4054                     lw      a3,4(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c762:          \-> 4008                     lw      a0,0(s0)
d000c764:              458d                     li      a1,3
stringify_severity():
/proc/self/cwd/sw/device/lib/runtime/log.c:27
  switch (severity) {
d000c766:       /----- 00a5ea63                 bltu    a1,a0,d000c77a <base_log_internal_core+0x5a>
d000c76a:       |      050a                     slli    a0,a0,0x2
d000c76c:       |      00002597                 auipc   a1,0x2
d000c770:       |      6b458593                 addi    a1,a1,1716 # d000ee20 <rom_printf.kHexTable+0xbc>
d000c774:       |      952e                     add     a0,a0,a1
d000c776:       |      410c                     lw      a1,0(a0)
d000c778:       |  /-- a029                     j       d000c782 <base_log_internal_core+0x62>
d000c77a:       \--|-> 00002597                 auipc   a1,0x2
d000c77e:          |   6a158593                 addi    a1,a1,1697 # d000ee1b <rom_printf.kHexTable+0xb7>
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
d000c782:          \-> 0fff6497                 auipc   s1,0xfff6
d000c786:              8de48493                 addi    s1,s1,-1826 # e0002060 <base_log_internal_core.global_log_counter>
d000c78a:              0004d603                 lhu     a2,0(s1)
d000c78e:              4418                     lw      a4,8(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c790:              00002517                 auipc   a0,0x2
d000c794:              67450513                 addi    a0,a0,1652 # d000ee04 <rom_printf.kHexTable+0xa0>
d000c798:              208d                     jal     d000c7fa <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:64
  ++global_log_counter;
d000c79a:              00049503                 lh      a0,0(s1)
d000c79e:              0505                     addi    a0,a0,1
d000c7a0:              00a49023                 sh      a0,0(s1)
d000c7a4:              0848                     addi    a0,sp,20
/proc/self/cwd/sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
d000c7a6:              c02a                     sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
d000c7a8:              4808                     lw      a0,16(s0)
d000c7aa:              084c                     addi    a1,sp,20
d000c7ac:              2041                     jal     d000c82c <base_vprintf>
/proc/self/cwd/sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
d000c7ae:              00002517                 auipc   a0,0x2
d000c7b2:              45250513                 addi    a0,a0,1106 # d000ec00 <_text_end+0x1f8>
d000c7b6:              2091                     jal     d000c7fa <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:72
}
d000c7b8:              4492                     lw      s1,4(sp)
d000c7ba:              4422                     lw      s0,8(sp)
d000c7bc:              40b2                     lw      ra,12(sp)
d000c7be:              6145                     addi    sp,sp,48
d000c7c0:              8082                     ret

d000c7c2 <base_log_internal_dv>:
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
d000c7c2:              1101                     addi    sp,sp,-32
d000c7c4:              ce46                     sw      a7,28(sp)
d000c7c6:              cc42                     sw      a6,24(sp)
d000c7c8:              ca3e                     sw      a5,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
d000c7ca:              00003797                 auipc   a5,0x3
d000c7ce:              34678793                 addi    a5,a5,838 # d000fb10 <kDeviceLogBypassUartAddress>
d000c7d2:              439c                     lw      a5,0(a5)
d000c7d4:              c83a                     sw      a4,16(sp)
d000c7d6:              c636                     sw      a3,12(sp)
d000c7d8:              c432                     sw      a2,8(sp)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c7da:              c388                     sw      a0,0(a5)
d000c7dc:              0028                     addi    a0,sp,8
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
d000c7de:              c22a                     sw      a0,4(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c7e0:       /----- c989                     beqz    a1,d000c7f2 <base_log_internal_dv+0x30>
/proc/self/cwd/sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
d000c7e2:       |  /-> 4512                     lw      a0,4(sp)
d000c7e4:       |  |   00450613                 addi    a2,a0,4
d000c7e8:       |  |   c232                     sw      a2,4(sp)
d000c7ea:       |  |   4108                     lw      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c7ec:       |  |   15fd                     addi    a1,a1,-1
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c7ee:       |  |   c388                     sw      a0,0(a5)
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:90
d000c7f0:       |  \-- f9ed                     bnez    a1,d000c7e2 <base_log_internal_dv+0x20>
/proc/self/cwd/sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
d000c7f2:       \----> 6105                     addi    sp,sp,32
d000c7f4:              8082                     ret

d000c7f6 <base_dev_null>:
base_dev_null():
/proc/self/cwd/sw/device/lib/runtime/print.c:52

static const char kErrorNul[17] = "%<unexpected nul>";
static const char kUnknownSpec[15] = "%<unknown spec>";
static const char kErrorTooWide[12] = "%<bad width>";

static size_t base_dev_null(void *data, const char *buf, size_t len) {
d000c7f6:       8532                    mv      a0,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:53
  return len;
d000c7f8:       8082                    ret

d000c7fa <base_printf>:
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:84
void base_uart_stdout(const dif_uart_t *uart) {
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}

size_t base_printf(const char *format, ...) {
d000c7fa:       7179                    addi    sp,sp,-48
d000c7fc:       c606                    sw      ra,12(sp)
d000c7fe:       d646                    sw      a7,44(sp)
d000c800:       d442                    sw      a6,40(sp)
d000c802:       d23e                    sw      a5,36(sp)
d000c804:       d03a                    sw      a4,32(sp)
d000c806:       ce36                    sw      a3,28(sp)
d000c808:       cc32                    sw      a2,24(sp)
d000c80a:       ca2e                    sw      a1,20(sp)
d000c80c:       0fff6597                auipc   a1,0xfff6
d000c810:       85858593                addi    a1,a1,-1960 # e0002064 <base_stdout>
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
d000c814:       4190                    lw      a2,0(a1)
d000c816:       41cc                    lw      a1,4(a1)
d000c818:       872a                    mv      a4,a0
d000c81a:       0848                    addi    a0,sp,20
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:86
  va_start(args, format);
d000c81c:       c42a                    sw      a0,8(sp)
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c81e:       0854                    addi    a3,sp,20
d000c820:       8532                    mv      a0,a2
d000c822:       863a                    mv      a2,a4
d000c824:       200d                    jal     d000c846 <base_vfprintf>
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:89
  return bytes_left;
d000c826:       40b2                    lw      ra,12(sp)
d000c828:       6145                    addi    sp,sp,48
d000c82a:       8082                    ret

d000c82c <base_vprintf>:
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:92
size_t base_vprintf(const char *format, va_list args) {
d000c82c:       0fff6697                auipc   a3,0xfff6
d000c830:       83868693                addi    a3,a3,-1992 # e0002064 <base_stdout>
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c834:       4290                    lw      a2,0(a3)
d000c836:       42d4                    lw      a3,4(a3)
d000c838:       872e                    mv      a4,a1
d000c83a:       87aa                    mv      a5,a0
d000c83c:       8532                    mv      a0,a2
d000c83e:       85b6                    mv      a1,a3
d000c840:       863e                    mv      a2,a5
d000c842:       86ba                    mv      a3,a4
d000c844:       a009                    j       d000c846 <base_vfprintf>

d000c846 <base_vfprintf>:
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:532
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
d000c846:                                                                    715d                       addi    sp,sp,-80
d000c848:                                                                    c686                       sw      ra,76(sp)
d000c84a:                                                                    c4a2                       sw      s0,72(sp)
d000c84c:                                                                    c2a6                       sw      s1,68(sp)
d000c84e:                                                                    c0ca                       sw      s2,64(sp)
d000c850:                                                                    de4e                       sw      s3,60(sp)
d000c852:                                                                    dc52                       sw      s4,56(sp)
d000c854:                                                                    da56                       sw      s5,52(sp)
d000c856:                                                                    d85a                       sw      s6,48(sp)
d000c858:                                                                    d65e                       sw      s7,44(sp)
d000c85a:                                                                    d462                       sw      s8,40(sp)
d000c85c:                                                                    d266                       sw      s9,36(sp)
d000c85e:                                                                    d06a                       sw      s10,32(sp)
d000c860:                                                                    ce6e                       sw      s11,28(sp)
d000c862:                                                                    8cb2                       mv      s9,a2
d000c864:                                                                    892a                       mv      s2,a0
d000c866:                                                                    c436                       sw      a3,8(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:533
  if (out.sink == NULL) {
d000c868:                                                                /-- c199                       beqz    a1,d000c86e <base_vfprintf+0x28>
d000c86a:                                                                |   89ae                       mv      s3,a1
d000c86c:                                                             /--|-- a029                       j       d000c876 <base_vfprintf+0x30>
d000c86e:                                                             |  \-> 00000997           auipc   s3,0x0
d000c872:                                                             |      f8898993           addi    s3,s3,-120 # d000c7f6 <base_dev_null>
/proc/self/cwd/sw/device/lib/runtime/print.c:542
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
d000c876:                                                             \----> c236                       sw      a3,4(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:545

  size_t bytes_written = 0;
  while (format[0] != '\0') {
d000c878:                                                                    000cc503           lbu     a0,0(s9)
d000c87c:       /----------------------------------------------------------- 42050563           beqz    a0,d000cca6 <base_vfprintf+0x460>
d000c880:       |                                                            4a81                       li      s5,0
d000c882:       |                                                            02500c13           li      s8,37
d000c886:       |                                                            4d25                       li      s10,9
d000c888:       |                                                            4a29                       li      s4,10
d000c88a:       |                                                            658d                       lui     a1,0x3
d000c88c:       |                                                            c2258593           addi    a1,a1,-990 # 2c22 <_static_critical_size+0xc5e>
d000c890:       |                                                            c02e                       sw      a1,0(sp)
d000c892:       |        /-------------------------------------------------> 4481                       li      s1,0
consume_until_percent():
/proc/self/cwd/sw/device/lib/runtime/print.c:155
    if (c == '\0' || c == kPercent) {
d000c894:       |        |                                               /-> 0ff57413           andi    s0,a0,255
d000c898:       |        |                                            /--|-- 01840963           beq     s0,s8,d000c8aa <base_vfprintf+0x64>
d000c89c:       |        |                                            +--|-- c419                       beqz    s0,d000c8aa <base_vfprintf+0x64>
/proc/self/cwd/sw/device/lib/runtime/print.c:154
    char c = (*format)[text_len];
d000c89e:       |        |                                            |  |   009c8533           add     a0,s9,s1
d000c8a2:       |        |                                            |  |   00154503           lbu     a0,1(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:162
    ++text_len;
d000c8a6:       |        |                                            |  |   0485                       addi    s1,s1,1
d000c8a8:       |        |                                            |  \-- b7f5                       j       d000c894 <base_vfprintf+0x4e>
/proc/self/cwd/sw/device/lib/runtime/print.c:156
      if (text_len > 0) {
d000c8aa:       |        |                                            \--/-X c491                       beqz    s1,d000c8b6 <base_vfprintf+0x70>
/proc/self/cwd/sw/device/lib/runtime/print.c:157
        *bytes_written += out.sink(out.data, *format, text_len);
d000c8ac:       |        |                                               |   854a                       mv      a0,s2
d000c8ae:       |        |                                               |   85e6                       mv      a1,s9
d000c8b0:       |        |                                               |   8626                       mv      a2,s1
d000c8b2:       |        |                                               |   9982                       jalr    s3
d000c8b4:       |        |                                               |   9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:546
    if (!consume_until_percent(out, &format, &bytes_written)) {
d000c8b6:       |  /-----|-----------------------------------------------\-X 3e040963           beqz    s0,d000cca8 <base_vfprintf+0x462>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:195
  if ((*format)[0] == '!') {
d000c8ba:       |  |     |                                                   009c8533           add     a0,s9,s1
d000c8be:       |  |     |                                                   00154603           lbu     a2,1(a0)
d000c8c2:       |  |     |                                                   02100713           li      a4,33
d000c8c6:       |  |     |                                            /----- 00e61863           bne     a2,a4,d000c8d6 <base_vfprintf+0x90>
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c8ca:       |  |     |                                            |      00254583           lbu     a1,2(a0)
d000c8ce:       |  |     |                                            |      00250693           addi    a3,a0,2
d000c8d2:       |  |     |                                            |      4b05                       li      s6,1
d000c8d4:       |  |     |                                            |  /-- a029                       j       d000c8de <base_vfprintf+0x98>
d000c8d6:       |  |     |                                            \--|-> 4b01                       li      s6,0
d000c8d8:       |  |     |                                               |   00150693           addi    a3,a0,1
d000c8dc:       |  |     |                                               |   85b2                       mv      a1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c8de:       |  |  /--|-----------------------------------------------\-X 3a058b63           beqz    a1,d000cc94 <base_vfprintf+0x44e>
d000c8e2:       |  |  |  |                                                   4481                       li      s1,0
d000c8e4:       |  |  |  |                                                   4b81                       li      s7,0
d000c8e6:       |  |  |  |                                                   4501                       li      a0,0
d000c8e8:       |  |  |  |                                                   fdf60613           addi    a2,a2,-33
d000c8ec:       |  |  |  |                                                   00163d93           seqz    s11,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:213
    if (c < '0' || c > '9') {
d000c8f0:       |  |  |  |                                                   00168c93           addi    s9,a3,1
d000c8f4:       |  |  |  |                                      /----------> fd058613           addi    a2,a1,-48
d000c8f8:       |  |  |  |                                      |            0ff67613           andi    a2,a2,255
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c8fc:       |  |  |  |                                      |            0ff5f593           andi    a1,a1,255
d000c900:       |  |  |  |                                   /--|----------- 02cd6b63           bltu    s10,a2,d000c936 <base_vfprintf+0xf0>
/proc/self/cwd/sw/device/lib/runtime/print.c:216
    if (spec->padding == 0) {
d000c904:       |  |  |  |                                   |  |            0ff57613           andi    a2,a0,255
d000c908:       |  |  |  |                                   |  |        /-- ca19                       beqz    a2,d000c91e <base_vfprintf+0xd8>
/proc/self/cwd/sw/device/lib/runtime/print.c:224
    spec->width *= 10;
d000c90a:       |  |  |  |                                   |  |     /--|-> 03448633           mul     a2,s1,s4
/proc/self/cwd/sw/device/lib/runtime/print.c:225
    spec->width += (c - '0');
d000c90e:       |  |  |  |                                   |  |     |  |   95b2                       add     a1,a1,a2
d000c910:       |  |  |  |                                   |  |     |  |   fd058493           addi    s1,a1,-48
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c914:       |  |  |  |                                   |  |  /--|--|-> 000cc583           lbu     a1,0(s9)
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c918:       |  |  |  |                                   |  |  |  |  |   0c85                       addi    s9,s9,1
d000c91a:       |  |  |  |                                   |  \--|--|--|-- fde9                       bnez    a1,d000c8f4 <base_vfprintf+0xae>
d000c91c:       |  |  +--|-----------------------------------|-----|--|--|-- aea5                       j       d000cc94 <base_vfprintf+0x44e>
d000c91e:       |  |  |  |                                   |     |  |  \-> 02000b93           li      s7,32
d000c922:       |  |  |  |                                   |     |  |      03000613           li      a2,48
d000c926:       |  |  |  |                                   |     |  |      02000513           li      a0,32
d000c92a:       |  |  |  |                                   |     |  \----- fec590e3           bne     a1,a2,d000c90a <base_vfprintf+0xc4>
d000c92e:       |  |  |  |                                   |     |         03000513           li      a0,48
d000c932:       |  |  |  |                                   |     |         8bb2                       mv      s7,a2
d000c934:       |  |  |  |                                   |     \-------- b7c5                       j       d000c914 <base_vfprintf+0xce>
/proc/self/cwd/sw/device/lib/runtime/print.c:229
  if ((spec->width == 0 && spec->padding != 0) || spec->width > 32) {
d000c936:       |  |  |  |                                   \-----------/-X c481                       beqz    s1,d000c93e <base_vfprintf+0xf8>
d000c938:       |  |  |  |                                            /--|-- 00e4e763           bltu    s1,a4,d000c946 <base_vfprintf+0x100>
d000c93c:       |  |  |  |  /-----------------------------------------|--|-- a671                       j       d000ccc8 <base_vfprintf+0x482>
d000c93e:       |  |  |  |  |                                         |  \-> 0ff57513           andi    a0,a0,255
d000c942:       |  |  |  |  +-----------------------------------------|----- 38051363           bnez    a0,d000ccc8 <base_vfprintf+0x482>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c946:       |  |  |  |  |                                         \----> fa858513           addi    a0,a1,-88
d000c94a:       |  |  |  |  |                                         /----- 04a76963           bltu    a4,a0,d000c99c <base_vfprintf+0x156>
d000c94e:       |  |  |  |  |                                         |      050a                       slli    a0,a0,0x2
d000c950:       |  |  |  |  |                                         |      00002597           auipc   a1,0x2
d000c954:       |  |  |  |  |                                         |      4e058593           addi    a1,a1,1248 # d000ee30 <rom_printf.kHexTable+0xcc>
d000c958:       |  |  |  |  |                                         |      952e                       add     a0,a0,a1
d000c95a:       |  |  |  |  |                                         |      4108                       lw      a0,0(a0)
d000c95c:       |  |  |  |  |                                         |      8502                       jr      a0
/proc/self/cwd/sw/device/lib/runtime/print.c:408
      if (spec.is_nonstd) {
d000c95e:       |  |  |  |  |  /--------------------------------------|----- 2a0d9c63           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:411
      uint32_t value = va_arg(*args, uint32_t);
d000c962:       |  |  |  |  |  |                                      |      4512                       lw      a0,4(sp)
d000c964:       |  |  |  |  |  |                                      |      00450593           addi    a1,a0,4
d000c968:       |  |  |  |  |  |                                      |      c22e                       sw      a1,4(sp)
d000c96a:       |  |  |  |  |  |                                      |      00052b03           lw      s6,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:412
      if (((int32_t)value) < 0) {
d000c96e:       |  |  |  |  |  |                                      |  /-- 000b5c63           bgez    s6,d000c986 <base_vfprintf+0x140>
/proc/self/cwd/sw/device/lib/runtime/print.c:413
        *bytes_written += out.sink(out.data, "-", 1);
d000c972:       |  |  |  |  |  |                                      |  |   00002597           auipc   a1,0x2
d000c976:       |  |  |  |  |  |                                      |  |   55558593           addi    a1,a1,1365 # d000eec7 <rom_printf.kHexTable+0x163>
d000c97a:       |  |  |  |  |  |                                      |  |   4605                       li      a2,1
d000c97c:       |  |  |  |  |  |                                      |  |   854a                       mv      a0,s2
d000c97e:       |  |  |  |  |  |                                      |  |   9982                       jalr    s3
d000c980:       |  |  |  |  |  |                                      |  |   9aaa                       add     s5,s5,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:414
        value = -value;
d000c982:       |  |  |  |  |  |                                      |  |   41600b33           neg     s6,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:417
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000c986:       |  |  |  |  |  |                                      |  \-> 0ffbf713           andi    a4,s7,255
d000c98a:       |  |  |  |  |  |                                      |      00002817           auipc   a6,0x2
d000c98e:       |  |  |  |  |  |                                      |      55680813           addi    a6,a6,1366 # d000eee0 <kDigitsLow>
d000c992:       |  |  |  |  |  |                                      |      47a9                       li      a5,10
d000c994:       |  |  |  |  |  |                                      |      854a                       mv      a0,s2
d000c996:       |  |  |  |  |  |                                      |      85ce                       mv      a1,s3
d000c998:       |  |  |  |  |  |                                      |      865a                       mv      a2,s6
d000c99a:       |  |  |  |  |  |        /-----------------------------|----- a4a1                       j       d000cbe2 <base_vfprintf+0x39c>
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c99c:       |  |  |  |  |  |        |                             \----> 04800513           li      a0,72
d000c9a0:       |  |  |  |  |  |        |                                /-- 02a58d63           beq     a1,a0,d000c9da <base_vfprintf+0x194>
d000c9a4:       |  |  |  |  |  +--------|--------------------------------|-- 27859963           bne     a1,s8,d000cc16 <base_vfprintf+0x3d0>
d000c9a8:       |  |  |  |  |  +--------|--------------------------------|-- 260d9763           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:379
      *bytes_written += out.sink(out.data, "%", 1);
d000c9ac:       |  |  |  |  |  |        |                                |   00002597           auipc   a1,0x2
d000c9b0:       |  |  |  |  |  |        |                                |   51958593           addi    a1,a1,1305 # d000eec5 <rom_printf.kHexTable+0x161>
d000c9b4:       |  |  |  |  |  |        |                             /--|-- a851                       j       d000ca48 <base_vfprintf+0x202>
/proc/self/cwd/sw/device/lib/runtime/print.c:461
      if (spec.is_nonstd) {
d000c9b6:       |  |  |  |  |  |        |                             |  +-- 020d8263           beqz    s11,d000c9da <base_vfprintf+0x194>
/proc/self/cwd/sw/device/lib/runtime/print.c:462
        size_t len = va_arg(*args, size_t);
d000c9ba:       |  |  |  |  |  |        |                             |  |   4512                       lw      a0,4(sp)
d000c9bc:       |  |  |  |  |  |        |                             |  |   00450593           addi    a1,a0,4
d000c9c0:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c9c2:       |  |  |  |  |  |        |                             |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:463
        char *value = va_arg(*args, char *);
d000c9c4:       |  |  |  |  |  |        |                             |  |   00850593           addi    a1,a0,8
d000c9c8:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c9ca:       |  |  |  |  |  |        |                             |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:464
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c9cc:       |  |  |  |  |  |        |                             |  |   0ffbf793           andi    a5,s7,255
d000c9d0:       |  |  |  |  |  |        |                             |  |   00002897           auipc   a7,0x2
d000c9d4:       |  |  |  |  |  |        |                             |  |   53d88893           addi    a7,a7,1341 # d000ef0d <kDigitsHigh>
d000c9d8:       |  |  |  |  |  |        |           /-----------------|--|-- a2d5                       j       d000cbbc <base_vfprintf+0x376>
/proc/self/cwd/sw/device/lib/runtime/print.c:470
      uint32_t value = va_arg(*args, uint32_t);
d000c9da:       |  |  |  |  |  |        |           |                 |  \-> 4512                       lw      a0,4(sp)
d000c9dc:       |  |  |  |  |  |        |           |                 |      00450593           addi    a1,a0,4
d000c9e0:       |  |  |  |  |  |        |           |                 |      c22e                       sw      a1,4(sp)
d000c9e2:       |  |  |  |  |  |        |           |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:472
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsHigh);
d000c9e4:       |  |  |  |  |  |        |           |                 |      0ffbf713           andi    a4,s7,255
d000c9e8:       |  |  |  |  |  |        |           |                 |      00002817           auipc   a6,0x2
d000c9ec:       |  |  |  |  |  |        |           |                 |      52580813           addi    a6,a6,1317 # d000ef0d <kDigitsHigh>
d000c9f0:       |  |  |  |  |  |        |        /--|-----------------|----- a2f5                       j       d000cbdc <base_vfprintf+0x396>
/proc/self/cwd/sw/device/lib/runtime/print.c:486
      if (!spec.is_nonstd) {
d000c9f2:       |  |  |  |  |  +--------|--------|--|-----------------|----- 220d8263           beqz    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:489
      size_t len = va_arg(*args, size_t);
d000c9f6:       |  |  |  |  |  |        |        |  |                 |      4512                       lw      a0,4(sp)
d000c9f8:       |  |  |  |  |  |        |        |  |                 |      00450593           addi    a1,a0,4
d000c9fc:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000c9fe:       |  |  |  |  |  |        |        |  |                 |      4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:490
      char *value = va_arg(*args, char *);
d000ca00:       |  |  |  |  |  |        |        |  |                 |      00850593           addi    a1,a0,8
d000ca04:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000ca06:       |  |  |  |  |  |        |        |  |                 |      4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:491
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000ca08:       |  |  |  |  |  |        |        |  |                 |      0ffbf793           andi    a5,s7,255
d000ca0c:       |  |  |  |  |  |        |        |  |                 |      00002897           auipc   a7,0x2
d000ca10:       |  |  |  |  |  |        |        |  |                 |      50188893           addi    a7,a7,1281 # d000ef0d <kDigitsHigh>
d000ca14:       |  |  |  |  |  |        |     /--|--|-----------------|----- aadd                       j       d000cc0a <base_vfprintf+0x3c4>
d000ca16:       |  |  |  |  |  |        |     |  |  |                 |      4512                       lw      a0,4(sp)
d000ca18:       |  |  |  |  |  |        |     |  |  |                 |      00450593           addi    a1,a0,4
d000ca1c:       |  |  |  |  |  |        |     |  |  |                 |      c22e                       sw      a1,4(sp)
d000ca1e:       |  |  |  |  |  |        |     |  |  |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:505
      if (spec.is_nonstd) {
d000ca20:       |  |  |  |  |  |        |  /--|--|--|-----------------|----- 200d8863           beqz    s11,d000cc30 <base_vfprintf+0x3ea>
/proc/self/cwd/sw/device/lib/runtime/print.c:508
        if (va_arg(*args, int) != 0) {
d000ca24:       |  |  |  |  |  |  /-----|--|--|--|--|-----------------|----- 26060263           beqz    a2,d000cc88 <base_vfprintf+0x442>
/proc/self/cwd/sw/device/lib/runtime/print.c:509
          *bytes_written += out.sink(out.data, "true", 4);
d000ca28:       |  |  |  |  |  |  |     |  |  |  |  |                 |      00002597           auipc   a1,0x2
d000ca2c:       |  |  |  |  |  |  |     |  |  |  |  |                 |      4a458593           addi    a1,a1,1188 # d000eecc <rom_printf.kHexTable+0x168>
d000ca30:       |  |  |  |  |  |  |     |  |  |  |  |                 |      4611                       li      a2,4
d000ca32:       |  |  |  |  |  |  |  /--|--|--|--|--|-----------------|----- a2fd                       j       d000cc20 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:383
      if (spec.is_nonstd) {
d000ca34:       |  |  |  |  |  +--|--|--|--|--|--|--|-----------------|----- 1e0d9163           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:386
      char value = (char)va_arg(*args, uint32_t);
d000ca38:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4512                       lw      a0,4(sp)
d000ca3a:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00450593           addi    a1,a0,4
d000ca3e:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      c22e                       sw      a1,4(sp)
d000ca40:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4108                       lw      a0,0(a0)
d000ca42:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00a10a23           sb      a0,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:387
      *bytes_written += out.sink(out.data, &value, 1);
d000ca46:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      084c                       addi    a1,sp,20
d000ca48:       |  |  |  |  |  |  |  |  |  |  |  |  |                 \----> 4605                       li      a2,1
d000ca4a:       |  |  |  |  |  |  |  +--|--|--|--|--|----------------------- aad9                       j       d000cc20 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:421
      if (spec.is_nonstd) {
d000ca4c:       |  |  |  |  |  +--|--|--|--|--|--|--|----------------------- 1c0d9563           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:424
      uint32_t value = va_arg(*args, uint32_t);
d000ca50:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4512                       lw      a0,4(sp)
d000ca52:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00450593           addi    a1,a0,4
d000ca56:       |  |  |  |  |  |  |  |  |  |  |  |  |                        c22e                       sw      a1,4(sp)
d000ca58:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:426
          write_digits(out, value, spec.width, spec.padding, 8, kDigitsLow);
d000ca5a:       |  |  |  |  |  |  |  |  |  |  |  |  |                        0ffbf713           andi    a4,s7,255
d000ca5e:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00002817           auipc   a6,0x2
d000ca62:       |  |  |  |  |  |  |  |  |  |  |  |  |                        48280813           addi    a6,a6,1154 # d000eee0 <kDigitsLow>
d000ca66:       |  |  |  |  |  |  |  |  |  |  |  |  |                        47a1                       li      a5,8
d000ca68:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------------- aa9d                       j       d000cbde <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:430
      if (spec.is_nonstd) {
d000ca6a:       |  |  |  |  |  +--|--|--|--|--|--|--|--|-------------------- 1a0d9663           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000ca6e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002597           auipc   a1,0x2
d000ca72:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     45b58593           addi    a1,a1,1115 # d000eec9 <rom_printf.kHexTable+0x165>
d000ca76:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4609                       li      a2,2
d000ca78:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000ca7a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:440
      uintptr_t value = va_arg(*args, uintptr_t);
d000ca7c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4592                       lw      a1,4(sp)
d000ca7e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00458613           addi    a2,a1,4
d000ca82:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     c232                       sw      a2,4(sp)
d000ca84:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4190                       lw      a2,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000ca86:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     01550433           add     s0,a0,s5
/proc/self/cwd/sw/device/lib/runtime/print.c:442
          write_digits(out, value, sizeof(uintptr_t) * 2, '0', 16, kDigitsLow);
d000ca8a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002817           auipc   a6,0x2
d000ca8e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     45680813           addi    a6,a6,1110 # d000eee0 <kDigitsLow>
d000ca92:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     46a1                       li      a3,8
d000ca94:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     03000713           li      a4,48
d000ca98:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     47c1                       li      a5,16
d000ca9a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000ca9c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     85ce                       mv      a1,s3
d000ca9e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     2e31                       jal     d000cdba <write_digits>
/proc/self/cwd/sw/device/lib/runtime/print.c:441
      *bytes_written +=
d000caa0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00a40ab3           add     s5,s0,a0
d000caa4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  /----------------- a249                       j       d000cc26 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:521
      status_t value = va_arg(*args, status_t);
d000caa6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4512                       lw      a0,4(sp)
d000caa8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00450593           addi    a1,a0,4
d000caac:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  c22e                       sw      a1,4(sp)
d000caae:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4108                       lw      a0,0(a0)
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:280
  char mod[] = {'"', 0, 0, 0, '"', ','};
d000cab0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4582                       lw      a1,0(sp)
d000cab2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00b11c23           sh      a1,24(sp)
d000cab6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  02200593           li      a1,34
d000caba:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  ca2e                       sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000cabc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  006c                       addi    a1,sp,12
d000cabe:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  0810                       addi    a2,sp,16
d000cac0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  01510693           addi    a3,sp,21
d000cac4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  2e95                       jal     d000ce38 <status_extract>
/proc/self/cwd/sw/device/lib/runtime/print.c:286
  const char *end = start;
d000cac6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000cac8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  8baa                       mv      s7,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000caca:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  fff58413           addi    s0,a1,-1
d000cace:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              /-> 0005c503           lbu     a0,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:288
    end++;
d000cad2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000cad4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0405                       addi    s0,s0,1
d000cad6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              \-- fd65                       bnez    a0,d000cace <base_vfprintf+0x288>
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000cad8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  001d9613           slli    a2,s11,0x1
d000cadc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000cae0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  3fb58593           addi    a1,a1,1019 # d000eed7 <rom_printf.kHexTable+0x173>
d000cae4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000cae6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000cae8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000caea:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  84aa                       mv      s1,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000caec:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  40b40633           sub     a2,s0,a1
d000caf0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000caf2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000caf4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:293
  len += out.sink(out.data, "\"", as_json ? 1 : 0);
d000caf8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000cafc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  3e058593           addi    a1,a1,992 # d000eed8 <rom_printf.kHexTable+0x174>
d000cb00:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000cb02:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  865a                       mv      a2,s6
d000cb04:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000cb06:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:295
  len += out.sink(out.data, ":", 1);
d000cb08:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000cb0c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  3b458593           addi    a1,a1,948 # d000eebc <rom_printf.kHexTable+0x158>
d000cb10:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4605                       li      a2,1
d000cb12:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000cb14:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000cb16:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00a404b3           add     s1,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:296
  if (err) {
d000cb1a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------- 120b8363           beqz    s7,d000cc40 <base_vfprintf+0x3fa>
/proc/self/cwd/sw/device/lib/runtime/print.c:298
    len += out.sink(out.data, "[", 1);
d000cb1e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000cb22:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               3bc58593           addi    a1,a1,956 # d000eeda <rom_printf.kHexTable+0x176>
d000cb26:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000cb28:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000cb2a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000cb2c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000cb30:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               084c                       addi    a1,sp,20
d000cb32:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4619                       li      a2,6
d000cb34:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000cb36:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000cb38:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4642                       lw      a2,16(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000cb3a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000cb3c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002817           auipc   a6,0x2
d000cb40:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               3a480813           addi    a6,a6,932 # d000eee0 <kDigitsLow>
d000cb44:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               47a9                       li      a5,10
d000cb46:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000cb48:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               85ce                       mv      a1,s3
d000cb4a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4681                       li      a3,0
d000cb4c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4701                       li      a4,0
d000cb4e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               24b5                       jal     d000cdba <write_digits>
d000cb50:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:301
    len += out.sink(out.data, "]", 1);
d000cb52:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000cb56:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               38a58593           addi    a1,a1,906 # d000eedc <rom_printf.kHexTable+0x178>
d000cb5a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000cb5c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000cb5e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000cb60:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
d000cb62:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-------- a8e5                       j       d000cc5a <base_vfprintf+0x414>
d000cb64:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         4512                       lw      a0,4(sp)
d000cb66:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         00450593           addi    a1,a0,4
d000cb6a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         c22e                       sw      a1,4(sp)
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:392
      if (spec.is_nonstd) {
d000cb6c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /--|-------- 100d8363           beqz    s11,d000cc72 <base_vfprintf+0x42c>
/proc/self/cwd/sw/device/lib/runtime/print.c:394
        len = va_arg(*args, size_t);
d000cb70:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000cb72:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00850593           addi    a1,a0,8
d000cb76:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000cb78:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         414c                       lw      a1,4(a0)
d000cb7a:       |  |  |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|-------- a05d                       j       d000cc20 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:496
      if (spec.is_nonstd) {
d000cb7c:       |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|--|--|-------- 080d9d63           bnez    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:499
      uint32_t value = va_arg(*args, uint32_t);
d000cb80:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4512                       lw      a0,4(sp)
d000cb82:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00450593           addi    a1,a0,4
d000cb86:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000cb88:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:501
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000cb8a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         0ffbf713           andi    a4,s7,255
d000cb8e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00002817           auipc   a6,0x2
d000cb92:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         35280813           addi    a6,a6,850 # d000eee0 <kDigitsLow>
d000cb96:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         47a9                       li      a5,10
d000cb98:       |  |  |  |  |  |  |  |  |  |  |  |  |  +--|--|--|--|-------- a099                       j       d000cbde <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:446
      if (spec.is_nonstd) {
d000cb9a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 020d8663           beqz    s11,d000cbc6 <base_vfprintf+0x380>
/proc/self/cwd/sw/device/lib/runtime/print.c:447
        size_t len = va_arg(*args, size_t);
d000cb9e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4512                       lw      a0,4(sp)
d000cba0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00450593           addi    a1,a0,4
d000cba4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000cba6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:448
        char *value = va_arg(*args, char *);
d000cba8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00850593           addi    a1,a0,8
d000cbac:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000cbae:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:449
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000cbb0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0ffbf793           andi    a5,s7,255
d000cbb4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00002897           auipc   a7,0x2
d000cbb8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   32c88893           addi    a7,a7,812 # d000eee0 <kDigitsLow>
d000cbbc:       |  |  |  |  |  |  |  |  |  |  |  |  \--|--|--|--|--|-----|-> 4805                       li      a6,1
d000cbbe:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   854a                       mv      a0,s2
d000cbc0:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   85ce                       mv      a1,s3
d000cbc2:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   8726                       mv      a4,s1
d000cbc4:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  /--|-- a0b9                       j       d000cc12 <base_vfprintf+0x3cc>
/proc/self/cwd/sw/device/lib/runtime/print.c:455
      uint32_t value = va_arg(*args, uint32_t);
d000cbc6:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |  \-> 4512                       lw      a0,4(sp)
d000cbc8:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00450593           addi    a1,a0,4
d000cbcc:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      c22e                       sw      a1,4(sp)
d000cbce:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:457
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsLow);
d000cbd0:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      0ffbf713           andi    a4,s7,255
d000cbd4:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00002817           auipc   a6,0x2
d000cbd8:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      30c80813           addi    a6,a6,780 # d000eee0 <kDigitsLow>
d000cbdc:       |  |  |  |  |  |  |  |  |  |  |  \-----|--|--|--|--|--|----> 47c1                       li      a5,16
d000cbde:       |  |  |  |  |  |  |  |  |  |  |        >--|--|--|--|--|----> 854a                       mv      a0,s2
d000cbe0:       |  |  |  |  |  |  |  |  |  |  |        |  |  |  |  |  |      85ce                       mv      a1,s3
d000cbe2:       |  |  |  |  |  |  |  |  \--|--|--------|--|--|--|--|--|----> 86a6                       mv      a3,s1
d000cbe4:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |      2ad9                       jal     d000cdba <write_digits>
d000cbe6:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  /-- a83d                       j       d000cc24 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:476
      if (!spec.is_nonstd) {
d000cbe8:       |  |  |  |  |  +--|--|-----|--|--------|--|--|--|--|--|--|-- 020d8763           beqz    s11,d000cc16 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:479
      size_t len = va_arg(*args, size_t);
d000cbec:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4512                       lw      a0,4(sp)
d000cbee:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00450593           addi    a1,a0,4
d000cbf2:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000cbf4:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:480
      char *value = va_arg(*args, char *);
d000cbf6:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00850593           addi    a1,a0,8
d000cbfa:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000cbfc:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:481
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000cbfe:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   0ffbf793           andi    a5,s7,255
d000cc02:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00002897           auipc   a7,0x2
d000cc06:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   2de88893           addi    a7,a7,734 # d000eee0 <kDigitsLow>
d000cc0a:       |  |  |  |  |  |  |  |     |  \--------|--|--|--|--|--|--|-> 854a                       mv      a0,s2
d000cc0c:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   85ce                       mv      a1,s3
d000cc0e:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   8726                       mv      a4,s1
d000cc10:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   4801                       li      a6,0
d000cc12:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  \--|-> 20c9                       jal     d000ccd4 <hex_dump>
d000cc14:       |  |  |  |  |  |  |  |     |           |  |  |  |  |     +-- a801                       j       d000cc24 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:527
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
d000cc16:       |  |  |  |  |  \--|--|-----|-----------|--|--|--|--|-----|-> 00002597           auipc   a1,0x2
d000cc1a:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   30758593           addi    a1,a1,775 # d000ef1d <kUnknownSpec>
d000cc1e:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   463d                       li      a2,15
d000cc20:       |  |  |  |  |     |  >-----|-----------|--|--|--|--|-----|-> 854a                       mv      a0,s2
d000cc22:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   9982                       jalr    s3
d000cc24:       |  |  |  |  |     |  |     |           |  |  |  |  |     \-> 9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:545
  while (format[0] != '\0') {
d000cc26:       |  |  |  |  |     |  |     |           |  >--|--|--|-------> 000cc503           lbu     a0,0(s9)
d000cc2a:       |  |  |  \--|-----|--|-----|-----------|--|--|--|--|-------- c60514e3           bnez    a0,d000c892 <base_vfprintf+0x4c>
d000cc2e:       |  +--|-----|-----|--|-----|-----------|--|--|--|--|-------- a8ad                       j       d000cca8 <base_vfprintf+0x462>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:517
          write_digits(out, value, spec.width, spec.padding, 2, kDigitsLow);
d000cc30:       |  |  |     |     |  |     \-----------|--|--|--|--|-------> 0ffbf713           andi    a4,s7,255
d000cc34:       |  |  |     |     |  |                 |  |  |  |  |         00002817           auipc   a6,0x2
d000cc38:       |  |  |     |     |  |                 |  |  |  |  |         2ac80813           addi    a6,a6,684 # d000eee0 <kDigitsLow>
d000cc3c:       |  |  |     |     |  |                 |  |  |  |  |         4789                       li      a5,2
d000cc3e:       |  |  |     |     |  |                 \--|--|--|--|-------- b745                       j       d000cbde <base_vfprintf+0x398>
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:304
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000cc40:       |  |  |     |     |  |                    |  \--|--|-------> 4642                       lw      a2,16(sp)
d000cc42:       |  |  |     |     |  |                    |     |  |         00002817           auipc   a6,0x2
d000cc46:       |  |  |     |     |  |                    |     |  |         29e80813           addi    a6,a6,670 # d000eee0 <kDigitsLow>
d000cc4a:       |  |  |     |     |  |                    |     |  |         47a9                       li      a5,10
d000cc4c:       |  |  |     |     |  |                    |     |  |         854a                       mv      a0,s2
d000cc4e:       |  |  |     |     |  |                    |     |  |         85ce                       mv      a1,s3
d000cc50:       |  |  |     |     |  |                    |     |  |         4681                       li      a3,0
d000cc52:       |  |  |     |     |  |                    |     |  |         4701                       li      a4,0
d000cc54:       |  |  |     |     |  |                    |     |  |         229d                       jal     d000cdba <write_digits>
d000cc56:       |  |  |     |     |  |                    |     |  |         00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:306
  len += out.sink(out.data, "}", as_json ? 1 : 0);
d000cc5a:       |  |  |     |     |  |                    |     |  \-------> 00002597           auipc   a1,0x2
d000cc5e:       |  |  |     |     |  |                    |     |            28458593           addi    a1,a1,644 # d000eede <rom_printf.kHexTable+0x17a>
d000cc62:       |  |  |     |     |  |                    |     |            854a                       mv      a0,s2
d000cc64:       |  |  |     |     |  |                    |     |            865a                       mv      a2,s6
d000cc66:       |  |  |     |     |  |                    |     |            9982                       jalr    s3
d000cc68:       |  |  |     |     |  |                    |     |            015405b3           add     a1,s0,s5
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:522
      *bytes_written += write_status(out, value, spec.is_nonstd);
d000cc6c:       |  |  |     |     |  |                    |     |            00a58ab3           add     s5,a1,a0
d000cc70:       |  |  |     |     |  |                    \-----|----------- bf5d                       j       d000cc26 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000cc72:       |  |  |     |     |  |                          \----------> 410c                       lw      a1,0(a0)
d000cc74:       |  |  |     |     |  |                                       4501                       li      a0,0
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000cc76:       |  |  |     |     |  |                                   /-> 00a58633           add     a2,a1,a0
d000cc7a:       |  |  |     |     |  |                                   |   00064603           lbu     a2,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:400
        ++len;
d000cc7e:       |  |  |     |     |  |                                   |   0505                       addi    a0,a0,1
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000cc80:       |  |  |     |     |  |                                   \-- fa7d                       bnez    a2,d000cc76 <base_vfprintf+0x430>
/proc/self/cwd/sw/device/lib/runtime/print.c:403
      *bytes_written += out.sink(out.data, value, len);
d000cc82:       |  |  |     |     |  |                                       fff50613           addi    a2,a0,-1
d000cc86:       |  |  |     |     |  +-------------------------------------- bf69                       j       d000cc20 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:511
          *bytes_written += out.sink(out.data, "false", 5);
d000cc88:       |  |  |     |     \--|-------------------------------------> 00002597           auipc   a1,0x2
d000cc8c:       |  |  |     |        |                                       24958593           addi    a1,a1,585 # d000eed1 <rom_printf.kHexTable+0x16d>
d000cc90:       |  |  |     |        |                                       4615                       li      a2,5
d000cc92:       |  |  |     |        \-------------------------------------- b779                       j       d000cc20 <base_vfprintf+0x3da>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:210
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
d000cc94:       |  |  \-----|----------------------------------------------> 00002597           auipc   a1,0x2
d000cc98:       |  |        |                                                25c58593           addi    a1,a1,604 # d000eef0 <kErrorNul>
d000cc9c:       |  |        |                                                4645                       li      a2,17
d000cc9e:       |  |        |                                            /-> 854a                       mv      a0,s2
d000cca0:       |  |        |                                            |   9982                       jalr    s3
d000cca2:       |  |        |                                            |   9aaa                       add     s5,s5,a0
d000cca4:       |  +--------|--------------------------------------------|-- a011                       j       d000cca8 <base_vfprintf+0x462>
d000cca6:       \--|--------|--------------------------------------------|-> 4a81                       li      s5,0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:558

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
d000cca8:          \--------|--------------------------------------------|-> 8556                       mv      a0,s5
d000ccaa:                   |                                            |   4df2                       lw      s11,28(sp)
d000ccac:                   |                                            |   5d02                       lw      s10,32(sp)
d000ccae:                   |                                            |   5c92                       lw      s9,36(sp)
d000ccb0:                   |                                            |   5c22                       lw      s8,40(sp)
d000ccb2:                   |                                            |   5bb2                       lw      s7,44(sp)
d000ccb4:                   |                                            |   5b42                       lw      s6,48(sp)
d000ccb6:                   |                                            |   5ad2                       lw      s5,52(sp)
d000ccb8:                   |                                            |   5a62                       lw      s4,56(sp)
d000ccba:                   |                                            |   59f2                       lw      s3,60(sp)
d000ccbc:                   |                                            |   4906                       lw      s2,64(sp)
d000ccbe:                   |                                            |   4496                       lw      s1,68(sp)
d000ccc0:                   |                                            |   4426                       lw      s0,72(sp)
d000ccc2:                   |                                            |   40b6                       lw      ra,76(sp)
d000ccc4:                   |                                            |   6161                       addi    sp,sp,80
d000ccc6:                   |                                            |   8082                       ret
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:230
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
d000ccc8:                   \--------------------------------------------|-> 00002597           auipc   a1,0x2
d000cccc:                                                                |   23958593           addi    a1,a1,569 # d000ef01 <kErrorTooWide>
d000ccd0:                                                                |   4631                       li      a2,12
d000ccd2:                                                                \-- b7f1                       j       d000cc9e <base_vfprintf+0x458>

d000ccd4 <hex_dump>:
hex_dump():
/proc/self/cwd/sw/device/lib/runtime/print.c:326
                       const char *glyphs) {
d000ccd4:                    715d                       addi    sp,sp,-80
d000ccd6:                    c686                       sw      ra,76(sp)
d000ccd8:                    c4a2                       sw      s0,72(sp)
d000ccda:                    c2a6                       sw      s1,68(sp)
d000ccdc:                    c0ca                       sw      s2,64(sp)
d000ccde:                    de4e                       sw      s3,60(sp)
d000cce0:                    dc52                       sw      s4,56(sp)
d000cce2:                    da56                       sw      s5,52(sp)
d000cce4:                    d85a                       sw      s6,48(sp)
d000cce6:                    d65e                       sw      s7,44(sp)
d000cce8:                    d462                       sw      s8,40(sp)
d000ccea:                    d266                       sw      s9,36(sp)
d000ccec:                    d06a                       sw      s10,32(sp)
d000ccee:                    8bc6                       mv      s7,a7
d000ccf0:                    8a42                       mv      s4,a6
d000ccf2:                    8b36                       mv      s6,a3
d000ccf4:                    8ab2                       mv      s5,a2
d000ccf6:                    892e                       mv      s2,a1
d000ccf8:                    89aa                       mv      s3,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:330
  if (len < width) {
d000ccfa:          /-------- 02e6fd63           bgeu    a3,a4,d000cd34 <hex_dump+0x60>
/proc/self/cwd/sw/device/lib/runtime/print.c:331
    width -= len;
d000ccfe:          |         416704b3           sub     s1,a4,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:332
    memset(buf, padding, sizeof(buf));
d000cd02:          |         850a                       mv      a0,sp
d000cd04:          |         02000613           li      a2,32
d000cd08:          |         85be                       mv      a1,a5
d000cd0a:          |         7ea010ef           jal     ra,d000e4f4 <memset>
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000cd0e:          +-------- c09d                       beqz    s1,d000cd34 <hex_dump+0x60>
d000cd10:          |         4c01                       li      s8,0
d000cd12:          |  /----> 02000513           li      a0,32
d000cd16:          |  |      8426                       mv      s0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:334
      size_t to_write = width > ARRAYSIZE(buf) ? 32 : width;
d000cd18:          |  |  /-- 00a4e463           bltu    s1,a0,d000cd20 <hex_dump+0x4c>
d000cd1c:          |  |  |   02000413           li      s0,32
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000cd20:          |  |  \-> 858a                       mv      a1,sp
d000cd22:          |  |      854e                       mv      a0,s3
d000cd24:          |  |      8622                       mv      a2,s0
d000cd26:          |  |      9902                       jalr    s2
/proc/self/cwd/sw/device/lib/runtime/print.c:336
      width -= to_write;
d000cd28:          |  |      8c81                       sub     s1,s1,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000cd2a:          |  |      9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000cd2c:          |  \----- f0fd                       bnez    s1,d000cd12 <hex_dump+0x3e>
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000cd2e:          |     /-- 000b1663           bnez    s6,d000cd3a <hex_dump+0x66>
d000cd32:       /--|-----|-- a0ad                       j       d000cd9c <hex_dump+0xc8>
d000cd34:       |  \-----|-> 4c01                       li      s8,0
d000cd36:       +--------|-- 060b0363           beqz    s6,d000cd9c <hex_dump+0xc8>
d000cd3a:       |        \-> 4401                       li      s0,0
d000cd3c:       |            4601                       li      a2,0
d000cd3e:       |            fffb0493           addi    s1,s6,-1
d000cd42:       |            8b0a                       mv      s6,sp
d000cd44:       |            02000c93           li      s9,32
d000cd48:       |            5d7d                       li      s10,-1
d000cd4a:       |     /----> 8526                       mv      a0,s1
d000cd4c:       |     |  /-- 000a1363           bnez    s4,d000cd52 <hex_dump+0x7e>
d000cd50:       |     |  |   8522                       mv      a0,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:342
    buf[buffered] = glyphs[(bytes[idx] >> 4) & 0xf];
d000cd52:       |     |  \-> 9556                       add     a0,a0,s5
d000cd54:       |     |      00054503           lbu     a0,0(a0)
d000cd58:       |     |      00455593           srli    a1,a0,0x4
d000cd5c:       |     |      95de                       add     a1,a1,s7
d000cd5e:       |     |      00058583           lb      a1,0(a1)
d000cd62:       |     |      00cb06b3           add     a3,s6,a2
d000cd66:       |     |      00b68023           sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000cd6a:       |     |      893d                       andi    a0,a0,15
d000cd6c:       |     |      955e                       add     a0,a0,s7
d000cd6e:       |     |      00050503           lb      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:344
    buffered += 2;
d000cd72:       |     |      0609                       addi    a2,a2,2
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000cd74:       |     |      00a680a3           sb      a0,1(a3)
d000cd78:       |     |  /-- 01961963           bne     a2,s9,d000cd8a <hex_dump+0xb6>
/proc/self/cwd/sw/device/lib/runtime/print.c:347
      bytes_written += out.sink(out.data, buf, buffered);
d000cd7c:       |     |  |   858a                       mv      a1,sp
d000cd7e:       |     |  |   02000613           li      a2,32
d000cd82:       |     |  |   854e                       mv      a0,s3
d000cd84:       |     |  |   9902                       jalr    s2
d000cd86:       |     |  |   4601                       li      a2,0
d000cd88:       |     |  |   9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000cd8a:       |     |  \-> 14fd                       addi    s1,s1,-1
d000cd8c:       |     |      0405                       addi    s0,s0,1
d000cd8e:       |     \----- fba49ee3           bne     s1,s10,d000cd4a <hex_dump+0x76>
/proc/self/cwd/sw/device/lib/runtime/print.c:352
  if (buffered != 0) {
d000cd92:       +----------- c609                       beqz    a2,d000cd9c <hex_dump+0xc8>
/proc/self/cwd/sw/device/lib/runtime/print.c:353
    bytes_written += out.sink(out.data, buf, buffered);
d000cd94:       |            858a                       mv      a1,sp
d000cd96:       |            854e                       mv      a0,s3
d000cd98:       |            9902                       jalr    s2
d000cd9a:       |            9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:355
  return bytes_written;
d000cd9c:       \----------> 8562                       mv      a0,s8
d000cd9e:                    5d02                       lw      s10,32(sp)
d000cda0:                    5c92                       lw      s9,36(sp)
d000cda2:                    5c22                       lw      s8,40(sp)
d000cda4:                    5bb2                       lw      s7,44(sp)
d000cda6:                    5b42                       lw      s6,48(sp)
d000cda8:                    5ad2                       lw      s5,52(sp)
d000cdaa:                    5a62                       lw      s4,56(sp)
d000cdac:                    59f2                       lw      s3,60(sp)
d000cdae:                    4906                       lw      s2,64(sp)
d000cdb0:                    4496                       lw      s1,68(sp)
d000cdb2:                    4426                       lw      s0,72(sp)
d000cdb4:                    40b6                       lw      ra,76(sp)
d000cdb6:                    6161                       addi    sp,sp,80
d000cdb8:                    8082                       ret

d000cdba <write_digits>:
write_digits():
/proc/self/cwd/sw/device/lib/runtime/print.c:252
                           char padding, uint32_t base, const char *glyphs) {
d000cdba:              7179                     addi    sp,sp,-48
d000cdbc:              d606                     sw      ra,44(sp)
d000cdbe:              88ae                     mv      a7,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:259
  if (value == 0) {
d000cdc0:       /----- ca05                     beqz    a2,d000cdf0 <write_digits+0x36>
d000cdc2:       |      4381                     li      t2,0
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000cdc4:       |      02b10293                 addi    t0,sp,43
d000cdc8:       |  /-> 8332                     mv      t1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:265
    value /= base;
d000cdca:       |  |   02f65633                 divu    a2,a2,a5
d000cdce:       |  |   02f605b3                 mul     a1,a2,a5
d000cdd2:       |  |   40b305b3                 sub     a1,t1,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:266
    buffer[kWordBits - 1 - len] = glyphs[digit];
d000cdd6:       |  |   95c2                     add     a1,a1,a6
d000cdd8:       |  |   00058e03                 lb      t3,0(a1)
d000cddc:       |  |   007285b3                 add     a1,t0,t2
d000cde0:       |  |   01c58023                 sb      t3,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000cde4:       |  |   13fd                     addi    t2,t2,-1
d000cde6:       |  \-- fef371e3                 bgeu    t1,a5,d000cdc8 <write_digits+0xe>
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000cdea:       |      40700633                 neg     a2,t2
d000cdee:       |  /-- a031                     j       d000cdfa <write_digits+0x40>
/proc/self/cwd/sw/device/lib/runtime/print.c:260
    buffer[kWordBits - 1] = glyphs[0];
d000cdf0:       \--|-> 00080583                 lb      a1,0(a6)
d000cdf4:          |   02b105a3                 sb      a1,43(sp)
d000cdf8:          |   4605                     li      a2,1
d000cdfa:          \-> 4585                     li      a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000cdfc:          /-- c291                     beqz    a3,d000ce00 <write_digits+0x46>
d000cdfe:          |   85b6                     mv      a1,a3
d000ce00:          \-> 02000693                 li      a3,32
/proc/self/cwd/sw/device/lib/runtime/print.c:270
  width = width > kWordBits ? kWordBits : width;
d000ce04:          /-- 00d5e463                 bltu    a1,a3,d000ce0c <write_digits+0x52>
d000ce08:          |   02000593                 li      a1,32
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000ce0c:       /--\-X 00b67e63                 bgeu    a2,a1,d000ce28 <write_digits+0x6e>
d000ce10:       |      40c586b3                 sub     a3,a1,a2
d000ce14:       |      007c                     addi    a5,sp,12
d000ce16:       |      40c78633                 sub     a2,a5,a2
d000ce1a:       |      067d                     addi    a2,a2,31
/proc/self/cwd/sw/device/lib/runtime/print.c:272
    buffer[kWordBits - len - 1] = padding;
d000ce1c:       |  /-> 00e60023                 sb      a4,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000ce20:       |  |   16fd                     addi    a3,a3,-1
d000ce22:       |  |   167d                     addi    a2,a2,-1
d000ce24:       |  \-- fee5                     bnez    a3,d000ce1c <write_digits+0x62>
d000ce26:       |      862e                     mv      a2,a1
d000ce28:       \----> 006c                     addi    a1,sp,12
/proc/self/cwd/sw/device/lib/runtime/print.c:275
  return out.sink(out.data, buffer + (kWordBits - len), len);
d000ce2a:              8d91                     sub     a1,a1,a2
d000ce2c:              02058593                 addi    a1,a1,32
d000ce30:              9882                     jalr    a7
/proc/self/cwd/sw/device/lib/runtime/print.c:276
}
d000ce32:              50b2                     lw      ra,44(sp)
d000ce34:              6145                     addi    sp,sp,48
d000ce36:              8082                     ret

d000ce38 <status_extract>:
status_err():
/proc/self/cwd/./sw/device/lib/base/status.h:150
 *
 * @param s The status code.
 * @return `absl_status_t` contained within the status_t.
 */
OT_ALWAYS_INLINE absl_status_t status_err(status_t s) {
  return s.value < 0
d000ce38:              00052813                 slti    a6,a0,0
d000ce3c:              41f55793                 srai    a5,a0,0x1f
d000ce40:              8fe9                     and     a5,a5,a0
d000ce42:              8bfd                     andi    a5,a5,31
d000ce44:              0017b713                 seqz    a4,a5
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:103
    "ErrorError",
};

bool status_extract(status_t s, const char **code, int32_t *arg, char *mod_id) {
  size_t err = (size_t)status_err(s);
  if (s.value < 0 && err == 0) {
d000ce48:              00e87833                 and     a6,a6,a4
d000ce4c:              02000713                 li      a4,32
d000ce50:          /-- 00081363                 bnez    a6,d000ce56 <status_extract+0x1e>
d000ce54:          |   873e                     mv      a4,a5
/proc/self/cwd/sw/device/lib/base/status.c:106
    err = sizeof(status_codes) / sizeof(status_codes[0]) - 1;
  }
  *code = status_codes[err];
d000ce56:          \-> 00271813                 slli    a6,a4,0x2
d000ce5a:              0fff5797                 auipc   a5,0xfff5
d000ce5e:              17a78793                 addi    a5,a5,378 # e0001fd4 <status_codes>
d000ce62:              97c2                     add     a5,a5,a6
d000ce64:              439c                     lw      a5,0(a5)
d000ce66:              c19c                     sw      a5,0(a1)
/proc/self/cwd/sw/device/lib/base/status.c:107
  if (err) {
d000ce68:              00173593                 seqz    a1,a4
d000ce6c:       /----- cb1d                     beqz    a4,d000cea2 <status_extract+0x6a>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000ce6e:       |      00555713                 srli    a4,a0,0x5
d000ce72:       |      7ff77713                 andi    a4,a4,2047
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:108
    *arg = (int32_t)bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_ARG);
d000ce76:       |      c218                     sw      a4,0(a2)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ce78:       |      01055613                 srli    a2,a0,0x10
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:111
    uint32_t module_id =
        bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_MODULE_ID);
    *mod_id++ = '@' + ((module_id >> 0) & 0x1F);
d000ce7c:       |      8a7d                     andi    a2,a2,31
d000ce7e:       |      04066613                 ori     a2,a2,64
d000ce82:       |      00c68023                 sb      a2,0(a3)
/proc/self/cwd/sw/device/lib/base/status.c:112
    *mod_id++ = '@' + ((module_id >> 5) & 0x1F);
d000ce86:       |      01555613                 srli    a2,a0,0x15
d000ce8a:       |      8a7d                     andi    a2,a2,31
d000ce8c:       |      04066613                 ori     a2,a2,64
d000ce90:       |      00c680a3                 sb      a2,1(a3)
/proc/self/cwd/sw/device/lib/base/status.c:113
    *mod_id++ = '@' + ((module_id >> 10) & 0x1F);
d000ce94:       |      8169                     srli    a0,a0,0x1a
d000ce96:       |      897d                     andi    a0,a0,31
d000ce98:       |      04056513                 ori     a0,a0,64
d000ce9c:       |      00a68123                 sb      a0,2(a3)
d000cea0:       |  /-- a011                     j       d000cea4 <status_extract+0x6c>
/proc/self/cwd/sw/device/lib/base/status.c:116
    return true;
  } else {
    *arg = s.value;
d000cea2:       \--|-> c208                     sw      a0,0(a2)
/proc/self/cwd/sw/device/lib/base/status.c:119
    return false;
  }
}
d000cea4:          \-> 0015c513                 xori    a0,a1,1
d000cea8:              8082                     ret

d000ceaa <rom_epmp_state_init>:
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:33
                          TOP_EARLGREY_SRAM_CTRL_RET_AON_RAM_SIZE_BYTES <
                      TOP_EARLGREY_MMIO_BASE_ADDR +
                          TOP_EARLGREY_MMIO_SIZE_BYTES,
              "Retention SRAM must be in the MMIO address space.");

void rom_epmp_state_init(lifecycle_state_t lc_state) {
d000ceaa:                          1141                 addi    sp,sp,-16
d000ceac:                          c606                 sw      ra,12(sp)
d000ceae:                          c422                 sw      s0,8(sp)
d000ceb0:                          c226                 sw      s1,4(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ceb2:                          85aa                 mv      a1,a0
d000ceb4:                          cf8d0637             lui     a2,0xcf8d0
d000ceb8:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  const epmp_region_t ram = {.start = TOP_EARLGREY_RAM_MAIN_BASE_ADDR,
                             .end = TOP_EARLGREY_RAM_MAIN_BASE_ADDR +
                                    TOP_EARLGREY_RAM_MAIN_SIZE_BYTES};

  epmp_perm_t debug_rom_access = kEpmpPermLockedNoAccess;
  switch (launder32(lc_state)) {
d000cebc:                   /----- 02b6d363             bge     a3,a1,d000cee2 <rom_epmp_state_init+0x38>
d000cec0:                   |      aab60613             addi    a2,a2,-1365
d000cec4:                /--|----- 02c58c63             beq     a1,a2,d000cefc <rom_epmp_state_init+0x52>
d000cec8:                |  |      0b5a7637             lui     a2,0xb5a7
d000cecc:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000ced0:             /--|--|----- 04c59163             bne     a1,a2,d000cf12 <rom_epmp_state_init+0x68>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:65
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      debug_rom_access = kEpmpPermLockedReadWriteExecute;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ced4:             |  |  |  /-- 00c50663             beq     a0,a2,d000cee0 <rom_epmp_state_init+0x36>
d000ced8:             |  |  |  |   0000                 unimp
d000ceda:             |  |  |  |   0000                 unimp
d000cedc:             |  |  |  |   0000                 unimp
d000cede:             |  |  |  |   0000                 unimp
d000cee0:       /-----|--|--|--\-X a0ad                 j       d000cf4a <rom_epmp_state_init+0xa0>
d000cee2:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000cee6:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000ceea:       |  /--|--|-------- 04c59463             bne     a1,a2,d000cf32 <rom_epmp_state_init+0x88>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:73
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ceee:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000cefa <rom_epmp_state_init+0x50>
d000cef2:       |  |  |  |     |   0000                 unimp
d000cef4:       |  |  |  |     |   0000                 unimp
d000cef6:       |  |  |  |     |   0000                 unimp
d000cef8:       |  |  |  |     |   0000                 unimp
d000cefa:       |  |  |  |  /--\-X a805                 j       d000cf2a <rom_epmp_state_init+0x80>
d000cefc:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000cf00:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:77
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000cf04:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000cf10 <rom_epmp_state_init+0x66>
d000cf08:       |  |  |     |  |   0000                 unimp
d000cf0a:       |  |  |     |  |   0000                 unimp
d000cf0c:       |  |  |     |  |   0000                 unimp
d000cf0e:       |  |  |     |  |   0000                 unimp
d000cf10:       +--|--|-----|--\-X a82d                 j       d000cf4a <rom_epmp_state_init+0xa0>
d000cf12:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000cf16:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000cf1a:       |  |     /--|----- 0cc59e63             bne     a1,a2,d000cff6 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:69
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cf1e:       |  |     |  +----- 00c50663             beq     a0,a2,d000cf2a <rom_epmp_state_init+0x80>
d000cf22:       |  |     |  |      0000                 unimp
d000cf24:       |  |     |  |      0000                 unimp
d000cf26:       |  |     |  |      0000                 unimp
d000cf28:       |  |     |  |      0000                 unimp
d000cf2a:       |  |     |  \----> 6529                 lui     a0,0xa
d000cf2c:       |  |     |         80050493             addi    s1,a0,-2048 # 9800 <_stack_size+0x5800>
d000cf30:       |  |     |     /-- a005                 j       d000cf50 <rom_epmp_state_init+0xa6>
d000cf32:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000cf36:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000cf3a:       |        +-----|-- 0ac59e63             bne     a1,a2,d000cff6 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:61
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000cf3e:       +--------|-----|-- 00c50663             beq     a0,a2,d000cf4a <rom_epmp_state_init+0xa0>
d000cf42:       |        |     |   0000                 unimp
d000cf44:       |        |     |   0000                 unimp
d000cf46:       |        |     |   0000                 unimp
d000cf48:       |        |     |   0000                 unimp
d000cf4a:       \--------|-----|-> 6529                 lui     a0,0xa
d000cf4c:                |     |   f0050493             addi    s1,a0,-256 # 9f00 <_stack_size+0x5f00>
d000cf50:                |     \-> 0fff3417             auipc   s0,0xfff3
d000cf54:                |         0d040413             addi    s0,s0,208 # e0000020 <epmp_state>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:89
  // Initialize in-memory copy of ePMP register state.
  //
  // The actual hardware configuration is performed separately, either by reset
  // logic or in assembly. This code must be kept in sync with any changes
  // to the hardware configuration.
  memset(&epmp_state, 0, sizeof(epmp_state));
d000cf58:                |         05400613             li      a2,84
d000cf5c:                |         8522                 mv      a0,s0
d000cf5e:                |         4581                 li      a1,0
d000cf60:                |         594010ef             jal     ra,d000e4f4 <memset>
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
 */
inline void epmp_state_configure_tor(uint32_t entry, epmp_region_t region,
                                     epmp_perm_t perm) {
  // Set address registers.
  if (entry > 0) {
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cf64:                |         ffffb517             auipc   a0,0xffffb
d000cf68:                |         09c50513             addi    a0,a0,156 # d0008000 <_rom_interrupt_vector_asm>
d000cf6c:                |         8109                 srli    a0,a0,0x2
d000cf6e:                |         c808                 sw      a0,16(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  }
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cf70:                |         00002517             auipc   a0,0x2
d000cf74:                |         a9850513             addi    a0,a0,-1384 # d000ea08 <_text_end>
d000cf78:                |         8109                 srli    a0,a0,0x2
d000cf7a:                |         c848                 sw      a0,20(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:167

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeTor | perm);
d000cf7c:                |         4008                 lw      a0,0(s0)
d000cf7e:                |         340035b7             lui     a1,0x34003
d000cf82:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
 */
inline void epmp_state_configure_napot(uint32_t entry, epmp_region_t region,
                                       epmp_perm_t perm) {
  // Set address register.
  uint32_t len = (region.end - region.start - 1) >> 3;
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cf84:                |         cc0c                 sw      a1,24(s0)
d000cf86:                |         ff0005b7             lui     a1,0xff000
d000cf8a:                |         0ff58593             addi    a1,a1,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000cf8e:                |         8d6d                 and     a0,a0,a1
d000cf90:                |         009995b7             lui     a1,0x999
d000cf94:                |         d0058593             addi    a1,a1,-768 # 998d00 <_rom_ext_virtual_size+0x918d00>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000cf98:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cf9a:                |         c008                 sw      a0,0(s0)
d000cf9c:                |         3c020537             lui     a0,0x3c020
d000cfa0:                |         157d                 addi    a0,a0,-1
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cfa2:                |         d048                 sw      a0,36(s0)
d000cfa4:                |         09900513             li      a0,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cfa8:                |         00a402a3             sb      a0,5(s0)
d000cfac:                |         6511                 lui     a0,0x4
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cfae:                |         dc08                 sw      a0,56(s0)
d000cfb0:                |         34000537             lui     a0,0x34000
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cfb4:                |         dc48                 sw      a0,60(s0)
d000cfb6:                |         08b00513             li      a0,139
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:208
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeNapot | perm);
d000cfba:                |         00c44583             lbu     a1,12(s0)
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cfbe:                |         00a405a3             sb      a0,11(s0)
d000cfc2:                |         1ff00513             li      a0,511
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cfc6:                |         c068                 sw      a0,68(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cfc8:                |         0095e533             or      a0,a1,s1
epmp_state_configure_na4():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:182
  epmp_state.pmpaddr[entry] = region.start >> 2;
d000cfcc:                |         1000f597             auipc   a1,0x1000f
d000cfd0:                |         03458593             addi    a1,a1,52 # e001c000 <_stack_start>
d000cfd4:                |         8189                 srli    a1,a1,0x2
d000cfd6:                |         c42c                 sw      a1,72(s0)
d000cfd8:                |         380045b7             lui     a1,0x38004
d000cfdc:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cfde:                |         c46c                 sw      a1,76(s0)
d000cfe0:                |         9b9005b7             lui     a1,0x9b900
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cfe4:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cfe6:                |         c448                 sw      a0,12(s0)
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:97
  epmp_state_configure_napot(5, eflash, kEpmpPermLockedReadOnly);
  epmp_state_configure_tor(11, mmio, kEpmpPermLockedReadWrite);
  epmp_state_configure_napot(13, debug_rom, debug_rom_access);
  epmp_state_configure_na4(14, stack_guard, kEpmpPermLockedNoAccess);
  epmp_state_configure_napot(15, ram, kEpmpPermLockedReadWrite);
  epmp_state.mseccfg = 0x0; //EPMP_MSECCFG_MMWP | EPMP_MSECCFG_RLB;
d000cfe8:                |         04042823             sw      zero,80(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:98
}
d000cfec:                |         4492                 lw      s1,4(sp)
d000cfee:                |         4422                 lw      s0,8(sp)
d000cff0:                |         40b2                 lw      ra,12(sp)
d000cff2:                |         0141                 addi    sp,sp,16
d000cff4:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:81
      HARDENED_UNREACHABLE();
d000cff6:                \-------> 0000                 unimp
d000cff8:                          0000                 unimp
d000cffa:                          0000                 unimp
d000cffc:                          0000                 unimp

d000cffe <rom_epmp_unlock_rom_ext_rx>:
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cffe:       8109                    srli    a0,a0,0x2
d000d000:       0fff3617                auipc   a2,0xfff3
d000d004:       02060613                addi    a2,a2,32 # e0000020 <epmp_state>
d000d008:       ce48                    sw      a0,28(a2)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000d00a:       8189                    srli    a1,a1,0x2
d000d00c:       d20c                    sw      a1,32(a2)
d000d00e:       08d00693                li      a3,141
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000d012:       00d60223                sb      a3,4(a2)
rom_epmp_unlock_rom_ext_rx():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:116
  //
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+
  CSR_WRITE(CSR_REG_PMPADDR3, region.start >> 2);
d000d016:       3b351073                csrw    pmpaddr3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:117
  CSR_WRITE(CSR_REG_PMPADDR4, region.end >> 2);
d000d01a:       3b459073                csrw    pmpaddr4,a1
d000d01e:       0ff00513                li      a0,255
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:118
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff);
d000d022:       3a153073                csrc    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:119
  CSR_SET_BITS(CSR_REG_PMPCFG1, kEpmpModeTor | kEpmpPermLockedReadExecute);
d000d026:       3a16a073                csrs    pmpcfg1,a3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:120
}
d000d02a:       8082                    ret

d000d02c <rom_epmp_unlock_rom_ext_r>:
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:202
  uint32_t len = (region.end - region.start - 1) >> 3;
d000d02c:       fff54613                not     a2,a0
d000d030:       95b2                    add     a1,a1,a2
d000d032:       818d                    srli    a1,a1,0x3
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000d034:       8109                    srli    a0,a0,0x2
d000d036:       8d4d                    or      a0,a0,a1
d000d038:       0fff3597                auipc   a1,0xfff3
d000d03c:       fe858593                addi    a1,a1,-24 # e0000020 <epmp_state>
d000d040:       d588                    sw      a0,40(a1)
d000d042:       09900613                li      a2,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000d046:       00c58323                sb      a2,6(a1)
rom_epmp_unlock_rom_ext_r():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:138
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+

  CSR_WRITE(CSR_REG_PMPADDR6,
d000d04a:       3b651073                csrw    pmpaddr6,a0
d000d04e:       00ff0537                lui     a0,0xff0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:140
            region.start >> 2 | (region.end - region.start - 1) >> 3);
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff << 16);
d000d052:       3a153073                csrc    pmpcfg1,a0
d000d056:       00990537                lui     a0,0x990
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:141
  CSR_SET_BITS(CSR_REG_PMPCFG1,
d000d05a:       3a152073                csrs    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:143
               ((kEpmpModeNapot | kEpmpPermLockedReadOnly) << 16));
}
d000d05e:       8082                    ret

d000d060 <rom_epmp_config_debug_rom>:
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:145

void rom_epmp_config_debug_rom(lifecycle_state_t lc_state) {
d000d060:                          1ff00593             li      a1,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:159
  //
  //            32          24          16           8           0
  //             +------------+------------+------------+------------+
  // `pmpcfg3` = | `pmp15cfg` | `pmp14cfg` | `pmp13cfg` | `pmp12cfg` |
  //             +------------+------------+------------+------------+
  CSR_WRITE(CSR_REG_PMPADDR13, pmpaddr);
d000d064:                          3bd59073             csrw    pmpaddr13,a1
d000d068:                          65c1                 lui     a1,0x10
d000d06a:                          f0058593             addi    a1,a1,-256 # ff00 <_stack_size+0xbf00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:160
  CSR_CLEAR_BITS(CSR_REG_PMPCFG3, 0xff00);
d000d06e:                          3a35b073             csrc    pmpcfg3,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d072:                          85aa                 mv      a1,a0
d000d074:                          cf8d0637             lui     a2,0xcf8d0
d000d078:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  uint32_t pmpcfg;
  switch (launder32(lc_state)) {
d000d07c:                   /----- 02b6d363             bge     a3,a1,d000d0a2 <rom_epmp_config_debug_rom+0x42>
d000d080:                   |      aab60613             addi    a2,a2,-1365
d000d084:                /--|----- 02c58c63             beq     a1,a2,d000d0bc <rom_epmp_config_debug_rom+0x5c>
d000d088:                |  |      0b5a7637             lui     a2,0xb5a7
d000d08c:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000d090:             /--|--|----- 04c59163             bne     a1,a2,d000d0d2 <rom_epmp_config_debug_rom+0x72>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:168
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000d094:             |  |  |  /-- 00c50663             beq     a0,a2,d000d0a0 <rom_epmp_config_debug_rom+0x40>
d000d098:             |  |  |  |   0000                 unimp
d000d09a:             |  |  |  |   0000                 unimp
d000d09c:             |  |  |  |   0000                 unimp
d000d09e:             |  |  |  |   0000                 unimp
d000d0a0:       /-----|--|--|--\-X a0ad                 j       d000d10a <rom_epmp_config_debug_rom+0xaa>
d000d0a2:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000d0a6:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000d0aa:       |  /--|--|-------- 04c59463             bne     a1,a2,d000d0f2 <rom_epmp_config_debug_rom+0x92>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:176
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000d0ae:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000d0ba <rom_epmp_config_debug_rom+0x5a>
d000d0b2:       |  |  |  |     |   0000                 unimp
d000d0b4:       |  |  |  |     |   0000                 unimp
d000d0b6:       |  |  |  |     |   0000                 unimp
d000d0b8:       |  |  |  |     |   0000                 unimp
d000d0ba:       |  |  |  |  /--\-X a805                 j       d000d0ea <rom_epmp_config_debug_rom+0x8a>
d000d0bc:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000d0c0:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:180
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000d0c4:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000d0d0 <rom_epmp_config_debug_rom+0x70>
d000d0c8:       |  |  |     |  |   0000                 unimp
d000d0ca:       |  |  |     |  |   0000                 unimp
d000d0cc:       |  |  |     |  |   0000                 unimp
d000d0ce:       |  |  |     |  |   0000                 unimp
d000d0d0:       +--|--|-----|--\-X a82d                 j       d000d10a <rom_epmp_config_debug_rom+0xaa>
d000d0d2:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000d0d6:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000d0da:       |  |     /--|----- 02c59e63             bne     a1,a2,d000d116 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000d0de:       |  |     |  +----- 00c50663             beq     a0,a2,d000d0ea <rom_epmp_config_debug_rom+0x8a>
d000d0e2:       |  |     |  |      0000                 unimp
d000d0e4:       |  |     |  |      0000                 unimp
d000d0e6:       |  |     |  |      0000                 unimp
d000d0e8:       |  |     |  |      0000                 unimp
d000d0ea:       |  |     |  \----> 6529                 lui     a0,0xa
d000d0ec:       |  |     |         80050513             addi    a0,a0,-2048 # 9800 <_stack_size+0x5800>
d000d0f0:       |  |     |     /-- a005                 j       d000d110 <rom_epmp_config_debug_rom+0xb0>
d000d0f2:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000d0f6:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000d0fa:       |        +-----|-- 00c59e63             bne     a1,a2,d000d116 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:164
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000d0fe:       +--------|-----|-- 00c50663             beq     a0,a2,d000d10a <rom_epmp_config_debug_rom+0xaa>
d000d102:       |        |     |   0000                 unimp
d000d104:       |        |     |   0000                 unimp
d000d106:       |        |     |   0000                 unimp
d000d108:       |        |     |   0000                 unimp
d000d10a:       \--------|-----|-> 6529                 lui     a0,0xa
d000d10c:                |     |   f0050513             addi    a0,a0,-256 # 9f00 <_stack_size+0x5f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:186
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  CSR_SET_BITS(CSR_REG_PMPCFG3, pmpcfg);
d000d110:                |     \-> 3a352073             csrs    pmpcfg3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:187
}
d000d114:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:184
      HARDENED_UNREACHABLE();
d000d116:                \-------> 0000                 unimp
d000d118:                          0000                 unimp
d000d11a:                          0000                 unimp
d000d11c:                          0000                 unimp

d000d11e <sigverify_rsa_verify>:
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:199

rom_error_t sigverify_rsa_verify(const sigverify_rsa_buffer_t *signature,
                                 const sigverify_rsa_key_t *key,
                                 const hmac_digest_t *act_digest,
                                 lifecycle_state_t lc_state,
                                 uint32_t *flash_exec) {
d000d11e:                             7125                      addi    sp,sp,-416
d000d120:                             18112e23                  sw      ra,412(sp)
d000d124:                             18812c23                  sw      s0,408(sp)
d000d128:                             18912a23                  sw      s1,404(sp)
d000d12c:                             19212823                  sw      s2,400(sp)
d000d130:                             19312623                  sw      s3,396(sp)
d000d134:                             19412423                  sw      s4,392(sp)
d000d138:                             19512223                  sw      s5,388(sp)
d000d13c:                             8aba                      mv      s5,a4
d000d13e:                             577d                      li      a4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:200
  *flash_exec = UINT32_MAX;
d000d140:                             00eaa023                  sw      a4,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d144:                             8736                      mv      a4,a3
d000d146:                             cf8d0837                  lui     a6,0xcf8d0
d000d14a:                             aaa80793                  addi    a5,a6,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
d000d14e:                             84b2                      mv      s1,a2
d000d150:                             89ae                      mv      s3,a1
d000d152:                             892a                      mv      s2,a0
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000d154:                      /----- 02e7d363                  bge     a5,a4,d000d17a <sigverify_rsa_verify+0x5c>
d000d158:                      |      aab80513                  addi    a0,a6,-1365
d000d15c:                   /--|----- 02a70c63                  beq     a4,a0,d000d194 <sigverify_rsa_verify+0x76>
d000d160:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000d164:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000d168:                /--|--|----- 04a71163                  bne     a4,a0,d000d1aa <sigverify_rsa_verify+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:179
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000d16c:                |  |  |  /-- 00a68663                  beq     a3,a0,d000d178 <sigverify_rsa_verify+0x5a>
d000d170:                |  |  |  |   0000                      unimp
d000d172:                |  |  |  |   0000                      unimp
d000d174:                |  |  |  |   0000                      unimp
d000d176:                |  |  |  |   0000                      unimp
d000d178:             /--|--|--|--\-X a0a9                      j       d000d1c2 <sigverify_rsa_verify+0xa4>
d000d17a:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000d17e:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000d182:          /--|--|--|-------- 06a71363                  bne     a4,a0,d000d1e8 <sigverify_rsa_verify+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:185
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000d186:          |  |  |  |     /-- 00a68663                  beq     a3,a0,d000d192 <sigverify_rsa_verify+0x74>
d000d18a:          |  |  |  |     |   0000                      unimp
d000d18c:          |  |  |  |     |   0000                      unimp
d000d18e:          |  |  |  |     |   0000                      unimp
d000d190:          |  |  |  |     |   0000                      unimp
d000d192:          |  +--|--|-----\-X a805                      j       d000d1c2 <sigverify_rsa_verify+0xa4>
d000d194:          |  |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000d198:          |  |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:188
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000d19c:          |  |  |        /-- 00a68663                  beq     a3,a0,d000d1a8 <sigverify_rsa_verify+0x8a>
d000d1a0:          |  |  |        |   0000                      unimp
d000d1a2:          |  |  |        |   0000                      unimp
d000d1a4:          |  |  |        |   0000                      unimp
d000d1a6:          |  |  |        |   0000                      unimp
d000d1a8:          |  +--|--------\-X a829                      j       d000d1c2 <sigverify_rsa_verify+0xa4>
d000d1aa:          |  |  \----------> 65f25537                  lui     a0,0x65f25
d000d1ae:          |  |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000d1b2:       /--|--|-------------- 1ea71963                  bne     a4,a0,d000d3a4 <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:182
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000d1b6:       |  |  +-------------- 00a68663                  beq     a3,a0,d000d1c2 <sigverify_rsa_verify+0xa4>
d000d1ba:       |  |  |               0000                      unimp
d000d1bc:       |  |  |               0000                      unimp
d000d1be:       |  |  |               0000                      unimp
d000d1c0:       |  |  |               0000                      unimp
d000d1c2:       |  |  \-------------> 0e400513                  li      a0,228
d000d1c6:       |  |                  03a010ef                  jal     ra,d000e200 <otp_read32>
d000d1ca:       |  |                  1d400593                  li      a1,468
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:203
  hardened_bool_t use_sw = sigverify_use_sw_rsa_verify(lc_state);
  sigverify_rsa_buffer_t enc_msg;
  switch (use_sw) {
d000d1ce:       |  |           /----- 02b50963                  beq     a0,a1,d000d200 <sigverify_rsa_verify+0xe2>
d000d1d2:       |  |           |      73900a13                  li      s4,1849
d000d1d6:       |  |     /-----|----- 1d451363                  bne     a0,s4,d000d39c <sigverify_rsa_verify+0x27e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:205
    case kHardenedBoolTrue:
      RETURN_IF_ERROR(sigverify_mod_exp_ibex(key, signature, &enc_msg));
d000d1da:       |  |     |     |      860a                      mv      a2,sp
d000d1dc:       |  |     |     |      854e                      mv      a0,s3
d000d1de:       |  |     |     |      85ca                      mv      a1,s2
d000d1e0:       |  |     |     |      249d                      jal     d000d446 <sigverify_mod_exp_ibex>
d000d1e2:       |  |     |     |  /-- 03450763                  beq     a0,s4,d000d210 <sigverify_rsa_verify+0xf2>
d000d1e6:       |  |     |  /--|--|-- aa59                      j       d000d37c <sigverify_rsa_verify+0x25e>
d000d1e8:       |  \-----|--|--|--|-> b2866537                  lui     a0,0xb2866
d000d1ec:       |        |  |  |  |   fbb50513                  addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000d1f0:       +--------|--|--|--|-- 1aa71a63                  bne     a4,a0,d000d3a4 <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:174
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000d1f4:       |        |  |  +--|-- 00a68663                  beq     a3,a0,d000d200 <sigverify_rsa_verify+0xe2>
d000d1f8:       |        |  |  |  |   0000                      unimp
d000d1fa:       |        |  |  |  |   0000                      unimp
d000d1fc:       |        |  |  |  |   0000                      unimp
d000d1fe:       |        |  |  |  |   0000                      unimp
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:208
      break;
    case kHardenedBoolFalse:
      RETURN_IF_ERROR(sigverify_mod_exp_otbn(key, signature, &enc_msg));
d000d200:       |        |  |  \--|-> 860a                      mv      a2,sp
d000d202:       |        |  |     |   854e                      mv      a0,s3
d000d204:       |        |  |     |   85ca                      mv      a1,s2
d000d206:       |        |  |     |   2d7d                      jal     d000d8c4 <sigverify_mod_exp_otbn>
d000d208:       |        |  |     |   73900593                  li      a1,1849
d000d20c:       |        |  +-----|-- 16b51863                  bne     a0,a1,d000d37c <sigverify_rsa_verify+0x25e>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d210:       |        |  |     \-> 4581                      li      a1,0
d000d212:       |        |  |         461d                      li      a2,7
d000d214:       |        |  |         4501                      li      a0,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000d216:       |        |  |  /----- 02b66663                  bltu    a2,a1,d000d242 <sigverify_rsa_verify+0x124>
d000d21a:       |        |  |  |      4501                      li      a0,0
d000d21c:       |        |  |  |      858a                      mv      a1,sp
d000d21e:       |        |  |  |      00002617                  auipc   a2,0x2
d000d222:       |        |  |  |      39660613                  addi    a2,a2,918 # d000f5b4 <kSigverifyShares>
d000d226:       |        |  |  |      46a1                      li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000d228:       |        |  |  |  /-> 4098                      lw      a4,0(s1)
d000d22a:       |        |  |  |  |   421c                      lw      a5,0(a2)
d000d22c:       |        |  |  |  |   4180                      lw      s0,0(a1)
d000d22e:       |        |  |  |  |   8f3d                      xor     a4,a4,a5
d000d230:       |        |  |  |  |   8f21                      xor     a4,a4,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000d232:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000d234:       |        |  |  |  |   c198                      sw      a4,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d236:       |        |  |  |  |   872a                      mv      a4,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000d238:       |        |  |  |  |   0591                      addi    a1,a1,4
d000d23a:       |        |  |  |  |   0611                      addi    a2,a2,4
d000d23c:       |        |  |  |  |   0491                      addi    s1,s1,4
d000d23e:       |        |  |  |  \-- fed765e3                  bltu    a4,a3,d000d228 <sigverify_rsa_verify+0x10a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d242:       |        |  |  \----> 4581                      li      a1,0
d000d244:       |        |  |         4611                      li      a2,4
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000d246:       |        |  |  /----- 04b66063                  bltu    a2,a1,d000d286 <sigverify_rsa_verify+0x168>
d000d24a:       |        |  |  |      00251613                  slli    a2,a0,0x2
d000d24e:       |        |  |  |      858a                      mv      a1,sp
d000d250:       |        |  |  |      95b2                      add     a1,a1,a2
d000d252:       |        |  |  |      00002697                  auipc   a3,0x2
d000d256:       |        |  |  |      36268693                  addi    a3,a3,866 # d000f5b4 <kSigverifyShares>
d000d25a:       |        |  |  |      96b2                      add     a3,a3,a2
d000d25c:       |        |  |  |      4605                      li      a2,1
d000d25e:       |        |  |  |      00002717                  auipc   a4,0x2
d000d262:       |        |  |  |      4d670713                  addi    a4,a4,1238 # d000f734 <sigverify_encoded_message_check.kEncodedSha256>
d000d266:       |        |  |  |      4815                      li      a6,5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:116
    enc_msg_ptr[i] ^= kEncodedSha256[j] ^ kSigverifyShares[i];
d000d268:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000d26a:       |        |  |  |  |   4280                      lw      s0,0(a3)
d000d26c:       |        |  |  |  |   419c                      lw      a5,0(a1)
d000d26e:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000d270:       |        |  |  |  |   8fa5                      xor     a5,a5,s1
d000d272:       |        |  |  |  |   c19c                      sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d274:       |        |  |  |  |   87b2                      mv      a5,a2
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000d276:       |        |  |  |  |   0605                      addi    a2,a2,1
d000d278:       |        |  |  |  |   0711                      addi    a4,a4,4
d000d27a:       |        |  |  |  |   0591                      addi    a1,a1,4
d000d27c:       |        |  |  |  |   0691                      addi    a3,a3,4
d000d27e:       |        |  |  |  \-- ff07e5e3                  bltu    a5,a6,d000d268 <sigverify_rsa_verify+0x14a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d282:       |        |  |  |      9532                      add     a0,a0,a2
d000d284:       |        |  |  |      157d                      addi    a0,a0,-1
d000d286:       |        |  |  \----> 4601                      li      a2,0
d000d288:       |        |  |         05100693                  li      a3,81
d000d28c:       |        |  |         00002597                  auipc   a1,0x2
d000d290:       |        |  |         32858593                  addi    a1,a1,808 # d000f5b4 <kSigverifyShares>
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000d294:       |        |  |  /----- 02c6ec63                  bltu    a3,a2,d000d2cc <sigverify_rsa_verify+0x1ae>
d000d298:       |        |  |  |      00251693                  slli    a3,a0,0x2
d000d29c:       |        |  |  |      860a                      mv      a2,sp
d000d29e:       |        |  |  |      9636                      add     a2,a2,a3
d000d2a0:       |        |  |  |      00002717                  auipc   a4,0x2
d000d2a4:       |        |  |  |      31470713                  addi    a4,a4,788 # d000f5b4 <kSigverifyShares>
d000d2a8:       |        |  |  |      9736                      add     a4,a4,a3
d000d2aa:       |        |  |  |      4685                      li      a3,1
d000d2ac:       |        |  |  |      05200793                  li      a5,82
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:124
    enc_msg_ptr[i] ^= 0xffffffff ^ kSigverifyShares[i];
d000d2b0:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000d2b2:       |        |  |  |  |   4200                      lw      s0,0(a2)
d000d2b4:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000d2b6:       |        |  |  |  |   fff4c493                  not     s1,s1
d000d2ba:       |        |  |  |  |   c204                      sw      s1,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d2bc:       |        |  |  |  |   84b6                      mv      s1,a3
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000d2be:       |        |  |  |  |   0685                      addi    a3,a3,1
d000d2c0:       |        |  |  |  |   0611                      addi    a2,a2,4
d000d2c2:       |        |  |  |  |   0711                      addi    a4,a4,4
d000d2c4:       |        |  |  |  \-- fef4e6e3                  bltu    s1,a5,d000d2b0 <sigverify_rsa_verify+0x192>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
  enc_msg_ptr[i] ^= 0x0001ffff ^ kSigverifyShares[i];
d000d2c8:       |        |  |  |      9536                      add     a0,a0,a3
d000d2ca:       |        |  |  |      157d                      addi    a0,a0,-1
d000d2cc:       |        |  |  \----> 00251693                  slli    a3,a0,0x2
d000d2d0:       |        |  |         00b68633                  add     a2,a3,a1
d000d2d4:       |        |  |         4218                      lw      a4,0(a2)
d000d2d6:       |        |  |         860a                      mv      a2,sp
d000d2d8:       |        |  |         96b2                      add     a3,a3,a2
d000d2da:       |        |  |         429c                      lw      a5,0(a3)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d2dc:       |        |  |         4481                      li      s1,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
d000d2de:       |        |  |         8f3d                      xor     a4,a4,a5
d000d2e0:       |        |  |         000207b7                  lui     a5,0x20
d000d2e4:       |        |  |         17fd                      addi    a5,a5,-1
d000d2e6:       |        |  |         8f3d                      xor     a4,a4,a5
d000d2e8:       |        |  |         c298                      sw      a4,0(a3)
d000d2ea:       |        |  |         05f00693                  li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:128
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords - 1);
d000d2ee:       |        |  |     /-- 00d50663                  beq     a0,a3,d000d2fa <sigverify_rsa_verify+0x1dc>
d000d2f2:       |        |  |     |   0000                      unimp
d000d2f4:       |        |  |     |   0000                      unimp
d000d2f6:       |        |  |     |   0000                      unimp
d000d2f8:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:132
  *flash_exec = 0;
d000d2fa:       |        |  |     \-> 000aa023                  sw      zero,0(s5)
d000d2fe:       |        |  |         4501                      li      a0,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000d300:       |        |  |  /----- 0296ec63                  bltu    a3,s1,d000d338 <sigverify_rsa_verify+0x21a>
d000d304:       |        |  |  |      4701                      li      a4,0
d000d306:       |        |  |  |      4501                      li      a0,0
d000d308:       |        |  |  |      06000693                  li      a3,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:137
    diff |= enc_msg_ptr[i] ^ kSigverifyShares[i];
d000d30c:       |        |  |  |  /-> 421c                      lw      a5,0(a2)
d000d30e:       |        |  |  |  |   4184                      lw      s1,0(a1)
d000d310:       |        |  |  |  |   8cbd                      xor     s1,s1,a5
d000d312:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000d314:       |        |  |  |  |   40e004b3                  neg     s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000d318:       |        |  |  |  |   000aa403                  lw      s0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000d31c:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:139
    diff |= ~(diff >> 31) + 1;  // Set to all 1s if MSB is set, no change o/w.
d000d31e:       |        |  |  |  |   41f75493                  srai    s1,a4,0x1f
d000d322:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000d324:       |        |  |  |  |   8fa1                      xor     a5,a5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000d326:       |        |  |  |  |   8fd9                      or      a5,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000d328:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000d32a:       |        |  |  |  |   00faa023                  sw      a5,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d32e:       |        |  |  |  |   87aa                      mv      a5,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000d330:       |        |  |  |  |   0591                      addi    a1,a1,4
d000d332:       |        |  |  |  |   0611                      addi    a2,a2,4
d000d334:       |        |  |  |  \-- fcd7ece3                  bltu    a5,a3,d000d30c <sigverify_rsa_verify+0x1ee>
d000d338:       |        |  |  \----> 06000593                  li      a1,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:145
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords);
d000d33c:       |        |  |     /-- 00b50663                  beq     a0,a1,d000d348 <sigverify_rsa_verify+0x22a>
d000d340:       |        |  |     |   0000                      unimp
d000d342:       |        |  |     |   0000                      unimp
d000d344:       |        |  |     |   0000                      unimp
d000d346:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:150
      (*flash_exec << 21 ^ *flash_exec << 10 ^ *flash_exec >> 1) >> 21;
d000d348:       |        |  |     \-> 000aa503                  lw      a0,0(s5)
d000d34c:       |        |  |         01551593                  slli    a1,a0,0x15
d000d350:       |        |  |         00a51613                  slli    a2,a0,0xa
d000d354:       |        |  |         8db1                      xor     a1,a1,a2
d000d356:       |        |  |         8159                      srli    a0,a0,0x16
d000d358:       |        |  |         81d5                      srli    a1,a1,0x15
d000d35a:       |        |  |         8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d35c:       |        |  |         862a                      mv      a2,a0
d000d35e:       |        |  |         73900593                  li      a1,1849
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:151
  if (launder32(result) == kErrorOk) {
d000d362:       |        |  |  /----- 00b61963                  bne     a2,a1,d000d374 <sigverify_rsa_verify+0x256>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:152
    HARDENED_CHECK_EQ(result, kErrorOk);
d000d366:       |        |  |  |  /-- 00b50663                  beq     a0,a1,d000d372 <sigverify_rsa_verify+0x254>
d000d36a:       |        |  |  |  |   0000                      unimp
d000d36c:       |        |  |  |  |   0000                      unimp
d000d36e:       |        |  |  |  |   0000                      unimp
d000d370:       |        |  |  |  |   0000                      unimp
d000d372:       |        |  +--|--\-X a029                      j       d000d37c <sigverify_rsa_verify+0x25e>
d000d374:       |        |  |  \----> 01535537                  lui     a0,0x1535
d000d378:       |        |  |         60350513                  addi    a0,a0,1539 # 1535603 <_rom_ext_virtual_size+0x14b5603>
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:214
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  return sigverify_encoded_message_check(&enc_msg, act_digest, flash_exec);
}
d000d37c:       |        |  \-------> 18412a83                  lw      s5,388(sp)
d000d380:       |        |            18812a03                  lw      s4,392(sp)
d000d384:       |        |            18c12983                  lw      s3,396(sp)
d000d388:       |        |            19012903                  lw      s2,400(sp)
d000d38c:       |        |            19412483                  lw      s1,404(sp)
d000d390:       |        |            19812403                  lw      s0,408(sp)
d000d394:       |        |            19c12083                  lw      ra,412(sp)
d000d398:       |        |            611d                      addi    sp,sp,416
d000d39a:       |        |            8082                      ret
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:211
      HARDENED_UNREACHABLE();
d000d39c:       |        \----------> 0000                      unimp
d000d39e:       |                     0000                      unimp
d000d3a0:       |                     0000                      unimp
d000d3a2:       |                     0000                      unimp
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:191
      HARDENED_UNREACHABLE();
d000d3a4:       \-------------------> 0000                      unimp
d000d3a6:                             0000                      unimp
d000d3a8:                             0000                      unimp
d000d3aa:                             0000                      unimp

d000d3ac <sigverify_usage_constraints_get>:
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:217

void sigverify_usage_constraints_get(
    uint32_t selector_bits, manifest_usage_constraints_t *usage_constraints) {
d000d3ac:              1141                     addi    sp,sp,-16
d000d3ae:              c606                     sw      ra,12(sp)
d000d3b0:              c422                     sw      s0,8(sp)
d000d3b2:              c226                     sw      s1,4(sp)
d000d3b4:              c04a                     sw      s2,0(sp)
d000d3b6:              892e                     mv      s2,a1
d000d3b8:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:218
  usage_constraints->selector_bits = selector_bits;
d000d3ba:              c188                     sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:219
  lifecycle_device_id_get(&usage_constraints->device_id);
d000d3bc:              00458413                 addi    s0,a1,4
d000d3c0:              8522                     mv      a0,s0
d000d3c2:              5dd000ef                 jal     ra,d000e19e <lifecycle_device_id_get>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:222

  usage_constraints->manuf_state_creator =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MANUF_STATE_OFFSET);
d000d3c6:              10400513                 li      a0,260
d000d3ca:              637000ef                 jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:221
  usage_constraints->manuf_state_creator =
d000d3ce:              02a92223                 sw      a0,36(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:224
  usage_constraints->manuf_state_owner =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_MANUF_STATE_OFFSET);
d000d3d2:              56800513                 li      a0,1384
d000d3d6:              62b000ef                 jal     ra,d000e200 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:223
  usage_constraints->manuf_state_owner =
d000d3da:              02a92423                 sw      a0,40(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:225
  usage_constraints->life_cycle_state = lifecycle_state_get();
d000d3de:              411000ef                 jal     ra,d000dfee <lifecycle_state_get>
d000d3e2:              4581                     li      a1,0
d000d3e4:              02a92623                 sw      a0,44(s2)
d000d3e8:              a5a5a537                 lui     a0,0xa5a5a
d000d3ec:              5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
d000d3f0:              4621                     li      a2,8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000d3f2:       /----> 00b4d6b3                 srl     a3,s1,a1
d000d3f6:       |      8a85                     andi    a3,a3,1
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:232
  static_assert(
      kManifestSelectorBitDeviceIdFirst == 0 &&
          kManifestSelectorBitDeviceIdLast == kLifecycleDeviceIdNumWords - 1,
      "mapping from selector_bits to device_id changed, loop must be updated");
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    if (!bitfield_bit32_read(selector_bits, i)) {
d000d3f8:       |  /-- e291                     bnez    a3,d000d3fc <sigverify_usage_constraints_get+0x50>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:233
      usage_constraints->device_id.device_id[i] =
d000d3fa:       |  |   c008                     sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:231
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000d3fc:       |  \-> 0585                     addi    a1,a1,1
d000d3fe:       |      0411                     addi    s0,s0,4
d000d400:       \----- fec599e3                 bne     a1,a2,d000d3f2 <sigverify_usage_constraints_get+0x46>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000d404:              1004f513                 andi    a0,s1,256
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:237
          MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
    }
  }
  if (!bitfield_bit32_read(selector_bits,
d000d408:          /-- e519                     bnez    a0,d000d416 <sigverify_usage_constraints_get+0x6a>
d000d40a:          |   a5a5a537                 lui     a0,0xa5a5a
d000d40e:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:239
                           kManifestSelectorBitManufStateCreator)) {
    usage_constraints->manuf_state_creator =
d000d412:          |   02a92223                 sw      a0,36(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000d416:          \-> 2004f513                 andi    a0,s1,512
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:242
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits,
d000d41a:          /-- e519                     bnez    a0,d000d428 <sigverify_usage_constraints_get+0x7c>
d000d41c:          |   a5a5a537                 lui     a0,0xa5a5a
d000d420:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:244
                           kManifestSelectorBitManufStateOwner)) {
    usage_constraints->manuf_state_owner =
d000d424:          |   02a92423                 sw      a0,40(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000d428:          \-> 4004f513                 andi    a0,s1,1024
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:247
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits, kManifestSelectorBitLifeCycleState)) {
d000d42c:          /-- e519                     bnez    a0,d000d43a <sigverify_usage_constraints_get+0x8e>
d000d42e:          |   a5a5a537                 lui     a0,0xa5a5a
d000d432:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:248
    usage_constraints->life_cycle_state =
d000d436:          |   02a92623                 sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:251
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
}
d000d43a:          \-> 4902                     lw      s2,0(sp)
d000d43c:              4492                     lw      s1,4(sp)
d000d43e:              4422                     lw      s0,8(sp)
d000d440:              40b2                     lw      ra,12(sp)
d000d442:              0141                     addi    sp,sp,16
d000d444:              8082                     ret

d000d446 <sigverify_mod_exp_ibex>:
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:169
  }
}

rom_error_t sigverify_mod_exp_ibex(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000d446:                          7125                 addi    sp,sp,-416
d000d448:                          18112e23             sw      ra,412(sp)
d000d44c:                          18812c23             sw      s0,408(sp)
d000d450:                          18912a23             sw      s1,404(sp)
d000d454:                          19212823             sw      s2,400(sp)
d000d458:                          19312623             sw      s3,396(sp)
d000d45c:                          19412423             sw      s4,392(sp)
d000d460:                          19512223             sw      s5,388(sp)
d000d464:                          8a32                 mv      s4,a2
d000d466:                          892e                 mv      s2,a1
d000d468:                          8aaa                 mv      s5,a0
d000d46a:                          05f00593             li      a1,95
d000d46e:                          17c00613             li      a2,380
d000d472:                          03535537             lui     a0,0x3535
d000d476:                          60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
d000d47a:                          05f00693             li      a3,95
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d47e:                   /----> 00c90733             add     a4,s2,a2
d000d482:                   |      4318                 lw      a4,0(a4)
d000d484:                   |      00ca87b3             add     a5,s5,a2
d000d488:                   |      439c                 lw      a5,0(a5)
d000d48a:                   |  /-- 00f71763             bne     a4,a5,d000d498 <sigverify_mod_exp_ibex+0x52>
d000d48e:                   |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d490:                   |  |   1671                 addi    a2,a2,-4
d000d492:                   \--|-- fed5f6e3             bgeu    a1,a3,d000d47e <sigverify_mod_exp_ibex+0x38>
d000d496:       /--------------|-- a275                 j       d000d642 <sigverify_mod_exp_ibex+0x1fc>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:172
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (greater_equal_modulus(key, sig)) {
d000d498:       |           /--\-X 00e7f763             bgeu    a5,a4,d000d4a6 <sigverify_mod_exp_ibex+0x60>
d000d49c:       |           |      03535537             lui     a0,0x3535
d000d4a0:       |           |      60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
d000d4a4:       +-----------|----- aa79                 j       d000d642 <sigverify_mod_exp_ibex+0x1fc>
d000d4a6:       |           \----> 898a                 mv      s3,sp
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:142
  memset(buf.data, 0, sizeof(result->data));
d000d4a8:       |                  850a                 mv      a0,sp
d000d4aa:       |                  18000613             li      a2,384
d000d4ae:       |                  18000413             li      s0,384
d000d4b2:       |                  4581                 li      a1,0
d000d4b4:       |                  040010ef             jal     ra,d000e4f4 <memset>
d000d4b8:       |                  4501                 li      a0,0
d000d4ba:       |                  4581                 li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d4bc:       |              /-> 00a98633             add     a2,s3,a0
d000d4c0:       |              |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d4c2:       |              |   00aa8733             add     a4,s5,a0
d000d4c6:       |              |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d4c8:       |              |   40b687b3             sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d4cc:       |              |   00b6b5b3             sltu    a1,a3,a1
d000d4d0:       |              |   00e7b6b3             sltu    a3,a5,a4
d000d4d4:       |              |   95b6                 add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d4d6:       |              |   40e786b3             sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d4da:       |              |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d4dc:       |              |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d4de:       |              \-- fc851fe3             bne     a0,s0,d000d4bc <sigverify_mod_exp_ibex+0x76>
d000d4e2:       |                  4881                 li      a7,0
d000d4e4:       |                  858a                 mv      a1,sp
d000d4e6:       |                  e8400293             li      t0,-380
d000d4ea:       |                  05f00313             li      t1,95
d000d4ee:       |                  06000813             li      a6,96
d000d4f2:       |                  18000793             li      a5,384
shift_left():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d4f6:       |  /-------------> 17c12383             lw      t2,380(sp)
d000d4fa:       |  |               4701                 li      a4,0
d000d4fc:       |  |               851e                 mv      a0,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d4fe:       |  |           /-> 00e58633             add     a2,a1,a4
d000d502:       |  |           |   17862683             lw      a3,376(a2)
d000d506:       |  |           |   0506                 slli    a0,a0,0x1
d000d508:       |  |           |   01f6d413             srli    s0,a3,0x1f
d000d50c:       |  |           |   8d41                 or      a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d50e:       |  |           |   1771                 addi    a4,a4,-4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d510:       |  |           |   16a62e23             sw      a0,380(a2)
d000d514:       |  |           |   8536                 mv      a0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d516:       |  |           \-- fe5714e3             bne     a4,t0,d000d4fe <sigverify_mod_exp_ibex+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d51a:       |  |               4502                 lw      a0,0(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d51c:       |  |               01f3d393             srli    t2,t2,0x1f
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d520:       |  |               0506                 slli    a0,a0,0x1
d000d522:       |  |               c02a                 sw      a0,0(sp)
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d524:       |  |     /-------- 02039563             bnez    t2,d000d54e <sigverify_mod_exp_ibex+0x108>
d000d528:       |  |  /--|-------> 05f00413             li      s0,95
d000d52c:       |  |  |  |         17c00513             li      a0,380
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d530:       |  |  |  |  /----> 00a58633             add     a2,a1,a0
d000d534:       |  |  |  |  |      4210                 lw      a2,0(a2)
d000d536:       |  |  |  |  |      00aa86b3             add     a3,s5,a0
d000d53a:       |  |  |  |  |      4294                 lw      a3,0(a3)
d000d53c:       |  |  |  |  |  /-- 00d61763             bne     a2,a3,d000d54a <sigverify_mod_exp_ibex+0x104>
d000d540:       |  |  |  |  |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d542:       |  |  |  |  |  |   1571                 addi    a0,a0,-4
d000d544:       |  |  |  |  \--|-- fe8376e3             bgeu    t1,s0,d000d530 <sigverify_mod_exp_ibex+0xea>
d000d548:       |  |  |  +-----|-- a019                 j       d000d54e <sigverify_mod_exp_ibex+0x108>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d54a:       |  |  |  |  /--\-X 02c6fc63             bgeu    a3,a2,d000d582 <sigverify_mod_exp_ibex+0x13c>
d000d54e:       |  |  |  >--|----> 4501                 li      a0,0
d000d550:       |  |  |  |  |      4401                 li      s0,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d552:       |  |  |  |  |  /-> 00a58633             add     a2,a1,a0
d000d556:       |  |  |  |  |  |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d558:       |  |  |  |  |  |   00aa8733             add     a4,s5,a0
d000d55c:       |  |  |  |  |  |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d55e:       |  |  |  |  |  |   408684b3             sub     s1,a3,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d562:       |  |  |  |  |  |   0086b6b3             sltu    a3,a3,s0
d000d566:       |  |  |  |  |  |   00e4b433             sltu    s0,s1,a4
d000d56a:       |  |  |  |  |  |   9436                 add     s0,s0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d56c:       |  |  |  |  |  |   40e486b3             sub     a3,s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d570:       |  |  |  |  |  |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d572:       |  |  |  |  |  |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d574:       |  |  |  |  |  \-- fcf51fe3             bne     a0,a5,d000d552 <sigverify_mod_exp_ibex+0x10c>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:155
      msb -= subtract_modulus(key, &buf);
d000d578:       |  |  |  |  |      408383b3             sub     t2,t2,s0
d000d57c:       |  |  |  \--|----- fc0399e3             bnez    t2,d000d54e <sigverify_mod_exp_ibex+0x108>
d000d580:       |  |  \-----|----- b765                 j       d000d528 <sigverify_mod_exp_ibex+0xe2>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:150
  for (size_t i = 0; i < 96; ++i) {
d000d582:       |  |        \----> 0885                 addi    a7,a7,1
d000d584:       |  \-------------- f70899e3             bne     a7,a6,d000d4f6 <sigverify_mod_exp_ibex+0xb0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:160
  mont_mul(key, &buf, &buf, result);
d000d588:       |                  858a                 mv      a1,sp
d000d58a:       |                  860a                 mv      a2,sp
d000d58c:       |                  8556                 mv      a0,s5
d000d58e:       |                  86d2                 mv      a3,s4
d000d590:       |                  28c9                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d592:       |                  868a                 mv      a3,sp
d000d594:       |                  8556                 mv      a0,s5
d000d596:       |                  85d2                 mv      a1,s4
d000d598:       |                  8652                 mv      a2,s4
d000d59a:       |                  20e1                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d59c:       |                  858a                 mv      a1,sp
d000d59e:       |                  860a                 mv      a2,sp
d000d5a0:       |                  8556                 mv      a0,s5
d000d5a2:       |                  86d2                 mv      a3,s4
d000d5a4:       |                  287d                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d5a6:       |                  868a                 mv      a3,sp
d000d5a8:       |                  8556                 mv      a0,s5
d000d5aa:       |                  85d2                 mv      a1,s4
d000d5ac:       |                  8652                 mv      a2,s4
d000d5ae:       |                  2855                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d5b0:       |                  858a                 mv      a1,sp
d000d5b2:       |                  860a                 mv      a2,sp
d000d5b4:       |                  8556                 mv      a0,s5
d000d5b6:       |                  86d2                 mv      a3,s4
d000d5b8:       |                  206d                 jal     d000d662 <mont_mul>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:181
  sigverify_rsa_buffer_t buf;

  // result = R^2 mod n
  calc_r_square(key, result);
  // buf = sig * R mod n
  mont_mul(key, sig, result, &buf);
d000d5ba:       |                  868a                 mv      a3,sp
d000d5bc:       |                  8556                 mv      a0,s5
d000d5be:       |                  85ca                 mv      a1,s2
d000d5c0:       |                  8652                 mv      a2,s4
d000d5c2:       |                  2045                 jal     d000d662 <mont_mul>
d000d5c4:       |                  4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:184
  for (size_t i = 0; i < 8; ++i) {
    // result = sig^{2*4^i} * R mod n (sig's exponent: 2, 8, 32, ..., 32768)
    mont_mul(key, &buf, &buf, result);
d000d5c6:       |              /-> 858a                 mv      a1,sp
d000d5c8:       |              |   860a                 mv      a2,sp
d000d5ca:       |              |   8556                 mv      a0,s5
d000d5cc:       |              |   86d2                 mv      a3,s4
d000d5ce:       |              |   2851                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:186
    // buf = sig^{4^{i+1}} * R mod n (sig's exponent: 4, 16, 64, ..., 65536)
    mont_mul(key, result, result, &buf);
d000d5d0:       |              |   868a                 mv      a3,sp
d000d5d2:       |              |   8556                 mv      a0,s5
d000d5d4:       |              |   85d2                 mv      a1,s4
d000d5d6:       |              |   8652                 mv      a2,s4
d000d5d8:       |              |   2069                 jal     d000d662 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:182
  for (size_t i = 0; i < 8; ++i) {
d000d5da:       |              |   147d                 addi    s0,s0,-1
d000d5dc:       |              \-- f46d                 bnez    s0,d000d5c6 <sigverify_mod_exp_ibex+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:189
  }
  // result = sig^65537 mod n
  mont_mul(key, &buf, sig, result);
d000d5de:       |                  858a                 mv      a1,sp
d000d5e0:       |                  8556                 mv      a0,s5
d000d5e2:       |                  864a                 mv      a2,s2
d000d5e4:       |                  86d2                 mv      a3,s4
d000d5e6:       |                  28b5                 jal     d000d662 <mont_mul>
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d5e8:       |                  17ca8513             addi    a0,s5,380
d000d5ec:       |                  17ca0593             addi    a1,s4,380
d000d5f0:       |                  05f00613             li      a2,95
d000d5f4:       |                  05f00693             li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d5f8:       |              /-> 4198                 lw      a4,0(a1)
d000d5fa:       |              |   411c                 lw      a5,0(a0)
d000d5fc:       |           /--|-- 00f71863             bne     a4,a5,d000d60c <sigverify_mod_exp_ibex+0x1c6>
d000d600:       |           |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d602:       |           |  |   1571                 addi    a0,a0,-4
d000d604:       |           |  |   15f1                 addi    a1,a1,-4
d000d606:       |           |  \-- fed679e3             bgeu    a2,a3,d000d5f8 <sigverify_mod_exp_ibex+0x1b2>
d000d60a:       |           |  /-- a019                 j       d000d610 <sigverify_mod_exp_ibex+0x1ca>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:194

  // We need this check because the result of `mont_mul` is not guaranteed to be
  // the least non-negative residue. We need to subtract the modulus n from
  // `result` at most once because R/2 < n < R.
  if (greater_equal_modulus(key, result)) {
d000d60c:       |        /--\--|-X 02e7f963             bgeu    a5,a4,d000d63e <sigverify_mod_exp_ibex+0x1f8>
d000d610:       |        |     \-> 4501                 li      a0,0
d000d612:       |        |         4601                 li      a2,0
d000d614:       |        |         18000593             li      a1,384
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d618:       |        |     /-> 00aa06b3             add     a3,s4,a0
d000d61c:       |        |     |   4298                 lw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d61e:       |        |     |   00aa87b3             add     a5,s5,a0
d000d622:       |        |     |   439c                 lw      a5,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d624:       |        |     |   40c704b3             sub     s1,a4,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d628:       |        |     |   00c73633             sltu    a2,a4,a2
d000d62c:       |        |     |   00f4b733             sltu    a4,s1,a5
d000d630:       |        |     |   963a                 add     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d632:       |        |     |   40f48733             sub     a4,s1,a5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d636:       |        |     |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d638:       |        |     |   c298                 sw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d63a:       |        |     \-- fcb51fe3             bne     a0,a1,d000d618 <sigverify_mod_exp_ibex+0x1d2>
d000d63e:       |        \-------> 73900513             li      a0,1849
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:199
    subtract_modulus(key, result);
  }

  return kErrorOk;
}
d000d642:       \----------------> 18412a83             lw      s5,388(sp)
d000d646:                          18812a03             lw      s4,392(sp)
d000d64a:                          18c12983             lw      s3,396(sp)
d000d64e:                          19012903             lw      s2,400(sp)
d000d652:                          19412483             lw      s1,404(sp)
d000d656:                          19812403             lw      s0,408(sp)
d000d65a:                          19c12083             lw      ra,412(sp)
d000d65e:                          611d                 addi    sp,sp,416
d000d660:                          8082                 ret

d000d662 <mont_mul>:
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:90
                     sigverify_rsa_buffer_t *result) {
d000d662:                 7179                  addi    sp,sp,-48
d000d664:                 d606                  sw      ra,44(sp)
d000d666:                 d422                  sw      s0,40(sp)
d000d668:                 d226                  sw      s1,36(sp)
d000d66a:                 d04a                  sw      s2,32(sp)
d000d66c:                 ce4e                  sw      s3,28(sp)
d000d66e:                 cc52                  sw      s4,24(sp)
d000d670:                 ca56                  sw      s5,20(sp)
d000d672:                 c85a                  sw      s6,16(sp)
d000d674:                 c65e                  sw      s7,12(sp)
d000d676:                 8bb6                  mv      s7,a3
d000d678:                 89b2                  mv      s3,a2
d000d67a:                 892e                  mv      s2,a1
d000d67c:                 8b2a                  mv      s6,a0
d000d67e:                 5a7d                  li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:91
  memset(result->data, 0, sizeof(result->data));
d000d680:                 18000613              li      a2,384
d000d684:                 18000a93              li      s5,384
d000d688:                 8536                  mv      a0,a3
d000d68a:                 4581                  li      a1,0
d000d68c:                 669000ef              jal     ra,d000e4f4 <memset>
d000d690:                 4881                  li      a7,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d692:                 00498313              addi    t1,s3,4
d000d696:                 004b0e93              addi    t4,s6,4
d000d69a:                 17800293              li      t0,376
d000d69e:                 06000813              li      a6,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d6a2:       /-------> 00289513              slli    a0,a7,0x2
d000d6a6:       |         00a90f33              add     t5,s2,a0
d000d6aa:       |         000f2503              lw      a0,0(t5)
d000d6ae:       |         0009a583              lw      a1,0(s3)
d000d6b2:       |         000ba483              lw      s1,0(s7)
d000d6b6:       |         4701                  li      a4,0
d000d6b8:       |         02a5b3b3              mulhu   t2,a1,a0
d000d6bc:       |         02a585b3              mul     a1,a1,a0
d000d6c0:       |         94ae                  add     s1,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d6c2:       |         180b2683              lw      a3,384(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d6c6:       |         000b2e03              lw      t3,0(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d6ca:       |         00b4b5b3              sltu    a1,s1,a1
d000d6ce:       |         959e                  add     a1,a1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d6d0:       |         02968fb3              mul     t6,a3,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d6d4:       |         03cf83b3              mul     t2,t6,t3
d000d6d8:       |         0144f4b3              and     s1,s1,s4
d000d6dc:       |         949e                  add     s1,s1,t2
d000d6de:       |         0074b3b3              sltu    t2,s1,t2
d000d6e2:       |         03cfb4b3              mulhu   s1,t6,t3
d000d6e6:       |         949e                  add     s1,s1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d6e8:       |  /----> 00e30633              add     a2,t1,a4
d000d6ec:       |  |      4210                  lw      a2,0(a2)
d000d6ee:       |  |      00eb8433              add     s0,s7,a4
d000d6f2:       |  |      405c                  lw      a5,4(s0)
d000d6f4:       |  |      02a636b3              mulhu   a3,a2,a0
d000d6f8:       |  |      02a60533              mul     a0,a2,a0
d000d6fc:       |  |      00f58633              add     a2,a1,a5
d000d700:       |  |      00b635b3              sltu    a1,a2,a1
d000d704:       |  |      95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d706:       |  |      00ee86b3              add     a3,t4,a4
d000d70a:       |  |      4294                  lw      a3,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d70c:       |  |      9532                  add     a0,a0,a2
d000d70e:       |  |      00c53633              sltu    a2,a0,a2
d000d712:       |  |      95b2                  add     a1,a1,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d714:       |  |      03f6b633              mulhu   a2,a3,t6
d000d718:       |  |      03f686b3              mul     a3,a3,t6
d000d71c:       |  |      01457533              and     a0,a0,s4
d000d720:       |  |      009687b3              add     a5,a3,s1
d000d724:       |  |      00d7b6b3              sltu    a3,a5,a3
d000d728:       |  |      9636                  add     a2,a2,a3
d000d72a:       |  |      953e                  add     a0,a0,a5
d000d72c:       |  |      00f536b3              sltu    a3,a0,a5
d000d730:       |  |      00d604b3              add     s1,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:113
      result->data[j - 1] = (uint32_t)acc1;
d000d734:       |  |      c008                  sw      a0,0(s0)
d000d736:       |  |  /-- 00570663              beq     a4,t0,d000d742 <mont_mul+0xe0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d73a:       |  |  |   000f2503              lw      a0,0(t5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:110
    for (size_t j = 1; j < ARRAYSIZE(result->data); ++j) {
d000d73e:       |  |  |   0711                  addi    a4,a4,4
d000d740:       |  \--|-- b765                  j       d000d6e8 <mont_mul+0x86>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:115
    acc0 = (acc0 >> 32) + (acc1 >> 32);
d000d742:       |     \-> 00b48533              add     a0,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:116
    result->data[ARRAYSIZE(result->data) - 1] = (uint32_t)acc0;
d000d746:       |         16abae23              sw      a0,380(s7)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:127
    if (acc0 >> 32) {
d000d74a:       |  /----- 02957763              bgeu    a0,s1,d000d778 <mont_mul+0x116>
d000d74e:       |  |      4501                  li      a0,0
d000d750:       |  |      4581                  li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d752:       |  |  /-> 00ab8633              add     a2,s7,a0
d000d756:       |  |  |   4214                  lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d758:       |  |  |   00ab0733              add     a4,s6,a0
d000d75c:       |  |  |   4318                  lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d75e:       |  |  |   40b687b3              sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d762:       |  |  |   00b6b5b3              sltu    a1,a3,a1
d000d766:       |  |  |   00e7b6b3              sltu    a3,a5,a4
d000d76a:       |  |  |   95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d76c:       |  |  |   40e786b3              sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d770:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d772:       |  |  |   c214                  sw      a3,0(a2)
d000d774:       |  |  \-- fd551fe3              bne     a0,s5,d000d752 <mont_mul+0xf0>
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d778:       |  \----> 0885                  addi    a7,a7,1
d000d77a:       \-------- f30894e3              bne     a7,a6,d000d6a2 <mont_mul+0x40>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:131
}
d000d77e:                 4bb2                  lw      s7,12(sp)
d000d780:                 4b42                  lw      s6,16(sp)
d000d782:                 4ad2                  lw      s5,20(sp)
d000d784:                 4a62                  lw      s4,24(sp)
d000d786:                 49f2                  lw      s3,28(sp)
d000d788:                 5902                  lw      s2,32(sp)
d000d78a:                 5492                  lw      s1,36(sp)
d000d78c:                 5422                  lw      s0,40(sp)
d000d78e:                 50b2                  lw      ra,44(sp)
d000d790:                 6145                  addi    sp,sp,48
d000d792:                 8082                  ret

d000d794 <run_otbn_rsa_3072_modexp>:
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:69
}

rom_error_t run_otbn_rsa_3072_modexp(
    const sigverify_rsa_key_t *public_key,
    const sigverify_rsa_buffer_t *signature,
    sigverify_rsa_buffer_t *recovered_message) {
d000d794:                 7139                  addi    sp,sp,-64
d000d796:                 de06                  sw      ra,60(sp)
d000d798:                 dc22                  sw      s0,56(sp)
d000d79a:                 da26                  sw      s1,52(sp)
d000d79c:                 d84a                  sw      s2,48(sp)
d000d79e:                 d64e                  sw      s3,44(sp)
d000d7a0:                 d452                  sw      s4,40(sp)
d000d7a2:                 8932                  mv      s2,a2
d000d7a4:                 8a2e                  mv      s4,a1
d000d7a6:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:73
  otbn_t otbn;

  // Initialize OTBN and load the RSA app.
  otbn_init(&otbn);
d000d7a8:                 0808                  addi    a0,sp,16
d000d7aa:                 2ab1                  jal     d000d906 <otbn_init>
d000d7ac:                 00002517              auipc   a0,0x2
d000d7b0:                 f9c50513              addi    a0,a0,-100 # d000f748 <kOtbnAppRsa>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
  HARDENED_RETURN_IF_ERROR(otbn_load_app(&otbn, kOtbnAppRsa));
d000d7b4:                 454c                  lw      a1,12(a0)
d000d7b6:                 4510                  lw      a2,8(a0)
d000d7b8:                 4154                  lw      a3,4(a0)
d000d7ba:                 4108                  lw      a0,0(a0)
d000d7bc:                 c62e                  sw      a1,12(sp)
d000d7be:                 c432                  sw      a2,8(sp)
d000d7c0:                 c236                  sw      a3,4(sp)
d000d7c2:                 c02a                  sw      a0,0(sp)
d000d7c4:                 0808                  addi    a0,sp,16
d000d7c6:                 858a                  mv      a1,sp
d000d7c8:                 2aa9                  jal     d000d922 <otbn_load_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7ca:                 85aa                  mv      a1,a0
d000d7cc:                 73900413              li      s0,1849
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
d000d7d0:       /-------- 0e859263              bne     a1,s0,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d7d4:       |     /-- 00850663              beq     a0,s0,d000d7e0 <run_otbn_rsa_3072_modexp+0x4c>
d000d7d8:       |     |   0000                  unimp
d000d7da:       |     |   0000                  unimp
d000d7dc:       |     |   0000                  unimp
d000d7de:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d7e0:       |     \-> 00000693              li      a3,0
d000d7e4:       |         0808                  addi    a0,sp,16
d000d7e6:       |         06000593              li      a1,96
d000d7ea:       |         8626                  mv      a2,s1
d000d7ec:       |         2cbd                  jal     d000da6a <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7ee:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:77

  // Set the modulus (n).
  HARDENED_RETURN_IF_ERROR(
d000d7f0:       +-------- 0c859263              bne     a1,s0,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d7f4:       |         73900993              li      s3,1849
d000d7f8:       |     /-- 01350663              beq     a0,s3,d000d804 <run_otbn_rsa_3072_modexp+0x70>
d000d7fc:       |     |   0000                  unimp
d000d7fe:       |     |   0000                  unimp
d000d800:       |     |   0000                  unimp
d000d802:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d804:       |     \-> 32000693              li      a3,800
d000d808:       |         0808                  addi    a0,sp,16
d000d80a:       |         06000593              li      a1,96
d000d80e:       |         8652                  mv      a2,s4
d000d810:       |         2ca9                  jal     d000da6a <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d812:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:81
      write_rsa_3072_int_to_otbn(&otbn, &public_key->n, kOtbnVarRsaInMod));

  // Set the signature.
  HARDENED_RETURN_IF_ERROR(
d000d814:       +-------- 0b359063              bne     a1,s3,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d818:       |     /-- 01350663              beq     a0,s3,d000d824 <run_otbn_rsa_3072_modexp+0x90>
d000d81c:       |     |   0000                  unimp
d000d81e:       |     |   0000                  unimp
d000d820:       |     |   0000                  unimp
d000d822:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
      write_rsa_3072_int_to_otbn(&otbn, signature, kOtbnVarRsaInBuf));

  // Set the precomputed constant m0_inv.
  HARDENED_RETURN_IF_ERROR(otbn_copy_data_to_otbn(
d000d824:       |     \-> 18048613              addi    a2,s1,384
d000d828:       |         18000693              li      a3,384
d000d82c:       |         0808                  addi    a0,sp,16
d000d82e:       |         45a1                  li      a1,8
d000d830:       |         2c2d                  jal     d000da6a <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d832:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
d000d834:       +-------- 09359063              bne     a1,s3,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d838:       |         73900413              li      s0,1849
d000d83c:       |     /-- 00850663              beq     a0,s0,d000d848 <run_otbn_rsa_3072_modexp+0xb4>
d000d840:       |     |   0000                  unimp
d000d842:       |     |   0000                  unimp
d000d844:       |     |   0000                  unimp
d000d846:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
      &otbn, kOtbnWideWordNumWords, public_key->n0_inv, kOtbnVarRsaM0Inv));

  // Start the OTBN routine.
  HARDENED_RETURN_IF_ERROR(otbn_execute_app(&otbn));
d000d848:       |     \-> 0808                  addi    a0,sp,16
d000d84a:       |         22d5                  jal     d000da2e <otbn_execute_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d84c:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
d000d84e:       +-------- 06859363              bne     a1,s0,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d852:       |     /-- 00850663              beq     a0,s0,d000d85e <run_otbn_rsa_3072_modexp+0xca>
d000d856:       |     |   0000                  unimp
d000d858:       |     |   0000                  unimp
d000d85a:       |     |   0000                  unimp
d000d85c:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:94

  // Check that the instruction count falls within the expected range. If the
  // instruction count falls outside this range, it indicates that there was a
  // fault injection attack of some kind during OTBN execution.
  uint32_t count = otbn_instruction_count_get();
d000d85e:       |     \-> 2621                  jal     d000db66 <otbn_instruction_count_get>
d000d860:       |         85aa                  mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d862:       |         862a                  mv      a2,a0
d000d864:       |         06425537              lui     a0,0x6425
d000d868:       |         0002c6b7              lui     a3,0x2c
d000d86c:       |         39b68693              addi    a3,a3,923 # 2c39b <_stack_size+0x2839b>
d000d870:       |         e0d50513              addi    a0,a0,-499 # 6424e0d <_rom_ext_virtual_size+0x63a4e0d>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
  if (launder32(count) < kModExpOtbnInsnCountMin ||
d000d874:       +-------- 04d66063              bltu    a2,a3,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d878:       |         86ae                  mv      a3,a1
d000d87a:       |         00030637              lui     a2,0x30
d000d87e:       |         6fd60613              addi    a2,a2,1789 # 306fd <_stack_size+0x2c6fd>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
d000d882:       +-------- 02d66963              bltu    a2,a3,d000d8b4 <run_otbn_rsa_3072_modexp+0x120>
d000d886:       |         0002c537              lui     a0,0x2c
d000d88a:       |         39b50513              addi    a0,a0,923 # 2c39b <_stack_size+0x2839b>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:99
      launder32(count) > kModExpOtbnInsnCountMax) {
    return kErrorOtbnBadInsnCount;
  }
  HARDENED_CHECK_GE(count, kModExpOtbnInsnCountMin);
d000d88e:       |     /-- 00a5f663              bgeu    a1,a0,d000d89a <run_otbn_rsa_3072_modexp+0x106>
d000d892:       |     |   0000                  unimp
d000d894:       |     |   0000                  unimp
d000d896:       |     |   0000                  unimp
d000d898:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:100
  HARDENED_CHECK_LE(count, kModExpOtbnInsnCountMax);
d000d89a:       |  /--\-X 00b67663              bgeu    a2,a1,d000d8a6 <run_otbn_rsa_3072_modexp+0x112>
d000d89e:       |  |      0000                  unimp
d000d8a0:       |  |      0000                  unimp
d000d8a2:       |  |      0000                  unimp
d000d8a4:       |  |      0000                  unimp
read_rsa_3072_int_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:63
  return otbn_copy_data_from_otbn(otbn, kSigVerifyRsaNumWords, src, dst->data);
d000d8a6:       |  \----> 4a000613              li      a2,1184
d000d8aa:       |         0808                  addi    a0,sp,16
d000d8ac:       |         06000593              li      a1,96
d000d8b0:       |         86ca                  mv      a3,s2
d000d8b2:       |         22c9                  jal     d000da74 <otbn_copy_data_from_otbn>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:105

  // Read recovered message out of OTBN dmem.
  return read_rsa_3072_int_from_otbn(&otbn, kOtbnVarRsaOutBuf,
                                     recovered_message);
}
d000d8b4:       \-------> 5a22                  lw      s4,40(sp)
d000d8b6:                 59b2                  lw      s3,44(sp)
d000d8b8:                 5942                  lw      s2,48(sp)
d000d8ba:                 54d2                  lw      s1,52(sp)
d000d8bc:                 5462                  lw      s0,56(sp)
d000d8be:                 50f2                  lw      ra,60(sp)
d000d8c0:                 6121                  addi    sp,sp,64
d000d8c2:                 8082                  ret

d000d8c4 <sigverify_mod_exp_otbn>:
sigverify_mod_exp_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:109

rom_error_t sigverify_mod_exp_otbn(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000d8c4:           1141                        addi    sp,sp,-16
d000d8c6:           c606                        sw      ra,12(sp)
d000d8c8:           c422                        sw      s0,8(sp)
d000d8ca:           c226                        sw      s1,4(sp)
d000d8cc:           c04a                        sw      s2,0(sp)
d000d8ce:           8932                        mv      s2,a2
d000d8d0:           84ae                        mv      s1,a1
d000d8d2:           842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:112
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (memrcmp(key->n.data, sig->data, kSigVerifyRsaNumBytes) <= 0) {
d000d8d4:           18000613            li      a2,384
d000d8d8:           47f000ef            jal     ra,d000e556 <memrcmp>
d000d8dc:       /-- 00a05b63            blez    a0,d000d8f2 <sigverify_mod_exp_otbn+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:117
    return kErrorSigverifyBadSignature;
  }

  // Run OTBN application.
  return run_otbn_rsa_3072_modexp(key, sig, result);
d000d8e0:       |   8522                        mv      a0,s0
d000d8e2:       |   85a6                        mv      a1,s1
d000d8e4:       |   864a                        mv      a2,s2
d000d8e6:       |   4902                        lw      s2,0(sp)
d000d8e8:       |   4492                        lw      s1,4(sp)
d000d8ea:       |   4422                        lw      s0,8(sp)
d000d8ec:       |   40b2                        lw      ra,12(sp)
d000d8ee:       |   0141                        addi    sp,sp,16
d000d8f0:       |   b555                        j       d000d794 <run_otbn_rsa_3072_modexp>
d000d8f2:       \-> 03535537            lui     a0,0x3535
d000d8f6:           60350513            addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34b5603>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:118
}
d000d8fa:           4902                        lw      s2,0(sp)
d000d8fc:           4492                        lw      s1,4(sp)
d000d8fe:           4422                        lw      s0,8(sp)
d000d900:           40b2                        lw      ra,12(sp)
d000d902:           0141                        addi    sp,sp,16
d000d904:           8082                        ret

d000d906 <otbn_init>:
otbn_init():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:17
#include "sw/device/silicon_creator/lib/drivers/otbn.h"

#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void otbn_init(otbn_t *ctx) {
  *ctx = (otbn_t){
d000d906:       00052023                sw      zero,0(a0)
d000d90a:       00052223                sw      zero,4(a0)
d000d90e:       00052423                sw      zero,8(a0)
d000d912:       00052623                sw      zero,12(a0)
d000d916:       1d400593                li      a1,468
d000d91a:       c90c                    sw      a1,16(a0)
d000d91c:       00052a23                sw      zero,20(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:22
      .app = {0},
      .app_is_loaded = kHardenedBoolFalse,
      .error_bits = kOtbnErrBitsNoError,
  };
}
d000d920:       8082                    ret

d000d922 <otbn_load_app>:
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:47
    return false;
  }
  return true;
}

rom_error_t otbn_load_app(otbn_t *ctx, const otbn_app_t app) {
d000d922:                    7179                       addi    sp,sp,-48
d000d924:                    d606                       sw      ra,44(sp)
d000d926:                    d422                       sw      s0,40(sp)
d000d928:                    d226                       sw      s1,36(sp)
d000d92a:                    d04a                       sw      s2,32(sp)
d000d92c:                    ce4e                       sw      s3,28(sp)
d000d92e:                    cc52                       sw      s4,24(sp)
d000d930:                    ca56                       sw      s5,20(sp)
d000d932:                    c85a                       sw      s6,16(sp)
d000d934:                    c65e                       sw      s7,12(sp)
d000d936:                    842e                       mv      s0,a1
check_app_address_ranges():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:37
  if (app->imem_end <= app->imem_start) {
d000d938:                    41cc                       lw      a1,4(a1)
d000d93a:                    4010                       lw      a2,0(s0)
d000d93c:                    892a                       mv      s2,a0
d000d93e:                    01425537           lui     a0,0x1425
d000d942:                    e0350493           addi    s1,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13a4e03>
d000d946:       /----------- 0cb67863           bgeu    a2,a1,d000da16 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:41
  if (app->dmem_data_end < app->dmem_data_start) {
d000d94a:       |            4448                       lw      a0,12(s0)
d000d94c:       |            440c                       lw      a1,8(s0)
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:48
  if (!check_app_address_ranges(&app)) {
d000d94e:       +----------- 0cb56463           bltu    a0,a1,d000da16 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:53
    return kErrorOtbnInvalidArgument;
  }

  // If OTBN is busy, wait for it to be done.
  HARDENED_RETURN_IF_ERROR(otbn_busy_wait_for_done());
d000d952:       |            222d                       jal     d000da7c <otbn_busy_wait_for_done>
d000d954:       |            84aa                       mv      s1,a0
d000d956:       |            73900a93           li      s5,1849
d000d95a:       +----------- 0b551e63           bne     a0,s5,d000da16 <otbn_load_app+0xf4>
d000d95e:       |        /-- 01548663           beq     s1,s5,d000d96a <otbn_load_app+0x48>
d000d962:       |        |   0000                       unimp
d000d964:       |        |   0000                       unimp
d000d966:       |        |   0000                       unimp
d000d968:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55

  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d96a:       |        \-> 00442b03           lw      s6,4(s0)
d000d96e:       |            00042b83           lw      s7,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:56
  const size_t data_num_words = app.dmem_data_end - app.dmem_data_start;
d000d972:       |            00c42983           lw      s3,12(s0)
d000d976:       |            00842a03           lw      s4,8(s0)
d000d97a:       |            1d400513           li      a0,468
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:58

  ctx->app_is_loaded = kHardenedBoolFalse;
d000d97e:       |            00a92823           sw      a0,16(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:60

  HARDENED_RETURN_IF_ERROR(otbn_imem_sec_wipe());
d000d982:       |            22f5                       jal     d000db6e <otbn_imem_sec_wipe>
d000d984:       |            84aa                       mv      s1,a0
d000d986:       +----------- 09551863           bne     a0,s5,d000da16 <otbn_load_app+0xf4>
d000d98a:       |            73900a93           li      s5,1849
d000d98e:       |        /-- 01548663           beq     s1,s5,d000d99a <otbn_load_app+0x78>
d000d992:       |        |   0000                       unimp
d000d994:       |        |   0000                       unimp
d000d996:       |        |   0000                       unimp
d000d998:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d99a:       |        \-> 400c                       lw      a1,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55
  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d99c:       |            417b0533           sub     a0,s6,s7
d000d9a0:       |            40255613           srai    a2,a0,0x2
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d9a4:       |            4501                       li      a0,0
d000d9a6:       |            2ad1                       jal     d000db7a <otbn_imem_write>
d000d9a8:       |            84aa                       mv      s1,a0
d000d9aa:       +----------- 07551663           bne     a0,s5,d000da16 <otbn_load_app+0xf4>
d000d9ae:       |        /-- 01548663           beq     s1,s5,d000d9ba <otbn_load_app+0x98>
d000d9b2:       |        |   0000                       unimp
d000d9b4:       |        |   0000                       unimp
d000d9b6:       |        |   0000                       unimp
d000d9b8:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63

  HARDENED_RETURN_IF_ERROR(otbn_dmem_sec_wipe());
d000d9ba:       |        \-> 2cbd                       jal     d000dc38 <otbn_dmem_sec_wipe>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d9bc:       |            85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63
d000d9be:       |  /-------- 05559b63           bne     a1,s5,d000da14 <otbn_load_app+0xf2>
d000d9c2:       |  |         41498633           sub     a2,s3,s4
d000d9c6:       |  |         73900493           li      s1,1849
d000d9ca:       |  |     /-- 00950663           beq     a0,s1,d000d9d6 <otbn_load_app+0xb4>
d000d9ce:       |  |     |   0000                       unimp
d000d9d0:       |  |     |   0000                       unimp
d000d9d2:       |  |     |   0000                       unimp
d000d9d4:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:64
  if (data_num_words > 0) {
d000d9d6:       |  |  /--\-X c205                       beqz    a2,d000d9f6 <otbn_load_app+0xd4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
    HARDENED_RETURN_IF_ERROR(
d000d9d8:       |  |  |      440c                       lw      a1,8(s0)
d000d9da:       |  |  |      8609                       srai    a2,a2,0x2
d000d9dc:       |  |  |      4501                       li      a0,0
d000d9de:       |  |  |      24a5                       jal     d000dc46 <otbn_dmem_write>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d9e0:       |  |  |      85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
d000d9e2:       |  +--|----- 02959963           bne     a1,s1,d000da14 <otbn_load_app+0xf2>
d000d9e6:       |  |  |      73900593           li      a1,1849
d000d9ea:       |  |  +----- 00b50663           beq     a0,a1,d000d9f6 <otbn_load_app+0xd4>
d000d9ee:       |  |  |      0000                       unimp
d000d9f0:       |  |  |      0000                       unimp
d000d9f2:       |  |  |      0000                       unimp
d000d9f4:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:69
        otbn_dmem_write(0, app.dmem_data_start, data_num_words));
  }

  ctx->app = app;
d000d9f6:       |  |  \----> 4448                       lw      a0,12(s0)
d000d9f8:       |  |         00a92623           sw      a0,12(s2)
d000d9fc:       |  |         4408                       lw      a0,8(s0)
d000d9fe:       |  |         00a92423           sw      a0,8(s2)
d000da02:       |  |         4048                       lw      a0,4(s0)
d000da04:       |  |         00a92223           sw      a0,4(s2)
d000da08:       |  |         4008                       lw      a0,0(s0)
d000da0a:       |  |         00a92023           sw      a0,0(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:70
  ctx->app_is_loaded = kHardenedBoolTrue;
d000da0e:       |  |         00992823           sw      s1,16(s2)
d000da12:       +--|-------- a011                       j       d000da16 <otbn_load_app+0xf4>
d000da14:       |  \-------> 84aa                       mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:72
  return kErrorOk;
}
d000da16:       \----------> 8526                       mv      a0,s1
d000da18:                    4bb2                       lw      s7,12(sp)
d000da1a:                    4b42                       lw      s6,16(sp)
d000da1c:                    4ad2                       lw      s5,20(sp)
d000da1e:                    4a62                       lw      s4,24(sp)
d000da20:                    49f2                       lw      s3,28(sp)
d000da22:                    5902                       lw      s2,32(sp)
d000da24:                    5492                       lw      s1,36(sp)
d000da26:                    5422                       lw      s0,40(sp)
d000da28:                    50b2                       lw      ra,44(sp)
d000da2a:                    6145                       addi    sp,sp,48
d000da2c:                    8082                       ret

d000da2e <otbn_execute_app>:
otbn_execute_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:74

rom_error_t otbn_execute_app(otbn_t *ctx) {
d000da2e:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:75
  if (launder32(ctx->app_is_loaded) != kHardenedBoolTrue) {
d000da30:              c606                     sw      ra,12(sp)
d000da32:              4910                     lw      a2,16(a0)
d000da34:              73900593                 li      a1,1849
d000da38:       /----- 02b61263                 bne     a2,a1,d000da5c <otbn_execute_app+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:78
    return kErrorOtbnInvalidArgument;
  }
  HARDENED_CHECK_EQ(ctx->app_is_loaded, kHardenedBoolTrue);
d000da3c:       |      4908                     lw      a0,16(a0)
d000da3e:       |  /-- 00b50663                 beq     a0,a1,d000da4a <otbn_execute_app+0x1c>
d000da42:       |  |   0000                     unimp
d000da44:       |  |   0000                     unimp
d000da46:       |  |   0000                     unimp
d000da48:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:80

  rom_error_t err = otbn_execute();
d000da4a:       |  \-> 2051                     jal     d000dace <otbn_execute>
d000da4c:       |      0fff2597                 auipc   a1,0xfff2
d000da50:       |      62858593                 addi    a1,a1,1576 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:81
  SEC_MMIO_WRITE_INCREMENT(kOtbnSecMmioExecute);
d000da54:       |      4590                     lw      a2,8(a1)
d000da56:       |      0605                     addi    a2,a2,1
d000da58:       |      c590                     sw      a2,8(a1)
d000da5a:       |  /-- a029                     j       d000da64 <otbn_execute_app+0x36>
d000da5c:       \--|-> 01425537                 lui     a0,0x1425
d000da60:          |   e0350513                 addi    a0,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13a4e03>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:83
  return err;
}
d000da64:          \-> 40b2                     lw      ra,12(sp)
d000da66:              0141                     addi    sp,sp,16
d000da68:              8082                     ret

d000da6a <otbn_copy_data_to_otbn>:
otbn_copy_data_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:86

rom_error_t otbn_copy_data_to_otbn(otbn_t *ctx, size_t len, const uint32_t *src,
                                   otbn_addr_t dest) {
d000da6a:       8536                    mv      a0,a3
d000da6c:       86ae                    mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:87
  return otbn_dmem_write(dest, src, len);
d000da6e:       85b2                    mv      a1,a2
d000da70:       8636                    mv      a2,a3
d000da72:       aad1                    j       d000dc46 <otbn_dmem_write>

d000da74 <otbn_copy_data_from_otbn>:
otbn_copy_data_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:91
}

rom_error_t otbn_copy_data_from_otbn(otbn_t *ctx, size_t len_bytes,
                                     otbn_addr_t src, uint32_t *dest) {
d000da74:       8532                    mv      a0,a2
d000da76:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:92
  return otbn_dmem_read(src, dest, len_bytes);
d000da78:       85b6                    mv      a1,a3
d000da7a:       a41d                    j       d000dca0 <otbn_dmem_read>

d000da7c <otbn_busy_wait_for_done>:
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:62
    return kErrorOtbnBadOffsetLen;
  }
  return kErrorOk;
}

rom_error_t otbn_busy_wait_for_done(void) {
d000da7c:              557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:64
  uint32_t status = launder32(UINT32_MAX);
  rom_error_t res = launder32(kErrorOk ^ status);
d000da7e:              73954513                 xori    a0,a0,1849
d000da82:              c11305b7                 lui     a1,0xc1130
d000da86:              0ff00613                 li      a2,255
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000da8a:          /-> 4d94                     lw      a3,24(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000da8c:          |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
  do {
    status = abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET);
  } while (launder32(status) != kOtbnStatusIdle &&
d000da8e:       /--|-- c701                     beqz    a4,d000da96 <otbn_busy_wait_for_done+0x1a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000da90:       |  |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
d000da92:       |  \-- fec71ce3                 bne     a4,a2,d000da8a <otbn_busy_wait_for_done+0xe>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:69
           launder32(status) != kOtbnStatusLocked);
  res ^= ~status;
d000da96:       \----> 8d35                     xor     a0,a0,a3
d000da98:              fff54513                 not     a0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000da9c:              862a                     mv      a2,a0
d000da9e:              73900593                 li      a1,1849
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:70
  if (launder32(res) == kErrorOk) {
d000daa2:       /----- 02b61163                 bne     a2,a1,d000dac4 <otbn_busy_wait_for_done+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:71
    HARDENED_CHECK_EQ(res, kErrorOk);
d000daa6:       |  /-- 00b50663                 beq     a0,a1,d000dab2 <otbn_busy_wait_for_done+0x36>
d000daaa:       |  |   0000                     unimp
d000daac:       |  |   0000                     unimp
d000daae:       |  |   0000                     unimp
d000dab0:       |  |   0000                     unimp
d000dab2:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000dab6:       |      4d8c                     lw      a1,24(a1)
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:72
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000dab8:       |  /-- c589                     beqz    a1,d000dac2 <otbn_busy_wait_for_done+0x46>
d000daba:       |  |   0000                     unimp
d000dabc:       |  |   0000                     unimp
d000dabe:       |  |   0000                     unimp
d000dac0:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:77
                      kOtbnStatusIdle);
    return res;
  }
  return kErrorOtbnUnavailable;
}
d000dac2:       |  \-> 8082                     ret
d000dac4:       \----> 07425537                 lui     a0,0x7425
d000dac8:              e0d50513                 addi    a0,a0,-499 # 7424e0d <_rom_ext_virtual_size+0x73a4e0d>
d000dacc:              8082                     ret

d000dace <otbn_execute>:
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:151
    return res;
  }
  return error;
}

rom_error_t otbn_execute(void) {
d000dace:       1141                    addi    sp,sp,-16
d000dad0:       c606                    sw      ra,12(sp)
d000dad2:       c1130537                lui     a0,0xc1130
d000dad6:       0551                    addi    a0,a0,20
otbn_set_ctrl_software_errs_fatal():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:221
    new_ctrl = 1;
  } else {
    new_ctrl = 0;
  }

  sec_mmio_write32(kBase + OTBN_CTRL_REG_OFFSET, new_ctrl);
d000dad8:       4585                    li      a1,1
d000dada:       03d000ef                jal     ra,d000e316 <sec_mmio_write32>
d000dade:       03425537                lui     a0,0x3425
d000dae2:       e0d50593                addi    a1,a0,-499 # 3424e0d <_rom_ext_virtual_size+0x33a4e0d>
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:153
  return otbn_cmd_run(kOtbnCmdExecute, kErrorOtbnExecutionFailed);
d000dae6:       0d800513                li      a0,216
d000daea:       40b2                    lw      ra,12(sp)
d000daec:       0141                    addi    sp,sp,16
d000daee:       a009                    j       d000daf0 <otbn_cmd_run>

d000daf0 <otbn_cmd_run>:
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:112
static rom_error_t otbn_cmd_run(otbn_cmd_t cmd, rom_error_t error) {
d000daf0:              882e                     mv      a6,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000daf2:              4701                     li      a4,0
d000daf4:              c1130637                 lui     a2,0xc1130
d000daf8:              4685                     li      a3,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dafa:              c214                     sw      a3,0(a2)
d000dafc:              ca08                     sw      a0,16(a2)
d000dafe:              80000537                 lui     a0,0x80000
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000db02:          /-- 00d71663                 bne     a4,a3,d000db0e <otbn_cmd_run+0x1e>
d000db06:          |   4581                     li      a1,0
d000db08:          |   73950513                 addi    a0,a0,1849 # 80000739 <_stack_end+0x9ffe0739>
d000db0c:       /--|-- a811                     j       d000db20 <otbn_cmd_run+0x30>
d000db0e:       |  \-> 73950513                 addi    a0,a0,1849
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000db12:       |  /-> 420c                     lw      a1,0(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
    res ^= bitfield_bit32_read(reg, OTBN_INTR_COMMON_DONE_BIT) << kResDoneBit;
d000db14:       |  |   01f59793                 slli    a5,a1,0x1f
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000db18:       |  |   872e                     mv      a4,a1
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
d000db1a:       |  |   8d3d                     xor     a0,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000db1c:       |  \-- fed71be3                 bne     a4,a3,d000db12 <otbn_cmd_run+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:130
  HARDENED_CHECK_EQ(reg, kIntrStateDone);
d000db20:       \--/-X 00d58663                 beq     a1,a3,d000db2c <otbn_cmd_run+0x3c>
d000db24:          |   0000                     unimp
d000db26:          |   0000                     unimp
d000db28:          |   0000                     unimp
d000db2a:          |   0000                     unimp
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000db2c:          \-> c214                     sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000db2e:              4e4c                     lw      a1,28(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:135
  res ^= err_bits;
d000db30:              8d2d                     xor     a0,a0,a1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000db32:              4e10                     lw      a2,24(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000db34:              85aa                     mv      a1,a0
d000db36:              73900693                 li      a3,1849
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:142
  if (launder32(res) == kErrorOk && launder32(status) == kOtbnStatusIdle) {
d000db3a:       /----- 02d59463                 bne     a1,a3,d000db62 <otbn_cmd_run+0x72>
d000db3e:       +----- e215                     bnez    a2,d000db62 <otbn_cmd_run+0x72>
d000db40:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:143
    HARDENED_CHECK_EQ(res, kErrorOk);
d000db44:       |  /-- 00b50663                 beq     a0,a1,d000db50 <otbn_cmd_run+0x60>
d000db48:       |  |   0000                     unimp
d000db4a:       |  |   0000                     unimp
d000db4c:       |  |   0000                     unimp
d000db4e:       |  |   0000                     unimp
d000db50:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000db54:       |      4d8c                     lw      a1,24(a1)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:144
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000db56:       |  /-- c589                     beqz    a1,d000db60 <otbn_cmd_run+0x70>
d000db58:       |  |   0000                     unimp
d000db5a:       |  |   0000                     unimp
d000db5c:       |  |   0000                     unimp
d000db5e:       |  |   0000                     unimp
d000db60:       |  \-> 882a                     mv      a6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:149
}
d000db62:       \----> 8542                     mv      a0,a6
d000db64:              8082                     ret

d000db66 <otbn_instruction_count_get>:
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:160
uint32_t otbn_instruction_count_get(void) {
d000db66:       c1130537                lui     a0,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000db6a:       5148                    lw      a0,36(a0)
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:161
  return abs_mmio_read32(kBase + OTBN_INSN_CNT_REG_OFFSET);
d000db6c:       8082                    ret

d000db6e <otbn_imem_sec_wipe>:
otbn_imem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:164
rom_error_t otbn_imem_sec_wipe(void) {
d000db6e:       04425537                lui     a0,0x4425
d000db72:       e0d50593                addi    a1,a0,-499 # 4424e0d <_rom_ext_virtual_size+0x43a4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:165
  return otbn_cmd_run(kOtbnCmdSecWipeImem, kErrorOtbnSecWipeImemFailed);
d000db76:       4579                    li      a0,30
d000db78:       bfa5                    j       d000daf0 <otbn_cmd_run>

d000db7a <otbn_imem_write>:
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:169
                            size_t num_words) {
d000db7a:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000db7c:              c606                     sw      ra,12(sp)
d000db7e:              00261693                 slli    a3,a2,0x2
d000db82:              00a68733                 add     a4,a3,a0
d000db86:              00d736b3                 sltu    a3,a4,a3
d000db8a:              6785                     lui     a5,0x1
d000db8c:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000db90:              8ed9                     or      a3,a3,a4
d000db92:              73900713                 li      a4,1849
d000db96:          /-- e681                     bnez    a3,d000db9e <otbn_imem_write+0x24>
d000db98:          |   73900693                 li      a3,1849
d000db9c:       /--|-- a029                     j       d000dba6 <otbn_imem_write+0x2c>
d000db9e:       |  \-> 024256b7                 lui     a3,0x2425
d000dba2:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dba6:       \----> 87b6                     mv      a5,a3
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:170
  HARDENED_RETURN_IF_ERROR(
d000dba8:       /----- 02e79063                 bne     a5,a4,d000dbc8 <otbn_imem_write+0x4e>
d000dbac:       |      73900713                 li      a4,1849
d000dbb0:       |  /-- 00e68663                 beq     a3,a4,d000dbbc <otbn_imem_write+0x42>
d000dbb4:       |  |   0000                     unimp
d000dbb6:       |  |   0000                     unimp
d000dbb8:       |  |   0000                     unimp
d000dbba:       |  |   0000                     unimp
d000dbbc:       |  \-> c11346b7                 lui     a3,0xc1134
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:172
  otbn_write(kBase + OTBN_IMEM_REG_OFFSET + offset_bytes, src, num_words);
d000dbc0:       |      9536                     add     a0,a0,a3
d000dbc2:       |      2039                     jal     d000dbd0 <otbn_write>
d000dbc4:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:174
}
d000dbc8:       \----> 8536                     mv      a0,a3
d000dbca:              40b2                     lw      ra,12(sp)
d000dbcc:              0141                     addi    sp,sp,16
d000dbce:              8082                     ret

d000dbd0 <otbn_write>:
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:87
                       size_t num_words) {
d000dbd0:                 1141                  addi    sp,sp,-16
d000dbd2:                 c606                  sw      ra,12(sp)
d000dbd4:                 c422                  sw      s0,8(sp)
d000dbd6:                 c226                  sw      s1,4(sp)
d000dbd8:                 c04a                  sw      s2,0(sp)
d000dbda:                 8432                  mv      s0,a2
d000dbdc:                 892e                  mv      s2,a1
d000dbde:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000dbe0:                 2a1d                  jal     d000dd16 <rnd_uint32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dbe2:                 4601                  li      a2,0
d000dbe4:                 4581                  li      a1,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000dbe6:       /-------- 02867d63              bgeu    a2,s0,d000dc20 <otbn_write+0x50>
d000dbea:       |         4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000dbec:       |         02853533              mulhu   a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:93
    abs_mmio_write32(dest_addr + i * sizeof(uint32_t), src[i]);
d000dbf0:       |  /----> 00251613              slli    a2,a0,0x2
d000dbf4:       |  |      00c906b3              add     a3,s2,a2
d000dbf8:       |  |      4294                  lw      a3,0(a3)
d000dbfa:       |  |      9626                  add     a2,a2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:94
    i += kStep;
d000dbfc:       |  |      0505                  addi    a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dbfe:       |  |      c214                  sw      a3,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dc00:       |  |      86aa                  mv      a3,a0
d000dc02:       |  |      4601                  li      a2,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:95
    if (launder32(i) >= num_words) {
d000dc04:       |  |  /-- 0086e363              bltu    a3,s0,d000dc0a <otbn_write+0x3a>
d000dc08:       |  |  |   8622                  mv      a2,s0
d000dc0a:       |  |  \-> 8d11                  sub     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000dc0c:       |  |      0585                  addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:98
    HARDENED_CHECK_LT(i, num_words);
d000dc0e:       |  |  /-- 00856663              bltu    a0,s0,d000dc1a <otbn_write+0x4a>
d000dc12:       |  |  |   0000                  unimp
d000dc14:       |  |  |   0000                  unimp
d000dc16:       |  |  |   0000                  unimp
d000dc18:       |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dc1a:       |  |  \-> 862e                  mv      a2,a1
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000dc1c:       |  \----- fc866ae3              bltu    a2,s0,d000dbf0 <otbn_write+0x20>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:100
  HARDENED_CHECK_EQ(iter_cnt, num_words);
d000dc20:       \-----/-X 00858663              beq     a1,s0,d000dc2c <otbn_write+0x5c>
d000dc24:             |   0000                  unimp
d000dc26:             |   0000                  unimp
d000dc28:             |   0000                  unimp
d000dc2a:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:101
}
d000dc2c:             \-> 4902                  lw      s2,0(sp)
d000dc2e:                 4492                  lw      s1,4(sp)
d000dc30:                 4422                  lw      s0,8(sp)
d000dc32:                 40b2                  lw      ra,12(sp)
d000dc34:                 0141                  addi    sp,sp,16
d000dc36:                 8082                  ret

d000dc38 <otbn_dmem_sec_wipe>:
otbn_dmem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:176
rom_error_t otbn_dmem_sec_wipe(void) {
d000dc38:       05425537                lui     a0,0x5425
d000dc3c:       e0d50593                addi    a1,a0,-499 # 5424e0d <_rom_ext_virtual_size+0x53a4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:177
  return otbn_cmd_run(kOtbnCmdSecWipeDmem, kErrorOtbnSecWipeDmemFailed);
d000dc40:       0c300513                li      a0,195
d000dc44:       b575                    j       d000daf0 <otbn_cmd_run>

d000dc46 <otbn_dmem_write>:
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:181
                            size_t num_words) {
d000dc46:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000dc48:              c606                     sw      ra,12(sp)
d000dc4a:              00261693                 slli    a3,a2,0x2
d000dc4e:              00a68733                 add     a4,a3,a0
d000dc52:              00d736b3                 sltu    a3,a4,a3
d000dc56:              6785                     lui     a5,0x1
d000dc58:              c0078793                 addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000dc5c:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000dc60:              8ed9                     or      a3,a3,a4
d000dc62:              73900713                 li      a4,1849
d000dc66:          /-- e681                     bnez    a3,d000dc6e <otbn_dmem_write+0x28>
d000dc68:          |   73900693                 li      a3,1849
d000dc6c:       /--|-- a029                     j       d000dc76 <otbn_dmem_write+0x30>
d000dc6e:       |  \-> 024256b7                 lui     a3,0x2425
d000dc72:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dc76:       \----> 87b6                     mv      a5,a3
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:182
  HARDENED_RETURN_IF_ERROR(
d000dc78:       /----- 02e79063                 bne     a5,a4,d000dc98 <otbn_dmem_write+0x52>
d000dc7c:       |      73900713                 li      a4,1849
d000dc80:       |  /-- 00e68663                 beq     a3,a4,d000dc8c <otbn_dmem_write+0x46>
d000dc84:       |  |   0000                     unimp
d000dc86:       |  |   0000                     unimp
d000dc88:       |  |   0000                     unimp
d000dc8a:       |  |   0000                     unimp
d000dc8c:       |  \-> c11386b7                 lui     a3,0xc1138
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:184
  otbn_write(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes, src, num_words);
d000dc90:       |      9536                     add     a0,a0,a3
d000dc92:       |      3f3d                     jal     d000dbd0 <otbn_write>
d000dc94:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:186
}
d000dc98:       \----> 8536                     mv      a0,a3
d000dc9a:              40b2                     lw      ra,12(sp)
d000dc9c:              0141                     addi    sp,sp,16
d000dc9e:              8082                     ret

d000dca0 <otbn_dmem_read>:
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000dca0:                    00261693           slli    a3,a2,0x2
d000dca4:                    00a68733           add     a4,a3,a0
d000dca8:                    00d736b3           sltu    a3,a4,a3
d000dcac:                    6785                       lui     a5,0x1
d000dcae:                    c0078793           addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000dcb2:                    00e7b733           sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000dcb6:                    8f55                       or      a4,a4,a3
d000dcb8:                    73900693           li      a3,1849
d000dcbc:                /-- e701                       bnez    a4,d000dcc4 <otbn_dmem_read+0x24>
d000dcbe:                |   73900713           li      a4,1849
d000dcc2:             /--|-- a029                       j       d000dccc <otbn_dmem_read+0x2c>
d000dcc4:             |  \-> 02425737           lui     a4,0x2425
d000dcc8:             |      e0370713           addi    a4,a4,-509 # 2424e03 <_rom_ext_virtual_size+0x23a4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dccc:             \----> 87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
  HARDENED_RETURN_IF_ERROR(
d000dcce:       /----------- 04d79163           bne     a5,a3,d000dd10 <otbn_dmem_read+0x70>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dcd2:       |            4781                       li      a5,0
d000dcd4:       |            73900693           li      a3,1849
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
d000dcd8:       |        /-- 00d70663           beq     a4,a3,d000dce4 <otbn_dmem_read+0x44>
d000dcdc:       |        |   0000                       unimp
d000dcde:       |        |   0000                       unimp
d000dce0:       |        |   0000                       unimp
d000dce2:       |        |   0000                       unimp
d000dce4:       |        \-> 4701                       li      a4,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000dce6:       |  /-------- 00c7fe63           bgeu    a5,a2,d000dd02 <otbn_dmem_read+0x62>
d000dcea:       |  |         4701                       li      a4,0
d000dcec:       |  |         c11387b7           lui     a5,0xc1138
d000dcf0:       |  |         953e                       add     a0,a0,a5
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000dcf2:       |  |     /-> 411c                       lw      a5,0(a0)
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
d000dcf4:       |  |     |   0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:195
    dest[i] = abs_mmio_read32(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes +
d000dcf6:       |  |     |   c19c                       sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dcf8:       |  |     |   87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000dcfa:       |  |     |   0511                       addi    a0,a0,4
d000dcfc:       |  |     |   0591                       addi    a1,a1,4
d000dcfe:       |  |     \-- fec7eae3           bltu    a5,a2,d000dcf2 <otbn_dmem_read+0x52>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:198
  HARDENED_CHECK_EQ(i, num_words);
d000dd02:       |  \--/----X 00c70663           beq     a4,a2,d000dd0e <otbn_dmem_read+0x6e>
d000dd06:       |     |      0000                       unimp
d000dd08:       |     |      0000                       unimp
d000dd0a:       |     |      0000                       unimp
d000dd0c:       |     |      0000                       unimp
d000dd0e:       |     \--/-X a011                       j       d000dd12 <otbn_dmem_read+0x72>
d000dd10:       \--------|-> 86ba                       mv      a3,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:201
}
d000dd12:                \-> 8536                       mv      a0,a3
d000dd14:                    8082                       ret

d000dd16 <rnd_uint32>:
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:20

enum {
  kBase = TOP_EARLGREY_RV_CORE_IBEX_CFG_BASE_ADDR,
};

uint32_t rnd_uint32(void) {
d000dd16:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:21
  if (otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RNG_EN_OFFSET) ==
d000dd18:              c606                     sw      ra,12(sp)
d000dd1a:              0f800513                 li      a0,248
d000dd1e:              21cd                     jal     d000e200 <otp_read32>
d000dd20:              73900593                 li      a1,1849
d000dd24:       /----- 00b51663                 bne     a0,a1,d000dd30 <rnd_uint32+0x1a>
d000dd28:       |      c11f0537                 lui     a0,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000dd2c:       |  /-> 4d6c                     lw      a1,92(a0)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:24
      kHardenedBoolTrue) {
    // When bit-0 is clear an EDN request for new data for RND_DATA is pending.
    while (!abs_mmio_read32(kBase + RV_CORE_IBEX_RND_STATUS_REG_OFFSET)) {
d000dd2e:       |  \-- ddfd                     beqz    a1,d000dd2c <rnd_uint32+0x16>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:28
    }
  }
  uint32_t mcycle;
  CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000dd30:       \----> b0002573                 csrr    a0,mcycle
d000dd34:              c11f05b7                 lui     a1,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000dd38:              4dac                     lw      a1,88(a1)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:29
  return mcycle + abs_mmio_read32(kBase + RV_CORE_IBEX_RND_DATA_REG_OFFSET);
d000dd3a:              952e                     add     a0,a0,a1
d000dd3c:              40b2                     lw      ra,12(sp)
d000dd3e:              0141                     addi    sp,sp,16
d000dd40:              8082                     ret

d000dd42 <epmp_state_check>:
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:40
    else                      \
       *fail=0x1;             \
} while (false)
    
  // Check address registers.
  CHECK_CSR(CSR_REG_PMPADDR0, s->pmpaddr[0]);   //ok
d000dd42:              3b002673                 csrr    a2,pmpaddr0
d000dd46:              0fff2597                 auipc   a1,0xfff2
d000dd4a:              2da58593                 addi    a1,a1,730 # e0000020 <epmp_state>
d000dd4e:              4994                     lw      a3,16(a1)
d000dd50:              4505                     li      a0,1
d000dd52:          /-- 00d60663                 beq     a2,a3,d000dd5e <epmp_state_check+0x1c>
d000dd56:          |   4501                     li      a0,0
d000dd58:          |   4605                     li      a2,1
d000dd5a:          |   fec02fa3                 sw      a2,-1(zero)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:41
  CHECK_CSR(CSR_REG_PMPADDR1, s->pmpaddr[1]);
d000dd5e:          \-> 3b102673                 csrr    a2,pmpaddr1
d000dd62:              49d4                     lw      a3,20(a1)
d000dd64:          /-- 00d61463                 bne     a2,a3,d000dd6c <epmp_state_check+0x2a>
d000dd68:          |   0505                     addi    a0,a0,1
d000dd6a:       /--|-- a021                     j       d000dd72 <epmp_state_check+0x30>
d000dd6c:       |  \-> 567d                     li      a2,-1
d000dd6e:       |      4685                     li      a3,1
d000dd70:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:42
  CHECK_CSR(CSR_REG_PMPADDR2, s->pmpaddr[2]);
d000dd72:       \----> 3b202673                 csrr    a2,pmpaddr2
d000dd76:              4d94                     lw      a3,24(a1)
d000dd78:          /-- 00d61463                 bne     a2,a3,d000dd80 <epmp_state_check+0x3e>
d000dd7c:          |   0505                     addi    a0,a0,1
d000dd7e:       /--|-- a021                     j       d000dd86 <epmp_state_check+0x44>
d000dd80:       |  \-> 567d                     li      a2,-1
d000dd82:       |      4685                     li      a3,1
d000dd84:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:43
  CHECK_CSR(CSR_REG_PMPADDR3, s->pmpaddr[3]);
d000dd86:       \----> 3b302673                 csrr    a2,pmpaddr3
d000dd8a:              4dd4                     lw      a3,28(a1)
d000dd8c:          /-- 00d61463                 bne     a2,a3,d000dd94 <epmp_state_check+0x52>
d000dd90:          |   0505                     addi    a0,a0,1
d000dd92:       /--|-- a021                     j       d000dd9a <epmp_state_check+0x58>
d000dd94:       |  \-> 567d                     li      a2,-1
d000dd96:       |      4685                     li      a3,1
d000dd98:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:44
  CHECK_CSR(CSR_REG_PMPADDR4, s->pmpaddr[4]);
d000dd9a:       \----> 3b402673                 csrr    a2,pmpaddr4
d000dd9e:              5194                     lw      a3,32(a1)
d000dda0:          /-- 00d61463                 bne     a2,a3,d000dda8 <epmp_state_check+0x66>
d000dda4:          |   0505                     addi    a0,a0,1
d000dda6:       /--|-- a021                     j       d000ddae <epmp_state_check+0x6c>
d000dda8:       |  \-> 567d                     li      a2,-1
d000ddaa:       |      4685                     li      a3,1
d000ddac:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:45
  CHECK_CSR(CSR_REG_PMPADDR5, s->pmpaddr[5]);
d000ddae:       \----> 3b502673                 csrr    a2,pmpaddr5
d000ddb2:              51d4                     lw      a3,36(a1)
d000ddb4:          /-- 00d61463                 bne     a2,a3,d000ddbc <epmp_state_check+0x7a>
d000ddb8:          |   0505                     addi    a0,a0,1
d000ddba:       /--|-- a021                     j       d000ddc2 <epmp_state_check+0x80>
d000ddbc:       |  \-> 567d                     li      a2,-1
d000ddbe:       |      4685                     li      a3,1
d000ddc0:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:46
  CHECK_CSR(CSR_REG_PMPADDR6, s->pmpaddr[6]);
d000ddc2:       \----> 3b602673                 csrr    a2,pmpaddr6
d000ddc6:              5594                     lw      a3,40(a1)
d000ddc8:          /-- 00d61463                 bne     a2,a3,d000ddd0 <epmp_state_check+0x8e>
d000ddcc:          |   0505                     addi    a0,a0,1
d000ddce:       /--|-- a021                     j       d000ddd6 <epmp_state_check+0x94>
d000ddd0:       |  \-> 567d                     li      a2,-1
d000ddd2:       |      4685                     li      a3,1
d000ddd4:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:47
  CHECK_CSR(CSR_REG_PMPADDR7, s->pmpaddr[7]);
d000ddd6:       \----> 3b702673                 csrr    a2,pmpaddr7
d000ddda:              55d4                     lw      a3,44(a1)
d000dddc:          /-- 00d61463                 bne     a2,a3,d000dde4 <epmp_state_check+0xa2>
d000dde0:          |   0505                     addi    a0,a0,1
d000dde2:       /--|-- a021                     j       d000ddea <epmp_state_check+0xa8>
d000dde4:       |  \-> 567d                     li      a2,-1
d000dde6:       |      4685                     li      a3,1
d000dde8:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:48
  CHECK_CSR(CSR_REG_PMPADDR8, s->pmpaddr[8]);
d000ddea:       \----> 3b802673                 csrr    a2,pmpaddr8
d000ddee:              5994                     lw      a3,48(a1)
d000ddf0:          /-- 00d61463                 bne     a2,a3,d000ddf8 <epmp_state_check+0xb6>
d000ddf4:          |   0505                     addi    a0,a0,1
d000ddf6:       /--|-- a021                     j       d000ddfe <epmp_state_check+0xbc>
d000ddf8:       |  \-> 567d                     li      a2,-1
d000ddfa:       |      4685                     li      a3,1
d000ddfc:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:49
  CHECK_CSR(CSR_REG_PMPADDR9, s->pmpaddr[9]);
d000ddfe:       \----> 3b902673                 csrr    a2,pmpaddr9
d000de02:              59d4                     lw      a3,52(a1)
d000de04:          /-- 00d61463                 bne     a2,a3,d000de0c <epmp_state_check+0xca>
d000de08:          |   0505                     addi    a0,a0,1
d000de0a:       /--|-- a021                     j       d000de12 <epmp_state_check+0xd0>
d000de0c:       |  \-> 567d                     li      a2,-1
d000de0e:       |      4685                     li      a3,1
d000de10:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:50
  CHECK_CSR(CSR_REG_PMPADDR10, s->pmpaddr[10]);
d000de12:       \----> 3ba02673                 csrr    a2,pmpaddr10
d000de16:              5d94                     lw      a3,56(a1)
d000de18:          /-- 00d61463                 bne     a2,a3,d000de20 <epmp_state_check+0xde>
d000de1c:          |   0505                     addi    a0,a0,1
d000de1e:       /--|-- a021                     j       d000de26 <epmp_state_check+0xe4>
d000de20:       |  \-> 567d                     li      a2,-1
d000de22:       |      4685                     li      a3,1
d000de24:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:51
  CHECK_CSR(CSR_REG_PMPADDR11, s->pmpaddr[11]);
d000de26:       \----> 3bb02673                 csrr    a2,pmpaddr11
d000de2a:              5dd4                     lw      a3,60(a1)
d000de2c:          /-- 00d61463                 bne     a2,a3,d000de34 <epmp_state_check+0xf2>
d000de30:          |   0505                     addi    a0,a0,1
d000de32:       /--|-- a021                     j       d000de3a <epmp_state_check+0xf8>
d000de34:       |  \-> 567d                     li      a2,-1
d000de36:       |      4685                     li      a3,1
d000de38:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:52
  CHECK_CSR(CSR_REG_PMPADDR12, s->pmpaddr[12]);
d000de3a:       \----> 3bc02673                 csrr    a2,pmpaddr12
d000de3e:              41b4                     lw      a3,64(a1)
d000de40:          /-- 00d61463                 bne     a2,a3,d000de48 <epmp_state_check+0x106>
d000de44:          |   0505                     addi    a0,a0,1
d000de46:       /--|-- a021                     j       d000de4e <epmp_state_check+0x10c>
d000de48:       |  \-> 567d                     li      a2,-1
d000de4a:       |      4685                     li      a3,1
d000de4c:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:53
  CHECK_CSR(CSR_REG_PMPADDR13, s->pmpaddr[13]);
d000de4e:       \----> 3bd02673                 csrr    a2,pmpaddr13
d000de52:              41f4                     lw      a3,68(a1)
d000de54:          /-- 00d61463                 bne     a2,a3,d000de5c <epmp_state_check+0x11a>
d000de58:          |   0505                     addi    a0,a0,1
d000de5a:       /--|-- a021                     j       d000de62 <epmp_state_check+0x120>
d000de5c:       |  \-> 567d                     li      a2,-1
d000de5e:       |      4685                     li      a3,1
d000de60:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:54
  CHECK_CSR(CSR_REG_PMPADDR14, s->pmpaddr[14]);
d000de62:       \----> 3be02673                 csrr    a2,pmpaddr14
d000de66:              45b4                     lw      a3,72(a1)
d000de68:          /-- 00d61463                 bne     a2,a3,d000de70 <epmp_state_check+0x12e>
d000de6c:          |   0505                     addi    a0,a0,1
d000de6e:       /--|-- a021                     j       d000de76 <epmp_state_check+0x134>
d000de70:       |  \-> 567d                     li      a2,-1
d000de72:       |      4685                     li      a3,1
d000de74:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:55
  CHECK_CSR(CSR_REG_PMPADDR15, s->pmpaddr[15]);
d000de76:       \----> 3bf02673                 csrr    a2,pmpaddr15
d000de7a:              45f4                     lw      a3,76(a1)
d000de7c:          /-- 00d61463                 bne     a2,a3,d000de84 <epmp_state_check+0x142>
d000de80:          |   0505                     addi    a0,a0,1
d000de82:       /--|-- a021                     j       d000de8a <epmp_state_check+0x148>
d000de84:       |  \-> 567d                     li      a2,-1
d000de86:       |      4685                     li      a3,1
d000de88:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:58

  // Check configuration registers.
  CHECK_CSR(CSR_REG_PMPCFG0, s->pmpcfg[0]);
d000de8a:       \----> 3a002673                 csrr    a2,pmpcfg0
d000de8e:              4194                     lw      a3,0(a1)
d000de90:          /-- 00d61463                 bne     a2,a3,d000de98 <epmp_state_check+0x156>
d000de94:          |   0505                     addi    a0,a0,1
d000de96:       /--|-- a021                     j       d000de9e <epmp_state_check+0x15c>
d000de98:       |  \-> 567d                     li      a2,-1
d000de9a:       |      4685                     li      a3,1
d000de9c:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:59
  CHECK_CSR(CSR_REG_PMPCFG1, s->pmpcfg[1]);
d000de9e:       \----> 3a102673                 csrr    a2,pmpcfg1
d000dea2:              41d4                     lw      a3,4(a1)
d000dea4:          /-- 00d61463                 bne     a2,a3,d000deac <epmp_state_check+0x16a>
d000dea8:          |   0505                     addi    a0,a0,1
d000deaa:       /--|-- a021                     j       d000deb2 <epmp_state_check+0x170>
d000deac:       |  \-> 567d                     li      a2,-1
d000deae:       |      4685                     li      a3,1
d000deb0:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:60
  CHECK_CSR(CSR_REG_PMPCFG2, s->pmpcfg[2]);   
d000deb2:       \----> 3a202673                 csrr    a2,pmpcfg2
d000deb6:              4594                     lw      a3,8(a1)
d000deb8:          /-- 00d61463                 bne     a2,a3,d000dec0 <epmp_state_check+0x17e>
d000debc:          |   0505                     addi    a0,a0,1
d000debe:       /--|-- a021                     j       d000dec6 <epmp_state_check+0x184>
d000dec0:       |  \-> 567d                     li      a2,-1
d000dec2:       |      4685                     li      a3,1
d000dec4:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:61
  CHECK_CSR(CSR_REG_PMPCFG3, s->pmpcfg[3]);
d000dec6:       \----> 3a302673                 csrr    a2,pmpcfg3
d000deca:              45d4                     lw      a3,12(a1)
d000decc:          /-- 00d61463                 bne     a2,a3,d000ded4 <epmp_state_check+0x192>
d000ded0:          |   0505                     addi    a0,a0,1
d000ded2:       /--|-- a021                     j       d000deda <epmp_state_check+0x198>
d000ded4:       |  \-> 567d                     li      a2,-1
d000ded6:       |      4685                     li      a3,1
d000ded8:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:65

  // Check Machine Security Configuration (MSECCFG) register.
  // High bits are hardcoded to 0.
  CHECK_CSR(CSR_REG_MSECCFG, s->mseccfg);
d000deda:       \----> 74702673                 csrr    a2,0x747
d000dede:              49ac                     lw      a1,80(a1)
d000dee0:          /-- 00b61463                 bne     a2,a1,d000dee8 <epmp_state_check+0x1a6>
d000dee4:          |   0505                     addi    a0,a0,1
d000dee6:       /--|-- a021                     j       d000deee <epmp_state_check+0x1ac>
d000dee8:       |  \-> 55fd                     li      a1,-1
d000deea:       |      4605                     li      a2,1
d000deec:       |      c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:66
  CHECK_CSR(CSR_REG_MSECCFGH, 0);           //ok
d000deee:       \----> 757025f3                 csrr    a1,0x757
d000def2:       /----- c589                     beqz    a1,d000defc <epmp_state_check+0x1ba>
d000def4:       |      55fd                     li      a1,-1
d000def6:       |      4605                     li      a2,1
d000def8:       |      c190                     sw      a2,0(a1)
d000defa:       |  /-- a011                     j       d000defe <epmp_state_check+0x1bc>
d000defc:       \--|-> 0505                     addi    a0,a0,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000defe:          \-> 862a                     mv      a2,a0
d000df00:              45d9                     li      a1,22
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:73
#undef CHECK_CSR

  enum { kTotalChecks = 22 }; //should be 22
  // Hamming distance of 3, error = 0x72f, kErrorOk = 0x739.
  rom_error_t error = kErrorOk ^ kTotalChecks;
  if (launder32(checks) == kTotalChecks) {
d000df02:       /----- 02b61363                 bne     a2,a1,d000df28 <epmp_state_check+0x1e6>
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:74
    HARDENED_CHECK_EQ(checks, kTotalChecks);
d000df06:       |  /-- 00b50663                 beq     a0,a1,d000df12 <epmp_state_check+0x1d0>
d000df0a:       |  |   0000                     unimp
d000df0c:       |  |   0000                     unimp
d000df0e:       |  |   0000                     unimp
d000df10:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:75
    error ^= checks;
d000df12:       |  \-> 72f54513                 xori    a0,a0,1839
d000df16:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:76
    HARDENED_CHECK_EQ(error, kErrorOk);
d000df1a:       |  /-- 00b50663                 beq     a0,a1,d000df26 <epmp_state_check+0x1e4>
d000df1e:       |  |   0000                     unimp
d000df20:       |  |   0000                     unimp
d000df22:       |  |   0000                     unimp
d000df24:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:80
    return error;
  }
  return kErrorEpmpBadCheck;
}
d000df26:       |  \-> 8082                     ret
d000df28:       \----> 01455537                 lui     a0,0x1455
d000df2c:              0535                     addi    a0,a0,13
d000df2e:              8082                     ret

d000df30 <hmac_sha256_init>:
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:16
#include "sw/device/silicon_creator/lib/error.h"

#include "hmac_regs.h"  // Generated.
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void hmac_sha256_init(void) {
d000df30:       c1110537                lui     a0,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000df34:       00052823                sw      zero,16(a0) # c1110010 <_stack_end+0xe10f0010>
d000df38:       00052223                sw      zero,4(a0)
d000df3c:       55fd                    li      a1,-1
d000df3e:       c10c                    sw      a1,0(a0)
d000df40:       4589                    li      a1,2
d000df42:       c90c                    sw      a1,16(a0)
d000df44:       4585                    li      a1,1
d000df46:       c94c                    sw      a1,20(a0)
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:36
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CFG_REG_OFFSET, reg);

  reg = 0;
  reg = bitfield_bit32_write(reg, HMAC_CMD_HASH_START_BIT, true);
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);
}
d000df48:       8082                    ret

d000df4a <hmac_sha256_update>:
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42

void hmac_sha256_update(const void *data, size_t len) {
  const uint8_t *data_sent = (const uint8_t *)data;

  // Individual byte writes are needed if the buffer isn't word aligned.
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000df4a:                 00b03633              snez    a2,a1
d000df4e:                 00357693              andi    a3,a0,3
d000df52:                 00d036b3              snez    a3,a3
d000df56:                 8e75                  and     a2,a2,a3
d000df58:          /----- c61d                  beqz    a2,d000df86 <hmac_sha256_update+0x3c>
d000df5a:          |      00150693              addi    a3,a0,1
d000df5e:          |      c1111737              lui     a4,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:44
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000df62:          |  /-> 00050783              lb      a5,0(a0)
d000df66:          |  |   00150613              addi    a2,a0,1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000df6a:          |  |   80f70023              sb      a5,-2048(a4) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000df6e:          |  |   15fd                  addi    a1,a1,-1
d000df70:          |  |   00b03533              snez    a0,a1
d000df74:          |  |   0036f793              andi    a5,a3,3
d000df78:          |  |   00f037b3              snez    a5,a5
d000df7c:          |  |   8fe9                  and     a5,a5,a0
d000df7e:          |  |   0685                  addi    a3,a3,1
d000df80:          |  |   8532                  mv      a0,a2
d000df82:          |  \-- f3e5                  bnez    a5,d000df62 <hmac_sha256_update+0x18>
d000df84:          |  /-- a011                  j       d000df88 <hmac_sha256_update+0x3e>
d000df86:          \--|-> 862a                  mv      a2,a0
d000df88:             \-> 4511                  li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  }

  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000df8a:       /-------- 00a5ec63              bltu    a1,a0,d000dfa2 <hmac_sha256_update+0x58>
d000df8e:       |         c1111537              lui     a0,0xc1111
d000df92:       |         468d                  li      a3,3
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000df94:       |     /-> 4218                  lw      a4,0(a2)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000df96:       |     |   80e52023              sw      a4,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
d000df9a:       |     |   15f1                  addi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:51
    uint32_t data_aligned = read_32(data_sent);
    abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                     data_aligned);
    data_sent += sizeof(uint32_t);
d000df9c:       |     |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000df9e:       |     \-- feb6ebe3              bltu    a3,a1,d000df94 <hmac_sha256_update+0x4a>
d000dfa2:       \--/----X c991                  beqz    a1,d000dfb6 <hmac_sha256_update+0x6c>
d000dfa4:          |      c1111537              lui     a0,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:57
  }

  // Handle non-32bit aligned bytes at the end of the buffer.
  for (; len != 0; --len) {
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000dfa8:          |  /-> 00060683              lb      a3,0(a2)
d000dfac:          |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:55
  for (; len != 0; --len) {
d000dfae:          |  |   15fd                  addi    a1,a1,-1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000dfb0:          |  |   80d50023              sb      a3,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
d000dfb4:          |  \-- f9f5                  bnez    a1,d000dfa8 <hmac_sha256_update+0x5e>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:59
  }
}
d000dfb6:          \----> 8082                  ret

d000dfb8 <hmac_sha256_final>:
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:61

void hmac_sha256_final(hmac_digest_t *digest) {
d000dfb8:           c11105b7            lui     a1,0xc1110
d000dfbc:           01458613            addi    a2,a1,20 # c1110014 <_stack_end+0xe10f0014>
d000dfc0:           4689                        li      a3,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dfc2:           c214                        sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000dfc4:       /-> 4190                        lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000dfc6:       |   00167693            andi    a3,a2,1
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:69
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);

  do {
    reg = abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR +
                          HMAC_INTR_STATE_REG_OFFSET);
  } while (!bitfield_bit32_read(reg, HMAC_INTR_STATE_HMAC_DONE_BIT));
d000dfca:       \-- deed                        beqz    a3,d000dfc4 <hmac_sha256_final+0xc>
d000dfcc:           4581                        li      a1,0
d000dfce:           c11106b7            lui     a3,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dfd2:           c290                        sw      a2,0(a3)
d000dfd4:           06068613            addi    a2,a3,96 # c1110060 <_stack_end+0xe10f0060>
d000dfd8:           02000693            li      a3,32
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000dfdc:       /-> 4218                        lw      a4,0(a2)
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:76
                   reg);

  // Read the digest in reverse to preserve the numerical value.
  // The least significant word is at HMAC_DIGEST_7_REG_OFFSET.
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
    digest->digest[i] =
d000dfde:       |   00b507b3            add     a5,a0,a1
d000dfe2:       |   c398                        sw      a4,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:75
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
d000dfe4:       |   0591                        addi    a1,a1,4
d000dfe6:       |   1671                        addi    a2,a2,-4
d000dfe8:       \-- fed59ae3            bne     a1,a3,d000dfdc <hmac_sha256_final+0x24>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:80
        abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_DIGEST_7_REG_OFFSET -
                        (i * sizeof(uint32_t)));
  }
}
d000dfec:           8082                        ret

d000dfee <lifecycle_state_get>:
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:22

enum {
  kBase = TOP_EARLGREY_LC_CTRL_BASE_ADDR,
};

lifecycle_state_t lifecycle_state_get(void) {
d000dfee:                                         1141                  addi    sp,sp,-16
d000dff0:                                         c606                  sw      ra,12(sp)
d000dff2:                                         c0140537              lui     a0,0xc0140
d000dff6:                                         03450513              addi    a0,a0,52 # c0140034 <_stack_end+0xe0120034>
lifecycle_raw_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:69
  }
}

uint32_t lifecycle_raw_state_get(void) {
  uint32_t value = bitfield_field32_read(
      sec_mmio_read32(kBase + LC_CTRL_LC_STATE_REG_OFFSET),
d000dffa:                                         24a5                  jal     d000e262 <sec_mmio_read32>
d000dffc:                                         400005b7              lui     a1,0x40000
d000e000:                                         15fd                  addi    a1,a1,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000e002:                                         8d6d                  and     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e004:                                         85aa                  mv      a1,a0
d000e006:                                         1ad6b637              lui     a2,0x1ad6b
d000e00a:                                         5ac60613              addi    a2,a2,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1aceb5ac>
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e00e:                                  /----- 02b64b63              blt     a2,a1,d000e044 <lifecycle_state_get+0x56>
d000e012:                                  |      0e73a637              lui     a2,0xe73a
d000e016:                                  |      ce660693              addi    a3,a2,-794 # e739ce6 <_rom_ext_virtual_size+0xe6b9ce6>
d000e01a:                               /--|----- 04b6ce63              blt     a3,a1,d000e076 <lifecycle_state_get+0x88>
d000e01e:                               |  |      02108637              lui     a2,0x2108
d000e022:                               |  |      42160613              addi    a2,a2,1057 # 2108421 <_rom_ext_virtual_size+0x2088421>
d000e026:                         /-----|--|----- 08c58e63              beq     a1,a2,d000e0c2 <lifecycle_state_get+0xd4>
d000e02a:                         |     |  |      06319637              lui     a2,0x6319
d000e02e:                         |     |  |      c6360613              addi    a2,a2,-925 # 6318c63 <_rom_ext_virtual_size+0x6298c63>
d000e032:          /--------------|-----|--|----- 0ec59063              bne     a1,a2,d000e112 <lifecycle_state_get+0x124>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:30
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED1);
d000e036:          |              |     |  |  /-- 00c50663              beq     a0,a2,d000e042 <lifecycle_state_get+0x54>
d000e03a:          |              |     |  |  |   0000                  unimp
d000e03c:          |              |     |  |  |   0000                  unimp
d000e03e:          |              |     |  |  |   0000                  unimp
d000e040:          |              |     |  |  |   0000                  unimp
d000e042:       /--|--------------|-----|--|--\-X a215                  j       d000e166 <lifecycle_state_get+0x178>
d000e044:       |  |              |     |  \----> 2318c637              lui     a2,0x2318c
d000e048:       |  |              |     |         63060693              addi    a3,a2,1584 # 2318c630 <_rom_ext_virtual_size+0x2310c630>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e04c:       |  |              |     |  /----- 04b6c663              blt     a3,a1,d000e098 <lifecycle_state_get+0xaa>
d000e050:       |  |              |     |  |      1ad6b637              lui     a2,0x1ad6b
d000e054:       |  |              |     |  |      5ad60613              addi    a2,a2,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1aceb5ad>
d000e058:       |  |              |  /--|--|----- 06c58c63              beq     a1,a2,d000e0d0 <lifecycle_state_get+0xe2>
d000e05c:       |  |              |  |  |  |      1ef7c637              lui     a2,0x1ef7c
d000e060:       |  |              |  |  |  |      def60613              addi    a2,a2,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1eefbdef>
d000e064:       |  |           /--|--|--|--|----- 0cc59463              bne     a1,a2,d000e12c <lifecycle_state_get+0x13e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:48
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED7);
d000e068:       |  |           |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000e074 <lifecycle_state_get+0x86>
d000e06c:       |  |           |  |  |  |  |  |   0000                  unimp
d000e06e:       |  |           |  |  |  |  |  |   0000                  unimp
d000e070:       |  |           |  |  |  |  |  |   0000                  unimp
d000e072:       |  |           |  |  |  |  |  |   0000                  unimp
d000e074:       +--|-----------|--|--|--|--|--\-X a8cd                  j       d000e166 <lifecycle_state_get+0x178>
d000e076:       |  |           |  |  |  \--|----> ce760613              addi    a2,a2,-793
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e07a:       |  |           |  |  |  /--|----- 06c58263              beq     a1,a2,d000e0de <lifecycle_state_get+0xf0>
d000e07e:       |  |           |  |  |  |  |      1294a637              lui     a2,0x1294a
d000e082:       |  |           |  |  |  |  |      52960613              addi    a2,a2,1321 # 1294a529 <_rom_ext_virtual_size+0x128ca529>
d000e086:       |  |        /--|--|--|--|--|----- 0cc59463              bne     a1,a2,d000e14e <lifecycle_state_get+0x160>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:39
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED4);
d000e08a:       |  |        |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000e096 <lifecycle_state_get+0xa8>
d000e08e:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000e090:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000e092:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000e094:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000e096:       +--|--------|--|--|--|--|--|--\-X a8c1                  j       d000e166 <lifecycle_state_get+0x178>
d000e098:       |  |        |  |  |  |  |  \----> 63160613              addi    a2,a2,1585
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e09c:       |  |        |  |  |  |  |  /----- 04c58c63              beq     a1,a2,d000e0f4 <lifecycle_state_get+0x106>
d000e0a0:       |  |        |  |  |  |  |  |      25295637              lui     a2,0x25295
d000e0a4:       |  |        |  |  |  |  |  |      a5260613              addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25214a52>
d000e0a8:       |  |     /--|--|--|--|--|--|----- 0cc59663              bne     a1,a2,d000e174 <lifecycle_state_get+0x186>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:57
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD_END);
d000e0ac:       |  |     |  |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000e0b8 <lifecycle_state_get+0xca>
d000e0b0:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000e0b2:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000e0b4:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000e0b6:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000e0b8:       |  |     |  |  |  |  |  |  |  \-> 91b9b537              lui     a0,0x91b9b
d000e0bc:       |  |     |  |  |  |  |  |  |      68a50513              addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
d000e0c0:       |  |  /--|--|--|--|--|--|--|----- a07d                  j       d000e16e <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:27
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED0);
d000e0c2:       |  |  |  |  |  |  \--|--|--|--/-X 00c50663              beq     a0,a2,d000e0ce <lifecycle_state_get+0xe0>
d000e0c6:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000e0c8:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000e0ca:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000e0cc:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000e0ce:       +--|--|--|--|--|-----|--|--|--\-X a861                  j       d000e166 <lifecycle_state_get+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:45
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED6);
d000e0d0:       |  |  |  |  |  |     \--|--|--/-X 00c50663              beq     a0,a2,d000e0dc <lifecycle_state_get+0xee>
d000e0d4:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000e0d6:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000e0d8:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000e0da:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000e0dc:       +--|--|--|--|--|--------|--|--\-X a069                  j       d000e166 <lifecycle_state_get+0x178>
d000e0de:       |  |  |  |  |  |        \--|----> 0e73a5b7              lui     a1,0xe73a
d000e0e2:       |  |  |  |  |  |           |      ce758593              addi    a1,a1,-793 # e739ce7 <_rom_ext_virtual_size+0xe6b9ce7>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:36
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED3);
d000e0e6:       |  |  |  |  |  |           |  /-- 00b50663              beq     a0,a1,d000e0f2 <lifecycle_state_get+0x104>
d000e0ea:       |  |  |  |  |  |           |  |   0000                  unimp
d000e0ec:       |  |  |  |  |  |           |  |   0000                  unimp
d000e0ee:       |  |  |  |  |  |           |  |   0000                  unimp
d000e0f0:       |  |  |  |  |  |           |  |   0000                  unimp
d000e0f2:       +--|--|--|--|--|-----------|--\-X a895                  j       d000e166 <lifecycle_state_get+0x178>
d000e0f4:       |  |  |  |  |  |           \----> 2318c5b7              lui     a1,0x2318c
d000e0f8:       |  |  |  |  |  |                  63158593              addi    a1,a1,1585 # 2318c631 <_rom_ext_virtual_size+0x2310c631>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:54
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD);
d000e0fc:       |  |  |  |  |  |              /-- 00b50663              beq     a0,a1,d000e108 <lifecycle_state_get+0x11a>
d000e100:       |  |  |  |  |  |              |   0000                  unimp
d000e102:       |  |  |  |  |  |              |   0000                  unimp
d000e104:       |  |  |  |  |  |              |   0000                  unimp
d000e106:       |  |  |  |  |  |              |   0000                  unimp
d000e108:       |  |  |  |  |  |              \-> 65f25537              lui     a0,0x65f25
d000e10c:       |  |  |  |  |  |                  20f50513              addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
d000e110:       |  |  +--|--|--|----------------- a8b9                  j       d000e16e <lifecycle_state_get+0x180>
d000e112:       |  \--|--|--|--|----------------> 0a529637              lui     a2,0xa529
d000e116:       |     |  |  |  |                  4a560613              addi    a2,a2,1189 # a5294a5 <_rom_ext_virtual_size+0xa4a94a5>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e11a:       |     |  |  |  |           /----- 06c59e63              bne     a1,a2,d000e196 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:33
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED2);
d000e11e:       |     |  |  |  |           |  /-- 00c50663              beq     a0,a2,d000e12a <lifecycle_state_get+0x13c>
d000e122:       |     |  |  |  |           |  |   0000                  unimp
d000e124:       |     |  |  |  |           |  |   0000                  unimp
d000e126:       |     |  |  |  |           |  |   0000                  unimp
d000e128:       |     |  |  |  |           |  |   0000                  unimp
d000e12a:       +-----|--|--|--|-----------|--\-X a835                  j       d000e166 <lifecycle_state_get+0x178>
d000e12c:       |     |  |  |  \-----------|----> 21084637              lui     a2,0x21084
d000e130:       |     |  |  |              |      21060613              addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21004210>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e134:       |     |  |  |              +----- 06c59163              bne     a1,a2,d000e196 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:51
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_DEV);
d000e138:       |     |  |  |              |  /-- 00c50663              beq     a0,a2,d000e144 <lifecycle_state_get+0x156>
d000e13c:       |     |  |  |              |  |   0000                  unimp
d000e13e:       |     |  |  |              |  |   0000                  unimp
d000e140:       |     |  |  |              |  |   0000                  unimp
d000e142:       |     |  |  |              |  |   0000                  unimp
d000e144:       |     |  |  |              |  \-> 0b5a7537              lui     a0,0xb5a7
d000e148:       |     |  |  |              |      5e050513              addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5275e0>
d000e14c:       |     +--|--|--------------|----- a00d                  j       d000e16e <lifecycle_state_get+0x180>
d000e14e:       |     |  |  \--------------|----> 16b5b637              lui     a2,0x16b5b
d000e152:       |     |  |                 |      d6b60613              addi    a2,a2,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16adad6b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e156:       |     |  |                 +----- 04c59063              bne     a1,a2,d000e196 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:42
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED5);
d000e15a:       +-----|--|-----------------|----- 00c50663              beq     a0,a2,d000e166 <lifecycle_state_get+0x178>
d000e15e:       |     |  |                 |      0000                  unimp
d000e160:       |     |  |                 |      0000                  unimp
d000e162:       |     |  |                 |      0000                  unimp
d000e164:       |     |  |                 |      0000                  unimp
d000e166:       \-----|--|-----------------|----> b2866537              lui     a0,0xb2866
d000e16a:             |  |                 |      fbb50513              addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:65
}
d000e16e:             >--|-----------------|----> 40b2                  lw      ra,12(sp)
d000e170:             |  |                 |      0141                  addi    sp,sp,16
d000e172:             |  |                 |      8082                  ret
d000e174:             |  \-----------------|----> 2739d637              lui     a2,0x2739d
d000e178:             |                    |      e7360613              addi    a2,a2,-397 # 2739ce73 <_rom_ext_virtual_size+0x2731ce73>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000e17c:             |                    +----- 00c59d63              bne     a1,a2,d000e196 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:60
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_RMA);
d000e180:             |                    |  /-- 00c50663              beq     a0,a2,d000e18c <lifecycle_state_get+0x19e>
d000e184:             |                    |  |   0000                  unimp
d000e186:             |                    |  |   0000                  unimp
d000e188:             |                    |  |   0000                  unimp
d000e18a:             |                    |  |   0000                  unimp
d000e18c:             |                    |  \-> cf8d0537              lui     a0,0xcf8d0
d000e190:             |                    |      aab50513              addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
d000e194:             \--------------------|----- bfe9                  j       d000e16e <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:63
      HARDENED_UNREACHABLE();
d000e196:                                  \----> 0000                  unimp
d000e198:                                         0000                  unimp
d000e19a:                                         0000                  unimp
d000e19c:                                         0000                  unimp

d000e19e <lifecycle_device_id_get>:
lifecycle_device_id_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:74
      LC_CTRL_LC_STATE_STATE_FIELD);
  return value;
}

void lifecycle_device_id_get(lifecycle_device_id_t *device_id) {
d000e19e:           1101                        addi    sp,sp,-32
d000e1a0:           ce06                        sw      ra,28(sp)
d000e1a2:           cc22                        sw      s0,24(sp)
d000e1a4:           ca26                        sw      s1,20(sp)
d000e1a6:           c84a                        sw      s2,16(sp)
d000e1a8:           c64e                        sw      s3,12(sp)
d000e1aa:           892a                        mv      s2,a0
d000e1ac:           4481                        li      s1,0
d000e1ae:           c0140537            lui     a0,0xc0140
d000e1b2:           04450413            addi    s0,a0,68 # c0140044 <_stack_end+0xe0120044>
d000e1b6:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
  static_assert(
      kLifecycleDeviceIdNumWords == LC_CTRL_PARAM_NUM_DEVICE_ID_WORDS,
      "length of the device_id array does not match the length in hardware");

  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    device_id->device_id[i] = sec_mmio_read32(
d000e1ba:       /-> 00848533            add     a0,s1,s0
d000e1be:       |   2055                        jal     d000e262 <sec_mmio_read32>
d000e1c0:       |   009905b3            add     a1,s2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000e1c4:       |   0491                        addi    s1,s1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
    device_id->device_id[i] = sec_mmio_read32(
d000e1c6:       |   c188                        sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000e1c8:       \-- ff3499e3            bne     s1,s3,d000e1ba <lifecycle_device_id_get+0x1c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:83
        kBase + LC_CTRL_DEVICE_ID_0_REG_OFFSET + i * sizeof(uint32_t));
  }
}
d000e1cc:           49b2                        lw      s3,12(sp)
d000e1ce:           4942                        lw      s2,16(sp)
d000e1d0:           44d2                        lw      s1,20(sp)
d000e1d2:           4462                        lw      s0,24(sp)
d000e1d4:           40f2                        lw      ra,28(sp)
d000e1d6:           6105                        addi    sp,sp,32
d000e1d8:           8082                        ret

d000e1da <lifecycle_hw_rev_get>:
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:85

void lifecycle_hw_rev_get(lifecycle_hw_rev_t *hw_rev) {
d000e1da:       1141                    addi    sp,sp,-16
d000e1dc:       c606                    sw      ra,12(sp)
d000e1de:       c422                    sw      s0,8(sp)
d000e1e0:       842a                    mv      s0,a0
d000e1e2:       c0140537                lui     a0,0xc0140
d000e1e6:       04050513                addi    a0,a0,64 # c0140040 <_stack_end+0xe0120040>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:86
  uint32_t reg = sec_mmio_read32(kBase + LC_CTRL_HW_REV_REG_OFFSET);
d000e1ea:       28a5                    jal     d000e262 <sec_mmio_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e1ec:       01055593                srli    a1,a0,0x10
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:87
  *hw_rev = (lifecycle_hw_rev_t){
d000e1f0:       00b41023                sh      a1,0(s0)
d000e1f4:       00a41123                sh      a0,2(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:91
      .chip_gen = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_GEN_FIELD),
      .chip_rev = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_REV_FIELD),
  };
}
d000e1f8:       4422                    lw      s0,8(sp)
d000e1fa:       40b2                    lw      ra,12(sp)
d000e1fc:       0141                    addi    sp,sp,16
d000e1fe:       8082                    ret

d000e200 <otp_read32>:
otp_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:18
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"
#include "otp_ctrl_regs.h"  // Generated.

enum { kBase = TOP_EARLGREY_OTP_CTRL_CORE_BASE_ADDR };

uint32_t otp_read32(uint32_t address) {
d000e200:       c01315b7                lui     a1,0xc0131
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:19
  return sec_mmio_read32(kBase + OTP_CTRL_SW_CFG_WINDOW_REG_OFFSET + address);
d000e204:       952e                    add     a0,a0,a1
d000e206:       a8b1                    j       d000e262 <sec_mmio_read32>

d000e208 <sec_mmio_init>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e208:           4601                        li      a2,0
d000e20a:           4681                        li      a3,0
d000e20c:           4701                        li      a4,0
d000e20e:           4501                        li      a0,0
d000e210:           0fff2597            auipc   a1,0xfff2
d000e214:           e6458593            addi    a1,a1,-412 # e0000074 <sec_mmio_ctx>
sec_mmio_init():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:53
  // mechanism.
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
}

void sec_mmio_init(void) {
  sec_mmio_ctx.last_index = launder32(0);
d000e218:           c190                        sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:54
  sec_mmio_ctx.write_count = launder32(0);
d000e21a:           c1d4                        sw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:55
  sec_mmio_ctx.check_count = launder32(0);
d000e21c:           c5d8                        sw      a4,12(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:56
  sec_mmio_ctx.expected_write_count = launder32(0);
d000e21e:           c588                        sw      a0,8(a1)
d000e220:           3e800613            li      a2,1000
d000e224:           56fd                        li      a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:58
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
    sec_mmio_ctx.addrs[i] = UINT32_MAX;
d000e226:       /-> 7d858713            addi    a4,a1,2008
d000e22a:       |   7cd72c23            sw      a3,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:59
    sec_mmio_ctx.values[i] = UINT32_MAX;
d000e22e:       |   c994                        sw      a3,16(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:57
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
d000e230:       |   167d                        addi    a2,a2,-1
d000e232:       |   0591                        addi    a1,a1,4
d000e234:       \-- fa6d                        bnez    a2,d000e226 <sec_mmio_init+0x1e>
d000e236:           0fff2597            auipc   a1,0xfff2
d000e23a:           e3e58593            addi    a1,a1,-450 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:61
  }
  uint32_t check = kSecMmioValZero ^ sec_mmio_ctx.last_index;
d000e23e:           4190                        lw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:62
  check ^= sec_mmio_ctx.write_count;
d000e240:           41d4                        lw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:63
  check ^= sec_mmio_ctx.check_count;
d000e242:           45cc                        lw      a1,12(a1)
d000e244:           8e35                        xor     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:64
  check ^= sec_mmio_ctx.expected_write_count;
d000e246:           8db1                        xor     a1,a1,a2
d000e248:           8d2d                        xor     a0,a0,a1
d000e24a:           3ca595b7            lui     a1,0x3ca59
d000e24e:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
d000e252:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:65
  HARDENED_CHECK_EQ(check, kSecMmioValZero);
d000e254:       /-- 00b50663            beq     a0,a1,d000e260 <sec_mmio_init+0x58>
d000e258:       |   0000                        unimp
d000e25a:       |   0000                        unimp
d000e25c:       |   0000                        unimp
d000e25e:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:66
}
d000e260:       \-> 8082                        ret

d000e262 <sec_mmio_read32>:
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:78
    sec_mmio_ctx.values[i] = UINT32_MAX;
  }
  HARDENED_CHECK_EQ(sec_mmio_ctx.check_count, 0);
}

uint32_t sec_mmio_read32(uint32_t addr) {
d000e262:           1101                        addi    sp,sp,-32
d000e264:           ce06                        sw      ra,28(sp)
d000e266:           cc22                        sw      s0,24(sp)
d000e268:           ca26                        sw      s1,20(sp)
d000e26a:           c84a                        sw      s2,16(sp)
d000e26c:           c64e                        sw      s3,12(sp)
d000e26e:           842a                        mv      s0,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e270:           00052903            lw      s2,0(a0)
d000e274:           21692537            lui     a0,0x21692
d000e278:           43650993            addi    s3,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:80
  uint32_t value = abs_mmio_read32(addr);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000e27c:           013944b3            xor     s1,s2,s3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:82
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000e280:           8522                        mv      a0,s0
d000e282:           85a6                        mv      a1,s1
d000e284:           2015                        jal     d000e2a8 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e286:           4008                        lw      a0,0(s0)
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:83
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000e288:           01354533            xor     a0,a0,s3
d000e28c:       /-- 00950663            beq     a0,s1,d000e298 <sec_mmio_read32+0x36>
d000e290:       |   0000                        unimp
d000e292:       |   0000                        unimp
d000e294:       |   0000                        unimp
d000e296:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:85

  return value;
d000e298:       \-> 854a                        mv      a0,s2
d000e29a:           49b2                        lw      s3,12(sp)
d000e29c:           4942                        lw      s2,16(sp)
d000e29e:           44d2                        lw      s1,20(sp)
d000e2a0:           4462                        lw      s0,24(sp)
d000e2a2:           40f2                        lw      ra,28(sp)
d000e2a4:           6105                        addi    sp,sp,32
d000e2a6:           8082                        ret

d000e2a8 <upsert_register>:
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:34
  const size_t last_index = sec_mmio_ctx.last_index;
d000e2a8:                 0fff2817              auipc   a6,0xfff2
d000e2ac:                 dcc80813              addi    a6,a6,-564 # e0000074 <sec_mmio_ctx>
d000e2b0:                 00082703              lw      a4,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e2b4:                 4781                  li      a5,0
d000e2b6:                 4681                  li      a3,0
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000e2b8:       /-------- 02e7f163              bgeu    a5,a4,d000e2da <upsert_register+0x32>
d000e2bc:       |         4681                  li      a3,0
d000e2be:       |         87c2                  mv      a5,a6
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:37
    if (sec_mmio_ctx.addrs[i] == addr) {
d000e2c0:       |  /----> 7d878613              addi    a2,a5,2008
d000e2c4:       |  |      7d862603              lw      a2,2008(a2)
d000e2c8:       |  |  /-- 00a60863              beq     a2,a0,d000e2d8 <upsert_register+0x30>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000e2cc:       |  |  |   0685                  addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e2ce:       |  |  |   8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
d000e2d0:       |  |  |   0791                  addi    a5,a5,4
d000e2d2:       |  \--|-- fee667e3              bltu    a2,a4,d000e2c0 <upsert_register+0x18>
d000e2d6:       +-----|-- a011                  j       d000e2da <upsert_register+0x32>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:38
      sec_mmio_ctx.values[i] = value;
d000e2d8:       |     \-> cb8c                  sw      a1,16(a5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e2da:       \-------> 8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
  if (launder32(i) == last_index && launder32(i) < kSecMmioRegFileSize) {
d000e2dc:             /-- 02e61463              bne     a2,a4,d000e304 <upsert_register+0x5c>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e2e0:             |   8636                  mv      a2,a3
d000e2e2:             |   3e700713              li      a4,999
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
d000e2e6:             +-- 00c76f63              bltu    a4,a2,d000e304 <upsert_register+0x5c>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:43
    sec_mmio_ctx.addrs[i] = addr;
d000e2ea:             |   00269613              slli    a2,a3,0x2
d000e2ee:             |   9642                  add     a2,a2,a6
d000e2f0:             |   7d860713              addi    a4,a2,2008
d000e2f4:             |   7ca72c23              sw      a0,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:44
    sec_mmio_ctx.values[i] = value;
d000e2f8:             |   ca0c                  sw      a1,16(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:45
    ++sec_mmio_ctx.last_index;
d000e2fa:             |   00082503              lw      a0,0(a6)
d000e2fe:             |   0505                  addi    a0,a0,1
d000e300:             |   00a82023              sw      a0,0(a6)
d000e304:             \-> 3e800513              li      a0,1000
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:49
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
d000e308:             /-- 00a6e663              bltu    a3,a0,d000e314 <upsert_register+0x6c>
d000e30c:             |   0000                  unimp
d000e30e:             |   0000                  unimp
d000e310:             |   0000                  unimp
d000e312:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:50
}
d000e314:             \-> 8082                  ret

d000e316 <sec_mmio_write32>:
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:88
}

void sec_mmio_write32(uint32_t addr, uint32_t value) {
d000e316:           1141                        addi    sp,sp,-16
d000e318:           c606                        sw      ra,12(sp)
d000e31a:           c422                        sw      s0,8(sp)
d000e31c:           c226                        sw      s1,4(sp)
d000e31e:           c04a                        sw      s2,0(sp)
d000e320:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e322:           c10c                        sw      a1,0(a0)
d000e324:           21692537            lui     a0,0x21692
d000e328:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:90
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000e32c:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:92
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000e330:           8522                        mv      a0,s0
d000e332:           85a6                        mv      a1,s1
d000e334:           3f95                        jal     d000e2a8 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e336:           4008                        lw      a0,0(s0)
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:93
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000e338:           01254533            xor     a0,a0,s2
d000e33c:       /-- 00950663            beq     a0,s1,d000e348 <sec_mmio_write32+0x32>
d000e340:       |   0000                        unimp
d000e342:       |   0000                        unimp
d000e344:       |   0000                        unimp
d000e346:       |   0000                        unimp
d000e348:       \-> 0fff2517            auipc   a0,0xfff2
d000e34c:           d2c50513            addi    a0,a0,-724 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:95

  ++sec_mmio_ctx.write_count;
d000e350:           414c                        lw      a1,4(a0)
d000e352:           0585                        addi    a1,a1,1
d000e354:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:96
}
d000e356:           4902                        lw      s2,0(sp)
d000e358:           4492                        lw      s1,4(sp)
d000e35a:           4422                        lw      s0,8(sp)
d000e35c:           40b2                        lw      ra,12(sp)
d000e35e:           0141                        addi    sp,sp,16
d000e360:           8082                        ret

d000e362 <sec_mmio_write32_shadowed>:
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:98

void sec_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
d000e362:           1141                        addi    sp,sp,-16
d000e364:           c606                        sw      ra,12(sp)
d000e366:           c422                        sw      s0,8(sp)
d000e368:           c226                        sw      s1,4(sp)
d000e36a:           c04a                        sw      s2,0(sp)
d000e36c:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e36e:           c10c                        sw      a1,0(a0)
d000e370:           c10c                        sw      a1,0(a0)
d000e372:           21692537            lui     a0,0x21692
d000e376:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:102
  // Shadowed registers require two writes.
  abs_mmio_write32(addr, value);
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000e37a:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:104
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000e37e:           8522                        mv      a0,s0
d000e380:           85a6                        mv      a1,s1
d000e382:           371d                        jal     d000e2a8 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e384:           4008                        lw      a0,0(s0)
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:105
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000e386:           01254533            xor     a0,a0,s2
d000e38a:       /-- 00950663            beq     a0,s1,d000e396 <sec_mmio_write32_shadowed+0x34>
d000e38e:       |   0000                        unimp
d000e390:       |   0000                        unimp
d000e392:       |   0000                        unimp
d000e394:       |   0000                        unimp
d000e396:       \-> 0fff2517            auipc   a0,0xfff2
d000e39a:           cde50513            addi    a0,a0,-802 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:107

  ++sec_mmio_ctx.write_count;
d000e39e:           414c                        lw      a1,4(a0)
d000e3a0:           0585                        addi    a1,a1,1
d000e3a2:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:108
}
d000e3a4:           4902                        lw      s2,0(sp)
d000e3a6:           4492                        lw      s1,4(sp)
d000e3a8:           4422                        lw      s0,8(sp)
d000e3aa:           40b2                        lw      ra,12(sp)
d000e3ac:           0141                        addi    sp,sp,16
d000e3ae:           8082                        ret

d000e3b0 <sec_mmio_check_values>:
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:111

void sec_mmio_check_values(uint32_t rnd_offset) {
  const uint32_t last_index = sec_mmio_ctx.last_index;
d000e3b0:                    0fff2817           auipc   a6,0xfff2
d000e3b4:                    cc480813           addi    a6,a6,-828 # e0000074 <sec_mmio_ctx>
d000e3b8:                    00082603           lw      a2,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e3bc:                    4701                       li      a4,0
d000e3be:                    4681                       li      a3,0
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  // Pick a random starting offset.
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
  enum { kStep = 1 };
  size_t i;
  for (i = 0; launder32(i) < last_index; ++i) {
d000e3c0:       /----------- 04c77463           bgeu    a4,a2,d000e408 <sec_mmio_check_values+0x58>
d000e3c4:       |            4681                       li      a3,0
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:113
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
d000e3c6:       |            02a63733           mulhu   a4,a2,a0
d000e3ca:       |            21692537           lui     a0,0x21692
d000e3ce:       |            43650893           addi    a7,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21612436>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:117
    uint32_t read_value = abs_mmio_read32(sec_mmio_ctx.addrs[offset]);
d000e3d2:       |  /-------> 00271793           slli    a5,a4,0x2
d000e3d6:       |  |         97c2                       add     a5,a5,a6
d000e3d8:       |  |         7d878593           addi    a1,a5,2008
d000e3dc:       |  |         7d85a583           lw      a1,2008(a1)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e3e0:       |  |         418c                       lw      a1,0(a1)
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000e3e2:       |  |         4b88                       lw      a0,16(a5)
d000e3e4:       |  |         4781                       li      a5,0
d000e3e6:       |  |         0115c5b3           xor     a1,a1,a7
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:120
                      sec_mmio_ctx.values[offset]);
    offset += kStep;
d000e3ea:       |  |         0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000e3ec:       |  |  /----- 00a58663           beq     a1,a0,d000e3f8 <sec_mmio_check_values+0x48>
d000e3f0:       |  |  |      0000                       unimp
d000e3f2:       |  |  |      0000                       unimp
d000e3f4:       |  |  |      0000                       unimp
d000e3f6:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000e3f8:       |  |  \--/-X 00c76363           bltu    a4,a2,d000e3fe <sec_mmio_check_values+0x4e>
d000e3fc:       |  |     |   87b2                       mv      a5,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000e3fe:       |  |     \-> 0685                       addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e400:       |  |         8536                       mv      a0,a3
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000e402:       |  |         8f1d                       sub     a4,a4,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000e404:       |  \-------- fcc567e3           bltu    a0,a2,d000e3d2 <sec_mmio_check_values+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:126
      offset -= last_index;
    }
  }
  // Check for loop completion.
  HARDENED_CHECK_EQ(i, last_index);
d000e408:       \--------/-X 00c68663           beq     a3,a2,d000e414 <sec_mmio_check_values+0x64>
d000e40c:                |   0000                       unimp
d000e40e:                |   0000                       unimp
d000e410:                |   0000                       unimp
d000e412:                |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:127
  ++sec_mmio_ctx.check_count;
d000e414:                \-> 00c82503           lw      a0,12(a6)
d000e418:                    0505                       addi    a0,a0,1
d000e41a:                    00a82623           sw      a0,12(a6)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:128
}
d000e41e:                    8082                       ret

d000e420 <sec_mmio_check_counters>:
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:130

void sec_mmio_check_counters(uint32_t expected_check_count) {
d000e420:           3ca595b7            lui     a1,0x3ca59
d000e424:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e428:           862e                        mv      a2,a1
d000e42a:           0fff2697            auipc   a3,0xfff2
d000e42e:           c4a68693            addi    a3,a3,-950 # e0000074 <sec_mmio_ctx>
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000e432:           42d8                        lw      a4,4(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000e434:           469c                        lw      a5,8(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000e436:           8e39                        xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000e438:           8e3d                        xor     a2,a2,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:136

  // Check the expected write count. This is equivalent to
  // sec_mmio_ctx.write_count == sec_mmio_ctx.expected_write_count
  HARDENED_CHECK_EQ(result, kSecMmioValZero);
d000e43a:       /-- 00b60663            beq     a2,a1,d000e446 <sec_mmio_check_counters+0x26>
d000e43e:       |   0000                        unimp
d000e440:       |   0000                        unimp
d000e442:       |   0000                        unimp
d000e444:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:141

  // Check the expected check counts. This is equivalent to
  // sec_mmio_ctx.check_count == expected_check_count. This check is expected to
  // fail if the previous check failed.
  result ^= sec_mmio_ctx.check_count;
d000e446:       \-> 46cc                        lw      a1,12(a3)
d000e448:           8d31                        xor     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:142
  result ^= expected_check_count;
d000e44a:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:143
  HARDENED_CHECK_EQ(~launder32(result), kSecMmioValOne);
d000e44c:           fff54513            not     a0,a0
d000e450:           c35a75b7            lui     a1,0xc35a7
d000e454:           9a558593            addi    a1,a1,-1627 # c35a69a5 <_stack_end+0xe35869a5>
d000e458:       /-- 00b50663            beq     a0,a1,d000e464 <sec_mmio_check_counters+0x44>
d000e45c:       |   0000                        unimp
d000e45e:       |   0000                        unimp
d000e460:       |   0000                        unimp
d000e462:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:145

  ++sec_mmio_ctx.check_count;
d000e464:       \-> 46c8                        lw      a0,12(a3)
d000e466:           0505                        addi    a0,a0,1
d000e468:           c6c8                        sw      a0,12(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:146
}
d000e46a:           8082                        ret

d000e46c <memcpy>:
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:61
  return byte << 24 | byte << 16 | byte << 8 | byte;
}

void *OT_PREFIX_IF_NOT_RV32(memcpy)(void *restrict dest,
                                    const void *restrict src, size_t len) {
  if (dest == NULL || src == NULL) {
d000e46c:                       00153693                seqz    a3,a0
d000e470:                       0015b713                seqz    a4,a1
d000e474:                       8ed9                    or      a3,a3,a4
d000e476:       /-------------- eab5                    bnez    a3,d000e4ea <memcpy+0x7e>
d000e478:       |               4711                    li      a4,4
d000e47a:       |               86b2                    mv      a3,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e47c:       |        /----- 00e66c63                bltu    a2,a4,d000e494 <memcpy+0x28>
d000e480:       |        |      00a5c6b3                xor     a3,a1,a0
d000e484:       |        |      0036f793                andi    a5,a3,3
d000e488:       |        |      8832                    mv      a6,a2
d000e48a:       |        |      86b2                    mv      a3,a2
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000e48c:       |        |  /-- eb91                    bnez    a5,d000e4a0 <memcpy+0x34>
d000e48e:       |        |  |   40a006b3                neg     a3,a0
d000e492:       |        |  |   8a8d                    andi    a3,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e494:       |        \--|-> 40d60733                sub     a4,a2,a3
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e498:       |           |   9b71                    andi    a4,a4,-4
d000e49a:       |           |   00d70833                add     a6,a4,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:69
  unsigned char *dest8 = (unsigned char *)dest;
  const unsigned char *src8 = (const unsigned char *)src;
  size_t body_offset, tail_offset;
  compute_alignment(dest, src, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e49e:       |  /--------|-- c6b9                    beqz    a3,d000e4ec <memcpy+0x80>
d000e4a0:       |  |        \-> 4781                    li      a5,0
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000e4a2:       |  |        /-> 00f58733                add     a4,a1,a5
d000e4a6:       |  |        |   00070883                lb      a7,0(a4)
d000e4aa:       |  |        |   00f50733                add     a4,a0,a5
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000e4ae:       |  |        |   0785                    addi    a5,a5,1
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000e4b0:       |  |        |   01170023                sb      a7,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000e4b4:       |  |        \-- fef697e3                bne     a3,a5,d000e4a2 <memcpy+0x36>
/proc/self/cwd/sw/device/lib/base/memory.c:72
  }
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e4b8:       |  |  /-------- 0106fb63                bgeu    a3,a6,d000e4ce <memcpy+0x62>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e4bc:       |  |  |  /----> 00d58733                add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e4c0:       |  |  |  |      4318                    lw      a4,0(a4)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e4c2:       |  |  |  |      00d507b3                add     a5,a0,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000e4c6:       |  |  |  |      0691                    addi    a3,a3,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000e4c8:       |  |  |  |      c398                    sw      a4,0(a5)
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000e4ca:       |  |  |  +----- ff06e9e3                bltu    a3,a6,d000e4bc <memcpy+0x50>
d000e4ce:       +--|-->--|----X 00c6fe63                bgeu    a3,a2,d000e4ea <memcpy+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:76
    uint32_t word = read_32(&src8[i]);
    write_32(word, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e4d2:       |  |  |  |      8e15                    sub     a2,a2,a3
d000e4d4:       |  |  |  |      00d50733                add     a4,a0,a3
d000e4d8:       |  |  |  |      95b6                    add     a1,a1,a3
/proc/self/cwd/sw/device/lib/base/memory.c:77
    dest8[i] = src8[i];
d000e4da:       |  |  |  |  /-> 00058683                lb      a3,0(a1)
d000e4de:       |  |  |  |  |   00d70023                sb      a3,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:76
  for (; i < len; ++i) {
d000e4e2:       |  |  |  |  |   167d                    addi    a2,a2,-1
d000e4e4:       |  |  |  |  |   0705                    addi    a4,a4,1
d000e4e6:       |  |  |  |  |   0585                    addi    a1,a1,1
d000e4e8:       |  |  |  |  \-- fa6d                    bnez    a2,d000e4da <memcpy+0x6e>
/proc/self/cwd/sw/device/lib/base/memory.c:80
  }
  return dest;
}
d000e4ea:       \--|--|--|----> 8082                    ret
d000e4ec:          \--|--|----> 4681                    li      a3,0
/proc/self/cwd/sw/device/lib/base/memory.c:72
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e4ee:             |  \----- fd06e7e3                bltu    a3,a6,d000e4bc <memcpy+0x50>
d000e4f2:             \-------- bff1                    j       d000e4ce <memcpy+0x62>

d000e4f4 <memset>:
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:82

void *OT_PREFIX_IF_NOT_RV32(memset)(void *dest, int value, size_t len) {
d000e4f4:                 4691                  li      a3,4
d000e4f6:                 8732                  mv      a4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e4f8:             /-- 00d66663              bltu    a2,a3,d000e504 <memset+0x10>
d000e4fc:             |   40a006b3              neg     a3,a0
d000e500:             |   0036f713              andi    a4,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e504:             \-> 40e606b3              sub     a3,a2,a4
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e508:                 ffc6f813              andi    a6,a3,-4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:89
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(dest, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e50c:          /----- cb01                  beqz    a4,d000e51c <memset+0x28>
d000e50e:          |      87aa                  mv      a5,a0
d000e510:          |      86ba                  mv      a3,a4
/proc/self/cwd/sw/device/lib/base/memory.c:90
    dest8[i] = value8;
d000e512:          |  /-> 00b78023              sb      a1,0(a5)
/proc/self/cwd/sw/device/lib/base/memory.c:89
  for (; i < body_offset; ++i) {
d000e516:          |  |   16fd                  addi    a3,a3,-1
d000e518:          |  |   0785                  addi    a5,a5,1
d000e51a:          |  \-- fee5                  bnez    a3,d000e512 <memset+0x1e>
/proc/self/cwd/sw/device/lib/base/memory.c:93
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e51c:       /--\----X 02080263              beqz    a6,d000e540 <memset+0x4c>
d000e520:       |         00e808b3              add     a7,a6,a4
d000e524:       |         0ff5f813              andi    a6,a1,255
d000e528:       |         010107b7              lui     a5,0x1010
d000e52c:       |         10178793              addi    a5,a5,257 # 1010101 <_rom_ext_virtual_size+0xf90101>
d000e530:       |         02f807b3              mul     a5,a6,a5
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e534:       |     /-> 00e506b3              add     a3,a0,a4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e538:       |     |   0711                  addi    a4,a4,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000e53a:       |     |   c29c                  sw      a5,0(a3)
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e53c:       |     \-- ff176ce3              bltu    a4,a7,d000e534 <memset+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:96
    write_32(value32, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e540:       \--/----X 00c77a63              bgeu    a4,a2,d000e554 <memset+0x60>
d000e544:          |      8e19                  sub     a2,a2,a4
d000e546:          |      00e506b3              add     a3,a0,a4
/proc/self/cwd/sw/device/lib/base/memory.c:97
    dest8[i] = value8;
d000e54a:          |  /-> 00b68023              sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/base/memory.c:96
  for (; i < len; ++i) {
d000e54e:          |  |   167d                  addi    a2,a2,-1
d000e550:          |  |   0685                  addi    a3,a3,1
d000e552:          |  \-- fe65                  bnez    a2,d000e54a <memset+0x56>
/proc/self/cwd/sw/device/lib/base/memory.c:99
  }
  return dest;
d000e554:          \----> 8082                  ret

d000e556 <memrcmp>:
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:143
    }
  }
  return kMemCmpEq;
}

int memrcmp(const void *lhs, const void *rhs, size_t len) {
d000e556:                    4691                       li      a3,4
d000e558:                    8832                       mv      a6,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e55a:             /----- 02d66163           bltu    a2,a3,d000e57c <memrcmp+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000e55e:             |      0015b693           seqz    a3,a1
d000e562:             |      00a5c733           xor     a4,a1,a0
d000e566:             |      8b0d                       andi    a4,a4,3
d000e568:             |      00173713           seqz    a4,a4
d000e56c:             |      8ed9                       or      a3,a3,a4
d000e56e:             |  /-- e299                       bnez    a3,d000e574 <memrcmp+0x1e>
d000e570:             |  |   8832                       mv      a6,a2
d000e572:             +--|-- a029                       j       d000e57c <memrcmp+0x26>
d000e574:             |  \-> 40a006b3           neg     a3,a0
d000e578:             |      0036f813           andi    a6,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e57c:             \----> 410606b3           sub     a3,a2,a6
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e580:                    9af1                       andi    a3,a3,-4
d000e582:                    01068333           add     t1,a3,a6
d000e586:                    86b2                       mv      a3,a2
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:149
  const unsigned char *lhs8 = (const unsigned char *)lhs;
  const unsigned char *rhs8 = (const unsigned char *)rhs;
  size_t body_offset, tail_offset;
  compute_alignment(lhs, rhs, len, &body_offset, &tail_offset);
  size_t end = len;
  for (; end > tail_offset; --end) {
d000e588:                /-- 00666363           bltu    a2,t1,d000e58e <memrcmp+0x38>
d000e58c:                |   869a                       mv      a3,t1
d000e58e:                \-> fff58893           addi    a7,a1,-1
d000e592:                    fff50293           addi    t0,a0,-1
d000e596:             /--/-X 02c37063           bgeu    t1,a2,d000e5b6 <memrcmp+0x60>
/proc/self/cwd/sw/device/lib/base/memory.c:151
    const size_t i = end - 1;
    if (lhs8[i] < rhs8[i]) {
d000e59a:             |  |   00c28733           add     a4,t0,a2
d000e59e:             |  |   00074703           lbu     a4,0(a4)
d000e5a2:             |  |   00c887b3           add     a5,a7,a2
d000e5a6:             |  |   0007c783           lbu     a5,0(a5)
d000e5aa:       /-----|--|-- 04f76863           bltu    a4,a5,d000e5fa <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:150
    const size_t i = end - 1;
d000e5ae:       |     |  |   167d                       addi    a2,a2,-1
d000e5b0:       |     |  \-- fee7f3e3           bgeu    a5,a4,d000e596 <memrcmp+0x40>
d000e5b4:       |  /--|----- a005                       j       d000e5d4 <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:157
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e5b6:       |  |  \----> 15f1                       addi    a1,a1,-4
d000e5b8:       |  |         1571                       addi    a0,a0,-4
d000e5ba:       |  |  /--/-X 02d87d63           bgeu    a6,a3,d000e5f4 <memrcmp+0x9e>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e5be:       |  |  |  |   00d50633           add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e5c2:       |  |  |  |   4210                       lw      a2,0(a2)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e5c4:       |  |  |  |   00d58733           add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e5c8:       |  |  |  |   4318                       lw      a4,0(a4)
d000e5ca:       +--|--|--|-- 02e66863           bltu    a2,a4,d000e5fa <memrcmp+0xa4>
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:158
    const size_t i = end - sizeof(uint32_t);
d000e5ce:       |  |  |  |   16f1                       addi    a3,a3,-4
d000e5d0:       |  |  |  \-- fec775e3           bgeu    a4,a2,d000e5ba <memrcmp+0x64>
d000e5d4:       |  >--|----> 02a00513           li      a0,42
/proc/self/cwd/sw/device/lib/base/memory.c:178
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
d000e5d8:       |  |  |      8082                       ret
/proc/self/cwd/sw/device/lib/base/memory.c:171
    if (lhs8[i] < rhs8[i]) {
d000e5da:       |  |  |  /-> 00d28533           add     a0,t0,a3
d000e5de:       |  |  |  |   00054503           lbu     a0,0(a0)
d000e5e2:       |  |  |  |   00d885b3           add     a1,a7,a3
d000e5e6:       |  |  |  |   0005c583           lbu     a1,0(a1)
d000e5ea:       +--|--|--|-- 00b56863           bltu    a0,a1,d000e5fa <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:170
    const size_t i = end - 1;
d000e5ee:       |  |  |  |   16fd                       addi    a3,a3,-1
d000e5f0:       |  \--|--|-- fea5e2e3           bltu    a1,a0,d000e5d4 <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:169
  for (; end > 0; --end) {
d000e5f4:       |     \--\-X f2fd                       bnez    a3,d000e5da <memrcmp+0x84>
d000e5f6:       |            4501                       li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:178
}
d000e5f8:       |            8082                       ret
d000e5fa:       \----------> fd600513           li      a0,-42
d000e5fe:                    8082                       ret

d000e600 <memchr>:
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:180

void *OT_PREFIX_IF_NOT_RV32(memchr)(const void *ptr, int value, size_t len) {
d000e600:                             4691                      li      a3,4
d000e602:                             8eb2                      mv      t4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e604:                         /-- 00d66663                  bltu    a2,a3,d000e610 <memchr+0x10>
d000e608:                         |   40a006b3                  neg     a3,a0
d000e60c:                         |   0036fe93                  andi    t4,a3,3
d000e610:                         \-> 0ff5fe13                  andi    t3,a1,255
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:187
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e614:                      /----- 000e8b63                  beqz    t4,d000e62a <memchr+0x2a>
d000e618:                      |      85aa                      mv      a1,a0
d000e61a:                      |      87f6                      mv      a5,t4
/proc/self/cwd/sw/device/lib/base/memory.c:188
    if (ptr8[i] == value8) {
d000e61c:                      |  /-> 0005c683                  lbu     a3,0(a1)
d000e620:       /--------------|--|-- 09c68563                  beq     a3,t3,d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:187
  for (; i < body_offset; ++i) {
d000e624:       |              |  |   17fd                      addi    a5,a5,-1
d000e626:       |              |  |   0585                      addi    a1,a1,1
d000e628:       |              |  \-- fbf5                      bnez    a5,d000e61c <memchr+0x1c>
d000e62a:       |              \----> 41d605b3                  sub     a1,a2,t4
d000e62e:       |                     99f1                      andi    a1,a1,-4
/proc/self/cwd/sw/device/lib/base/memory.c:193
      return (void *)&ptr8[i];
    }
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e630:       |  /----------------- c9a9                      beqz    a1,d000e682 <memchr+0x82>
d000e632:       |  |                  01d58833                  add     a6,a1,t4
d000e636:       |  |                  010105b7                  lui     a1,0x1010
d000e63a:       |  |                  10158593                  addi    a1,a1,257 # 1010101 <_rom_ext_virtual_size+0xf90101>
d000e63e:       |  |                  02be02b3                  mul     t0,t3,a1
d000e642:       |  |                  0ff00893                  li      a7,255
d000e646:       |  |                  65c1                      lui     a1,0x10
d000e648:       |  |                  f0058393                  addi    t2,a1,-256 # ff00 <_stack_size+0xbf00>
d000e64c:       |  |                  00ff0337                  lui     t1,0xff0
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e650:       |  |              /-> 01d505b3                  add     a1,a0,t4
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e654:       |  |              |   4194                      lw      a3,0(a1)
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:195
    uint32_t word = read_32(&ptr8[i]);
    uint32_t bits_eq = ~(word ^ value32);
d000e656:       |  |              |   0056c7b3                  xor     a5,a3,t0
d000e65a:       |  |              |   fff7c693                  not     a3,a5
/proc/self/cwd/sw/device/lib/base/memory.c:198
    static_assert(__BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__,
                  "memchr assumes that the system is little endian.");
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e65e:       |  |              |   0ff6f713                  andi    a4,a3,255
d000e662:       +--|--------------|-- 05170463                  beq     a4,a7,d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:201
      return (void *)&ptr8[i];
    }
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e666:       |  |              |   0076f733                  and     a4,a3,t2
d000e66a:       |  |  /-----------|-- 02770b63                  beq     a4,t2,d000e6a0 <memchr+0xa0>
/proc/self/cwd/sw/device/lib/base/memory.c:204
      return (void *)&ptr8[i + 1];
    }
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e66e:       |  |  |           |   0066f6b3                  and     a3,a3,t1
d000e672:       |  |  |  /--------|-- 02668963                  beq     a3,t1,d000e6a4 <memchr+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:207
      return (void *)&ptr8[i + 2];
    }
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e676:       |  |  |  |        |   0187d693                  srli    a3,a5,0x18
d000e67a:       |  |  |  |  /-----|-- c69d                      beqz    a3,d000e6a8 <memchr+0xa8>
/proc/self/cwd/sw/device/lib/base/memory.c:193
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e67c:       |  |  |  |  |     |   0e91                      addi    t4,t4,4
d000e67e:       |  |  |  |  |     \-- fd0ee9e3                  bltu    t4,a6,d000e650 <memchr+0x50>
/proc/self/cwd/sw/device/lib/base/memory.c:211
      return (void *)&ptr8[i + 3];
    }
  }
  for (; i < len; ++i) {
d000e682:       |  \--|--|--|--/----X 00cefd63                  bgeu    t4,a2,d000e69c <memchr+0x9c>
d000e686:       |     |  |  |  |      41d60633                  sub     a2,a2,t4
d000e68a:       |     |  |  |  |      01d505b3                  add     a1,a0,t4
/proc/self/cwd/sw/device/lib/base/memory.c:212
    if (ptr8[i] == value8) {
d000e68e:       |     |  |  |  |  /-> 0005c503                  lbu     a0,0(a1)
d000e692:       +-----|--|--|--|--|-- 01c50c63                  beq     a0,t3,d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:211
  for (; i < len; ++i) {
d000e696:       |     |  |  |  |  |   167d                      addi    a2,a2,-1
d000e698:       |     |  |  |  |  |   0585                      addi    a1,a1,1
d000e69a:       |     |  |  |  |  \-- fa75                      bnez    a2,d000e68e <memchr+0x8e>
d000e69c:       |     |  |  |  \----> 4581                      li      a1,0
d000e69e:       +-----|--|--|-------- a031                      j       d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:202
      return (void *)&ptr8[i + 1];
d000e6a0:       |     \--|--|-------> 0585                      addi    a1,a1,1
d000e6a2:       +--------|--|-------- a021                      j       d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:205
      return (void *)&ptr8[i + 2];
d000e6a4:       |        \--|-------> 0589                      addi    a1,a1,2
d000e6a6:       +-----------|-------- a011                      j       d000e6aa <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:208
      return (void *)&ptr8[i + 3];
d000e6a8:       |           \-------> 058d                      addi    a1,a1,3
/proc/self/cwd/sw/device/lib/base/memory.c:217
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e6aa:       \-------------------> 852e                      mv      a0,a1
d000e6ac:                             8082                      ret

d000e6ae <memrchr>:
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:219

void *OT_PREFIX_IF_NOT_RV32(memrchr)(const void *ptr, int value, size_t len) {
d000e6ae:                          4691                 li      a3,4
d000e6b0:                          8332                 mv      t1,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e6b2:                      /-- 00d66663             bltu    a2,a3,d000e6be <memrchr+0x10>
d000e6b6:                      |   40a006b3             neg     a3,a0
d000e6ba:                      |   0036f313             andi    t1,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e6be:                      \-> 406606b3             sub     a3,a2,t1
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e6c2:                          9af1                 andi    a3,a3,-4
d000e6c4:                          006687b3             add     a5,a3,t1
d000e6c8:                          86b2                 mv      a3,a2
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:227

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);

  size_t end = len;
  for (; end > tail_offset; --end) {
d000e6ca:                      /-- 00f66363             bltu    a2,a5,d000e6d0 <memrchr+0x22>
d000e6ce:                      |   86be                 mv      a3,a5
d000e6d0:                      \-> 0ff5f393             andi    t2,a1,255
d000e6d4:                   /--/-X 00c7fd63             bgeu    a5,a2,d000e6ee <memrchr+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:229
    const size_t i = end - 1;
    if (ptr8[i] == value8) {
d000e6d8:                   |  |   00c50733             add     a4,a0,a2
d000e6dc:                   |  |   fff74583             lbu     a1,-1(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:228
    const size_t i = end - 1;
d000e6e0:                   |  |   fff60713             addi    a4,a2,-1
d000e6e4:                   |  |   863a                 mv      a2,a4
d000e6e6:                   |  \-- fe7597e3             bne     a1,t2,d000e6d4 <memrchr+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:260
    if (ptr8[i] == value8) {
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e6ea:                   |      953a                 add     a0,a0,a4
d000e6ec:                   |      8082                 ret
d000e6ee:                   \----> 010105b7             lui     a1,0x1010
d000e6f2:                          10158593             addi    a1,a1,257 # 1010101 <_rom_ext_virtual_size+0xf90101>
repeat_byte_to_u32():
/proc/self/cwd/sw/device/lib/base/memory.c:56
  return byte << 24 | byte << 16 | byte << 8 | byte;
d000e6f6:                          02b382b3             mul     t0,t2,a1
d000e6fa:                          00ff0837             lui     a6,0xff0
d000e6fe:                          65c1                 lui     a1,0x10
d000e700:                          f0058793             addi    a5,a1,-256 # ff00 <_stack_size+0xbf00>
d000e704:                          0ff00893             li      a7,255
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:234
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e708:       /--------------/-X 04d37563             bgeu    t1,a3,d000e752 <memrchr+0xa4>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e70c:       |              |   00d50633             add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e710:       |              |   ffc62583             lw      a1,-4(a2)
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:237
    uint32_t bits_eq = ~(word ^ value32);
d000e714:       |              |   0055c733             xor     a4,a1,t0
/proc/self/cwd/sw/device/lib/base/memory.c:240
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e718:       |              |   01875593             srli    a1,a4,0x18
d000e71c:       |  /-----------|-- cd95                 beqz    a1,d000e758 <memrchr+0xaa>
d000e71e:       |  |           |   fff74713             not     a4,a4
/proc/self/cwd/sw/device/lib/base/memory.c:243
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e722:       |  |           |   010775b3             and     a1,a4,a6
d000e726:       |  |  /--------|-- 03058c63             beq     a1,a6,d000e75e <memrchr+0xb0>
/proc/self/cwd/sw/device/lib/base/memory.c:246
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e72a:       |  |  |        |   00f775b3             and     a1,a4,a5
d000e72e:       |  |  |  /-----|-- 02f58b63             beq     a1,a5,d000e764 <memrchr+0xb6>
/proc/self/cwd/sw/device/lib/base/memory.c:249
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e732:       |  |  |  |     |   0ff77593             andi    a1,a4,255
/proc/self/cwd/sw/device/lib/base/memory.c:235
    const size_t i = end - sizeof(uint32_t);
d000e736:       |  |  |  |     |   16f1                 addi    a3,a3,-4
d000e738:       |  |  |  |     \-- fd1598e3             bne     a1,a7,d000e708 <memrchr+0x5a>
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e73c:       |  |  |  |         9536                 add     a0,a0,a3
d000e73e:       |  |  |  |         8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:255
    if (ptr8[i] == value8) {
d000e740:       |  |  |  |     /-> 00d505b3             add     a1,a0,a3
d000e744:       |  |  |  |     |   fff5c583             lbu     a1,-1(a1)
/proc/self/cwd/sw/device/lib/base/memory.c:254
    const size_t i = end - 1;
d000e748:       |  |  |  |     |   fff68613             addi    a2,a3,-1
d000e74c:       |  |  |  |     |   86b2                 mv      a3,a2
d000e74e:       |  |  |  |  /--|-- 00758e63             beq     a1,t2,d000e76a <memrchr+0xbc>
/proc/self/cwd/sw/device/lib/base/memory.c:253
  for (; end > 0; --end) {
d000e752:       \--|--|--|--|--\-X f6fd                 bnez    a3,d000e740 <memrchr+0x92>
d000e754:          |  |  |  |      4501                 li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e756:          |  |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:241
      return (void *)&ptr8[i + 3];
d000e758:          \--|--|--|----> fff60513             addi    a0,a2,-1
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e75c:             |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:244
      return (void *)&ptr8[i + 2];
d000e75e:             \--|--|----> ffe60513             addi    a0,a2,-2
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e762:                |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:247
      return (void *)&ptr8[i + 1];
d000e764:                \--|----> ffd60513             addi    a0,a2,-3
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e768:                   |      8082                 ret
d000e76a:                   \----> 9532                 add     a0,a0,a2
d000e76c:                          8082                 ret

d000e76e <device_fpga_version_print>:
device_fpga_version_print():
/proc/self/cwd/sw/device/lib/arch/device_sim_verilator.c:57

const uintptr_t kDeviceLogBypassUartAddress = 0;

const bool kJitterEnabled = false;

void device_fpga_version_print(void) {}
d000e76e:       8082                    ret

Disassembly of section .shutdown:

d000e770 <shutdown_finalize>:
shutdown_finalize():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:504
 * The shutdown_finalize function goes into the .shutdown section which is
 * placed by the linker script after all other executable code.
 */
__attribute__((section(".shutdown")))
#endif
void shutdown_finalize(rom_error_t reason) {
d000e770:                       c01405b7                lui     a1,0xc0140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e774:                       59cc                    lw      a1,52(a1)
d000e776:                       40000637                lui     a2,0x40000
d000e77a:                       167d                    addi    a2,a2,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e77c:                       00c5feb3                and     t4,a1,a2
d000e780:                       e2291637                lui     a2,0xe2291
d000e784:                       1ad6b6b7                lui     a3,0x1ad6b
d000e788:                       5ac68693                addi    a3,a3,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1aceb5ac>
d000e78c:                       aa560613                addi    a2,a2,-1371 # e2290aa5 <_stack_end+0x2270aa5>
shutdown_redact_policy_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:270
  switch (raw_state) {
d000e790:                   /-- 03d6cb63                blt     a3,t4,d000e7c6 <shutdown_finalize+0x56>
d000e794:                   |   0e73a6b7                lui     a3,0xe73a
d000e798:                   |   ce668713                addi    a4,a3,-794 # e739ce6 <_rom_ext_virtual_size+0xe6b9ce6>
d000e79c:             /-----|-- 05d74e63                blt     a4,t4,d000e7f8 <shutdown_finalize+0x88>
d000e7a0:             |     |   021086b7                lui     a3,0x2108
d000e7a4:             |     |   42168693                addi    a3,a3,1057 # 2108421 <_rom_ext_virtual_size+0x2088421>
d000e7a8:       /-----|-----|-- 0ade8263                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e7ac:       |     |     |   063196b7                lui     a3,0x6319
d000e7b0:       |     |     |   c6368693                addi    a3,a3,-925 # 6318c63 <_rom_ext_virtual_size+0x6298c63>
d000e7b4:       +-----|-----|-- 08de8c63                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e7b8:       |     |     |   0a5296b7                lui     a3,0xa529
d000e7bc:       |     |     |   4a568693                addi    a3,a3,1189 # a5294a5 <_rom_ext_virtual_size+0xa4a94a5>
d000e7c0:       +-----|-----|-- 08de8663                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e7c4:       |  /--|-----|-- a041                    j       d000e844 <shutdown_finalize+0xd4>
d000e7c6:       |  |  |     \-> 2318c6b7                lui     a3,0x2318c
d000e7ca:       |  |  |         63068713                addi    a4,a3,1584 # 2318c630 <_rom_ext_virtual_size+0x2310c630>
d000e7ce:       |  |  |  /----- 05d74663                blt     a4,t4,d000e81a <shutdown_finalize+0xaa>
d000e7d2:       |  |  |  |      1ad6b6b7                lui     a3,0x1ad6b
d000e7d6:       |  |  |  |      5ad68693                addi    a3,a3,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1aceb5ad>
d000e7da:       +--|--|--|----- 06de8963                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e7de:       |  |  |  |      1ef7c6b7                lui     a3,0x1ef7c
d000e7e2:       |  |  |  |      def68693                addi    a3,a3,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1eefbdef>
d000e7e6:       +--|--|--|----- 06de8363                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e7ea:       |  |  |  |      21084637                lui     a2,0x21084
d000e7ee:       |  |  |  |      21060613                addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21004210>
d000e7f2:       |  |  |  |  /-- 04ce8463                beq     t4,a2,d000e83a <shutdown_finalize+0xca>
d000e7f6:       |  +--|--|--|-- a0b9                    j       d000e844 <shutdown_finalize+0xd4>
d000e7f8:       |  |  \--|--|-> ce768693                addi    a3,a3,-793
d000e7fc:       +--|-----|--|-- 04de8863                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e800:       |  |     |  |   1294a6b7                lui     a3,0x1294a
d000e804:       |  |     |  |   52968693                addi    a3,a3,1321 # 1294a529 <_rom_ext_virtual_size+0x128ca529>
d000e808:       +--|-----|--|-- 04de8263                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e80c:       |  |     |  |   16b5b6b7                lui     a3,0x16b5b
d000e810:       |  |     |  |   d6b68693                addi    a3,a3,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16adad6b>
d000e814:       +--|-----|--|-- 02de8c63                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e818:       |  +-----|--|-- a035                    j       d000e844 <shutdown_finalize+0xd4>
d000e81a:       |  |     \--|-> 63168693                addi    a3,a3,1585
d000e81e:       |  |        +-- 00de8e63                beq     t4,a3,d000e83a <shutdown_finalize+0xca>
d000e822:       |  |        |   2739d6b7                lui     a3,0x2739d
d000e826:       |  |        |   e7368693                addi    a3,a3,-397 # 2739ce73 <_rom_ext_virtual_size+0x2731ce73>
d000e82a:       +--|--------|-- 02de8163                beq     t4,a3,d000e84c <shutdown_finalize+0xdc>
d000e82e:       |  |        |   25295637                lui     a2,0x25295
d000e832:       |  |        |   a5260613                addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25214a52>
d000e836:       |  +--------|-- 00ce9763                bne     t4,a2,d000e844 <shutdown_finalize+0xd4>
d000e83a:       |  |        \-> c0131637                lui     a2,0xc0131
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e83e:       |  |            36062603                lw      a2,864(a2) # c0131360 <_stack_end+0xe0111360>
d000e842:       +--|----------- a029                    j       d000e84c <shutdown_finalize+0xdc>
d000e844:       |  \----------> 48eb5637                lui     a2,0x48eb5
d000e848:       |               bd960613                addi    a2,a2,-1063 # 48eb4bd9 <_epmp_stack_guard_na4+0x10eadbd9>
d000e84c:       \-------------> 73900693                li      a3,1849
shutdown_redact_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:238
  if (reason == kErrorOk) {
d000e850:                   /-- 00d51463                bne     a0,a3,d000e858 <shutdown_finalize+0xe8>
d000e854:                   |   4501                    li      a0,0
d000e856:             /-----|-- a835                    j       d000e892 <shutdown_finalize+0x122>
d000e858:             |     \-> e22916b7                lui     a3,0xe2291
d000e85c:             |         aa568693                addi    a3,a3,-1371 # e2290aa5 <_stack_end+0x2270aa5>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:241
  switch (severity) {
d000e860:             +-------- 02d60963                beq     a2,a3,d000e892 <shutdown_finalize+0x122>
d000e864:             |         3367d6b7                lui     a3,0x3367d
d000e868:             |         3d468693                addi    a3,a3,980 # 3367d3d4 <_rom_ext_virtual_size+0x335fd3d4>
d000e86c:             |  /----- 00d60d63                beq     a2,a3,d000e886 <shutdown_finalize+0x116>
d000e870:             |  |      1e7916b7                lui     a3,0x1e791
d000e874:             |  |      12368693                addi    a3,a3,291 # 1e791123 <_rom_ext_virtual_size+0x1e711123>
d000e878:             |  |  /-- 00d61c63                bne     a2,a3,d000e890 <shutdown_finalize+0x120>
d000e87c:             |  |  |   ff000637                lui     a2,0xff000
d000e880:             |  |  |   0ff60613                addi    a2,a2,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000e884:             |  |  |   8d71                    and     a0,a0,a2
d000e886:             |  \--|-> 01000637                lui     a2,0x1000
d000e88a:             |     |   167d                    addi    a2,a2,-1
d000e88c:             |     |   8d71                    and     a0,a0,a2
d000e88e:             +-----|-- a011                    j       d000e892 <shutdown_finalize+0x122>
d000e890:             |     \-> 557d                    li      a0,-1
d000e892:             \-------> c00006b7                lui     a3,0xc0000
d000e896:                       4609                    li      a2,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e898:                       d290                    sw      a2,32(a3)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e89a:                       4a90                    lw      a2,16(a3)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000e89c:                       00166613                ori     a2,a2,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e8a0:                       ca90                    sw      a2,16(a3)
d000e8a2:                       3a564837                lui     a6,0x3a564
d000e8a6:                       64280613                addi    a2,a6,1602 # 3a564642 <_epmp_stack_guard_na4+0x255d642>
d000e8aa:                       ced0                    sw      a2,28(a3)
d000e8ac:                       003a58b7                lui     a7,0x3a5
d000e8b0:                       64688613                addi    a2,a7,1606 # 3a5646 <_rom_ext_virtual_size+0x325646>
d000e8b4:                       ced0                    sw      a2,28(a3)
d000e8b6:                       6611                    lui     a2,0x4
d000e8b8:                       a5660393                addi    t2,a2,-1450 # 3a56 <_static_critical_size+0x1a92>
d000e8bc:                       0076ae23                sw      t2,28(a3) # c000001c <_stack_end+0xdffe001c>
d000e8c0:                       03a00293                li      t0,58
d000e8c4:                       0056ae23                sw      t0,28(a3)
d000e8c8:                       4e21                    li      t3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e8ca:                       4721                    li      a4,8
d000e8cc:                       00000617                auipc   a2,0x0
d000e8d0:                       48860613                addi    a2,a2,1160 # d000ed54 <kSpiDeviceSfdpTable+0x84>
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e8d4:                /----- cf19                    beqz    a4,d000e8f2 <shutdown_finalize+0x182>
d000e8d6:                |      4781                    li      a5,0
d000e8d8:                |      4771                    li      a4,28
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000e8da:                |  /-> 00e555b3                srl     a1,a0,a4
d000e8de:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e8e0:                |  |   95b2                    add     a1,a1,a2
d000e8e2:                |  |   0005c583                lbu     a1,0(a1) # c0140000 <_stack_end+0xe0120000>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e8e6:                |  |   cecc                    sw      a1,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e8e8:                |  |   0785                    addi    a5,a5,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e8ea:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e8ec:                |  |   1771                    addi    a4,a4,-4
d000e8ee:                |  \-- feb7e6e3                bltu    a5,a1,d000e8da <shutdown_finalize+0x16a>
d000e8f2:                \----> 4335                    li      t1,13
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e8f4:                       0066ae23                sw      t1,28(a3)
d000e8f8:                       4529                    li      a0,10
d000e8fa:                       cec8                    sw      a0,28(a3)
d000e8fc:                       34c80593                addi    a1,a6,844
d000e900:                       cecc                    sw      a1,28(a3)
d000e902:                       64388593                addi    a1,a7,1603
d000e906:                       cecc                    sw      a1,28(a3)
d000e908:                       0076ae23                sw      t2,28(a3)
d000e90c:                       0056ae23                sw      t0,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e910:                /----- 020e0263                beqz    t3,d000e934 <shutdown_finalize+0x1c4>
d000e914:                |      4681                    li      a3,0
d000e916:                |      4771                    li      a4,28
d000e918:                |      c00007b7                lui     a5,0xc0000
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e91c:                |  /-> 00eed5b3                srl     a1,t4,a4
d000e920:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e922:                |  |   95b2                    add     a1,a1,a2
d000e924:                |  |   0005c583                lbu     a1,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e928:                |  |   cfcc                    sw      a1,28(a5)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e92a:                |  |   0685                    addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e92c:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e92e:                |  |   1771                    addi    a4,a4,-4
d000e930:                |  \-- feb6e6e3                bltu    a3,a1,d000e91c <shutdown_finalize+0x1ac>
d000e934:                \----> c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e938:                       0065ae23                sw      t1,28(a1) # c000001c <_stack_end+0xdffe001c>
d000e93c:                       cdc8                    sw      a0,28(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:391
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000e93e:                       b0001073                csrw    mcycle,zero
d000e942:                       00001517                auipc   a0,0x1
d000e946:                       1c250513                addi    a0,a0,450 # d000fb04 <kUartTxFifoCpuCycles>
d000e94a:                       4108                    lw      a0,0(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e94c:                   /-> 49d0                    lw      a2,20(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:398
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000e94e:                   |   b00026f3                csrr    a3,mcycle
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000e952:                   |   8a21                    andi    a2,a2,8
d000e954:                   |   00163613                seqz    a2,a2
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:399
  } while (mcycle < kUartTxFifoCpuCycles && !tx_idle);
d000e958:                   |   00a6b6b3                sltu    a3,a3,a0
d000e95c:                   |   8e75                    and     a2,a2,a3
d000e95e:                   \-- f67d                    bnez    a2,d000e94c <shutdown_finalize+0x1dc>
d000e960:                       c11f0537                lui     a0,0xc11f0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e964:                       00052423                sw      zero,8(a0) # c11f0008 <_stack_end+0xe11d0008>
d000e968:                       c1140537                lui     a0,0xc1140
d000e96c:                       04000593                li      a1,64
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000e970:                       cd0c                    sw      a1,24(a0)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000e972:                       cd0c                    sw      a1,24(a0)
d000e974:                       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e976:                       c94c                    sw      a1,20(a0)
d000e978:                       cd4c                    sw      a1,28(a0)
d000e97a:                       c0410837                lui     a6,0xc0410
d000e97e:                       4619                    li      a2,6
d000e980:                       00c82223                sw      a2,4(a6) # c0410004 <_stack_end+0xe03f0004>
d000e984:                       c10006b7                lui     a3,0xc1000
d000e988:                       0006a823                sw      zero,16(a3) # c1000010 <_stack_end+0xe0fe0010>
d000e98c:                       c11c06b7                lui     a3,0xc11c0
d000e990:                       0006a023                sw      zero,0(a3) # c11c0000 <_stack_end+0xe11a0000>
d000e994:                       0006a423                sw      zero,8(a3)
d000e998:                       80000737                lui     a4,0x80000
d000e99c:                       177d                    addi    a4,a4,-1
d000e99e:                       009897b7                lui     a5,0x989
d000e9a2:                       d0078793                addi    a5,a5,-768 # 988d00 <_rom_ext_virtual_size+0x908d00>
d000e9a6:                       4509                    li      a0,2
shutdown_hang():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:452
  asm volatile(
d000e9a8:                   /-> cacc                    sw      a1,20(a3)
d000e9aa:                   |   00c82223                sw      a2,4(a6)
d000e9ae:                   |   00000297                auipc   t0,0x0
d000e9b2:                   |   ffa28293                addi    t0,t0,-6 # d000e9a8 <shutdown_finalize+0x238>
d000e9b6:                   |   0022d293                srli    t0,t0,0x2
d000e9ba:                   |   3b029073                csrw    pmpaddr0,t0
d000e9be:                   |   00000297                auipc   t0,0x0
d000e9c2:                   |   04a28293                addi    t0,t0,74 # d000ea08 <_text_end>
d000e9c6:                   |   0022d293                srli    t0,t0,0x2
d000e9ca:                   |   3b129073                csrw    pmpaddr1,t0
d000e9ce:                   |   3b271073                csrw    pmpaddr2,a4
d000e9d2:                   |   3a079073                csrw    pmpcfg0,a5
d000e9d6:                   |   3a101073                csrw    pmpcfg1,zero
d000e9da:                   |   3a201073                csrw    pmpcfg2,zero
d000e9de:                   |   3a301073                csrw    pmpcfg3,zero
d000e9e2:                   |   74751073                csrw    0x747,a0
d000e9e6:                   |   10500073                wfi
d000e9ea:                   |   10500073                wfi
d000e9ee:                   |   10500073                wfi
d000e9f2:                   |   10500073                wfi
d000e9f6:                   +-- bf4d                    j       d000e9a8 <shutdown_finalize+0x238>
d000e9f8:                   |   10500073                wfi
d000e9fc:                   |   10500073                wfi
d000ea00:                   +-- b765                    j       d000e9a8 <shutdown_finalize+0x238>
d000ea02:                   |   10500073                wfi
d000ea06:                   \-- b74d                    j       d000e9a8 <shutdown_finalize+0x238>
