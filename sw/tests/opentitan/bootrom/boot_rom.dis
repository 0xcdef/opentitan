
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xd0008180

Program Header:
    LOAD off    0x00001000 vaddr 0xd0008000 paddr 0xd0008000 align 2**12
         filesz 0x00007694 memsz 0x00007694 flags r-x
    LOAD off    0x00000000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00000000 memsz 0x000024fc flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .vectors          00000180  d0008000  d0008000  00001000  2**8  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .crt              00000680  d0008180  d0008180  00001180  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             00005b3c  d0008800  d0008800  00001800  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .shutdown         00000298  d000e33c  d000e33c  0000733c  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata           000010b4  d000e5e0  d000e5e0  000075e0  2**5  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .static_critical  00001fc4  e0000000  e0000000  00009000  2**2  ALLOC
  6 .data             00000084  e0001fc4  e0001fc4  00009000  2**2  ALLOC
  7 .bss              000004b4  e0002048  e0002048  00009000  2**3  ALLOC
  8 .logs.fields      0000008c  00000000  00000000  00008694  2**2  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  00008720  2**0  CONTENTS, READONLY
 10 .debug_info       00016904  00000000  00000000  00008746  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev     000048bf  00000000  00000000  0001f04a  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges    00000088  00000000  00000000  00023909  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000e52b  00000000  00000000  00023991  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc        0000d329  00000000  00000000  00031ebc  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges     00001320  00000000  00000000  0003f1e5  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str        00007fcd  00000000  00000000  00040505  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame      000014f8  00000000  00000000  000484d4  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
d0008000 l    d  .vectors       00000000 .vectors
d0008180 l    d  .crt   00000000 .crt
d0008800 l    d  .text  00000000 .text
d000e33c l    d  .shutdown      00000000 .shutdown
d000e5e0 l    d  .rodata        00000000 .rodata
e0000000 l    d  .static_critical       00000000 .static_critical
e0001fc4 l    d  .data  00000000 .data
e0002048 l    d  .bss   00000000 .bss
00000000 l    d  .logs.fields   00000000 .logs.fields
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    df *ABS*  00000000 rom_start.o
c0001073 l       *ABS*  00000000 UNIMP
00030d40 l       *ABS*  00000000 WDOG_BITE_THOLD
00036ee8 l       *ABS*  00000000 WDOG_BARK_THOLD
d0008000 l       .vectors       00000000 
d0008000 l       .vectors       00000000 
d0008080 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008180 l       .crt   00000000 
d0008180 l       .crt   00000000 
d0008198 l       .crt   00000000 .SECURE_BOOT
d0008198 l       .crt   00000000 
d00081a0 l       .crt   00000000 kRomStartBootMaybeHalt
d00081a0 l       .crt   00000000 
d00081b0 l       .crt   00000000 
d00081b2 l       .crt   00000000 kRomStartBootExecEn
d00081b2 l       .crt   00000000 
d00081b2 l       .crt   00000000 
d00081e4 l       .crt   00000000 kRomStartStoreT1ToBiteThold
d00081e4 l       .crt   00000000 
d00081ee l       .crt   00000000 kRomStartWatchdogEnabled
d00081ee l       .crt   00000000 
00000000 l       .debug_info    00000000 
00000000 l       .debug_abbrev  00000000 
d0008180 l       .vectors       00000000 
d000839a l       .crt   00000000 
00000000 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 rom.c
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008802 l       .text  00000000 
d000880a l       .text  00000000 
d000880c l       .text  00000000 
d000880c l       .text  00000000 
d0008810 l       .text  00000000 
d0008810 l       .text  00000000 
d0008818 l       .text  00000000 
d0008818 l       .text  00000000 
d000881c l       .text  00000000 
d0008828 l       .text  00000000 
d000882e l       .text  00000000 
d000882e l       .text  00000000 
d0008836 l       .text  00000000 
d0008838 l       .text  00000000 
d0008838 l       .text  00000000 
d000883a l       .text  00000000 
d000883a l       .text  00000000 
d000883e l       .text  00000000 
d0008840 l       .text  00000000 
00000000 l     O .logs.fields   00000014 init_spi_host.kLogFields
d0008840 l       .text  00000000 
d000884c l       .text  00000000 
d000884c l       .text  00000000 
d000884e l       .text  00000000 
d000884e l       .text  00000000 
d0008866 l       .text  00000000 
d0008866 l       .text  00000000 
d000886c l       .text  00000000 
d0008870 l       .text  00000000 
d0008870 l       .text  00000000 
d0008878 l       .text  00000000 
d000887a l       .text  00000000 
d000887c l       .text  00000000 
d000887c l       .text  00000000 
d0008880 l       .text  00000000 
d0008882 l       .text  00000000 
00000014 l     O .logs.fields   00000014 init_spi_host.kLogFields.2
d0008882 l       .text  00000000 
d000888e l       .text  00000000 
d000888e l       .text  00000000 
d0008890 l       .text  00000000 
d0008890 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088ae l       .text  00000000 
d00088b2 l       .text  00000000 
d00088b2 l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088c0 l       .text  00000000 
d00088c0 l       .text  00000000 
d00088f4 l       .text  00000000 
d00088f4 l       .text  00000000 
e000204c l     O .bss   00000004 spi_host
d00088f4 l       .text  00000000 
d0008904 l       .text  00000000 
d0008904 l       .text  00000000 
d0008910 l       .text  00000000 
d0008910 l       .text  00000000 
d0008912 l       .text  00000000 
d0008912 l       .text  00000000 
d0008914 l       .text  00000000 
d0008914 l       .text  00000000 
d0008918 l       .text  00000000 
00000028 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields
d0008918 l       .text  00000000 
d0008924 l       .text  00000000 
d0008924 l       .text  00000000 
d0008926 l       .text  00000000 
d0008926 l       .text  00000000 
d000893e l       .text  00000000 
d000893e l       .text  00000000 
d0008944 l       .text  00000000 
d0008948 l       .text  00000000 
d0008948 l       .text  00000000 
d000895c l       .text  00000000 
d000895c l       .text  00000000 
d0008966 l       .text  00000000 
d000896a l       .text  00000000 
d0008972 l       .text  00000000 
d0008972 l       .text  00000000 
d0008984 l       .text  00000000 
0000003c l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.6
d0008998 l       .text  00000000 
d0008998 l       .text  00000000 
d000899a l       .text  00000000 
d000899a l       .text  00000000 
d000899e l       .text  00000000 
d000899e l       .text  00000000 
d00089b8 l       .text  00000000 
d00089be l       .text  00000000 
d00089be l       .text  00000000 
d00089e2 l       .text  00000000 
d00089f2 l       .text  00000000 
d0008a06 l       .text  00000000 
d0008a06 l       .text  00000000 
d0008a12 l       .text  00000000 
d0008a14 l       .text  00000000 
d0008a16 l       .text  00000000 
d0008a16 l       .text  00000000 
d0008a1a l       .text  00000000 
d0008a24 l       .text  00000000 
d0008a24 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a26 l       .text  00000000 
d0008a38 l       .text  00000000 
d0008a38 l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a42 l       .text  00000000 
d0008a42 l       .text  00000000 
d0008a46 l       .text  00000000 
d0008a48 l       .text  00000000 
d0008a4a l       .text  00000000 
d0008a4c l       .text  00000000 
d0008a4e l       .text  00000000 
d0008a50 l       .text  00000000 
d0008a52 l       .text  00000000 
d0008a56 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a58 l       .text  00000000 
d0008a5a l       .text  00000000 
d0008a5c l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a62 l       .text  00000000 
d0008a66 l       .text  00000000 
d0008a6a l       .text  00000000 
d0008a6e l       .text  00000000 
d0008a6e l       .text  00000000 
d0008a7c l       .text  00000000 
d0008a7c l       .text  00000000 
d0008a7e l       .text  00000000 
d0008a80 l       .text  00000000 
d0008a84 l       .text  00000000 
00000050 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.9
d0008a84 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a90 l       .text  00000000 
d0008a92 l       .text  00000000 
d0008a92 l       .text  00000000 
d0008aaa l       .text  00000000 
d0008aaa l       .text  00000000 
d0008ab0 l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008ab4 l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aec l       .text  00000000 
d0008aee l       .text  00000000 
d0008afc l       .text  00000000 
d0008b04 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b08 l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b24 l       .text  00000000 
d0008b26 l       .text  00000000 
d0008b26 l       .text  00000000 
d0008b2a l       .text  00000000 
d0008b2a l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b2e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b4e l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6a l       .text  00000000 
d0008b6e l       .text  00000000 
d0008b6e l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b72 l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b80 l       .text  00000000 
d0008b80 l       .text  00000000 
d0008b84 l       .text  00000000 
d0008b88 l       .text  00000000 
d0008b8c l       .text  00000000 
d0008b8c l       .text  00000000 
d0008b94 l       .text  00000000 
d0008b94 l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9e l       .text  00000000 
d0008b9e l       .text  00000000 
d0008ba2 l       .text  00000000 
d0008ba6 l       .text  00000000 
d0008ba6 l       .text  00000000 
d0008bb0 l       .text  00000000 
d0008bb4 l       .text  00000000 
d0008bb4 l       .text  00000000 
d0008bb6 l       .text  00000000 
d0008bba l       .text  00000000 
d0008bba l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bc4 l       .text  00000000 
d0008bc4 l       .text  00000000 
d0008bc6 l       .text  00000000 
d0008bc6 l       .text  00000000 
d0008bca l       .text  00000000 
d0008bca l       .text  00000000 
d0008bce l       .text  00000000 
d0008bd0 l       .text  00000000 
d0008bd0 l       .text  00000000 
d0008bd0 l       .text  00000000 
d0008bd0 l       .text  00000000 
d0008bd4 l       .text  00000000 
d0008bd4 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008be4 l       .text  00000000 
d0008be4 l       .text  00000000 
d0008be8 l       .text  00000000 
d0008be8 l       .text  00000000 
d0008bea l       .text  00000000 
d0008bec l       .text  00000000 
d0008bf0 l       .text  00000000 
d0008bf4 l       .text  00000000 
d0008bf4 l       .text  00000000 
d0008bfa l       .text  00000000 
d0008bfa l       .text  00000000 
d0008bfc l       .text  00000000 
d0008bfc l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c10 l       .text  00000000 
d0008c10 l       .text  00000000 
d0008c14 l       .text  00000000 
d0008c16 l       .text  00000000 
d0008c16 l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c22 l       .text  00000000 
d0008c22 l       .text  00000000 
d0008c26 l       .text  00000000 
d0008c26 l       .text  00000000 
d0008c28 l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c2c l       .text  00000000 
d0008c30 l       .text  00000000 
d0008c30 l       .text  00000000 
d0008c34 l       .text  00000000 
d0008c3a l       .text  00000000 
d0008c3a l       .text  00000000 
d0008c3e l       .text  00000000 
d0008c3e l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c42 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c4c l       .text  00000000 
d0008c4c l       .text  00000000 
d0008c6e l       .text  00000000 
d0008c6e l       .text  00000000 
d0008c70 l       .text  00000000 
d0008c70 l       .text  00000000 
d0008c72 l       .text  00000000 
d0008c72 l       .text  00000000 
d0008c74 l       .text  00000000 
d0008c74 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c7c l       .text  00000000 
d0008c8c l       .text  00000000 
d0008c8c l       .text  00000000 
d0008c90 l       .text  00000000 
d0008c94 l       .text  00000000 
d0008c94 l       .text  00000000 
d0008ca0 l       .text  00000000 
d0008ca0 l       .text  00000000 
d0008ca2 l       .text  00000000 
d0008ca2 l       .text  00000000 
d0008cae l       .text  00000000 
d0008cae l       .text  00000000 
d0008cce l       .text  00000000 
d0008cce l       .text  00000000 
d0008cce l       .text  00000000 
d0008cce l       .text  00000000 
d0008cd2 l       .text  00000000 
d0008cd8 l       .text  00000000 
d0008ce4 l       .text  00000000 
d0008ce8 l       .text  00000000 
d0008ce8 l       .text  00000000 
d0008cea l       .text  00000000 
d0008cea l       .text  00000000 
d0008cee l       .text  00000000 
d0008cee l       .text  00000000 
d0008cf2 l       .text  00000000 
d0008d60 l     F .text  0000000c rom_bootstrap_message
d0008cfe l       .text  00000000 
d0008d00 l       .text  00000000 
d0008d00 l       .text  00000000 
d0008d04 l       .text  00000000 
d0008d04 l       .text  00000000 
d0008d08 l       .text  00000000 
d0008d08 l       .text  00000000 
d0008d0c l       .text  00000000 
d0008d0c l       .text  00000000 
d0008d12 l       .text  00000000 
d0008d12 l       .text  00000000 
d0008d16 l       .text  00000000 
d0008d16 l       .text  00000000 
d0008d1a l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d36 l       .text  00000000 
d0008d36 l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d3a l       .text  00000000 
d0008d5a l       .text  00000000 
d0008d5a l       .text  00000000 
d0008d5a l       .text  00000000 
d0008d6c l     F .text  00000224 rom_try_boot
d0008d5a l       .text  00000000 
d0008d5c l       .text  00000000 
d0008d5c l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6c l       .text  00000000 
d0008d6e l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d80 l       .text  00000000 
d0008d9a l       .text  00000000 
d0008d9a l       .text  00000000 
d0008d9a l       .text  00000000 
d0008d9a l       .text  00000000 
d0008dac l       .text  00000000 
d0008dac l       .text  00000000 
d0008dae l       .text  00000000 
d0008dae l       .text  00000000 
d0008db2 l       .text  00000000 
d0008db2 l       .text  00000000 
d0008db6 l       .text  00000000 
d0008dc2 l       .text  00000000 
d0008dc2 l       .text  00000000 
d0008dc4 l       .text  00000000 
d0008dc4 l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dcc l       .text  00000000 
d0008de0 l       .text  00000000 
d0008de0 l       .text  00000000 
d0008de4 l       .text  00000000 
d0008de4 l       .text  00000000 
d0008de8 l       .text  00000000 
d0008de8 l       .text  00000000 
d0008de8 l       .text  00000000 
d0008de8 l       .text  00000000 
d0008dea l       .text  00000000 
d0008dee l       .text  00000000 
d0008dfc l       .text  00000000 
d0008dfe l       .text  00000000 
d0008e00 l       .text  00000000 
d0008e00 l       .text  00000000 
d0008e06 l       .text  00000000 
d0008e06 l       .text  00000000 
d0008e06 l       .text  00000000 
d0008e06 l       .text  00000000 
d0008f90 l     F .text  0000014e rom_verify
d0008e0c l       .text  00000000 
d0008e0c l       .text  00000000 
d0008e20 l       .text  00000000 
d0008e26 l       .text  00000000 
d0008e26 l       .text  00000000 
d0008e26 l       .text  00000000 
d0008e26 l       .text  00000000 
d0008e28 l       .text  00000000 
d0008e28 l       .text  00000000 
d0008e2c l       .text  00000000 
d0008e2c l       .text  00000000 
d0008e30 l       .text  00000000 
d0008e3c l       .text  00000000 
d0008e3e l       .text  00000000 
d0008e3e l       .text  00000000 
d0008e42 l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e54 l       .text  00000000 
d0008e6a l       .text  00000000 
d0008e6a l       .text  00000000 
d0008e6e l       .text  00000000 
d0008e6e l       .text  00000000 
d0008e70 l       .text  00000000 
d0008e70 l       .text  00000000 
d0008e70 l       .text  00000000 
d0008e70 l       .text  00000000 
d0008e86 l       .text  00000000 
d0008e86 l       .text  00000000 
d0008e86 l       .text  00000000 
d0008e86 l       .text  00000000 
d0008e88 l       .text  00000000 
d00090de l     F .text  000003ce rom_boot
d0008e8c l       .text  00000000 
d0008e8c l       .text  00000000 
d0008e8e l       .text  00000000 
d0008e8e l       .text  00000000 
d0008e92 l       .text  00000000 
d0008ea0 l       .text  00000000 
d0008ea0 l       .text  00000000 
d0008ea2 l       .text  00000000 
d0008ea2 l       .text  00000000 
d0008ea6 l       .text  00000000 
d0008eba l       .text  00000000 
d0008eba l       .text  00000000 
d0008eba l       .text  00000000 
d0008eba l       .text  00000000 
d0008ebe l       .text  00000000 
d0008ebe l       .text  00000000 
d0008ebe l       .text  00000000 
d0008ebe l       .text  00000000 
d0008ec0 l       .text  00000000 
d0008ec4 l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ed8 l       .text  00000000 
d0008ede l       .text  00000000 
d0008ede l       .text  00000000 
d0008ee0 l       .text  00000000 
d0008ee0 l       .text  00000000 
d0008ee4 l       .text  00000000 
d0008ee4 l       .text  00000000 
d0008ee8 l       .text  00000000 
d0008ef4 l       .text  00000000 
d0008ef4 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008ef6 l       .text  00000000 
d0008efa l       .text  00000000 
d0008f0e l       .text  00000000 
d0008f0e l       .text  00000000 
d0008f0e l       .text  00000000 
d0008f0e l       .text  00000000 
d0008f10 l       .text  00000000 
d0008f14 l       .text  00000000 
d0008f20 l       .text  00000000 
d0008f3a l       .text  00000000 
d0008f3a l       .text  00000000 
d0008f3e l       .text  00000000 
d0008f3e l       .text  00000000 
d0008f40 l       .text  00000000 
d0008f40 l       .text  00000000 
d0008f40 l       .text  00000000 
d0008f40 l       .text  00000000 
d0008f5a l       .text  00000000 
d0008f5a l       .text  00000000 
d0008f5a l       .text  00000000 
d0008f5a l       .text  00000000 
d0008f5c l       .text  00000000 
d0008f60 l       .text  00000000 
d0008f60 l       .text  00000000 
d0008f62 l       .text  00000000 
d0008f62 l       .text  00000000 
d0008f66 l       .text  00000000 
d0008f66 l       .text  00000000 
d0008f6a l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f7e l       .text  00000000 
d0008f7e l       .text  00000000 
d0008f90 l       .text  00000000 
d0008f90 l       .text  00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a4 l       .crt   00000000 
d00083a6 l       .crt   00000000 
d00083a8 l       .crt   00000000 
d00083aa l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083ba l       .crt   00000000 
d00083ba l       .crt   00000000 
d0008f90 l       .text  00000000 
d0008f90 l       .text  00000000 
d0008f90 l       .text  00000000 
d0008f92 l       .text  00000000 
d0008fa2 l       .text  00000000 
d0008fa2 l       .text  00000000 
d0008fa6 l       .text  00000000 
d0008fbc l       .text  00000000 
d0008fbc l       .text  00000000 
d0008fbe l       .text  00000000 
d0008fbe l       .text  00000000 
d0008fc4 l       .text  00000000 
d0008fc4 l       .text  00000000 
d0008fc4 l       .text  00000000 
d0008fc4 l       .text  00000000 
d0008fc8 l       .text  00000000 
d0008fc8 l       .text  00000000 
d0008fd2 l       .text  00000000 
d0008fd2 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd8 l       .text  00000000 
d0008fd8 l       .text  00000000 
d0008fdc l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fec l       .text  00000000 
d0008fec l       .text  00000000 
d0008ff8 l       .text  00000000 
d0008ffe l       .text  00000000 
d0008ffe l       .text  00000000 
d0009000 l       .text  00000000 
d0009000 l       .text  00000000 
d0009004 l       .text  00000000 
d0009004 l       .text  00000000 
d000900c l       .text  00000000 
d0009018 l       .text  00000000 
d0009018 l       .text  00000000 
d000901c l       .text  00000000 
d000901c l       .text  00000000 
d000901e l       .text  00000000 
d000902a l       .text  00000000 
d000902a l       .text  00000000 
d000902e l       .text  00000000 
d0009030 l       .text  00000000 
d0009030 l       .text  00000000 
d0009032 l       .text  00000000 
d0009032 l       .text  00000000 
d0009036 l       .text  00000000 
d0009036 l       .text  00000000 
d000903a l       .text  00000000 
d000903a l       .text  00000000 
d000903e l       .text  00000000 
d000903e l       .text  00000000 
d000903e l       .text  00000000 
d000903e l       .text  00000000 
d0009042 l       .text  00000000 
d0009046 l       .text  00000000 
d0009048 l       .text  00000000 
d0009048 l       .text  00000000 
d000904a l       .text  00000000 
d000904a l       .text  00000000 
d0009052 l       .text  00000000 
d0009052 l       .text  00000000 
d0009056 l       .text  00000000 
d0009066 l       .text  00000000 
d000906a l       .text  00000000 
d0009070 l       .text  00000000 
d0009070 l       .text  00000000 
d000907a l       .text  00000000 
d000907a l       .text  00000000 
d000907e l       .text  00000000 
d0009082 l       .text  00000000 
d0009082 l       .text  00000000 
d0009088 l       .text  00000000 
d0009088 l       .text  00000000 
d000908e l       .text  00000000 
d000908e l       .text  00000000 
d00090a0 l       .text  00000000 
d00090a0 l       .text  00000000 
d00090ba l       .text  00000000 
d00090ba l       .text  00000000 
d00090ba l       .text  00000000 
d00090ba l       .text  00000000 
d00090bc l       .text  00000000 
d00090bc l       .text  00000000 
d00090c0 l       .text  00000000 
d00090ca l       .text  00000000 
d00090ca l       .text  00000000 
d00090cc l       .text  00000000 
d00090d4 l       .text  00000000 
d00090de l       .text  00000000 
d00090de l       .text  00000000 
d00090de l       .text  00000000 
d00090de l       .text  00000000 
d00090de l       .text  00000000 
d00090e0 l       .text  00000000 
d00090f6 l       .text  00000000 
d00090f6 l       .text  00000000 
d00090fa l       .text  00000000 
d0009114 l       .text  00000000 
d0009114 l       .text  00000000 
d0009116 l       .text  00000000 
d0009116 l       .text  00000000 
d000911e l       .text  00000000 
d000911e l       .text  00000000 
d000911e l       .text  00000000 
d000911e l       .text  00000000 
d0009124 l       .text  00000000 
d0009124 l       .text  00000000 
d0009126 l       .text  00000000 
d0009126 l       .text  00000000 
d000912a l       .text  00000000 
d000912a l       .text  00000000 
d000912e l       .text  00000000 
d000913a l       .text  00000000 
d000913a l       .text  00000000 
d000913e l       .text  00000000 
d000913e l       .text  00000000 
d0009142 l       .text  00000000 
d0009146 l       .text  00000000 
d0009146 l       .text  00000000 
d0009148 l       .text  00000000 
d0009148 l       .text  00000000 
d000914c l       .text  00000000 
d000914c l       .text  00000000 
d0009150 l       .text  00000000 
d000915c l       .text  00000000 
d000915c l       .text  00000000 
d0009164 l       .text  00000000 
d0009166 l       .text  00000000 
d000916a l       .text  00000000 
d0009178 l       .text  00000000 
d0009178 l       .text  00000000 
d000917a l       .text  00000000 
d000917e l       .text  00000000 
d000917e l       .text  00000000 
d0009182 l       .text  00000000 
d0009186 l       .text  00000000 
d0009186 l       .text  00000000 
d000918e l       .text  00000000 
d0009198 l       .text  00000000 
d000919e l       .text  00000000 
d000919e l       .text  00000000 
d00091a2 l       .text  00000000 
d00091a2 l       .text  00000000 
d00091a6 l       .text  00000000 
d00091aa l       .text  00000000 
d00091aa l       .text  00000000 
d00091ae l       .text  00000000 
d00091ae l       .text  00000000 
d00091ae l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b6 l       .text  00000000 
d00091b6 l       .text  00000000 
d00091c8 l       .text  00000000 
d00091c8 l       .text  00000000 
d00091ca l       .text  00000000 
d00091ce l       .text  00000000 
d00091d2 l       .text  00000000 
d00091e2 l       .text  00000000 
d00091e2 l       .text  00000000 
d00091fc l       .text  00000000 
d00091fc l       .text  00000000 
d0009206 l       .text  00000000 
d0009206 l       .text  00000000 
d000920a l       .text  00000000 
d000920a l       .text  00000000 
d000920c l       .text  00000000 
d000920c l       .text  00000000 
d0009210 l       .text  00000000 
d0009210 l       .text  00000000 
d0009214 l       .text  00000000 
d0009220 l       .text  00000000 
d0009220 l       .text  00000000 
d0009226 l       .text  00000000 
d000922a l       .text  00000000 
d000922a l       .text  00000000 
d000922e l       .text  00000000 
d000922e l       .text  00000000 
d0009230 l       .text  00000000 
d0009230 l       .text  00000000 
d0009234 l       .text  00000000 
d0009234 l       .text  00000000 
d0009238 l       .text  00000000 
d0009238 l       .text  00000000 
d000923c l       .text  00000000 
d0009240 l       .text  00000000 
d0009240 l       .text  00000000 
d000924c l       .text  00000000 
d000924c l       .text  00000000 
d000924e l       .text  00000000 
d0009252 l       .text  00000000 
d0009252 l       .text  00000000 
d0009256 l       .text  00000000 
d0009256 l       .text  00000000 
d0009258 l       .text  00000000 
d0009258 l       .text  00000000 
d000925c l       .text  00000000 
d000925c l       .text  00000000 
d0009260 l       .text  00000000 
d000926c l       .text  00000000 
d000926c l       .text  00000000 
d0009270 l       .text  00000000 
d0009270 l       .text  00000000 
d0009274 l       .text  00000000 
d000928c l       .text  00000000 
d000928c l       .text  00000000 
d0009290 l       .text  00000000 
d0009290 l       .text  00000000 
d0009294 l       .text  00000000 
d0009294 l       .text  00000000 
d0009294 l       .text  00000000 
d0009294 l       .text  00000000 
d00092b4 l       .text  00000000 
d00092b4 l       .text  00000000 
d00092b4 l       .text  00000000 
d00092b4 l       .text  00000000 
d00092d0 l       .text  00000000 
d00092d0 l       .text  00000000 
d00092d0 l       .text  00000000 
d00092d0 l       .text  00000000 
d00092de l       .text  00000000 
d00092de l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e4 l       .text  00000000 
d00092f0 l       .text  00000000 
d00092f0 l       .text  00000000 
d00092f4 l       .text  00000000 
d00092f4 l       .text  00000000 
d00092f8 l       .text  00000000 
d0009310 l       .text  00000000 
d0009310 l       .text  00000000 
d0009310 l       .text  00000000 
d0009310 l       .text  00000000 
d0009314 l       .text  00000000 
d0009314 l       .text  00000000 
d0009316 l       .text  00000000 
d0009316 l       .text  00000000 
d0009318 l       .text  00000000 
d000931c l       .text  00000000 
d000931c l       .text  00000000 
d0009328 l       .text  00000000 
d000932c l       .text  00000000 
d000932c l       .text  00000000 
d0009330 l       .text  00000000 
d0009348 l       .text  00000000 
d0009348 l       .text  00000000 
d0009348 l       .text  00000000 
d0009348 l       .text  00000000 
d0009350 l       .text  00000000 
d0009350 l       .text  00000000 
d0009352 l       .text  00000000 
d0009352 l       .text  00000000 
d0009356 l       .text  00000000 
d0009356 l       .text  00000000 
d000935a l       .text  00000000 
d000935a l       .text  00000000 
d0009366 l       .text  00000000 
d000936a l       .text  00000000 
d000936a l       .text  00000000 
d000936e l       .text  00000000 
d0009386 l       .text  00000000 
d0009386 l       .text  00000000 
d0009386 l       .text  00000000 
d0009386 l       .text  00000000 
d000938e l       .text  00000000 
d000938e l       .text  00000000 
d0009392 l       .text  00000000 
d0009392 l       .text  00000000 
d0009396 l       .text  00000000 
d0009396 l       .text  00000000 
d0009398 l       .text  00000000 
d0009398 l       .text  00000000 
d000939c l       .text  00000000 
d000939c l       .text  00000000 
d00093a8 l       .text  00000000 
d00093ac l       .text  00000000 
d00093ac l       .text  00000000 
d00093b0 l       .text  00000000 
d00093b0 l       .text  00000000 
d00093c4 l       .text  00000000 
d00093cc l       .text  00000000 
d00093cc l       .text  00000000 
d00093cc l       .text  00000000 
d00093cc l       .text  00000000 
d00093d2 l       .text  00000000 
d00093d2 l       .text  00000000 
d00093f2 l       .text  00000000 
d00093f2 l       .text  00000000 
d00093f2 l       .text  00000000 
d00093f2 l       .text  00000000 
d00093f6 l       .text  00000000 
d00093fa l       .text  00000000 
d0009412 l       .text  00000000 
d0009412 l       .text  00000000 
d0009412 l       .text  00000000 
d0009412 l       .text  00000000 
d0009416 l       .text  00000000 
d000941a l       .text  00000000 
d0009426 l       .text  00000000 
d000942c l       .text  00000000 
d000942c l       .text  00000000 
d0009436 l       .text  00000000 
d000943a l       .text  00000000 
d000943a l       .text  00000000 
d000943e l       .text  00000000 
d000943e l       .text  00000000 
d0009444 l       .text  00000000 
d0009444 l       .text  00000000 
d0009464 l       .text  00000000 
d0009464 l       .text  00000000 
d0009464 l       .text  00000000 
d0009464 l       .text  00000000 
d0009466 l       .text  00000000 
d0009466 l       .text  00000000 
d000946e l       .text  00000000 
d000946e l       .text  00000000 
d000947e l       .text  00000000 
d0009488 l       .text  00000000 
d0009488 l       .text  00000000 
d000948c l       .text  00000000 
d000948c l       .text  00000000 
d0009494 l       .text  00000000 
d0009494 l       .text  00000000 
d000949c l       .text  00000000 
d000949c l       .text  00000000 
d00094a4 l       .text  00000000 
d00094a4 l       .text  00000000 
d00094ac l       .text  00000000 
d00094ac l       .text  00000000 
d00094ac l       .text  00000000 
00000000 l       .debug_loc     00000000 
0000003c l       .debug_loc     00000000 
00000057 l       .debug_loc     00000000 
00000146 l       .debug_loc     00000000 
00000177 l       .debug_loc     00000000 
000001a8 l       .debug_loc     00000000 
000001fe l       .debug_loc     00000000 
0000024f l       .debug_loc     00000000 
000002a0 l       .debug_loc     00000000 
000002d3 l       .debug_loc     00000000 
00000306 l       .debug_loc     00000000 
00000353 l       .debug_loc     00000000 
000003d1 l       .debug_loc     00000000 
00000431 l       .debug_loc     00000000 
00000462 l       .debug_loc     00000000 
0000047d l       .debug_loc     00000000 
00000498 l       .debug_loc     00000000 
000004be l       .debug_loc     00000000 
000004fd l       .debug_loc     00000000 
0000052e l       .debug_loc     00000000 
00000549 l       .debug_loc     00000000 
0000056f l       .debug_loc     00000000 
00000592 l       .debug_loc     00000000 
000005ad l       .debug_loc     00000000 
000005de l       .debug_loc     00000000 
00000604 l       .debug_loc     00000000 
0000061f l       .debug_loc     00000000 
00000645 l       .debug_loc     00000000 
00000660 l       .debug_loc     00000000 
0000067b l       .debug_loc     00000000 
00000696 l       .debug_loc     00000000 
000006bc l       .debug_loc     00000000 
000006e2 l       .debug_loc     00000000 
00000708 l       .debug_loc     00000000 
0000072e l       .debug_loc     00000000 
00000754 l       .debug_loc     00000000 
0000076f l       .debug_loc     00000000 
0000079c l       .debug_loc     00000000 
000007e6 l       .debug_loc     00000000 
0000080c l       .debug_loc     00000000 
00000832 l       .debug_loc     00000000 
00000858 l       .debug_loc     00000000 
00000873 l       .debug_loc     00000000 
00000899 l       .debug_loc     00000000 
000008b4 l       .debug_loc     00000000 
000008da l       .debug_loc     00000000 
000008f5 l       .debug_loc     00000000 
00000910 l       .debug_loc     00000000 
0000092b l       .debug_loc     00000000 
0000097d l       .debug_loc     00000000 
000009cf l       .debug_loc     00000000 
000009f5 l       .debug_loc     00000000 
00000a10 l       .debug_loc     00000000 
00000a45 l       .debug_loc     00000000 
00000a6b l       .debug_loc     00000000 
00000a86 l       .debug_loc     00000000 
00000ab9 l       .debug_loc     00000000 
00000adf l       .debug_loc     00000000 
00000b08 l       .debug_loc     00000000 
00000b35 l       .debug_loc     00000000 
00000b9d l       .debug_loc     00000000 
00000c05 l       .debug_loc     00000000 
00000c2b l       .debug_loc     00000000 
00000c46 l       .debug_loc     00000000 
00000c82 l       .debug_loc     00000000 
00000ca8 l       .debug_loc     00000000 
00000cce l       .debug_loc     00000000 
00000d9f l       .debug_loc     00000000 
00000e1a l       .debug_loc     00000000 
00000e40 l       .debug_loc     00000000 
00000e5b l       .debug_loc     00000000 
00000e81 l       .debug_loc     00000000 
00000e9c l       .debug_loc     00000000 
00000ec2 l       .debug_loc     00000000 
00000edd l       .debug_loc     00000000 
00000f03 l       .debug_loc     00000000 
00000f29 l       .debug_loc     00000000 
00000f4f l       .debug_loc     00000000 
00000f75 l       .debug_loc     00000000 
00000f9b l       .debug_loc     00000000 
00000fc1 l       .debug_loc     00000000 
00000fe3 l       .debug_loc     00000000 
00001009 l       .debug_loc     00000000 
0000102f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000a8 l       .debug_ranges  00000000 
000000a7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002a65 l       .debug_str     00000000 
00001ec5 l       .debug_str     00000000 
00006918 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00001673 l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
00000e31 l       .debug_str     00000000 
000060c7 l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006a50 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00001681 l       .debug_str     00000000 
0000172a l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
000016f8 l       .debug_str     00000000 
00001718 l       .debug_str     00000000 
00001721 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00001736 l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
00001740 l       .debug_str     00000000 
00001748 l       .debug_str     00000000 
0000663c l       .debug_str     00000000 
000074dd l       .debug_str     00000000 
00001751 l       .debug_str     00000000 
0000175b l       .debug_str     00000000 
00001765 l       .debug_str     00000000 
00001746 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
000003a6 l       .debug_str     00000000 
00000331 l       .debug_str     00000000 
00000346 l       .debug_str     00000000 
0000035f l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000382 l       .debug_str     00000000 
00000394 l       .debug_str     00000000 
0000045f l       .debug_str     00000000 
000003b2 l       .debug_str     00000000 
000003cf l       .debug_str     00000000 
000003ed l       .debug_str     00000000 
00000409 l       .debug_str     00000000 
00000422 l       .debug_str     00000000 
0000043b l       .debug_str     00000000 
000004bc l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000492 l       .debug_str     00000000 
000004a7 l       .debug_str     00000000 
000004fb l       .debug_str     00000000 
000004cf l       .debug_str     00000000 
000004e5 l       .debug_str     00000000 
00000512 l       .debug_str     00000000 
00000522 l       .debug_str     00000000 
00000532 l       .debug_str     00000000 
00000544 l       .debug_str     00000000 
00000557 l       .debug_str     00000000 
0000056f l       .debug_str     00000000 
0000057f l       .debug_str     00000000 
0000058d l       .debug_str     00000000 
00000599 l       .debug_str     00000000 
000005a5 l       .debug_str     00000000 
000005b3 l       .debug_str     00000000 
000005c2 l       .debug_str     00000000 
000005d6 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00000a33 l       .debug_str     00000000 
00000a48 l       .debug_str     00000000 
00000a62 l       .debug_str     00000000 
00000a7a l       .debug_str     00000000 
00000aa4 l       .debug_str     00000000 
00000ac7 l       .debug_str     00000000 
00000aec l       .debug_str     00000000 
00000b05 l       .debug_str     00000000 
00000b21 l       .debug_str     00000000 
00000b3f l       .debug_str     00000000 
00000b62 l       .debug_str     00000000 
00000c53 l       .debug_str     00000000 
00000b78 l       .debug_str     00000000 
00000b8d l       .debug_str     00000000 
00000ba7 l       .debug_str     00000000 
00000bc4 l       .debug_str     00000000 
00000bdc l       .debug_str     00000000 
00000bf2 l       .debug_str     00000000 
00000c0d l       .debug_str     00000000 
00000c25 l       .debug_str     00000000 
00000c41 l       .debug_str     00000000 
00000c61 l       .debug_str     00000000 
00000d28 l       .debug_str     00000000 
00000c75 l       .debug_str     00000000 
00000c87 l       .debug_str     00000000 
00000c98 l       .debug_str     00000000 
00000cb3 l       .debug_str     00000000 
00000cd4 l       .debug_str     00000000 
00000ce9 l       .debug_str     00000000 
00000cfe l       .debug_str     00000000 
00000d12 l       .debug_str     00000000 
00000d35 l       .debug_str     00000000 
00000d48 l       .debug_str     00000000 
00000d63 l       .debug_str     00000000 
00000d82 l       .debug_str     00000000 
00000da2 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000ddb l       .debug_str     00000000 
00000dc6 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00000dfc l       .debug_str     00000000 
00000e10 l       .debug_str     00000000 
00000e7c l       .debug_str     00000000 
00000e27 l       .debug_str     00000000 
00000e4a l       .debug_str     00000000 
00005f09 l       .debug_str     00000000 
00000e56 l       .debug_str     00000000 
00000e5c l       .debug_str     00000000 
00000e61 l       .debug_str     00000000 
00000e72 l       .debug_str     00000000 
00000e77 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00000e90 l       .debug_str     00000000 
00000ea5 l       .debug_str     00000000 
00000ebc l       .debug_str     00000000 
00000ecc l       .debug_str     00000000 
00000eec l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00000f09 l       .debug_str     00000000 
00000f1b l       .debug_str     00000000 
00000f97 l       .debug_str     00000000 
00007ec9 l       .debug_str     00000000 
000021a2 l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
0000706e l       .debug_str     00000000 
0000664a l       .debug_str     00000000 
00000f7e l       .debug_str     00000000 
000067d2 l       .debug_str     00000000 
00001639 l       .debug_str     00000000 
00000f85 l       .debug_str     00000000 
00000f8b l       .debug_str     00000000 
00000f91 l       .debug_str     00000000 
00000f34 l       .debug_str     00000000 
00000f50 l       .debug_str     00000000 
00000f65 l       .debug_str     00000000 
00000fac l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00000fb6 l       .debug_str     00000000 
00000fcb l       .debug_str     00000000 
00000fd7 l       .debug_str     00000000 
00000fe5 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
00001035 l       .debug_str     00000000 
00001695 l       .debug_str     00000000 
0000176f l       .debug_str     00000000 
0000178d l       .debug_str     00000000 
00000040 l       .debug_ranges  00000000 
00000028 l       .debug_ranges  00000000 
0000104b l       .debug_str     00000000 
00001059 l       .debug_str     00000000 
00001065 l       .debug_str     00000000 
0000106f l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00001085 l       .debug_str     00000000 
00001099 l       .debug_str     00000000 
000010b3 l       .debug_str     00000000 
000010c1 l       .debug_str     00000000 
000010cf l       .debug_str     00000000 
000010df l       .debug_str     00000000 
000010f3 l       .debug_str     00000000 
000010fd l       .debug_str     00000000 
0000110f l       .debug_str     00000000 
00001123 l       .debug_str     00000000 
00001156 l       .debug_str     00000000 
00001136 l       .debug_str     00000000 
00001147 l       .debug_str     00000000 
00001165 l       .debug_str     00000000 
00001179 l       .debug_str     00000000 
00001193 l       .debug_str     00000000 
000011a9 l       .debug_str     00000000 
000011c1 l       .debug_str     00000000 
000011cc l       .debug_str     00000000 
000011e0 l       .debug_str     00000000 
000011f1 l       .debug_str     00000000 
000011fb l       .debug_str     00000000 
0000169e l       .debug_str     00000000 
000013aa l       .debug_str     00000000 
000017b2 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
0000120d l       .debug_str     00000000 
0000121c l       .debug_str     00000000 
0000139e l       .debug_str     00000000 
00001236 l       .debug_str     00000000 
00001393 l       .debug_str     00000000 
0000138a l       .debug_str     00000000 
0000123e l       .debug_str     00000000 
000012ec l       .debug_str     00000000 
000073d2 l       .debug_str     00000000 
0000131b l       .debug_str     00000000 
0000132f l       .debug_str     00000000 
0000133d l       .debug_str     00000000 
0000134b l       .debug_str     00000000 
0000135c l       .debug_str     00000000 
00000dcd l       .debug_str     00000000 
00001366 l       .debug_str     00000000 
00001376 l       .debug_str     00000000 
00001381 l       .debug_str     00000000 
00000e04 l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
000012fe l       .debug_str     00000000 
000012e3 l       .debug_str     00000000 
00001274 l       .debug_str     00000000 
0000128c l       .debug_str     00000000 
000012ac l       .debug_str     00000000 
000012c0 l       .debug_str     00000000 
000012d2 l       .debug_str     00000000 
00001296 l       .debug_str     00000000 
00001282 l       .debug_str     00000000 
000016c1 l       .debug_str     00000000 
000017bd l       .debug_str     00000000 
000017d7 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
000017f6 l       .debug_str     00000000 
00001406 l       .debug_str     00000000 
00001804 l       .debug_str     00000000 
000016cc l       .debug_str     00000000 
0000180f l       .debug_str     00000000 
00001827 l       .debug_str     00000000 
0000183f l       .debug_str     00000000 
00000058 l       .debug_ranges  00000000 
00000070 l       .debug_ranges  00000000 
00000090 l       .debug_ranges  00000000 
000013b4 l       .debug_str     00000000 
000013c2 l       .debug_str     00000000 
000016ab l       .debug_str     00000000 
000013c9 l       .debug_str     00000000 
000013e2 l       .debug_str     00000000 
00001414 l       .debug_str     00000000 
000013fd l       .debug_str     00000000 
0000142d l       .debug_str     00000000 
00001448 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
00001477 l       .debug_str     00000000 
00001488 l       .debug_str     00000000 
0000149b l       .debug_str     00000000 
000014bb l       .debug_str     00000000 
000014cd l       .debug_str     00000000 
000014d4 l       .debug_str     00000000 
000014e9 l       .debug_str     00000000 
0000150e l       .debug_str     00000000 
00001502 l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
0000151c l       .debug_str     00000000 
00001535 l       .debug_str     00000000 
00001548 l       .debug_str     00000000 
00001557 l       .debug_str     00000000 
00001564 l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
0000159c l       .debug_str     00000000 
000015af l       .debug_str     00000000 
000015c5 l       .debug_str     00000000 
000015e0 l       .debug_str     00000000 
000015f6 l       .debug_str     00000000 
00001607 l       .debug_str     00000000 
00001621 l       .debug_str     00000000 
0000163c l       .debug_str     00000000 
0000164f l       .debug_str     00000000 
0000165f l       .debug_str     00000000 
000016d5 l       .debug_str     00000000 
000016eb l       .debug_str     00000000 
00001701 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
0000179a l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
d00088be l       .text  00000000 
d0008aec l       .text  00000000 
d0008d60 l       .text  00000000 
d0008d6c l       .text  00000000 
d0008f90 l       .text  00000000 
d00083ba l       .crt   00000000 
d00090de l       .text  00000000 
d00094ac l       .text  00000000 
00000000 l    df *ABS*  00000000 irq_asm.o
d00083bc l       .crt   00000000 
d00083bc l       .crt   00000000 
d00083d2 l       .crt   00000000 
00005f8d l       .debug_info    00000000 
00000ece l       .debug_abbrev  00000000 
d00083d4 l       .crt   00000000 
00000000 l    df *ABS*  00000000 crt.o
d00083d4 l       .crt   00000000 
d00083d4 l       .crt   00000000 
d00083f6 l       .crt   00000000 
d00083f8 l       .crt   00000000 
d00083f8 l       .crt   00000000 
0000f3c7 l       .debug_info    00000000 
00002925 l       .debug_abbrev  00000000 
d0008432 l       .crt   00000000 
00000000 l    df *ABS*  00000000 rom_epmp_init.o
d0008434 l       .crt   00000000 
d0008434 l       .crt   00000000 
00011abf l       .debug_info    00000000 
000034e7 l       .debug_abbrev  00000000 
d00084c0 l       .crt   00000000 
00000000 l    df *ABS*  00000000 boot_policy.c
d00094ac l       .text  00000000 
d00094ac l       .text  00000000 
d00094ac l       .text  00000000 
d00094b0 l       .text  00000000 
d00094b8 l       .text  00000000 
d00094bc l       .text  00000000 
d00094c0 l       .text  00000000 
d00094c4 l       .text  00000000 
d00094c6 l       .text  00000000 
d00094ce l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d0 l       .text  00000000 
d00094dc l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e4 l       .text  00000000 
d00094f2 l       .text  00000000 
d00094f6 l       .text  00000000 
d00094f8 l       .text  00000000 
d00094fc l       .text  00000000 
d0009500 l       .text  00000000 
d0009504 l       .text  00000000 
d0009504 l       .text  00000000 
d0009508 l       .text  00000000 
d000950c l       .text  00000000 
d0009518 l       .text  00000000 
d0009524 l       .text  00000000 
d0009530 l       .text  00000000 
d000953e l       .text  00000000 
d0009542 l       .text  00000000 
d000954e l       .text  00000000 
d000955a l       .text  00000000 
d000955a l       .text  00000000 
d000955e l       .text  00000000 
d000955e l       .text  00000000 
d000955e l       .text  00000000 
d000955e l       .text  00000000 
d0009560 l       .text  00000000 
d0009560 l       .text  00000000 
d0009564 l       .text  00000000 
d0009568 l       .text  00000000 
d000956a l       .text  00000000 
d000956e l       .text  00000000 
d0009574 l       .text  00000000 
d0009574 l       .text  00000000 
d0009578 l       .text  00000000 
d000958a l       .text  00000000 
d000958a l       .text  00000000 
00001055 l       .debug_loc     00000000 
0000109c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000184b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000f0 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00001393 l       .debug_str     00000000 
0000138a l       .debug_str     00000000 
0000123e l       .debug_str     00000000 
000012ec l       .debug_str     00000000 
000073d2 l       .debug_str     00000000 
0000131b l       .debug_str     00000000 
00001ec5 l       .debug_str     00000000 
00000f7e l       .debug_str     00000000 
0000132f l       .debug_str     00000000 
0000133d l       .debug_str     00000000 
0000134b l       .debug_str     00000000 
0000135c l       .debug_str     00000000 
00000dcd l       .debug_str     00000000 
00001366 l       .debug_str     00000000 
00001376 l       .debug_str     00000000 
00001381 l       .debug_str     00000000 
00000e04 l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000012fe l       .debug_str     00000000 
000012e3 l       .debug_str     00000000 
00001274 l       .debug_str     00000000 
0000128c l       .debug_str     00000000 
000012ac l       .debug_str     00000000 
000012c0 l       .debug_str     00000000 
000012d2 l       .debug_str     00000000 
00001296 l       .debug_str     00000000 
00001282 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000ddb l       .debug_str     00000000 
00000dc6 l       .debug_str     00000000 
0000121c l       .debug_str     00000000 
00001877 l       .debug_str     00000000 
0000187e l       .debug_str     00000000 
00001439 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000142d l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001885 l       .debug_str     00000000 
0000179a l       .debug_str     00000000 
0000139e l       .debug_str     00000000 
00001236 l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002a65 l       .debug_str     00000000 
00006918 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000011c l       .debug_frame   00000000 
d00094d0 l       .text  00000000 
d000958a l       .text  00000000 
00000000 l    df *ABS*  00000000 boot_data.c
d000958a l       .text  00000000 
d000958a l       .text  00000000 
d000958a l       .text  00000000 
d000958c l       .text  00000000 
d0009594 l       .text  00000000 
d0009596 l       .text  00000000 
d0009598 l       .text  00000000 
d0009598 l       .text  00000000 
d0009764 l     F .text  0000039a boot_data_active_page_find
d000959c l       .text  00000000 
d000959e l       .text  00000000 
d000959e l       .text  00000000 
d00095a0 l       .text  00000000 
d00095a0 l       .text  00000000 
d00095a4 l       .text  00000000 
d00095a4 l       .text  00000000 
d00095a8 l       .text  00000000 
d00095b4 l       .text  00000000 
d00095b4 l       .text  00000000 
d00095b6 l       .text  00000000 
d00095b6 l       .text  00000000 
d00095b8 l       .text  00000000 
d00095b8 l       .text  00000000 
d00095bc l       .text  00000000 
d00095bc l       .text  00000000 
d00095c0 l       .text  00000000 
d00095c0 l       .text  00000000 
d00095cc l       .text  00000000 
d00095cc l       .text  00000000 
d00095d4 l       .text  00000000 
d00095d4 l       .text  00000000 
d00095dc l       .text  00000000 
d00095dc l       .text  00000000 
d00095dc l       .text  00000000 
d00095dc l       .text  00000000 
d00095de l       .text  00000000 
d00095de l       .text  00000000 
d00095de l       .text  00000000 
d00095de l       .text  00000000 
d00095e0 l       .text  00000000 
d00095e0 l       .text  00000000 
d00095e8 l       .text  00000000 
d00095e8 l       .text  00000000 
d00095ec l       .text  00000000 
d00095ec l       .text  00000000 
d00095f0 l       .text  00000000 
d00095f4 l       .text  00000000 
d00095fc l       .text  00000000 
d0009600 l       .text  00000000 
d0009610 l       .text  00000000 
d0009610 l       .text  00000000 
d0009616 l       .text  00000000 
d000961a l       .text  00000000 
d000961e l       .text  00000000 
d000962c l       .text  00000000 
d000962c l       .text  00000000 
d0009634 l       .text  00000000 
d0009634 l       .text  00000000 
d0009638 l       .text  00000000 
d0009644 l       .text  00000000 
d0009644 l       .text  00000000 
d0009646 l       .text  00000000 
d0009646 l       .text  00000000 
d000964a l       .text  00000000 
d000964a l       .text  00000000 
d000964e l       .text  00000000 
d000964e l       .text  00000000 
d000965e l       .text  00000000 
d000965e l       .text  00000000 
d0009664 l       .text  00000000 
d0009668 l       .text  00000000 
d000966c l       .text  00000000 
d0009682 l       .text  00000000 
d0009682 l       .text  00000000 
d000968a l       .text  00000000 
d000968e l       .text  00000000 
d000969a l       .text  00000000 
d000969a l       .text  00000000 
d000969c l       .text  00000000 
d000969c l       .text  00000000 
d00096a0 l       .text  00000000 
d00096a0 l       .text  00000000 
d00096a4 l       .text  00000000 
d00096a4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096ba l       .text  00000000 
d00096be l       .text  00000000 
d00096c2 l       .text  00000000 
d00096c6 l       .text  00000000 
d00096da l       .text  00000000 
d00096da l       .text  00000000 
d00096de l       .text  00000000 
d00096de l       .text  00000000 
d00096e0 l       .text  00000000 
d00096e0 l       .text  00000000 
d00096e4 l       .text  00000000 
d00096e4 l       .text  00000000 
d00096e8 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f8 l       .text  00000000 
d00096f8 l       .text  00000000 
d00096fa l       .text  00000000 
d000970a l       .text  00000000 
d0009710 l       .text  00000000 
d0009714 l       .text  00000000 
d000971c l       .text  00000000 
d000971c l       .text  00000000 
d0009720 l       .text  00000000 
d0009728 l       .text  00000000 
d0009728 l       .text  00000000 
d000972c l       .text  00000000 
d000972c l       .text  00000000 
d0009730 l       .text  00000000 
d0009730 l       .text  00000000 
d000973a l       .text  00000000 
d000973a l       .text  00000000 
d0009740 l       .text  00000000 
d0009740 l       .text  00000000 
d0009744 l       .text  00000000 
d000974e l       .text  00000000 
d000974e l       .text  00000000 
d0009754 l       .text  00000000 
d000975c l       .text  00000000 
d000975c l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009764 l       .text  00000000 
d0009766 l       .text  00000000 
d0009788 l       .text  00000000 
d000978a l       .text  00000000 
d000978a l       .text  00000000 
d000978c l       .text  00000000 
d000978c l       .text  00000000 
d00097a8 l       .text  00000000 
d00097a8 l       .text  00000000 
d00097a8 l       .text  00000000 
d00097a8 l       .text  00000000 
d00097ac l       .text  00000000 
d00097ae l       .text  00000000 
d00097ae l       .text  00000000 
d00097b2 l       .text  00000000 
d00097b2 l       .text  00000000 
d00097b4 l       .text  00000000 
d000e828 l     O .rodata        00000008 kPages
d00097da l       .text  00000000 
d00097da l       .text  00000000 
d00097e6 l       .text  00000000 
d00097e6 l       .text  00000000 
d00097e8 l       .text  00000000 
d00097f6 l       .text  00000000 
d00097f6 l       .text  00000000 
d00097fa l       .text  00000000 
d00097fa l       .text  00000000 
d00097fe l       .text  00000000 
d00097fe l       .text  00000000 
d0009804 l       .text  00000000 
d0009804 l       .text  00000000 
d000980a l       .text  00000000 
d000980a l       .text  00000000 
d0009814 l       .text  00000000 
d0009814 l       .text  00000000 
d0009818 l       .text  00000000 
d000981c l       .text  00000000 
d0009820 l       .text  00000000 
d0009820 l       .text  00000000 
d000982a l       .text  00000000 
d000982c l       .text  00000000 
d000982c l       .text  00000000 
d000982e l       .text  00000000 
d000982e l       .text  00000000 
d0009832 l       .text  00000000 
d0009832 l       .text  00000000 
d0009836 l       .text  00000000 
d0009842 l       .text  00000000 
d0009842 l       .text  00000000 
d0009844 l       .text  00000000 
d0009846 l       .text  00000000 
d0009848 l       .text  00000000 
d000984a l       .text  00000000 
d000984c l       .text  00000000 
d0009852 l       .text  00000000 
d0009852 l       .text  00000000 
d0009854 l       .text  00000000 
d0009856 l       .text  00000000 
d0009856 l       .text  00000000 
d0009858 l       .text  00000000 
d0009858 l       .text  00000000 
d000985c l       .text  00000000 
d0009868 l       .text  00000000 
d0009868 l       .text  00000000 
d000986e l       .text  00000000 
d000986e l       .text  00000000 
d000987a l       .text  00000000 
d000987c l       .text  00000000 
d000987c l       .text  00000000 
d000987c l       .text  00000000 
d000987c l       .text  00000000 
d0009880 l       .text  00000000 
d0009880 l       .text  00000000 
d0009886 l       .text  00000000 
d0009886 l       .text  00000000 
d0009892 l       .text  00000000 
d0009892 l       .text  00000000 
d0009892 l       .text  00000000 
d0009892 l       .text  00000000 
d0009898 l       .text  00000000 
d0009898 l       .text  00000000 
d000989e l       .text  00000000 
d000989e l       .text  00000000 
d00098a0 l       .text  00000000 
d00098a0 l       .text  00000000 
d00098a2 l       .text  00000000 
d00098a4 l       .text  00000000 
d00098a6 l       .text  00000000 
d00098a6 l       .text  00000000 
d00098a8 l       .text  00000000 
d00098a8 l       .text  00000000 
d00098aa l       .text  00000000 
d00098b0 l       .text  00000000 
d00098b0 l       .text  00000000 
d00098b4 l       .text  00000000 
d00098b4 l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c2 l       .text  00000000 
d00098c2 l       .text  00000000 
d00098c6 l       .text  00000000 
d00098c6 l       .text  00000000 
d00098cc l       .text  00000000 
d00098cc l       .text  00000000 
d00098dc l       .text  00000000 
d00098dc l       .text  00000000 
d00098de l       .text  00000000 
d00098de l       .text  00000000 
d00098e2 l       .text  00000000 
d00098e2 l       .text  00000000 
d00098ee l       .text  00000000 
d00098f0 l       .text  00000000 
d00098f0 l       .text  00000000 
d00098f2 l       .text  00000000 
d00098f2 l       .text  00000000 
d00098f8 l       .text  00000000 
d00098f8 l       .text  00000000 
d0009904 l       .text  00000000 
d0009904 l       .text  00000000 
d0009906 l       .text  00000000 
d000990e l       .text  00000000 
d000990e l       .text  00000000 
d000991a l       .text  00000000 
d000991a l       .text  00000000 
d000991c l       .text  00000000 
d000991c l       .text  00000000 
d0009920 l       .text  00000000 
d0009920 l       .text  00000000 
d0009922 l       .text  00000000 
d0009922 l       .text  00000000 
d0009934 l       .text  00000000 
d0009934 l       .text  00000000 
d0009936 l       .text  00000000 
d0009936 l       .text  00000000 
d000993a l       .text  00000000 
d000993a l       .text  00000000 
d000993e l       .text  00000000 
d0009944 l       .text  00000000 
d0009944 l       .text  00000000 
d0009950 l       .text  00000000 
d0009952 l       .text  00000000 
d0009952 l       .text  00000000 
d0009952 l       .text  00000000 
d0009952 l       .text  00000000 
d0009956 l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d0009966 l       .text  00000000 
d0009966 l       .text  00000000 
d0009968 l       .text  00000000 
d0009968 l       .text  00000000 
d000996c l       .text  00000000 
d000996c l       .text  00000000 
d000997a l       .text  00000000 
d000997a l       .text  00000000 
d000997c l       .text  00000000 
d000997c l       .text  00000000 
d000997e l       .text  00000000 
d000997e l       .text  00000000 
d0009980 l       .text  00000000 
d0009980 l       .text  00000000 
d000998c l       .text  00000000 
d000998c l       .text  00000000 
d000998e l       .text  00000000 
d0009992 l       .text  00000000 
d0009992 l       .text  00000000 
d000999e l       .text  00000000 
d000999e l       .text  00000000 
d00099a0 l       .text  00000000 
d00099a0 l       .text  00000000 
d00099a4 l       .text  00000000 
d00099a4 l       .text  00000000 
d00099a8 l       .text  00000000 
d00099a8 l       .text  00000000 
d00099b8 l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099bc l       .text  00000000 
d00099c4 l       .text  00000000 
d00099c8 l       .text  00000000 
d00099d4 l       .text  00000000 
d00099e8 l       .text  00000000 
d00099f0 l       .text  00000000 
d00099f8 l       .text  00000000 
d00099fe l       .text  00000000 
d00099fe l       .text  00000000 
d00099fe l       .text  00000000 
d00099fe l       .text  00000000 
d0009a02 l       .text  00000000 
d0009a04 l       .text  00000000 
d0009a04 l       .text  00000000 
d0009a04 l       .text  00000000 
d0009a04 l       .text  00000000 
d0009a08 l       .text  00000000 
d0009a0c l       .text  00000000 
d0009a20 l       .text  00000000 
d0009a32 l       .text  00000000 
d0009a46 l       .text  00000000 
d0009a4e l       .text  00000000 
d0009a62 l       .text  00000000 
d0009a74 l       .text  00000000 
d0009a74 l       .text  00000000 
d0009a7a l       .text  00000000 
d0009a7a l       .text  00000000 
d0009a88 l       .text  00000000 
d0009a88 l       .text  00000000 
d0009a90 l       .text  00000000 
d0009a96 l       .text  00000000 
d0009a96 l       .text  00000000 
d0009a98 l       .text  00000000 
d0009a98 l       .text  00000000 
d0009a9c l       .text  00000000 
d0009a9c l       .text  00000000 
d0009a9e l       .text  00000000 
d0009a9e l       .text  00000000 
d0009aaa l       .text  00000000 
d0009aaa l       .text  00000000 
d0009aac l       .text  00000000 
d0009aac l       .text  00000000 
d0009ab4 l       .text  00000000 
d0009ab4 l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ac6 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009afe l       .text  00000000 
d0009afe l       .text  00000000 
d0009afe l       .text  00000000 
d0009afe l       .text  00000000 
d0009afe l       .text  00000000 
d0009b00 l       .text  00000000 
d0009b08 l       .text  00000000 
d0009b0a l       .text  00000000 
d0009b0a l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b12 l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b22 l       .text  00000000 
d0009b22 l       .text  00000000 
d0009b24 l       .text  00000000 
d0009b24 l       .text  00000000 
d0009b32 l       .text  00000000 
d0009b32 l       .text  00000000 
d0009b36 l       .text  00000000 
d0009b36 l       .text  00000000 
d0009b38 l       .text  00000000 
d000e830 l     O .rodata        00000024 kCheckShares
d0009b48 l       .text  00000000 
d0009b48 l       .text  00000000 
d0009b4a l       .text  00000000 
d0009b4c l       .text  00000000 
d0009b50 l       .text  00000000 
d0009b52 l       .text  00000000 
d0009b52 l       .text  00000000 
d0009b54 l       .text  00000000 
d0009b56 l       .text  00000000 
d0009b5a l       .text  00000000 
d0009b5a l       .text  00000000 
d0009b5c l       .text  00000000 
d0009b5c l       .text  00000000 
d0009b66 l       .text  00000000 
d0009b66 l       .text  00000000 
d0009b68 l       .text  00000000 
d0009b74 l       .text  00000000 
d0009b78 l       .text  00000000 
d0009b84 l       .text  00000000 
d0009b84 l       .text  00000000 
d0009b86 l       .text  00000000 
d0009b86 l       .text  00000000 
d0009b8a l       .text  00000000 
d0009b8a l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b8e l       .text  00000000 
d0009b9c l       .text  00000000 
d0009b9e l       .text  00000000 
d0009ba8 l       .text  00000000 
d0009ba8 l       .text  00000000 
000010cd l       .debug_loc     00000000 
000010fe l       .debug_loc     00000000 
0000112f l       .debug_loc     00000000 
00001155 l       .debug_loc     00000000 
00001170 l       .debug_loc     00000000 
00001196 l       .debug_loc     00000000 
000011c7 l       .debug_loc     00000000 
000011f8 l       .debug_loc     00000000 
00001223 l       .debug_loc     00000000 
00001275 l       .debug_loc     00000000 
0000129b l       .debug_loc     00000000 
000012e2 l       .debug_loc     00000000 
00001308 l       .debug_loc     00000000 
0000132e l       .debug_loc     00000000 
00001354 l       .debug_loc     00000000 
00001390 l       .debug_loc     00000000 
000013cf l       .debug_loc     00000000 
0000140c l       .debug_loc     00000000 
0000143e l       .debug_loc     00000000 
00001466 l       .debug_loc     00000000 
00001497 l       .debug_loc     00000000 
000014bd l       .debug_loc     00000000 
000014fa l       .debug_loc     00000000 
0000155e l       .debug_loc     00000000 
0000159d l       .debug_loc     00000000 
000015c5 l       .debug_loc     00000000 
000015eb l       .debug_loc     00000000 
00001611 l       .debug_loc     00000000 
0000162c l       .debug_loc     00000000 
00001652 l       .debug_loc     00000000 
0000166d l       .debug_loc     00000000 
00001688 l       .debug_loc     00000000 
000016ae l       .debug_loc     00000000 
000016d4 l       .debug_loc     00000000 
000016ef l       .debug_loc     00000000 
0000172c l       .debug_loc     00000000 
00001761 l       .debug_loc     00000000 
00001798 l       .debug_loc     00000000 
000017cb l       .debug_loc     00000000 
00001800 l       .debug_loc     00000000 
00001826 l       .debug_loc     00000000 
0000184c l       .debug_loc     00000000 
0000188a l       .debug_loc     00000000 
000018c1 l       .debug_loc     00000000 
000018e7 l       .debug_loc     00000000 
00001923 l       .debug_loc     00000000 
00001949 l       .debug_loc     00000000 
0000196f l       .debug_loc     00000000 
0000198a l       .debug_loc     00000000 
000019b0 l       .debug_loc     00000000 
000019d6 l       .debug_loc     00000000 
000019fc l       .debug_loc     00000000 
00001a17 l       .debug_loc     00000000 
00001a3d l       .debug_loc     00000000 
00001a58 l       .debug_loc     00000000 
00001a7e l       .debug_loc     00000000 
00001a99 l       .debug_loc     00000000 
00001ab4 l       .debug_loc     00000000 
00001acf l       .debug_loc     00000000 
00001aea l       .debug_loc     00000000 
00001b05 l       .debug_loc     00000000 
00001b2e l       .debug_loc     00000000 
00001b49 l       .debug_loc     00000000 
00001b64 l       .debug_loc     00000000 
00001b7f l       .debug_loc     00000000 
00001ba5 l       .debug_loc     00000000 
00001bcb l       .debug_loc     00000000 
00001bf1 l       .debug_loc     00000000 
00001c17 l       .debug_loc     00000000 
00001c32 l       .debug_loc     00000000 
00001c4d l       .debug_loc     00000000 
00001c68 l       .debug_loc     00000000 
00001c83 l       .debug_loc     00000000 
00001c9e l       .debug_loc     00000000 
00001cb9 l       .debug_loc     00000000 
00001cd4 l       .debug_loc     00000000 
00001d05 l       .debug_loc     00000000 
00001d46 l       .debug_loc     00000000 
00001d83 l       .debug_loc     00000000 
00001daa l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001892 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000248 l       .debug_ranges  00000000 
000018bc l       .debug_str     00000000 
00001b5c l       .debug_str     00000000 
00001b47 l       .debug_str     00000000 
000018c3 l       .debug_str     00000000 
000018df l       .debug_str     00000000 
000018ff l       .debug_str     00000000 
0000191d l       .debug_str     00000000 
0000193f l       .debug_str     00000000 
00001961 l       .debug_str     00000000 
00001983 l       .debug_str     00000000 
000019a4 l       .debug_str     00000000 
000019c5 l       .debug_str     00000000 
000019e6 l       .debug_str     00000000 
00001a07 l       .debug_str     00000000 
00001a23 l       .debug_str     00000000 
00001a3f l       .debug_str     00000000 
00001a5c l       .debug_str     00000000 
00001a79 l       .debug_str     00000000 
00001a9b l       .debug_str     00000000 
00001abd l       .debug_str     00000000 
00001ae2 l       .debug_str     00000000 
00001b01 l       .debug_str     00000000 
00001b24 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001b73 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00001b80 l       .debug_str     00000000 
00001b94 l       .debug_str     00000000 
00001ba8 l       .debug_str     00000000 
00001bbe l       .debug_str     00000000 
00001bd9 l       .debug_str     00000000 
00001beb l       .debug_str     00000000 
00001bfe l       .debug_str     00000000 
00001c11 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00001c29 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
00000a7a l       .debug_str     00000000 
00000aa4 l       .debug_str     00000000 
00000ac7 l       .debug_str     00000000 
00000aec l       .debug_str     00000000 
00000b05 l       .debug_str     00000000 
00000b21 l       .debug_str     00000000 
00000b3f l       .debug_str     00000000 
00000b62 l       .debug_str     00000000 
00001cec l       .debug_str     00000000 
00001d01 l       .debug_str     00000000 
00001d10 l       .debug_str     00000000 
00000c61 l       .debug_str     00000000 
00001d22 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d34 l       .debug_str     00000000 
00001d4c l       .debug_str     00000000 
00001d7a l       .debug_str     00000000 
00001d92 l       .debug_str     00000000 
00001daa l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00001dbf l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001b7c l       .debug_str     00000000 
00001dd5 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002a65 l       .debug_str     00000000 
00001ec5 l       .debug_str     00000000 
00006918 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000fac l       .debug_str     00000000 
00001de5 l       .debug_str     00000000 
0000120d l       .debug_str     00000000 
00001ffb l       .debug_str     00000000 
00000108 l       .debug_ranges  00000000 
00001fba l       .debug_str     00000000 
00001e63 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000128 l       .debug_ranges  00000000 
00000210 l       .debug_ranges  00000000 
00000148 l       .debug_ranges  00000000 
00000160 l       .debug_ranges  00000000 
00000178 l       .debug_ranges  00000000 
00000190 l       .debug_ranges  00000000 
000001a8 l       .debug_ranges  00000000 
000001c0 l       .debug_ranges  00000000 
000001e0 l       .debug_ranges  00000000 
000001f8 l       .debug_ranges  00000000 
0000107a l       .debug_str     00000000 
00001477 l       .debug_str     00000000 
00001488 l       .debug_str     00000000 
000014bb l       .debug_str     00000000 
00001dfe l       .debug_str     00000000 
00002002 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
00001e6d l       .debug_str     00000000 
00001e5c l       .debug_str     00000000 
00001e19 l       .debug_str     00000000 
00001e29 l       .debug_str     00000000 
00001e3b l       .debug_str     00000000 
00001e4b l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00001e80 l       .debug_str     00000000 
00001ea0 l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
00001746 l       .debug_str     00000000 
00001eae l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00001ebe l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00001ed0 l       .debug_str     00000000 
00001ee5 l       .debug_str     00000000 
00001eef l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
00001f00 l       .debug_str     00000000 
00001f2b l       .debug_str     00000000 
000028dc l       .debug_str     00000000 
00001001 l       .debug_str     00000000 
00002464 l       .debug_str     00000000 
00001f1a l       .debug_str     00000000 
00001f3c l       .debug_str     00000000 
0000164f l       .debug_str     00000000 
000017d7 l       .debug_str     00000000 
00000230 l       .debug_ranges  00000000 
00001f51 l       .debug_str     00000000 
00001fd5 l       .debug_str     00000000 
00002007 l       .debug_str     00000000 
00002011 l       .debug_str     00000000 
00001885 l       .debug_str     00000000 
0000201c l       .debug_str     00000000 
00001fe5 l       .debug_str     00000000 
00001f6c l       .debug_str     00000000 
00001f82 l       .debug_str     00000000 
00006d6f l       .debug_str     00000000 
00001f9d l       .debug_str     00000000 
00001fb3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000150 l       .debug_frame   00000000 
d0009764 l       .text  00000000 
d0009afe l       .text  00000000 
d0009ba8 l       .text  00000000 
00000000 l    df *ABS*  00000000 bootstrap.c
d0009ba8 l       .text  00000000 
d0009ba8 l       .text  00000000 
d0009ba8 l       .text  00000000 
d0009baa l       .text  00000000 
d0009baa l       .text  00000000 
d0009bac l       .text  00000000 
d0009bb4 l       .text  00000000 
d0009bb6 l       .text  00000000 
d0009bb6 l       .text  00000000 
d0009bb8 l       .text  00000000 
d0009bb8 l       .text  00000000 
d0009bc0 l       .text  00000000 
d0009bc0 l       .text  00000000 
d0009bc4 l       .text  00000000 
d0009bc4 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009bda l       .text  00000000 
d0009bda l       .text  00000000 
d0009bdc l       .text  00000000 
d0009be0 l       .text  00000000 
d0009be0 l       .text  00000000 
d0009be2 l       .text  00000000 
d0009be2 l       .text  00000000 
d0009be6 l       .text  00000000 
d0009be6 l       .text  00000000 
d0009bea l       .text  00000000 
d0009bf8 l       .text  00000000 
d0009bfe l       .text  00000000 
d0009bfe l       .text  00000000 
d0009bfe l       .text  00000000 
d0009bfe l       .text  00000000 
d0009bfe l       .text  00000000 
d0009c00 l       .text  00000000 
d0009c00 l       .text  00000000 
d0009c34 l       .text  00000000 
d0009c36 l       .text  00000000 
d0009c36 l       .text  00000000 
d0009c38 l       .text  00000000 
d0009c38 l       .text  00000000 
d0009c3c l       .text  00000000 
d0009c3c l       .text  00000000 
d0009c40 l       .text  00000000 
d0009c40 l       .text  00000000 
d0009c4c l       .text  00000000 
d0009c4e l       .text  00000000 
d0009c4e l       .text  00000000 
d0009cae l       .text  00000000 
d0009cae l       .text  00000000 
d0009cb0 l       .text  00000000 
d0009cb0 l       .text  00000000 
d0009cb4 l       .text  00000000 
d0009cb8 l       .text  00000000 
d0009cbc l       .text  00000000 
d0009cc0 l       .text  00000000 
d0009ccc l       .text  00000000 
d0009ccc l       .text  00000000 
d0009cd8 l       .text  00000000 
d0009cd8 l       .text  00000000 
d0009cdc l       .text  00000000 
d0009cdc l       .text  00000000 
d0009ce0 l       .text  00000000 
d0009ce0 l       .text  00000000 
d0009ce2 l       .text  00000000 
d0009ce2 l       .text  00000000 
d0009ce4 l       .text  00000000 
d0009ce4 l       .text  00000000 
d0009ce8 l       .text  00000000 
d0009ce8 l       .text  00000000 
d0009cec l       .text  00000000 
d0009cec l       .text  00000000 
d0009cee l       .text  00000000 
d0009f94 l     F .text  0000005e bootstrap_chip_erase
d0009cfa l       .text  00000000 
d0009cfc l       .text  00000000 
d0009cfe l       .text  00000000 
d0009cfe l       .text  00000000 
d0009cfe l       .text  00000000 
d0009cfe l       .text  00000000 
d0009d02 l       .text  00000000 
d0009d10 l       .text  00000000 
d0009d10 l       .text  00000000 
d0009d12 l       .text  00000000 
d0009d12 l       .text  00000000 
d0009d1e l       .text  00000000 
d0009d1e l       .text  00000000 
d0009d2a l       .text  00000000 
d0009d2a l       .text  00000000 
d0009d2e l       .text  00000000 
d0009d30 l       .text  00000000 
d0009d30 l       .text  00000000 
d0009d34 l       .text  00000000 
d0009d34 l       .text  00000000 
d0009d36 l       .text  00000000 
d0009d3a l       .text  00000000 
d0009d3c l       .text  00000000 
d0009d3c l       .text  00000000 
d0009d3e l       .text  00000000 
d0009d3e l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d46 l       .text  00000000 
d0009d48 l       .text  00000000 
d0009d48 l       .text  00000000 
d0009d4c l       .text  00000000 
d0009d62 l       .text  00000000 
d0009d64 l       .text  00000000 
d0009d64 l       .text  00000000 
d0009d6e l       .text  00000000 
d0009d74 l       .text  00000000 
d0009d74 l       .text  00000000 
d0009d78 l       .text  00000000 
d0009d8a l       .text  00000000 
d0009d8a l       .text  00000000 
d0009d94 l       .text  00000000 
d0009d96 l       .text  00000000 
d0009d96 l       .text  00000000 
d0009d9c l       .text  00000000 
d0009da2 l       .text  00000000 
d0009da4 l       .text  00000000 
d0009da4 l       .text  00000000 
d0009db6 l       .text  00000000 
d0009db6 l       .text  00000000 
d0009db8 l       .text  00000000 
d0009db8 l       .text  00000000 
d0009dbc l       .text  00000000 
d0009dbc l       .text  00000000 
d0009dca l       .text  00000000 
d0009dca l       .text  00000000 
d0009dda l       .text  00000000 
d0009de6 l       .text  00000000 
d0009de6 l       .text  00000000 
d0009df2 l       .text  00000000 
d0009dfa l       .text  00000000 
d0009dfc l       .text  00000000 
d0009dfc l       .text  00000000 
d0009e06 l       .text  00000000 
d0009e06 l       .text  00000000 
d0009e08 l       .text  00000000 
d0009e08 l       .text  00000000 
d0009e0c l       .text  00000000 
d0009e18 l       .text  00000000 
d0009e18 l       .text  00000000 
d0009e1a l       .text  00000000 
d0009e1a l       .text  00000000 
d0009e1e l       .text  00000000 
d0009e2a l       .text  00000000 
d0009e2a l       .text  00000000 
d0009e2c l       .text  00000000 
d0009e2c l       .text  00000000 
d0009e2e l       .text  00000000 
d0009e30 l       .text  00000000 
d0009e38 l       .text  00000000 
d0009e38 l       .text  00000000 
d0009e3c l       .text  00000000 
d0009e3e l       .text  00000000 
d0009e40 l       .text  00000000 
d0009e40 l       .text  00000000 
d0009e42 l       .text  00000000 
d0009e42 l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e46 l       .text  00000000 
d0009e4e l       .text  00000000 
d0009e4e l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e54 l       .text  00000000 
d0009e54 l       .text  00000000 
d0009e56 l       .text  00000000 
d0009e56 l       .text  00000000 
d0009e62 l       .text  00000000 
d0009e62 l       .text  00000000 
d0009e64 l       .text  00000000 
d0009e64 l       .text  00000000 
d0009e68 l       .text  00000000 
d0009e68 l       .text  00000000 
d0009e6a l       .text  00000000 
d0009e6c l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e72 l       .text  00000000 
d0009e78 l       .text  00000000 
d0009e78 l       .text  00000000 
d0009e7e l       .text  00000000 
d0009e80 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e88 l       .text  00000000 
d0009e88 l       .text  00000000 
d0009e8a l       .text  00000000 
d0009e9c l       .text  00000000 
d0009e9c l       .text  00000000 
d0009ea0 l       .text  00000000 
d0009ea0 l       .text  00000000 
d0009ea4 l       .text  00000000 
d0009ea6 l       .text  00000000 
d0009ea6 l       .text  00000000 
d0009eae l       .text  00000000 
d0009eae l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb2 l       .text  00000000 
d0009eb6 l       .text  00000000 
d0009eb8 l       .text  00000000 
d0009eb8 l       .text  00000000 
d0009ec2 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec8 l       .text  00000000 
d0009ecc l       .text  00000000 
d0009ed4 l       .text  00000000 
d0009ed4 l       .text  00000000 
d0009ed8 l       .text  00000000 
d0009ed8 l       .text  00000000 
d0009edc l       .text  00000000 
d0009edc l       .text  00000000 
d0009ee4 l       .text  00000000 
d0009ee6 l       .text  00000000 
d0009ee6 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009efa l       .text  00000000 
d0009efa l       .text  00000000 
d0009efc l       .text  00000000 
d0009efc l       .text  00000000 
d0009f00 l       .text  00000000 
d0009f0e l       .text  00000000 
d0009f0e l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f1c l       .text  00000000 
d0009f1c l       .text  00000000 
d0009f20 l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f2e l       .text  00000000 
d0009f2e l       .text  00000000 
d0009f30 l       .text  00000000 
d0009f30 l       .text  00000000 
d0009f34 l       .text  00000000 
d0009f42 l       .text  00000000 
d0009f42 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f48 l       .text  00000000 
d0009f4e l       .text  00000000 
d0009f4e l       .text  00000000 
d0009f52 l       .text  00000000 
d0009f56 l       .text  00000000 
d0009f90 l       .text  00000000 
d0009f90 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f94 l       .text  00000000 
d0009f96 l       .text  00000000 
d0009f96 l       .text  00000000 
d0009f9e l       .text  00000000 
d0009faa l       .text  00000000 
d0009faa l       .text  00000000 
d0009fb2 l       .text  00000000 
d0009fba l       .text  00000000 
d0009fbc l       .text  00000000 
d0009fbc l       .text  00000000 
d0009fc6 l       .text  00000000 
d0009fc8 l       .text  00000000 
d0009fc8 l       .text  00000000 
d0009fd0 l       .text  00000000 
d0009fd0 l       .text  00000000 
d0009fd2 l       .text  00000000 
d0009fd2 l       .text  00000000 
d0009fd6 l       .text  00000000 
d0009fe4 l       .text  00000000 
d0009fe4 l       .text  00000000 
d0009ff2 l       .text  00000000 
d0009ff2 l       .text  00000000 
00001dd0 l       .debug_loc     00000000 
00001df6 l       .debug_loc     00000000 
00001e1c l       .debug_loc     00000000 
00001e42 l       .debug_loc     00000000 
00001e68 l       .debug_loc     00000000 
00001e8e l       .debug_loc     00000000 
00001eb6 l       .debug_loc     00000000 
00001f13 l       .debug_loc     00000000 
00001f39 l       .debug_loc     00000000 
00001f54 l       .debug_loc     00000000 
00001f6f l       .debug_loc     00000000 
00001f97 l       .debug_loc     00000000 
00001fbd l       .debug_loc     00000000 
00001fd8 l       .debug_loc     00000000 
00001ff3 l       .debug_loc     00000000 
0000204d l       .debug_loc     00000000 
00002073 l       .debug_loc     00000000 
0000208e l       .debug_loc     00000000 
000020a9 l       .debug_loc     00000000 
000020cf l       .debug_loc     00000000 
000020ea l       .debug_loc     00000000 
00002110 l       .debug_loc     00000000 
0000212b l       .debug_loc     00000000 
00002151 l       .debug_loc     00000000 
00002198 l       .debug_loc     00000000 
000021be l       .debug_loc     00000000 
000021ef l       .debug_loc     00000000 
00002215 l       .debug_loc     00000000 
00002234 l       .debug_loc     00000000 
00002250 l       .debug_loc     00000000 
00002276 l       .debug_loc     00000000 
000022aa l       .debug_loc     00000000 
000022d0 l       .debug_loc     00000000 
000022f6 l       .debug_loc     00000000 
0000232d l       .debug_loc     00000000 
00002353 l       .debug_loc     00000000 
00002379 l       .debug_loc     00000000 
0000239f l       .debug_loc     00000000 
000023ba l       .debug_loc     00000000 
000023d5 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002025 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002c0 l       .debug_ranges  00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00002096 l       .debug_str     00000000 
0000204f l       .debug_str     00000000 
00002064 l       .debug_str     00000000 
0000207f l       .debug_str     00000000 
00002197 l       .debug_str     00000000 
000020a6 l       .debug_str     00000000 
000020c1 l       .debug_str     00000000 
000020dd l       .debug_str     00000000 
000020f6 l       .debug_str     00000000 
00002110 l       .debug_str     00000000 
0000212c l       .debug_str     00000000 
00002148 l       .debug_str     00000000 
0000215e l       .debug_str     00000000 
0000217a l       .debug_str     00000000 
000021a9 l       .debug_str     00000000 
000021c4 l       .debug_str     00000000 
000021dd l       .debug_str     00000000 
000021f9 l       .debug_str     00000000 
00002217 l       .debug_str     00000000 
00002235 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d34 l       .debug_str     00000000 
00001d4c l       .debug_str     00000000 
00002246 l       .debug_str     00000000 
00002252 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
00002260 l       .debug_str     00000000 
0000226f l       .debug_str     00000000 
00002282 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
000011cc l       .debug_str     00000000 
00001b7c l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
000022a5 l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
00002308 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
00001885 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
000022bc l       .debug_str     00000000 
0000230c l       .debug_str     00000000 
000022fd l       .debug_str     00000000 
000021a2 l       .debug_str     00000000 
0000663c l       .debug_str     00000000 
000022e2 l       .debug_str     00000000 
000022f5 l       .debug_str     00000000 
000022ce l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00002331 l       .debug_str     00000000 
0000234a l       .debug_str     00000000 
00002361 l       .debug_str     00000000 
00002367 l       .debug_str     00000000 
0000236d l       .debug_str     00000000 
0000238b l       .debug_str     00000000 
000022ea l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000023a2 l       .debug_str     00000000 
000023ba l       .debug_str     00000000 
000023c9 l       .debug_str     00000000 
000023e0 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
000025cd l       .debug_str     00000000 
000011f1 l       .debug_str     00000000 
000011d6 l       .debug_str     00000000 
00000278 l       .debug_ranges  00000000 
000002a0 l       .debug_ranges  00000000 
000023f3 l       .debug_str     00000000 
00002403 l       .debug_str     00000000 
00002416 l       .debug_str     00000000 
000024e8 l       .debug_str     00000000 
00002432 l       .debug_str     00000000 
00001f2b l       .debug_str     00000000 
000028dc l       .debug_str     00000000 
00001001 l       .debug_str     00000000 
00002464 l       .debug_str     00000000 
00001f1a l       .debug_str     00000000 
00002454 l       .debug_str     00000000 
0000246a l       .debug_str     00000000 
00002487 l       .debug_str     00000000 
000024a5 l       .debug_str     00000000 
000024bb l       .debug_str     00000000 
000024c8 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
00000210 l       .debug_frame   00000000 
d0009bfe l       .text  00000000 
d0009f94 l       .text  00000000 
d0009ff2 l       .text  00000000 
00000000 l    df *ABS*  00000000 spi_device.c
d0009ff2 l       .text  00000000 
d0009ff2 l       .text  00000000 
d0009ff2 l       .text  00000000 
d0009ff4 l       .text  00000000 
d0009ff4 l       .text  00000000 
d0009ffa l       .text  00000000 
d0009ffa l       .text  00000000 
d000a00c l       .text  00000000 
d000a00c l       .text  00000000 
d000a014 l       .text  00000000 
d000a014 l       .text  00000000 
d000a016 l       .text  00000000 
d000a016 l       .text  00000000 
d000a01c l       .text  00000000 
d000a01c l       .text  00000000 
d000a020 l       .text  00000000 
d000a024 l       .text  00000000 
d000a026 l       .text  00000000 
d000a026 l       .text  00000000 
d000a028 l       .text  00000000 
d000a028 l       .text  00000000 
d000a02a l       .text  00000000 
d000a02a l       .text  00000000 
d000a02e l       .text  00000000 
d000a030 l       .text  00000000 
d000a030 l       .text  00000000 
d000a038 l       .text  00000000 
d000a038 l       .text  00000000 
d000a03a l       .text  00000000 
d000a03a l       .text  00000000 
d000a03c l       .text  00000000 
d000a03c l       .text  00000000 
d000a048 l       .text  00000000 
d000a048 l       .text  00000000 
d000a04c l       .text  00000000 
d000a04e l       .text  00000000 
d000a04e l       .text  00000000 
d000a052 l       .text  00000000 
d000a052 l       .text  00000000 
d000a054 l       .text  00000000 
d000a054 l       .text  00000000 
d000a056 l       .text  00000000 
d000a056 l       .text  00000000 
d000a05a l       .text  00000000 
d000a05a l       .text  00000000 
d000a062 l       .text  00000000 
d000a064 l       .text  00000000 
d000a068 l       .text  00000000 
d000a068 l       .text  00000000 
d000a06c l       .text  00000000 
d000a06e l       .text  00000000 
d000a06e l       .text  00000000 
d000a070 l       .text  00000000 
d000a070 l       .text  00000000 
d000a074 l       .text  00000000 
d000a07a l       .text  00000000 
d000a07a l       .text  00000000 
d000a07e l       .text  00000000 
d000a07e l       .text  00000000 
d000a080 l       .text  00000000 
d000a080 l       .text  00000000 
d000a084 l       .text  00000000 
d000a084 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a08c l       .text  00000000 
d000a08c l       .text  00000000 
d000a098 l       .text  00000000 
d000a098 l       .text  00000000 
d000a0a0 l       .text  00000000 
d000a0a0 l       .text  00000000 
d000a0ac l       .text  00000000 
d000a0ac l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0b8 l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c0 l       .text  00000000 
d000a0c8 l       .text  00000000 
d000a0c8 l       .text  00000000 
d000a0d0 l       .text  00000000 
d000a0d0 l       .text  00000000 
d000a0d8 l       .text  00000000 
d000a0d8 l       .text  00000000 
d000a0de l       .text  00000000 
d000a0de l       .text  00000000 
d000a0e2 l       .text  00000000 
d000a0e2 l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0f0 l       .text  00000000 
d000a0f0 l       .text  00000000 
d000a0f2 l       .text  00000000 
d000a0f2 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a102 l       .text  00000000 
d000a102 l       .text  00000000 
d000a104 l       .text  00000000 
d000a104 l       .text  00000000 
d000a106 l       .text  00000000 
d000a106 l       .text  00000000 
d000a108 l       .text  00000000 
d000a108 l       .text  00000000 
d000a10a l       .text  00000000 
d000a10c l       .text  00000000 
d000a10c l       .text  00000000 
d000a10e l       .text  00000000 
d000a10e l       .text  00000000 
d000a110 l       .text  00000000 
d000a110 l       .text  00000000 
d000a112 l       .text  00000000 
d000a112 l       .text  00000000 
d000a114 l       .text  00000000 
d000a118 l       .text  00000000 
d000a118 l       .text  00000000 
d000a11a l       .text  00000000 
d000a11a l       .text  00000000 
d000a11c l       .text  00000000 
d000a120 l       .text  00000000 
d000a120 l       .text  00000000 
d000a122 l       .text  00000000 
d000a122 l       .text  00000000 
d000a126 l       .text  00000000 
d000a126 l       .text  00000000 
d000a12c l       .text  00000000 
d000a138 l       .text  00000000 
d000a138 l       .text  00000000 
d000a13e l       .text  00000000 
d000a140 l       .text  00000000 
d000a140 l       .text  00000000 
d000a142 l       .text  00000000 
d000a14e l       .text  00000000 
d000a14e l       .text  00000000 
d000a152 l       .text  00000000 
d000a152 l       .text  00000000 
d000a154 l       .text  00000000 
d000a154 l       .text  00000000 
d000a158 l       .text  00000000 
d000a15a l       .text  00000000 
d000a15a l       .text  00000000 
d000a15c l       .text  00000000 
d000a15e l       .text  00000000 
d000a164 l       .text  00000000 
d000a164 l       .text  00000000 
d000a168 l       .text  00000000 
d000a16c l       .text  00000000 
d000a170 l       .text  00000000 
d000a170 l       .text  00000000 
d000a170 l       .text  00000000 
d000a170 l       .text  00000000 
d000a170 l       .text  00000000 
d000a174 l       .text  00000000 
d000a174 l       .text  00000000 
d000a178 l       .text  00000000 
d000a178 l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17e l       .text  00000000 
d000a17e l       .text  00000000 
d000a180 l       .text  00000000 
d000a180 l       .text  00000000 
d000a182 l       .text  00000000 
d000a182 l       .text  00000000 
000023fb l       .debug_loc     00000000 
0000248a l       .debug_loc     00000000 
000024b1 l       .debug_loc     00000000 
000024df l       .debug_loc     00000000 
00002501 l       .debug_loc     00000000 
00002523 l       .debug_loc     00000000 
00002547 l       .debug_loc     00000000 
0000258b l       .debug_loc     00000000 
000025af l       .debug_loc     00000000 
000025d8 l       .debug_loc     00000000 
0000260b l       .debug_loc     00000000 
00002670 l       .debug_loc     00000000 
0000268b l       .debug_loc     00000000 
000026ca l       .debug_loc     00000000 
000026f7 l       .debug_loc     00000000 
0000272d l       .debug_loc     00000000 
0000276b l       .debug_loc     00000000 
000027ad l       .debug_loc     00000000 
000027f3 l       .debug_loc     00000000 
00002839 l       .debug_loc     00000000 
0000287f l       .debug_loc     00000000 
000028c5 l       .debug_loc     00000000 
000028e0 l       .debug_loc     00000000 
00002911 l       .debug_loc     00000000 
00002935 l       .debug_loc     00000000 
0000295c l       .debug_loc     00000000 
00002979 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000024fd l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002f8 l       .debug_ranges  00000000 
00002530 l       .debug_str     00000000 
0000265d l       .debug_str     00000000 
00002647 l       .debug_str     00000000 
00002589 l       .debug_str     00000000 
000025ae l       .debug_str     00000000 
00002630 l       .debug_str     00000000 
00002595 l       .debug_str     00000000 
0000257e l       .debug_str     00000000 
0000123e l       .debug_str     00000000 
00002544 l       .debug_str     00000000 
00002553 l       .debug_str     00000000 
00002562 l       .debug_str     00000000 
0000256e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000260b l       .debug_str     00000000 
000025f3 l       .debug_str     00000000 
000025ba l       .debug_str     00000000 
000025c7 l       .debug_str     00000000 
000025d8 l       .debug_str     00000000 
000025e6 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002635 l       .debug_str     00000000 
00002625 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
0000267b l       .debug_str     00000000 
0000268e l       .debug_str     00000000 
0000269f l       .debug_str     00000000 
000026ae l       .debug_str     00000000 
000026bd l       .debug_str     00000000 
000026cd l       .debug_str     00000000 
000026e0 l       .debug_str     00000000 
000026f3 l       .debug_str     00000000 
00002707 l       .debug_str     00000000 
0000271a l       .debug_str     00000000 
0000272d l       .debug_str     00000000 
0000273d l       .debug_str     00000000 
0000274d l       .debug_str     00000000 
0000275f l       .debug_str     00000000 
00002771 l       .debug_str     00000000 
00002789 l       .debug_str     00000000 
000027a6 l       .debug_str     00000000 
000027bd l       .debug_str     00000000 
000027d4 l       .debug_str     00000000 
000027eb l       .debug_str     00000000 
00002807 l       .debug_str     00000000 
000021a9 l       .debug_str     00000000 
000021c4 l       .debug_str     00000000 
000021dd l       .debug_str     00000000 
000021f9 l       .debug_str     00000000 
00002217 l       .debug_str     00000000 
00002235 l       .debug_str     00000000 
00002197 l       .debug_str     00000000 
000020a6 l       .debug_str     00000000 
000020c1 l       .debug_str     00000000 
000020dd l       .debug_str     00000000 
000020f6 l       .debug_str     00000000 
00002110 l       .debug_str     00000000 
0000212c l       .debug_str     00000000 
00002148 l       .debug_str     00000000 
0000215e l       .debug_str     00000000 
0000217a l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000282c l       .debug_str     00000000 
00002839 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00002870 l       .debug_str     00000000 
00002842 l       .debug_str     00000000 
0000284d l       .debug_str     00000000 
0000663c l       .debug_str     00000000 
00002855 l       .debug_str     00000000 
00002862 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000023f3 l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
00002657 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
000002e0 l       .debug_ranges  00000000 
0000287b l       .debug_str     00000000 
000028ba l       .debug_str     00000000 
00002890 l       .debug_str     00000000 
000028b1 l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
00002899 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
000028e1 l       .debug_str     00000000 
00002403 l       .debug_str     00000000 
00002308 l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
00002906 l       .debug_str     00000000 
00002487 l       .debug_str     00000000 
00002416 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
000028ea l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000230c l       .debug_str     00000000 
000022fd l       .debug_str     00000000 
000021a2 l       .debug_str     00000000 
000022e2 l       .debug_str     00000000 
000022f5 l       .debug_str     00000000 
000022ce l       .debug_str     00000000 
00000288 l       .debug_frame   00000000 
d000a0ec l       .text  00000000 
d000a170 l       .text  00000000 
d000a17a l       .text  00000000 
d000a182 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_keys.c
d000a182 l       .text  00000000 
d000a182 l       .text  00000000 
d000a182 l       .text  00000000 
d000a184 l       .text  00000000 
d000a19c l       .text  00000000 
d000a19e l       .text  00000000 
d000a1a0 l       .text  00000000 
d000a1a2 l       .text  00000000 
d000a1a2 l       .text  00000000 
d000a1a6 l       .text  00000000 
d000a1a6 l       .text  00000000 
d000a1b2 l       .text  00000000 
d000a1b2 l       .text  00000000 
d000a1b4 l       .text  00000000 
d000a1b4 l       .text  00000000 
d000a1be l       .text  00000000 
d000a1c2 l       .text  00000000 
d000a1ce l       .text  00000000 
d000a1d2 l       .text  00000000 
d000a1d4 l       .text  00000000 
d000a1dc l       .text  00000000 
d000a1dc l       .text  00000000 
d000a1e6 l       .text  00000000 
d000a1e6 l       .text  00000000 
d000a1e8 l       .text  00000000 
d000a1e8 l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1ee l       .text  00000000 
d000a1ee l       .text  00000000 
d000a1f2 l       .text  00000000 
d000a1fe l       .text  00000000 
d000a200 l       .text  00000000 
d000a2b0 l     F .text  000001ae key_is_valid
d000a204 l       .text  00000000 
d000a204 l       .text  00000000 
d000a206 l       .text  00000000 
d000a206 l       .text  00000000 
d000a20a l       .text  00000000 
d000a20a l       .text  00000000 
d000a216 l       .text  00000000 
d000a216 l       .text  00000000 
d000a218 l       .text  00000000 
d000a218 l       .text  00000000 
d000a21c l       .text  00000000 
d000a21c l       .text  00000000 
d000a21e l       .text  00000000 
d000a21e l       .text  00000000 
d000a220 l       .text  00000000 
d000a220 l       .text  00000000 
d000a224 l       .text  00000000 
d000a224 l       .text  00000000 
d000a226 l       .text  00000000 
d000a22a l       .text  00000000 
d000a22a l       .text  00000000 
d000a22c l       .text  00000000 
d000a22c l       .text  00000000 
d000a238 l       .text  00000000 
d000a238 l       .text  00000000 
d000a23a l       .text  00000000 
d000a23a l       .text  00000000 
d000a240 l       .text  00000000 
d000a240 l       .text  00000000 
d000a242 l       .text  00000000 
d000a242 l       .text  00000000 
d000a24e l       .text  00000000 
d000a24e l       .text  00000000 
d000a250 l       .text  00000000 
d000a250 l       .text  00000000 
d000a254 l       .text  00000000 
d000a254 l       .text  00000000 
d000a258 l       .text  00000000 
d000a258 l       .text  00000000 
d000a264 l       .text  00000000 
d000a270 l       .text  00000000 
d000a276 l       .text  00000000 
d000a276 l       .text  00000000 
d000a27a l       .text  00000000 
d000a286 l       .text  00000000 
d000a28c l       .text  00000000 
d000a28c l       .text  00000000 
d000a294 l       .text  00000000 
d000a2a0 l       .text  00000000 
d000a2a4 l       .text  00000000 
d000a2a6 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b0 l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2ba l       .text  00000000 
d000a2ba l       .text  00000000 
d000a2be l       .text  00000000 
d000a2be l       .text  00000000 
d000a2c2 l       .text  00000000 
d000a2c6 l       .text  00000000 
d000a2ce l       .text  00000000 
d000a2d2 l       .text  00000000 
d000a2de l       .text  00000000 
d000a2de l       .text  00000000 
d000a2e0 l       .text  00000000 
d000a2e0 l       .text  00000000 
d000a2e0 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2ec l       .text  00000000 
d000a2ec l       .text  00000000 
d000a2f4 l       .text  00000000 
d000a2f8 l       .text  00000000 
d000a306 l       .text  00000000 
d000a306 l       .text  00000000 
d000a30e l       .text  00000000 
d000a312 l       .text  00000000 
d000a320 l       .text  00000000 
d000a328 l       .text  00000000 
d000a334 l       .text  00000000 
d000a334 l       .text  00000000 
d000a336 l       .text  00000000 
d000a336 l       .text  00000000 
d000a336 l       .text  00000000 
d000a33e l       .text  00000000 
d000a33e l       .text  00000000 
d000a342 l       .text  00000000 
d000a342 l       .text  00000000 
d000a34a l       .text  00000000 
d000a34e l       .text  00000000 
d000a35c l       .text  00000000 
d000a35c l       .text  00000000 
d000a364 l       .text  00000000 
d000a368 l       .text  00000000 
d000a374 l       .text  00000000 
d000a376 l       .text  00000000 
d000a45e l     F .text  00000062 key_is_valid_in_lc_state_prod
d000a378 l       .text  00000000 
d000a37c l       .text  00000000 
d000a380 l       .text  00000000 
d000a384 l       .text  00000000 
d000a390 l       .text  00000000 
d000a390 l       .text  00000000 
d000a392 l       .text  00000000 
d000a392 l       .text  00000000 
d000a392 l       .text  00000000 
d000a39a l       .text  00000000 
d000a39a l       .text  00000000 
d000a39e l       .text  00000000 
d000a39e l       .text  00000000 
d000a3a6 l       .text  00000000 
d000a3aa l       .text  00000000 
d000a3b8 l       .text  00000000 
d000a3b8 l       .text  00000000 
d000a3c6 l       .text  00000000 
d000a3c6 l       .text  00000000 
d000a3d4 l       .text  00000000 
d000a3d4 l       .text  00000000 
d000a3e2 l       .text  00000000 
d000a3e2 l       .text  00000000 
d000a3ea l       .text  00000000 
d000a3ea l       .text  00000000 
d000a3ee l       .text  00000000 
d000a3fa l       .text  00000000 
d000a3fa l       .text  00000000 
d000a3fc l       .text  00000000 
d000a4c0 l     F .text  0000004a key_is_valid_in_otp
d000a3fe l       .text  00000000 
d000a402 l       .text  00000000 
d000a406 l       .text  00000000 
d000a406 l       .text  00000000 
d000a40a l       .text  00000000 
d000a416 l       .text  00000000 
d000a416 l       .text  00000000 
d000a41a l       .text  00000000 
d000a41e l       .text  00000000 
d000a420 l       .text  00000000 
d000a420 l       .text  00000000 
d000a428 l       .text  00000000 
d000a428 l       .text  00000000 
d000a42c l       .text  00000000 
d000a438 l       .text  00000000 
d000a438 l       .text  00000000 
d000a43c l       .text  00000000 
d000a43c l       .text  00000000 
d000a43e l       .text  00000000 
d000a43e l       .text  00000000 
d000a446 l       .text  00000000 
d000a446 l       .text  00000000 
d000a44e l       .text  00000000 
d000a44e l       .text  00000000 
d000a456 l       .text  00000000 
d000a456 l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a45e l       .text  00000000 
d000a460 l       .text  00000000 
d000a460 l       .text  00000000 
d000a468 l       .text  00000000 
d000a468 l       .text  00000000 
d000a46c l       .text  00000000 
d000a46c l       .text  00000000 
d000a474 l       .text  00000000 
d000a478 l       .text  00000000 
d000a484 l       .text  00000000 
d000a486 l       .text  00000000 
d000a488 l       .text  00000000 
d000a488 l       .text  00000000 
d000a496 l       .text  00000000 
d000a49a l       .text  00000000 
d000a49e l       .text  00000000 
d000a4a2 l       .text  00000000 
d000a4ae l       .text  00000000 
d000a4b2 l       .text  00000000 
d000a4b6 l       .text  00000000 
d000a4b8 l       .text  00000000 
d000a4b8 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c2 l       .text  00000000 
d000a4c2 l       .text  00000000 
d000a4c6 l       .text  00000000 
d000a4cc l       .text  00000000 
d000a4cc l       .text  00000000 
d000a4d0 l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4da l       .text  00000000 
d000a4da l       .text  00000000 
d000a4de l       .text  00000000 
d000a4de l       .text  00000000 
d000a4e0 l       .text  00000000 
d000a4e0 l       .text  00000000 
d000a4e4 l       .text  00000000 
d000a4e4 l       .text  00000000 
d000a4e8 l       .text  00000000 
d000a4e8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4fa l       .text  00000000 
d000a4fe l       .text  00000000 
d000a502 l       .text  00000000 
d000a50a l       .text  00000000 
d000a50a l       .text  00000000 
0000299f l       .debug_loc     00000000 
000029d0 l       .debug_loc     00000000 
00002a01 l       .debug_loc     00000000 
00002a32 l       .debug_loc     00000000 
00002a7d l       .debug_loc     00000000 
00002aaf l       .debug_loc     00000000 
00002ae2 l       .debug_loc     00000000 
00002b13 l       .debug_loc     00000000 
00002b39 l       .debug_loc     00000000 
00002b54 l       .debug_loc     00000000 
00002b7a l       .debug_loc     00000000 
00002b95 l       .debug_loc     00000000 
00002bbb l       .debug_loc     00000000 
00002be1 l       .debug_loc     00000000 
00002bfc l       .debug_loc     00000000 
00002c38 l       .debug_loc     00000000 
00002c7f l       .debug_loc     00000000 
00002cbb l       .debug_loc     00000000 
00002ce1 l       .debug_loc     00000000 
00002d07 l       .debug_loc     00000000 
00002d2d l       .debug_loc     00000000 
00002d69 l       .debug_loc     00000000 
00002d8f l       .debug_loc     00000000 
00002dcb l       .debug_loc     00000000 
00002e07 l       .debug_loc     00000000 
00002e2d l       .debug_loc     00000000 
00002e69 l       .debug_loc     00000000 
00002e9a l       .debug_loc     00000000 
00002eb5 l       .debug_loc     00000000 
00002edb l       .debug_loc     00000000 
00002ef6 l       .debug_loc     00000000 
00002f16 l       .debug_loc     00000000 
00002f31 l       .debug_loc     00000000 
00002f51 l       .debug_loc     00000000 
00002f6c l       .debug_loc     00000000 
00002f92 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002912 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000003c8 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00002982 l       .debug_str     00000000 
00002941 l       .debug_str     00000000 
00002957 l       .debug_str     00000000 
0000296d l       .debug_str     00000000 
00002995 l       .debug_str     00000000 
000029e1 l       .debug_str     00000000 
000029b4 l       .debug_str     00000000 
000029ca l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000013c9 l       .debug_str     00000000 
000073d2 l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001448 l       .debug_str     00000000 
00002aa0 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00002aa7 l       .debug_str     00000000 
00002ab6 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000320 l       .debug_ranges  00000000 
00000338 l       .debug_ranges  00000000 
000002c8 l       .debug_str     00000000 
00002ae5 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
0000106f l       .debug_str     00000000 
00002a61 l       .debug_str     00000000 
0000298c l       .debug_str     00000000 
00002aac l       .debug_str     00000000 
00000350 l       .debug_ranges  00000000 
00000378 l       .debug_ranges  00000000 
000003a0 l       .debug_ranges  00000000 
000029f4 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00002a11 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00002a26 l       .debug_str     00000000 
00002a43 l       .debug_str     00000000 
00002a6e l       .debug_str     00000000 
00002a8c l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00002a65 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
00002ad1 l       .debug_str     00000000 
00002abf l       .debug_str     00000000 
00002aea l       .debug_str     00000000 
000002e8 l       .debug_frame   00000000 
d000a2b0 l       .text  00000000 
d000a45e l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a50a l       .text  00000000 
00000000 l    df *ABS*  00000000 shutdown.c
d000a50a l       .text  00000000 
d000a50a l       .text  00000000 
d000a50a l       .text  00000000 
d000a50c l       .text  00000000 
d000a526 l       .text  00000000 
d000a528 l       .text  00000000 
d000a528 l       .text  00000000 
d000a528 l       .text  00000000 
d000a528 l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a534 l       .text  00000000 
d000a534 l       .text  00000000 
d000a538 l       .text  00000000 
d000a53c l       .text  00000000 
d000a544 l       .text  00000000 
d000a548 l       .text  00000000 
d000a556 l       .text  00000000 
d000a556 l       .text  00000000 
d000a558 l       .text  00000000 
d000a558 l       .text  00000000 
d000a55a l       .text  00000000 
d000a562 l       .text  00000000 
d000a566 l       .text  00000000 
d000a574 l       .text  00000000 
d000a574 l       .text  00000000 
d000a576 l       .text  00000000 
d000a576 l       .text  00000000 
d000a578 l       .text  00000000 
d000a580 l       .text  00000000 
d000a58e l       .text  00000000 
d000a58e l       .text  00000000 
d000a590 l       .text  00000000 
d000a590 l       .text  00000000 
d000a594 l       .text  00000000 
d000a594 l       .text  00000000 
d000a596 l       .text  00000000 
d000a59e l       .text  00000000 
d000a5a2 l       .text  00000000 
d000a5a2 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5a6 l       .text  00000000 
d000a5b2 l       .text  00000000 
d000a5b2 l       .text  00000000 
d000a5b2 l       .text  00000000 
d000a5b2 l       .text  00000000 
d000a5b6 l       .text  00000000 
d000a5b6 l       .text  00000000 
d000a5be l       .text  00000000 
d000a5c0 l       .text  00000000 
d000a5c0 l       .text  00000000 
d000a5c8 l       .text  00000000 
d000a5c8 l       .text  00000000 
d000a5ca l       .text  00000000 
d000a5ca l       .text  00000000 
d000a5d0 l       .text  00000000 
d000a5d0 l       .text  00000000 
d000a5d4 l       .text  00000000 
d000a5d4 l       .text  00000000 
d000a5de l       .text  00000000 
d000a5de l       .text  00000000 
d000a5e2 l       .text  00000000 
d000a5e6 l       .text  00000000 
d000a5e6 l       .text  00000000 
d000a5e8 l       .text  00000000 
d000a5e8 l       .text  00000000 
d000a5ec l       .text  00000000 
d000a5f0 l       .text  00000000 
d000a5f0 l       .text  00000000 
d000a5f2 l       .text  00000000 
d000a5f2 l       .text  00000000 
d000a5f4 l       .text  00000000 
d000a5f4 l       .text  00000000 
d000a5f6 l       .text  00000000 
d000a600 l       .text  00000000 
d000a600 l       .text  00000000 
d000a602 l       .text  00000000 
d000a606 l       .text  00000000 
d000a60a l       .text  00000000 
d000a60c l       .text  00000000 
d000a60c l       .text  00000000 
d000a60e l       .text  00000000 
d000a60e l       .text  00000000 
d000a612 l       .text  00000000 
d000a612 l       .text  00000000 
d000a616 l       .text  00000000 
d000a616 l       .text  00000000 
d000a61c l       .text  00000000 
d000a634 l       .text  00000000 
d000a634 l       .text  00000000 
d000a63a l       .text  00000000 
d000a63a l       .text  00000000 
d000a63e l       .text  00000000 
d000a63e l       .text  00000000 
d000a642 l       .text  00000000 
d000a642 l       .text  00000000 
d000a646 l       .text  00000000 
d000a64e l       .text  00000000 
d000a64e l       .text  00000000 
d000a65c l       .text  00000000 
d000a662 l       .text  00000000 
d000a666 l       .text  00000000 
d000a666 l       .text  00000000 
d000a66a l       .text  00000000 
d000a66a l       .text  00000000 
d000a66c l       .text  00000000 
d000a66e l       .text  00000000 
d000a66e l       .text  00000000 
d000a670 l       .text  00000000 
d000a670 l       .text  00000000 
d000a676 l       .text  00000000 
d000a676 l       .text  00000000 
d000a67a l       .text  00000000 
d000a67e l       .text  00000000 
d000a680 l       .text  00000000 
d000a682 l       .text  00000000 
d000a682 l       .text  00000000 
d000a684 l       .text  00000000 
d000a684 l       .text  00000000 
d000a686 l       .text  00000000 
d000a686 l       .text  00000000 
d000a68a l       .text  00000000 
d000a68a l       .text  00000000 
d000a6a6 l       .text  00000000 
d000a6a6 l       .text  00000000 
d000a6ac l       .text  00000000 
d000a6ac l       .text  00000000 
d000a6b0 l       .text  00000000 
d000a6b0 l       .text  00000000 
d000a6b4 l       .text  00000000 
d000a6b4 l       .text  00000000 
d000a6b8 l       .text  00000000 
d000a6c0 l       .text  00000000 
d000a6c0 l       .text  00000000 
d000a6ce l       .text  00000000 
d000a6d4 l       .text  00000000 
d000a6d8 l       .text  00000000 
d000a6d8 l       .text  00000000 
d000a6dc l       .text  00000000 
d000a6dc l       .text  00000000 
d000a6de l       .text  00000000 
d000a6e0 l       .text  00000000 
d000a6e0 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e2 l       .text  00000000 
d000a6e8 l       .text  00000000 
d000a6e8 l       .text  00000000 
d000a6f2 l       .text  00000000 
d000a6f2 l       .text  00000000 
d000a6f4 l       .text  00000000 
d000a6f4 l       .text  00000000 
d000a6f6 l       .text  00000000 
d000a6f6 l       .text  00000000 
d000a6fa l       .text  00000000 
d000a6fa l       .text  00000000 
d000a6fe l       .text  00000000 
d000a6fe l       .text  00000000 
d000a702 l       .text  00000000 
d000a70a l       .text  00000000 
d000a70e l       .text  00000000 
d000a710 l       .text  00000000 
d000a716 l       .text  00000000 
d000a71a l       .text  00000000 
d000a722 l       .text  00000000 
d000a72e l       .text  00000000 
d000a72e l       .text  00000000 
d000a738 l       .text  00000000 
d000a73e l       .text  00000000 
d000a740 l       .text  00000000 
d000a742 l       .text  00000000 
d000a746 l       .text  00000000 
d000a74a l       .text  00000000 
d000a74a l       .text  00000000 
d000a74c l       .text  00000000 
d000a750 l       .text  00000000 
d000a754 l       .text  00000000 
d000a754 l       .text  00000000 
d000a756 l       .text  00000000 
d000a756 l       .text  00000000 
d000a758 l       .text  00000000 
d000a758 l       .text  00000000 
d000a758 l       .text  00000000 
d000a758 l       .text  00000000 
d000a75a l       .text  00000000 
d000a75a l       .text  00000000 
d000a75e l       .text  00000000 
d000a75e l       .text  00000000 
d000a766 l       .text  00000000 
d000a766 l       .text  00000000 
d000a76c l       .text  00000000 
d000a76c l       .text  00000000 
d000a770 l       .text  00000000 
d000a770 l       .text  00000000 
d000a772 l       .text  00000000 
d000a772 l       .text  00000000 
d000a77c l       .text  00000000 
d000a77c l       .text  00000000 
d000a782 l       .text  00000000 
d000a784 l       .text  00000000 
d000a78a l       .text  00000000 
d000a78a l       .text  00000000 
d000a790 l       .text  00000000 
d000a794 l       .text  00000000 
d000a794 l       .text  00000000 
d000a796 l       .text  00000000 
d000a796 l       .text  00000000 
d000a79a l       .text  00000000 
d000a79a l       .text  00000000 
d000a79c l       .text  00000000 
d000a79e l       .text  00000000 
d000a79e l       .text  00000000 
d000a7a0 l       .text  00000000 
d000a7a0 l       .text  00000000 
d000a7a6 l       .text  00000000 
d000a7a6 l       .text  00000000 
d000a7a8 l       .text  00000000 
d000a7ac l       .text  00000000 
d000a7ae l       .text  00000000 
d000a7b0 l       .text  00000000 
d000a7b2 l       .text  00000000 
d000a7ba l       .text  00000000 
d000a7be l       .text  00000000 
d000a7ce l       .text  00000000 
d000a7ce l       .text  00000000 
d000a7ec l       .text  00000000 
d000a7ec l       .text  00000000 
d000a7f4 l       .text  00000000 
d000a7f4 l       .text  00000000 
d000e33c l       .shutdown      00000000 
d000e33c l       .shutdown      00000000 
d000e33c l       .shutdown      00000000 
d000e340 l       .shutdown      00000000 
d000e340 l       .shutdown      00000000 
d000e342 l       .shutdown      00000000 
d000e342 l       .shutdown      00000000 
d000e348 l       .shutdown      00000000 
d000e348 l       .shutdown      00000000 
d000e34c l       .shutdown      00000000 
d000e34c l       .shutdown      00000000 
d000e35c l       .shutdown      00000000 
d000e35c l       .shutdown      00000000 
d000e360 l       .shutdown      00000000 
d000e360 l       .shutdown      00000000 
d000e368 l       .shutdown      00000000 
d000e36c l       .shutdown      00000000 
d000e374 l       .shutdown      00000000 
d000e378 l       .shutdown      00000000 
d000e380 l       .shutdown      00000000 
d000e384 l       .shutdown      00000000 
d000e39a l       .shutdown      00000000 
d000e39e l       .shutdown      00000000 
d000e3a6 l       .shutdown      00000000 
d000e3aa l       .shutdown      00000000 
d000e3b2 l       .shutdown      00000000 
d000e3b6 l       .shutdown      00000000 
d000e3be l       .shutdown      00000000 
d000e3c4 l       .shutdown      00000000 
d000e3c8 l       .shutdown      00000000 
d000e3cc l       .shutdown      00000000 
d000e3d4 l       .shutdown      00000000 
d000e3d8 l       .shutdown      00000000 
d000e3ea l       .shutdown      00000000 
d000e3ee l       .shutdown      00000000 
d000e3f6 l       .shutdown      00000000 
d000e3fa l       .shutdown      00000000 
d000e402 l       .shutdown      00000000 
d000e406 l       .shutdown      00000000 
d000e40a l       .shutdown      00000000 
d000e40a l       .shutdown      00000000 
d000e410 l       .shutdown      00000000 
d000e410 l       .shutdown      00000000 
d000e418 l       .shutdown      00000000 
d000e41c l       .shutdown      00000000 
d000e41c l       .shutdown      00000000 
d000e420 l       .shutdown      00000000 
d000e422 l       .shutdown      00000000 
d000e424 l       .shutdown      00000000 
d000e42c l       .shutdown      00000000 
d000e430 l       .shutdown      00000000 
d000e438 l       .shutdown      00000000 
d000e43c l       .shutdown      00000000 
d000e444 l       .shutdown      00000000 
d000e448 l       .shutdown      00000000 
d000e44c l       .shutdown      00000000 
d000e450 l       .shutdown      00000000 
d000e450 l       .shutdown      00000000 
d000e452 l       .shutdown      00000000 
d000e452 l       .shutdown      00000000 
d000e458 l       .shutdown      00000000 
d000e458 l       .shutdown      00000000 
d000e45a l       .shutdown      00000000 
d000e45c l       .shutdown      00000000 
d000e45e l       .shutdown      00000000 
d000e464 l       .shutdown      00000000 
d000e464 l       .shutdown      00000000 
d000e466 l       .shutdown      00000000 
d000e466 l       .shutdown      00000000 
d000e468 l       .shutdown      00000000 
d000e468 l       .shutdown      00000000 
d000e46c l       .shutdown      00000000 
d000e46c l       .shutdown      00000000 
d000e476 l       .shutdown      00000000 
d000e476 l       .shutdown      00000000 
d000e480 l       .shutdown      00000000 
d000e480 l       .shutdown      00000000 
d000e488 l       .shutdown      00000000 
d000e488 l       .shutdown      00000000 
d000e490 l       .shutdown      00000000 
d000e490 l       .shutdown      00000000 
d000e496 l       .shutdown      00000000 
d000e496 l       .shutdown      00000000 
d000e498 l       .shutdown      00000000 
d000e498 l       .shutdown      00000000 
d000e4a0 l       .shutdown      00000000 
d000e4a2 l       .shutdown      00000000 
d000e4a2 l       .shutdown      00000000 
d000e4a6 l       .shutdown      00000000 
d000e4a6 l       .shutdown      00000000 
d000e4aa l       .shutdown      00000000 
d000e4ac l       .shutdown      00000000 
d000e4ac l       .shutdown      00000000 
d000e4ae l       .shutdown      00000000 
d000e4b2 l       .shutdown      00000000 
d000e4b2 l       .shutdown      00000000 
d000e4b4 l       .shutdown      00000000 
d000e4b4 l       .shutdown      00000000 
d000e4b6 l       .shutdown      00000000 
d000e4b6 l       .shutdown      00000000 
d000e4b8 l       .shutdown      00000000 
d000e4b8 l       .shutdown      00000000 
d000e4ba l       .shutdown      00000000 
d000e4be l       .shutdown      00000000 
d000e4be l       .shutdown      00000000 
d000e4c0 l       .shutdown      00000000 
d000e4c0 l       .shutdown      00000000 
d000e4c6 l       .shutdown      00000000 
d000e4c6 l       .shutdown      00000000 
d000e4cc l       .shutdown      00000000 
d000e4cc l       .shutdown      00000000 
d000e4d2 l       .shutdown      00000000 
d000e4d2 l       .shutdown      00000000 
d000e4d4 l       .shutdown      00000000 
d000e4d4 l       .shutdown      00000000 
d000e4d8 l       .shutdown      00000000 
d000e4d8 l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e4e0 l       .shutdown      00000000 
d000e4e0 l       .shutdown      00000000 
d000e4e8 l       .shutdown      00000000 
d000e4e8 l       .shutdown      00000000 
d000e4ec l       .shutdown      00000000 
d000e4ee l       .shutdown      00000000 
d000e4ee l       .shutdown      00000000 
d000e4f0 l       .shutdown      00000000 
d000e4f4 l       .shutdown      00000000 
d000e4f4 l       .shutdown      00000000 
d000e4f6 l       .shutdown      00000000 
d000e4f6 l       .shutdown      00000000 
d000e4f8 l       .shutdown      00000000 
d000e4f8 l       .shutdown      00000000 
d000e4fa l       .shutdown      00000000 
d000e4fa l       .shutdown      00000000 
d000e4fc l       .shutdown      00000000 
d000e500 l       .shutdown      00000000 
d000e500 l       .shutdown      00000000 
d000e504 l       .shutdown      00000000 
d000e504 l       .shutdown      00000000 
d000e508 l       .shutdown      00000000 
d000e508 l       .shutdown      00000000 
d000e50a l       .shutdown      00000000 
d000e50a l       .shutdown      00000000 
d000e50e l       .shutdown      00000000 
d000e50e l       .shutdown      00000000 
d000e518 l       .shutdown      00000000 
d000e518 l       .shutdown      00000000 
d000e51a l       .shutdown      00000000 
d000e51a l       .shutdown      00000000 
d000e51e l       .shutdown      00000000 
d000e51e l       .shutdown      00000000 
d000e520 l       .shutdown      00000000 
d000e524 l       .shutdown      00000000 
d000e524 l       .shutdown      00000000 
d000e528 l       .shutdown      00000000 
d000e528 l       .shutdown      00000000 
d000e52a l       .shutdown      00000000 
d000e52a l       .shutdown      00000000 
d000e52c l       .shutdown      00000000 
d000e52c l       .shutdown      00000000 
d000e530 l       .shutdown      00000000 
d000e530 l       .shutdown      00000000 
d000e53c l       .shutdown      00000000 
d000e53c l       .shutdown      00000000 
d000e53e l       .shutdown      00000000 
d000e542 l       .shutdown      00000000 
d000e542 l       .shutdown      00000000 
d000e544 l       .shutdown      00000000 
d000e544 l       .shutdown      00000000 
d000e54c l       .shutdown      00000000 
d000e54c l       .shutdown      00000000 
d000e554 l       .shutdown      00000000 
d000e554 l       .shutdown      00000000 
d000e55c l       .shutdown      00000000 
d000e55c l       .shutdown      00000000 
d000e560 l       .shutdown      00000000 
d000e560 l       .shutdown      00000000 
d000e574 l       .shutdown      00000000 
d000e574 l       .shutdown      00000000 
d000e5d4 l       .shutdown      00000000 
d000e5d4 l       .shutdown      00000000 
d000e5d4 l       .shutdown      00000000 
00002fb8 l       .debug_loc     00000000 
00002ff4 l       .debug_loc     00000000 
0000301a l       .debug_loc     00000000 
00003041 l       .debug_loc     00000000 
0000308c l       .debug_loc     00000000 
000030b3 l       .debug_loc     00000000 
000030da l       .debug_loc     00000000 
00003100 l       .debug_loc     00000000 
0000311c l       .debug_loc     00000000 
000031a6 l       .debug_loc     00000000 
00003211 l       .debug_loc     00000000 
0000322c l       .debug_loc     00000000 
00003274 l       .debug_loc     00000000 
0000328f l       .debug_loc     00000000 
000032cd l       .debug_loc     00000000 
0000330b l       .debug_loc     00000000 
00003348 l       .debug_loc     00000000 
0000336b l       .debug_loc     00000000 
00003386 l       .debug_loc     00000000 
000033a1 l       .debug_loc     00000000 
000033bc l       .debug_loc     00000000 
000033f9 l       .debug_loc     00000000 
0000341c l       .debug_loc     00000000 
00003437 l       .debug_loc     00000000 
00003452 l       .debug_loc     00000000 
0000346d l       .debug_loc     00000000 
000034aa l       .debug_loc     00000000 
000034f3 l       .debug_loc     00000000 
0000353a l       .debug_loc     00000000 
00003555 l       .debug_loc     00000000 
00003586 l       .debug_loc     00000000 
000035ac l       .debug_loc     00000000 
000035d2 l       .debug_loc     00000000 
000035f8 l       .debug_loc     00000000 
0000361e l       .debug_loc     00000000 
00003643 l       .debug_loc     00000000 
00003667 l       .debug_loc     00000000 
0000368e l       .debug_loc     00000000 
000036a9 l       .debug_loc     00000000 
000036c4 l       .debug_loc     00000000 
000036ea l       .debug_loc     00000000 
0000371b l       .debug_loc     00000000 
0000374c l       .debug_loc     00000000 
00003772 l       .debug_loc     00000000 
00003799 l       .debug_loc     00000000 
000037ca l       .debug_loc     00000000 
000037f0 l       .debug_loc     00000000 
00003816 l       .debug_loc     00000000 
00003831 l       .debug_loc     00000000 
00003857 l       .debug_loc     00000000 
0000387c l       .debug_loc     00000000 
000038a0 l       .debug_loc     00000000 
000038c6 l       .debug_loc     00000000 
000038e8 l       .debug_loc     00000000 
00003903 l       .debug_loc     00000000 
00003929 l       .debug_loc     00000000 
0000395b l       .debug_loc     00000000 
0000398e l       .debug_loc     00000000 
000039c1 l       .debug_loc     00000000 
00003a00 l       .debug_loc     00000000 
00003a1b l       .debug_loc     00000000 
00003a59 l       .debug_loc     00000000 
00003a80 l       .debug_loc     00000000 
00003abf l       .debug_loc     00000000 
00003ada l       .debug_loc     00000000 
00003af5 l       .debug_loc     00000000 
00003b10 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002aff l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000004e8 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
000010c1 l       .debug_str     00000000 
00002b28 l       .debug_str     00000000 
00002b35 l       .debug_str     00000000 
00002b45 l       .debug_str     00000000 
00002b51 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
00002f15 l       .debug_str     00000000 
000060c7 l       .debug_str     00000000 
00002fba l       .debug_str     00000000 
00002fc3 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
00002fd3 l       .debug_str     00000000 
00002fe0 l       .debug_str     00000000 
00002fef l       .debug_str     00000000 
000003f0 l       .debug_ranges  00000000 
00000408 l       .debug_ranges  00000000 
00000420 l       .debug_ranges  00000000 
00007d2b l       .debug_str     00000000 
00006980 l       .debug_str     00000000 
00002dc3 l       .debug_str     00000000 
00000438 l       .debug_ranges  00000000 
00000450 l       .debug_ranges  00000000 
0000665b l       .debug_str     00000000 
00000468 l       .debug_ranges  00000000 
00002b95 l       .debug_str     00000000 
00002b5d l       .debug_str     00000000 
00002b6e l       .debug_str     00000000 
00002b82 l       .debug_str     00000000 
00002c08 l       .debug_str     00000000 
00002ba1 l       .debug_str     00000000 
00002bb4 l       .debug_str     00000000 
00002bc9 l       .debug_str     00000000 
00002bde l       .debug_str     00000000 
00002bf3 l       .debug_str     00000000 
00002c57 l       .debug_str     00000000 
00002c16 l       .debug_str     00000000 
00002c23 l       .debug_str     00000000 
00002c30 l       .debug_str     00000000 
00002c3d l       .debug_str     00000000 
00002c4a l       .debug_str     00000000 
00002cc8 l       .debug_str     00000000 
00002c62 l       .debug_str     00000000 
00002c7b l       .debug_str     00000000 
00002c95 l       .debug_str     00000000 
00002cb0 l       .debug_str     00000000 
00002cde l       .debug_str     00000000 
00002ce9 l       .debug_str     00000000 
00002cf6 l       .debug_str     00000000 
00002d00 l       .debug_str     00000000 
00002d46 l       .debug_str     00000000 
00002d0e l       .debug_str     00000000 
00002d2a l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
00002d5a l       .debug_str     00000000 
00002d68 l       .debug_str     00000000 
00002d74 l       .debug_str     00000000 
00002d83 l       .debug_str     00000000 
00002d94 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002da2 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00002dba l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00002dc7 l       .debug_str     00000000 
00002dd7 l       .debug_str     00000000 
00002ded l       .debug_str     00000000 
00002e3a l       .debug_str     00000000 
00006426 l       .debug_str     00000000 
00002e03 l       .debug_str     00000000 
00002e0e l       .debug_str     00000000 
00002e1e l       .debug_str     00000000 
00002e2d l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002e4b l       .debug_str     00000000 
00000c5a l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
00002e62 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00002f7e l       .debug_str     00000000 
00000488 l       .debug_ranges  00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00002e6b l       .debug_str     00000000 
00002e89 l       .debug_str     00000000 
00002f8e l       .debug_str     00000000 
000004a0 l       .debug_ranges  00000000 
00002e93 l       .debug_str     00000000 
00002f9e l       .debug_str     00000000 
00002ea9 l       .debug_str     00000000 
00002eb8 l       .debug_str     00000000 
00002ec6 l       .debug_str     00000000 
00005f06 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00002ecd l       .debug_str     00000000 
00002d53 l       .debug_str     00000000 
00002ef2 l       .debug_str     00000000 
00002efc l       .debug_str     00000000 
00002edc l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00002f03 l       .debug_str     00000000 
00002f1e l       .debug_str     00000000 
00002f38 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00002f4d l       .debug_str     00000000 
00002f5c l       .debug_str     00000000 
00002f70 l       .debug_str     00000000 
000011fb l       .debug_str     00000000 
000004b8 l       .debug_ranges  00000000 
000004d0 l       .debug_ranges  00000000 
00002fa5 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000360 l       .debug_frame   00000000 
d000a7f4 l       .text  00000000 
d000e5d4 l       .shutdown      00000000 
00000000 l    df *ABS*  00000000 rom_print.c
d000a7f4 l       .text  00000000 
d000a7f4 l       .text  00000000 
d000a7f4 l       .text  00000000 
d000a7f6 l       .text  00000000 
d000a808 l       .text  00000000 
d000a80a l       .text  00000000 
d000a81a l       .text  00000000 
d000a81a l       .text  00000000 
d000a82c l       .text  00000000 
d000e8e0 l     O .rodata        00000010 rom_printf.kHexTable
d000a82c l       .text  00000000 
d000a838 l       .text  00000000 
d000a838 l       .text  00000000 
d000a83c l       .text  00000000 
d000a842 l       .text  00000000 
d000a844 l       .text  00000000 
d000a848 l       .text  00000000 
d000a848 l       .text  00000000 
d000a84a l       .text  00000000 
d000a84a l       .text  00000000 
d000a84e l       .text  00000000 
d000a852 l       .text  00000000 
d000a852 l       .text  00000000 
d000a85a l       .text  00000000 
d000a85a l       .text  00000000 
d000a85c l       .text  00000000 
d000a860 l       .text  00000000 
d000a864 l       .text  00000000 
d000a864 l       .text  00000000 
d000a86a l       .text  00000000 
d000a86c l       .text  00000000 
d000a86c l       .text  00000000 
d000a870 l       .text  00000000 
d000a870 l       .text  00000000 
d000a878 l       .text  00000000 
d000a878 l       .text  00000000 
d000a87c l       .text  00000000 
d000a882 l       .text  00000000 
d000a882 l       .text  00000000 
d000a884 l       .text  00000000 
d000a888 l       .text  00000000 
d000a88c l       .text  00000000 
d000a88c l       .text  00000000 
d000a88e l       .text  00000000 
d000a88e l       .text  00000000 
d000a892 l       .text  00000000 
d000a898 l       .text  00000000 
d000a89c l       .text  00000000 
d000a89c l       .text  00000000 
d000a89e l       .text  00000000 
d000a89e l       .text  00000000 
d000a8a0 l       .text  00000000 
d000a8a0 l       .text  00000000 
d000a8a2 l       .text  00000000 
d000a8a2 l       .text  00000000 
d000a8a4 l       .text  00000000 
d000a8aa l       .text  00000000 
d000a8aa l       .text  00000000 
d000a8c2 l       .text  00000000 
d000a8c2 l       .text  00000000 
00003b30 l       .debug_loc     00000000 
00003b7c l       .debug_loc     00000000 
00003bbc l       .debug_loc     00000000 
00003bcf l       .debug_loc     00000000 
00003be2 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002ff8 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000011c1 l       .debug_str     00000000 
00002ef2 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
00000510 l       .debug_ranges  00000000 
00003041 l       .debug_str     00000000 
00000ea3 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000528 l       .debug_ranges  00000000 
00002fbd l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00003022 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00003039 l       .debug_str     00000000 
0000302f l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000003d4 l       .debug_frame   00000000 
d000a8c2 l       .text  00000000 
00000000 l    df *ABS*  00000000 alert.c
d000a8c2 l       .text  00000000 
d000a8c2 l       .text  00000000 
d000a8c2 l       .text  00000000 
d000a8c6 l       .text  00000000 
d000a8ca l       .text  00000000 
d000a8ce l       .text  00000000 
d000a8d2 l       .text  00000000 
d000a8d4 l       .text  00000000 
d000a8d4 l       .text  00000000 
d000a8dc l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e8 l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8f0 l       .text  00000000 
d000a8f4 l       .text  00000000 
d000a8f8 l       .text  00000000 
d000a8fc l       .text  00000000 
d000a900 l       .text  00000000 
d000a904 l       .text  00000000 
d000a908 l       .text  00000000 
d000a908 l       .text  00000000 
d000a90c l       .text  00000000 
d000a912 l       .text  00000000 
d000a912 l       .text  00000000 
d000a916 l       .text  00000000 
d000a91a l       .text  00000000 
d000a91e l       .text  00000000 
d000a922 l       .text  00000000 
d000a926 l       .text  00000000 
d000a926 l       .text  00000000 
d000a92a l       .text  00000000 
d000a92a l       .text  00000000 
d000a92e l       .text  00000000 
d000a92e l       .text  00000000 
d000a932 l       .text  00000000 
d000a932 l       .text  00000000 
d000a936 l       .text  00000000 
d000a936 l       .text  00000000 
d000a952 l       .text  00000000 
d000a958 l       .text  00000000 
d000a958 l       .text  00000000 
d000a95c l       .text  00000000 
d000a960 l       .text  00000000 
d000a960 l       .text  00000000 
d000a964 l       .text  00000000 
d000a964 l       .text  00000000 
d000a966 l       .text  00000000 
d000a966 l       .text  00000000 
d000a96c l       .text  00000000 
d000a96c l       .text  00000000 
d000a972 l       .text  00000000 
d000a972 l       .text  00000000 
d000a976 l       .text  00000000 
d000a97a l       .text  00000000 
d000a97a l       .text  00000000 
d000a97c l       .text  00000000 
d000a97c l       .text  00000000 
d000a982 l       .text  00000000 
d000a982 l       .text  00000000 
d000a982 l       .text  00000000 
d000a982 l       .text  00000000 
d000a982 l       .text  00000000 
d000a984 l       .text  00000000 
d000a988 l       .text  00000000 
d000a98c l       .text  00000000 
d000a990 l       .text  00000000 
d000a992 l       .text  00000000 
d000a992 l       .text  00000000 
d000a99a l       .text  00000000 
d000a99e l       .text  00000000 
d000a99e l       .text  00000000 
d000a9a6 l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9ae l       .text  00000000 
d000a9b2 l       .text  00000000 
d000a9b6 l       .text  00000000 
d000a9ba l       .text  00000000 
d000a9be l       .text  00000000 
d000a9c2 l       .text  00000000 
d000a9c6 l       .text  00000000 
d000a9c6 l       .text  00000000 
d000a9ca l       .text  00000000 
d000a9d0 l       .text  00000000 
d000a9d0 l       .text  00000000 
d000a9d4 l       .text  00000000 
d000a9d8 l       .text  00000000 
d000a9dc l       .text  00000000 
d000a9e0 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e4 l       .text  00000000 
d000a9e8 l       .text  00000000 
d000a9e8 l       .text  00000000 
d000a9ec l       .text  00000000 
d000a9ec l       .text  00000000 
d000a9f0 l       .text  00000000 
d000a9f0 l       .text  00000000 
d000a9f4 l       .text  00000000 
d000a9f4 l       .text  00000000 
d000aa10 l       .text  00000000 
d000aa16 l       .text  00000000 
d000aa16 l       .text  00000000 
d000aa1a l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa22 l       .text  00000000 
d000aa22 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa24 l       .text  00000000 
d000aa2a l       .text  00000000 
d000aa2a l       .text  00000000 
d000aa30 l       .text  00000000 
d000aa30 l       .text  00000000 
d000aa34 l       .text  00000000 
d000aa38 l       .text  00000000 
d000aa38 l       .text  00000000 
d000aa3a l       .text  00000000 
d000aa3a l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa42 l       .text  00000000 
d000aa4a l       .text  00000000 
d000aa4e l       .text  00000000 
d000aa52 l       .text  00000000 
d000aa56 l       .text  00000000 
d000aa5a l       .text  00000000 
d000aa5e l       .text  00000000 
d000aa62 l       .text  00000000 
d000aa62 l       .text  00000000 
d000aa68 l       .text  00000000 
d000aa6c l       .text  00000000 
d000aa70 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa78 l       .text  00000000 
d000aa80 l       .text  00000000 
d000aa82 l       .text  00000000 
d000aa86 l       .text  00000000 
d000aa86 l       .text  00000000 
d000aa8e l       .text  00000000 
d000aa92 l       .text  00000000 
d000aa96 l       .text  00000000 
d000aa9a l       .text  00000000 
d000aa9e l       .text  00000000 
d000aaa2 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaaa l       .text  00000000 
d000aab4 l       .text  00000000 
d000aab4 l       .text  00000000 
d000aac2 l       .text  00000000 
d000aac6 l       .text  00000000 
d000aaca l       .text  00000000 
d000aace l       .text  00000000 
d000aad2 l       .text  00000000 
d000aad6 l       .text  00000000 
d000aada l       .text  00000000 
d000aade l       .text  00000000 
d000aade l       .text  00000000 
d000aae0 l       .text  00000000 
d000aae0 l       .text  00000000 
d000aae4 l       .text  00000000 
d000aae8 l       .text  00000000 
d000aaec l       .text  00000000 
d000aaf0 l       .text  00000000 
d000aaf0 l       .text  00000000 
d000aaf4 l       .text  00000000 
d000aaf4 l       .text  00000000 
d000aaf8 l       .text  00000000 
d000aaf8 l       .text  00000000 
d000aafc l       .text  00000000 
d000aafc l       .text  00000000 
d000ab00 l       .text  00000000 
d000ab00 l       .text  00000000 
d000ab08 l       .text  00000000 
d000ab08 l       .text  00000000 
d000ab0a l       .text  00000000 
d000ab0a l       .text  00000000 
d000ab0e l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab14 l       .text  00000000 
d000ab14 l       .text  00000000 
d000ab18 l       .text  00000000 
d000ab1c l       .text  00000000 
d000ab1c l       .text  00000000 
d000ab1e l       .text  00000000 
d000ab1e l       .text  00000000 
d000ab20 l       .text  00000000 
d000ab20 l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab2c l       .text  00000000 
d000ab2c l       .text  00000000 
d000ab2e l       .text  00000000 
d000ab2e l       .text  00000000 
d000ab30 l       .text  00000000 
d000ab30 l       .text  00000000 
d000ab3a l       .text  00000000 
d000ab3a l       .text  00000000 
d000ab3c l       .text  00000000 
d000ab3c l       .text  00000000 
d000ab3e l       .text  00000000 
d000ab3e l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab4c l       .text  00000000 
d000ab50 l       .text  00000000 
d000ab50 l       .text  00000000 
d000ab54 l       .text  00000000 
d000ab54 l       .text  00000000 
d000ab56 l       .text  00000000 
d000ab56 l       .text  00000000 
d000ab5e l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ab62 l       .text  00000000 
d000ab72 l       .text  00000000 
d000ab7a l       .text  00000000 
d000ab7e l       .text  00000000 
d000ab7e l       .text  00000000 
d000ab84 l       .text  00000000 
d000ab84 l       .text  00000000 
d000ab88 l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8e l       .text  00000000 
d000ab8e l       .text  00000000 
d000ab90 l       .text  00000000 
d000ab90 l       .text  00000000 
d000ab94 l       .text  00000000 
d000ab94 l       .text  00000000 
d000ab9a l       .text  00000000 
d000ab9a l       .text  00000000 
d000ab9e l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba6 l       .text  00000000 
d000aba6 l       .text  00000000 
d000aba8 l       .text  00000000 
d000aba8 l       .text  00000000 
d000abac l       .text  00000000 
d000abac l       .text  00000000 
d000abb2 l       .text  00000000 
d000abb2 l       .text  00000000 
d000abb6 l       .text  00000000 
d000abba l       .text  00000000 
d000abba l       .text  00000000 
d000abbe l       .text  00000000 
d000abbe l       .text  00000000 
d000abc0 l       .text  00000000 
d000abc0 l       .text  00000000 
d000abc4 l       .text  00000000 
d000abc4 l       .text  00000000 
d000abc8 l       .text  00000000 
d000abc8 l       .text  00000000 
d000abcc l       .text  00000000 
d000abd0 l       .text  00000000 
d000abd0 l       .text  00000000 
d000abd4 l       .text  00000000 
d000abd4 l       .text  00000000 
d000abd6 l       .text  00000000 
d000abd6 l       .text  00000000 
d000abda l       .text  00000000 
d000abda l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abe2 l       .text  00000000 
d000abe6 l       .text  00000000 
d000abe6 l       .text  00000000 
d000abea l       .text  00000000 
d000abea l       .text  00000000 
d000abec l       .text  00000000 
d000abec l       .text  00000000 
d000abf0 l       .text  00000000 
d000abf0 l       .text  00000000 
d000abf4 l       .text  00000000 
d000abf4 l       .text  00000000 
d000abf8 l       .text  00000000 
d000abfc l       .text  00000000 
d000abfc l       .text  00000000 
d000ac00 l       .text  00000000 
d000ac00 l       .text  00000000 
d000ac02 l       .text  00000000 
d000ac02 l       .text  00000000 
d000ac06 l       .text  00000000 
d000ac06 l       .text  00000000 
d000ac18 l       .text  00000000 
d000ac18 l       .text  00000000 
d000ac1c l       .text  00000000 
d000ac1c l       .text  00000000 
d000ac20 l       .text  00000000 
d000ac20 l       .text  00000000 
d000ac24 l       .text  00000000 
d000ac24 l       .text  00000000 
d000ac26 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac2c l       .text  00000000 
d000ac2c l       .text  00000000 
d000ac30 l       .text  00000000 
d000ac30 l       .text  00000000 
d000ac34 l       .text  00000000 
d000ac34 l       .text  00000000 
d000ac38 l       .text  00000000 
d000ac38 l       .text  00000000 
d000ac3c l       .text  00000000 
d000ac3c l       .text  00000000 
d000ac40 l       .text  00000000 
d000ac40 l       .text  00000000 
d000ac42 l       .text  00000000 
d000ac42 l       .text  00000000 
d000ac46 l       .text  00000000 
d000ac48 l       .text  00000000 
d000ac48 l       .text  00000000 
d000ac4c l       .text  00000000 
d000ac4c l       .text  00000000 
d000ac4e l       .text  00000000 
d000ac4e l       .text  00000000 
d000ac52 l       .text  00000000 
d000ac52 l       .text  00000000 
d000ac54 l       .text  00000000 
d000ac5c l       .text  00000000 
d000ac5c l       .text  00000000 
d000ac60 l       .text  00000000 
d000ac60 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac76 l       .text  00000000 
d000ac7c l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac82 l       .text  00000000 
d000ac82 l       .text  00000000 
d000ac8a l       .text  00000000 
d000ac8a l       .text  00000000 
d000ac8c l       .text  00000000 
d000ac8c l       .text  00000000 
d000ac90 l       .text  00000000 
d000ac90 l       .text  00000000 
d000ac94 l       .text  00000000 
d000ac98 l       .text  00000000 
d000aca0 l       .text  00000000 
d000aca4 l       .text  00000000 
d000acb0 l       .text  00000000 
d000acb6 l       .text  00000000 
d000acbe l       .text  00000000 
d000acc2 l       .text  00000000 
d000acce l       .text  00000000 
d000acd4 l       .text  00000000 
d000acdc l       .text  00000000 
d000ace8 l       .text  00000000 
d000acee l       .text  00000000 
d000acf6 l       .text  00000000 
d000acfa l       .text  00000000 
d000ad06 l       .text  00000000 
d000ad0a l       .text  00000000 
d000ad0e l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad14 l       .text  00000000 
d000ad14 l       .text  00000000 
d000ad16 l       .text  00000000 
d000ad16 l       .text  00000000 
d000ad1a l       .text  00000000 
d000ad1a l       .text  00000000 
d000ad1e l       .text  00000000 
d000ad1e l       .text  00000000 
d000ad2c l       .text  00000000 
d000ad30 l       .text  00000000 
d000ad34 l       .text  00000000 
d000ad36 l       .text  00000000 
d000ad38 l       .text  00000000 
d000ad3e l       .text  00000000 
d000ad3e l       .text  00000000 
d000ad46 l       .text  00000000 
d000ad4a l       .text  00000000 
d000ad5a l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad5e l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
00003c13 l       .debug_loc     00000000 
00003c44 l       .debug_loc     00000000 
00003c96 l       .debug_loc     00000000 
00003cc7 l       .debug_loc     00000000 
00003cf8 l       .debug_loc     00000000 
00003d4a l       .debug_loc     00000000 
00003d7b l       .debug_loc     00000000 
00003db7 l       .debug_loc     00000000 
00003de8 l       .debug_loc     00000000 
00003e43 l       .debug_loc     00000000 
00003eb4 l       .debug_loc     00000000 
00003ed6 l       .debug_loc     00000000 
00003ef8 l       .debug_loc     00000000 
00003f1a l       .debug_loc     00000000 
00003f3c l       .debug_loc     00000000 
00003f7b l       .debug_loc     00000000 
00003fae l       .debug_loc     00000000 
00003fea l       .debug_loc     00000000 
0000401d l       .debug_loc     00000000 
0000405b l       .debug_loc     00000000 
0000408e l       .debug_loc     00000000 
000040cc l       .debug_loc     00000000 
000040ff l       .debug_loc     00000000 
0000413d l       .debug_loc     00000000 
00004170 l       .debug_loc     00000000 
000041ae l       .debug_loc     00000000 
000041e1 l       .debug_loc     00000000 
0000421f l       .debug_loc     00000000 
0000423d l       .debug_loc     00000000 
00004258 l       .debug_loc     00000000 
00004275 l       .debug_loc     00000000 
000042a8 l       .debug_loc     00000000 
000042d9 l       .debug_loc     00000000 
000042ff l       .debug_loc     00000000 
00004325 l       .debug_loc     00000000 
0000434b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003045 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000558 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002c57 l       .debug_str     00000000 
00002c16 l       .debug_str     00000000 
00002c23 l       .debug_str     00000000 
00002c30 l       .debug_str     00000000 
00002c3d l       .debug_str     00000000 
00002c4a l       .debug_str     00000000 
00002b95 l       .debug_str     00000000 
00002b5d l       .debug_str     00000000 
00002b6e l       .debug_str     00000000 
00002b82 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00002c08 l       .debug_str     00000000 
00002ba1 l       .debug_str     00000000 
00002bb4 l       .debug_str     00000000 
00002bc9 l       .debug_str     00000000 
00002bde l       .debug_str     00000000 
00002bf3 l       .debug_str     00000000 
000030e0 l       .debug_str     00000000 
00003073 l       .debug_str     00000000 
000067d1 l       .debug_str     00000000 
000030f3 l       .debug_str     00000000 
000030f9 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000163c l       .debug_str     00000000 
0000307e l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001b7c l       .debug_str     00000000 
000030ed l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002f1e l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00002dc7 l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00002dc3 l       .debug_str     00000000 
00006426 l       .debug_str     00000000 
00002dd7 l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00002ded l       .debug_str     00000000 
000060c7 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000540 l       .debug_ranges  00000000 
000030ce l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00003084 l       .debug_str     00000000 
00003092 l       .debug_str     00000000 
000030a1 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000030aa l       .debug_str     00000000 
000030b5 l       .debug_str     00000000 
000030c1 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00002d94 l       .debug_str     00000000 
00002d74 l       .debug_str     00000000 
00002fa5 l       .debug_str     00000000 
00002e3a l       .debug_str     00000000 
00002e03 l       .debug_str     00000000 
00002e0e l       .debug_str     00000000 
00002e1e l       .debug_str     00000000 
00002e2d l       .debug_str     00000000 
00002d83 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000410 l       .debug_frame   00000000 
d000a982 l       .text  00000000 
d000aa40 l       .text  00000000 
d000ab60 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ad66 l       .text  00000000 
00000000 l    df *ABS*  00000000 crc32.c
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad66 l       .text  00000000 
d000ad68 l       .text  00000000 
d000ad6a l       .text  00000000 
d000ad6c l       .text  00000000 
d000ad6c l       .text  00000000 
d000ad6c l       .text  00000000 
d000ad6c l       .text  00000000 
d000ad6c l       .text  00000000 
d000ad6e l       .text  00000000 
d000ad82 l       .text  00000000 
d000ad82 l       .text  00000000 
d000ad86 l       .text  00000000 
d000ad86 l       .text  00000000 
d000ad8a l       .text  00000000 
d000ad8a l       .text  00000000 
d000ad8e l       .text  00000000 
d000ad90 l       .text  00000000 
d000ad92 l       .text  00000000 
d000ad94 l       .text  00000000 
d000ad94 l       .text  00000000 
d000ad96 l       .text  00000000 
d000ad96 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad98 l       .text  00000000 
d000ad9a l       .text  00000000 
d000ad9e l       .text  00000000 
d000ada2 l       .text  00000000 
d000ada8 l       .text  00000000 
d000ada8 l       .text  00000000 
d000adaa l       .text  00000000 
d000adaa l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adae l       .text  00000000 
d000adb0 l       .text  00000000 
d000adb0 l       .text  00000000 
d000adb4 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adb6 l       .text  00000000 
00004371 l       .debug_loc     00000000 
0000438c l       .debug_loc     00000000 
000043c5 l       .debug_loc     00000000 
000043e0 l       .debug_loc     00000000 
000043fb l       .debug_loc     00000000 
00004416 l       .debug_loc     00000000 
0000444f l       .debug_loc     00000000 
00004475 l       .debug_loc     00000000 
0000449b l       .debug_loc     00000000 
000044c1 l       .debug_loc     00000000 
000044dc l       .debug_loc     00000000 
000044f7 l       .debug_loc     00000000 
00004530 l       .debug_loc     00000000 
0000454b l       .debug_loc     00000000 
00004584 l       .debug_loc     00000000 
0000459f l       .debug_loc     00000000 
000045c5 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003105 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000610 l       .debug_ranges  00000000 
0000312b l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
00000590 l       .debug_ranges  00000000 
00003136 l       .debug_str     00000000 
000067d1 l       .debug_str     00000000 
00006576 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
000025c3 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00003141 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000030b5 l       .debug_str     00000000 
0000180a l       .debug_str     00000000 
00007d94 l       .debug_str     00000000 
000005a8 l       .debug_ranges  00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000314a l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000005c0 l       .debug_ranges  00000000 
000005e0 l       .debug_ranges  00000000 
000005f8 l       .debug_ranges  00000000 
000030aa l       .debug_str     00000000 
000030c1 l       .debug_str     00000000 
000030ed l       .debug_str     00000000 
000004a4 l       .debug_frame   00000000 
d000ad6c l       .text  00000000 
d000adae l       .text  00000000 
d000adb6 l       .text  00000000 
00000000 l    df *ABS*  00000000 ast.c
d000adb6 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adb6 l       .text  00000000 
d000adb8 l       .text  00000000 
d000adb8 l       .text  00000000 
d000adb8 l       .text  00000000 
d000adba l       .text  00000000 
d000adbc l       .text  00000000 
d000adbc l       .text  00000000 
d000adc4 l       .text  00000000 
d000adc4 l       .text  00000000 
d000adc8 l       .text  00000000 
d000adc8 l       .text  00000000 
d000adcc l       .text  00000000 
d000add0 l       .text  00000000 
d000add8 l       .text  00000000 
d000addc l       .text  00000000 
d000adea l       .text  00000000 
d000adf2 l       .text  00000000 
d000adf6 l       .text  00000000 
d000ae04 l       .text  00000000 
d000ae0c l       .text  00000000 
d000ae1a l       .text  00000000 
d000ae22 l       .text  00000000 
d000ae26 l       .text  00000000 
d000ae32 l       .text  00000000 
d000ae36 l       .text  00000000 
d000ae3a l       .text  00000000 
d000ae3a l       .text  00000000 
d000ae3c l       .text  00000000 
d000ae3c l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae42 l       .text  00000000 
d000ae42 l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae54 l       .text  00000000 
d000ae54 l       .text  00000000 
d000ae6c l       .text  00000000 
d000ae6c l       .text  00000000 
d000ae70 l       .text  00000000 
d000ae70 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae7a l       .text  00000000 
d000ae7a l       .text  00000000 
d000ae7c l       .text  00000000 
d000ae80 l       .text  00000000 
d000ae80 l       .text  00000000 
d000ae82 l       .text  00000000 
d000ae82 l       .text  00000000 
d000ae88 l       .text  00000000 
d000ae8c l       .text  00000000 
d000ae8c l       .text  00000000 
d000ae98 l       .text  00000000 
d000ae98 l       .text  00000000 
d000ae9c l       .text  00000000 
d000ae9e l       .text  00000000 
d000aeaa l       .text  00000000 
d000aeb2 l       .text  00000000 
d000aeb6 l       .text  00000000 
d000aec2 l       .text  00000000 
d000aec2 l       .text  00000000 
d000aec6 l       .text  00000000 
d000aecc l       .text  00000000 
d000aecc l       .text  00000000 
d000aed4 l       .text  00000000 
d000aed4 l       .text  00000000 
000045eb l       .debug_loc     00000000 
0000461c l       .debug_loc     00000000 
00004642 l       .debug_loc     00000000 
00004668 l       .debug_loc     00000000 
00004683 l       .debug_loc     00000000 
000046b9 l       .debug_loc     00000000 
000046ed l       .debug_loc     00000000 
00004708 l       .debug_loc     00000000 
00004723 l       .debug_loc     00000000 
0000474c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003154 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000648 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00003180 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
0000318d l       .debug_str     00000000 
00001b7c l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
000010f3 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00002cf3 l       .debug_str     00000000 
00002ec6 l       .debug_str     00000000 
00003191 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000534 l       .debug_frame   00000000 
d000aed4 l       .text  00000000 
00000000 l    df *ABS*  00000000 flash_ctrl.c
d000aed4 l       .text  00000000 
d000aed4 l       .text  00000000 
d000aed4 l       .text  00000000 
d000aed6 l       .text  00000000 
d000aede l       .text  00000000 
d000aee4 l       .text  00000000 
d000aee4 l       .text  00000000 
d000aee6 l       .text  00000000 
d000aee6 l       .text  00000000 
d000aeee l       .text  00000000 
d000aeee l       .text  00000000 
d000aef2 l       .text  00000000 
d000aef2 l       .text  00000000 
d000aef6 l       .text  00000000 
d000aefa l       .text  00000000 
d000aefa l       .text  00000000 
d000aefc l       .text  00000000 
d000aefc l       .text  00000000 
d000af00 l       .text  00000000 
d000af00 l       .text  00000000 
d000af08 l       .text  00000000 
d000af0a l       .text  00000000 
d000af0a l       .text  00000000 
d000af12 l       .text  00000000 
d000af12 l       .text  00000000 
d000af16 l       .text  00000000 
d000af16 l       .text  00000000 
d000af1a l       .text  00000000 
d000af1e l       .text  00000000 
d000af1e l       .text  00000000 
d000af20 l       .text  00000000 
d000af20 l       .text  00000000 
d000af24 l       .text  00000000 
d000af24 l       .text  00000000 
d000af36 l       .text  00000000 
d000af36 l       .text  00000000 
d000af48 l       .text  00000000 
d000af48 l       .text  00000000 
d000af4a l       .text  00000000 
d000af4c l       .text  00000000 
d000af4e l       .text  00000000 
d000af54 l       .text  00000000 
d000af54 l       .text  00000000 
d000af54 l       .text  00000000 
d000af54 l       .text  00000000 
d000af54 l       .text  00000000 
d000af56 l       .text  00000000 
d000af5c l       .text  00000000 
d000af5e l       .text  00000000 
d000af66 l       .text  00000000 
d000af6c l       .text  00000000 
d000af6c l       .text  00000000 
d000af74 l       .text  00000000 
d000af74 l       .text  00000000 
d000af76 l       .text  00000000 
d000af76 l       .text  00000000 
d000af78 l       .text  00000000 
d000af78 l       .text  00000000 
d000af7a l       .text  00000000 
d000af7a l       .text  00000000 
d000af7c l       .text  00000000 
d000af7e l       .text  00000000 
d000af7e l       .text  00000000 
d000af80 l       .text  00000000 
d000af80 l       .text  00000000 
d000af82 l       .text  00000000 
d000af84 l       .text  00000000 
d000af84 l       .text  00000000 
d000af86 l       .text  00000000 
d000af86 l       .text  00000000 
d000af88 l       .text  00000000 
d000af8a l       .text  00000000 
d000af8c l       .text  00000000 
d000af8c l       .text  00000000 
d000af92 l       .text  00000000 
d000af9a l       .text  00000000 
d000af9a l       .text  00000000 
d000af9a l       .text  00000000 
d000af9a l       .text  00000000 
d000af9a l       .text  00000000 
d000af9a l       .text  00000000 
d000af9c l       .text  00000000 
d000afa2 l       .text  00000000 
d000afa4 l       .text  00000000 
d000b5ce l     F .text  00000366 info_cfg_regs
d000afa4 l       .text  00000000 
d000afa6 l       .text  00000000 
d000afa8 l       .text  00000000 
d000afa8 l       .text  00000000 
d000afae l       .text  00000000 
d000afae l       .text  00000000 
d000afb2 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afb8 l       .text  00000000 
d000afb8 l       .text  00000000 
d000afba l       .text  00000000 
d000afba l       .text  00000000 
d000afbc l       .text  00000000 
d000afbc l       .text  00000000 
d000afbe l       .text  00000000 
d000afbe l       .text  00000000 
d000afc0 l       .text  00000000 
d000afc0 l       .text  00000000 
d000afc2 l       .text  00000000 
d000afc4 l       .text  00000000 
d000afc4 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc8 l       .text  00000000 
d000afc8 l       .text  00000000 
d000afca l       .text  00000000 
d000afca l       .text  00000000 
d000afd2 l       .text  00000000 
d000afd2 l       .text  00000000 
d000afd6 l       .text  00000000 
d000afd8 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe0 l     F .text  0000007c transaction_start
d000afe0 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe0 l       .text  00000000 
d000afe6 l       .text  00000000 
d000afe6 l       .text  00000000 
d000afe8 l       .text  00000000 
d000afe8 l       .text  00000000 
d000afea l       .text  00000000 
d000afec l       .text  00000000 
d000afec l       .text  00000000 
d000afec l       .text  00000000 
d000aff4 l       .text  00000000 
d000aff4 l       .text  00000000 
d000aff8 l       .text  00000000 
d000b008 l       .text  00000000 
d000b008 l       .text  00000000 
d000b00a l       .text  00000000 
d000b012 l       .text  00000000 
d000b016 l       .text  00000000 
d000b028 l       .text  00000000 
d000b028 l       .text  00000000 
d000b02a l       .text  00000000 
d000b02c l       .text  00000000 
d000b02c l       .text  00000000 
d000b02e l       .text  00000000 
d000b032 l       .text  00000000 
d000b032 l       .text  00000000 
d000b034 l       .text  00000000 
d000b034 l       .text  00000000 
d000b036 l       .text  00000000 
d000b036 l       .text  00000000 
d000b03a l       .text  00000000 
d000b03e l       .text  00000000 
d000b03e l       .text  00000000 
d000b042 l       .text  00000000 
d000b042 l       .text  00000000 
d000b044 l       .text  00000000 
d000b044 l       .text  00000000 
d000b046 l       .text  00000000 
d000b046 l       .text  00000000 
d000b04c l       .text  00000000 
d000b04c l       .text  00000000 
d000b050 l       .text  00000000 
d000b050 l       .text  00000000 
d000b052 l       .text  00000000 
d000b052 l       .text  00000000 
d000b054 l       .text  00000000 
d000b054 l       .text  00000000 
d000b05c l       .text  00000000 
d000b05c l       .text  00000000 
d000b05c l       .text  00000000 
d000b05c l       .text  00000000 
d000b05c l       .text  00000000 
d000b05e l       .text  00000000 
d000b066 l       .text  00000000 
d000b068 l       .text  00000000 
d000b06a l       .text  00000000 
d000b06c l       .text  00000000 
d000b0ce l     F .text  000002b8 info_page_addr
d000b06c l       .text  00000000 
d000b06e l       .text  00000000 
d000b06e l       .text  00000000 
d000b070 l       .text  00000000 
d000b070 l       .text  00000000 
d000b078 l       .text  00000000 
d000b078 l       .text  00000000 
d000b07c l       .text  00000000 
d000b088 l       .text  00000000 
d000b088 l       .text  00000000 
d000b08a l       .text  00000000 
d000b08e l       .text  00000000 
d000b08e l       .text  00000000 
d000b092 l       .text  00000000 
d000b092 l       .text  00000000 
d000b094 l       .text  00000000 
d000b094 l       .text  00000000 
d000b096 l       .text  00000000 
d000b098 l       .text  00000000 
d000b09a l       .text  00000000 
d000b09a l       .text  00000000 
d000b09e l       .text  00000000 
d000b09e l       .text  00000000 
d000b0a2 l       .text  00000000 
d000b0a2 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a6 l       .text  00000000 
d000b0a8 l       .text  00000000 
d000b0ac l       .text  00000000 
d000b0ac l       .text  00000000 
d000b0b0 l       .text  00000000 
d000b0b0 l       .text  00000000 
d000b0b8 l       .text  00000000 
d000b0b8 l       .text  00000000 
d000b0ba l       .text  00000000 
d000b0c2 l       .text  00000000 
d000b0c4 l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0d0 l       .text  00000000 
d000b0d0 l       .text  00000000 
d000b0d8 l       .text  00000000 
d000b0d8 l       .text  00000000 
d000b0dc l       .text  00000000 
d000b0dc l       .text  00000000 
d000b0e4 l       .text  00000000 
d000b0e8 l       .text  00000000 
d000b0f0 l       .text  00000000 
d000b0f4 l       .text  00000000 
d000b0f8 l       .text  00000000 
d000b0fc l       .text  00000000 
d000b104 l       .text  00000000 
d000b108 l       .text  00000000 
d000b108 l       .text  00000000 
d000b108 l       .text  00000000 
d000b108 l       .text  00000000 
d000b118 l       .text  00000000 
d000b118 l       .text  00000000 
d000b120 l       .text  00000000 
d000b124 l       .text  00000000 
d000b12c l       .text  00000000 
d000b130 l       .text  00000000 
d000b134 l       .text  00000000 
d000b138 l       .text  00000000 
d000b140 l       .text  00000000 
d000b144 l       .text  00000000 
d000b144 l       .text  00000000 
d000b144 l       .text  00000000 
d000b144 l       .text  00000000 
d000b154 l       .text  00000000 
d000b154 l       .text  00000000 
d000b15c l       .text  00000000 
d000b160 l       .text  00000000 
d000b164 l       .text  00000000 
d000b168 l       .text  00000000 
d000b170 l       .text  00000000 
d000b174 l       .text  00000000 
d000b174 l       .text  00000000 
d000b174 l       .text  00000000 
d000b174 l       .text  00000000 
d000b186 l       .text  00000000 
d000b186 l       .text  00000000 
d000b18e l       .text  00000000 
d000b192 l       .text  00000000 
d000b196 l       .text  00000000 
d000b19a l       .text  00000000 
d000b1a2 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1b6 l       .text  00000000 
d000b1b6 l       .text  00000000 
d000b1be l       .text  00000000 
d000b1c2 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1c4 l       .text  00000000 
d000b1d2 l       .text  00000000 
d000b1d2 l       .text  00000000 
d000b1da l       .text  00000000 
d000b1de l       .text  00000000 
d000b1de l       .text  00000000 
d000b1de l       .text  00000000 
d000b1de l       .text  00000000 
d000b1ee l       .text  00000000 
d000b1ee l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b20c l       .text  00000000 
d000b20c l       .text  00000000 
d000b214 l       .text  00000000 
d000b218 l       .text  00000000 
d000b218 l       .text  00000000 
d000b218 l       .text  00000000 
d000b218 l       .text  00000000 
d000b22a l       .text  00000000 
d000b22a l       .text  00000000 
d000b22a l       .text  00000000 
d000b22a l       .text  00000000 
d000b232 l       .text  00000000 
d000b232 l       .text  00000000 
d000b240 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b24a l       .text  00000000 
d000b24a l       .text  00000000 
d000b25c l       .text  00000000 
d000b25c l       .text  00000000 
d000b25c l       .text  00000000 
d000b25c l       .text  00000000 
d000b264 l       .text  00000000 
d000b264 l       .text  00000000 
d000b276 l       .text  00000000 
d000b276 l       .text  00000000 
d000b276 l       .text  00000000 
d000b276 l       .text  00000000 
d000b27e l       .text  00000000 
d000b27e l       .text  00000000 
d000b28c l       .text  00000000 
d000b28e l       .text  00000000 
d000b296 l       .text  00000000 
d000b29a l       .text  00000000 
d000b29a l       .text  00000000 
d000b29a l       .text  00000000 
d000b29a l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2ac l       .text  00000000 
d000b2b4 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2b8 l       .text  00000000 
d000b2c8 l       .text  00000000 
d000b2c8 l       .text  00000000 
d000b2d0 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2e6 l       .text  00000000 
d000b2e6 l       .text  00000000 
d000b2ee l       .text  00000000 
d000b2f2 l       .text  00000000 
d000b2f2 l       .text  00000000 
d000b2f2 l       .text  00000000 
d000b2f2 l       .text  00000000 
d000b304 l       .text  00000000 
d000b304 l       .text  00000000 
d000b30c l       .text  00000000 
d000b310 l       .text  00000000 
d000b310 l       .text  00000000 
d000b310 l       .text  00000000 
d000b310 l       .text  00000000 
d000b322 l       .text  00000000 
d000b322 l       .text  00000000 
d000b32a l       .text  00000000 
d000b32e l       .text  00000000 
d000b32e l       .text  00000000 
d000b32e l       .text  00000000 
d000b32e l       .text  00000000 
d000b33e l       .text  00000000 
d000b33e l       .text  00000000 
d000b346 l       .text  00000000 
d000b34a l       .text  00000000 
d000b34a l       .text  00000000 
d000b34a l       .text  00000000 
d000b34a l       .text  00000000 
d000b35a l       .text  00000000 
d000b35a l       .text  00000000 
d000b362 l       .text  00000000 
d000b366 l       .text  00000000 
d000b366 l       .text  00000000 
d000b366 l       .text  00000000 
d000b366 l       .text  00000000 
d000b376 l       .text  00000000 
d000b37a l       .text  00000000 
d000b37e l       .text  00000000 
d000b37e l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b386 l       .text  00000000 
d000b390 l       .text  00000000 
d000b392 l       .text  00000000 
d000b392 l       .text  00000000 
d000b396 l     F .text  000000ae write
d000b396 l       .text  00000000 
d000b396 l       .text  00000000 
d000b396 l       .text  00000000 
d000b396 l       .text  00000000 
d000b396 l       .text  00000000 
d000b396 l       .text  00000000 
d000b398 l       .text  00000000 
d000b398 l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3ac l       .text  00000000 
d000b3ae l       .text  00000000 
d000b3b0 l       .text  00000000 
d000b3b2 l       .text  00000000 
d000b3b4 l       .text  00000000 
d000b3b6 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3ba l       .text  00000000 
d000b3ba l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3be l       .text  00000000 
d000b3c2 l       .text  00000000 
d000b3c2 l       .text  00000000 
d000b3d0 l       .text  00000000 
d000b3d2 l       .text  00000000 
d000b3d6 l       .text  00000000 
d000b3d8 l       .text  00000000 
d000b3d8 l       .text  00000000 
d000b3e6 l       .text  00000000 
d000b3e6 l       .text  00000000 
d000b3ea l       .text  00000000 
d000b3ea l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3f0 l       .text  00000000 
d000b3f0 l       .text  00000000 
d000b3f2 l       .text  00000000 
d000b3f4 l       .text  00000000 
d000b3f6 l       .text  00000000 
d000b3f6 l       .text  00000000 
d000b3fa l       .text  00000000 
d000b3fa l       .text  00000000 
d000b3fe l       .text  00000000 
d000b3fe l       .text  00000000 
d000b400 l       .text  00000000 
d000b400 l       .text  00000000 
d000b404 l       .text  00000000 
d000b404 l       .text  00000000 
d000b410 l       .text  00000000 
d000b410 l       .text  00000000 
d000b412 l       .text  00000000 
d000b418 l       .text  00000000 
d000b41c l       .text  00000000 
d000b41e l       .text  00000000 
d000b420 l       .text  00000000 
d000b424 l       .text  00000000 
d000b426 l       .text  00000000 
d000b426 l       .text  00000000 
d000b428 l       .text  00000000 
d000b428 l       .text  00000000 
d000b42c l       .text  00000000 
d000b444 l       .text  00000000 
d000b444 l       .text  00000000 
d000b444 l       .text  00000000 
d000b444 l       .text  00000000 
d000b444 l       .text  00000000 
d000b446 l       .text  00000000 
d000b446 l       .text  00000000 
d000b448 l       .text  00000000 
d000b44c l       .text  00000000 
d000b45a l       .text  00000000 
d000b45a l       .text  00000000 
d000b45e l       .text  00000000 
d000b45e l       .text  00000000 
d000b462 l       .text  00000000 
d000b462 l       .text  00000000 
d000b466 l       .text  00000000 
d000b466 l       .text  00000000 
d000b468 l       .text  00000000 
d000b46c l       .text  00000000 
d000b46c l       .text  00000000 
d000b470 l       .text  00000000 
d000b470 l       .text  00000000 
d000b478 l       .text  00000000 
d000b478 l       .text  00000000 
d000b47a l       .text  00000000 
d000b482 l       .text  00000000 
d000b488 l       .text  00000000 
d000b488 l       .text  00000000 
d000b488 l       .text  00000000 
d000b488 l       .text  00000000 
d000b488 l       .text  00000000 
d000b488 l       .text  00000000 
d000b48a l       .text  00000000 
d000b48a l       .text  00000000 
d000b492 l       .text  00000000 
d000b492 l       .text  00000000 
d000b496 l       .text  00000000 
d000b496 l       .text  00000000 
d000b4a6 l       .text  00000000 
d000b4a6 l       .text  00000000 
d000b4ac l       .text  00000000 
d000b4ae l       .text  00000000 
d000b4b6 l       .text  00000000 
d000b4ba l       .text  00000000 
d000b4ce l       .text  00000000 
d000b4ce l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d2 l       .text  00000000 
d000b4d2 l       .text  00000000 
d000b4d6 l       .text  00000000 
d000b4d6 l       .text  00000000 
d000b4de l       .text  00000000 
d000b4e2 l       .text  00000000 
d000b4e6 l       .text  00000000 
d000b4e6 l       .text  00000000 
d000b4ea l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4ee l       .text  00000000 
d000b4ee l       .text  00000000 
d000b4f0 l       .text  00000000 
d000b4f0 l       .text  00000000 
d000b4f2 l       .text  00000000 
d000b4f2 l       .text  00000000 
d000b4f4 l       .text  00000000 
d000b4f4 l       .text  00000000 
d000b4fa l       .text  00000000 
d000b4fa l       .text  00000000 
d000b4fe l       .text  00000000 
d000b4fe l       .text  00000000 
d000b50a l       .text  00000000 
d000b50a l       .text  00000000 
d000b50c l       .text  00000000 
d000b50c l       .text  00000000 
d000b510 l       .text  00000000 
d000b510 l       .text  00000000 
d000b518 l       .text  00000000 
d000b51a l       .text  00000000 
d000b51c l       .text  00000000 
d000b528 l       .text  00000000 
d000b52c l       .text  00000000 
d000b52e l       .text  00000000 
d000b530 l       .text  00000000 
d000b530 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b538 l       .text  00000000 
d000b540 l       .text  00000000 
d000b540 l       .text  00000000 
d000b544 l       .text  00000000 
d000b548 l       .text  00000000 
d000b548 l       .text  00000000 
d000b548 l       .text  00000000 
d000b548 l       .text  00000000 
d000b548 l       .text  00000000 
d000b548 l       .text  00000000 
d000b54a l       .text  00000000 
d000b550 l       .text  00000000 
d000b552 l       .text  00000000 
d000b55a l       .text  00000000 
d000b560 l       .text  00000000 
d000b560 l       .text  00000000 
d000b564 l       .text  00000000 
d000b564 l       .text  00000000 
d000b566 l       .text  00000000 
d000b566 l       .text  00000000 
d000b568 l       .text  00000000 
d000b568 l       .text  00000000 
d000b56a l       .text  00000000 
d000b56c l       .text  00000000 
d000b56c l       .text  00000000 
d000b56e l       .text  00000000 
d000b56e l       .text  00000000 
d000b570 l       .text  00000000 
d000b574 l       .text  00000000 
d000b576 l       .text  00000000 
d000b576 l       .text  00000000 
d000b578 l       .text  00000000 
d000b57a l       .text  00000000 
d000b57c l       .text  00000000 
d000b57c l       .text  00000000 
d000b582 l       .text  00000000 
d000b58a l       .text  00000000 
d000b58a l       .text  00000000 
d000b58a l       .text  00000000 
d000b58a l       .text  00000000 
d000b58a l       .text  00000000 
d000b58a l       .text  00000000 
d000b58c l       .text  00000000 
d000b592 l       .text  00000000 
d000b594 l       .text  00000000 
d000b594 l       .text  00000000 
d000b596 l       .text  00000000 
d000b598 l       .text  00000000 
d000b598 l       .text  00000000 
d000b59e l       .text  00000000 
d000b59e l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a4 l       .text  00000000 
d000b5a4 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5a6 l       .text  00000000 
d000b5a8 l       .text  00000000 
d000b5a8 l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5aa l       .text  00000000 
d000b5ae l       .text  00000000 
d000b5ae l       .text  00000000 
d000b5b0 l       .text  00000000 
d000b5b2 l       .text  00000000 
d000b5b2 l       .text  00000000 
d000b5b4 l       .text  00000000 
d000b5b6 l       .text  00000000 
d000b5b6 l       .text  00000000 
d000b5b8 l       .text  00000000 
d000b5b8 l       .text  00000000 
d000b5c0 l       .text  00000000 
d000b5c0 l       .text  00000000 
d000b5c4 l       .text  00000000 
d000b5c6 l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5ce l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5e4 l       .text  00000000 
d000b5e8 l       .text  00000000 
d000b5f0 l       .text  00000000 
d000b5f4 l       .text  00000000 
d000b5f8 l       .text  00000000 
d000b5fc l       .text  00000000 
d000b604 l       .text  00000000 
d000b608 l       .text  00000000 
d000b608 l       .text  00000000 
d000b608 l       .text  00000000 
d000b608 l       .text  00000000 
d000b620 l       .text  00000000 
d000b622 l       .text  00000000 
d000b622 l       .text  00000000 
d000b62a l       .text  00000000 
d000b62e l       .text  00000000 
d000b636 l       .text  00000000 
d000b63a l       .text  00000000 
d000b63e l       .text  00000000 
d000b642 l       .text  00000000 
d000b64a l       .text  00000000 
d000b64e l       .text  00000000 
d000b64e l       .text  00000000 
d000b64e l       .text  00000000 
d000b64e l       .text  00000000 
d000b666 l       .text  00000000 
d000b668 l       .text  00000000 
d000b668 l       .text  00000000 
d000b670 l       .text  00000000 
d000b674 l       .text  00000000 
d000b678 l       .text  00000000 
d000b67c l       .text  00000000 
d000b684 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b6a0 l       .text  00000000 
d000b6a2 l       .text  00000000 
d000b6a2 l       .text  00000000 
d000b6aa l       .text  00000000 
d000b6ae l       .text  00000000 
d000b6b2 l       .text  00000000 
d000b6b6 l       .text  00000000 
d000b6be l       .text  00000000 
d000b6c2 l       .text  00000000 
d000b6c2 l       .text  00000000 
d000b6c2 l       .text  00000000 
d000b6c2 l       .text  00000000 
d000b6da l       .text  00000000 
d000b6dc l       .text  00000000 
d000b6dc l       .text  00000000 
d000b6e4 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b700 l       .text  00000000 
d000b702 l       .text  00000000 
d000b702 l       .text  00000000 
d000b70a l       .text  00000000 
d000b70e l       .text  00000000 
d000b70e l       .text  00000000 
d000b70e l       .text  00000000 
d000b70e l       .text  00000000 
d000b726 l       .text  00000000 
d000b728 l       .text  00000000 
d000b728 l       .text  00000000 
d000b730 l       .text  00000000 
d000b734 l       .text  00000000 
d000b734 l       .text  00000000 
d000b734 l       .text  00000000 
d000b734 l       .text  00000000 
d000b74c l       .text  00000000 
d000b74e l       .text  00000000 
d000b74e l       .text  00000000 
d000b756 l       .text  00000000 
d000b75a l       .text  00000000 
d000b75a l       .text  00000000 
d000b75a l       .text  00000000 
d000b75a l       .text  00000000 
d000b772 l       .text  00000000 
d000b774 l       .text  00000000 
d000b774 l       .text  00000000 
d000b774 l       .text  00000000 
d000b774 l       .text  00000000 
d000b77c l       .text  00000000 
d000b77c l       .text  00000000 
d000b78c l       .text  00000000 
d000b794 l       .text  00000000 
d000b796 l       .text  00000000 
d000b796 l       .text  00000000 
d000b796 l       .text  00000000 
d000b796 l       .text  00000000 
d000b79e l       .text  00000000 
d000b79e l       .text  00000000 
d000b7ae l       .text  00000000 
d000b7b6 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7b8 l       .text  00000000 
d000b7c0 l       .text  00000000 
d000b7c0 l       .text  00000000 
d000b7d0 l       .text  00000000 
d000b7d8 l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7da l       .text  00000000 
d000b7e2 l       .text  00000000 
d000b7e2 l       .text  00000000 
d000b7f2 l       .text  00000000 
d000b7fa l       .text  00000000 
d000b7fc l       .text  00000000 
d000b7fc l       .text  00000000 
d000b804 l       .text  00000000 
d000b808 l       .text  00000000 
d000b808 l       .text  00000000 
d000b808 l       .text  00000000 
d000b808 l       .text  00000000 
d000b820 l       .text  00000000 
d000b822 l       .text  00000000 
d000b822 l       .text  00000000 
d000b82a l       .text  00000000 
d000b82e l       .text  00000000 
d000b82e l       .text  00000000 
d000b82e l       .text  00000000 
d000b82e l       .text  00000000 
d000b846 l       .text  00000000 
d000b848 l       .text  00000000 
d000b848 l       .text  00000000 
d000b850 l       .text  00000000 
d000b854 l       .text  00000000 
d000b854 l       .text  00000000 
d000b854 l       .text  00000000 
d000b854 l       .text  00000000 
d000b86c l       .text  00000000 
d000b86e l       .text  00000000 
d000b86e l       .text  00000000 
d000b876 l       .text  00000000 
d000b87a l       .text  00000000 
d000b87a l       .text  00000000 
d000b87a l       .text  00000000 
d000b87a l       .text  00000000 
d000b892 l       .text  00000000 
d000b894 l       .text  00000000 
d000b894 l       .text  00000000 
d000b89c l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8b8 l       .text  00000000 
d000b8ba l       .text  00000000 
d000b8ba l       .text  00000000 
d000b8c2 l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8c6 l       .text  00000000 
d000b8de l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e0 l       .text  00000000 
d000b8e8 l       .text  00000000 
d000b8ec l       .text  00000000 
d000b8ec l       .text  00000000 
d000b8ec l       .text  00000000 
d000b8ec l       .text  00000000 
d000b904 l       .text  00000000 
d000b906 l       .text  00000000 
d000b906 l       .text  00000000 
d000b90e l       .text  00000000 
d000b912 l       .text  00000000 
d000b912 l       .text  00000000 
d000b912 l       .text  00000000 
d000b912 l       .text  00000000 
d000b92a l       .text  00000000 
d000b92c l       .text  00000000 
d000b92c l       .text  00000000 
d000b934 l       .text  00000000 
d000b934 l       .text  00000000 
d000b934 l       .text  00000000 
d000b934 l       .text  00000000 
d000b934 l       .text  00000000 
d000b934 l       .text  00000000 
d000b936 l       .text  00000000 
d000b936 l       .text  00000000 
d000b93a l       .text  00000000 
d000b93a l       .text  00000000 
d000b93e l       .text  00000000 
d000b93e l       .text  00000000 
d000b940 l       .text  00000000 
d000b94c l       .text  00000000 
d000b94c l       .text  00000000 
d000b94e l       .text  00000000 
d000b952 l       .text  00000000 
d000b956 l       .text  00000000 
d000b964 l       .text  00000000 
d000b964 l       .text  00000000 
d000b968 l       .text  00000000 
d000b96c l       .text  00000000 
d000b970 l       .text  00000000 
d000b970 l       .text  00000000 
d000b978 l       .text  00000000 
d000b978 l       .text  00000000 
00004767 l       .debug_loc     00000000 
0000478b l       .debug_loc     00000000 
000047b1 l       .debug_loc     00000000 
000047d5 l       .debug_loc     00000000 
00004825 l       .debug_loc     00000000 
00004849 l       .debug_loc     00000000 
00004864 l       .debug_loc     00000000 
00004888 l       .debug_loc     00000000 
000048ac l       .debug_loc     00000000 
0000490d l       .debug_loc     00000000 
00004931 l       .debug_loc     00000000 
0000494c l       .debug_loc     00000000 
00004974 l       .debug_loc     00000000 
000049aa l       .debug_loc     00000000 
000049c5 l       .debug_loc     00000000 
000049e7 l       .debug_loc     00000000 
00004a10 l       .debug_loc     00000000 
00004a30 l       .debug_loc     00000000 
00004a52 l       .debug_loc     00000000 
00004a6d l       .debug_loc     00000000 
00004a8f l       .debug_loc     00000000 
00004aaa l       .debug_loc     00000000 
00004ac5 l       .debug_loc     00000000 
00004aed l       .debug_loc     00000000 
00004b08 l       .debug_loc     00000000 
00004b50 l       .debug_loc     00000000 
00004b72 l       .debug_loc     00000000 
00004b94 l       .debug_loc     00000000 
00004baf l       .debug_loc     00000000 
00004bca l       .debug_loc     00000000 
00004bec l       .debug_loc     00000000 
00004c0e l       .debug_loc     00000000 
00004c29 l       .debug_loc     00000000 
00004c4b l       .debug_loc     00000000 
00004c66 l       .debug_loc     00000000 
00004c81 l       .debug_loc     00000000 
00004c9c l       .debug_loc     00000000 
00004cc2 l       .debug_loc     00000000 
00004ce8 l       .debug_loc     00000000 
00004d04 l       .debug_loc     00000000 
00004d1f l       .debug_loc     00000000 
00004d3a l       .debug_loc     00000000 
00004d55 l       .debug_loc     00000000 
00004d7d l       .debug_loc     00000000 
00004dbd l       .debug_loc     00000000 
00004def l       .debug_loc     00000000 
00004e16 l       .debug_loc     00000000 
00004e31 l       .debug_loc     00000000 
00004e4d l       .debug_loc     00000000 
00004e6f l       .debug_loc     00000000 
00004e8a l       .debug_loc     00000000 
00004ea9 l       .debug_loc     00000000 
00004ecb l       .debug_loc     00000000 
00004eef l       .debug_loc     00000000 
00004f0d l       .debug_loc     00000000 
00004f2f l       .debug_loc     00000000 
00004f51 l       .debug_loc     00000000 
00004f6c l       .debug_loc     00000000 
00004f92 l       .debug_loc     00000000 
00004fb8 l       .debug_loc     00000000 
00004fde l       .debug_loc     00000000 
00004ff9 l       .debug_loc     00000000 
00005015 l       .debug_loc     00000000 
00005030 l       .debug_loc     00000000 
0000504b l       .debug_loc     00000000 
00005066 l       .debug_loc     00000000 
0000515d l       .debug_loc     00000000 
00005183 l       .debug_loc     00000000 
000051a9 l       .debug_loc     00000000 
000051cf l       .debug_loc     00000000 
000051ea l       .debug_loc     00000000 
00005210 l       .debug_loc     00000000 
00005236 l       .debug_loc     00000000 
00005251 l       .debug_loc     00000000 
00005277 l       .debug_loc     00000000 
000052c9 l       .debug_loc     00000000 
000052e4 l       .debug_loc     00000000 
000052ff l       .debug_loc     00000000 
00005325 l       .debug_loc     00000000 
00005356 l       .debug_loc     00000000 
00005387 l       .debug_loc     00000000 
000053a2 l       .debug_loc     00000000 
000053bd l       .debug_loc     00000000 
000053d8 l       .debug_loc     00000000 
000053f3 l       .debug_loc     00000000 
00005424 l       .debug_loc     00000000 
00005455 l       .debug_loc     00000000 
0000547b l       .debug_loc     00000000 
000054d4 l       .debug_loc     00000000 
000054fd l       .debug_loc     00000000 
00005532 l       .debug_loc     00000000 
00005565 l       .debug_loc     00000000 
000055a2 l       .debug_loc     00000000 
000055bd l       .debug_loc     00000000 
000055e3 l       .debug_loc     00000000 
000055fe l       .debug_loc     00000000 
00005624 l       .debug_loc     00000000 
0000563f l       .debug_loc     00000000 
0000565a l       .debug_loc     00000000 
0000568b l       .debug_loc     00000000 
000056b3 l       .debug_loc     00000000 
000056d9 l       .debug_loc     00000000 
000056fb l       .debug_loc     00000000 
00005724 l       .debug_loc     00000000 
0000573f l       .debug_loc     00000000 
00005761 l       .debug_loc     00000000 
0000577c l       .debug_loc     00000000 
0000579e l       .debug_loc     00000000 
000057b9 l       .debug_loc     00000000 
000057d4 l       .debug_loc     00000000 
000057fc l       .debug_loc     00000000 
00005817 l       .debug_loc     00000000 
0000585f l       .debug_loc     00000000 
00005881 l       .debug_loc     00000000 
000058a3 l       .debug_loc     00000000 
000058be l       .debug_loc     00000000 
000058d9 l       .debug_loc     00000000 
000058fb l       .debug_loc     00000000 
00005916 l       .debug_loc     00000000 
00005938 l       .debug_loc     00000000 
00005953 l       .debug_loc     00000000 
00005a4a l       .debug_loc     00000000 
00005a70 l       .debug_loc     00000000 
00005a96 l       .debug_loc     00000000 
00005abc l       .debug_loc     00000000 
00005ae3 l       .debug_loc     00000000 
00005b22 l       .debug_loc     00000000 
00005b3d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000319b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000007a0 l       .debug_ranges  00000000 
000031ce l       .debug_str     00000000 
00001b5c l       .debug_str     00000000 
00001b47 l       .debug_str     00000000 
000018c3 l       .debug_str     00000000 
000018df l       .debug_str     00000000 
000018ff l       .debug_str     00000000 
0000191d l       .debug_str     00000000 
0000193f l       .debug_str     00000000 
00001961 l       .debug_str     00000000 
00001983 l       .debug_str     00000000 
000019a4 l       .debug_str     00000000 
000019c5 l       .debug_str     00000000 
000019e6 l       .debug_str     00000000 
00001a07 l       .debug_str     00000000 
00001a23 l       .debug_str     00000000 
00001a3f l       .debug_str     00000000 
00001a5c l       .debug_str     00000000 
00001a79 l       .debug_str     00000000 
00001a9b l       .debug_str     00000000 
00001abd l       .debug_str     00000000 
00001ae2 l       .debug_str     00000000 
00001b01 l       .debug_str     00000000 
00001b24 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d34 l       .debug_str     00000000 
00001d4c l       .debug_str     00000000 
00003249 l       .debug_str     00000000 
000031e6 l       .debug_str     00000000 
000031fe l       .debug_str     00000000 
00003217 l       .debug_str     00000000 
00003230 l       .debug_str     00000000 
00001cec l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00001001 l       .debug_str     00000000 
0000325e l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00003254 l       .debug_str     00000000 
000025cd l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
000034d5 l       .debug_str     00000000 
00001885 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
000010cf l       .debug_str     00000000 
000033a1 l       .debug_str     00000000 
000033a9 l       .debug_str     00000000 
000033ec l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
000032f6 l       .debug_str     00000000 
000033f6 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00000660 l       .debug_ranges  00000000 
00003316 l       .debug_str     00000000 
00001b52 l       .debug_str     00000000 
000032cf l       .debug_str     00000000 
00000678 l       .debug_ranges  00000000 
00000690 l       .debug_ranges  00000000 
000006a8 l       .debug_ranges  00000000 
00000ff0 l       .debug_str     00000000 
0000326f l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
000032d8 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
0000332e l       .debug_str     00000000 
00003452 l       .debug_str     00000000 
0000344f l       .debug_str     00000000 
00006686 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000028e1 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
00007878 l       .debug_str     00000000 
00003290 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00003344 l       .debug_str     00000000 
00003359 l       .debug_str     00000000 
0000349c l       .debug_str     00000000 
000034b8 l       .debug_str     00000000 
000034c3 l       .debug_str     00000000 
000034cd l       .debug_str     00000000 
000006c0 l       .debug_ranges  00000000 
000006d8 l       .debug_ranges  00000000 
000006f0 l       .debug_ranges  00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
00001f3c l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
0000336b l       .debug_str     00000000 
000024a5 l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
0000666e l       .debug_str     00000000 
00001f6c l       .debug_str     00000000 
00002454 l       .debug_str     00000000 
00001d6f l       .debug_str     00000000 
0000246a l       .debug_str     00000000 
000022ea l       .debug_str     00000000 
00000708 l       .debug_ranges  00000000 
00000720 l       .debug_ranges  00000000 
0000180a l       .debug_str     00000000 
00001f9d l       .debug_str     00000000 
0000165f l       .debug_str     00000000 
000034e7 l       .debug_str     00000000 
00002432 l       .debug_str     00000000 
00001f36 l       .debug_str     00000000 
00000740 l       .debug_ranges  00000000 
00001f00 l       .debug_str     00000000 
00000758 l       .debug_ranges  00000000 
00000770 l       .debug_ranges  00000000 
00000788 l       .debug_ranges  00000000 
000024c8 l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
0000329a l       .debug_str     00000000 
000032b4 l       .debug_str     00000000 
0000309c l       .debug_str     00000000 
000032e6 l       .debug_str     00000000 
000032c2 l       .debug_str     00000000 
0000337a l       .debug_str     00000000 
000033db l       .debug_str     00000000 
000033cc l       .debug_str     00000000 
000033ba l       .debug_str     00000000 
000033c5 l       .debug_str     00000000 
000033c9 l       .debug_str     00000000 
00001f1a l       .debug_str     00000000 
0000343b l       .debug_str     00000000 
00003429 l       .debug_str     00000000 
000033fa l       .debug_str     00000000 
00003402 l       .debug_str     00000000 
0000340b l       .debug_str     00000000 
00003415 l       .debug_str     00000000 
00003420 l       .debug_str     00000000 
000034a3 l       .debug_str     00000000 
00003490 l       .debug_str     00000000 
00003459 l       .debug_str     00000000 
00003461 l       .debug_str     00000000 
00003479 l       .debug_str     00000000 
000034f0 l       .debug_str     00000000 
00001f2b l       .debug_str     00000000 
000028dc l       .debug_str     00000000 
00002464 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
00000570 l       .debug_frame   00000000 
d000af54 l       .text  00000000 
d000af9a l       .text  00000000 
d000afe0 l       .text  00000000 
d000b05c l       .text  00000000 
d000b0ce l       .text  00000000 
d000b386 l       .text  00000000 
d000b396 l       .text  00000000 
d000b444 l       .text  00000000 
d000b488 l       .text  00000000 
d000b538 l       .text  00000000 
d000b548 l       .text  00000000 
d000b58a l       .text  00000000 
d000b5ce l       .text  00000000 
d000b934 l       .text  00000000 
d000b978 l       .text  00000000 
00000000 l    df *ABS*  00000000 ibex.c
d000b978 l       .text  00000000 
d000b978 l       .text  00000000 
d000b978 l       .text  00000000 
d000b97a l       .text  00000000 
d000b982 l       .text  00000000 
d000b984 l       .text  00000000 
d000b984 l       .text  00000000 
d000b988 l       .text  00000000 
d000b98a l       .text  00000000 
d000b98e l       .text  00000000 
d000b98e l       .text  00000000 
d000b996 l       .text  00000000 
d000b996 l       .text  00000000 
d000b99c l       .text  00000000 
d000b99c l       .text  00000000 
d000b9a0 l       .text  00000000 
d000b9a6 l       .text  00000000 
d000b9a6 l       .text  00000000 
d000b9aa l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b4 l       .text  00000000 
d000b9ba l       .text  00000000 
d000b9ba l       .text  00000000 
d000b9be l       .text  00000000 
d000b9c4 l       .text  00000000 
d000b9c4 l       .text  00000000 
d000b9c8 l       .text  00000000 
d000b9ce l       .text  00000000 
d000b9ce l       .text  00000000 
d000b9d2 l       .text  00000000 
d000b9d2 l       .text  00000000 
d000b9d4 l       .text  00000000 
d000b9d6 l       .text  00000000 
d000b9de l       .text  00000000 
d000b9de l       .text  00000000 
00005b77 l       .debug_loc     00000000 
00005b92 l       .debug_loc     00000000 
00005bb8 l       .debug_loc     00000000 
00005bd3 l       .debug_loc     00000000 
00005bee l       .debug_loc     00000000 
00005c09 l       .debug_loc     00000000 
00005c2f l       .debug_loc     00000000 
00005c4a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003503 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000848 l       .debug_ranges  00000000 
00002675 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00003542 l       .debug_str     00000000 
00003530 l       .debug_str     00000000 
000015e0 l       .debug_str     00000000 
0000356a l       .debug_str     00000000 
00003578 l       .debug_str     00000000 
00001725 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
00003554 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000075c l       .debug_frame   00000000 
d000b9de l       .text  00000000 
00000000 l    df *ABS*  00000000 keymgr.c
d000b9de l     F .text  0000005e expected_state_check
d000b9de l       .text  00000000 
d000b9de l       .text  00000000 
d000b9de l       .text  00000000 
d000b9e0 l       .text  00000000 
d000b9e8 l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9f0 l       .text  00000000 
d000b9f0 l       .text  00000000 
d000b9f4 l       .text  00000000 
d000b9f4 l       .text  00000000 
d000b9f8 l       .text  00000000 
d000b9f8 l       .text  00000000 
d000b9fc l       .text  00000000 
d000b9fc l       .text  00000000 
d000ba00 l       .text  00000000 
d000ba00 l       .text  00000000 
d000ba04 l       .text  00000000 
d000ba08 l       .text  00000000 
d000ba08 l       .text  00000000 
d000ba0c l       .text  00000000 
d000ba0c l       .text  00000000 
d000ba14 l       .text  00000000 
d000ba14 l       .text  00000000 
d000ba18 l       .text  00000000 
d000ba18 l       .text  00000000 
d000ba20 l       .text  00000000 
d000ba20 l       .text  00000000 
d000ba28 l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba32 l       .text  00000000 
d000ba34 l       .text  00000000 
d000ba36 l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3c l       .text  00000000 
d000ba3e l       .text  00000000 
d000ba4a l       .text  00000000 
d000ba4c l       .text  00000000 
d000ba4e l       .text  00000000 
d000ba5c l       .text  00000000 
d000ba5c l       .text  00000000 
d000ba66 l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6c l       .text  00000000 
d000ba6c l       .text  00000000 
d000ba70 l       .text  00000000 
d000ba70 l       .text  00000000 
d000ba76 l       .text  00000000 
d000ba76 l       .text  00000000 
d000ba84 l       .text  00000000 
d000ba88 l       .text  00000000 
d000ba88 l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8e l       .text  00000000 
d000ba8e l       .text  00000000 
d000ba96 l       .text  00000000 
d000ba9e l       .text  00000000 
d000baaa l       .text  00000000 
d000baaa l       .text  00000000 
d000baaa l       .text  00000000 
d000baaa l       .text  00000000 
d000baaa l       .text  00000000 
d000baaa l       .text  00000000 
d000baac l       .text  00000000 
d000bab0 l       .text  00000000 
d000bab2 l       .text  00000000 
d000baba l       .text  00000000 
d000babe l       .text  00000000 
d000babe l       .text  00000000 
d000bac2 l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
00005c65 l       .debug_loc     00000000 
00005c8b l       .debug_loc     00000000 
00005ca6 l       .debug_loc     00000000 
00005cc1 l       .debug_loc     00000000 
00005ce7 l       .debug_loc     00000000 
00005d02 l       .debug_loc     00000000 
00005d1d l       .debug_loc     00000000 
00005d38 l       .debug_loc     00000000 
00005d53 l       .debug_loc     00000000 
00005d79 l       .debug_loc     00000000 
00005d9f l       .debug_loc     00000000 
00005dd2 l       .debug_loc     00000000 
00005e05 l       .debug_loc     00000000 
00005e2b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003583 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000868 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000d28 l       .debug_str     00000000 
00000c75 l       .debug_str     00000000 
00000c87 l       .debug_str     00000000 
00000c98 l       .debug_str     00000000 
00000cb3 l       .debug_str     00000000 
00000cd4 l       .debug_str     00000000 
00000ce9 l       .debug_str     00000000 
00000cfe l       .debug_str     00000000 
00000d12 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000035b2 l       .debug_str     00000000 
00003623 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00001885 l       .debug_str     00000000 
000035be l       .debug_str     00000000 
0000363b l       .debug_str     00000000 
00003290 l       .debug_str     00000000 
0000364a l       .debug_str     00000000 
0000365a l       .debug_str     00000000 
00003665 l       .debug_str     00000000 
0000329a l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000326f l       .debug_str     00000000 
000015af l       .debug_str     00000000 
0000366f l       .debug_str     00000000 
00003685 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
000035d3 l       .debug_str     00000000 
000015c5 l       .debug_str     00000000 
0000369f l       .debug_str     00000000 
000035f1 l       .debug_str     00000000 
00002f1e l       .debug_str     00000000 
0000360e l       .debug_str     00000000 
0000159c l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
00002899 l       .debug_str     00000000 
00000ddb l       .debug_str     00000000 
00000dc6 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000036ab l       .debug_str     00000000 
000007b8 l       .debug_frame   00000000 
d000ba3c l       .text  00000000 
d000baaa l       .text  00000000 
d000bace l       .text  00000000 
d000bad0 l       .text  00000000 
00000000 l    df *ABS*  00000000 pinmux.c
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad2 l       .text  00000000 
d000bad2 l       .text  00000000 
d000bad4 l       .text  00000000 
d000badc l       .text  00000000 
d000badc l       .text  00000000 
d000bade l       .text  00000000 
d000bade l       .text  00000000 
d000bae2 l       .text  00000000 
d000bae2 l       .text  00000000 
d000bae6 l       .text  00000000 
d000bae6 l       .text  00000000 
d000baf6 l       .text  00000000 
d000baf6 l       .text  00000000 
d000baf8 l       .text  00000000 
d000baf8 l       .text  00000000 
d000bafc l       .text  00000000 
d000bafc l       .text  00000000 
d000bb00 l       .text  00000000 
d000bb00 l       .text  00000000 
d000bb06 l       .text  00000000 
d000bb06 l       .text  00000000 
d000bb0c l       .text  00000000 
d000bb0c l       .text  00000000 
d000bb16 l       .text  00000000 
d000bb16 l       .text  00000000 
d000bb18 l       .text  00000000 
d000bb18 l       .text  00000000 
d000bb1e l       .text  00000000 
d000bb1e l       .text  00000000 
d000bb26 l       .text  00000000 
d000bb26 l       .text  00000000 
d000bb2a l       .text  00000000 
d000bb2a l       .text  00000000 
d000bb30 l       .text  00000000 
d000bb30 l       .text  00000000 
00005e51 l       .debug_loc     00000000 
00005e6f l       .debug_loc     00000000 
00005e82 l       .debug_loc     00000000 
00005e9c l       .debug_loc     00000000 
00005eb6 l       .debug_loc     00000000 
00005ed0 l       .debug_loc     00000000 
00005eeb l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000036ba l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000036e9 l       .debug_str     00000000 
00004b9f l       .debug_str     00000000 
00004b92 l       .debug_str     00000000 
000036f8 l       .debug_str     00000000 
00004650 l       .debug_str     00000000 
00004672 l       .debug_str     00000000 
00004087 l       .debug_str     00000000 
00004065 l       .debug_str     00000000 
000036ff l       .debug_str     00000000 
00003727 l       .debug_str     00000000 
0000374f l       .debug_str     00000000 
00003777 l       .debug_str     00000000 
0000379f l       .debug_str     00000000 
000037c7 l       .debug_str     00000000 
000037ef l       .debug_str     00000000 
00003817 l       .debug_str     00000000 
0000383f l       .debug_str     00000000 
00003867 l       .debug_str     00000000 
0000388f l       .debug_str     00000000 
000038b8 l       .debug_str     00000000 
000038e1 l       .debug_str     00000000 
0000390a l       .debug_str     00000000 
00003933 l       .debug_str     00000000 
0000395c l       .debug_str     00000000 
00003985 l       .debug_str     00000000 
000039ae l       .debug_str     00000000 
000039d7 l       .debug_str     00000000 
00003a00 l       .debug_str     00000000 
00003a29 l       .debug_str     00000000 
00003a52 l       .debug_str     00000000 
00003a7b l       .debug_str     00000000 
00003aa4 l       .debug_str     00000000 
00003acd l       .debug_str     00000000 
00003af6 l       .debug_str     00000000 
00003b1f l       .debug_str     00000000 
00003b48 l       .debug_str     00000000 
00003b71 l       .debug_str     00000000 
00003b9a l       .debug_str     00000000 
00003bc3 l       .debug_str     00000000 
00003bec l       .debug_str     00000000 
00003c15 l       .debug_str     00000000 
00003c3b l       .debug_str     00000000 
00003c61 l       .debug_str     00000000 
00003c87 l       .debug_str     00000000 
00003cad l       .debug_str     00000000 
00003cd3 l       .debug_str     00000000 
00003cf9 l       .debug_str     00000000 
00003d23 l       .debug_str     00000000 
00003d4d l       .debug_str     00000000 
00003d77 l       .debug_str     00000000 
00003da1 l       .debug_str     00000000 
00003dc7 l       .debug_str     00000000 
00003ded l       .debug_str     00000000 
00003e13 l       .debug_str     00000000 
00003e39 l       .debug_str     00000000 
00003e67 l       .debug_str     00000000 
00003e92 l       .debug_str     00000000 
00003ebd l       .debug_str     00000000 
00003ee8 l       .debug_str     00000000 
00003f1d l       .debug_str     00000000 
00003f4f l       .debug_str     00000000 
00003f81 l       .debug_str     00000000 
00003fb3 l       .debug_str     00000000 
00003fe5 l       .debug_str     00000000 
00004018 l       .debug_str     00000000 
00004042 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00004656 l       .debug_str     00000000 
0000463c l       .debug_str     00000000 
000040ab l       .debug_str     00000000 
000040cf l       .debug_str     00000000 
000040f2 l       .debug_str     00000000 
0000410e l       .debug_str     00000000 
0000412a l       .debug_str     00000000 
00004146 l       .debug_str     00000000 
00004162 l       .debug_str     00000000 
0000417e l       .debug_str     00000000 
0000419a l       .debug_str     00000000 
000041b6 l       .debug_str     00000000 
000041d2 l       .debug_str     00000000 
000041ee l       .debug_str     00000000 
0000420a l       .debug_str     00000000 
00004226 l       .debug_str     00000000 
00004242 l       .debug_str     00000000 
0000425e l       .debug_str     00000000 
0000427a l       .debug_str     00000000 
00004296 l       .debug_str     00000000 
000042b2 l       .debug_str     00000000 
000042ce l       .debug_str     00000000 
000042ea l       .debug_str     00000000 
00004306 l       .debug_str     00000000 
00004323 l       .debug_str     00000000 
00004340 l       .debug_str     00000000 
0000435d l       .debug_str     00000000 
00004379 l       .debug_str     00000000 
00004395 l       .debug_str     00000000 
000043b1 l       .debug_str     00000000 
000043cd l       .debug_str     00000000 
000043e9 l       .debug_str     00000000 
00004405 l       .debug_str     00000000 
00004421 l       .debug_str     00000000 
0000443d l       .debug_str     00000000 
00004459 l       .debug_str     00000000 
00004475 l       .debug_str     00000000 
00004492 l       .debug_str     00000000 
000044af l       .debug_str     00000000 
000044cc l       .debug_str     00000000 
000044e8 l       .debug_str     00000000 
00004504 l       .debug_str     00000000 
00004520 l       .debug_str     00000000 
0000453c l       .debug_str     00000000 
00004558 l       .debug_str     00000000 
00004574 l       .debug_str     00000000 
00004590 l       .debug_str     00000000 
000045ac l       .debug_str     00000000 
000045c9 l       .debug_str     00000000 
000045e6 l       .debug_str     00000000 
00004603 l       .debug_str     00000000 
00004620 l       .debug_str     00000000 
00004b78 l       .debug_str     00000000 
00004b60 l       .debug_str     00000000 
00004676 l       .debug_str     00000000 
00004690 l       .debug_str     00000000 
000046aa l       .debug_str     00000000 
000046c4 l       .debug_str     00000000 
000046de l       .debug_str     00000000 
000046f8 l       .debug_str     00000000 
00004712 l       .debug_str     00000000 
0000472c l       .debug_str     00000000 
00004746 l       .debug_str     00000000 
00004760 l       .debug_str     00000000 
0000477a l       .debug_str     00000000 
00004794 l       .debug_str     00000000 
000047ae l       .debug_str     00000000 
000047c8 l       .debug_str     00000000 
000047e2 l       .debug_str     00000000 
000047fc l       .debug_str     00000000 
00004816 l       .debug_str     00000000 
00004830 l       .debug_str     00000000 
0000484a l       .debug_str     00000000 
00004864 l       .debug_str     00000000 
0000487f l       .debug_str     00000000 
0000489a l       .debug_str     00000000 
000048b5 l       .debug_str     00000000 
000048cf l       .debug_str     00000000 
000048e9 l       .debug_str     00000000 
00004903 l       .debug_str     00000000 
0000491d l       .debug_str     00000000 
00004937 l       .debug_str     00000000 
00004951 l       .debug_str     00000000 
0000496b l       .debug_str     00000000 
00004985 l       .debug_str     00000000 
0000499f l       .debug_str     00000000 
000049b9 l       .debug_str     00000000 
000049d4 l       .debug_str     00000000 
000049ef l       .debug_str     00000000 
00004a0a l       .debug_str     00000000 
00004a24 l       .debug_str     00000000 
00004a3e l       .debug_str     00000000 
00004a58 l       .debug_str     00000000 
00004a72 l       .debug_str     00000000 
00004a8c l       .debug_str     00000000 
00004aa6 l       .debug_str     00000000 
00004ac0 l       .debug_str     00000000 
00004ada l       .debug_str     00000000 
00004af5 l       .debug_str     00000000 
00004b10 l       .debug_str     00000000 
00004b2b l       .debug_str     00000000 
00004b46 l       .debug_str     00000000 
00004bae l       .debug_str     00000000 
00004bbd l       .debug_str     00000000 
00004bcc l       .debug_str     00000000 
00004bd8 l       .debug_str     00000000 
00005d46 l       .debug_str     00000000 
00005d38 l       .debug_str     00000000 
000070d4 l       .debug_str     00000000 
00005d14 l       .debug_str     00000000 
0000517b l       .debug_str     00000000 
0000515f l       .debug_str     00000000 
00004be5 l       .debug_str     00000000 
00004c02 l       .debug_str     00000000 
00004c1f l       .debug_str     00000000 
00004c3c l       .debug_str     00000000 
00004c59 l       .debug_str     00000000 
00004c76 l       .debug_str     00000000 
00004c93 l       .debug_str     00000000 
00004cb0 l       .debug_str     00000000 
00004ccd l       .debug_str     00000000 
00004cea l       .debug_str     00000000 
00004d07 l       .debug_str     00000000 
00004d24 l       .debug_str     00000000 
00004d41 l       .debug_str     00000000 
00004d5e l       .debug_str     00000000 
00004d7b l       .debug_str     00000000 
00004d98 l       .debug_str     00000000 
00004db5 l       .debug_str     00000000 
00004dd2 l       .debug_str     00000000 
00004def l       .debug_str     00000000 
00004e0c l       .debug_str     00000000 
00004e2a l       .debug_str     00000000 
00004e48 l       .debug_str     00000000 
00004e66 l       .debug_str     00000000 
00004e83 l       .debug_str     00000000 
00004ea0 l       .debug_str     00000000 
00004ebd l       .debug_str     00000000 
00004eda l       .debug_str     00000000 
00004ef7 l       .debug_str     00000000 
00004f14 l       .debug_str     00000000 
00004f31 l       .debug_str     00000000 
00004f4e l       .debug_str     00000000 
00004f6b l       .debug_str     00000000 
00004f88 l       .debug_str     00000000 
00004fa6 l       .debug_str     00000000 
00004fc4 l       .debug_str     00000000 
00004fe2 l       .debug_str     00000000 
00004fff l       .debug_str     00000000 
0000501c l       .debug_str     00000000 
00005039 l       .debug_str     00000000 
00005056 l       .debug_str     00000000 
00005073 l       .debug_str     00000000 
00005090 l       .debug_str     00000000 
000050ad l       .debug_str     00000000 
000050ca l       .debug_str     00000000 
000050e8 l       .debug_str     00000000 
00005106 l       .debug_str     00000000 
00005124 l       .debug_str     00000000 
00005142 l       .debug_str     00000000 
00005d1b l       .debug_str     00000000 
00005d00 l       .debug_str     00000000 
00005199 l       .debug_str     00000000 
000051be l       .debug_str     00000000 
000051e2 l       .debug_str     00000000 
00005208 l       .debug_str     00000000 
0000522a l       .debug_str     00000000 
0000524c l       .debug_str     00000000 
0000526e l       .debug_str     00000000 
00005290 l       .debug_str     00000000 
000052b2 l       .debug_str     00000000 
000052d4 l       .debug_str     00000000 
000052f6 l       .debug_str     00000000 
00005318 l       .debug_str     00000000 
0000533a l       .debug_str     00000000 
0000535c l       .debug_str     00000000 
0000537f l       .debug_str     00000000 
000053a2 l       .debug_str     00000000 
000053c5 l       .debug_str     00000000 
000053e8 l       .debug_str     00000000 
0000540b l       .debug_str     00000000 
0000542e l       .debug_str     00000000 
00005451 l       .debug_str     00000000 
00005474 l       .debug_str     00000000 
00005497 l       .debug_str     00000000 
000054ba l       .debug_str     00000000 
000054dd l       .debug_str     00000000 
00005500 l       .debug_str     00000000 
00005523 l       .debug_str     00000000 
00005546 l       .debug_str     00000000 
00005569 l       .debug_str     00000000 
0000558c l       .debug_str     00000000 
000055af l       .debug_str     00000000 
000055d2 l       .debug_str     00000000 
000055f5 l       .debug_str     00000000 
00005618 l       .debug_str     00000000 
0000563b l       .debug_str     00000000 
0000565e l       .debug_str     00000000 
0000567e l       .debug_str     00000000 
0000569e l       .debug_str     00000000 
000056be l       .debug_str     00000000 
000056de l       .debug_str     00000000 
000056fe l       .debug_str     00000000 
0000571e l       .debug_str     00000000 
00005742 l       .debug_str     00000000 
00005766 l       .debug_str     00000000 
0000578a l       .debug_str     00000000 
000057ae l       .debug_str     00000000 
000057ce l       .debug_str     00000000 
000057ee l       .debug_str     00000000 
0000580e l       .debug_str     00000000 
0000582e l       .debug_str     00000000 
00005854 l       .debug_str     00000000 
0000587a l       .debug_str     00000000 
000058a0 l       .debug_str     00000000 
000058c6 l       .debug_str     00000000 
000058ea l       .debug_str     00000000 
0000590e l       .debug_str     00000000 
00005933 l       .debug_str     00000000 
00005962 l       .debug_str     00000000 
00005991 l       .debug_str     00000000 
000059c0 l       .debug_str     00000000 
000059ef l       .debug_str     00000000 
00005a1e l       .debug_str     00000000 
00005a4d l       .debug_str     00000000 
00005a7c l       .debug_str     00000000 
00005aab l       .debug_str     00000000 
00005ada l       .debug_str     00000000 
00005afd l       .debug_str     00000000 
00005b20 l       .debug_str     00000000 
00005b43 l       .debug_str     00000000 
00005b66 l       .debug_str     00000000 
00005b89 l       .debug_str     00000000 
00005bac l       .debug_str     00000000 
00005bd1 l       .debug_str     00000000 
00005c01 l       .debug_str     00000000 
00005c2e l       .debug_str     00000000 
00005c5b l       .debug_str     00000000 
00005c88 l       .debug_str     00000000 
00005cb5 l       .debug_str     00000000 
00005ce3 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00005d56 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00005d67 l       .debug_str     00000000 
00005d71 l       .debug_str     00000000 
00005d77 l       .debug_str     00000000 
00005d81 l       .debug_str     00000000 
00001059 l       .debug_str     00000000 
00005d88 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00000884 l       .debug_frame   00000000 
d000bb30 l       .text  00000000 
00000000 l    df *ABS*  00000000 retention_sram.c
d000bb30 l       .text  00000000 
d000bb30 l       .text  00000000 
d000bb30 l       .text  00000000 
d000bb30 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb3c l       .text  00000000 
d000bb3c l       .text  00000000 
d000bb3e l       .text  00000000 
d000bb3e l       .text  00000000 
d000bb40 l       .text  00000000 
d000bb40 l       .text  00000000 
00000000 l       .debug_str     00000000 
00005d95 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008b0 l       .debug_ranges  00000000 
00002675 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00005dcc l       .debug_str     00000000 
00001156 l       .debug_str     00000000 
00000fd7 l       .debug_str     00000000 
00001136 l       .debug_str     00000000 
00001147 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001123 l       .debug_str     00000000 
00005de4 l       .debug_str     00000000 
00005ddd l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000110f l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00005df9 l       .debug_str     00000000 
00007a80 l       .debug_str     00000000 
000008b0 l       .debug_frame   00000000 
d000bb36 l       .text  00000000 
d000bb40 l       .text  00000000 
00000000 l    df *ABS*  00000000 rstmgr.c
d000bb40 l       .text  00000000 
d000bb40 l       .text  00000000 
d000bb40 l       .text  00000000 
d000bb44 l       .text  00000000 
d000bb44 l       .text  00000000 
d000bb46 l       .text  00000000 
d000bb46 l       .text  00000000 
d000bb4a l       .text  00000000 
d000bb4a l       .text  00000000 
d000bb50 l       .text  00000000 
d000bb50 l       .text  00000000 
d000bb52 l       .text  00000000 
d000bb5a l       .text  00000000 
d000bb5a l       .text  00000000 
d000bb5e l       .text  00000000 
d000bb5e l       .text  00000000 
d000bb60 l       .text  00000000 
d000bb60 l       .text  00000000 
d000bb62 l       .text  00000000 
d000bb62 l       .text  00000000 
d000bb64 l       .text  00000000 
d000bb66 l       .text  00000000 
d000bb68 l       .text  00000000 
d000bb6c l       .text  00000000 
d000bb70 l       .text  00000000 
d000bb70 l       .text  00000000 
d000bb72 l       .text  00000000 
d000bb72 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb78 l       .text  00000000 
d000bb78 l       .text  00000000 
d000bb7a l       .text  00000000 
d000bb7a l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb84 l       .text  00000000 
d000bb84 l       .text  00000000 
d000bb86 l       .text  00000000 
d000bb86 l       .text  00000000 
d000bb8a l       .text  00000000 
d000bb8a l       .text  00000000 
d000bb8c l       .text  00000000 
d000bb8c l       .text  00000000 
00005f06 l       .debug_loc     00000000 
00005f28 l       .debug_loc     00000000 
00005f4f l       .debug_loc     00000000 
00005f71 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005e11 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008d8 l       .debug_ranges  00000000 
00005e40 l       .debug_str     00000000 
00005e62 l       .debug_str     00000000 
00005e52 l       .debug_str     00000000 
00000f7e l       .debug_str     00000000 
0000283d l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00001cdd l       .debug_str     00000000 
00001c3d l       .debug_str     00000000 
00001c50 l       .debug_str     00000000 
00001c64 l       .debug_str     00000000 
00001c77 l       .debug_str     00000000 
00001c8b l       .debug_str     00000000 
00001c9f l       .debug_str     00000000 
00001cb4 l       .debug_str     00000000 
00001cc8 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00005e76 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
000010fd l       .debug_str     00000000 
00001165 l       .debug_str     00000000 
00000fdd l       .debug_str     00000000 
00005ea3 l       .debug_str     00000000 
00005e90 l       .debug_str     00000000 
000024bb l       .debug_str     00000000 
00000904 l       .debug_frame   00000000 
d000bb74 l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb8c l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000bb8c l       .text  00000000 
d000bb8c l       .text  00000000 
d000bb8c l       .text  00000000 
d000bb90 l       .text  00000000 
d000bb90 l       .text  00000000 
d000bb96 l       .text  00000000 
d000bb96 l       .text  00000000 
d000bb98 l       .text  00000000 
d000bb98 l       .text  00000000 
d000bb9c l       .text  00000000 
d000bb9c l       .text  00000000 
d000bba0 l       .text  00000000 
d000bba0 l       .text  00000000 
d000bba6 l       .text  00000000 
d000bba6 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bba8 l       .text  00000000 
d000bbaa l       .text  00000000 
d000bbaa l       .text  00000000 
d000bbae l       .text  00000000 
d000bbae l       .text  00000000 
d000bbb0 l       .text  00000000 
d000bbb0 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb4 l       .text  00000000 
d000bbb8 l       .text  00000000 
d000bbb8 l       .text  00000000 
d000bbba l       .text  00000000 
d000bbba l       .text  00000000 
d000bbba l       .text  00000000 
d000bbba l       .text  00000000 
d000bbba l       .text  00000000 
d000bbbe l       .text  00000000 
d000bbbe l       .text  00000000 
d000bbc0 l       .text  00000000 
d000bbc0 l       .text  00000000 
d000bbc2 l       .text  00000000 
d000bbc2 l       .text  00000000 
d000bbc4 l       .text  00000000 
d000bbc4 l       .text  00000000 
d000bbcc l       .text  00000000 
d000bbcc l       .text  00000000 
d000bbce l       .text  00000000 
d000bbce l       .text  00000000 
d000bbd0 l       .text  00000000 
d000bbd0 l       .text  00000000 
d000bbd2 l       .text  00000000 
d000bbd2 l       .text  00000000 
d000bbd4 l       .text  00000000 
d000bbd6 l       .text  00000000 
d000bbd6 l       .text  00000000 
00005f98 l       .debug_loc     00000000 
00005fb3 l       .debug_loc     00000000 
00005fcf l       .debug_loc     00000000 
00005ff6 l       .debug_loc     00000000 
0000601b l       .debug_loc     00000000 
00006042 l       .debug_loc     00000000 
00006064 l       .debug_loc     00000000 
0000607f l       .debug_loc     00000000 
0000609a l       .debug_loc     00000000 
000060b5 l       .debug_loc     00000000 
000060d0 l       .debug_loc     00000000 
000060eb l       .debug_loc     00000000 
0000611c l       .debug_loc     00000000 
00006142 l       .debug_loc     00000000 
0000615d l       .debug_loc     00000000 
00006178 l       .debug_loc     00000000 
00006193 l       .debug_loc     00000000 
000061ae l       .debug_loc     00000000 
000061c9 l       .debug_loc     00000000 
000061ef l       .debug_loc     00000000 
00006215 l       .debug_loc     00000000 
00006230 l       .debug_loc     00000000 
0000624b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005ebc l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000900 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00005ee9 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00001065 l       .debug_str     00000000 
00005f29 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00005ef4 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00005f01 l       .debug_str     00000000 
00003022 l       .debug_str     00000000 
00006576 l       .debug_str     00000000 
00005f0e l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00005f19 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00005f1f l       .debug_str     00000000 
00006b4b l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000958 l       .debug_frame   00000000 
d000bbba l       .text  00000000 
d000bbd6 l       .text  00000000 
00000000 l    df *ABS*  00000000 watchdog.c
d000bbd6 l       .text  00000000 
d000bbd6 l       .text  00000000 
d000bbd6 l       .text  00000000 
d000bbd8 l       .text  00000000 
d000bbd8 l       .text  00000000 
d000bbdc l       .text  00000000 
d000bbdc l       .text  00000000 
d000bbdc l       .text  00000000 
d000bbde l       .text  00000000 
d000bbde l       .text  00000000 
d000bbe6 l       .text  00000000 
d000bbe6 l       .text  00000000 
d000bbea l       .text  00000000 
d000bbea l       .text  00000000 
d000bbee l       .text  00000000 
d000bbf2 l       .text  00000000 
d000bbfa l       .text  00000000 
d000bbfe l       .text  00000000 
d000bc0c l       .text  00000000 
d000bc14 l       .text  00000000 
d000bc18 l       .text  00000000 
d000bc26 l       .text  00000000 
d000bc2e l       .text  00000000 
d000bc3c l       .text  00000000 
d000bc44 l       .text  00000000 
d000bc48 l       .text  00000000 
d000bc54 l       .text  00000000 
d000bc62 l       .text  00000000 
d000bc66 l       .text  00000000 
d000bc72 l       .text  00000000 
d000bc76 l       .text  00000000 
d000bc76 l       .text  00000000 
d000bc7a l       .text  00000000 
d000bc7e l       .text  00000000 
d000bc7e l       .text  00000000 
d000bc80 l       .text  00000000 
d000bc80 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc84 l       .text  00000000 
d000bc94 l       .text  00000000 
d000bc9a l       .text  00000000 
d000bc9c l       .text  00000000 
d000bca4 l       .text  00000000 
d000bca6 l       .text  00000000 
d000bca6 l       .text  00000000 
d000bca8 l       .text  00000000 
d000bcae l       .text  00000000 
d000bcae l       .text  00000000 
d000bcb6 l       .text  00000000 
d000bcb6 l       .text  00000000 
d000bcb6 l       .text  00000000 
d000bcb6 l       .text  00000000 
d000bcb6 l       .text  00000000 
d000bcb8 l       .text  00000000 
d000bcbe l       .text  00000000 
d000bcc0 l       .text  00000000 
d000bcc8 l       .text  00000000 
d000bcce l       .text  00000000 
d000bcce l       .text  00000000 
d000bcd0 l       .text  00000000 
d000bcd0 l       .text  00000000 
d000bcda l       .text  00000000 
d000bcda l       .text  00000000 
d000bce0 l       .text  00000000 
d000bce0 l       .text  00000000 
d000bce4 l       .text  00000000 
d000bce4 l       .text  00000000 
d000bce6 l       .text  00000000 
d000bce6 l       .text  00000000 
d000bce8 l       .text  00000000 
d000bce8 l       .text  00000000 
d000bcee l       .text  00000000 
d000bcf2 l       .text  00000000 
d000bcf2 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcf8 l       .text  00000000 
d000bcf8 l       .text  00000000 
d000bcfc l       .text  00000000 
d000bd0c l       .text  00000000 
d000bd0c l       .text  00000000 
d000bd0e l       .text  00000000 
d000bd12 l       .text  00000000 
d000bd16 l       .text  00000000 
d000bd26 l       .text  00000000 
d000bd26 l       .text  00000000 
d000bd2c l       .text  00000000 
d000bd30 l       .text  00000000 
d000bd30 l       .text  00000000 
d000bd36 l       .text  00000000 
d000bd36 l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd3c l       .text  00000000 
d000bd42 l       .text  00000000 
d000bd42 l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd50 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd56 l       .text  00000000 
00006266 l       .debug_loc     00000000 
0000628c l       .debug_loc     00000000 
000062b2 l       .debug_loc     00000000 
000062e9 l       .debug_loc     00000000 
0000630f l       .debug_loc     00000000 
0000632a l       .debug_loc     00000000 
0000635e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00005f3b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000928 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00005f6c l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
00005f82 l       .debug_str     00000000 
00005f8e l       .debug_str     00000000 
00005f9a l       .debug_str     00000000 
00006049 l       .debug_str     00000000 
00005fa7 l       .debug_str     00000000 
00005fe0 l       .debug_str     00000000 
0000601f l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000010b3 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
000060b4 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00006073 l       .debug_str     00000000 
000060c7 l       .debug_str     00000000 
00007a80 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
000011e0 l       .debug_str     00000000 
00006086 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006093 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
000060ce l       .debug_str     00000000 
000060be l       .debug_str     00000000 
000060a0 l       .debug_str     00000000 
000060af l       .debug_str     00000000 
000009ac l       .debug_frame   00000000 
d000bcb6 l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd56 l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host_autogen.c
d000bd56 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd58 l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5e l       .text  00000000 
d000bd60 l       .text  00000000 
d000bd62 l       .text  00000000 
d000bd64 l       .text  00000000 
d000bd64 l       .text  00000000 
000063a9 l       .debug_loc     00000000 
000063c4 l       .debug_loc     00000000 
000063df l       .debug_loc     00000000 
000063fa l       .debug_loc     00000000 
00006416 l       .debug_loc     00000000 
00006432 l       .debug_loc     00000000 
0000644d l       .debug_loc     00000000 
00006468 l       .debug_loc     00000000 
00006483 l       .debug_loc     00000000 
0000649e l       .debug_loc     00000000 
000064b9 l       .debug_loc     00000000 
000064d4 l       .debug_loc     00000000 
000064ef l       .debug_loc     00000000 
0000650a l       .debug_loc     00000000 
00006530 l       .debug_loc     00000000 
0000654b l       .debug_loc     00000000 
00006566 l       .debug_loc     00000000 
00006584 l       .debug_loc     00000000 
000065ab l       .debug_loc     00000000 
000065c6 l       .debug_loc     00000000 
000065e1 l       .debug_loc     00000000 
000065fc l       .debug_loc     00000000 
0000661a l       .debug_loc     00000000 
00006641 l       .debug_loc     00000000 
0000665c l       .debug_loc     00000000 
00006677 l       .debug_loc     00000000 
00006692 l       .debug_loc     00000000 
000066ad l       .debug_loc     00000000 
000066d3 l       .debug_loc     00000000 
000066ee l       .debug_loc     00000000 
00006709 l       .debug_loc     00000000 
0000672f l       .debug_loc     00000000 
0000674f l       .debug_loc     00000000 
00006775 l       .debug_loc     00000000 
00006793 l       .debug_loc     00000000 
000067ae l       .debug_loc     00000000 
000067c9 l       .debug_loc     00000000 
000067e9 l       .debug_loc     00000000 
0000680f l       .debug_loc     00000000 
00006835 l       .debug_loc     00000000 
00006850 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000060e0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000958 l       .debug_ranges  00000000 
00006111 l       .debug_str     00000000 
0000614b l       .debug_str     00000000 
0000613e l       .debug_str     00000000 
0000611b l       .debug_str     00000000 
0000612c l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
00006175 l       .debug_str     00000000 
0000615a l       .debug_str     00000000 
000061b3 l       .debug_str     00000000 
00006188 l       .debug_str     00000000 
0000619c l       .debug_str     00000000 
000061e9 l       .debug_str     00000000 
000061c4 l       .debug_str     00000000 
000061d7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000f09 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
000061f4 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00006208 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000625d l       .debug_str     00000000 
00006182 l       .debug_str     00000000 
000063a5 l       .debug_str     00000000 
000063af l       .debug_str     00000000 
00006276 l       .debug_str     00000000 
000061c0 l       .debug_str     00000000 
00007ec9 l       .debug_str     00000000 
00006212 l       .debug_str     00000000 
00006290 l       .debug_str     00000000 
000063be l       .debug_str     00000000 
00006225 l       .debug_str     00000000 
00006253 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00006240 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
000062ab l       .debug_str     00000000 
000062bc l       .debug_str     00000000 
000063e9 l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
000062c7 l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
000062e8 l       .debug_str     00000000 
00006305 l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000063f8 l       .debug_str     00000000 
0000631c l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
00006413 l       .debug_str     00000000 
00006423 l       .debug_str     00000000 
00006339 l       .debug_str     00000000 
0000642e l       .debug_str     00000000 
00006356 l       .debug_str     00000000 
00006373 l       .debug_str     00000000 
000016eb l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
00006390 l       .debug_str     00000000 
000063c7 l       .debug_str     00000000 
00006406 l       .debug_str     00000000 
00006439 l       .debug_str     00000000 
00000a24 l       .debug_frame   00000000 
d000bd64 l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host.c
d000bd64 l       .text  00000000 
d000bd64 l       .text  00000000 
d000bd64 l       .text  00000000 
d000bd66 l       .text  00000000 
d000bd68 l       .text  00000000 
d000bd70 l       .text  00000000 
d000bd74 l       .text  00000000 
d000bd74 l       .text  00000000 
d000bd78 l       .text  00000000 
d000bd78 l       .text  00000000 
d000bd7c l       .text  00000000 
d000bd82 l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd8e l       .text  00000000 
d000bd90 l       .text  00000000 
d000bd90 l       .text  00000000 
d000bd92 l       .text  00000000 
d000bd92 l       .text  00000000 
d000bd96 l       .text  00000000 
d000bd96 l       .text  00000000 
d000bd9a l       .text  00000000 
d000bd9a l       .text  00000000 
d000bd9e l       .text  00000000 
d000bd9e l       .text  00000000 
d000bda0 l       .text  00000000 
d000bda0 l       .text  00000000 
d000bda6 l       .text  00000000 
d000bda6 l       .text  00000000 
d000bdaa l       .text  00000000 
d000bdaa l       .text  00000000 
d000bdae l       .text  00000000 
d000bdb6 l       .text  00000000 
d000bdb6 l       .text  00000000 
d000bdba l       .text  00000000 
d000bdba l       .text  00000000 
d000bdbc l       .text  00000000 
d000bdbc l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdc8 l       .text  00000000 
d000bdcc l       .text  00000000 
d000bdd4 l       .text  00000000 
d000bdd4 l       .text  00000000 
d000bdd6 l       .text  00000000 
d000bdd6 l       .text  00000000 
d000bdda l       .text  00000000 
d000bdda l       .text  00000000 
d000bdde l       .text  00000000 
d000bdde l       .text  00000000 
d000bde0 l       .text  00000000 
d000bde0 l       .text  00000000 
d000bde2 l       .text  00000000 
d000bde2 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bdea l       .text  00000000 
d000bdee l       .text  00000000 
d000bdf2 l       .text  00000000 
d000bdf4 l       .text  00000000 
d000be00 l       .text  00000000 
d000be00 l       .text  00000000 
d000be02 l       .text  00000000 
d000be02 l       .text  00000000 
d000be06 l       .text  00000000 
d000be06 l       .text  00000000 
d000be0a l       .text  00000000 
d000be0a l       .text  00000000 
d000be0e l       .text  00000000 
d000be0e l       .text  00000000 
d000be12 l       .text  00000000 
d000be12 l       .text  00000000 
d000be18 l       .text  00000000 
d000be1a l       .text  00000000 
d000be1c l       .text  00000000 
d000be1e l       .text  00000000 
d000be20 l       .text  00000000 
d000be22 l       .text  00000000 
d000be22 l       .text  00000000 
d000be22 l       .text  00000000 
d000be22 l       .text  00000000 
d000be22 l       .text  00000000 
d000be24 l       .text  00000000 
d000be32 l       .text  00000000 
d000be34 l       .text  00000000 
d000be36 l       .text  00000000 
d000be3a l       .text  00000000 
d000be3c l       .text  00000000 
d000be3e l       .text  00000000 
d000be3e l       .text  00000000 
d000be46 l       .text  00000000 
d000be4c l       .text  00000000 
d000be4c l       .text  00000000 
d000be54 l       .text  00000000 
d000be64 l       .text  00000000 
d000be64 l       .text  00000000 
d000be68 l       .text  00000000 
d000be68 l       .text  00000000 
d000be6c l       .text  00000000 
d000be76 l       .text  00000000 
d000be76 l       .text  00000000 
d000be78 l       .text  00000000 
d000be7a l       .text  00000000 
d000be7a l       .text  00000000 
d000be84 l       .text  00000000 
d000be88 l       .text  00000000 
d000be88 l       .text  00000000 
d000be8a l       .text  00000000 
d000be8a l       .text  00000000 
d000be8c l       .text  00000000 
d000be8c l       .text  00000000 
d000be8e l       .text  00000000 
d000be8e l       .text  00000000 
d000be90 l       .text  00000000 
d000be90 l       .text  00000000 
d000c018 l     F .text  00000038 enqueue_word
d000be94 l       .text  00000000 
d000be94 l       .text  00000000 
d000be96 l       .text  00000000 
d000be96 l       .text  00000000 
d000be98 l       .text  00000000 
d000be9a l       .text  00000000 
d000be9a l       .text  00000000 
d000be9e l       .text  00000000 
d000be9e l       .text  00000000 
d000bea4 l       .text  00000000 
d000bea8 l       .text  00000000 
d000bea8 l       .text  00000000 
d000beac l       .text  00000000 
d000beac l       .text  00000000 
d000beb0 l       .text  00000000 
d000beb0 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb6 l       .text  00000000 
d000beb6 l       .text  00000000 
d000bebc l       .text  00000000 
d000bebc l       .text  00000000 
d000bec0 l       .text  00000000 
d000bec0 l       .text  00000000 
d000bec4 l       .text  00000000 
d000becc l       .text  00000000 
d000becc l       .text  00000000 
d000bed4 l       .text  00000000 
d000bed4 l       .text  00000000 
d000bed8 l       .text  00000000 
d000bede l       .text  00000000 
d000bee2 l       .text  00000000 
d000beea l       .text  00000000 
d000bef0 l       .text  00000000 
d000bef4 l       .text  00000000 
d000bef4 l       .text  00000000 
d000bef6 l       .text  00000000 
d000bef6 l       .text  00000000 
d000bef8 l       .text  00000000 
d000bef8 l       .text  00000000 
d000befa l       .text  00000000 
d000befa l       .text  00000000 
d000befc l       .text  00000000 
d000befc l       .text  00000000 
d000bf00 l       .text  00000000 
d000bf00 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf02 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf08 l       .text  00000000 
d000bf08 l       .text  00000000 
d000bf0c l       .text  00000000 
d000bf0c l       .text  00000000 
d000bf0e l       .text  00000000 
d000bf0e l       .text  00000000 
d000bf14 l       .text  00000000 
d000bf16 l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf20 l       .text  00000000 
d000bf24 l       .text  00000000 
d000bf26 l       .text  00000000 
d000bf26 l       .text  00000000 
d000bf2c l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf32 l       .text  00000000 
d000bf32 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf36 l       .text  00000000 
d000bf36 l       .text  00000000 
d000bf38 l       .text  00000000 
d000bf38 l       .text  00000000 
d000bf3c l       .text  00000000 
d000bf3c l       .text  00000000 
d000bf3e l       .text  00000000 
d000bf3e l       .text  00000000 
d000bf40 l       .text  00000000 
d000bf42 l       .text  00000000 
d000bf42 l       .text  00000000 
d000bf46 l       .text  00000000 
d000bf46 l       .text  00000000 
d000bf4c l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf54 l       .text  00000000 
d000bf54 l       .text  00000000 
d000bf58 l       .text  00000000 
d000bf58 l       .text  00000000 
d000bf5c l       .text  00000000 
d000bf62 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf64 l       .text  00000000 
d000bf66 l       .text  00000000 
d000bf66 l       .text  00000000 
d000bf68 l       .text  00000000 
d000bf68 l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7c l       .text  00000000 
d000bf7e l       .text  00000000 
d000bf80 l       .text  00000000 
d000bf82 l       .text  00000000 
d000bf84 l       .text  00000000 
d000bf86 l       .text  00000000 
d000bf8a l       .text  00000000 
d000bf8c l       .text  00000000 
d000bf8e l       .text  00000000 
d000bf8e l       .text  00000000 
d000bf92 l       .text  00000000 
d000bf94 l       .text  00000000 
d000bf94 l       .text  00000000 
d000bf9a l       .text  00000000 
d000bf9a l       .text  00000000 
d000bf9e l       .text  00000000 
d000bf9e l       .text  00000000 
d000bfa0 l       .text  00000000 
d000bfa0 l       .text  00000000 
d000bfa2 l       .text  00000000 
d000bfa2 l       .text  00000000 
d000bfa4 l       .text  00000000 
d000bfa4 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfaa l       .text  00000000 
d000bfaa l       .text  00000000 
d000bfac l       .text  00000000 
d000bfac l       .text  00000000 
d000bfae l       .text  00000000 
d000bfae l       .text  00000000 
d000bfb2 l       .text  00000000 
d000bfb2 l       .text  00000000 
d000bfb6 l       .text  00000000 
d000bfb6 l       .text  00000000 
d000bfb8 l       .text  00000000 
d000bfb8 l       .text  00000000 
d000bfba l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfbe l       .text  00000000 
d000bfc2 l       .text  00000000 
d000bfc2 l       .text  00000000 
d000bfc6 l       .text  00000000 
d000bfc6 l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfcc l       .text  00000000 
d000bfce l       .text  00000000 
d000bfce l       .text  00000000 
d000bfd2 l       .text  00000000 
d000bfd2 l       .text  00000000 
d000bfd4 l       .text  00000000 
d000bfd6 l       .text  00000000 
d000bfd6 l       .text  00000000 
d000bfda l       .text  00000000 
d000bfda l       .text  00000000 
d000bfdc l       .text  00000000 
d000bfdc l       .text  00000000 
d000bfde l       .text  00000000 
d000bfde l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe2 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe6 l       .text  00000000 
d000bfe6 l       .text  00000000 
d000bfe8 l       .text  00000000 
d000bfe8 l       .text  00000000 
d000bfea l       .text  00000000 
d000bfea l       .text  00000000 
d000bfec l       .text  00000000 
d000bfec l       .text  00000000 
d000bfee l       .text  00000000 
d000bfee l       .text  00000000 
d000bff0 l       .text  00000000 
d000bff0 l       .text  00000000 
d000bff6 l       .text  00000000 
d000bff6 l       .text  00000000 
d000bff8 l       .text  00000000 
d000bff8 l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffc l       .text  00000000 
d000bffe l       .text  00000000 
d000c000 l       .text  00000000 
d000c000 l       .text  00000000 
d000c002 l       .text  00000000 
d000c002 l       .text  00000000 
d000c004 l       .text  00000000 
d000c00a l       .text  00000000 
d000c00a l       .text  00000000 
d000c00c l       .text  00000000 
d000c00c l       .text  00000000 
d000c00e l       .text  00000000 
d000c00e l       .text  00000000 
d000c010 l       .text  00000000 
d000c010 l       .text  00000000 
d000c012 l       .text  00000000 
d000c012 l       .text  00000000 
d000c014 l       .text  00000000 
d000c014 l       .text  00000000 
d000c016 l       .text  00000000 
d000c016 l       .text  00000000 
d000c018 l       .text  00000000 
d000c018 l       .text  00000000 
d000c018 l       .text  00000000 
d000c018 l       .text  00000000 
d000c018 l       .text  00000000 
d000c018 l       .text  00000000 
d000c01a l       .text  00000000 
d000c01e l       .text  00000000 
d000c020 l       .text  00000000 
d000c020 l       .text  00000000 
d000c026 l       .text  00000000 
d000c028 l       .text  00000000 
d000c02e l       .text  00000000 
d000c02e l       .text  00000000 
d000c030 l       .text  00000000 
d000c030 l       .text  00000000 
d000c032 l       .text  00000000 
d000c032 l       .text  00000000 
d000c038 l       .text  00000000 
d000c03a l       .text  00000000 
d000c03a l       .text  00000000 
d000c03c l       .text  00000000 
d000c03c l       .text  00000000 
d000c040 l       .text  00000000 
d000c040 l       .text  00000000 
d000c042 l       .text  00000000 
d000c042 l       .text  00000000 
d000c044 l       .text  00000000 
d000c044 l       .text  00000000 
d000c046 l       .text  00000000 
d000c046 l       .text  00000000 
d000c048 l       .text  00000000 
d000c048 l       .text  00000000 
d000c04a l       .text  00000000 
d000c04e l       .text  00000000 
d000c050 l       .text  00000000 
d000c050 l       .text  00000000 
d000c050 l       .text  00000000 
d000c050 l       .text  00000000 
d000c050 l       .text  00000000 
d000c052 l       .text  00000000 
d000c06c l       .text  00000000 
d000c06e l       .text  00000000 
d000c06e l       .text  00000000 
d000c070 l       .text  00000000 
d000c070 l       .text  00000000 
d000c072 l       .text  00000000 
d000c072 l       .text  00000000 
d000c076 l       .text  00000000 
d000c078 l       .text  00000000 
d000c07a l       .text  00000000 
d000c090 l       .text  00000000 
d000c0a6 l       .text  00000000 
d000c0a8 l       .text  00000000 
d000c0a8 l       .text  00000000 
d000c0ac l       .text  00000000 
d000c0ac l       .text  00000000 
d000c0ae l       .text  00000000 
d000c0ae l       .text  00000000 
d000c0b2 l       .text  00000000 
d000c0b2 l       .text  00000000 
d000c0ba l       .text  00000000 
d000c0be l       .text  00000000 
d000c0cc l       .text  00000000 
d000c0ce l       .text  00000000 
d000c0ce l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d4 l       .text  00000000 
d000c0d4 l       .text  00000000 
d000c0d8 l       .text  00000000 
d000c0d8 l       .text  00000000 
d000c0dc l       .text  00000000 
d000c0dc l       .text  00000000 
d000c0e2 l       .text  00000000 
d000c0e2 l       .text  00000000 
d000c0e6 l       .text  00000000 
d000c0e6 l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ea l       .text  00000000 
d000c0ee l       .text  00000000 
d000c0f0 l       .text  00000000 
d000c0f0 l       .text  00000000 
d000c0f2 l       .text  00000000 
d000c0f2 l       .text  00000000 
d000c0f6 l       .text  00000000 
d000c0f6 l       .text  00000000 
d000c0fa l       .text  00000000 
d000c0fa l       .text  00000000 
d000c0fc l       .text  00000000 
d000c0fc l       .text  00000000 
d000c10e l       .text  00000000 
d000c10e l       .text  00000000 
d000c112 l       .text  00000000 
d000c112 l       .text  00000000 
d000c11a l       .text  00000000 
d000c11e l       .text  00000000 
d000c11e l       .text  00000000 
d000c124 l       .text  00000000 
d000c126 l       .text  00000000 
d000c128 l       .text  00000000 
d000c128 l       .text  00000000 
d000c12c l       .text  00000000 
d000c12c l       .text  00000000 
d000c130 l       .text  00000000 
d000c132 l       .text  00000000 
d000c134 l       .text  00000000 
d000c13c l       .text  00000000 
d000c13e l       .text  00000000 
d000c13e l       .text  00000000 
d000c142 l       .text  00000000 
d000c142 l       .text  00000000 
d000c146 l       .text  00000000 
d000c146 l       .text  00000000 
d000c14a l       .text  00000000 
d000c14a l       .text  00000000 
d000c150 l       .text  00000000 
d000c150 l       .text  00000000 
d000c152 l       .text  00000000 
d000c152 l       .text  00000000 
d000c154 l       .text  00000000 
d000c154 l       .text  00000000 
d000c156 l       .text  00000000 
d000c15a l       .text  00000000 
d000c15a l       .text  00000000 
d000c15e l       .text  00000000 
d000c15e l       .text  00000000 
d000c162 l       .text  00000000 
d000c164 l       .text  00000000 
d000c166 l       .text  00000000 
d000c16a l       .text  00000000 
d000c16a l       .text  00000000 
d000c16c l       .text  00000000 
d000c16c l       .text  00000000 
d000c16e l       .text  00000000 
d000c16e l       .text  00000000 
d000c172 l       .text  00000000 
d000c172 l       .text  00000000 
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
d000c178 l       .text  00000000 
d000c184 l       .text  00000000 
d000c188 l       .text  00000000 
d000c188 l       .text  00000000 
d000c18c l       .text  00000000 
d000c18c l       .text  00000000 
d000c190 l       .text  00000000 
d000c190 l       .text  00000000 
d000c192 l       .text  00000000 
d000c194 l       .text  00000000 
d000c194 l       .text  00000000 
d000c198 l       .text  00000000 
d000c198 l       .text  00000000 
d000c19c l       .text  00000000 
d000c19c l       .text  00000000 
d000c19e l       .text  00000000 
d000c1aa l       .text  00000000 
d000c1ac l       .text  00000000 
d000c1ac l       .text  00000000 
d000c1b4 l       .text  00000000 
d000c1b4 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1bc l       .text  00000000 
d000c1c2 l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1cc l       .text  00000000 
d000c1cc l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1ce l       .text  00000000 
d000c1d0 l       .text  00000000 
d000c1d0 l       .text  00000000 
d000c1d2 l       .text  00000000 
d000c1d2 l       .text  00000000 
d000c1d6 l       .text  00000000 
d000c1d6 l       .text  00000000 
d000c1da l       .text  00000000 
d000c1dc l       .text  00000000 
d000c1e6 l       .text  00000000 
d000c1e6 l       .text  00000000 
d000c1ee l       .text  00000000 
d000c1f2 l       .text  00000000 
d000c1fc l       .text  00000000 
d000c200 l       .text  00000000 
d000c206 l       .text  00000000 
d000c210 l       .text  00000000 
d000c210 l       .text  00000000 
d000c212 l       .text  00000000 
d000c216 l       .text  00000000 
d000c21a l       .text  00000000 
d000c21a l       .text  00000000 
d000c21c l       .text  00000000 
d000c22c l       .text  00000000 
d000c23a l       .text  00000000 
d000c23a l       .text  00000000 
d000c23e l       .text  00000000 
d000c23e l       .text  00000000 
0000686b l       .debug_loc     00000000 
00006886 l       .debug_loc     00000000 
000068a1 l       .debug_loc     00000000 
000068c7 l       .debug_loc     00000000 
000068e2 l       .debug_loc     00000000 
000068fd l       .debug_loc     00000000 
00006921 l       .debug_loc     00000000 
0000693c l       .debug_loc     00000000 
00006957 l       .debug_loc     00000000 
00006972 l       .debug_loc     00000000 
00006996 l       .debug_loc     00000000 
000069b1 l       .debug_loc     00000000 
000069cc l       .debug_loc     00000000 
000069e7 l       .debug_loc     00000000 
00006a02 l       .debug_loc     00000000 
00006a26 l       .debug_loc     00000000 
00006a41 l       .debug_loc     00000000 
00006a5c l       .debug_loc     00000000 
00006a8d l       .debug_loc     00000000 
00006abe l       .debug_loc     00000000 
00006aef l       .debug_loc     00000000 
00006b0a l       .debug_loc     00000000 
00006b25 l       .debug_loc     00000000 
00006b48 l       .debug_loc     00000000 
00006b63 l       .debug_loc     00000000 
00006b7e l       .debug_loc     00000000 
00006bbc l       .debug_loc     00000000 
00006bdb l       .debug_loc     00000000 
00006bf6 l       .debug_loc     00000000 
00006c23 l       .debug_loc     00000000 
00006c46 l       .debug_loc     00000000 
00006c61 l       .debug_loc     00000000 
00006c7c l       .debug_loc     00000000 
00006c9f l       .debug_loc     00000000 
00006cba l       .debug_loc     00000000 
00006cd5 l       .debug_loc     00000000 
00006d13 l       .debug_loc     00000000 
00006d32 l       .debug_loc     00000000 
00006d4d l       .debug_loc     00000000 
00006d6d l       .debug_loc     00000000 
00006d88 l       .debug_loc     00000000 
00006da4 l       .debug_loc     00000000 
00006dbf l       .debug_loc     00000000 
00006dda l       .debug_loc     00000000 
00006dfd l       .debug_loc     00000000 
00006e1e l       .debug_loc     00000000 
00006e6b l       .debug_loc     00000000 
00006e86 l       .debug_loc     00000000 
00006ead l       .debug_loc     00000000 
00006ed2 l       .debug_loc     00000000 
00006ef4 l       .debug_loc     00000000 
00006f0f l       .debug_loc     00000000 
00006f31 l       .debug_loc     00000000 
00006f52 l       .debug_loc     00000000 
00006f6d l       .debug_loc     00000000 
00006f8d l       .debug_loc     00000000 
00006fa9 l       .debug_loc     00000000 
00006fc4 l       .debug_loc     00000000 
00006fe6 l       .debug_loc     00000000 
00007001 l       .debug_loc     00000000 
00007027 l       .debug_loc     00000000 
00007043 l       .debug_loc     00000000 
0000705e l       .debug_loc     00000000 
00007080 l       .debug_loc     00000000 
0000709c l       .debug_loc     00000000 
000070bc l       .debug_loc     00000000 
000070de l       .debug_loc     00000000 
000070f9 l       .debug_loc     00000000 
00007114 l       .debug_loc     00000000 
0000713a l       .debug_loc     00000000 
0000716a l       .debug_loc     00000000 
00007185 l       .debug_loc     00000000 
000071a5 l       .debug_loc     00000000 
000071c7 l       .debug_loc     00000000 
000071e7 l       .debug_loc     00000000 
0000720d l       .debug_loc     00000000 
00007228 l       .debug_loc     00000000 
0000725d l       .debug_loc     00000000 
000072a5 l       .debug_loc     00000000 
000072e1 l       .debug_loc     00000000 
000072fc l       .debug_loc     00000000 
00007338 l       .debug_loc     00000000 
00007374 l       .debug_loc     00000000 
0000739b l       .debug_loc     00000000 
000073b6 l       .debug_loc     00000000 
000073d6 l       .debug_loc     00000000 
000073f8 l       .debug_loc     00000000 
0000741c l       .debug_loc     00000000 
00007437 l       .debug_loc     00000000 
00007452 l       .debug_loc     00000000 
00007474 l       .debug_loc     00000000 
0000749d l       .debug_loc     00000000 
000074c1 l       .debug_loc     00000000 
000074dc l       .debug_loc     00000000 
000074f7 l       .debug_loc     00000000 
00007512 l       .debug_loc     00000000 
0000752d l       .debug_loc     00000000 
00007548 l       .debug_loc     00000000 
0000756a l       .debug_loc     00000000 
00007585 l       .debug_loc     00000000 
000075a7 l       .debug_loc     00000000 
000075c3 l       .debug_loc     00000000 
000075de l       .debug_loc     00000000 
000075f9 l       .debug_loc     00000000 
00007614 l       .debug_loc     00000000 
0000763b l       .debug_loc     00000000 
00007660 l       .debug_loc     00000000 
00007684 l       .debug_loc     00000000 
000076ab l       .debug_loc     00000000 
000076db l       .debug_loc     00000000 
00007703 l       .debug_loc     00000000 
00007720 l       .debug_loc     00000000 
00007746 l       .debug_loc     00000000 
00007761 l       .debug_loc     00000000 
0000777c l       .debug_loc     00000000 
0000779e l       .debug_loc     00000000 
000077c0 l       .debug_loc     00000000 
000077f1 l       .debug_loc     00000000 
00007830 l       .debug_loc     00000000 
00007861 l       .debug_loc     00000000 
0000787c l       .debug_loc     00000000 
00007898 l       .debug_loc     00000000 
000078bc l       .debug_loc     00000000 
000078e3 l       .debug_loc     00000000 
00007905 l       .debug_loc     00000000 
00007927 l       .debug_loc     00000000 
00007949 l       .debug_loc     00000000 
00007965 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000645c l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b20 l       .debug_ranges  00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000045f l       .debug_str     00000000 
000003b2 l       .debug_str     00000000 
000003cf l       .debug_str     00000000 
000003ed l       .debug_str     00000000 
00000409 l       .debug_str     00000000 
00000422 l       .debug_str     00000000 
0000043b l       .debug_str     00000000 
000004bc l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000492 l       .debug_str     00000000 
000004a7 l       .debug_str     00000000 
000004fb l       .debug_str     00000000 
000004cf l       .debug_str     00000000 
000004e5 l       .debug_str     00000000 
000064e7 l       .debug_str     00000000 
0000647d l       .debug_str     00000000 
00006497 l       .debug_str     00000000 
000064ae l       .debug_str     00000000 
000064c5 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000064fe l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00006208 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006212 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00006510 l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
0000651d l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
00006522 l       .debug_str     00000000 
00006531 l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00006539 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
0000654c l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
000061f4 l       .debug_str     00000000 
00006661 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
000009c0 l       .debug_ranges  00000000 
000009d8 l       .debug_ranges  00000000 
0000655c l       .debug_str     00000000 
00006569 l       .debug_str     00000000 
0000656e l       .debug_str     00000000 
0000657b l       .debug_str     00000000 
00006589 l       .debug_str     00000000 
00006581 l       .debug_str     00000000 
00000f7e l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000658f l       .debug_str     00000000 
00006597 l       .debug_str     00000000 
000065a0 l       .debug_str     00000000 
000028e1 l       .debug_str     00000000 
00006679 l       .debug_str     00000000 
0000669d l       .debug_str     00000000 
000009f0 l       .debug_ranges  00000000 
00000a08 l       .debug_ranges  00000000 
000011f9 l       .debug_str     00000000 
00006690 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000a80 l       .debug_ranges  00000000 
000065ad l       .debug_str     00000000 
000065bc l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00001570 l       .debug_str     00000000 
000065c3 l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
00000e10 l       .debug_str     00000000 
000060c7 l       .debug_str     00000000 
000066a1 l       .debug_str     00000000 
00000a20 l       .debug_ranges  00000000 
00000a38 l       .debug_ranges  00000000 
00000a50 l       .debug_ranges  00000000 
00000a68 l       .debug_ranges  00000000 
00000ecc l       .debug_str     00000000 
00006426 l       .debug_str     00000000 
000065d3 l       .debug_str     00000000 
000065e0 l       .debug_str     00000000 
000065e5 l       .debug_str     00000000 
000065eb l       .debug_str     00000000 
000065fd l       .debug_str     00000000 
000065f8 l       .debug_str     00000000 
00001701 l       .debug_str     00000000 
00000f97 l       .debug_str     00000000 
00007ec9 l       .debug_str     00000000 
000021a2 l       .debug_str     00000000 
0000663c l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
0000706e l       .debug_str     00000000 
0000664a l       .debug_str     00000000 
000067d2 l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
00001639 l       .debug_str     00000000 
00000f85 l       .debug_str     00000000 
00000f8b l       .debug_str     00000000 
00000f91 l       .debug_str     00000000 
00000f34 l       .debug_str     00000000 
00000f50 l       .debug_str     00000000 
00000f65 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00006605 l       .debug_str     00000000 
00006617 l       .debug_str     00000000 
000064f4 l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
00002899 l       .debug_str     00000000 
0000661d l       .debug_str     00000000 
00006636 l       .debug_str     00000000 
00000eec l       .debug_str     00000000 
00006644 l       .debug_str     00000000 
00006650 l       .debug_str     00000000 
000016eb l       .debug_str     00000000 
00000f1b l       .debug_str     00000000 
000066a9 l       .debug_str     00000000 
000016f8 l       .debug_str     00000000 
00000b08 l       .debug_ranges  00000000 
00000aa0 l       .debug_ranges  00000000 
00000ab8 l       .debug_ranges  00000000 
00000ad0 l       .debug_ranges  00000000 
00000af0 l       .debug_ranges  00000000 
00002eb2 l       .debug_str     00000000 
000016d5 l       .debug_str     00000000 
00000e7c l       .debug_str     00000000 
00000e27 l       .debug_str     00000000 
00000e31 l       .debug_str     00000000 
00000e4a l       .debug_str     00000000 
00005f09 l       .debug_str     00000000 
00000e56 l       .debug_str     00000000 
00000e5c l       .debug_str     00000000 
00000e61 l       .debug_str     00000000 
00000e72 l       .debug_str     00000000 
00000e77 l       .debug_str     00000000 
00000af8 l       .debug_frame   00000000 
d000be22 l       .text  00000000 
d000bf7a l       .text  00000000 
d000bffc l       .text  00000000 
d000c018 l       .text  00000000 
d000c050 l       .text  00000000 
d000c23e l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000c23e l       .text  00000000 
d000c23e l       .text  00000000 
d000c23e l       .text  00000000 
d000c240 l       .text  00000000 
d000c242 l       .text  00000000 
d000c248 l       .text  00000000 
d000c24c l       .text  00000000 
d000c250 l       .text  00000000 
d000c254 l       .text  00000000 
d000c254 l       .text  00000000 
d000c25e l       .text  00000000 
d000c260 l       .text  00000000 
d000c260 l       .text  00000000 
d000c262 l       .text  00000000 
d000c262 l       .text  00000000 
d000c268 l       .text  00000000 
d000c268 l       .text  00000000 
d000c272 l       .text  00000000 
d000c274 l       .text  00000000 
d000c274 l       .text  00000000 
d000c288 l       .text  00000000 
d000c288 l       .text  00000000 
d000c28a l       .text  00000000 
d000c28a l       .text  00000000 
d000c294 l       .text  00000000 
d000c296 l       .text  00000000 
d000c296 l       .text  00000000 
d000c2aa l       .text  00000000 
d000c2aa l       .text  00000000 
d000c2ac l       .text  00000000 
00000078 l     O .logs.fields   00000014 test_status_set.kLogFields.2
d000c2ac l       .text  00000000 
d000c2b4 l       .text  00000000 
d000c2b4 l       .text  00000000 
d000c2be l       .text  00000000 
d000c2c0 l       .text  00000000 
d000c2c0 l       .text  00000000 
00000064 l     O .logs.fields   00000014 test_status_set.kLogFields
d000c2c8 l       .text  00000000 
d000c2d0 l       .text  00000000 
d000c2d0 l       .text  00000000 
d000c2da l       .text  00000000 
d000c2dc l       .text  00000000 
d000c2dc l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
0000798c l       .debug_loc     00000000 
000079aa l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000680a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000ebc l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000003a6 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006a50 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000331 l       .debug_str     00000000 
00000346 l       .debug_str     00000000 
0000035f l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000382 l       .debug_str     00000000 
00000394 l       .debug_str     00000000 
00006838 l       .debug_str     00000000 
0000685f l       .debug_str     00000000 
00006851 l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
000061f4 l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00006208 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000ea5 l       .debug_str     00000000 
00000e90 l       .debug_str     00000000 
00006877 l       .debug_str     00000000 
00000ba0 l       .debug_frame   00000000 
d000c2e4 l       .text  00000000 
00000000 l    df *ABS*  00000000 hart.c
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e4 l       .text  00000000 
d000c2e8 l       .text  00000000 
d000c2e8 l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ea l       .text  00000000 
000079bd l       .debug_loc     00000000 
000079d8 l       .debug_loc     00000000 
000079ff l       .debug_loc     00000000 
00007a26 l       .debug_loc     00000000 
00007a42 l       .debug_loc     00000000 
00007a6f l       .debug_loc     00000000 
00007a96 l       .debug_loc     00000000 
00007abd l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000687d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b58 l       .debug_ranges  00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000689a l       .debug_str     00000000 
000068ab l       .debug_str     00000000 
000068b5 l       .debug_str     00000000 
000068c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000068db l       .debug_str     00000000 
000068ec l       .debug_str     00000000 
000074dd l       .debug_str     00000000 
00002e33 l       .debug_str     00000000 
000068cd l       .debug_str     00000000 
00005e90 l       .debug_str     00000000 
00006877 l       .debug_str     00000000 
00003530 l       .debug_str     00000000 
00000bcc l       .debug_frame   00000000 
d000c2ea l       .text  00000000 
00000000 l    df *ABS*  00000000 log.c
d000c2ea l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ec l       .text  00000000 
d000c2f2 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c302 l       .text  00000000 
d000c30c l       .text  00000000 
d000c312 l       .text  00000000 
d000c312 l       .text  00000000 
d000c314 l       .text  00000000 
d000c318 l       .text  00000000 
d000c318 l       .text  00000000 
d000c322 l       .text  00000000 
d000c322 l       .text  00000000 
d000c324 l       .text  00000000 
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
d000c32a l       .text  00000000 
d000c32a l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c330 l       .text  00000000 
d000c330 l       .text  00000000 
d000c336 l       .text  00000000 
d000c344 l       .text  00000000 
d000c344 l       .text  00000000 
e0002050 l     O .bss   00000002 base_log_internal_core.global_log_counter
d000c34c l       .text  00000000 
d000c358 l       .text  00000000 
d000c35a l       .text  00000000 
d000c364 l       .text  00000000 
d000c364 l       .text  00000000 
d000c370 l       .text  00000000 
d000c370 l       .text  00000000 
d000c372 l       .text  00000000 
d000c374 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c382 l       .text  00000000 
d000c382 l       .text  00000000 
d000c38c l       .text  00000000 
d000c38c l       .text  00000000 
d000c38c l       .text  00000000 
d000c38c l       .text  00000000 
d000c38c l       .text  00000000 
d000c38e l       .text  00000000 
d000c394 l       .text  00000000 
d000c394 l       .text  00000000 
d000c39e l       .text  00000000 
d000c39e l       .text  00000000 
d000c3a4 l       .text  00000000 
d000c3a4 l       .text  00000000 
d000c3a8 l       .text  00000000 
d000c3a8 l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3ac l       .text  00000000 
d000c3ac l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3b2 l       .text  00000000 
d000c3b6 l       .text  00000000 
d000c3b8 l       .text  00000000 
d000c3b8 l       .text  00000000 
d000c3ba l       .text  00000000 
d000c3ba l       .text  00000000 
d000c3bc l       .text  00000000 
d000c3bc l       .text  00000000 
d000c3c0 l       .text  00000000 
d000c3c0 l       .text  00000000 
00007ad9 l       .debug_loc     00000000 
00007b01 l       .debug_loc     00000000 
00007b1c l       .debug_loc     00000000 
00007b58 l       .debug_loc     00000000 
00007b74 l       .debug_loc     00000000 
00007b8f l       .debug_loc     00000000 
00007baa l       .debug_loc     00000000 
00007bc5 l       .debug_loc     00000000 
00007c03 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000068f1 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b80 l       .debug_ranges  00000000 
00000ea5 l       .debug_str     00000000 
0000690d l       .debug_str     00000000 
0000695b l       .debug_str     00000000 
0000695f l       .debug_str     00000000 
0000696d l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
00002899 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00006920 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00006933 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000693a l       .debug_str     00000000 
00006942 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000694e l       .debug_str     00000000 
000061f4 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00006208 l       .debug_str     00000000 
00000e90 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
00006977 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
00006a50 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00003039 l       .debug_str     00000000 
0000302f l       .debug_str     00000000 
00000c2c l       .debug_frame   00000000 
d000c38c l       .text  00000000 
d000c3c0 l       .text  00000000 
00000000 l    df *ABS*  00000000 print.c
d000c3c0 l     F .text  00000004 base_dev_null
e0002054 l     O .bss   00000008 base_stdout
d000c3c0 l       .text  00000000 
d000c3c0 l       .text  00000000 
d000c3c0 l       .text  00000000 
d000c3c2 l       .text  00000000 
d000c3c2 l       .text  00000000 
d000c3c4 l       .text  00000000 
d000c3c4 l       .text  00000000 
d000c3c4 l       .text  00000000 
d000c3c4 l       .text  00000000 
d000c3c4 l       .text  00000000 
d000c3c6 l       .text  00000000 
d000c3c8 l       .text  00000000 
d000c3d6 l       .text  00000000 
d000c3de l       .text  00000000 
d000c3de l       .text  00000000 
d000c3e4 l       .text  00000000 
d000c3e4 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3ec l       .text  00000000 
d000c3ee l       .text  00000000 
d000c3f0 l       .text  00000000 
d000c3f0 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c3fe l       .text  00000000 
d000c404 l       .text  00000000 
d000c404 l       .text  00000000 
d000c406 l       .text  00000000 
d000c406 l       .text  00000000 
d000c40c l       .text  00000000 
d000c40e l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c412 l       .text  00000000 
d000c42c l       .text  00000000 
d000c42e l       .text  00000000 
d000c430 l       .text  00000000 
d000c432 l       .text  00000000 
d000c434 l       .text  00000000 
d000c436 l       .text  00000000 
d000c438 l       .text  00000000 
d000c440 l       .text  00000000 
d000c440 l       .text  00000000 
d000c442 l       .text  00000000 
d000c442 l       .text  00000000 
d000c446 l       .text  00000000 
d000c44a l       .text  00000000 
d000c45e l       .text  00000000 
d000c45e l       .text  00000000 
d000c468 l       .text  00000000 
d000c46c l       .text  00000000 
d000c470 l       .text  00000000 
d000c472 l       .text  00000000 
d000c474 l       .text  00000000 
d000c474 l       .text  00000000 
d000c476 l       .text  00000000 
d000c478 l       .text  00000000 
d000c47e l       .text  00000000 
d000c47e l       .text  00000000 
d000c480 l       .text  00000000 
d000c480 l       .text  00000000 
d000c484 l       .text  00000000 
d000c484 l       .text  00000000 
d000c490 l       .text  00000000 
d000c494 l       .text  00000000 
d000c494 l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a8 l       .text  00000000 
d000c4a8 l       .text  00000000 
d000c4ac l       .text  00000000 
d000c4ac l       .text  00000000 
d000c4ba l       .text  00000000 
d000c4ba l       .text  00000000 
d000c4be l       .text  00000000 
d000c4c6 l       .text  00000000 
d000c4ca l       .text  00000000 
d000c4ca l       .text  00000000 
d000c4ce l       .text  00000000 
d000c4d4 l       .text  00000000 
d000c4d8 l       .text  00000000 
d000c4da l       .text  00000000 
d000c4de l       .text  00000000 
d000c4de l       .text  00000000 
d000c4e2 l       .text  00000000 
d000c4e8 l       .text  00000000 
d000c4e8 l       .text  00000000 
d000c4ec l       .text  00000000 
d000c500 l       .text  00000000 
d000c500 l       .text  00000000 
d000c502 l       .text  00000000 
d000c508 l       .text  00000000 
d000c50c l       .text  00000000 
d000c510 l       .text  00000000 
d000c510 l       .text  00000000 
d000c518 l       .text  00000000 
d000c51a l       .text  00000000 
d000c528 l       .text  00000000 
d000c528 l       .text  00000000 
d000c52c l       .text  00000000 
d000c538 l       .text  00000000 
d000c538 l       .text  00000000 
d000c53c l       .text  00000000 
d000c53c l       .text  00000000 
d000c54a l       .text  00000000 
d000c54a l       .text  00000000 
d000c54c l       .text  00000000 
d000c550 l       .text  00000000 
d000c550 l       .text  00000000 
d000c554 l       .text  00000000 
d000ea58 l     O .rodata        00000010 kDigitsLow
d000c566 l       .text  00000000 
d000c566 l       .text  00000000 
d000c56e l       .text  00000000 
d000c576 l       .text  00000000 
d000c576 l       .text  00000000 
d000c580 l       .text  00000000 
d000c580 l       .text  00000000 
d000c584 l       .text  00000000 
d000c584 l       .text  00000000 
d000c58e l       .text  00000000 
d000c58e l       .text  00000000 
d000c596 l       .text  00000000 
d000c596 l       .text  00000000 
d000c59a l       .text  00000000 
d000ea85 l     O .rodata        00000010 kDigitsHigh
d000c5a4 l       .text  00000000 
d000c5a4 l       .text  00000000 
d000c5ae l       .text  00000000 
d000c5ae l       .text  00000000 
d000c5b2 l       .text  00000000 
d000c5bc l       .text  00000000 
d000c5bc l       .text  00000000 
d000c5c0 l       .text  00000000 
d000c5ca l       .text  00000000 
d000c5ca l       .text  00000000 
d000c5d2 l       .text  00000000 
d000c5d2 l       .text  00000000 
d000c5d6 l       .text  00000000 
d000c5e0 l       .text  00000000 
d000c5e0 l       .text  00000000 
d000c5ea l       .text  00000000 
d000c5ee l       .text  00000000 
d000c5f2 l       .text  00000000 
d000c5f2 l       .text  00000000 
d000c5fe l       .text  00000000 
d000c5fe l       .text  00000000 
d000c602 l       .text  00000000 
d000c60c l       .text  00000000 
d000c610 l       .text  00000000 
d000c610 l       .text  00000000 
d000c612 l       .text  00000000 
d000c612 l       .text  00000000 
d000c616 l       .text  00000000 
d000c616 l       .text  00000000 
d000c61a l       .text  00000000 
d000c624 l       .text  00000000 
d000c624 l       .text  00000000 
d000c628 l       .text  00000000 
d000c634 l       .text  00000000 
d000c634 l       .text  00000000 
d000c638 l       .text  00000000 
d000c638 l       .text  00000000 
d000c646 l       .text  00000000 
d000c646 l       .text  00000000 
d000c650 l       .text  00000000 
d000c650 l       .text  00000000 
d000c654 l       .text  00000000 
d000c654 l       .text  00000000 
d000c984 l     F .text  0000007e write_digits
d000c66a l       .text  00000000 
d000c66a l       .text  00000000 
d000c670 l       .text  00000000 
d000c670 l       .text  00000000 
d000c67a l       .text  00000000 
d000c67a l       .text  00000000 
d000c67c l       .text  00000000 
d000c686 l       .text  00000000 
d000c686 l       .text  00000000 
d000c690 l       .text  00000000 
d000c690 l       .text  00000000 
d000c692 l       .text  00000000 
d000c692 l       .text  00000000 
d000c694 l       .text  00000000 
d000c694 l       .text  00000000 
d000c698 l       .text  00000000 
d000c698 l       .text  00000000 
d000c69c l       .text  00000000 
d000c69e l       .text  00000000 
d000c6a2 l       .text  00000000 
d000c6a2 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6a6 l       .text  00000000 
d000c6b2 l       .text  00000000 
d000c6b2 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b4 l       .text  00000000 
d000c6b6 l       .text  00000000 
d000c6b6 l       .text  00000000 
d000c6be l       .text  00000000 
d000c6be l       .text  00000000 
d000c6c2 l       .text  00000000 
d000c6c2 l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6d2 l       .text  00000000 
d000c6e0 l       .text  00000000 
d000c6e0 l       .text  00000000 
d000c6e4 l       .text  00000000 
d000c6e4 l       .text  00000000 
d000c6e8 l       .text  00000000 
d000c6e8 l       .text  00000000 
d000c6f6 l       .text  00000000 
d000c6f6 l       .text  00000000 
d000c6fa l       .text  00000000 
d000c6fa l       .text  00000000 
d000c702 l       .text  00000000 
d000c702 l       .text  00000000 
d000c704 l       .text  00000000 
d000c704 l       .text  00000000 
d000c706 l       .text  00000000 
d000c706 l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71c l       .text  00000000 
d000c72a l       .text  00000000 
d000c72a l       .text  00000000 
d000c72c l       .text  00000000 
d000c72c l       .text  00000000 
d000c72e l       .text  00000000 
d000c736 l       .text  00000000 
d000c73a l       .text  00000000 
d000c73c l       .text  00000000 
d000c746 l       .text  00000000 
d000c746 l       .text  00000000 
d000c74a l       .text  00000000 
d000c754 l       .text  00000000 
d000c754 l       .text  00000000 
d000c758 l       .text  00000000 
d000c764 l       .text  00000000 
d000c764 l       .text  00000000 
d000c768 l       .text  00000000 
d000c768 l       .text  00000000 
d000c772 l       .text  00000000 
d000c772 l       .text  00000000 
d000c77a l       .text  00000000 
d000c77a l       .text  00000000 
d000c77e l       .text  00000000 
d000c786 l       .text  00000000 
d000c786 l       .text  00000000 
d000c790 l       .text  00000000 
d000c790 l       .text  00000000 
d000c79a l       .text  00000000 
d000c79a l       .text  00000000 
d000c79e l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7b0 l       .text  00000000 
d000c7b2 l       .text  00000000 
d000c7b2 l       .text  00000000 
d000c7b6 l       .text  00000000 
d000c7c0 l       .text  00000000 
d000c7c0 l       .text  00000000 
d000c7c8 l       .text  00000000 
d000c7c8 l       .text  00000000 
d000c7cc l       .text  00000000 
d000c7d4 l       .text  00000000 
d000c7d4 l       .text  00000000 
d000c89e l     F .text  000000e6 hex_dump
d000c7de l       .text  00000000 
d000c7e0 l       .text  00000000 
d000ea95 l     O .rodata        0000000f kUnknownSpec
d000c7e0 l       .text  00000000 
d000c7ea l       .text  00000000 
d000c7ea l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7f0 l       .text  00000000 
d000c7f0 l       .text  00000000 
d000c7f4 l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fa l       .text  00000000 
d000c7fe l       .text  00000000 
d000c80a l       .text  00000000 
d000c80a l       .text  00000000 
d000c80c l       .text  00000000 
d000c80c l       .text  00000000 
d000c820 l       .text  00000000 
d000c820 l       .text  00000000 
d000c824 l       .text  00000000 
d000c832 l       .text  00000000 
d000c832 l       .text  00000000 
d000c836 l       .text  00000000 
d000c836 l       .text  00000000 
d000c83c l       .text  00000000 
d000c83c l       .text  00000000 
d000c83e l       .text  00000000 
d000c83e l       .text  00000000 
d000c840 l       .text  00000000 
d000c840 l       .text  00000000 
d000c848 l       .text  00000000 
d000c84a l       .text  00000000 
d000c84c l       .text  00000000 
d000c852 l       .text  00000000 
d000c852 l       .text  00000000 
d000c85e l       .text  00000000 
d000ea68 l     O .rodata        00000011 kErrorNul
d000c85e l       .text  00000000 
d000c868 l       .text  00000000 
d000c868 l       .text  00000000 
d000c86c l       .text  00000000 
d000c870 l       .text  00000000 
d000c872 l       .text  00000000 
d000c872 l       .text  00000000 
d000c882 l       .text  00000000 
d000c886 l       .text  00000000 
d000c892 l       .text  00000000 
d000ea79 l     O .rodata        0000000c kErrorTooWide
d000c892 l       .text  00000000 
d000c89e l       .text  00000000 
d000c89e l       .text  00000000 
d000c89e l       .text  00000000 
d000c89e l       .text  00000000 
d000c89e l       .text  00000000 
d000c89e l       .text  00000000 
d000c8a0 l       .text  00000000 
d000c8b8 l       .text  00000000 
d000c8ba l       .text  00000000 
d000c8bc l       .text  00000000 
d000c8be l       .text  00000000 
d000c8c0 l       .text  00000000 
d000c8c4 l       .text  00000000 
d000c8c4 l       .text  00000000 
d000c8c8 l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8d8 l       .text  00000000 
d000c8d8 l       .text  00000000 
d000c8da l       .text  00000000 
d000c8dc l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8e6 l       .text  00000000 
d000c8ea l       .text  00000000 
d000c8ea l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f4 l       .text  00000000 
d000c8f6 l       .text  00000000 
d000c8f6 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8f8 l       .text  00000000 
d000c8fe l       .text  00000000 
d000c8fe l       .text  00000000 
d000c900 l       .text  00000000 
d000c900 l       .text  00000000 
d000c904 l       .text  00000000 
d000c908 l       .text  00000000 
d000c90e l       .text  00000000 
d000c90e l       .text  00000000 
d000c914 l       .text  00000000 
d000c91c l       .text  00000000 
d000c91c l       .text  00000000 
d000c91e l       .text  00000000 
d000c922 l       .text  00000000 
d000c926 l       .text  00000000 
d000c92c l       .text  00000000 
d000c930 l       .text  00000000 
d000c934 l       .text  00000000 
d000c936 l       .text  00000000 
d000c93c l       .text  00000000 
d000c93e l       .text  00000000 
d000c946 l       .text  00000000 
d000c94c l       .text  00000000 
d000c950 l       .text  00000000 
d000c950 l       .text  00000000 
d000c952 l       .text  00000000 
d000c954 l       .text  00000000 
d000c954 l       .text  00000000 
d000c956 l       .text  00000000 
d000c958 l       .text  00000000 
d000c95c l       .text  00000000 
d000c95c l       .text  00000000 
d000c95e l       .text  00000000 
d000c964 l       .text  00000000 
d000c964 l       .text  00000000 
d000c966 l       .text  00000000 
d000c96e l       .text  00000000 
d000c970 l       .text  00000000 
d000c974 l       .text  00000000 
d000c976 l       .text  00000000 
d000c978 l       .text  00000000 
d000c97a l       .text  00000000 
d000c984 l       .text  00000000 
d000c984 l       .text  00000000 
d000c984 l       .text  00000000 
d000c984 l       .text  00000000 
d000c984 l       .text  00000000 
d000c986 l       .text  00000000 
d000c988 l       .text  00000000 
d000c98a l       .text  00000000 
d000c98a l       .text  00000000 
d000c98c l       .text  00000000 
d000c98e l       .text  00000000 
d000c992 l       .text  00000000 
d000c992 l       .text  00000000 
d000c994 l       .text  00000000 
d000c994 l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a2 l       .text  00000000 
d000c9a6 l       .text  00000000 
d000c9ae l       .text  00000000 
d000c9ae l       .text  00000000 
d000c9b0 l       .text  00000000 
d000c9b4 l       .text  00000000 
d000c9b8 l       .text  00000000 
d000c9b8 l       .text  00000000 
d000c9ba l       .text  00000000 
d000c9ba l       .text  00000000 
d000c9be l       .text  00000000 
d000c9c4 l       .text  00000000 
d000c9c4 l       .text  00000000 
d000c9c6 l       .text  00000000 
d000c9c8 l       .text  00000000 
d000c9ca l       .text  00000000 
d000c9ce l       .text  00000000 
d000c9d2 l       .text  00000000 
d000c9d6 l       .text  00000000 
d000c9d6 l       .text  00000000 
d000c9e0 l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e6 l       .text  00000000 
d000c9ea l       .text  00000000 
d000c9ee l       .text  00000000 
d000c9f0 l       .text  00000000 
d000c9f2 l       .text  00000000 
d000c9f4 l       .text  00000000 
d000c9f4 l       .text  00000000 
d000c9fa l       .text  00000000 
d000c9fc l       .text  00000000 
d000c9fc l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca02 l       .text  00000000 
00007c20 l       .debug_loc     00000000 
00007c4c l       .debug_loc     00000000 
00007c67 l       .debug_loc     00000000 
00007c8d l       .debug_loc     00000000 
00007cb9 l       .debug_loc     00000000 
00007cea l       .debug_loc     00000000 
00007d1b l       .debug_loc     00000000 
00007d57 l       .debug_loc     00000000 
00007d88 l       .debug_loc     00000000 
00007daf l       .debug_loc     00000000 
00007de0 l       .debug_loc     00000000 
00007dfb l       .debug_loc     00000000 
00007e17 l       .debug_loc     00000000 
00007e32 l       .debug_loc     00000000 
00007e58 l       .debug_loc     00000000 
00007e7e l       .debug_loc     00000000 
00007eba l       .debug_loc     00000000 
00007fc5 l       .debug_loc     00000000 
0000811f l       .debug_loc     00000000 
0000821f l       .debug_loc     00000000 
0000832a l       .debug_loc     00000000 
0000834a l       .debug_loc     00000000 
00008370 l       .debug_loc     00000000 
000083a0 l       .debug_loc     00000000 
000085d8 l       .debug_loc     00000000 
000085f4 l       .debug_loc     00000000 
0000860f l       .debug_loc     00000000 
00008784 l       .debug_loc     00000000 
000088d4 l       .debug_loc     00000000 
000089e8 l       .debug_loc     00000000 
00008a0e l       .debug_loc     00000000 
00008a29 l       .debug_loc     00000000 
00008a44 l       .debug_loc     00000000 
00008a5f l       .debug_loc     00000000 
00008a7a l       .debug_loc     00000000 
00008a95 l       .debug_loc     00000000 
00008ab1 l       .debug_loc     00000000 
00008acc l       .debug_loc     00000000 
00008ae7 l       .debug_loc     00000000 
00008b02 l       .debug_loc     00000000 
00008b1d l       .debug_loc     00000000 
00008b4f l       .debug_loc     00000000 
00008b82 l       .debug_loc     00000000 
00008b9d l       .debug_loc     00000000 
00008bf0 l       .debug_loc     00000000 
00008c23 l       .debug_loc     00000000 
00008c3e l       .debug_loc     00000000 
00008c59 l       .debug_loc     00000000 
00008c74 l       .debug_loc     00000000 
00008c8f l       .debug_loc     00000000 
00008caa l       .debug_loc     00000000 
00008cc5 l       .debug_loc     00000000 
00008ce0 l       .debug_loc     00000000 
00008cfb l       .debug_loc     00000000 
00008d16 l       .debug_loc     00000000 
00008d31 l       .debug_loc     00000000 
00008d4c l       .debug_loc     00000000 
00008d68 l       .debug_loc     00000000 
00008d87 l       .debug_loc     00000000 
00008da2 l       .debug_loc     00000000 
00008dd3 l       .debug_loc     00000000 
00008df9 l       .debug_loc     00000000 
00008e2a l       .debug_loc     00000000 
00008e5b l       .debug_loc     00000000 
00008e76 l       .debug_loc     00000000 
00008e91 l       .debug_loc     00000000 
00008eac l       .debug_loc     00000000 
00008edd l       .debug_loc     00000000 
00008ef8 l       .debug_loc     00000000 
00008f13 l       .debug_loc     00000000 
00008f2f l       .debug_loc     00000000 
00008f55 l       .debug_loc     00000000 
00008f86 l       .debug_loc     00000000 
00008fa1 l       .debug_loc     00000000 
00008fbc l       .debug_loc     00000000 
00008fe2 l       .debug_loc     00000000 
00009008 l       .debug_loc     00000000 
00009023 l       .debug_loc     00000000 
0000903e l       .debug_loc     00000000 
00009059 l       .debug_loc     00000000 
00009074 l       .debug_loc     00000000 
00009093 l       .debug_loc     00000000 
000090ae l       .debug_loc     00000000 
000090c9 l       .debug_loc     00000000 
000090e5 l       .debug_loc     00000000 
00009100 l       .debug_loc     00000000 
0000911b l       .debug_loc     00000000 
0000913a l       .debug_loc     00000000 
00009160 l       .debug_loc     00000000 
00009191 l       .debug_loc     00000000 
000091e9 l       .debug_loc     00000000 
00009233 l       .debug_loc     00000000 
00009285 l       .debug_loc     00000000 
000092c2 l       .debug_loc     00000000 
000092fe l       .debug_loc     00000000 
00009368 l       .debug_loc     00000000 
000093b1 l       .debug_loc     00000000 
0000941b l       .debug_loc     00000000 
00009441 l       .debug_loc     00000000 
0000945c l       .debug_loc     00000000 
00009477 l       .debug_loc     00000000 
0000949e l       .debug_loc     00000000 
000094e6 l       .debug_loc     00000000 
0000950c l       .debug_loc     00000000 
00009532 l       .debug_loc     00000000 
00009558 l       .debug_loc     00000000 
00009573 l       .debug_loc     00000000 
000095a3 l       .debug_loc     00000000 
000095c9 l       .debug_loc     00000000 
000095fb l       .debug_loc     00000000 
00009639 l       .debug_loc     00000000 
00009668 l       .debug_loc     00000000 
00009683 l       .debug_loc     00000000 
000096b6 l       .debug_loc     00000000 
000096d1 l       .debug_loc     00000000 
0000970d l       .debug_loc     00000000 
00009733 l       .debug_loc     00000000 
0000974e l       .debug_loc     00000000 
00009769 l       .debug_loc     00000000 
00009784 l       .debug_loc     00000000 
000097da l       .debug_loc     00000000 
00009809 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006982 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000cd0 l       .debug_ranges  00000000 
000069a0 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000069bf l       .debug_str     00000000 
000069d7 l       .debug_str     00000000 
000069cb l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00006cc9 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000069e5 l       .debug_str     00000000 
000069ef l       .debug_str     00000000 
00006d21 l       .debug_str     00000000 
000069fd l       .debug_str     00000000 
00005177 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
00006da3 l       .debug_str     00000000 
00001256 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00006db3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006a07 l       .debug_str     00000000 
00006a13 l       .debug_str     00000000 
00006a20 l       .debug_str     00000000 
00006a6f l       .debug_str     00000000 
00006a5e l       .debug_str     00000000 
00006a37 l       .debug_str     00000000 
00006a46 l       .debug_str     00000000 
00006a55 l       .debug_str     00000000 
00006a82 l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
00006a8d l       .debug_str     00000000 
00006a96 l       .debug_str     00000000 
00006aa1 l       .debug_str     00000000 
00006aa9 l       .debug_str     00000000 
00006ab5 l       .debug_str     00000000 
00006ac1 l       .debug_str     00000000 
00006ace l       .debug_str     00000000 
00006ade l       .debug_str     00000000 
00006aef l       .debug_str     00000000 
00006afc l       .debug_str     00000000 
00006b05 l       .debug_str     00000000 
00006b0f l       .debug_str     00000000 
00006b19 l       .debug_str     00000000 
00006b24 l       .debug_str     00000000 
00006b2e l       .debug_str     00000000 
00006b39 l       .debug_str     00000000 
00003141 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00006b50 l       .debug_str     00000000 
00006b47 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00006b66 l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
00006b5b l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
00006c77 l       .debug_str     00000000 
00006b7a l       .debug_str     00000000 
00006c85 l       .debug_str     00000000 
00006b4b l       .debug_str     00000000 
00006c96 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00006b8a l       .debug_str     00000000 
0000694e l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
00003039 l       .debug_str     00000000 
0000302f l       .debug_str     00000000 
00006942 l       .debug_str     00000000 
00000b98 l       .debug_ranges  00000000 
00006ca4 l       .debug_str     00000000 
00006d2e l       .debug_str     00000000 
00006d69 l       .debug_str     00000000 
00000c78 l       .debug_ranges  00000000 
00006c18 l       .debug_str     00000000 
00000bb0 l       .debug_ranges  00000000 
00000bd8 l       .debug_ranges  00000000 
00000bf8 l       .debug_ranges  00000000 
00000c10 l       .debug_ranges  00000000 
00000c48 l       .debug_ranges  00000000 
00000c30 l       .debug_ranges  00000000 
00000c60 l       .debug_ranges  00000000 
00006ba4 l       .debug_str     00000000 
00006bba l       .debug_str     00000000 
00003129 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00006bc3 l       .debug_str     00000000 
00006bf9 l       .debug_str     00000000 
00006be6 l       .debug_str     00000000 
00006bcb l       .debug_str     00000000 
00007ec9 l       .debug_str     00000000 
00006bdc l       .debug_str     00000000 
00006c02 l       .debug_str     00000000 
00006c14 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
00003446 l       .debug_str     00000000 
00003452 l       .debug_str     00000000 
00006c1d l       .debug_str     00000000 
00006c2a l       .debug_str     00000000 
00006c32 l       .debug_str     00000000 
000074dd l       .debug_str     00000000 
00006c36 l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
00006f47 l       .debug_str     00000000 
00006c3a l       .debug_str     00000000 
00006d18 l       .debug_str     00000000 
00007d94 l       .debug_str     00000000 
00006d98 l       .debug_str     00000000 
00006d8f l       .debug_str     00000000 
00006daa l       .debug_str     00000000 
000063ab l       .debug_str     00000000 
00006cb2 l       .debug_str     00000000 
00006cc0 l       .debug_str     00000000 
00006d38 l       .debug_str     00000000 
000014cd l       .debug_str     00000000 
00006cce l       .debug_str     00000000 
00006c49 l       .debug_str     00000000 
00006a6b l       .debug_str     00000000 
00006cdb l       .debug_str     00000000 
00006d05 l       .debug_str     00000000 
00006d55 l       .debug_str     00000000 
00006a50 l       .debug_str     00000000 
00000cb8 l       .debug_ranges  00000000 
00006d48 l       .debug_str     00000000 
00006d64 l       .debug_str     00000000 
00006d77 l       .debug_str     00000000 
0000180a l       .debug_str     00000000 
00000c98 l       .debug_ranges  00000000 
00006d41 l       .debug_str     00000000 
00006d86 l       .debug_str     00000000 
00006576 l       .debug_str     00000000 
00006c5b l       .debug_str     00000000 
00006c6f l       .debug_str     00000000 
00006ce8 l       .debug_str     00000000 
00006cf7 l       .debug_str     00000000 
00005ddd l       .debug_str     00000000 
00000c70 l       .debug_frame   00000000 
d000c3c4 l       .text  00000000 
d000c3f6 l       .text  00000000 
d000c410 l       .text  00000000 
d000c89e l       .text  00000000 
d000c984 l       .text  00000000 
d000ca02 l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000ca02 l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca06 l       .text  00000000 
d000ca0e l       .text  00000000 
d000ca0e l       .text  00000000 
d000ca12 l       .text  00000000 
d000ca12 l       .text  00000000 
d000ca1e l       .text  00000000 
d000ca20 l       .text  00000000 
d000ca20 l       .text  00000000 
d000ca24 l       .text  00000000 
d000ca30 l       .text  00000000 
d000ca32 l       .text  00000000 
d000ca36 l       .text  00000000 
d000ca38 l       .text  00000000 
d000ca38 l       .text  00000000 
d000ca3c l       .text  00000000 
d000ca3c l       .text  00000000 
d000ca40 l       .text  00000000 
d000ca40 l       .text  00000000 
d000ca42 l       .text  00000000 
d000ca42 l       .text  00000000 
d000ca46 l       .text  00000000 
d000ca46 l       .text  00000000 
d000ca48 l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca50 l       .text  00000000 
d000ca54 l       .text  00000000 
d000ca5a l       .text  00000000 
d000ca5a l       .text  00000000 
d000ca5e l       .text  00000000 
d000ca60 l       .text  00000000 
d000ca60 l       .text  00000000 
d000ca66 l       .text  00000000 
d000ca66 l       .text  00000000 
d000ca6c l       .text  00000000 
d000ca6c l       .text  00000000 
d000ca6e l       .text  00000000 
d000ca6e l       .text  00000000 
d000ca74 l       .text  00000000 
d000ca74 l       .text  00000000 
00009824 l       .debug_loc     00000000 
0000983f l       .debug_loc     00000000 
00009870 l       .debug_loc     00000000 
00009896 l       .debug_loc     00000000 
000098bc l       .debug_loc     00000000 
000098d7 l       .debug_loc     00000000 
000098f9 l       .debug_loc     00000000 
00009920 l       .debug_loc     00000000 
00009947 l       .debug_loc     00000000 
0000996b l       .debug_loc     00000000 
0000999c l       .debug_loc     00000000 
000099b7 l       .debug_loc     00000000 
000099e8 l       .debug_loc     00000000 
00009a42 l       .debug_loc     00000000 
00009a7e l       .debug_loc     00000000 
00009aa2 l       .debug_loc     00000000 
00009ac7 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006db9 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000d80 l       .debug_ranges  00000000 
00006dd5 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006de5 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00006f13 l       .debug_str     00000000 
00006df2 l       .debug_str     00000000 
00006df6 l       .debug_str     00000000 
00006e01 l       .debug_str     00000000 
00006e0a l       .debug_str     00000000 
00006e1b l       .debug_str     00000000 
00006e2d l       .debug_str     00000000 
00006e37 l       .debug_str     00000000 
00006e46 l       .debug_str     00000000 
00006e58 l       .debug_str     00000000 
00006e6b l       .debug_str     00000000 
00006e7f l       .debug_str     00000000 
00006e88 l       .debug_str     00000000 
00006e94 l       .debug_str     00000000 
00006ea3 l       .debug_str     00000000 
00006ead l       .debug_str     00000000 
00006eba l       .debug_str     00000000 
00006ec4 l       .debug_str     00000000 
00006ed5 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00003141 l       .debug_str     00000000 
00006f24 l       .debug_str     00000000 
00006f32 l       .debug_str     00000000 
00006f3b l       .debug_str     00000000 
0000703e l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00006f4b l       .debug_str     00000000 
00002850 l       .debug_str     00000000 
00006f59 l       .debug_str     00000000 
00006c36 l       .debug_str     00000000 
00000d68 l       .debug_ranges  00000000 
00006f40 l       .debug_str     00000000 
00004b76 l       .debug_str     00000000 
00003446 l       .debug_str     00000000 
00003452 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00006c3a l       .debug_str     00000000 
00006f63 l       .debug_str     00000000 
00006f47 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00000e64 l       .debug_frame   00000000 
d000ca74 l       .text  00000000 
00000000 l    df *ABS*  00000000 rom_epmp.c
d000ca74 l       .text  00000000 
d000ca74 l       .text  00000000 
d000ca74 l       .text  00000000 
d000ca76 l       .text  00000000 
d000ca76 l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7e l       .text  00000000 
d000ca7e l       .text  00000000 
d000ca86 l       .text  00000000 
d000ca86 l       .text  00000000 
d000ca8a l       .text  00000000 
d000ca8a l       .text  00000000 
d000ca8e l       .text  00000000 
d000ca92 l       .text  00000000 
d000ca9a l       .text  00000000 
d000ca9e l       .text  00000000 
d000caac l       .text  00000000 
d000cab4 l       .text  00000000 
d000cab8 l       .text  00000000 
d000cac6 l       .text  00000000 
d000cace l       .text  00000000 
d000cadc l       .text  00000000 
d000cae4 l       .text  00000000 
d000cae8 l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf6 l       .text  00000000 
d000cafc l       .text  00000000 
d000cb04 l       .text  00000000 
d000cb08 l       .text  00000000 
d000cb14 l       .text  00000000 
d000cb16 l       .text  00000000 
d000cb1a l       .text  00000000 
d000cb22 l       .text  00000000 
d000cb2e l       .text  00000000 
d000cb2e l       .text  00000000 
d000cb36 l       .text  00000000 
d000cb38 l       .text  00000000 
d000cb3a l       .text  00000000 
d000cb42 l       .text  00000000 
d000cb44 l       .text  00000000 
d000cb46 l       .text  00000000 
d000cb46 l       .text  00000000 
d000cb48 l       .text  00000000 
d000cb4e l       .text  00000000 
d000cb4e l       .text  00000000 
d000cb58 l       .text  00000000 
d000cb58 l       .text  00000000 
d000cb5a l       .text  00000000 
d000cb62 l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb6c l       .text  00000000 
d000cb6c l       .text  00000000 
d000cb72 l       .text  00000000 
d000cb72 l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb7e l       .text  00000000 
d000cb7e l       .text  00000000 
d000cb84 l       .text  00000000 
d000cb84 l       .text  00000000 
d000cb88 l       .text  00000000 
d000cb88 l       .text  00000000 
d000cb8c l       .text  00000000 
d000cb90 l       .text  00000000 
d000cb90 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb96 l       .text  00000000 
d000cb96 l       .text  00000000 
d000cb9e l       .text  00000000 
d000cba0 l       .text  00000000 
d000cba8 l       .text  00000000 
d000cba8 l       .text  00000000 
d000cbae l       .text  00000000 
d000cbae l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb0 l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb6 l       .text  00000000 
d000cbc0 l       .text  00000000 
d000cbc0 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbc8 l       .text  00000000 
d000cbca l       .text  00000000 
d000cbca l       .text  00000000 
d000cbd2 l       .text  00000000 
d000cbd4 l       .text  00000000 
d000cbd4 l       .text  00000000 
d000cbd6 l       .text  00000000 
d000cbd6 l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbe0 l       .text  00000000 
d000cbe0 l       .text  00000000 
d000cbe4 l       .text  00000000 
d000cbec l       .text  00000000 
d000cbf0 l       .text  00000000 
d000cbf4 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cbfc l       .text  00000000 
d000cbfc l       .text  00000000 
d000cbfe l       .text  00000000 
d000cbfe l       .text  00000000 
d000cc00 l       .text  00000000 
d000cc00 l       .text  00000000 
d000cc02 l       .text  00000000 
d000cc02 l       .text  00000000 
d000cc0a l       .text  00000000 
d000cc10 l       .text  00000000 
d000cc10 l       .text  00000000 
d000cc14 l       .text  00000000 
d000cc14 l       .text  00000000 
d000cc1c l       .text  00000000 
d000cc24 l       .text  00000000 
d000cc28 l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc2a l       .text  00000000 
d000cc2e l       .text  00000000 
d000cc38 l       .text  00000000 
d000cc3c l       .text  00000000 
d000cc3c l       .text  00000000 
d000cc3e l       .text  00000000 
d000cc3e l       .text  00000000 
d000cc46 l       .text  00000000 
d000cc46 l       .text  00000000 
d000cc4a l       .text  00000000 
d000cc4a l       .text  00000000 
d000cc4e l       .text  00000000 
d000cc52 l       .text  00000000 
d000cc5a l       .text  00000000 
d000cc5e l       .text  00000000 
d000cc6c l       .text  00000000 
d000cc74 l       .text  00000000 
d000cc78 l       .text  00000000 
d000cc86 l       .text  00000000 
d000cc8e l       .text  00000000 
d000cc9c l       .text  00000000 
d000cca4 l       .text  00000000 
d000cca8 l       .text  00000000 
d000ccb4 l       .text  00000000 
d000ccb6 l       .text  00000000 
d000ccba l       .text  00000000 
d000ccbc l       .text  00000000 
d000ccc4 l       .text  00000000 
d000ccc8 l       .text  00000000 
d000ccd4 l       .text  00000000 
d000ccd6 l       .text  00000000 
d000ccda l       .text  00000000 
d000ccda l       .text  00000000 
d000ccde l       .text  00000000 
d000cce0 l       .text  00000000 
d000cce0 l       .text  00000000 
d000cce8 l       .text  00000000 
d000cce8 l       .text  00000000 
00009ae9 l       .debug_loc     00000000 
00009b1a l       .debug_loc     00000000 
00009b40 l       .debug_loc     00000000 
00009b9c l       .debug_loc     00000000 
00009bf8 l       .debug_loc     00000000 
00009c46 l       .debug_loc     00000000 
00009c7e l       .debug_loc     00000000 
00009cda l       .debug_loc     00000000 
00009d06 l       .debug_loc     00000000 
00009d32 l       .debug_loc     00000000 
00009d56 l       .debug_loc     00000000 
00009d8c l       .debug_loc     00000000 
00009db0 l       .debug_loc     00000000 
00009dd4 l       .debug_loc     00000000 
00009e0a l       .debug_loc     00000000 
00009e2e l       .debug_loc     00000000 
00009e6e l       .debug_loc     00000000 
00009e92 l       .debug_loc     00000000 
00009eb0 l       .debug_loc     00000000 
00009ecc l       .debug_loc     00000000 
00009ef0 l       .debug_loc     00000000 
00009f14 l       .debug_loc     00000000 
00009f3d l       .debug_loc     00000000 
00009f61 l       .debug_loc     00000000 
00009f7e l       .debug_loc     00000000 
00009fb4 l       .debug_loc     00000000 
00009fd8 l       .debug_loc     00000000 
00009ffc l       .debug_loc     00000000 
0000a01c l       .debug_loc     00000000 
0000a048 l       .debug_loc     00000000 
0000a06c l       .debug_loc     00000000 
0000a099 l       .debug_loc     00000000 
0000a0c6 l       .debug_loc     00000000 
0000a0e1 l       .debug_loc     00000000 
0000a105 l       .debug_loc     00000000 
0000a136 l       .debug_loc     00000000 
0000a15c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006f6a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000dc8 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007029 l       .debug_str     00000000 
00006f93 l       .debug_str     00000000 
00006fa5 l       .debug_str     00000000 
00006fbd l       .debug_str     00000000 
00006fd5 l       .debug_str     00000000 
00006fee l       .debug_str     00000000 
00007009 l       .debug_str     00000000 
00007069 l       .debug_str     00000000 
00007033 l       .debug_str     00000000 
00007040 l       .debug_str     00000000 
0000704d l       .debug_str     00000000 
0000705a l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00007073 l       .debug_str     00000000 
00001e45 l       .debug_str     00000000 
00000292 l       .debug_str     00000000 
0000702e l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
0000150e l       .debug_str     00000000 
00001502 l       .debug_str     00000000 
000074dd l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
0000708c l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00007098 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
000070b3 l       .debug_str     00000000 
000010df l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
000010af l       .debug_str     00000000 
000070cc l       .debug_str     00000000 
000070d3 l       .debug_str     00000000 
000010a9 l       .debug_str     00000000 
00002144 l       .debug_str     00000000 
000070d8 l       .debug_str     00000000 
000070e9 l       .debug_str     00000000 
000070f2 l       .debug_str     00000000 
00000d98 l       .debug_ranges  00000000 
00000db0 l       .debug_ranges  00000000 
00005ddd l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001621 l       .debug_str     00000000 
000070fe l       .debug_str     00000000 
00001607 l       .debug_str     00000000 
00001099 l       .debug_str     00000000 
0000676d l       .debug_str     00000000 
00006766 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000e98 l       .debug_frame   00000000 
d000cbc8 l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cc2a l       .text  00000000 
d000cce8 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify.c
d000cce8 l       .text  00000000 
d000cce8 l       .text  00000000 
d000cce8 l       .text  00000000 
d000ccea l       .text  00000000 
d000cd06 l       .text  00000000 
d000cd08 l       .text  00000000 
d000cd0a l       .text  00000000 
d000cd0e l       .text  00000000 
d000cd0e l       .text  00000000 
d000cd10 l       .text  00000000 
d000cd10 l       .text  00000000 
d000cd1a l       .text  00000000 
d000cd1c l       .text  00000000 
d000cd1e l       .text  00000000 
d000cd1e l       .text  00000000 
d000cd22 l       .text  00000000 
d000cd22 l       .text  00000000 
d000cd26 l       .text  00000000 
d000cd2a l       .text  00000000 
d000cd32 l       .text  00000000 
d000cd36 l       .text  00000000 
d000cd44 l       .text  00000000 
d000cd4c l       .text  00000000 
d000cd50 l       .text  00000000 
d000cd5e l       .text  00000000 
d000cd66 l       .text  00000000 
d000cd74 l       .text  00000000 
d000cd7c l       .text  00000000 
d000cd80 l       .text  00000000 
d000cd8c l       .text  00000000 
d000cd94 l       .text  00000000 
d000cd98 l       .text  00000000 
d000cd98 l       .text  00000000 
d000cd9c l       .text  00000000 
d000cda0 l       .text  00000000 
d000cda4 l       .text  00000000 
d000cda4 l       .text  00000000 
d000cda8 l       .text  00000000 
d000cdac l       .text  00000000 
d000cdac l       .text  00000000 
d000cdb2 l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdca l       .text  00000000 
d000cdca l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cdd6 l       .text  00000000 
d000cdda l       .text  00000000 
d000cdda l       .text  00000000 
d000cddc l       .text  00000000 
d000cddc l       .text  00000000 
d000cde0 l       .text  00000000 
d000cde0 l       .text  00000000 
d000cde4 l       .text  00000000 
d000cde4 l       .text  00000000 
d000cde8 l       .text  00000000 
d000f12c l     O .rodata        00000180 kSigverifyShares
d000cdf2 l       .text  00000000 
d000cdf2 l       .text  00000000 
d000cdf4 l       .text  00000000 
d000cdf6 l       .text  00000000 
d000cdf8 l       .text  00000000 
d000cdfa l       .text  00000000 
d000cdfc l       .text  00000000 
d000cdfe l       .text  00000000 
d000ce00 l       .text  00000000 
d000ce00 l       .text  00000000 
d000ce02 l       .text  00000000 
d000ce02 l       .text  00000000 
d000ce0c l       .text  00000000 
d000ce0c l       .text  00000000 
d000ce0e l       .text  00000000 
d000ce0e l       .text  00000000 
d000ce10 l       .text  00000000 
d000ce10 l       .text  00000000 
d000ce14 l       .text  00000000 
d000ce1c l       .text  00000000 
d000f2ac l     O .rodata        00000014 sigverify_encoded_message_check.kEncodedSha256
d000ce28 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce34 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce38 l       .text  00000000 
d000ce3a l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce40 l       .text  00000000 
d000ce40 l       .text  00000000 
d000ce42 l       .text  00000000 
d000ce4c l       .text  00000000 
d000ce4c l       .text  00000000 
d000ce52 l       .text  00000000 
d000ce52 l       .text  00000000 
d000ce56 l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce5e l       .text  00000000 
d000ce62 l       .text  00000000 
d000ce6a l       .text  00000000 
d000ce7a l       .text  00000000 
d000ce7a l       .text  00000000 
d000ce7c l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce88 l       .text  00000000 
d000ce88 l       .text  00000000 
d000ce8a l       .text  00000000 
d000ce92 l       .text  00000000 
d000ce92 l       .text  00000000 
d000cea2 l       .text  00000000 
d000cea4 l       .text  00000000 
d000cea6 l       .text  00000000 
d000cea6 l       .text  00000000 
d000cea8 l       .text  00000000 
d000cea8 l       .text  00000000 
d000ceb8 l       .text  00000000 
d000cec4 l       .text  00000000 
d000cec8 l       .text  00000000 
d000cec8 l       .text  00000000 
d000cec8 l       .text  00000000 
d000cec8 l       .text  00000000 
d000ceca l       .text  00000000 
d000ceca l       .text  00000000 
d000cece l       .text  00000000 
d000cece l       .text  00000000 
d000ced6 l       .text  00000000 
d000ced6 l       .text  00000000 
d000ced8 l       .text  00000000 
d000ceda l       .text  00000000 
d000cedc l       .text  00000000 
d000cede l       .text  00000000 
d000cee2 l       .text  00000000 
d000cee6 l       .text  00000000 
d000cee8 l       .text  00000000 
d000ceec l       .text  00000000 
d000ceee l       .text  00000000 
d000cef0 l       .text  00000000 
d000cef2 l       .text  00000000 
d000cef4 l       .text  00000000 
d000cef8 l       .text  00000000 
d000cef8 l       .text  00000000 
d000cefa l       .text  00000000 
d000cefa l       .text  00000000 
d000cf02 l       .text  00000000 
d000cf02 l       .text  00000000 
d000cf06 l       .text  00000000 
d000cf12 l       .text  00000000 
d000cf16 l       .text  00000000 
d000cf1a l       .text  00000000 
d000cf1e l       .text  00000000 
d000cf20 l       .text  00000000 
d000cf26 l       .text  00000000 
d000cf26 l       .text  00000000 
d000cf28 l       .text  00000000 
d000cf28 l       .text  00000000 
d000cf2c l       .text  00000000 
d000cf2c l       .text  00000000 
d000cf30 l       .text  00000000 
d000cf30 l       .text  00000000 
d000cf3e l       .text  00000000 
d000cf3e l       .text  00000000 
d000cf46 l       .text  00000000 
d000cf4a l       .text  00000000 
d000cf52 l       .text  00000000 
d000cf56 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf66 l       .text  00000000 
d000cf6e l       .text  00000000 
d000cf6e l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf76 l       .text  00000000 
d000cf78 l       .text  00000000 
d000cf80 l       .text  00000000 
d000cf82 l       .text  00000000 
d000cf84 l       .text  00000000 
d000cf84 l       .text  00000000 
d000cf86 l       .text  00000000 
d000cf8a l       .text  00000000 
d000cf90 l       .text  00000000 
d000cf90 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cf9c l       .text  00000000 
d000cfa4 l       .text  00000000 
d000cfa4 l       .text  00000000 
d000cfa8 l       .text  00000000 
d000cfac l       .text  00000000 
d000cfac l       .text  00000000 
d000cfae l       .text  00000000 
d000cfbc l       .text  00000000 
d000cfbc l       .text  00000000 
d000cfc2 l       .text  00000000 
d000cfc2 l       .text  00000000 
d000cfc4 l       .text  00000000 
d000cfc6 l       .text  00000000 
d000cfc8 l       .text  00000000 
d000cfca l       .text  00000000 
d000cfce l       .text  00000000 
d000cfce l       .text  00000000 
d000cfd2 l       .text  00000000 
d000cfd2 l       .text  00000000 
d000cfd4 l       .text  00000000 
d000cfdc l       .text  00000000 
d000cfe0 l       .text  00000000 
d000cfe0 l       .text  00000000 
d000cfe4 l       .text  00000000 
d000cfe4 l       .text  00000000 
d000cfe6 l       .text  00000000 
d000cfee l       .text  00000000 
d000cff2 l       .text  00000000 
d000cff2 l       .text  00000000 
d000cff6 l       .text  00000000 
d000cff6 l       .text  00000000 
d000cff8 l       .text  00000000 
d000d000 l       .text  00000000 
d000d004 l       .text  00000000 
d000d006 l       .text  00000000 
d000d008 l       .text  00000000 
d000d010 l       .text  00000000 
d000d010 l       .text  00000000 
0000a186 l       .debug_loc     00000000 
0000a1e3 l       .debug_loc     00000000 
0000a240 l       .debug_loc     00000000 
0000a271 l       .debug_loc     00000000 
0000a2a2 l       .debug_loc     00000000 
0000a2ff l       .debug_loc     00000000 
0000a325 l       .debug_loc     00000000 
0000a356 l       .debug_loc     00000000 
0000a37c l       .debug_loc     00000000 
0000a397 l       .debug_loc     00000000 
0000a3b2 l       .debug_loc     00000000 
0000a3f9 l       .debug_loc     00000000 
0000a414 l       .debug_loc     00000000 
0000a45b l       .debug_loc     00000000 
0000a4a2 l       .debug_loc     00000000 
0000a53d l       .debug_loc     00000000 
0000a564 l       .debug_loc     00000000 
0000a5a1 l       .debug_loc     00000000 
0000a5e0 l       .debug_loc     00000000 
0000a625 l       .debug_loc     00000000 
0000a65e l       .debug_loc     00000000 
0000a69d l       .debug_loc     00000000 
0000a6da l       .debug_loc     00000000 
0000a701 l       .debug_loc     00000000 
0000a727 l       .debug_loc     00000000 
0000a742 l       .debug_loc     00000000 
0000a768 l       .debug_loc     00000000 
0000a78e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007184 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000e78 l       .debug_ranges  00000000 
000071b8 l       .debug_str     00000000 
000071c7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000071ce l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
000071df l       .debug_str     00000000 
000071fa l       .debug_str     00000000 
0000721c l       .debug_str     00000000 
0000723d l       .debug_str     00000000 
00007263 l       .debug_str     00000000 
00007287 l       .debug_str     00000000 
00001c29 l       .debug_str     00000000 
000072aa l       .debug_str     00000000 
000072bf l       .debug_str     00000000 
000072d5 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000072eb l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00007307 l       .debug_str     00000000 
00007327 l       .debug_str     00000000 
000017d7 l       .debug_str     00000000 
000017b2 l       .debug_str     00000000 
0000732f l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
0000733b l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
00001746 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
000014d4 l       .debug_str     00000000 
0000123e l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00007386 l       .debug_str     00000000 
00000df0 l       .debug_ranges  00000000 
00001885 l       .debug_str     00000000 
00000e10 l       .debug_ranges  00000000 
00000e28 l       .debug_ranges  00000000 
00000e40 l       .debug_ranges  00000000 
00000e58 l       .debug_ranges  00000000 
0000107a l       .debug_str     00000000 
00007340 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
00007357 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
0000149b l       .debug_str     00000000 
00001274 l       .debug_str     00000000 
000012ec l       .debug_str     00000000 
0000736e l       .debug_str     00000000 
00001282 l       .debug_str     00000000 
0000128c l       .debug_str     00000000 
00001085 l       .debug_str     00000000 
000013c9 l       .debug_str     00000000 
000073d2 l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
000012fe l       .debug_str     00000000 
000012e3 l       .debug_str     00000000 
000012ac l       .debug_str     00000000 
000012c0 l       .debug_str     00000000 
000012d2 l       .debug_str     00000000 
00001296 l       .debug_str     00000000 
00000ef8 l       .debug_frame   00000000 
d000cf76 l       .text  00000000 
d000d010 l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_ibex.c
d000d010 l       .text  00000000 
d000d010 l       .text  00000000 
d000d010 l       .text  00000000 
d000d012 l       .text  00000000 
d000d02e l       .text  00000000 
d000d030 l       .text  00000000 
d000d032 l       .text  00000000 
d000d034 l       .text  00000000 
d000d048 l       .text  00000000 
d000d048 l       .text  00000000 
d000d04e l       .text  00000000 
d000d054 l       .text  00000000 
d000d054 l       .text  00000000 
d000d058 l       .text  00000000 
d000d05a l       .text  00000000 
d000d05a l       .text  00000000 
d000d062 l       .text  00000000 
d000d062 l       .text  00000000 
d000d066 l       .text  00000000 
d000d072 l       .text  00000000 
d000d072 l       .text  00000000 
d000d082 l       .text  00000000 
d000d082 l       .text  00000000 
d000d086 l       .text  00000000 
d000d086 l       .text  00000000 
d000d08c l       .text  00000000 
d000d092 l       .text  00000000 
d000d096 l       .text  00000000 
d000d096 l       .text  00000000 
d000d09a l       .text  00000000 
d000d09a l       .text  00000000 
d000d09e l       .text  00000000 
d000d0a0 l       .text  00000000 
d000d0a0 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0a6 l       .text  00000000 
d000d0a6 l       .text  00000000 
d000d0a8 l       .text  00000000 
d000d0a8 l       .text  00000000 
d000d0ac l       .text  00000000 
d000d0ac l       .text  00000000 
d000d0c0 l       .text  00000000 
d000d0c0 l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0c8 l       .text  00000000 
d000d0c8 l       .text  00000000 
d000d0cc l       .text  00000000 
d000d0d0 l       .text  00000000 
d000d0d8 l       .text  00000000 
d000d0da l       .text  00000000 
d000d0da l       .text  00000000 
d000d0de l       .text  00000000 
d000d0de l       .text  00000000 
d000d0e0 l       .text  00000000 
d000d0e4 l       .text  00000000 
d000d0e4 l       .text  00000000 
d000d0e6 l       .text  00000000 
d000d0ea l       .text  00000000 
d000d0ea l       .text  00000000 
d000d0ee l       .text  00000000 
d000d0ee l       .text  00000000 
d000d0f2 l       .text  00000000 
d000d0f2 l       .text  00000000 
d000d0fa l       .text  00000000 
d000d0fa l       .text  00000000 
d000d100 l       .text  00000000 
d000d106 l       .text  00000000 
d000d106 l       .text  00000000 
d000d10a l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d114 l       .text  00000000 
d000d114 l       .text  00000000 
d000d118 l       .text  00000000 
d000d11c l       .text  00000000 
d000d11c l       .text  00000000 
d000d122 l       .text  00000000 
d000d128 l       .text  00000000 
d000d12c l       .text  00000000 
d000d12c l       .text  00000000 
d000d130 l       .text  00000000 
d000d134 l       .text  00000000 
d000d134 l       .text  00000000 
d000d136 l       .text  00000000 
d000d136 l       .text  00000000 
d000d13a l       .text  00000000 
d000d13a l       .text  00000000 
d000d13c l       .text  00000000 
d000d13c l       .text  00000000 
d000d13e l       .text  00000000 
d000d13e l       .text  00000000 
d000d142 l       .text  00000000 
d000d142 l       .text  00000000 
d000d146 l       .text  00000000 
d000d14c l       .text  00000000 
d000d14c l       .text  00000000 
d000d14e l       .text  00000000 
d000d152 l       .text  00000000 
d000d152 l       .text  00000000 
d000d22c l     F .text  00000132 mont_mul
d000d15c l       .text  00000000 
d000d15c l       .text  00000000 
d000d166 l       .text  00000000 
d000d166 l       .text  00000000 
d000d170 l       .text  00000000 
d000d170 l       .text  00000000 
d000d17a l       .text  00000000 
d000d17a l       .text  00000000 
d000d184 l       .text  00000000 
d000d184 l       .text  00000000 
d000d18e l       .text  00000000 
d000d18e l       .text  00000000 
d000d190 l       .text  00000000 
d000d190 l       .text  00000000 
d000d19a l       .text  00000000 
d000d19a l       .text  00000000 
d000d1a4 l       .text  00000000 
d000d1a4 l       .text  00000000 
d000d1a6 l       .text  00000000 
d000d1a6 l       .text  00000000 
d000d1a8 l       .text  00000000 
d000d1a8 l       .text  00000000 
d000d1b2 l       .text  00000000 
d000d1b2 l       .text  00000000 
d000d1c2 l       .text  00000000 
d000d1c2 l       .text  00000000 
d000d1c4 l       .text  00000000 
d000d1c6 l       .text  00000000 
d000d1c6 l       .text  00000000 
d000d1ca l       .text  00000000 
d000d1cc l       .text  00000000 
d000d1cc l       .text  00000000 
d000d1d6 l       .text  00000000 
d000d1d6 l       .text  00000000 
d000d1da l       .text  00000000 
d000d1e2 l       .text  00000000 
d000d1e2 l       .text  00000000 
d000d1e8 l       .text  00000000 
d000d1ee l       .text  00000000 
d000d1f2 l       .text  00000000 
d000d1f2 l       .text  00000000 
d000d1f6 l       .text  00000000 
d000d1f6 l       .text  00000000 
d000d1fa l       .text  00000000 
d000d1fc l       .text  00000000 
d000d1fc l       .text  00000000 
d000d200 l       .text  00000000 
d000d200 l       .text  00000000 
d000d202 l       .text  00000000 
d000d202 l       .text  00000000 
d000d204 l       .text  00000000 
d000d204 l       .text  00000000 
d000d208 l       .text  00000000 
d000d208 l       .text  00000000 
d000d20c l       .text  00000000 
d000d210 l       .text  00000000 
d000d214 l       .text  00000000 
d000d21c l       .text  00000000 
d000d22c l       .text  00000000 
d000d22c l       .text  00000000 
d000d22c l       .text  00000000 
d000d22c l       .text  00000000 
d000d22c l       .text  00000000 
d000d22e l       .text  00000000 
d000d240 l       .text  00000000 
d000d242 l       .text  00000000 
d000d244 l       .text  00000000 
d000d246 l       .text  00000000 
d000d248 l       .text  00000000 
d000d24a l       .text  00000000 
d000d25a l       .text  00000000 
d000d25a l       .text  00000000 
d000d25c l       .text  00000000 
d000d25c l       .text  00000000 
d000d26c l       .text  00000000 
d000d26c l       .text  00000000 
d000d278 l       .text  00000000 
d000d27c l       .text  00000000 
d000d282 l       .text  00000000 
d000d28a l       .text  00000000 
d000d28c l       .text  00000000 
d000d28c l       .text  00000000 
d000d290 l       .text  00000000 
d000d294 l       .text  00000000 
d000d29a l       .text  00000000 
d000d29a l       .text  00000000 
d000d29e l       .text  00000000 
d000d29e l       .text  00000000 
d000d2a2 l       .text  00000000 
d000d2a6 l       .text  00000000 
d000d2a6 l       .text  00000000 
d000d2a8 l       .text  00000000 
d000d2ac l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b2 l       .text  00000000 
d000d2b2 l       .text  00000000 
d000d2b8 l       .text  00000000 
d000d2be l       .text  00000000 
d000d2c6 l       .text  00000000 
d000d2ce l       .text  00000000 
d000d2ce l       .text  00000000 
d000d2d0 l       .text  00000000 
d000d2d6 l       .text  00000000 
d000d2d8 l       .text  00000000 
d000d2de l       .text  00000000 
d000d2de l       .text  00000000 
d000d2e6 l       .text  00000000 
d000d2ea l       .text  00000000 
d000d2ea l       .text  00000000 
d000d2f4 l       .text  00000000 
d000d2f6 l       .text  00000000 
d000d2fe l       .text  00000000 
d000d300 l       .text  00000000 
d000d300 l       .text  00000000 
d000d304 l       .text  00000000 
d000d308 l       .text  00000000 
d000d308 l       .text  00000000 
d000d30a l       .text  00000000 
d000d30a l       .text  00000000 
d000d30c l       .text  00000000 
d000d30c l       .text  00000000 
d000d310 l       .text  00000000 
d000d310 l       .text  00000000 
d000d314 l       .text  00000000 
d000d318 l       .text  00000000 
d000d31a l       .text  00000000 
d000d31c l       .text  00000000 
d000d31c l       .text  00000000 
d000d322 l       .text  00000000 
d000d328 l       .text  00000000 
d000d32c l       .text  00000000 
d000d32c l       .text  00000000 
d000d330 l       .text  00000000 
d000d330 l       .text  00000000 
d000d334 l       .text  00000000 
d000d336 l       .text  00000000 
d000d336 l       .text  00000000 
d000d33a l       .text  00000000 
d000d33a l       .text  00000000 
d000d33c l       .text  00000000 
d000d33c l       .text  00000000 
d000d33e l       .text  00000000 
d000d33e l       .text  00000000 
d000d342 l       .text  00000000 
d000d342 l       .text  00000000 
d000d344 l       .text  00000000 
d000d348 l       .text  00000000 
d000d348 l       .text  00000000 
d000d34a l       .text  00000000 
d000d34c l       .text  00000000 
d000d352 l       .text  00000000 
d000d354 l       .text  00000000 
d000d35e l       .text  00000000 
d000d35e l       .text  00000000 
0000a7a9 l       .debug_loc     00000000 
0000a7cf l       .debug_loc     00000000 
0000a7f5 l       .debug_loc     00000000 
0000a81b l       .debug_loc     00000000 
0000a841 l       .debug_loc     00000000 
0000a874 l       .debug_loc     00000000 
0000a89a l       .debug_loc     00000000 
0000a8b5 l       .debug_loc     00000000 
0000a8f3 l       .debug_loc     00000000 
0000a91d l       .debug_loc     00000000 
0000a938 l       .debug_loc     00000000 
0000a95e l       .debug_loc     00000000 
0000a984 l       .debug_loc     00000000 
0000a9b7 l       .debug_loc     00000000 
0000a9d2 l       .debug_loc     00000000 
0000aa0b l       .debug_loc     00000000 
0000aa3e l       .debug_loc     00000000 
0000aa64 l       .debug_loc     00000000 
0000aa97 l       .debug_loc     00000000 
0000aab2 l       .debug_loc     00000000 
0000aad8 l       .debug_loc     00000000 
0000aafe l       .debug_loc     00000000 
0000ab24 l       .debug_loc     00000000 
0000ab4a l       .debug_loc     00000000 
0000ab71 l       .debug_loc     00000000 
0000abe6 l       .debug_loc     00000000 
0000ac01 l       .debug_loc     00000000 
0000ac6b l       .debug_loc     00000000 
0000aca1 l       .debug_loc     00000000 
0000acc7 l       .debug_loc     00000000 
0000acfa l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000738d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000ef8 l       .debug_ranges  00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000073c4 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
0000187c l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000073da l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
00000f93 l       .debug_str     00000000 
000025ef l       .debug_str     00000000 
000073e8 l       .debug_str     00000000 
000073f9 l       .debug_str     00000000 
00007400 l       .debug_str     00000000 
00007405 l       .debug_str     00000000 
00007340 l       .debug_str     00000000 
00007419 l       .debug_str     00000000 
00000e98 l       .debug_ranges  00000000 
00000eb0 l       .debug_ranges  00000000 
00000ec8 l       .debug_ranges  00000000 
00005ddd l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00007410 l       .debug_str     00000000 
00003dc5 l       .debug_str     00000000 
00002fa3 l       .debug_str     00000000 
0000741d l       .debug_str     00000000 
00007422 l       .debug_str     00000000 
00007426 l       .debug_str     00000000 
00001746 l       .debug_str     00000000 
00000ee0 l       .debug_ranges  00000000 
00000fbf l       .debug_str     00000000 
00000f5c l       .debug_frame   00000000 
d000d22c l       .text  00000000 
d000d35e l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_otbn.c
d000d35e l       .text  00000000 
d000d35e l       .text  00000000 
d000d35e l       .text  00000000 
d000d360 l       .text  00000000 
d000d36c l       .text  00000000 
d000d36e l       .text  00000000 
d000d370 l       .text  00000000 
d000d372 l       .text  00000000 
d000d372 l       .text  00000000 
d000d376 l       .text  00000000 
d000f2c0 l     O .rodata        00000010 kOtbnAppRsa
d000d376 l       .text  00000000 
d000d37e l       .text  00000000 
d000d37e l       .text  00000000 
d000d394 l       .text  00000000 
d000d394 l       .text  00000000 
d000d396 l       .text  00000000 
d000d396 l       .text  00000000 
d000d39a l       .text  00000000 
d000d39a l       .text  00000000 
d000d39e l       .text  00000000 
d000d3aa l       .text  00000000 
d000d3aa l       .text  00000000 
d000d3ae l       .text  00000000 
d000d3b8 l       .text  00000000 
d000d3b8 l       .text  00000000 
d000d3ba l       .text  00000000 
d000d3ba l       .text  00000000 
d000d3be l       .text  00000000 
d000d3be l       .text  00000000 
d000d3c2 l       .text  00000000 
d000d3ce l       .text  00000000 
d000d3ce l       .text  00000000 
d000d3d2 l       .text  00000000 
d000d3dc l       .text  00000000 
d000d3dc l       .text  00000000 
d000d3de l       .text  00000000 
d000d3de l       .text  00000000 
d000d3e2 l       .text  00000000 
d000d3ee l       .text  00000000 
d000d3ee l       .text  00000000 
d000d3f2 l       .text  00000000 
d000d3fc l       .text  00000000 
d000d3fc l       .text  00000000 
d000d3fe l       .text  00000000 
d000d3fe l       .text  00000000 
d000d402 l       .text  00000000 
d000d402 l       .text  00000000 
d000d406 l       .text  00000000 
d000d412 l       .text  00000000 
d000d412 l       .text  00000000 
d000d414 l       .text  00000000 
d000d416 l       .text  00000000 
d000d416 l       .text  00000000 
d000d418 l       .text  00000000 
d000d418 l       .text  00000000 
d000d41c l       .text  00000000 
d000d428 l       .text  00000000 
d000d428 l       .text  00000000 
d000d42a l       .text  00000000 
d000d42c l       .text  00000000 
d000d42c l       .text  00000000 
d000d42e l       .text  00000000 
d000d42e l       .text  00000000 
d000d43e l       .text  00000000 
d000d43e l       .text  00000000 
d000d442 l       .text  00000000 
d000d442 l       .text  00000000 
d000d444 l       .text  00000000 
d000d444 l       .text  00000000 
d000d44c l       .text  00000000 
d000d44c l       .text  00000000 
d000d450 l       .text  00000000 
d000d450 l       .text  00000000 
d000d458 l       .text  00000000 
d000d464 l       .text  00000000 
d000d470 l       .text  00000000 
d000d470 l       .text  00000000 
d000d474 l       .text  00000000 
d000d47e l       .text  00000000 
d000d47e l       .text  00000000 
d000d480 l       .text  00000000 
d000d484 l       .text  00000000 
d000d486 l       .text  00000000 
d000d48e l       .text  00000000 
d000d48e l       .text  00000000 
d000d48e l       .text  00000000 
d000d48e l       .text  00000000 
d000d48e l       .text  00000000 
d000d490 l       .text  00000000 
d000d498 l       .text  00000000 
d000d49a l       .text  00000000 
d000d49c l       .text  00000000 
d000d49e l       .text  00000000 
d000d49e l       .text  00000000 
d000d4a6 l       .text  00000000 
d000d4a6 l       .text  00000000 
d000d4aa l       .text  00000000 
d000d4b2 l       .text  00000000 
d000d4b4 l       .text  00000000 
d000d4b6 l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4c4 l       .text  00000000 
d000d4c6 l       .text  00000000 
d000d4c8 l       .text  00000000 
d000d4ca l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4d0 l       .text  00000000 
0000ad15 l       .debug_loc     00000000 
0000ad72 l       .debug_loc     00000000 
0000adcf l       .debug_loc     00000000 
0000ae2c l       .debug_loc     00000000 
0000ae52 l       .debug_loc     00000000 
0000ae6d l       .debug_loc     00000000 
0000ae88 l       .debug_loc     00000000 
0000aeae l       .debug_loc     00000000 
0000aec9 l       .debug_loc     00000000 
0000aee4 l       .debug_loc     00000000 
0000af0a l       .debug_loc     00000000 
0000af25 l       .debug_loc     00000000 
0000af4b l       .debug_loc     00000000 
0000af66 l       .debug_loc     00000000 
0000af8c l       .debug_loc     00000000 
0000afa7 l       .debug_loc     00000000 
0000afcd l       .debug_loc     00000000 
0000afe8 l       .debug_loc     00000000 
0000b00e l       .debug_loc     00000000 
0000b029 l       .debug_loc     00000000 
0000b05a l       .debug_loc     00000000 
0000b08b l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000742b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000f10 l       .debug_ranges  00000000 
00007462 l       .debug_str     00000000 
00007473 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000747f l       .debug_str     00000000 
00007490 l       .debug_str     00000000 
000074a1 l       .debug_str     00000000 
000074b3 l       .debug_str     00000000 
000074fa l       .debug_str     00000000 
000074f1 l       .debug_str     00000000 
000074bf l       .debug_str     00000000 
000074ca l       .debug_str     00000000 
000074d3 l       .debug_str     00000000 
000074e3 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
00007505 l       .debug_str     00000000 
0000751a l       .debug_str     00000000 
00007530 l       .debug_str     00000000 
00007548 l       .debug_str     00000000 
000072aa l       .debug_str     00000000 
000072bf l       .debug_str     00000000 
000072d5 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00007560 l       .debug_str     00000000 
00007626 l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
0000669d l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00007594 l       .debug_str     00000000 
000075cb l       .debug_str     00000000 
0000757b l       .debug_str     00000000 
00007589 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000759b l       .debug_str     00000000 
00007633 l       .debug_str     00000000 
0000764c l       .debug_str     00000000 
0000123e l       .debug_str     00000000 
00007657 l       .debug_str     00000000 
000025d2 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
000075b7 l       .debug_str     00000000 
000075c1 l       .debug_str     00000000 
000075cf l       .debug_str     00000000 
000075e6 l       .debug_str     00000000 
000075f7 l       .debug_str     00000000 
00007612 l       .debug_str     00000000 
00007357 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00007419 l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
0000762b l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
00000fbc l       .debug_frame   00000000 
d000d48e l       .text  00000000 
d000d4d0 l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn_util.c
d000d4d0 l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4d0 l       .text  00000000 
d000d4ea l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ee l       .text  00000000 
d000d500 l       .text  00000000 
d000d502 l       .text  00000000 
d000d502 l       .text  00000000 
d000d504 l       .text  00000000 
d000d508 l       .text  00000000 
d000d508 l       .text  00000000 
d000d510 l       .text  00000000 
d000d514 l       .text  00000000 
d000d516 l       .text  00000000 
d000d518 l       .text  00000000 
d000d518 l       .text  00000000 
d000d51c l       .text  00000000 
d000d51c l       .text  00000000 
d000d51e l       .text  00000000 
d000d520 l       .text  00000000 
d000d520 l       .text  00000000 
d000d520 l       .text  00000000 
d000d520 l       .text  00000000 
d000d524 l       .text  00000000 
d000d524 l       .text  00000000 
d000d528 l       .text  00000000 
d000d534 l       .text  00000000 
d000d534 l       .text  00000000 
d000d538 l       .text  00000000 
d000d53c l       .text  00000000 
d000d53c l       .text  00000000 
d000d540 l       .text  00000000 
d000d544 l       .text  00000000 
d000d548 l       .text  00000000 
d000d54c l       .text  00000000 
d000d54c l       .text  00000000 
d000d54e l       .text  00000000 
d000d550 l       .text  00000000 
d000d550 l       .text  00000000 
d000d550 l       .text  00000000 
d000d550 l       .text  00000000 
d000d554 l       .text  00000000 
d000d554 l       .text  00000000 
d000d558 l       .text  00000000 
d000d564 l       .text  00000000 
d000d564 l       .text  00000000 
d000d566 l       .text  00000000 
d000d566 l       .text  00000000 
d000d56a l       .text  00000000 
d000d56e l       .text  00000000 
d000d56e l       .text  00000000 
d000d572 l       .text  00000000 
d000d574 l       .text  00000000 
d000d574 l       .text  00000000 
d000d574 l       .text  00000000 
d000d574 l       .text  00000000 
d000d578 l       .text  00000000 
d000d584 l       .text  00000000 
d000d584 l       .text  00000000 
d000d586 l       .text  00000000 
d000d586 l       .text  00000000 
d000d588 l       .text  00000000 
d000d588 l       .text  00000000 
d000d58c l       .text  00000000 
d000d58c l       .text  00000000 
d000d594 l       .text  00000000 
d000d5a0 l       .text  00000000 
d000d5a0 l       .text  00000000 
d000d5a2 l       .text  00000000 
d000d5a2 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5aa l       .text  00000000 
d000d5aa l       .text  00000000 
d000d5ac l       .text  00000000 
d000d5ac l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b4 l       .text  00000000 
d000d5c0 l       .text  00000000 
d000d5c0 l       .text  00000000 
d000d5d8 l       .text  00000000 
d000d5de l       .text  00000000 
d000d5e0 l       .text  00000000 
d000d5ee l       .text  00000000 
d000d5f2 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d5fa l       .text  00000000 
d000d5fa l       .text  00000000 
d000d5fc l       .text  00000000 
d000d5fe l       .text  00000000 
d000d5fe l       .text  00000000 
d000d5fe l       .text  00000000 
d000d602 l       .text  00000000 
d000d602 l       .text  00000000 
d000d606 l       .text  00000000 
d000d608 l       .text  00000000 
d000d614 l       .text  00000000 
d000d616 l       .text  00000000 
d000d616 l       .text  00000000 
d000d61e l       .text  00000000 
d000d620 l       .text  00000000 
d000d626 l       .text  00000000 
d000d626 l       .text  00000000 
d000d62a l       .text  00000000 
d000d62e l       .text  00000000 
d000d634 l       .text  00000000 
d000d634 l       .text  00000000 
d000d634 l       .text  00000000 
d000d634 l       .text  00000000 
d000d634 l       .text  00000000 
d000d636 l       .text  00000000 
d000d638 l       .text  00000000 
d000d638 l       .text  00000000 
d000d63a l       .text  00000000 
d000d63c l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d63e l       .text  00000000 
d000d640 l       .text  00000000 
d000d642 l       .text  00000000 
d000d642 l       .text  00000000 
d000d644 l       .text  00000000 
d000d646 l       .text  00000000 
d000d646 l       .text  00000000 
d000d646 l       .text  00000000 
0000b0bc l       .debug_loc     00000000 
0000b0e2 l       .debug_loc     00000000 
0000b10a l       .debug_loc     00000000 
0000b130 l       .debug_loc     00000000 
0000b14b l       .debug_loc     00000000 
0000b187 l       .debug_loc     00000000 
0000b1a2 l       .debug_loc     00000000 
0000b1c8 l       .debug_loc     00000000 
0000b1e3 l       .debug_loc     00000000 
0000b209 l       .debug_loc     00000000 
0000b224 l       .debug_loc     00000000 
0000b24a l       .debug_loc     00000000 
0000b265 l       .debug_loc     00000000 
0000b28b l       .debug_loc     00000000 
0000b2a6 l       .debug_loc     00000000 
0000b2cc l       .debug_loc     00000000 
0000b2e7 l       .debug_loc     00000000 
0000b302 l       .debug_loc     00000000 
0000b333 l       .debug_loc     00000000 
0000b359 l       .debug_loc     00000000 
0000b37f l       .debug_loc     00000000 
0000b39a l       .debug_loc     00000000 
0000b3c0 l       .debug_loc     00000000 
0000b3e6 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007669 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000f40 l       .debug_ranges  00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007814 l       .debug_str     00000000 
00007693 l       .debug_str     00000000 
000076a7 l       .debug_str     00000000 
000076bf l       .debug_str     00000000 
000076d7 l       .debug_str     00000000 
000076ed l       .debug_str     00000000 
00007705 l       .debug_str     00000000 
00007716 l       .debug_str     00000000 
00007734 l       .debug_str     00000000 
00007752 l       .debug_str     00000000 
0000776f l       .debug_str     00000000 
0000778c l       .debug_str     00000000 
000077ac l       .debug_str     00000000 
000077c9 l       .debug_str     00000000 
000077e9 l       .debug_str     00000000 
00007803 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00007822 l       .debug_str     00000000 
00007836 l       .debug_str     00000000 
000075b7 l       .debug_str     00000000 
000067d1 l       .debug_str     00000000 
00007855 l       .debug_str     00000000 
000075cb l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000074fa l       .debug_str     00000000 
000074f1 l       .debug_str     00000000 
000074bf l       .debug_str     00000000 
000074ca l       .debug_str     00000000 
000074d3 l       .debug_str     00000000 
000074e3 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000075c1 l       .debug_str     00000000 
000078e8 l       .debug_str     00000000 
000078f7 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
00000f28 l       .debug_ranges  00000000 
0000786e l       .debug_str     00000000 
00007886 l       .debug_str     00000000 
00007899 l       .debug_str     00000000 
000078a9 l       .debug_str     00000000 
000078bc l       .debug_str     00000000 
000075e6 l       .debug_str     00000000 
00006f47 l       .debug_str     00000000 
000078cc l       .debug_str     00000000 
000075cf l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00007612 l       .debug_str     00000000 
00007906 l       .debug_str     00000000 
000078d9 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00007594 l       .debug_str     00000000 
00007626 l       .debug_str     00000000 
0000757b l       .debug_str     00000000 
00007589 l       .debug_str     00000000 
0000177d l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00007473 l       .debug_str     00000000 
0000100c l       .debug_frame   00000000 
d000d4ec l       .text  00000000 
d000d5f8 l       .text  00000000 
d000d634 l       .text  00000000 
d000d63e l       .text  00000000 
d000d646 l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn.c
d000d646 l       .text  00000000 
d000d646 l       .text  00000000 
d000d646 l       .text  00000000 
d000d648 l       .text  00000000 
d000d648 l       .text  00000000 
d000d648 l       .text  00000000 
d000d648 l       .text  00000000 
d000d64c l       .text  00000000 
d000d64c l       .text  00000000 
d000d64c l       .text  00000000 
d000d64c l       .text  00000000 
d000d654 l       .text  00000000 
d000d654 l       .text  00000000 
d000d656 l       .text  00000000 
d000d656 l       .text  00000000 
d000d658 l       .text  00000000 
d000d658 l       .text  00000000 
d000d65a l       .text  00000000 
d000d65a l       .text  00000000 
d000d65c l       .text  00000000 
d000d65c l       .text  00000000 
d000d660 l       .text  00000000 
d000d660 l       .text  00000000 
d000d662 l       .text  00000000 
d000d666 l       .text  00000000 
d000d666 l       .text  00000000 
d000d668 l       .text  00000000 
d000d668 l       .text  00000000 
d000d66c l       .text  00000000 
d000d66c l       .text  00000000 
d000d670 l       .text  00000000 
d000d670 l       .text  00000000 
d000d680 l       .text  00000000 
d000d680 l       .text  00000000 
d000d682 l       .text  00000000 
d000d682 l       .text  00000000 
d000d68c l       .text  00000000 
d000d68e l       .text  00000000 
d000d692 l       .text  00000000 
d000d696 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d69a l       .text  00000000 
d000d69a l       .text  00000000 
d000d69a l       .text  00000000 
d000d69c l       .text  00000000 
d000d6a2 l       .text  00000000 
d000d6a8 l       .text  00000000 
d000d6a8 l       .text  00000000 
d000d6b0 l       .text  00000000 
d000d6b0 l       .text  00000000 
d000d6ba l     F .text  00000076 otbn_cmd_run
d000d6ba l       .text  00000000 
d000d6ba l       .text  00000000 
d000d6ba l       .text  00000000 
d000d6ba l       .text  00000000 
d000d6ba l       .text  00000000 
d000d6ba l       .text  00000000 
d000d6bc l       .text  00000000 
d000d6bc l       .text  00000000 
d000d6c4 l       .text  00000000 
d000d6c4 l       .text  00000000 
d000d6c6 l       .text  00000000 
d000d6c6 l       .text  00000000 
d000d6c8 l       .text  00000000 
d000d6c8 l       .text  00000000 
d000d6c8 l       .text  00000000 
d000d6c8 l       .text  00000000 
d000d6cc l       .text  00000000 
d000d6cc l       .text  00000000 
d000d6d0 l       .text  00000000 
d000d6d0 l       .text  00000000 
d000d6dc l       .text  00000000 
d000d6dc l       .text  00000000 
d000d6de l       .text  00000000 
d000d6de l       .text  00000000 
d000d6e2 l       .text  00000000 
d000d6e2 l       .text  00000000 
d000d6e4 l       .text  00000000 
d000d6e4 l       .text  00000000 
d000d6e6 l       .text  00000000 
d000d6ea l       .text  00000000 
d000d6ea l       .text  00000000 
d000d6f6 l       .text  00000000 
d000d6f6 l       .text  00000000 
d000d6f8 l       .text  00000000 
d000d6f8 l       .text  00000000 
d000d6fa l       .text  00000000 
d000d6fa l       .text  00000000 
d000d6fc l       .text  00000000 
d000d6fc l       .text  00000000 
d000d6fe l       .text  00000000 
d000d6fe l       .text  00000000 
d000d700 l       .text  00000000 
d000d700 l       .text  00000000 
d000d700 l       .text  00000000 
d000d704 l       .text  00000000 
d000d704 l       .text  00000000 
d000d708 l       .text  00000000 
d000d708 l       .text  00000000 
d000d708 l       .text  00000000 
d000d708 l       .text  00000000 
d000d70a l       .text  00000000 
d000d70e l       .text  00000000 
d000d71e l       .text  00000000 
d000d71e l       .text  00000000 
d000d720 l       .text  00000000 
d000d720 l       .text  00000000 
d000d72c l       .text  00000000 
d000d72c l       .text  00000000 
d000d72e l       .text  00000000 
d000d730 l       .text  00000000 
d000d730 l       .text  00000000 
d000d730 l       .text  00000000 
d000d730 l       .text  00000000 
d000d730 l       .text  00000000 
d000d734 l       .text  00000000 
d000d734 l       .text  00000000 
d000d736 l       .text  00000000 
d000d736 l       .text  00000000 
d000d738 l       .text  00000000 
d000d738 l       .text  00000000 
d000d738 l       .text  00000000 
d000d738 l       .text  00000000 
d000d738 l       .text  00000000 
d000d740 l       .text  00000000 
d000d744 l       .text  00000000 
d000d744 l       .text  00000000 
d000d744 l       .text  00000000 
d000d744 l       .text  00000000 
d000d744 l       .text  00000000 
d000d744 l       .text  00000000 
d000d746 l       .text  00000000 
d000d746 l       .text  00000000 
d000d746 l       .text  00000000 
d000d748 l       .text  00000000 
d000d74c l       .text  00000000 
d000d75a l       .text  00000000 
d000d762 l       .text  00000000 
d000d762 l       .text  00000000 
d000d770 l       .text  00000000 
d000d770 l       .text  00000000 
d000d772 l       .text  00000000 
d000d772 l       .text  00000000 
d000d776 l       .text  00000000 
d000d776 l       .text  00000000 
d000d77a l       .text  00000000 
d000d78a l       .text  00000000 
d000d78a l       .text  00000000 
d000d78c l       .text  00000000 
d000d79a l     F .text  00000068 otbn_write
d000d78c l       .text  00000000 
d000d78e l       .text  00000000 
d000d78e l       .text  00000000 
d000d792 l       .text  00000000 
d000d79a l       .text  00000000 
d000d79a l       .text  00000000 
d000d79a l       .text  00000000 
d000d79a l       .text  00000000 
d000d79a l       .text  00000000 
d000d79c l       .text  00000000 
d000d7a4 l       .text  00000000 
d000d7a6 l       .text  00000000 
d000d7a8 l       .text  00000000 
d000d7aa l       .text  00000000 
d000d7aa l       .text  00000000 
d000d7ac l       .text  00000000 
d000d7ac l       .text  00000000 
d000d7ae l       .text  00000000 
d000d7ae l       .text  00000000 
d000d7b0 l       .text  00000000 
d000d7b0 l       .text  00000000 
d000d7b4 l       .text  00000000 
d000d7b4 l       .text  00000000 
d000d7b6 l       .text  00000000 
d000d7ba l       .text  00000000 
d000d7ba l       .text  00000000 
d000d7be l       .text  00000000 
d000d7c4 l       .text  00000000 
d000d7c6 l       .text  00000000 
d000d7c8 l       .text  00000000 
d000d7c8 l       .text  00000000 
d000d7ca l       .text  00000000 
d000d7ca l       .text  00000000 
d000d7cc l       .text  00000000 
d000d7cc l       .text  00000000 
d000d7ce l       .text  00000000 
d000d7ce l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d4 l       .text  00000000 
d000d7d6 l       .text  00000000 
d000d7d8 l       .text  00000000 
d000d7e4 l       .text  00000000 
d000d7e4 l       .text  00000000 
d000d7e6 l       .text  00000000 
d000d7e6 l       .text  00000000 
d000d7ea l       .text  00000000 
d000d7ea l       .text  00000000 
d000d7f6 l       .text  00000000 
d000d7f8 l       .text  00000000 
d000d7fa l       .text  00000000 
d000d7fc l       .text  00000000 
d000d802 l       .text  00000000 
d000d802 l       .text  00000000 
d000d802 l       .text  00000000 
d000d802 l       .text  00000000 
d000d802 l       .text  00000000 
d000d80a l       .text  00000000 
d000d810 l       .text  00000000 
d000d810 l       .text  00000000 
d000d810 l       .text  00000000 
d000d810 l       .text  00000000 
d000d810 l       .text  00000000 
d000d810 l       .text  00000000 
d000d812 l       .text  00000000 
d000d812 l       .text  00000000 
d000d812 l       .text  00000000 
d000d814 l       .text  00000000 
d000d818 l       .text  00000000 
d000d82a l       .text  00000000 
d000d832 l       .text  00000000 
d000d832 l       .text  00000000 
d000d840 l       .text  00000000 
d000d840 l       .text  00000000 
d000d842 l       .text  00000000 
d000d842 l       .text  00000000 
d000d846 l       .text  00000000 
d000d846 l       .text  00000000 
d000d84a l       .text  00000000 
d000d85a l       .text  00000000 
d000d85a l       .text  00000000 
d000d85c l       .text  00000000 
d000d85c l       .text  00000000 
d000d85e l       .text  00000000 
d000d85e l       .text  00000000 
d000d862 l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86e l       .text  00000000 
d000d880 l       .text  00000000 
d000d888 l       .text  00000000 
d000d888 l       .text  00000000 
d000d896 l       .text  00000000 
d000d896 l       .text  00000000 
d000d898 l       .text  00000000 
d000d898 l       .text  00000000 
d000d89c l       .text  00000000 
d000d89c l       .text  00000000 
d000d8a2 l       .text  00000000 
d000d8a2 l       .text  00000000 
d000d8ae l       .text  00000000 
d000d8ae l       .text  00000000 
d000d8ae l       .text  00000000 
d000d8ae l       .text  00000000 
d000d8b0 l       .text  00000000 
d000d8b0 l       .text  00000000 
d000d8b4 l       .text  00000000 
d000d8b4 l       .text  00000000 
d000d8ba l       .text  00000000 
d000d8bc l       .text  00000000 
d000d8bc l       .text  00000000 
d000d8be l       .text  00000000 
d000d8be l       .text  00000000 
d000d8c0 l       .text  00000000 
d000d8c2 l       .text  00000000 
d000d8c2 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8cc l       .text  00000000 
d000d8cc l       .text  00000000 
d000d8da l       .text  00000000 
d000d8da l       .text  00000000 
d000d8dc l       .text  00000000 
d000d8dc l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e0 l       .text  00000000 
0000b40c l       .debug_loc     00000000 
0000b434 l       .debug_loc     00000000 
0000b45a l       .debug_loc     00000000 
0000b480 l       .debug_loc     00000000 
0000b4a6 l       .debug_loc     00000000 
0000b4cc l       .debug_loc     00000000 
0000b4f2 l       .debug_loc     00000000 
0000b532 l       .debug_loc     00000000 
0000b54d l       .debug_loc     00000000 
0000b573 l       .debug_loc     00000000 
0000b59a l       .debug_loc     00000000 
0000b5c1 l       .debug_loc     00000000 
0000b5fd l       .debug_loc     00000000 
0000b618 l       .debug_loc     00000000 
0000b63e l       .debug_loc     00000000 
0000b659 l       .debug_loc     00000000 
0000b674 l       .debug_loc     00000000 
0000b68f l       .debug_loc     00000000 
0000b6aa l       .debug_loc     00000000 
0000b6c5 l       .debug_loc     00000000 
0000b6eb l       .debug_loc     00000000 
0000b711 l       .debug_loc     00000000 
0000b737 l       .debug_loc     00000000 
0000b75d l       .debug_loc     00000000 
0000b784 l       .debug_loc     00000000 
0000b7c0 l       .debug_loc     00000000 
0000b7f1 l       .debug_loc     00000000 
0000b817 l       .debug_loc     00000000 
0000b832 l       .debug_loc     00000000 
0000b84d l       .debug_loc     00000000 
0000b868 l       .debug_loc     00000000 
0000b883 l       .debug_loc     00000000 
0000b8a9 l       .debug_loc     00000000 
0000b8cf l       .debug_loc     00000000 
0000b8f5 l       .debug_loc     00000000 
0000b910 l       .debug_loc     00000000 
0000b936 l       .debug_loc     00000000 
0000b973 l       .debug_loc     00000000 
0000b99a l       .debug_loc     00000000 
0000b9d7 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007910 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000ff8 l       .debug_ranges  00000000 
0000793d l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007950 l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
000079ec l       .debug_str     00000000 
00007963 l       .debug_str     00000000 
00007973 l       .debug_str     00000000 
0000798a l       .debug_str     00000000 
000079a5 l       .debug_str     00000000 
000079c0 l       .debug_str     00000000 
000079da l       .debug_str     00000000 
00007a30 l       .debug_str     00000000 
000079f8 l       .debug_str     00000000 
00007a08 l       .debug_str     00000000 
00007a1c l       .debug_str     00000000 
00007814 l       .debug_str     00000000 
00007693 l       .debug_str     00000000 
000076a7 l       .debug_str     00000000 
000076bf l       .debug_str     00000000 
000076d7 l       .debug_str     00000000 
000076ed l       .debug_str     00000000 
00007705 l       .debug_str     00000000 
00007716 l       .debug_str     00000000 
00007734 l       .debug_str     00000000 
00007752 l       .debug_str     00000000 
0000776f l       .debug_str     00000000 
0000778c l       .debug_str     00000000 
000077ac l       .debug_str     00000000 
000077c9 l       .debug_str     00000000 
000077e9 l       .debug_str     00000000 
00007803 l       .debug_str     00000000 
00007ace l       .debug_str     00000000 
00007a39 l       .debug_str     00000000 
00007a48 l       .debug_str     00000000 
00002308 l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00001b7c l       .debug_str     00000000 
00007819 l       .debug_str     00000000 
00003452 l       .debug_str     00000000 
00000f70 l       .debug_ranges  00000000 
00007adb l       .debug_str     00000000 
00007a54 l       .debug_str     00000000 
00007b00 l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
000078fc l       .debug_str     00000000 
00002ab6 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00000f90 l       .debug_ranges  00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
0000786e l       .debug_str     00000000 
00007a5a l       .debug_str     00000000 
000030d9 l       .debug_str     00000000 
00007a7c l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000078cc l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00007a85 l       .debug_str     00000000 
00007a97 l       .debug_str     00000000 
000075f7 l       .debug_str     00000000 
00007886 l       .debug_str     00000000 
00007aa7 l       .debug_str     00000000 
00007ab8 l       .debug_str     00000000 
00007ac5 l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
00007899 l       .debug_str     00000000 
0000188b l       .debug_str     00000000 
0000106f l       .debug_str     00000000 
000078a9 l       .debug_str     00000000 
000078bc l       .debug_str     00000000 
000078d9 l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00000fa8 l       .debug_ranges  00000000 
00000fc0 l       .debug_ranges  00000000 
00007ae6 l       .debug_str     00000000 
00000fe0 l       .debug_ranges  00000000 
00007af5 l       .debug_str     00000000 
00001090 l       .debug_frame   00000000 
d000d698 l       .text  00000000 
d000d6ba l       .text  00000000 
d000d730 l       .text  00000000 
d000d738 l       .text  00000000 
d000d744 l       .text  00000000 
d000d79a l       .text  00000000 
d000d802 l       .text  00000000 
d000d810 l       .text  00000000 
d000d86a l       .text  00000000 
d000d8e0 l       .text  00000000 
00000000 l    df *ABS*  00000000 rnd.c
d000d8e0 l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e2 l       .text  00000000 
d000d8e2 l       .text  00000000 
d000d8e4 l       .text  00000000 
d000d8ea l       .text  00000000 
d000d8ea l       .text  00000000 
d000d8ee l       .text  00000000 
d000d8f2 l       .text  00000000 
d000d8f6 l       .text  00000000 
d000d8f6 l       .text  00000000 
d000d8f8 l       .text  00000000 
d000d8f8 l       .text  00000000 
d000d8fa l       .text  00000000 
d000d8fe l       .text  00000000 
d000d8fe l       .text  00000000 
d000d902 l       .text  00000000 
d000d902 l       .text  00000000 
d000d904 l       .text  00000000 
d000d904 l       .text  00000000 
d000d906 l       .text  00000000 
d000d906 l       .text  00000000 
d000d90c l       .text  00000000 
d000d90c l       .text  00000000 
0000b9fe l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007b0a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000a25 l       .debug_str     00000000 
00000a00 l       .debug_str     00000000 
00000a12 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
0000106f l       .debug_str     00000000 
00002ec6 l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
00001198 l       .debug_frame   00000000 
d000d90c l       .text  00000000 
00000000 l    df *ABS*  00000000 epmp_state.c
d000d90c l       .text  00000000 
d000d90c l       .text  00000000 
d000d90c l       .text  00000000 
d000d90c l       .text  00000000 
d000d910 l       .text  00000000 
d000d910 l       .text  00000000 
d000d918 l       .text  00000000 
d000d91c l       .text  00000000 
d000d920 l       .text  00000000 
d000d920 l       .text  00000000 
d000d924 l       .text  00000000 
d000d924 l       .text  00000000 
d000d928 l       .text  00000000 
d000d928 l       .text  00000000 
d000d92c l       .text  00000000 
d000d92c l       .text  00000000 
d000d92e l       .text  00000000 
d000d932 l       .text  00000000 
d000d934 l       .text  00000000 
d000d938 l       .text  00000000 
d000d93a l       .text  00000000 
d000d93c l       .text  00000000 
d000d93c l       .text  00000000 
d000d940 l       .text  00000000 
d000d940 l       .text  00000000 
d000d942 l       .text  00000000 
d000d946 l       .text  00000000 
d000d948 l       .text  00000000 
d000d94c l       .text  00000000 
d000d94e l       .text  00000000 
d000d950 l       .text  00000000 
d000d950 l       .text  00000000 
d000d954 l       .text  00000000 
d000d954 l       .text  00000000 
d000d956 l       .text  00000000 
d000d95a l       .text  00000000 
d000d95c l       .text  00000000 
d000d960 l       .text  00000000 
d000d962 l       .text  00000000 
d000d964 l       .text  00000000 
d000d964 l       .text  00000000 
d000d968 l       .text  00000000 
d000d968 l       .text  00000000 
d000d96a l       .text  00000000 
d000d96e l       .text  00000000 
d000d970 l       .text  00000000 
d000d974 l       .text  00000000 
d000d976 l       .text  00000000 
d000d978 l       .text  00000000 
d000d978 l       .text  00000000 
d000d97c l       .text  00000000 
d000d97c l       .text  00000000 
d000d97e l       .text  00000000 
d000d982 l       .text  00000000 
d000d984 l       .text  00000000 
d000d988 l       .text  00000000 
d000d98a l       .text  00000000 
d000d98c l       .text  00000000 
d000d98c l       .text  00000000 
d000d990 l       .text  00000000 
d000d990 l       .text  00000000 
d000d992 l       .text  00000000 
d000d996 l       .text  00000000 
d000d998 l       .text  00000000 
d000d99c l       .text  00000000 
d000d99e l       .text  00000000 
d000d9a0 l       .text  00000000 
d000d9a0 l       .text  00000000 
d000d9a4 l       .text  00000000 
d000d9a4 l       .text  00000000 
d000d9a6 l       .text  00000000 
d000d9aa l       .text  00000000 
d000d9ac l       .text  00000000 
d000d9b0 l       .text  00000000 
d000d9b2 l       .text  00000000 
d000d9b4 l       .text  00000000 
d000d9b4 l       .text  00000000 
d000d9b8 l       .text  00000000 
d000d9b8 l       .text  00000000 
d000d9ba l       .text  00000000 
d000d9be l       .text  00000000 
d000d9c0 l       .text  00000000 
d000d9c4 l       .text  00000000 
d000d9c6 l       .text  00000000 
d000d9c8 l       .text  00000000 
d000d9c8 l       .text  00000000 
d000d9cc l       .text  00000000 
d000d9cc l       .text  00000000 
d000d9ce l       .text  00000000 
d000d9d2 l       .text  00000000 
d000d9d4 l       .text  00000000 
d000d9d8 l       .text  00000000 
d000d9da l       .text  00000000 
d000d9dc l       .text  00000000 
d000d9dc l       .text  00000000 
d000d9e0 l       .text  00000000 
d000d9e0 l       .text  00000000 
d000d9e2 l       .text  00000000 
d000d9e6 l       .text  00000000 
d000d9e8 l       .text  00000000 
d000d9ec l       .text  00000000 
d000d9ee l       .text  00000000 
d000d9f0 l       .text  00000000 
d000d9f0 l       .text  00000000 
d000d9f4 l       .text  00000000 
d000d9f4 l       .text  00000000 
d000d9f6 l       .text  00000000 
d000d9fa l       .text  00000000 
d000d9fc l       .text  00000000 
d000da00 l       .text  00000000 
d000da02 l       .text  00000000 
d000da04 l       .text  00000000 
d000da04 l       .text  00000000 
d000da08 l       .text  00000000 
d000da08 l       .text  00000000 
d000da0a l       .text  00000000 
d000da0e l       .text  00000000 
d000da10 l       .text  00000000 
d000da14 l       .text  00000000 
d000da16 l       .text  00000000 
d000da18 l       .text  00000000 
d000da18 l       .text  00000000 
d000da1c l       .text  00000000 
d000da1c l       .text  00000000 
d000da1e l       .text  00000000 
d000da22 l       .text  00000000 
d000da24 l       .text  00000000 
d000da28 l       .text  00000000 
d000da2a l       .text  00000000 
d000da2c l       .text  00000000 
d000da2c l       .text  00000000 
d000da30 l       .text  00000000 
d000da30 l       .text  00000000 
d000da32 l       .text  00000000 
d000da36 l       .text  00000000 
d000da38 l       .text  00000000 
d000da3c l       .text  00000000 
d000da3e l       .text  00000000 
d000da40 l       .text  00000000 
d000da40 l       .text  00000000 
d000da44 l       .text  00000000 
d000da44 l       .text  00000000 
d000da46 l       .text  00000000 
d000da4a l       .text  00000000 
d000da4c l       .text  00000000 
d000da50 l       .text  00000000 
d000da52 l       .text  00000000 
d000da54 l       .text  00000000 
d000da54 l       .text  00000000 
d000da58 l       .text  00000000 
d000da58 l       .text  00000000 
d000da5a l       .text  00000000 
d000da5e l       .text  00000000 
d000da60 l       .text  00000000 
d000da64 l       .text  00000000 
d000da66 l       .text  00000000 
d000da68 l       .text  00000000 
d000da68 l       .text  00000000 
d000da6c l       .text  00000000 
d000da6c l       .text  00000000 
d000da6e l       .text  00000000 
d000da72 l       .text  00000000 
d000da74 l       .text  00000000 
d000da78 l       .text  00000000 
d000da7a l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da80 l       .text  00000000 
d000da80 l       .text  00000000 
d000da82 l       .text  00000000 
d000da86 l       .text  00000000 
d000da88 l       .text  00000000 
d000da8c l       .text  00000000 
d000da8e l       .text  00000000 
d000da90 l       .text  00000000 
d000da90 l       .text  00000000 
d000da94 l       .text  00000000 
d000da94 l       .text  00000000 
d000da96 l       .text  00000000 
d000da9a l       .text  00000000 
d000da9c l       .text  00000000 
d000daa0 l       .text  00000000 
d000daa2 l       .text  00000000 
d000daa4 l       .text  00000000 
d000daa4 l       .text  00000000 
d000daa8 l       .text  00000000 
d000daa8 l       .text  00000000 
d000daaa l       .text  00000000 
d000daae l       .text  00000000 
d000dab0 l       .text  00000000 
d000dab6 l       .text  00000000 
d000dab6 l       .text  00000000 
d000dab8 l       .text  00000000 
d000dab8 l       .text  00000000 
d000dabc l       .text  00000000 
d000dabc l       .text  00000000 
d000dabe l       .text  00000000 
d000dac0 l       .text  00000000 
d000dac2 l       .text  00000000 
d000dac6 l       .text  00000000 
d000dac8 l       .text  00000000 
d000dac8 l       .text  00000000 
d000daca l       .text  00000000 
d000daca l       .text  00000000 
d000dacc l       .text  00000000 
d000dacc l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad0 l       .text  00000000 
d000dadc l       .text  00000000 
d000dae0 l       .text  00000000 
d000dae0 l       .text  00000000 
d000dae4 l       .text  00000000 
d000daf0 l       .text  00000000 
d000daf2 l       .text  00000000 
d000daf2 l       .text  00000000 
d000daf6 l       .text  00000000 
d000daf8 l       .text  00000000 
d000dafa l       .text  00000000 
d000dafa l       .text  00000000 
0000ba11 l       .debug_loc     00000000 
0000ba37 l       .debug_loc     00000000 
0000ba5d l       .debug_loc     00000000 
0000ba89 l       .debug_loc     00000000 
0000baa9 l       .debug_loc     00000000 
0000bac8 l       .debug_loc     00000000 
0000bae8 l       .debug_loc     00000000 
0000bb0e l       .debug_loc     00000000 
0000bb29 l       .debug_loc     00000000 
0000bb44 l       .debug_loc     00000000 
0000bb61 l       .debug_loc     00000000 
0000bb81 l       .debug_loc     00000000 
0000bba0 l       .debug_loc     00000000 
0000bbc0 l       .debug_loc     00000000 
0000bbe6 l       .debug_loc     00000000 
0000bc01 l       .debug_loc     00000000 
0000bc1c l       .debug_loc     00000000 
0000bc49 l       .debug_loc     00000000 
0000bc64 l       .debug_loc     00000000 
0000bc84 l       .debug_loc     00000000 
0000bca3 l       .debug_loc     00000000 
0000bcc3 l       .debug_loc     00000000 
0000bce9 l       .debug_loc     00000000 
0000bd27 l       .debug_loc     00000000 
0000bd42 l       .debug_loc     00000000 
0000bd5d l       .debug_loc     00000000 
0000bd78 l       .debug_loc     00000000 
0000bd93 l       .debug_loc     00000000 
0000bdae l       .debug_loc     00000000 
0000bdc9 l       .debug_loc     00000000 
0000bde4 l       .debug_loc     00000000 
0000bdff l       .debug_loc     00000000 
0000be1a l       .debug_loc     00000000 
0000be35 l       .debug_loc     00000000 
0000be50 l       .debug_loc     00000000 
0000be6b l       .debug_loc     00000000 
0000be86 l       .debug_loc     00000000 
0000bea1 l       .debug_loc     00000000 
0000bebc l       .debug_loc     00000000 
0000bed7 l       .debug_loc     00000000 
0000bef2 l       .debug_loc     00000000 
0000bf0d l       .debug_loc     00000000 
0000bf28 l       .debug_loc     00000000 
0000bf43 l       .debug_loc     00000000 
0000bf5e l       .debug_loc     00000000 
0000bf84 l       .debug_loc     00000000 
0000bfbb l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007b36 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001068 l       .debug_ranges  00000000 
0000675b l       .debug_str     00000000 
0000677d l       .debug_str     00000000 
00006766 l       .debug_str     00000000 
0000676d l       .debug_str     00000000 
00006775 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000009f6 l       .debug_str     00000000 
000005e2 l       .debug_str     00000000 
000005eb l       .debug_str     00000000 
000005f9 l       .debug_str     00000000 
0000061a l       .debug_str     00000000 
00000630 l       .debug_str     00000000 
0000064c l       .debug_str     00000000 
00000661 l       .debug_str     00000000 
0000067d l       .debug_str     00000000 
00000699 l       .debug_str     00000000 
000006ad l       .debug_str     00000000 
000006c1 l       .debug_str     00000000 
000006d6 l       .debug_str     00000000 
000006ef l       .debug_str     00000000 
00000703 l       .debug_str     00000000 
00000717 l       .debug_str     00000000 
00000727 l       .debug_str     00000000 
0000073a l       .debug_str     00000000 
00000754 l       .debug_str     00000000 
0000076b l       .debug_str     00000000 
00000785 l       .debug_str     00000000 
000007a1 l       .debug_str     00000000 
000007bd l       .debug_str     00000000 
000007d4 l       .debug_str     00000000 
000007ea l       .debug_str     00000000 
00000802 l       .debug_str     00000000 
0000081a l       .debug_str     00000000 
00000833 l       .debug_str     00000000 
0000084c l       .debug_str     00000000 
00000865 l       .debug_str     00000000 
0000087e l       .debug_str     00000000 
0000089d l       .debug_str     00000000 
000008bb l       .debug_str     00000000 
000008d5 l       .debug_str     00000000 
000008ee l       .debug_str     00000000 
0000090a l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
00000944 l       .debug_str     00000000 
00000960 l       .debug_str     00000000 
0000097c l       .debug_str     00000000 
00000993 l       .debug_str     00000000 
000009ac l       .debug_str     00000000 
000009c2 l       .debug_str     00000000 
000009e1 l       .debug_str     00000000 
000015f6 l       .debug_str     00000000 
00007b61 l       .debug_str     00000000 
00007b6e l       .debug_str     00000000 
00002eb2 l       .debug_str     00000000 
00007b75 l       .debug_str     00000000 
00004b76 l       .debug_str     00000000 
00000fd3 l       .debug_str     00000000 
00007029 l       .debug_str     00000000 
00006f93 l       .debug_str     00000000 
00006fa5 l       .debug_str     00000000 
00006fbd l       .debug_str     00000000 
00006fd5 l       .debug_str     00000000 
00006fee l       .debug_str     00000000 
00007009 l       .debug_str     00000000 
00007069 l       .debug_str     00000000 
00007033 l       .debug_str     00000000 
00007040 l       .debug_str     00000000 
0000704d l       .debug_str     00000000 
0000705a l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000ff0 l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
00007073 l       .debug_str     00000000 
00001e45 l       .debug_str     00000000 
00000292 l       .debug_str     00000000 
0000702e l       .debug_str     00000000 
000070b3 l       .debug_str     00000000 
00007098 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00000fbf l       .debug_str     00000000 
0000708c l       .debug_str     00000000 
0000150e l       .debug_str     00000000 
00001502 l       .debug_str     00000000 
000074dd l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
000011c4 l       .debug_frame   00000000 
d000dafa l       .text  00000000 
00000000 l    df *ABS*  00000000 hmac.c
d000dafa l       .text  00000000 
d000dafa l       .text  00000000 
d000dafa l       .text  00000000 
d000dafe l       .text  00000000 
d000dafe l       .text  00000000 
d000db02 l       .text  00000000 
d000db02 l       .text  00000000 
d000db08 l       .text  00000000 
d000db08 l       .text  00000000 
d000db0c l       .text  00000000 
d000db0c l       .text  00000000 
d000db10 l       .text  00000000 
d000db10 l       .text  00000000 
d000db12 l       .text  00000000 
d000db12 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db14 l       .text  00000000 
d000db18 l       .text  00000000 
d000db22 l       .text  00000000 
d000db2c l       .text  00000000 
d000db2c l       .text  00000000 
d000db30 l       .text  00000000 
d000db34 l       .text  00000000 
d000db34 l       .text  00000000 
d000db38 l       .text  00000000 
d000db38 l       .text  00000000 
d000db3a l       .text  00000000 
d000db3e l       .text  00000000 
d000db48 l       .text  00000000 
d000db50 l       .text  00000000 
d000db50 l       .text  00000000 
d000db52 l       .text  00000000 
d000db54 l       .text  00000000 
d000db58 l       .text  00000000 
d000db5e l       .text  00000000 
d000db5e l       .text  00000000 
d000db60 l       .text  00000000 
d000db60 l       .text  00000000 
d000db64 l       .text  00000000 
d000db64 l       .text  00000000 
d000db66 l       .text  00000000 
d000db66 l       .text  00000000 
d000db68 l       .text  00000000 
d000db68 l       .text  00000000 
d000db6c l       .text  00000000 
d000db6c l       .text  00000000 
d000db72 l       .text  00000000 
d000db76 l       .text  00000000 
d000db78 l       .text  00000000 
d000db7a l       .text  00000000 
d000db7a l       .text  00000000 
d000db80 l       .text  00000000 
d000db80 l       .text  00000000 
d000db82 l       .text  00000000 
d000db82 l       .text  00000000 
d000db82 l       .text  00000000 
d000db82 l       .text  00000000 
d000db82 l       .text  00000000 
d000db8c l       .text  00000000 
d000db8c l       .text  00000000 
d000db8e l       .text  00000000 
d000db8e l       .text  00000000 
d000db90 l       .text  00000000 
d000db90 l       .text  00000000 
d000db94 l       .text  00000000 
d000db94 l       .text  00000000 
d000db96 l       .text  00000000 
d000db9c l       .text  00000000 
d000db9c l       .text  00000000 
d000dba2 l       .text  00000000 
d000dba2 l       .text  00000000 
d000dba6 l       .text  00000000 
d000dba6 l       .text  00000000 
d000dba8 l       .text  00000000 
d000dba8 l       .text  00000000 
d000dbae l       .text  00000000 
d000dbae l       .text  00000000 
d000dbb0 l       .text  00000000 
d000dbb2 l       .text  00000000 
d000dbb6 l       .text  00000000 
d000dbb6 l       .text  00000000 
d000dbb8 l       .text  00000000 
d000dbb8 l       .text  00000000 
0000bfe1 l       .debug_loc     00000000 
0000c009 l       .debug_loc     00000000 
0000c02f l       .debug_loc     00000000 
0000c06b l       .debug_loc     00000000 
0000c086 l       .debug_loc     00000000 
0000c0ad l       .debug_loc     00000000 
0000c0c8 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007b7a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000010a8 l       .debug_ranges  00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000281b l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00001477 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
00007ba7 l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00001488 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00007bb7 l       .debug_str     00000000 
00001090 l       .debug_ranges  00000000 
00007bc1 l       .debug_str     00000000 
00002295 l       .debug_str     00000000 
0000231d l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00006236 l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00001585 l       .debug_str     00000000 
000014bb l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001218 l       .debug_frame   00000000 
d000db14 l       .text  00000000 
d000db82 l       .text  00000000 
d000dbb8 l       .text  00000000 
00000000 l    df *ABS*  00000000 lifecycle.c
d000dbb8 l       .text  00000000 
d000dbb8 l       .text  00000000 
d000dbb8 l       .text  00000000 
d000dbba l       .text  00000000 
d000dbbc l       .text  00000000 
d000dbc4 l       .text  00000000 
d000dbc4 l       .text  00000000 
d000dbc6 l       .text  00000000 
d000dbc6 l       .text  00000000 
d000dbcc l       .text  00000000 
d000dbcc l       .text  00000000 
d000dbce l       .text  00000000 
d000dbce l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd0 l       .text  00000000 
d000dbd8 l       .text  00000000 
d000dbd8 l       .text  00000000 
d000dbdc l       .text  00000000 
d000dbdc l       .text  00000000 
d000dbe4 l       .text  00000000 
d000dbe8 l       .text  00000000 
d000dbf0 l       .text  00000000 
d000dbf4 l       .text  00000000 
d000dbfc l       .text  00000000 
d000dc00 l       .text  00000000 
d000dc0e l       .text  00000000 
d000dc16 l       .text  00000000 
d000dc1a l       .text  00000000 
d000dc22 l       .text  00000000 
d000dc26 l       .text  00000000 
d000dc2e l       .text  00000000 
d000dc32 l       .text  00000000 
d000dc40 l       .text  00000000 
d000dc44 l       .text  00000000 
d000dc48 l       .text  00000000 
d000dc50 l       .text  00000000 
d000dc54 l       .text  00000000 
d000dc62 l       .text  00000000 
d000dc66 l       .text  00000000 
d000dc6a l       .text  00000000 
d000dc72 l       .text  00000000 
d000dc76 l       .text  00000000 
d000dc86 l       .text  00000000 
d000dc86 l       .text  00000000 
d000dc8c l       .text  00000000 
d000dc8c l       .text  00000000 
d000dc9a l       .text  00000000 
d000dca8 l       .text  00000000 
d000dcb0 l       .text  00000000 
d000dcbe l       .text  00000000 
d000dcc6 l       .text  00000000 
d000dcd6 l       .text  00000000 
d000dcd6 l       .text  00000000 
d000dcdc l       .text  00000000 
d000dce4 l       .text  00000000 
d000dce8 l       .text  00000000 
d000dcf6 l       .text  00000000 
d000dcfe l       .text  00000000 
d000dd02 l       .text  00000000 
d000dd12 l       .text  00000000 
d000dd12 l       .text  00000000 
d000dd18 l       .text  00000000 
d000dd20 l       .text  00000000 
d000dd24 l       .text  00000000 
d000dd30 l       .text  00000000 
d000dd34 l       .text  00000000 
d000dd38 l       .text  00000000 
d000dd3e l       .text  00000000 
d000dd3e l       .text  00000000 
d000dd46 l       .text  00000000 
d000dd4a l       .text  00000000 
d000dd5a l       .text  00000000 
d000dd5a l       .text  00000000 
d000dd60 l       .text  00000000 
d000dd60 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd6a l       .text  00000000 
d000dd74 l       .text  00000000 
d000dd76 l       .text  00000000 
d000dd84 l       .text  00000000 
d000dd84 l       .text  00000000 
d000dd8a l       .text  00000000 
d000dd8a l       .text  00000000 
d000dd8e l       .text  00000000 
d000dd90 l       .text  00000000 
d000dd90 l       .text  00000000 
d000dd92 l       .text  00000000 
d000dd92 l       .text  00000000 
d000dd96 l       .text  00000000 
d000dd96 l       .text  00000000 
d000dd9a l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda4 l       .text  00000000 
d000dda6 l       .text  00000000 
d000ddaa l       .text  00000000 
d000ddac l       .text  00000000 
d000ddb4 l       .text  00000000 
d000ddb6 l       .text  00000000 
d000ddb6 l       .text  00000000 
d000ddba l       .text  00000000 
d000ddba l       .text  00000000 
d000ddc2 l       .text  00000000 
d000ddc4 l       .text  00000000 
d000ddca l       .text  00000000 
d000ddca l       .text  00000000 
0000c0fb l       .debug_loc     00000000 
0000c122 l       .debug_loc     00000000 
0000c148 l       .debug_loc     00000000 
0000c19a l       .debug_loc     00000000 
0000c1c1 l       .debug_loc     00000000 
0000c1dc l       .debug_loc     00000000 
0000c202 l       .debug_loc     00000000 
0000c235 l       .debug_loc     00000000 
0000c25b l       .debug_loc     00000000 
0000c280 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007bce l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000010c8 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002675 l       .debug_str     00000000 
000071df l       .debug_str     00000000 
00007c00 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000028cb l       .debug_str     00000000 
00000f00 l       .debug_str     00000000 
00003654 l       .debug_str     00000000 
00001018 l       .debug_str     00000000 
00001007 l       .debug_str     00000000 
00000feb l       .debug_str     00000000 
00001e56 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
00001085 l       .debug_str     00000000 
00002e89 l       .debug_str     00000000 
0000326f l       .debug_str     00000000 
0000736e l       .debug_str     00000000 
0000128c l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
0000287b l       .debug_str     00000000 
000028c4 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00001296 l       .debug_str     00000000 
00001282 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000028ea l       .debug_str     00000000 
000028ba l       .debug_str     00000000 
00002890 l       .debug_str     00000000 
000028b1 l       .debug_str     00000000 
000028a8 l       .debug_str     00000000 
00002899 l       .debug_str     00000000 
0000125c l       .debug_frame   00000000 
d000dd68 l       .text  00000000 
d000dda4 l       .text  00000000 
d000ddca l       .text  00000000 
00000000 l    df *ABS*  00000000 otp.c
d000ddca l       .text  00000000 
d000ddca l       .text  00000000 
d000ddca l       .text  00000000 
d000ddce l       .text  00000000 
d000ddd0 l       .text  00000000 
d000ddd0 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd2 l       .text  00000000 
0000c29b l       .debug_loc     00000000 
0000c2b6 l       .debug_loc     00000000 
0000c2d1 l       .debug_loc     00000000 
0000c2ef l       .debug_loc     00000000 
0000c32b l       .debug_loc     00000000 
0000c346 l       .debug_loc     00000000 
0000c36c l       .debug_loc     00000000 
0000c392 l       .debug_loc     00000000 
0000c3b0 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007c18 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000010f0 l       .debug_ranges  00000000 
00002675 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000107a l       .debug_str     00000000 
0000663c l       .debug_str     00000000 
0000326f l       .debug_str     00000000 
00007c44 l       .debug_str     00000000 
00002842 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00007c4f l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000078fc l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00007c58 l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
000012d8 l       .debug_frame   00000000 
d000ddd2 l       .text  00000000 
00000000 l    df *ABS*  00000000 sec_mmio.c
d000ddd2 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd4 l       .text  00000000 
d000ddd4 l       .text  00000000 
d000ddd6 l       .text  00000000 
d000ddd6 l       .text  00000000 
d000ddd8 l       .text  00000000 
d000ddd8 l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000dde2 l       .text  00000000 
d000dde4 l       .text  00000000 
d000dde4 l       .text  00000000 
d000dde4 l       .text  00000000 
d000dde4 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde8 l       .text  00000000 
d000dde8 l       .text  00000000 
d000dde8 l       .text  00000000 
d000dde8 l       .text  00000000 
d000ddf0 l       .text  00000000 
d000ddf0 l       .text  00000000 
d000ddf8 l       .text  00000000 
d000ddfa l       .text  00000000 
d000ddfa l       .text  00000000 
d000ddfc l       .text  00000000 
d000ddfe l       .text  00000000 
d000de00 l       .text  00000000 
d000de00 l       .text  00000000 
d000de08 l       .text  00000000 
d000de0a l       .text  00000000 
d000de0a l       .text  00000000 
d000de0c l       .text  00000000 
d000de0c l       .text  00000000 
d000de0e l       .text  00000000 
d000de10 l       .text  00000000 
d000de1e l       .text  00000000 
d000de1e l       .text  00000000 
d000de2a l       .text  00000000 
d000de2c l       .text  00000000 
d000de2c l       .text  00000000 
d000de2c l       .text  00000000 
d000de2c l       .text  00000000 
d000de2c l       .text  00000000 
d000de2e l       .text  00000000 
d000de38 l       .text  00000000 
d000de3a l       .text  00000000 
d000de3a l       .text  00000000 
d000de3e l       .text  00000000 
d000de3e l       .text  00000000 
d000de46 l       .text  00000000 
d000de46 l       .text  00000000 
d000de4a l       .text  00000000 
d000de4a l       .text  00000000 
d000de4a l       .text  00000000 
d000de4a l       .text  00000000 
d000de72 l     F .text  0000006e upsert_register
d000de50 l       .text  00000000 
d000de50 l       .text  00000000 
d000de52 l       .text  00000000 
d000de52 l       .text  00000000 
d000de62 l       .text  00000000 
d000de68 l       .text  00000000 
d000de6a l       .text  00000000 
d000de6c l       .text  00000000 
d000de72 l       .text  00000000 
d000de72 l       .text  00000000 
d000de72 l       .text  00000000 
d000de72 l       .text  00000000 
d000de72 l       .text  00000000 
d000de72 l       .text  00000000 
d000de7e l       .text  00000000 
d000de7e l       .text  00000000 
d000de80 l       .text  00000000 
d000de80 l       .text  00000000 
d000de82 l       .text  00000000 
d000de82 l       .text  00000000 
d000de86 l       .text  00000000 
d000de86 l       .text  00000000 
d000de8a l       .text  00000000 
d000de8a l       .text  00000000 
d000de92 l       .text  00000000 
d000de96 l       .text  00000000 
d000de98 l       .text  00000000 
d000de98 l       .text  00000000 
d000de9a l       .text  00000000 
d000de9a l       .text  00000000 
d000dea2 l       .text  00000000 
d000dea2 l       .text  00000000 
d000dea4 l       .text  00000000 
d000dea4 l       .text  00000000 
d000dea6 l       .text  00000000 
d000dea6 l       .text  00000000 
d000deaa l       .text  00000000 
d000deaa l       .text  00000000 
d000deac l       .text  00000000 
d000deac l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb4 l       .text  00000000 
d000deb4 l       .text  00000000 
d000debe l       .text  00000000 
d000dec2 l       .text  00000000 
d000dec4 l       .text  00000000 
d000dec8 l       .text  00000000 
d000dece l       .text  00000000 
d000ded2 l       .text  00000000 
d000dede l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee0 l       .text  00000000 
d000dee2 l       .text  00000000 
d000deea l       .text  00000000 
d000deec l       .text  00000000 
d000deec l       .text  00000000 
d000def6 l       .text  00000000 
d000def6 l       .text  00000000 
d000defa l       .text  00000000 
d000defa l       .text  00000000 
d000defa l       .text  00000000 
d000defa l       .text  00000000 
d000defe l       .text  00000000 
d000df00 l       .text  00000000 
d000df00 l       .text  00000000 
d000df02 l       .text  00000000 
d000df02 l       .text  00000000 
d000df12 l       .text  00000000 
d000df12 l       .text  00000000 
d000df1a l       .text  00000000 
d000df20 l       .text  00000000 
d000df2c l       .text  00000000 
d000df2c l       .text  00000000 
d000df2c l       .text  00000000 
d000df2c l       .text  00000000 
d000df2c l       .text  00000000 
d000df2e l       .text  00000000 
d000df36 l       .text  00000000 
d000df38 l       .text  00000000 
d000df38 l       .text  00000000 
d000df3a l       .text  00000000 
d000df3a l       .text  00000000 
d000df44 l       .text  00000000 
d000df44 l       .text  00000000 
d000df48 l       .text  00000000 
d000df48 l       .text  00000000 
d000df48 l       .text  00000000 
d000df48 l       .text  00000000 
d000df4c l       .text  00000000 
d000df4e l       .text  00000000 
d000df4e l       .text  00000000 
d000df50 l       .text  00000000 
d000df50 l       .text  00000000 
d000df60 l       .text  00000000 
d000df60 l       .text  00000000 
d000df68 l       .text  00000000 
d000df6e l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df86 l       .text  00000000 
d000df86 l       .text  00000000 
d000df88 l       .text  00000000 
d000df88 l       .text  00000000 
d000df8a l       .text  00000000 
d000df8a l       .text  00000000 
d000df8e l       .text  00000000 
d000df8e l       .text  00000000 
d000df90 l       .text  00000000 
d000df94 l       .text  00000000 
d000df94 l       .text  00000000 
d000df98 l       .text  00000000 
d000df9c l       .text  00000000 
d000df9c l       .text  00000000 
d000dfaa l       .text  00000000 
d000dfaa l       .text  00000000 
d000dfac l       .text  00000000 
d000dfac l       .text  00000000 
d000dfb4 l       .text  00000000 
d000dfb4 l       .text  00000000 
d000dfb6 l       .text  00000000 
d000dfc2 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfc8 l       .text  00000000 
d000dfca l       .text  00000000 
d000dfca l       .text  00000000 
d000dfcc l       .text  00000000 
d000dfcc l       .text  00000000 
d000dfce l       .text  00000000 
d000dfce l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfde l       .text  00000000 
d000dfe8 l       .text  00000000 
d000dfea l       .text  00000000 
d000dfea l       .text  00000000 
d000dfea l       .text  00000000 
d000dfea l       .text  00000000 
d000dfea l       .text  00000000 
d000dff2 l       .text  00000000 
d000dff2 l       .text  00000000 
d000dff4 l       .text  00000000 
d000dff4 l       .text  00000000 
d000dffc l       .text  00000000 
d000dffe l       .text  00000000 
d000e000 l       .text  00000000 
d000e002 l       .text  00000000 
d000e002 l       .text  00000000 
d000e004 l       .text  00000000 
d000e010 l       .text  00000000 
d000e012 l       .text  00000000 
d000e012 l       .text  00000000 
d000e014 l       .text  00000000 
d000e016 l       .text  00000000 
d000e016 l       .text  00000000 
d000e016 l       .text  00000000 
d000e016 l       .text  00000000 
d000e02e l       .text  00000000 
d000e034 l       .text  00000000 
d000e036 l       .text  00000000 
d000e036 l       .text  00000000 
0000c3cc l       .debug_loc     00000000 
0000c3f3 l       .debug_loc     00000000 
0000c41a l       .debug_loc     00000000 
0000c441 l       .debug_loc     00000000 
0000c47c l       .debug_loc     00000000 
0000c4ab l       .debug_loc     00000000 
0000c4c6 l       .debug_loc     00000000 
0000c4ec l       .debug_loc     00000000 
0000c507 l       .debug_loc     00000000 
0000c522 l       .debug_loc     00000000 
0000c53d l       .debug_loc     00000000 
0000c57a l       .debug_loc     00000000 
0000c5a1 l       .debug_loc     00000000 
0000c5bc l       .debug_loc     00000000 
0000c5e2 l       .debug_loc     00000000 
0000c608 l       .debug_loc     00000000 
0000c62e l       .debug_loc     00000000 
0000c649 l       .debug_loc     00000000 
0000c664 l       .debug_loc     00000000 
0000c68a l       .debug_loc     00000000 
0000c6a5 l       .debug_loc     00000000 
0000c6c0 l       .debug_loc     00000000 
0000c6db l       .debug_loc     00000000 
0000c718 l       .debug_loc     00000000 
0000c73f l       .debug_loc     00000000 
0000c75a l       .debug_loc     00000000 
0000c775 l       .debug_loc     00000000 
0000c790 l       .debug_loc     00000000 
0000c7ab l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007c74 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000011d8 l       .debug_ranges  00000000 
000067c8 l       .debug_str     00000000 
000067fb l       .debug_str     00000000 
000067d5 l       .debug_str     00000000 
000067e9 l       .debug_str     00000000 
000067e0 l       .debug_str     00000000 
00007d3a l       .debug_str     00000000 
000011a2 l       .debug_str     00000000 
000067f5 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00007ca2 l       .debug_str     00000000 
00007cb2 l       .debug_str     00000000 
00007cc2 l       .debug_str     00000000 
00001193 l       .debug_str     00000000 
00007a54 l       .debug_str     00000000 
00007d1b l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00007d1f l       .debug_str     00000000 
000011a8 l       .debug_ranges  00000000 
000011c0 l       .debug_ranges  00000000 
00007d26 l       .debug_str     00000000 
00007cd1 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000102b l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
0000104b l       .debug_str     00000000 
00001659 l       .debug_str     00000000 
00001118 l       .debug_ranges  00000000 
00001130 l       .debug_ranges  00000000 
00001148 l       .debug_ranges  00000000 
00001160 l       .debug_ranges  00000000 
00007ce5 l       .debug_str     00000000 
00001178 l       .debug_ranges  00000000 
00002295 l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
00000fac l       .debug_str     00000000 
0000326f l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
00007d0e l       .debug_str     00000000 
00007cfe l       .debug_str     00000000 
00001190 l       .debug_ranges  00000000 
0000281b l       .debug_str     00000000 
0000327f l       .debug_str     00000000 
0000329a l       .debug_str     00000000 
000011a9 l       .debug_str     00000000 
00007d31 l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00001344 l       .debug_frame   00000000 
d000de2c l       .text  00000000 
d000de72 l       .text  00000000 
d000dee0 l       .text  00000000 
d000df2c l       .text  00000000 
d000df7a l       .text  00000000 
d000dfea l       .text  00000000 
d000e036 l       .text  00000000 
00000000 l    df *ABS*  00000000 memory.c
d000e036 l       .text  00000000 
d000e036 l       .text  00000000 
d000e036 l       .text  00000000 
d000e036 l       .text  00000000 
d000e03e l       .text  00000000 
d000e042 l       .text  00000000 
d000e042 l       .text  00000000 
d000e046 l       .text  00000000 
d000e046 l       .text  00000000 
d000e04a l       .text  00000000 
d000e04a l       .text  00000000 
d000e056 l       .text  00000000 
d000e058 l       .text  00000000 
d000e058 l       .text  00000000 
d000e05e l       .text  00000000 
d000e05e l       .text  00000000 
d000e062 l       .text  00000000 
d000e064 l       .text  00000000 
d000e068 l       .text  00000000 
d000e068 l       .text  00000000 
d000e06a l       .text  00000000 
d000e06a l       .text  00000000 
d000e06c l       .text  00000000 
d000e06c l       .text  00000000 
d000e074 l       .text  00000000 
d000e078 l       .text  00000000 
d000e07a l       .text  00000000 
d000e07e l       .text  00000000 
d000e082 l       .text  00000000 
d000e082 l       .text  00000000 
d000e086 l       .text  00000000 
d000e086 l       .text  00000000 
d000e08a l       .text  00000000 
d000e08c l       .text  00000000 
d000e08c l       .text  00000000 
d000e090 l       .text  00000000 
d000e090 l       .text  00000000 
d000e092 l       .text  00000000 
d000e092 l       .text  00000000 
d000e094 l       .text  00000000 
d000e094 l       .text  00000000 
d000e098 l       .text  00000000 
d000e098 l       .text  00000000 
d000e09c l       .text  00000000 
d000e09e l       .text  00000000 
d000e0a4 l       .text  00000000 
d000e0a4 l       .text  00000000 
d000e0a8 l       .text  00000000 
d000e0ac l       .text  00000000 
d000e0b4 l       .text  00000000 
d000e0b4 l       .text  00000000 
d000e0b6 l       .text  00000000 
d000e0b6 l       .text  00000000 
d000e0b8 l       .text  00000000 
d000e0b8 l       .text  00000000 
d000e0be l       .text  00000000 
d000e0be l       .text  00000000 
d000e0be l       .text  00000000 
d000e0be l       .text  00000000 
d000e0be l       .text  00000000 
d000e0c2 l       .text  00000000 
d000e0c2 l       .text  00000000 
d000e0c6 l       .text  00000000 
d000e0c6 l       .text  00000000 
d000e0ce l       .text  00000000 
d000e0ce l       .text  00000000 
d000e0d2 l       .text  00000000 
d000e0d6 l       .text  00000000 
d000e0d6 l       .text  00000000 
d000e0d8 l       .text  00000000 
d000e0d8 l       .text  00000000 
d000e0dc l       .text  00000000 
d000e0dc l       .text  00000000 
d000e0e0 l       .text  00000000 
d000e0e0 l       .text  00000000 
d000e0e2 l       .text  00000000 
d000e0e4 l       .text  00000000 
d000e0e6 l       .text  00000000 
d000e0e6 l       .text  00000000 
d000e0ea l       .text  00000000 
d000e0ee l       .text  00000000 
d000e0fe l       .text  00000000 
d000e0fe l       .text  00000000 
d000e102 l       .text  00000000 
d000e102 l       .text  00000000 
d000e104 l       .text  00000000 
d000e104 l       .text  00000000 
d000e106 l       .text  00000000 
d000e106 l       .text  00000000 
d000e10a l       .text  00000000 
d000e10a l       .text  00000000 
d000e110 l       .text  00000000 
d000e114 l       .text  00000000 
d000e114 l       .text  00000000 
d000e118 l       .text  00000000 
d000e11c l       .text  00000000 
d000e11e l       .text  00000000 
d000e120 l       .text  00000000 
d000e120 l       .text  00000000 
d000e120 l       .text  00000000 
d000e120 l       .text  00000000 
d000e120 l       .text  00000000 
d000e124 l       .text  00000000 
d000e124 l       .text  00000000 
d000e128 l       .text  00000000 
d000e128 l       .text  00000000 
d000e136 l       .text  00000000 
d000e13a l       .text  00000000 
d000e13a l       .text  00000000 
d000e146 l       .text  00000000 
d000e146 l       .text  00000000 
d000e14a l       .text  00000000 
d000e14c l       .text  00000000 
d000e150 l       .text  00000000 
d000e150 l       .text  00000000 
d000e152 l       .text  00000000 
d000e152 l       .text  00000000 
d000e156 l       .text  00000000 
d000e156 l       .text  00000000 
d000e158 l       .text  00000000 
d000e160 l       .text  00000000 
d000e160 l       .text  00000000 
d000e164 l       .text  00000000 
d000e164 l       .text  00000000 
d000e16c l       .text  00000000 
d000e174 l       .text  00000000 
d000e178 l       .text  00000000 
d000e17a l       .text  00000000 
d000e17a l       .text  00000000 
d000e180 l       .text  00000000 
d000e180 l       .text  00000000 
d000e182 l       .text  00000000 
d000e184 l       .text  00000000 
d000e184 l       .text  00000000 
d000e188 l       .text  00000000 
d000e188 l       .text  00000000 
d000e18c l       .text  00000000 
d000e18e l       .text  00000000 
d000e18e l       .text  00000000 
d000e192 l       .text  00000000 
d000e194 l       .text  00000000 
d000e194 l       .text  00000000 
d000e198 l       .text  00000000 
d000e198 l       .text  00000000 
d000e19a l       .text  00000000 
d000e19a l       .text  00000000 
d000e19e l       .text  00000000 
d000e1a2 l       .text  00000000 
d000e1a4 l       .text  00000000 
d000e1a4 l       .text  00000000 
d000e1ac l       .text  00000000 
d000e1b4 l       .text  00000000 
d000e1b8 l       .text  00000000 
d000e1ba l       .text  00000000 
d000e1ba l       .text  00000000 
d000e1be l       .text  00000000 
d000e1be l       .text  00000000 
d000e1c0 l       .text  00000000 
d000e1c2 l       .text  00000000 
d000e1c4 l       .text  00000000 
d000e1c4 l       .text  00000000 
d000e1c8 l       .text  00000000 
d000e1ca l       .text  00000000 
d000e1ca l       .text  00000000 
d000e1ca l       .text  00000000 
d000e1ca l       .text  00000000 
d000e1ca l       .text  00000000 
d000e1ce l       .text  00000000 
d000e1ce l       .text  00000000 
d000e1d2 l       .text  00000000 
d000e1d2 l       .text  00000000 
d000e1da l       .text  00000000 
d000e1de l       .text  00000000 
d000e1e2 l       .text  00000000 
d000e1e4 l       .text  00000000 
d000e1e6 l       .text  00000000 
d000e1e6 l       .text  00000000 
d000e1ea l       .text  00000000 
d000e1ee l       .text  00000000 
d000e1ee l       .text  00000000 
d000e1f0 l       .text  00000000 
d000e1f2 l       .text  00000000 
d000e1f4 l       .text  00000000 
d000e1fa l       .text  00000000 
d000e1fa l       .text  00000000 
d000e1fc l       .text  00000000 
d000e200 l       .text  00000000 
d000e20c l       .text  00000000 
d000e21a l       .text  00000000 
d000e21a l       .text  00000000 
d000e21e l       .text  00000000 
d000e220 l       .text  00000000 
d000e220 l       .text  00000000 
d000e224 l       .text  00000000 
d000e228 l       .text  00000000 
d000e228 l       .text  00000000 
d000e22c l       .text  00000000 
d000e230 l       .text  00000000 
d000e234 l       .text  00000000 
d000e238 l       .text  00000000 
d000e23c l       .text  00000000 
d000e23c l       .text  00000000 
d000e240 l       .text  00000000 
d000e244 l       .text  00000000 
d000e246 l       .text  00000000 
d000e246 l       .text  00000000 
d000e248 l       .text  00000000 
d000e24c l       .text  00000000 
d000e24c l       .text  00000000 
d000e254 l       .text  00000000 
d000e258 l       .text  00000000 
d000e258 l       .text  00000000 
d000e25c l       .text  00000000 
d000e260 l       .text  00000000 
d000e264 l       .text  00000000 
d000e266 l       .text  00000000 
d000e26a l       .text  00000000 
d000e26a l       .text  00000000 
d000e26e l       .text  00000000 
d000e26e l       .text  00000000 
d000e272 l       .text  00000000 
d000e274 l       .text  00000000 
d000e274 l       .text  00000000 
d000e278 l       .text  00000000 
d000e278 l       .text  00000000 
d000e278 l       .text  00000000 
d000e278 l       .text  00000000 
d000e278 l       .text  00000000 
d000e27c l       .text  00000000 
d000e27c l       .text  00000000 
d000e280 l       .text  00000000 
d000e280 l       .text  00000000 
d000e288 l       .text  00000000 
d000e288 l       .text  00000000 
d000e28c l       .text  00000000 
d000e28e l       .text  00000000 
d000e292 l       .text  00000000 
d000e292 l       .text  00000000 
d000e294 l       .text  00000000 
d000e294 l       .text  00000000 
d000e298 l       .text  00000000 
d000e298 l       .text  00000000 
d000e29e l       .text  00000000 
d000e29e l       .text  00000000 
d000e2a2 l       .text  00000000 
d000e2a2 l       .text  00000000 
d000e2aa l       .text  00000000 
d000e2ae l       .text  00000000 
d000e2ae l       .text  00000000 
d000e2b0 l       .text  00000000 
d000e2b4 l       .text  00000000 
d000e2b4 l       .text  00000000 
d000e2b6 l       .text  00000000 
d000e2b8 l       .text  00000000 
d000e2b8 l       .text  00000000 
d000e2c0 l       .text  00000000 
d000e2c0 l       .text  00000000 
d000e2c4 l       .text  00000000 
d000e2c4 l       .text  00000000 
d000e2ce l       .text  00000000 
d000e2d2 l       .text  00000000 
d000e2d2 l       .text  00000000 
d000e2d6 l       .text  00000000 
d000e2d6 l       .text  00000000 
d000e2da l       .text  00000000 
d000e2de l       .text  00000000 
d000e2de l       .text  00000000 
d000e2e2 l       .text  00000000 
d000e2e6 l       .text  00000000 
d000e2e6 l       .text  00000000 
d000e2e8 l       .text  00000000 
d000e2ec l       .text  00000000 
d000e2ec l       .text  00000000 
d000e2f0 l       .text  00000000 
d000e2f4 l       .text  00000000 
d000e2f8 l       .text  00000000 
d000e2fc l       .text  00000000 
d000e300 l       .text  00000000 
d000e302 l       .text  00000000 
d000e302 l       .text  00000000 
d000e306 l       .text  00000000 
d000e306 l       .text  00000000 
d000e308 l       .text  00000000 
d000e30a l       .text  00000000 
d000e30a l       .text  00000000 
d000e312 l       .text  00000000 
d000e316 l       .text  00000000 
d000e316 l       .text  00000000 
d000e318 l       .text  00000000 
d000e31c l       .text  00000000 
d000e31c l       .text  00000000 
d000e31e l       .text  00000000 
d000e320 l       .text  00000000 
d000e320 l       .text  00000000 
d000e322 l       .text  00000000 
d000e322 l       .text  00000000 
d000e326 l       .text  00000000 
d000e326 l       .text  00000000 
d000e328 l       .text  00000000 
d000e328 l       .text  00000000 
d000e32c l       .text  00000000 
d000e32c l       .text  00000000 
d000e32e l       .text  00000000 
d000e32e l       .text  00000000 
d000e332 l       .text  00000000 
d000e332 l       .text  00000000 
d000e334 l       .text  00000000 
d000e334 l       .text  00000000 
d000e336 l       .text  00000000 
d000e336 l       .text  00000000 
d000e338 l       .text  00000000 
d000e338 l       .text  00000000 
0000c7d1 l       .debug_loc     00000000 
0000c7f7 l       .debug_loc     00000000 
0000c81d l       .debug_loc     00000000 
0000c843 l       .debug_loc     00000000 
0000c869 l       .debug_loc     00000000 
0000c888 l       .debug_loc     00000000 
0000c8a7 l       .debug_loc     00000000 
0000c8cd l       .debug_loc     00000000 
0000c8e8 l       .debug_loc     00000000 
0000c931 l       .debug_loc     00000000 
0000c957 l       .debug_loc     00000000 
0000c979 l       .debug_loc     00000000 
0000c994 l       .debug_loc     00000000 
0000c9af l       .debug_loc     00000000 
0000c9ca l       .debug_loc     00000000 
0000c9e5 l       .debug_loc     00000000 
0000ca00 l       .debug_loc     00000000 
0000ca1b l       .debug_loc     00000000 
0000ca6b l       .debug_loc     00000000 
0000ca86 l       .debug_loc     00000000 
0000caa1 l       .debug_loc     00000000 
0000cac3 l       .debug_loc     00000000 
0000cade l       .debug_loc     00000000 
0000caf9 l       .debug_loc     00000000 
0000cb14 l       .debug_loc     00000000 
0000cb2f l       .debug_loc     00000000 
0000cb4a l       .debug_loc     00000000 
0000cb69 l       .debug_loc     00000000 
0000cb88 l       .debug_loc     00000000 
0000cbae l       .debug_loc     00000000 
0000cbc9 l       .debug_loc     00000000 
0000cc12 l       .debug_loc     00000000 
0000cc38 l       .debug_loc     00000000 
0000cc53 l       .debug_loc     00000000 
0000cc6e l       .debug_loc     00000000 
0000cc89 l       .debug_loc     00000000 
0000cca4 l       .debug_loc     00000000 
0000ccbf l       .debug_loc     00000000 
0000ccda l       .debug_loc     00000000 
0000ccf5 l       .debug_loc     00000000 
0000cd14 l       .debug_loc     00000000 
0000cd33 l       .debug_loc     00000000 
0000cd4e l       .debug_loc     00000000 
0000cd95 l       .debug_loc     00000000 
0000cdb0 l       .debug_loc     00000000 
0000cdcb l       .debug_loc     00000000 
0000cdf1 l       .debug_loc     00000000 
0000ce0c l       .debug_loc     00000000 
0000ce27 l       .debug_loc     00000000 
0000ce42 l       .debug_loc     00000000 
0000ce5d l       .debug_loc     00000000 
0000ce78 l       .debug_loc     00000000 
0000ce9e l       .debug_loc     00000000 
0000ceb9 l       .debug_loc     00000000 
0000cedf l       .debug_loc     00000000 
0000cf05 l       .debug_loc     00000000 
0000cf22 l       .debug_loc     00000000 
0000cf7d l       .debug_loc     00000000 
0000cf98 l       .debug_loc     00000000 
0000cfbe l       .debug_loc     00000000 
0000cfe4 l       .debug_loc     00000000 
0000cfff l       .debug_loc     00000000 
0000d025 l       .debug_loc     00000000 
0000d082 l       .debug_loc     00000000 
0000d09d l       .debug_loc     00000000 
0000d0b8 l       .debug_loc     00000000 
0000d115 l       .debug_loc     00000000 
0000d132 l       .debug_loc     00000000 
0000d14d l       .debug_loc     00000000 
0000d194 l       .debug_loc     00000000 
0000d1af l       .debug_loc     00000000 
0000d1ca l       .debug_loc     00000000 
0000d1e5 l       .debug_loc     00000000 
0000d200 l       .debug_loc     00000000 
0000d21b l       .debug_loc     00000000 
0000d241 l       .debug_loc     00000000 
0000d25c l       .debug_loc     00000000 
0000d277 l       .debug_loc     00000000 
0000d292 l       .debug_loc     00000000 
0000d2ad l       .debug_loc     00000000 
0000d2da l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007d46 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000012a8 l       .debug_ranges  00000000 
00007d62 l       .debug_str     00000000 
00007d6c l       .debug_str     00000000 
00007d76 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007d80 l       .debug_str     00000000 
00007e27 l       .debug_str     00000000 
00007e31 l       .debug_str     00000000 
00006bfe l       .debug_str     00000000 
00007d9a l       .debug_str     00000000 
00007da5 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
00003141 l       .debug_str     00000000 
00007db1 l       .debug_str     00000000 
00007dc3 l       .debug_str     00000000 
00007dd3 l       .debug_str     00000000 
00007d88 l       .debug_str     00000000 
000078fc l       .debug_str     00000000 
00001ef8 l       .debug_str     00000000 
00007337 l       .debug_str     00000000 
000034ec l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000028e1 l       .debug_str     00000000 
00007d2b l       .debug_str     00000000 
000014cd l       .debug_str     00000000 
000028fd l       .debug_str     00000000 
00002902 l       .debug_str     00000000 
00007df6 l       .debug_str     00000000 
00007dfc l       .debug_str     00000000 
00007dc7 l       .debug_str     00000000 
00007424 l       .debug_str     00000000 
00007dd7 l       .debug_str     00000000 
00001238 l       .debug_ranges  00000000 
0000180a l       .debug_str     00000000 
00001220 l       .debug_ranges  00000000 
00005ddd l       .debug_str     00000000 
00007e01 l       .debug_str     00000000 
00007e08 l       .debug_str     00000000 
00001250 l       .debug_ranges  00000000 
00001fb3 l       .debug_str     00000000 
00007e10 l       .debug_str     00000000 
00007e14 l       .debug_str     00000000 
00007e18 l       .debug_str     00000000 
00007e1d l       .debug_str     00000000 
00007e22 l       .debug_str     00000000 
00007e2c l       .debug_str     00000000 
0000762b l       .debug_str     00000000 
000074ed l       .debug_str     00000000 
00006933 l       .debug_str     00000000 
00007e37 l       .debug_str     00000000 
00001268 l       .debug_ranges  00000000 
00007e3c l       .debug_str     00000000 
00007de3 l       .debug_str     00000000 
00006576 l       .debug_str     00000000 
0000693a l       .debug_str     00000000 
00001280 l       .debug_ranges  00000000 
000064fe l       .debug_str     00000000 
00006872 l       .debug_str     00000000 
0000658f l       .debug_str     00000000 
00006597 l       .debug_str     00000000 
00006208 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00001400 l       .debug_frame   00000000 
d000e0be l       .text  00000000 
d000e120 l       .text  00000000 
d000e1ca l       .text  00000000 
d000e278 l       .text  00000000 
d000e338 l       .text  00000000 
00000000 l    df *ABS*  00000000 device_sim_verilator.c
d000e338 l       .text  00000000 
d000e338 l       .text  00000000 
d000e338 l       .text  00000000 
d000e338 l       .text  00000000 
d000e33a l       .text  00000000 
d000e33a l       .text  00000000 
0000d2fa l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00007e44 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001308 l       .debug_ranges  00000000 
00007e6e l       .debug_str     00000000 
00007ece l       .debug_str     00000000 
00007ec2 l       .debug_str     00000000 
00007e7a l       .debug_str     00000000 
00007e87 l       .debug_str     00000000 
00007e9b l       .debug_str     00000000 
00007eac l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00007edc l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00007eec l       .debug_str     00000000 
00007f0a l       .debug_str     00000000 
00007f21 l       .debug_str     00000000 
00007f31 l       .debug_str     00000000 
00007f41 l       .debug_str     00000000 
00007f4f l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00007f5d l       .debug_str     00000000 
00007f72 l       .debug_str     00000000 
00007f89 l       .debug_str     00000000 
00000df2 l       .debug_str     00000000 
00007fa2 l       .debug_str     00000000 
00007fbe l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
000068cd l       .debug_str     00000000 
000068ec l       .debug_str     00000000 
00001179 l       .debug_str     00000000 
000014c4 l       .debug_frame   00000000 
d000e33a l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_rsa_keys_fake.c
00000000 l       .debug_str     00000000 
00007105 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00007147 l       .debug_str     00000000 
00003143 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000715c l       .debug_str     00000000 
00007172 l       .debug_str     00000000 
00002ad1 l       .debug_str     00000000 
00002abf l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
0000298c l       .debug_str     00000000 
000017e2 l       .debug_str     00000000 
00001465 l       .debug_str     00000000 
00003f4d l       .debug_str     00000000 
0000145e l       .debug_str     00000000 
0000125d l       .debug_str     00000000 
00001248 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002a11 l       .debug_str     00000000 
00002982 l       .debug_str     00000000 
00002941 l       .debug_str     00000000 
00002957 l       .debug_str     00000000 
0000296d l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/run_rsa_verify_3072_rr_modexp.s
d000f2d0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_run_rsa_verify_3072
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/vendor/veri-titan/gen/otbn_modexp.s
d000f3a4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_0
d000f3c8 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_1
d000f404 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mont_loop
d000f4d0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw2
d000f514 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw25
d000f4c4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_2
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/rsa_verify_3072_rr.s
d000f558 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_subtract_modulus_var
d000f588 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_double_mod_var
d000f5dc l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sel_aa
00000000 l    df *ABS*  00000000 static_critical_boot_measurements.c
00000000 l       .debug_str     00000000 
000066ae l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000066f5 l       .debug_str     00000000 
00006707 l       .debug_str     00000000 
00000197 l       .debug_str     00000000 
00000ddb l       .debug_str     00000000 
00000dc6 l       .debug_str     00000000 
00001690 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_epmp_state.c
00000000 l       .debug_str     00000000 
0000671b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0000675b l       .debug_str     00000000 
0000677d l       .debug_str     00000000 
00006766 l       .debug_str     00000000 
0000676d l       .debug_str     00000000 
00006775 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_sec_mmio.c
00000000 l       .debug_str     00000000 
0000678a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000067c8 l       .debug_str     00000000 
000067fb l       .debug_str     00000000 
000067d5 l       .debug_str     00000000 
000067e9 l       .debug_str     00000000 
000067e0 l       .debug_str     00000000 
00007d3a l       .debug_str     00000000 
000011a2 l       .debug_str     00000000 
000067f5 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
d000de2c g     F .text  00000046 sec_mmio_read32
d000bffc g     F .text  0000001c dif_spi_host_output_set_enabled
e00024b8 g     O .bss   00000044 rstmgr_alert_info
d000cce8 g     F .text  0000028e sigverify_rsa_verify
e0002048 g     O .bss   00000004 lc_state
00040000 g       *ABS*  00000000 _rom_ext_virtual_size
d0008100 g     F .vectors       00000080 _rom_interrupt_vector_c
d000b444 g     F .text  00000044 flash_ctrl_data_erase
d000d8e0 g     F .text  0000002c rnd_uint32
e0002848 g       .bss   00000000 __global_pointer$
000003a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_end
e0000000 g     O .static_critical       00000020 boot_measurements
d000d48e g     F .text  00000042 sigverify_mod_exp_otbn
d000e278 g     F .text  000000c0 memrchr
d000ec38 g     O .rodata        00000004 kSigverifyRsaKeysCnt
d000af54 g     F .text  00000046 flash_ctrl_data_default_cfg_set
d000d744 g     F .text  00000056 otbn_imem_write
d000e5d4 g       .shutdown      00000000 _text_end
d000dd68 g     F .text  0000003c lifecycle_device_id_get
d0009ff2 g     F .text  000000fa spi_device_init
d000f2d0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_start
d00094ac g     F .text  00000024 boot_policy_manifests_get
34002000 g       *ABS*  00000000 _epmp_text_tor_lo
d000baaa g     F .text  00000024 keymgr_creator_max_ver_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
38007000 g       *ABS*  00000000 _epmp_stack_guard_na4
d0010000 g       .vectors       00000000 _chip_info_end
d000cc2a g     F .text  000000be rom_epmp_config_debug_rom
d000f670 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_end
d000adae g     F .text  00000008 crc32_finish
000000fc g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_montmul
d000f304 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000a50a g     F .text  000002ea shutdown_init
d000aa40 g     F .text  00000120 alert_class_configure
d000e036 g     F .text  00000088 memcpy
d000a8c2 g     F .text  000000c0 alert_configure
d000ec40 g     O .rodata        000004ec kSigverifyRsaKeys
d0009bfe g     F .text  00000396 bootstrap
d000839c g     F .crt   0000001e rom_interrupt_handler
00000000 g       *ABS*  00000000 __abi_shutdown$
d000ac74 g     F .text  000000f2 alert_config_check
e0002048 g       .bss   00000000 _bss_start
d0008180 g     F .crt   0000021a _rom_start_boot
d000dfea g     F .text  0000004c sec_mmio_check_counters
00000000 g       *ABS*  00000000 __DYNAMIC
d000b548 g     F .text  00000042 flash_ctrl_data_default_perms_set
d000b978 g     F .text  00000066 ibex_addr_remap_0_set
d000ad6c g     F .text  00000042 crc32_add32
d000db14 g     F .text  0000006e hmac_sha256_update
d000d730 g     F .text  00000008 otbn_instruction_count_get
d000ad66 g     F .text  00000006 crc32_init
d000839c g     F .crt   0000001e rom_exception_handler
d0008000 g       .vectors       00000000 _text_start
00000320 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_buf
d000df7a g     F .text  00000070 sec_mmio_check_values
d000c38c g     F .text  00000034 base_log_internal_dv
d000b488 g     F .text  000000b0 flash_ctrl_data_erase_verify
d000c2e4 g     F .text  00000006 abort
e0000020 g     O .static_critical       00000054 epmp_state
d0009afe g     F .text  000000aa boot_data_check
d000adb6 g     F .text  0000011e ast_check
d000dee0 g     F .text  0000004c sec_mmio_write32
d000d810 g     F .text  0000005a otbn_dmem_write
d000aed4 g     F .text  00000080 flash_ctrl_init
d000bb74 g     F .text  00000008 rstmgr_reason_clear
d000ba3c g     F .text  0000006e keymgr_sw_binding_set
d000bd64 g     F .text  000000be dif_spi_host_fifo_write
d000f5e0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_compute_rr
e00024fc g       .bss   00000000 _bss_end
d000bb30 g     F .text  00000006 retention_sram_get
d000b538 g     F .text  00000010 flash_ctrl_exec_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000bb40 g     F .text  00000034 rstmgr_reason_get
d000d35e g     F .text  00000130 run_otbn_rsa_3072_modexp
d000d5f8 g     F .text  0000003c otbn_execute_app
e000205c g     O .bss   00000400 _rom_shadow_stack
d000ddca g     F .text  00000008 otp_read32
e0001fc4 g     O .data  00000084 status_codes
00001fc4 g       *ABS*  00000000 _static_critical_size
d000f688 g     O .rodata        00000004 kAstCheckPollCpuCycles
e0002478 g     O .bss   00000040 boot_data
d000dda4 g     F .text  00000026 lifecycle_hw_rev_get
d00083f8 g     F .crt   0000003a crt_section_copy
d000a170 g     F .text  0000000a spi_device_flash_status_clear
d000d698 g     F .text  00000022 otbn_execute
d000bb8c g     F .text  0000002e uart_init
d000d63e g     F .text  00000008 otbn_copy_data_from_otbn
d000ddd2 g     F .text  0000005a sec_mmio_init
d000e1ca g     F .text  000000ae memchr
d000cf76 g     F .text  0000009a sigverify_usage_constraints_get
000001a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_rr
d000ab60 g     F .text  00000114 alert_config_crc32
d000c050 g     F .text  000001ee dif_spi_host_transaction
d000bace g     F .text  00000002 keymgr_state_check
d000a0ec g     F .text  00000084 spi_device_cmd_get
d0008000 g       .vectors       00000000 _rom_boot_address
d000be22 g     F .text  00000158 dif_spi_host_fifo_read
d000af9a g     F .text  00000046 flash_ctrl_info_cfg_set
000004a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_out_buf
d000a982 g     F .text  000000be alert_local_configure
d000df2c g     F .text  0000004e sec_mmio_write32_shadowed
d000f684 g     O .rodata        00000004 kUartTxFifoCpuCycles
d0009ba8 g     F .text  00000056 bootstrap_requested
00004000 g       *ABS*  00000000 _stack_size
d000d4d0 g     F .text  0000001c otbn_init
d000c410 g     F .text  0000048e base_vfprintf
d000ec3c g     O .rodata        00000004 kSigverifyRsaKeysStep
d000d634 g     F .text  0000000a otbn_copy_data_to_otbn
d000c3f6 g     F .text  0000001a base_vprintf
d000dafa g     F .text  0000001a hmac_sha256_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_mod
d000bd64  w    F .text  000000be spi_host_fifo_write_alias
e0000074 g     O .static_critical       00001f50 sec_mmio_ctx
d000e0be g     F .text  00000062 memset
d000b934 g     F .text  00000044 flash_ctrl_bank_erase_perms_set
d00088be g     F .text  0000022e spi_flash_load_data
d000d4ec g     F .text  0000010c otbn_load_app
e0020000 g       .vectors       00000000 _stack_end
d000958a g     F .text  000001da boot_data_read
d000f680 g     O .rodata        00000004 kUartNCOValue
d000cbc8 g     F .text  0000002e rom_epmp_unlock_rom_ext_rx
d000b05c g     F .text  00000072 flash_ctrl_info_read
d000e338 g     F .text  00000002 device_fpga_version_print
e001c000 g       *ABS*  00000000 _stack_start
d000db82 g     F .text  00000036 hmac_sha256_final
d000bb36 g     F .text  0000000a retention_sram_init
d00083d4 g     F .crt   00000024 crt_section_clear
d000d90c g     F .text  000001ee epmp_state_check
d000d86a g     F .text  00000076 otbn_dmem_read
00000000 g       *ABS*  00000000 _dv_log_offset
d000ff80 g       *ABS*  00000000 _chip_info_start
d000be22  w    F .text  00000158 spi_host_fifo_read_alias
d000d738 g     F .text  0000000c otbn_imem_sec_wipe
d000bcb6 g     F .text  00000094 watchdog_configure
d000f680 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_start
d000e854 g     O .rodata        0000006c kSpiDeviceSfdpTable
e000245c g     O .bss   00000018 rom_counters
d000bf7a g     F .text  00000082 dif_spi_host_configure
d000a17a g     F .text  00000008 spi_device_flash_status_get
d000f68c g     O .rodata        00000004 kDeviceTestStatusAddress
00000800 g       *ABS*  00000000 _epmp_reset_rx_size
d00083bc g     F .crt   00000018 _asm_exception_handler
d000d646 g     F .text  00000052 otbn_busy_wait_for_done
d0008000 g     F .vectors       00000084 _rom_interrupt_vector_asm
d000ca74 g     F .text  00000154 rom_epmp_state_init
d000c3c4 g     F .text  00000032 base_printf
00000620 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_end
d0008aec g     F .text  00000274 rom_main
d000f690 g     O .rodata        00000004 kDeviceLogBypassUartAddress
d000f3cc g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_montmul
00000180 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_m0inv
00000080 g       *ABS*  00000000 _chip_info_size
d000bd4a g     F .text  0000000c watchdog_disable
d00094d0 g     F .text  000000ba boot_policy_manifest_check
00000310 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_compute_rr
00000000 g       *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000f680 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000a7f4 g     F .text  000000ce rom_printf
d000d010 g     F .text  0000021c sigverify_mod_exp_ibex
d0008434 g     F .crt   0000008c rom_epmp_init
00000034 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000e120 g     F .text  000000aa memrcmp
d000b58a g     F .text  00000044 flash_ctrl_info_perms_set
d000ca02 g     F .text  00000072 status_extract
d000bd56 g     F .text  0000000e dif_spi_host_init
d000d802 g     F .text  0000000e otbn_dmem_sec_wipe
d000e33c g     F .shutdown      00000298 shutdown_finalize
d0008800 g     F .text  000000be init_spi_host
d000bb7c g     F .text  00000010 rstmgr_reset
d000cbf6 g     F .text  00000034 rom_epmp_unlock_rom_ext_r
90000000 g       .vectors       00000000 _rom_ext_virtual_start_address
d000bbd6 g     F .text  000000e0 watchdog_init
d000b386 g     F .text  00000010 flash_ctrl_data_write
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000c23e g     F .text  000000a6 test_status_set
d000bad0 g     F .text  00000060 pinmux_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_start
d000a182 g     F .text  0000012e sigverify_rsa_key_get
d000dbb8 g     F .text  000001b0 lifecycle_state_get
d000c2ea g     F .text  000000a2 base_log_internal_core
d000bbba g     F .text  0000001c uart_putchar
d000839c g     F .crt   0000001e rom_nmi_handler
34003975 g       *ABS*  00000000 _epmp_text_tor_hi



Disassembly of section .vectors:

d0008000 <_rom_interrupt_vector_asm>:
_rom_interrupt_vector_asm():
d0008000:       3bc0006f                j       d00083bc <_asm_exception_handler>
d0008004:       3b80006f                j       d00083bc <_asm_exception_handler>
d0008008:       3b40006f                j       d00083bc <_asm_exception_handler>
d000800c:       3b00006f                j       d00083bc <_asm_exception_handler>
d0008010:       3ac0006f                j       d00083bc <_asm_exception_handler>
d0008014:       3a80006f                j       d00083bc <_asm_exception_handler>
d0008018:       3a40006f                j       d00083bc <_asm_exception_handler>
d000801c:       3a00006f                j       d00083bc <_asm_exception_handler>
d0008020:       39c0006f                j       d00083bc <_asm_exception_handler>
d0008024:       3980006f                j       d00083bc <_asm_exception_handler>
d0008028:       3940006f                j       d00083bc <_asm_exception_handler>
d000802c:       3900006f                j       d00083bc <_asm_exception_handler>
d0008030:       38c0006f                j       d00083bc <_asm_exception_handler>
d0008034:       3880006f                j       d00083bc <_asm_exception_handler>
d0008038:       3840006f                j       d00083bc <_asm_exception_handler>
d000803c:       3800006f                j       d00083bc <_asm_exception_handler>
d0008040:       37c0006f                j       d00083bc <_asm_exception_handler>
d0008044:       3780006f                j       d00083bc <_asm_exception_handler>
d0008048:       3740006f                j       d00083bc <_asm_exception_handler>
d000804c:       3700006f                j       d00083bc <_asm_exception_handler>
d0008050:       36c0006f                j       d00083bc <_asm_exception_handler>
d0008054:       3680006f                j       d00083bc <_asm_exception_handler>
d0008058:       3640006f                j       d00083bc <_asm_exception_handler>
d000805c:       3600006f                j       d00083bc <_asm_exception_handler>
d0008060:       35c0006f                j       d00083bc <_asm_exception_handler>
d0008064:       3580006f                j       d00083bc <_asm_exception_handler>
d0008068:       3540006f                j       d00083bc <_asm_exception_handler>
d000806c:       3500006f                j       d00083bc <_asm_exception_handler>
d0008070:       34c0006f                j       d00083bc <_asm_exception_handler>
d0008074:       3480006f                j       d00083bc <_asm_exception_handler>
d0008078:       3440006f                j       d00083bc <_asm_exception_handler>
d000807c:       3400006f                j       d00083bc <_asm_exception_handler>
d0008080:       1000006f                j       d0008180 <_rom_start_boot>
d0008084:       c0001073                unimp
d0008088:       c0001073                unimp
d000808c:       c0001073                unimp
d0008090:       c0001073                unimp
d0008094:       c0001073                unimp
d0008098:       c0001073                unimp
d000809c:       c0001073                unimp
d00080a0:       c0001073                unimp
d00080a4:       c0001073                unimp
d00080a8:       c0001073                unimp
d00080ac:       c0001073                unimp
d00080b0:       c0001073                unimp
d00080b4:       c0001073                unimp
d00080b8:       c0001073                unimp
d00080bc:       c0001073                unimp
d00080c0:       c0001073                unimp
d00080c4:       c0001073                unimp
d00080c8:       c0001073                unimp
d00080cc:       c0001073                unimp
d00080d0:       c0001073                unimp
d00080d4:       c0001073                unimp
d00080d8:       c0001073                unimp
d00080dc:       c0001073                unimp
d00080e0:       c0001073                unimp
d00080e4:       c0001073                unimp
d00080e8:       c0001073                unimp
d00080ec:       c0001073                unimp
d00080f0:       c0001073                unimp
d00080f4:       c0001073                unimp
d00080f8:       c0001073                unimp
d00080fc:       c0001073                unimp

d0008100 <_rom_interrupt_vector_c>:
_rom_interrupt_vector_c():
d0008100:       29c0006f                j       d000839c <rom_exception_handler>
d0008104:       2980006f                j       d000839c <rom_exception_handler>
d0008108:       2940006f                j       d000839c <rom_exception_handler>
d000810c:       2900006f                j       d000839c <rom_exception_handler>
d0008110:       28c0006f                j       d000839c <rom_exception_handler>
d0008114:       2880006f                j       d000839c <rom_exception_handler>
d0008118:       2840006f                j       d000839c <rom_exception_handler>
d000811c:       2800006f                j       d000839c <rom_exception_handler>
d0008120:       27c0006f                j       d000839c <rom_exception_handler>
d0008124:       2780006f                j       d000839c <rom_exception_handler>
d0008128:       2740006f                j       d000839c <rom_exception_handler>
d000812c:       2700006f                j       d000839c <rom_exception_handler>
d0008130:       26c0006f                j       d000839c <rom_exception_handler>
d0008134:       2680006f                j       d000839c <rom_exception_handler>
d0008138:       2640006f                j       d000839c <rom_exception_handler>
d000813c:       2600006f                j       d000839c <rom_exception_handler>
d0008140:       25c0006f                j       d000839c <rom_exception_handler>
d0008144:       2580006f                j       d000839c <rom_exception_handler>
d0008148:       2540006f                j       d000839c <rom_exception_handler>
d000814c:       2500006f                j       d000839c <rom_exception_handler>
d0008150:       24c0006f                j       d000839c <rom_exception_handler>
d0008154:       2480006f                j       d000839c <rom_exception_handler>
d0008158:       2440006f                j       d000839c <rom_exception_handler>
d000815c:       2400006f                j       d000839c <rom_exception_handler>
d0008160:       23c0006f                j       d000839c <rom_exception_handler>
d0008164:       2380006f                j       d000839c <rom_exception_handler>
d0008168:       2340006f                j       d000839c <rom_exception_handler>
d000816c:       2300006f                j       d000839c <rom_exception_handler>
d0008170:       22c0006f                j       d000839c <rom_exception_handler>
d0008174:       2280006f                j       d000839c <rom_exception_handler>
d0008178:       2240006f                j       d000839c <rom_exception_handler>
d000817c:       2200006f                j       d000839c <rom_exception_handler>

Disassembly of section .crt:

d0008180 <_rom_start_boot>:
_rom_start_boot():
d0008180:       ff000537                lui     a0,0xff000
d0008184:       01452283                lw      t0,20(a0) # ff000014 <_stack_end+0x1efe0014>
d0008188:       00029863                bnez    t0,d0008198 <.SECURE_BOOT>
d000818c:       ff000537                lui     a0,0xff000
d0008190:       01852283                lw      t0,24(a0) # ff000018 <_stack_end+0x1efe0018>
d0008194:       00028c63                beqz    t0,d00081ac <kRomStartBootMaybeHalt+0xc>

d0008198 <.SECURE_BOOT>:
d0008198:       0fffa197                auipc   gp,0xfffa
d000819c:       6b018193                addi    gp,gp,1712 # e0002848 <__global_pointer$>

d00081a0 <kRomStartBootMaybeHalt>:
d00081a0:           c0131537            lui     a0,0xc0131
d00081a4:           10852283            lw      t0,264(a0) # c0131108 <_stack_end+0xe0111108>
d00081a8:           00029563            bnez    t0,d00081b2 <kRomStartBootExecEn>
d00081ac:       /-> 10500073            wfi
d00081b0:       \-- bff5                        j       d00081ac <kRomStartBootMaybeHalt+0xc>

d00081b2 <kRomStartBootExecEn>:
d00081b2:       c11f02b7                lui     t0,0xc11f0
d00081b6:       4309                    li      t1,2
d00081b8:       0462a623                sw      t1,76(t0) # c11f004c <_stack_end+0xe11d004c>
d00081bc:       c04002b7                lui     t0,0xc0400
d00081c0:       537d                    li      t1,-1
d00081c2:       0262a623                sw      t1,44(t0) # c040002c <_stack_end+0xe03e002c>
d00081c6:       4305                    li      t1,1
d00081c8:       0062ac23                sw      t1,24(t0)
d00081cc:       c04702b7                lui     t0,0xc0470
d00081d0:       00037337                lui     t1,0x37
d00081d4:       ee830313                addi    t1,t1,-280 # 36ee8 <WDOG_BARK_THOLD>
d00081d8:       0062ac23                sw      t1,24(t0) # c0470018 <_stack_end+0xe0450018>
d00081dc:       00031337                lui     t1,0x31
d00081e0:       d4030313                addi    t1,t1,-704 # 30d40 <WDOG_BITE_THOLD>

d00081e4 <kRomStartStoreT1ToBiteThold>:
d00081e4:       0062ae23                sw      t1,28(t0)
d00081e8:       4305                    li      t1,1
d00081ea:       0062aa23                sw      t1,20(t0)

d00081ee <kRomStartWatchdogEnabled>:
d00081ee:              72c5                     lui     t0,0xffff1
d00081f0:              88828293                 addi    t0,t0,-1912 # ffff0888 <_stack_end+0x1ffd0888>
d00081f4:              3042b073                 csrc    mie,t0
d00081f8:              c0131537                 lui     a0,0xc0131
d00081fc:              0dc52283                 lw      t0,220(a0) # c01310dc <_stack_end+0xe01110dc>
d0008200:              4319                     li      t1,6
d0008202:          /-- 02629563                 bne     t0,t1,d000822c <kRomStartWatchdogEnabled+0x3e>
d0008206:          |   c0480537                 lui     a0,0xc0480
d000820a:          |   c04805b7                 lui     a1,0xc0480
d000820e:          |   09c58593                 addi    a1,a1,156 # c048009c <_stack_end+0xe046009c>
d0008212:          |   c0131637                 lui     a2,0xc0131
d0008216:          |   04060613                 addi    a2,a2,64 # c0131040 <_stack_end+0xe0111040>
d000821a:          |   2af9                     jal     d00083f8 <crt_section_copy>
d000821c:          |   c0131537                 lui     a0,0xc0131
d0008220:          |   0fc52283                 lw      t0,252(a0) # c01310fc <_stack_end+0xe01110fc>
d0008224:          |   c0420537                 lui     a0,0xc0420
d0008228:          |   00552a23                 sw      t0,20(a0) # c0420014 <_stack_end+0xe0400014>
d000822c:          \-> c0131537                 lui     a0,0xc0131
d0008230:              11c52283                 lw      t0,284(a0) # c013111c <_stack_end+0xe011111c>
d0008234:              73900f93                 li      t6,1849
d0008238:       /----- 0bf29f63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d000823c:       |      c01315b7                 lui     a1,0xc0131
d0008240:       |      11c5a303                 lw      t1,284(a1) # c013111c <_stack_end+0xe011111c>
d0008244:       |  /-- 01f30663                 beq     t1,t6,d0008250 <kRomStartWatchdogEnabled+0x62>
d0008248:       |  |   0000                     unimp
d000824a:       |  |   0000                     unimp
d000824c:       |  |   0000                     unimp
d000824e:       |  |   0000                     unimp
d0008250:       |  \-> c0460537                 lui     a0,0xc0460
d0008254:       |      40050513                 addi    a0,a0,1024 # c0460400 <_stack_end+0xe0440400>
d0008258:       |      42b1                     li      t0,12
d000825a:       |      04552c23                 sw      t0,88(a0)
d000825e:       |      4291                     li      t0,4
d0008260:       |      04552e23                 sw      t0,92(a0)
d0008264:       |      06552023                 sw      t0,96(a0)
d0008268:       |      c0460537                 lui     a0,0xc0460
d000826c:       |      0e850513                 addi    a0,a0,232 # c04600e8 <_stack_end+0xe04400e8>
d0008270:       |      42e1                     li      t0,24
d0008272:       |      04552c23                 sw      t0,88(a0)
d0008276:       |      42e5                     li      t0,25
d0008278:       |      04552e23                 sw      t0,92(a0)
d000827c:       |      42e9                     li      t0,26
d000827e:       |      06552023                 sw      t0,96(a0)
d0008282:       |      c0040537                 lui     a0,0xc0040
d0008286:       |      01052283                 lw      t0,16(a0) # c0040010 <_stack_end+0xe0020010>
d000828a:       |      01c00f37                 lui     t5,0x1c00
d000828e:       |      01e2f2b3                 and     t0,t0,t5
d0008292:       |      01800eb7                 lui     t4,0x1800
d0008296:       |      739e8e93                 addi    t4,t4,1849 # 1800739 <_rom_ext_virtual_size+0x17c0739>
d000829a:       |      01d2c2b3                 xor     t0,t0,t4
d000829e:       +----- 05f29c63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d00082a2:       |      73900f93                 li      t6,1849
d00082a6:       |      c00405b7                 lui     a1,0xc0040
d00082aa:       |      0105a303                 lw      t1,16(a1) # c0040010 <_stack_end+0xe0020010>
d00082ae:       |      01e37333                 and     t1,t1,t5
d00082b2:       |      01d34333                 xor     t1,t1,t4
d00082b6:       |  /-- 01f30663                 beq     t1,t6,d00082c2 <kRomStartWatchdogEnabled+0xd4>
d00082ba:       |  |   0000                     unimp
d00082bc:       |  |   0000                     unimp
d00082be:       |  |   0000                     unimp
d00082c0:       |  |   0000                     unimp
d00082c2:       |  \-> b0001073                 csrw    mcycle,zero
d00082c6:       |      c0470537                 lui     a0,0xc0470
d00082ca:       |      00052a23                 sw      zero,20(a0) # c0470014 <_stack_end+0xe0450014>
d00082ce:       |  /-> c0131537                 lui     a0,0xc0131
d00082d2:       |  |   12052283                 lw      t0,288(a0) # c0131120 <_stack_end+0xe0111120>
d00082d6:       |  |   b0002373                 csrr    t1,mcycle
d00082da:       |  \-- fe536ae3                 bltu    t1,t0,d00082ce <kRomStartWatchdogEnabled+0xe0>
d00082de:       |  /-> c0140537                 lui     a0,0xc0140
d00082e2:       |  |   00452283                 lw      t0,4(a0) # c0140004 <_stack_end+0xe0120004>
d00082e6:       |  |   0022f293                 andi    t0,t0,2
d00082ea:       |  \-- fe028ae3                 beqz    t0,d00082de <kRomStartWatchdogEnabled+0xf0>
d00082ee:       |      0000                     unimp
d00082f0:       |      0000                     unimp
d00082f2:       |      0000                     unimp
d00082f4:       |      0000                     unimp
d00082f6:       \----> c1160537                 lui     a0,0xc1160
d00082fa:              009092b7                 lui     t0,0x909
d00082fe:              09928293                 addi    t0,t0,153 # 909099 <_rom_ext_virtual_size+0x8c9099>
d0008302:              02552223                 sw      t0,36(a0) # c1160024 <_stack_end+0xe1140024>
d0008306:              4299                     li      t0,6
d0008308:              02552023                 sw      t0,32(a0)
d000830c:              c1150537                 lui     a0,0xc1150
d0008310:              66600293                 li      t0,1638
d0008314:              00552a23                 sw      t0,20(a0) # c1150014 <_stack_end+0xe1130014>
d0008318:              c1170537                 lui     a0,0xc1170
d000831c:              62a9                     lui     t0,0xa
d000831e:              96628293                 addi    t0,t0,-1690 # 9966 <_stack_size+0x5966>
d0008322:              00552a23                 sw      t0,20(a0) # c1170014 <_stack_end+0xe1150014>
d0008326:              c11c0537                 lui     a0,0xc11c0
d000832a:              458d                     li      a1,3
d000832c:              c94c                     sw      a1,20(a0)
d000832e:              4081                     li      ra,0
d0008330:              4101                     li      sp,0
d0008332:              4201                     li      tp,0
d0008334:              4281                     li      t0,0
d0008336:              4301                     li      t1,0
d0008338:              4381                     li      t2,0
d000833a:              4401                     li      s0,0
d000833c:              4481                     li      s1,0
d000833e:              4501                     li      a0,0
d0008340:              4581                     li      a1,0
d0008342:              4601                     li      a2,0
d0008344:              4681                     li      a3,0
d0008346:              4701                     li      a4,0
d0008348:              4781                     li      a5,0
d000834a:              4801                     li      a6,0
d000834c:              4881                     li      a7,0
d000834e:              4901                     li      s2,0
d0008350:              4981                     li      s3,0
d0008352:              4a01                     li      s4,0
d0008354:              4a81                     li      s5,0
d0008356:              4b01                     li      s6,0
d0008358:              4b81                     li      s7,0
d000835a:              4c01                     li      s8,0
d000835c:              4c81                     li      s9,0
d000835e:              4d01                     li      s10,0
d0008360:              4d81                     li      s11,0
d0008362:              4e01                     li      t3,0
d0008364:              4e81                     li      t4,0
d0008366:              4f01                     li      t5,0
d0008368:              4f81                     li      t6,0
d000836a:              20e9                     jal     d0008434 <rom_epmp_init>
d000836c:              0fffa517                 auipc   a0,0xfffa
d0008370:              cdc50513                 addi    a0,a0,-804 # e0002048 <lc_state>
d0008374:              cb418593                 addi    a1,gp,-844 # e00024fc <_bss_end>
d0008378:              28b1                     jal     d00083d4 <crt_section_clear>
d000837a:              10018117                 auipc   sp,0x10018
d000837e:              c7610113                 addi    sp,sp,-906 # e001fff0 <_stack_start+0x3ff0>
d0008382:              0fffa917                 auipc   s2,0xfffa
d0008386:              cda90913                 addi    s2,s2,-806 # e000205c <_rom_shadow_stack>
d000838a:              00000297                 auipc   t0,0x0
d000838e:              d7728293                 addi    t0,t0,-649 # d0008101 <_rom_interrupt_vector_c+0x1>
d0008392:              30529073                 csrw    mtvec,t0
d0008396:              7560006f                 j       d0008aec <rom_main>
d000839a:              0000                     unimp

d000839c <rom_exception_handler>:
rom_irq_error():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:98

boot_data_t boot_data = {0};
OT_ALWAYS_INLINE
static rom_error_t rom_irq_error(void) {
  uint32_t mcause;
  CSR_READ(CSR_REG_MCAUSE, &mcause);
d000839c:       34202573                csrr    a0,mcause
d00083a0:       800005b7                lui     a1,0x80000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:109
  //
  // Preserve the MSB and shift the 7 LSBs into the upper byte.
  // (we preserve 7 instead of 5 because the verilog hardcodes the unused bits
  // as zero and those would be the next bits used should the number of
  // interrupt causes increase).
  mcause = (mcause & 0x80000000) | ((mcause & 0x7f) << 24);
d00083a4:       8de9                    and     a1,a1,a0
d00083a6:       0566                    slli    a0,a0,0x19
d00083a8:       8105                    srli    a0,a0,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:110
  return kErrorInterrupt + mcause;
d00083aa:       8d4d                    or      a0,a0,a1
d00083ac:       004955b7                lui     a1,0x495
d00083b0:       20258593                addi    a1,a1,514 # 495202 <_rom_ext_virtual_size+0x455202>
d00083b4:       8d4d                    or      a0,a0,a1
rom_interrupt_handler():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:560
  shutdown_finalize(rom_try_boot());
}

void rom_interrupt_handler(void) {
  register rom_error_t error asm("a0") = rom_irq_error();
  asm volatile("tail shutdown_finalize;" ::"r"(error));
d00083b6:       7870506f                j       d000e33c <shutdown_finalize>
d00083ba:       0000                    unimp

d00083bc <_asm_exception_handler>:
_asm_exception_handler():
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:29
  .global _asm_exception_handler
  .type _asm_exception_handler, @function
_asm_exception_handler:
.L_exception_loop:
  // Request a system reset.
  li t0, TOP_EARLGREY_RSTMGR_AON_BASE_ADDR
d00083bc:       /-> c04102b7            lui     t0,0xc0410
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:30
  li t1, MULTIBIT_ASM_BOOL4_TRUE
d00083c0:       |   4319                        li      t1,6
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:31
  sw t1, RSTMGR_RESET_REQ_REG_OFFSET(t0)
d00083c2:       |   0062a223            sw      t1,4(t0) # c0410004 <_stack_end+0xe03f0004>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:37

  // Disable access to flash.
  //
  // This is done after requesting a reset so that this function will
  // work even if it is in flash.
  li t0, TOP_EARLGREY_FLASH_CTRL_CORE_BASE_ADDR
d00083c6:       |   c10002b7            lui     t0,0xc1000
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:38
  sw zero, FLASH_CTRL_DIS_REG_OFFSET(t0)
d00083ca:       |   0002a823            sw      zero,16(t0) # c1000010 <_stack_end+0xe0fe0010>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:40

  wfi
d00083ce:       |   10500073            wfi
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:41
  j   .L_exception_loop
d00083d2:       \-- b7ed                        j       d00083bc <_asm_exception_handler>

d00083d4 <crt_section_clear>:
crt_section_clear():
/proc/self/cwd/sw/device/lib/crt/crt.S:41
  .global crt_section_clear
  .type crt_section_clear, @function
crt_section_clear:

  // Check that start is before end.
  bgeu a0, a1, .L_clear_nothing
d00083d4:       /-------- 00b57e63              bgeu    a0,a1,d00083f0 <crt_section_clear+0x1c>
/proc/self/cwd/sw/device/lib/crt/crt.S:44

  // Check that start and end are word aligned.
  or   t0, a0, a1
d00083d8:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:45
  andi t0, t0, 0x3
d00083dc:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:46
  bnez t0, .L_clear_error
d00083e0:       |  /----- 00029b63              bnez    t0,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:51

.L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
d00083e4:       |  |  /-> 00052023              sw      zero,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:52
  addi a0, a0, 4
d00083e8:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:53
  bltu a0, a1, .L_clear_loop
d00083ea:       |  |  \-- feb56de3              bltu    a0,a1,d00083e4 <crt_section_clear+0x10>
/proc/self/cwd/sw/device/lib/crt/crt.S:54
  ret
d00083ee:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:59

.L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_clear_error
d00083f0:       \--+----X 00b51363              bne     a0,a1,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:60
  ret
d00083f4:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:63

.L_clear_error:
  unimp
d00083f6:          \----> 0000                  unimp

d00083f8 <crt_section_copy>:
crt_section_copy():
/proc/self/cwd/sw/device/lib/crt/crt.S:95
  .global crt_section_copy
  .type crt_section_copy, @function
crt_section_copy:

  // Check that start is before end.
  bgeu a0, a1, .L_copy_nothing
d00083f8:       /-------- 02b57963              bgeu    a0,a1,d000842a <crt_section_copy+0x32>
/proc/self/cwd/sw/device/lib/crt/crt.S:98

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
d00083fc:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:99
  or   t0, t0, a2
d0008400:       |         00c2e2b3              or      t0,t0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:100
  andi t0, t0, 0x3
d0008404:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:101
  bnez t0, .L_copy_error
d0008408:       |  /----- 02029463              bnez    t0,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:118
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
d000840c:       |  |      40c502b3              sub     t0,a0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:119
  sub  t1, a1, a0           // end - start
d0008410:       |  |      40a58333              sub     t1,a1,a0
/proc/self/cwd/sw/device/lib/crt/crt.S:120
  bltu t0, t1, .L_copy_error
d0008414:       |  +----- 0062ee63              bltu    t0,t1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:125

.L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
d0008418:       |  |  /-> 00062283              lw      t0,0(a2)
/proc/self/cwd/sw/device/lib/crt/crt.S:126
  addi a2, a2, 4
d000841c:       |  |  |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/lib/crt/crt.S:127
  sw   t0, 0(a0)
d000841e:       |  |  |   00552023              sw      t0,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:128
  addi a0, a0, 4
d0008422:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:129
  bltu a0, a1, .L_copy_loop
d0008424:       |  |  \-- feb56ae3              bltu    a0,a1,d0008418 <crt_section_copy+0x20>
/proc/self/cwd/sw/device/lib/crt/crt.S:130
  ret
d0008428:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:135

.L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_copy_error
d000842a:       \--+----X 00b51363              bne     a0,a1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:136
  ret
d000842e:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:139

.L_copy_error:
  unimp
d0008430:          \----> 0000                  unimp
d0008432:                 0000                  unimp

d0008434 <rom_epmp_init>:
rom_epmp_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:59
  .extern _epmp_stack_guard_na4

  // Setup PMP address registers.

  // ROM TEXT
  la   t0, _epmp_text_tor_lo
d0008434:       63ffa297                auipc   t0,0x63ffa
d0008438:       bcc28293                addi    t0,t0,-1076 # 34002000 <_stack_end+0x53fe2000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:60
  csrw pmpaddr0, t0
d000843c:       3b029073                csrw    pmpaddr0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:61
  la   t0, _epmp_text_tor_hi
d0008440:       63ffb297                auipc   t0,0x63ffb
d0008444:       53528293                addi    t0,t0,1333 # 34003975 <_stack_end+0x53fe3975>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:62
  csrw pmpaddr1, t0
d0008448:       3b129073                csrw    pmpaddr1,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:65

  // ROM
  li   t0, NAPOT(TOP_EARLGREY_ROM_BASE_ADDR, TOP_EARLGREY_ROM_SIZE_BYTES)
d000844c:       340032b7                lui     t0,0x34003
d0008450:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:66
  csrw pmpaddr2, t0
d0008452:       3b229073                csrw    pmpaddr2,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:69

  // ROM_EXT TEXT (configured after signature verification)
  csrw pmpaddr3, zero // ROM_EXT TEXT low
d0008456:       3b301073                csrw    pmpaddr3,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:70
  csrw pmpaddr4, zero // ROM_EXT TEXT high
d000845a:       3b401073                csrw    pmpaddr4,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:73

  // eFLASH
  li   t0, NAPOT(TOP_EARLGREY_EFLASH_BASE_ADDR, TOP_EARLGREY_EFLASH_SIZE_BYTES)
d000845e:       3c0102b7                lui     t0,0x3c010
d0008462:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:74
  csrw pmpaddr5, t0
d0008464:       3b529073                csrw    pmpaddr5,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:77

  // MMIO
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR)
d0008468:       6291                    lui     t0,0x4
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:78
  csrw pmpaddr10, t0
d000846a:       3ba29073                csrw    pmpaddr10,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:79
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR + TOP_EARLGREY_MMIO_SIZE_BYTES)
d000846e:       340002b7                lui     t0,0x34000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:80
  csrw pmpaddr11, t0
d0008472:       3bb29073                csrw    pmpaddr11,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:83

  // Debug ROM
  li   t0, NAPOT(TOP_EARLGREY_RV_DM_MEM_BASE_ADDR, TOP_EARLGREY_RV_DM_MEM_SIZE_BYTES)
d0008476:       1ff00293                li      t0,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:84
  csrw pmpaddr13, t0
d000847a:       3bd29073                csrw    pmpaddr13,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:87

  // Stack guard
  la   t0, _epmp_stack_guard_na4
d000847e:       67fff297                auipc   t0,0x67fff
d0008482:       b8228293                addi    t0,t0,-1150 # 38007000 <_stack_end+0x57fe7000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:88
  csrw pmpaddr14, t0
d0008486:       3be29073                csrw    pmpaddr14,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:91

  // RAM
  li   t0, NAPOT(TOP_EARLGREY_RAM_MAIN_BASE_ADDR, TOP_EARLGREY_RAM_MAIN_SIZE_BYTES)
d000848a:       380042b7                lui     t0,0x38004
d000848e:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:92
  csrw pmpaddr15, t0
d0008490:       3bf29073                csrw    pmpaddr15,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:95

  // Set PMP configuration registers.
  li   t0, CFG_INDEX(1  % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRX) | /* ROM TEXT    */ \
d0008494:       009992b7                lui     t0,0x999
d0008498:       d0028293                addi    t0,t0,-768 # 998d00 <_rom_ext_virtual_size+0x958d00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:97
           CFG_INDEX(2  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* ROM         */
  li   t1, CFG_INDEX(5  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* eFLASH      */
d000849c:       6329                    lui     t1,0xa
d000849e:       90030313                addi    t1,t1,-1792 # 9900 <_stack_size+0x5900>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:98
  li   t2, CFG_INDEX(11 % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRW)   /* MMIO        */
d00084a2:       8b0003b7                lui     t2,0x8b000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:99
  li   t3, CFG_INDEX(13 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRWX)| /* Debug ROM   */ \
d00084a6:       9b90ae37                lui     t3,0x9b90a
d00084aa:       f00e0e13                addi    t3,t3,-256 # 9b909f00 <_stack_end+0xbb8e9f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:104
           CFG_INDEX(14 % 4, EPMP_CFG_A_NA4   | EPMP_CFG_L)   | /* Stack Guard */ \
           CFG_INDEX(15 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRW)   /* RAM         */
  //li   t4, 0x6

  csrw pmpcfg0, t0
d00084ae:       3a029073                csrw    pmpcfg0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:105
  csrw pmpcfg1, t1
d00084b2:       3a131073                csrw    pmpcfg1,t1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:106
  csrw pmpcfg2, t2
d00084b6:       3a239073                csrw    pmpcfg2,t2
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:107
  csrw pmpcfg3, t3
d00084ba:       3a3e1073                csrw    pmpcfg3,t3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:110
  //csrw EPMP_MSECCFG , t4      

  ret
d00084be:       8082                    ret
d00084c0:       0000                    unimp
d00084c2:       0000                    unimp
d00084c4:       0000                    unimp
d00084c6:       0000                    unimp
d00084c8:       0000                    unimp
d00084ca:       0000                    unimp
d00084cc:       0000                    unimp
d00084ce:       0000                    unimp
d00084d0:       0000                    unimp
d00084d2:       0000                    unimp
d00084d4:       0000                    unimp
d00084d6:       0000                    unimp
d00084d8:       0000                    unimp
d00084da:       0000                    unimp
d00084dc:       0000                    unimp
d00084de:       0000                    unimp
d00084e0:       0000                    unimp
d00084e2:       0000                    unimp
d00084e4:       0000                    unimp
d00084e6:       0000                    unimp
d00084e8:       0000                    unimp
d00084ea:       0000                    unimp
d00084ec:       0000                    unimp
d00084ee:       0000                    unimp
d00084f0:       0000                    unimp
d00084f2:       0000                    unimp
d00084f4:       0000                    unimp
d00084f6:       0000                    unimp
d00084f8:       0000                    unimp
d00084fa:       0000                    unimp
d00084fc:       0000                    unimp
d00084fe:       0000                    unimp
d0008500:       0000                    unimp
d0008502:       0000                    unimp
d0008504:       0000                    unimp
d0008506:       0000                    unimp
d0008508:       0000                    unimp
d000850a:       0000                    unimp
d000850c:       0000                    unimp
d000850e:       0000                    unimp
d0008510:       0000                    unimp
d0008512:       0000                    unimp
d0008514:       0000                    unimp
d0008516:       0000                    unimp
d0008518:       0000                    unimp
d000851a:       0000                    unimp
d000851c:       0000                    unimp
d000851e:       0000                    unimp
d0008520:       0000                    unimp
d0008522:       0000                    unimp
d0008524:       0000                    unimp
d0008526:       0000                    unimp
d0008528:       0000                    unimp
d000852a:       0000                    unimp
d000852c:       0000                    unimp
d000852e:       0000                    unimp
d0008530:       0000                    unimp
d0008532:       0000                    unimp
d0008534:       0000                    unimp
d0008536:       0000                    unimp
d0008538:       0000                    unimp
d000853a:       0000                    unimp
d000853c:       0000                    unimp
d000853e:       0000                    unimp
d0008540:       0000                    unimp
d0008542:       0000                    unimp
d0008544:       0000                    unimp
d0008546:       0000                    unimp
d0008548:       0000                    unimp
d000854a:       0000                    unimp
d000854c:       0000                    unimp
d000854e:       0000                    unimp
d0008550:       0000                    unimp
d0008552:       0000                    unimp
d0008554:       0000                    unimp
d0008556:       0000                    unimp
d0008558:       0000                    unimp
d000855a:       0000                    unimp
d000855c:       0000                    unimp
d000855e:       0000                    unimp
d0008560:       0000                    unimp
d0008562:       0000                    unimp
d0008564:       0000                    unimp
d0008566:       0000                    unimp
d0008568:       0000                    unimp
d000856a:       0000                    unimp
d000856c:       0000                    unimp
d000856e:       0000                    unimp
d0008570:       0000                    unimp
d0008572:       0000                    unimp
d0008574:       0000                    unimp
d0008576:       0000                    unimp
d0008578:       0000                    unimp
d000857a:       0000                    unimp
d000857c:       0000                    unimp
d000857e:       0000                    unimp
d0008580:       0000                    unimp
d0008582:       0000                    unimp
d0008584:       0000                    unimp
d0008586:       0000                    unimp
d0008588:       0000                    unimp
d000858a:       0000                    unimp
d000858c:       0000                    unimp
d000858e:       0000                    unimp
d0008590:       0000                    unimp
d0008592:       0000                    unimp
d0008594:       0000                    unimp
d0008596:       0000                    unimp
d0008598:       0000                    unimp
d000859a:       0000                    unimp
d000859c:       0000                    unimp
d000859e:       0000                    unimp
d00085a0:       0000                    unimp
d00085a2:       0000                    unimp
d00085a4:       0000                    unimp
d00085a6:       0000                    unimp
d00085a8:       0000                    unimp
d00085aa:       0000                    unimp
d00085ac:       0000                    unimp
d00085ae:       0000                    unimp
d00085b0:       0000                    unimp
d00085b2:       0000                    unimp
d00085b4:       0000                    unimp
d00085b6:       0000                    unimp
d00085b8:       0000                    unimp
d00085ba:       0000                    unimp
d00085bc:       0000                    unimp
d00085be:       0000                    unimp
d00085c0:       0000                    unimp
d00085c2:       0000                    unimp
d00085c4:       0000                    unimp
d00085c6:       0000                    unimp
d00085c8:       0000                    unimp
d00085ca:       0000                    unimp
d00085cc:       0000                    unimp
d00085ce:       0000                    unimp
d00085d0:       0000                    unimp
d00085d2:       0000                    unimp
d00085d4:       0000                    unimp
d00085d6:       0000                    unimp
d00085d8:       0000                    unimp
d00085da:       0000                    unimp
d00085dc:       0000                    unimp
d00085de:       0000                    unimp
d00085e0:       0000                    unimp
d00085e2:       0000                    unimp
d00085e4:       0000                    unimp
d00085e6:       0000                    unimp
d00085e8:       0000                    unimp
d00085ea:       0000                    unimp
d00085ec:       0000                    unimp
d00085ee:       0000                    unimp
d00085f0:       0000                    unimp
d00085f2:       0000                    unimp
d00085f4:       0000                    unimp
d00085f6:       0000                    unimp
d00085f8:       0000                    unimp
d00085fa:       0000                    unimp
d00085fc:       0000                    unimp
d00085fe:       0000                    unimp
d0008600:       0000                    unimp
d0008602:       0000                    unimp
d0008604:       0000                    unimp
d0008606:       0000                    unimp
d0008608:       0000                    unimp
d000860a:       0000                    unimp
d000860c:       0000                    unimp
d000860e:       0000                    unimp
d0008610:       0000                    unimp
d0008612:       0000                    unimp
d0008614:       0000                    unimp
d0008616:       0000                    unimp
d0008618:       0000                    unimp
d000861a:       0000                    unimp
d000861c:       0000                    unimp
d000861e:       0000                    unimp
d0008620:       0000                    unimp
d0008622:       0000                    unimp
d0008624:       0000                    unimp
d0008626:       0000                    unimp
d0008628:       0000                    unimp
d000862a:       0000                    unimp
d000862c:       0000                    unimp
d000862e:       0000                    unimp
d0008630:       0000                    unimp
d0008632:       0000                    unimp
d0008634:       0000                    unimp
d0008636:       0000                    unimp
d0008638:       0000                    unimp
d000863a:       0000                    unimp
d000863c:       0000                    unimp
d000863e:       0000                    unimp
d0008640:       0000                    unimp
d0008642:       0000                    unimp
d0008644:       0000                    unimp
d0008646:       0000                    unimp
d0008648:       0000                    unimp
d000864a:       0000                    unimp
d000864c:       0000                    unimp
d000864e:       0000                    unimp
d0008650:       0000                    unimp
d0008652:       0000                    unimp
d0008654:       0000                    unimp
d0008656:       0000                    unimp
d0008658:       0000                    unimp
d000865a:       0000                    unimp
d000865c:       0000                    unimp
d000865e:       0000                    unimp
d0008660:       0000                    unimp
d0008662:       0000                    unimp
d0008664:       0000                    unimp
d0008666:       0000                    unimp
d0008668:       0000                    unimp
d000866a:       0000                    unimp
d000866c:       0000                    unimp
d000866e:       0000                    unimp
d0008670:       0000                    unimp
d0008672:       0000                    unimp
d0008674:       0000                    unimp
d0008676:       0000                    unimp
d0008678:       0000                    unimp
d000867a:       0000                    unimp
d000867c:       0000                    unimp
d000867e:       0000                    unimp
d0008680:       0000                    unimp
d0008682:       0000                    unimp
d0008684:       0000                    unimp
d0008686:       0000                    unimp
d0008688:       0000                    unimp
d000868a:       0000                    unimp
d000868c:       0000                    unimp
d000868e:       0000                    unimp
d0008690:       0000                    unimp
d0008692:       0000                    unimp
d0008694:       0000                    unimp
d0008696:       0000                    unimp
d0008698:       0000                    unimp
d000869a:       0000                    unimp
d000869c:       0000                    unimp
d000869e:       0000                    unimp
d00086a0:       0000                    unimp
d00086a2:       0000                    unimp
d00086a4:       0000                    unimp
d00086a6:       0000                    unimp
d00086a8:       0000                    unimp
d00086aa:       0000                    unimp
d00086ac:       0000                    unimp
d00086ae:       0000                    unimp
d00086b0:       0000                    unimp
d00086b2:       0000                    unimp
d00086b4:       0000                    unimp
d00086b6:       0000                    unimp
d00086b8:       0000                    unimp
d00086ba:       0000                    unimp
d00086bc:       0000                    unimp
d00086be:       0000                    unimp
d00086c0:       0000                    unimp
d00086c2:       0000                    unimp
d00086c4:       0000                    unimp
d00086c6:       0000                    unimp
d00086c8:       0000                    unimp
d00086ca:       0000                    unimp
d00086cc:       0000                    unimp
d00086ce:       0000                    unimp
d00086d0:       0000                    unimp
d00086d2:       0000                    unimp
d00086d4:       0000                    unimp
d00086d6:       0000                    unimp
d00086d8:       0000                    unimp
d00086da:       0000                    unimp
d00086dc:       0000                    unimp
d00086de:       0000                    unimp
d00086e0:       0000                    unimp
d00086e2:       0000                    unimp
d00086e4:       0000                    unimp
d00086e6:       0000                    unimp
d00086e8:       0000                    unimp
d00086ea:       0000                    unimp
d00086ec:       0000                    unimp
d00086ee:       0000                    unimp
d00086f0:       0000                    unimp
d00086f2:       0000                    unimp
d00086f4:       0000                    unimp
d00086f6:       0000                    unimp
d00086f8:       0000                    unimp
d00086fa:       0000                    unimp
d00086fc:       0000                    unimp
d00086fe:       0000                    unimp
d0008700:       0000                    unimp
d0008702:       0000                    unimp
d0008704:       0000                    unimp
d0008706:       0000                    unimp
d0008708:       0000                    unimp
d000870a:       0000                    unimp
d000870c:       0000                    unimp
d000870e:       0000                    unimp
d0008710:       0000                    unimp
d0008712:       0000                    unimp
d0008714:       0000                    unimp
d0008716:       0000                    unimp
d0008718:       0000                    unimp
d000871a:       0000                    unimp
d000871c:       0000                    unimp
d000871e:       0000                    unimp
d0008720:       0000                    unimp
d0008722:       0000                    unimp
d0008724:       0000                    unimp
d0008726:       0000                    unimp
d0008728:       0000                    unimp
d000872a:       0000                    unimp
d000872c:       0000                    unimp
d000872e:       0000                    unimp
d0008730:       0000                    unimp
d0008732:       0000                    unimp
d0008734:       0000                    unimp
d0008736:       0000                    unimp
d0008738:       0000                    unimp
d000873a:       0000                    unimp
d000873c:       0000                    unimp
d000873e:       0000                    unimp
d0008740:       0000                    unimp
d0008742:       0000                    unimp
d0008744:       0000                    unimp
d0008746:       0000                    unimp
d0008748:       0000                    unimp
d000874a:       0000                    unimp
d000874c:       0000                    unimp
d000874e:       0000                    unimp
d0008750:       0000                    unimp
d0008752:       0000                    unimp
d0008754:       0000                    unimp
d0008756:       0000                    unimp
d0008758:       0000                    unimp
d000875a:       0000                    unimp
d000875c:       0000                    unimp
d000875e:       0000                    unimp
d0008760:       0000                    unimp
d0008762:       0000                    unimp
d0008764:       0000                    unimp
d0008766:       0000                    unimp
d0008768:       0000                    unimp
d000876a:       0000                    unimp
d000876c:       0000                    unimp
d000876e:       0000                    unimp
d0008770:       0000                    unimp
d0008772:       0000                    unimp
d0008774:       0000                    unimp
d0008776:       0000                    unimp
d0008778:       0000                    unimp
d000877a:       0000                    unimp
d000877c:       0000                    unimp
d000877e:       0000                    unimp
d0008780:       0000                    unimp
d0008782:       0000                    unimp
d0008784:       0000                    unimp
d0008786:       0000                    unimp
d0008788:       0000                    unimp
d000878a:       0000                    unimp
d000878c:       0000                    unimp
d000878e:       0000                    unimp
d0008790:       0000                    unimp
d0008792:       0000                    unimp
d0008794:       0000                    unimp
d0008796:       0000                    unimp
d0008798:       0000                    unimp
d000879a:       0000                    unimp
d000879c:       0000                    unimp
d000879e:       0000                    unimp
d00087a0:       0000                    unimp
d00087a2:       0000                    unimp
d00087a4:       0000                    unimp
d00087a6:       0000                    unimp
d00087a8:       0000                    unimp
d00087aa:       0000                    unimp
d00087ac:       0000                    unimp
d00087ae:       0000                    unimp
d00087b0:       0000                    unimp
d00087b2:       0000                    unimp
d00087b4:       0000                    unimp
d00087b6:       0000                    unimp
d00087b8:       0000                    unimp
d00087ba:       0000                    unimp
d00087bc:       0000                    unimp
d00087be:       0000                    unimp
d00087c0:       0000                    unimp
d00087c2:       0000                    unimp
d00087c4:       0000                    unimp
d00087c6:       0000                    unimp
d00087c8:       0000                    unimp
d00087ca:       0000                    unimp
d00087cc:       0000                    unimp
d00087ce:       0000                    unimp
d00087d0:       0000                    unimp
d00087d2:       0000                    unimp
d00087d4:       0000                    unimp
d00087d6:       0000                    unimp
d00087d8:       0000                    unimp
d00087da:       0000                    unimp
d00087dc:       0000                    unimp
d00087de:       0000                    unimp
d00087e0:       0000                    unimp
d00087e2:       0000                    unimp
d00087e4:       0000                    unimp
d00087e6:       0000                    unimp
d00087e8:       0000                    unimp
d00087ea:       0000                    unimp
d00087ec:       0000                    unimp
d00087ee:       0000                    unimp
d00087f0:       0000                    unimp
d00087f2:       0000                    unimp
d00087f4:       0000                    unimp
d00087f6:       0000                    unimp
d00087f8:       0000                    unimp
d00087fa:       0000                    unimp
d00087fc:       0000                    unimp
d00087fe:       0000                    unimp

Disassembly of section .text:

d0008800 <init_spi_host>:
init_spi_host():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:121
                   uint32_t peripheral_clock_freq_hz) {
d0008800:                 7179                  addi    sp,sp,-48
d0008802:                 d606                  sw      ra,44(sp)
d0008804:                 d422                  sw      s0,40(sp)
d0008806:                 d226                  sw      s1,36(sp)
d0008808:                 d04a                  sw      s2,32(sp)
d000880a:                 842a                  mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:123
      .spi_clock = peripheral_clock_freq_hz / 2,// 100, for tape out 1MHz, in sim 50MHz
d000880c:                 0015d513              srli    a0,a1,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:130
  CHECK_DIF_OK(dif_spi_host_configure(spi_host, config));
d0008810:                 c42a                  sw      a0,8(sp)
d0008812:                 c62e                  sw      a1,12(sp)
d0008814:                 01020537              lui     a0,0x1020
d0008818:                 20250513              addi    a0,a0,514 # 1020202 <_rom_ext_virtual_size+0xfe0202>
d000881c:                 c82a                  sw      a0,16(sp)
d000881e:                 10100513              li      a0,257
d0008822:                 00a11a23              sh      a0,20(sp)
d0008826:                 002c                  addi    a1,sp,8
d0008828:                 8522                  mv      a0,s0
d000882a:                 750030ef              jal     ra,d000bf7a <dif_spi_host_configure>
d000882e:                 00007917              auipc   s2,0x7
d0008832:                 e6290913              addi    s2,s2,-414 # d000f690 <kDeviceLogBypassUartAddress>
d0008836:       /-------- cd0d                  beqz    a0,d0008870 <init_spi_host+0x70>
d0008838:       |         84aa                  mv      s1,a0
d000883a:       |         00092503              lw      a0,0(s2)
d000883e:       |     /-- c901                  beqz    a0,d000884e <init_spi_host+0x4e>
d0008840:       |     |   00000513              li      a0,0
d0008844:       |     |   4585                  li      a1,1
d0008846:       |     |   8626                  mv      a2,s1
d0008848:       |     |   345030ef              jal     ra,d000c38c <base_log_internal_dv>
d000884c:       |  /--|-- a829                  j       d0008866 <init_spi_host+0x66>
d000884e:       |  |  \-> 00006597              auipc   a1,0x6
d0008852:       |  |      f7658593              addi    a1,a1,-138 # d000e7c4 <_text_end+0x1f0>
d0008856:       |  |      0028                  addi    a0,sp,8
d0008858:       |  |      4651                  li      a2,20
d000885a:       |  |      7dc050ef              jal     ra,d000e036 <memcpy>
d000885e:       |  |      0028                  addi    a0,sp,8
d0008860:       |  |      85a6                  mv      a1,s1
d0008862:       |  |      289030ef              jal     ra,d000c2ea <base_log_internal_core>
d0008866:       |  \----> 6531                  lui     a0,0xc
d0008868:       |         aad50513              addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d000886c:       |         1d3030ef              jal     ra,d000c23e <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:131
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(spi_host, /*enabled=*/true));
d0008870:       \-------> 4585                  li      a1,1
d0008872:                 8522                  mv      a0,s0
d0008874:                 788030ef              jal     ra,d000bffc <dif_spi_host_output_set_enabled>
d0008878:       /-------- cd0d                  beqz    a0,d00088b2 <init_spi_host+0xb2>
d000887a:       |         842a                  mv      s0,a0
d000887c:       |         00092503              lw      a0,0(s2)
d0008880:       |     /-- c901                  beqz    a0,d0008890 <init_spi_host+0x90>
d0008882:       |     |   01400513              li      a0,20
d0008886:       |     |   4585                  li      a1,1
d0008888:       |     |   8622                  mv      a2,s0
d000888a:       |     |   303030ef              jal     ra,d000c38c <base_log_internal_dv>
d000888e:       |  /--|-- a829                  j       d00088a8 <init_spi_host+0xa8>
d0008890:       |  |  \-> 00006597              auipc   a1,0x6
d0008894:       |  |      f4858593              addi    a1,a1,-184 # d000e7d8 <_text_end+0x204>
d0008898:       |  |      0028                  addi    a0,sp,8
d000889a:       |  |      4651                  li      a2,20
d000889c:       |  |      79a050ef              jal     ra,d000e036 <memcpy>
d00088a0:       |  |      0028                  addi    a0,sp,8
d00088a2:       |  |      85a2                  mv      a1,s0
d00088a4:       |  |      247030ef              jal     ra,d000c2ea <base_log_internal_core>
d00088a8:       |  \----> 6531                  lui     a0,0xc
d00088aa:       |         aad50513              addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d00088ae:       |         191030ef              jal     ra,d000c23e <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:132
}
d00088b2:       \-------> 5902                  lw      s2,32(sp)
d00088b4:                 5492                  lw      s1,36(sp)
d00088b6:                 5422                  lw      s0,40(sp)
d00088b8:                 50b2                  lw      ra,44(sp)
d00088ba:                 6145                  addi    sp,sp,48
d00088bc:                 8082                  ret

d00088be <spi_flash_load_data>:
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:134
void spi_flash_load_data(void){
d00088be:                    7125                       addi    sp,sp,-416
d00088c0:                    18112e23           sw      ra,412(sp)
d00088c4:                    18812c23           sw      s0,408(sp)
d00088c8:                    18912a23           sw      s1,404(sp)
d00088cc:                    19212823           sw      s2,400(sp)
d00088d0:                    19312623           sw      s3,396(sp)
d00088d4:                    19412423           sw      s4,392(sp)
d00088d8:                    19512223           sw      s5,388(sp)
d00088dc:                    19612023           sw      s6,384(sp)
d00088e0:                    17712e23           sw      s7,380(sp)
d00088e4:                    17812c23           sw      s8,376(sp)
d00088e8:                    17912a23           sw      s9,372(sp)
d00088ec:                    17a12823           sw      s10,368(sp)
d00088f0:                    17b12623           sw      s11,364(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:156
  CHECK_DIF_OK(dif_spi_host_init(mmio_region_from_addr(base_addr), &spi_host));
d00088f4:                    0fff9597           auipc   a1,0xfff9
d00088f8:                    75858593           addi    a1,a1,1880 # e000204c <spi_host>
d00088fc:                    c0300537           lui     a0,0xc0300
d0008900:                    456030ef           jal     ra,d000bd56 <dif_spi_host_init>
d0008904:                    00007597           auipc   a1,0x7
d0008908:                    d8c58593           addi    a1,a1,-628 # d000f690 <kDeviceLogBypassUartAddress>
d000890c:                    0005a903           lw      s2,0(a1)
d0008910:          /-------- cd05                       beqz    a0,d0008948 <spi_flash_load_data+0x8a>
d0008912:          |         842a                       mv      s0,a0
d0008914:          |     /-- 00090963           beqz    s2,d0008926 <spi_flash_load_data+0x68>
d0008918:          |     |   02800513           li      a0,40
d000891c:          |     |   4585                       li      a1,1
d000891e:          |     |   8622                       mv      a2,s0
d0008920:          |     |   26d030ef           jal     ra,d000c38c <base_log_internal_dv>
d0008924:          |  /--|-- a829                       j       d000893e <spi_flash_load_data+0x80>
d0008926:          |  |  \-> 00006597           auipc   a1,0x6
d000892a:          |  |      ec658593           addi    a1,a1,-314 # d000e7ec <_text_end+0x218>
d000892e:          |  |      1a08                       addi    a0,sp,304
d0008930:          |  |      4651                       li      a2,20
d0008932:          |  |      704050ef           jal     ra,d000e036 <memcpy>
d0008936:          |  |      1a08                       addi    a0,sp,304
d0008938:          |  |      85a2                       mv      a1,s0
d000893a:          |  |      1b1030ef           jal     ra,d000c2ea <base_log_internal_core>
d000893e:          |  \----> 6531                       lui     a0,0xc
d0008940:          |         aad50513           addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d0008944:          |         0fb030ef           jal     ra,d000c23e <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:157
  init_spi_host(&spi_host, (uint32_t)clkHz);
d0008948:          \-------> 0fff9b97           auipc   s7,0xfff9
d000894c:                    704b8b93           addi    s7,s7,1796 # e000204c <spi_host>
d0008950:                    05f5e537           lui     a0,0x5f5e
d0008954:                    10050593           addi    a1,a0,256 # 5f5e100 <_rom_ext_virtual_size+0x5f1e100>
d0008958:                    855e                       mv      a0,s7
d000895a:                    355d                       jal     d0008800 <init_spi_host>
d000895c:                    4401                       li      s0,0
d000895e:                    4c01                       li      s8,0
d0008960:                    ff0004b7           lui     s1,0xff000
d0008964:                    4d05                       li      s10,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:159
  *datapath = 1;
d0008966:                    01a4ae23           sw      s10,28(s1) # ff00001c <_stack_end+0x1efe001c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:160
  *address = 0;
d000896a:                    0004a623           sw      zero,12(s1)
d000896e:                    00193b13           seqz    s6,s2
d0008972:                    0fc00913           li      s2,252
d0008976:                    6541                       lui     a0,0x10
d0008978:                    f0050a13           addi    s4,a0,-256 # ff00 <_stack_size+0xbf00>
d000897c:                    03c00993           li      s3,60
d0008980:                    0a000d93           li      s11,160
d0008984:                    00006517           auipc   a0,0x6
d0008988:                    e7c50513           addi    a0,a0,-388 # d000e800 <_text_end+0x22c>
d000898c:                    c22a                       sw      a0,4(sp)
d000898e:                    6531                       lui     a0,0xc
d0008990:                    aad50a93           addi    s5,a0,-1363 # baad <_stack_size+0x7aad>
d0008994:                    03c00513           li      a0,60
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:162
  for(int j=0;j<num_iter;j++){
d0008998:                    c42a                       sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:163
     addr = j*sizeof(buf);
d000899a:       /----------> 032c0533           mul     a0,s8,s2
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
 * @param bitfield Bitfield to reverse bytes of.
 * @return `bitfield` with the order of bytes reversed.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t bitfield_byteswap32(uint32_t bitfield) {
  return __builtin_bswap32(bitfield);
d000899e:       |            00855593           srli    a1,a0,0x8
d00089a2:       |            0145f5b3           and     a1,a1,s4
d00089a6:       |            01855613           srli    a2,a0,0x18
d00089aa:       |            8dd1                       or      a1,a1,a2
d00089ac:       |            00851613           slli    a2,a0,0x8
d00089b0:       |            00ff06b7           lui     a3,0xff0
d00089b4:       |            8e75                       and     a2,a2,a3
d00089b6:       |            0562                       slli    a0,a0,0x18
d00089b8:       |            8d51                       or      a0,a0,a2
d00089ba:       |            00b56cb3           or      s9,a0,a1
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:165
     segments[0] = (dif_spi_host_segment_t) {
d00089be:       |            12110513           addi    a0,sp,289
d00089c2:       |            463d                       li      a2,15
d00089c4:       |            4581                       li      a1,0
d00089c6:       |            6f8050ef           jal     ra,d000e0be <memset>
d00089ca:       |            12012823           sw      zero,304(sp)
d00089ce:       |            454d                       li      a0,19
d00089d0:       |            12a10a23           sb      a0,308(sp)
d00089d4:       |            12110593           addi    a1,sp,289
d00089d8:       |            463d                       li      a2,15
d00089da:       |            13510513           addi    a0,sp,309
d00089de:       |            658050ef           jal     ra,d000e036 <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:169
     segments[1] = (dif_spi_host_segment_t) {
d00089e2:       |            15a12223           sw      s10,324(sp)
d00089e6:       |            14012423           sw      zero,328(sp)
d00089ea:       |            15a12623           sw      s10,332(sp)
d00089ee:       |            15912823           sw      s9,336(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:178
     segments[2] = (dif_spi_host_segment_t) {
d00089f2:       |            4511                       li      a0,4
d00089f4:       |            14a12c23           sw      a0,344(sp)
d00089f8:       |            14012e23           sw      zero,348(sp)
d00089fc:       |            0068                       addi    a0,sp,12
d00089fe:       |            16a12023           sw      a0,352(sp)
d0008a02:       |            17212223           sw      s2,356(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:188
     CHECK_DIF_OK(
d0008a06:       |            1a10                       addi    a2,sp,304
d0008a08:       |            468d                       li      a3,3
d0008a0a:       |            855e                       mv      a0,s7
d0008a0c:       |            4581                       li      a1,0
d0008a0e:       |            642030ef           jal     ra,d000c050 <dif_spi_host_transaction>
d0008a12:       |  /-------- c515                       beqz    a0,d0008a3e <spi_flash_load_data+0x180>
d0008a14:       |  |         8caa                       mv      s9,a0
d0008a16:       |  |     /-- 000b1863           bnez    s6,d0008a26 <spi_flash_load_data+0x168>
d0008a1a:       |  |     |   4585                       li      a1,1
d0008a1c:       |  |     |   4522                       lw      a0,8(sp)
d0008a1e:       |  |     |   8666                       mv      a2,s9
d0008a20:       |  |     |   16d030ef           jal     ra,d000c38c <base_log_internal_dv>
d0008a24:       |  |  /--|-- a811                       j       d0008a38 <spi_flash_load_data+0x17a>
d0008a26:       |  |  |  \-> 0228                       addi    a0,sp,264
d0008a28:       |  |  |      4651                       li      a2,20
d0008a2a:       |  |  |      4592                       lw      a1,4(sp)
d0008a2c:       |  |  |      60a050ef           jal     ra,d000e036 <memcpy>
d0008a30:       |  |  |      0228                       addi    a0,sp,264
d0008a32:       |  |  |      85e6                       mv      a1,s9
d0008a34:       |  |  |      0b7030ef           jal     ra,d000c2ea <base_log_internal_core>
d0008a38:       |  |  \----> 8556                       mv      a0,s5
d0008a3a:       |  |         005030ef           jal     ra,d000c23e <test_status_set>
d0008a3e:       |  \-------> 5575                       li      a0,-3
d0008a40:       |            080c                       addi    a1,sp,16
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:193
         *payload_1 = buf[i];
d0008a42:       |        /-> ffc5a603           lw      a2,-4(a1)
d0008a46:       |        |   c090                       sw      a2,0(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:194
         *payload_2 = buf[i+1];
d0008a48:       |        |   4190                       lw      a2,0(a1)
d0008a4a:       |        |   c0d0                       sw      a2,4(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:195
         *payload_3 = buf[i+2];
d0008a4c:       |        |   41d0                       lw      a2,4(a1)
d0008a4e:       |        |   c490                       sw      a2,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:196
         *address   = index;
d0008a50:       |        |   c4c0                       sw      s0,12(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:197
         *start = 0x1;
d0008a52:       |        |   01a4a823           sw      s10,16(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:198
         index++;
d0008a56:       |        |   0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:191
     for(int i = 0; i < buf_size; i += 3) {
d0008a58:       |        |   050d                       addi    a0,a0,3
d0008a5a:       |        |   05b1                       addi    a1,a1,12
d0008a5c:       |        \-- ff3563e3           bltu    a0,s3,d0008a42 <spi_flash_load_data+0x184>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:162
  for(int j=0;j<num_iter;j++){
d0008a60:       |            0c05                       addi    s8,s8,1
d0008a62:       \----------- f3bc1ce3           bne     s8,s11,d000899a <spi_flash_load_data+0xdc>
d0008a66:                    ff000537           lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:203
  *datapath = 0;  
d0008a6a:                    00052e23           sw      zero,28(a0) # ff00001c <_stack_end+0x1efe001c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:204
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(&spi_host, false));
d0008a6e:                    0fff9517           auipc   a0,0xfff9
d0008a72:                    5de50513           addi    a0,a0,1502 # e000204c <spi_host>
d0008a76:                    4581                       li      a1,0
d0008a78:                    584030ef           jal     ra,d000bffc <dif_spi_host_output_set_enabled>
d0008a7c:          /-------- cd05                       beqz    a0,d0008ab4 <spi_flash_load_data+0x1f6>
d0008a7e:          |         842a                       mv      s0,a0
d0008a80:          |     /-- 000b1963           bnez    s6,d0008a92 <spi_flash_load_data+0x1d4>
d0008a84:          |     |   05000513           li      a0,80
d0008a88:          |     |   4585                       li      a1,1
d0008a8a:          |     |   8622                       mv      a2,s0
d0008a8c:          |     |   101030ef           jal     ra,d000c38c <base_log_internal_dv>
d0008a90:          |  /--|-- a829                       j       d0008aaa <spi_flash_load_data+0x1ec>
d0008a92:          |  |  \-> 00006597           auipc   a1,0x6
d0008a96:          |  |      d8258593           addi    a1,a1,-638 # d000e814 <_text_end+0x240>
d0008a9a:          |  |      0228                       addi    a0,sp,264
d0008a9c:          |  |      4651                       li      a2,20
d0008a9e:          |  |      598050ef           jal     ra,d000e036 <memcpy>
d0008aa2:          |  |      0228                       addi    a0,sp,264
d0008aa4:          |  |      85a2                       mv      a1,s0
d0008aa6:          |  |      045030ef           jal     ra,d000c2ea <base_log_internal_core>
d0008aaa:          |  \----> 6531                       lui     a0,0xc
d0008aac:          |         aad50513           addi    a0,a0,-1363 # baad <_stack_size+0x7aad>
d0008ab0:          |         78e030ef           jal     ra,d000c23e <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:205
}
d0008ab4:          \-------> 16c12d83           lw      s11,364(sp)
d0008ab8:                    17012d03           lw      s10,368(sp)
d0008abc:                    17412c83           lw      s9,372(sp)
d0008ac0:                    17812c03           lw      s8,376(sp)
d0008ac4:                    17c12b83           lw      s7,380(sp)
d0008ac8:                    18012b03           lw      s6,384(sp)
d0008acc:                    18412a83           lw      s5,388(sp)
d0008ad0:                    18812a03           lw      s4,392(sp)
d0008ad4:                    18c12983           lw      s3,396(sp)
d0008ad8:                    19012903           lw      s2,400(sp)
d0008adc:                    19412483           lw      s1,404(sp)
d0008ae0:                    19812403           lw      s0,408(sp)
d0008ae4:                    19c12083           lw      ra,412(sp)
d0008ae8:                    611d                       addi    sp,sp,416
d0008aea:                    8082                       ret

d0008aec <rom_main>:
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
void rom_main(void) {
d0008aec:                 1101                  addi    sp,sp,-32
d0008aee:                 ce06                  sw      ra,28(sp)
d0008af0:                 cc22                  sw      s0,24(sp)
d0008af2:                 ca26                  sw      s1,20(sp)
d0008af4:                 c84a                  sw      s2,16(sp)
d0008af6:                 c64e                  sw      s3,12(sp)
d0008af8:                 c452                  sw      s4,8(sp)
d0008afa:                 c256                  sw      s5,4(sp)
d0008afc:                 c1418a93              addi    s5,gp,-1004 # e000245c <rom_counters>
d0008b00:                 1a500513              li      a0,421
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:527
  CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomMain);
d0008b04:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:528
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 1, kCfiRomInit);
d0008b08:                 000aa583              lw      a1,0(s5)
d0008b0c:             /-- 00a58663              beq     a1,a0,d0008b18 <rom_main+0x2c>
d0008b10:             |   0000                  unimp
d0008b12:             |   0000                  unimp
d0008b14:             |   0000                  unimp
d0008b16:             |   0000                  unimp
d0008b18:             \-> 000aa503              lw      a0,0(s5)
d0008b1c:                 05a50513              addi    a0,a0,90
d0008b20:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
 * loop; however, the barriers in each loop iteration force a particular order
 * is observed.
 *
 * @param val A value to create a barrier for.
 */
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008b24:                 6505                  lui     a0,0x1
d0008b26:                 83650513              addi    a0,a0,-1994 # 836 <_epmp_reset_rx_size+0x36>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:528
d0008b2a:                 00aaa223              sw      a0,4(s5)
d0008b2e:                 000aa583              lw      a1,0(s5)
d0008b32:                 1ff00613              li      a2,511
d0008b36:             /-- 00c58663              beq     a1,a2,d0008b42 <rom_main+0x56>
d0008b3a:             |   0000                  unimp
d0008b3c:             |   0000                  unimp
d0008b3e:             |   0000                  unimp
d0008b40:             |   0000                  unimp
d0008b42:             \-> 000aa583              lw      a1,0(s5)
d0008b46:                 05a58593              addi    a1,a1,90
d0008b4a:                 00baa023              sw      a1,0(s5)
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:211
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 1);
d0008b4e:                 004aa583              lw      a1,4(s5)
d0008b52:             /-- 00a58663              beq     a1,a0,d0008b5e <rom_main+0x72>
d0008b56:             |   0000                  unimp
d0008b58:             |   0000                  unimp
d0008b5a:             |   0000                  unimp
d0008b5c:             |   0000                  unimp
d0008b5e:             \-> 004aa503              lw      a0,4(s5)
d0008b62:                 05a50513              addi    a0,a0,90
d0008b66:                 00aaa223              sw      a0,4(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:212
  sec_mmio_init();
d0008b6a:                 268050ef              jal     ra,d000ddd2 <sec_mmio_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:214
  pinmux_init();
d0008b6e:                 763020ef              jal     ra,d000bad0 <pinmux_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:216
  uart_init(kUartNCOValue);
d0008b72:                 00007517              auipc   a0,0x7
d0008b76:                 b0e50513              addi    a0,a0,-1266 # d000f680 <kUartNCOValue>
d0008b7a:                 4108                  lw      a0,0(a0)
d0008b7c:                 010030ef              jal     ra,d000bb8c <uart_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:221
  CSR_WRITE(CSR_REG_SECURESEED, rnd_uint32());
d0008b80:                 561040ef              jal     ra,d000d8e0 <rnd_uint32>
d0008b84:                 7c151073              csrw    0x7c1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:225
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d0008b88:                 7c002473              csrr    s0,0x7c0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:228
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET));
d0008b8c:                 10c00513              li      a0,268
d0008b90:                 23a050ef              jal     ra,d000ddca <otp_read32>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d0008b94:                 fc047593              andi    a1,s0,-64
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d0008b98:                 03f57513              andi    a0,a0,63
d0008b9c:                 8d4d                  or      a0,a0,a1
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:229
  CSR_WRITE(CSR_REG_CPUCTRL, cpuctrl_csr);
d0008b9e:                 7c051073              csrw    0x7c0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:231
  lc_state = lifecycle_state_get();
d0008ba2:                 016050ef              jal     ra,d000dbb8 <lifecycle_state_get>
d0008ba6:                 0fff9417              auipc   s0,0xfff9
d0008baa:                 4a240413              addi    s0,s0,1186 # e0002048 <lc_state>
d0008bae:                 c008                  sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:234
  rom_epmp_config_debug_rom(lc_state);
d0008bb0:                 07a040ef              jal     ra,d000cc2a <rom_epmp_config_debug_rom>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:237
  watchdog_init(lc_state);
d0008bb4:                 4008                  lw      a0,0(s0)
d0008bb6:                 020030ef              jal     ra,d000bbd6 <watchdog_init>
d0008bba:                 0fff7497              auipc   s1,0xfff7
d0008bbe:                 4ba48493              addi    s1,s1,1210 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:238
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bc2:                 448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:241
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008bc4:                 4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:238
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bc6:                 0591                  addi    a1,a1,4
d0008bc8:                 c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:241
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008bca:                 141010ef              jal     ra,d000a50a <shutdown_init>
d0008bce:                 8a2a                  mv      s4,a0
d0008bd0:                 73900993              li      s3,1849
d0008bd4:       /-------- 09351f63              bne     a0,s3,d0008c72 <rom_main+0x186>
d0008bd8:       |     /-- 013a0663              beq     s4,s3,d0008be4 <rom_main+0xf8>
d0008bdc:       |     |   0000                  unimp
d0008bde:       |     |   0000                  unimp
d0008be0:       |     |   0000                  unimp
d0008be2:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:243
  flash_ctrl_init();
d0008be4:       |     \-> 2f0020ef              jal     ra,d000aed4 <flash_ctrl_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:244
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008be8:       |         448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:247
  rom_epmp_state_init(lc_state);
d0008bea:       |         4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:244
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008bec:       |         058d                  addi    a1,a1,3
d0008bee:       |         c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:247
  rom_epmp_state_init(lc_state);
d0008bf0:       |         685030ef              jal     ra,d000ca74 <rom_epmp_state_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:250
  HARDENED_RETURN_IF_ERROR(ast_check(lc_state));
d0008bf4:       |         4008                  lw      a0,0(s0)
d0008bf6:       |         1c0020ef              jal     ra,d000adb6 <ast_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008bfa:       |         85aa                  mv      a1,a0
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:250
d0008bfc:       |  /----- 07359a63              bne     a1,s3,d0008c70 <rom_main+0x184>
d0008c00:       |  |      73900a13              li      s4,1849
d0008c04:       |  |  /-- 01450663              beq     a0,s4,d0008c10 <rom_main+0x124>
d0008c08:       |  |  |   0000                  unimp
d0008c0a:       |  |  |   0000                  unimp
d0008c0c:       |  |  |   0000                  unimp
d0008c0e:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:254
  uint32_t reset_reasons = rstmgr_reason_get();
d0008c10:       |  |  \-> 731020ef              jal     ra,d000bb40 <rstmgr_reason_get>
d0008c14:       |  |      892a                  mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:257
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RET_RAM_RESET_MASK_OFFSET);
d0008c16:       |  |      10000513              li      a0,256
d0008c1a:       |  |      1b0050ef              jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:256
      (1 << kRstmgrReasonPowerOn) |
d0008c1e:       |  |      00156513              ori     a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:258
  if ((reset_reasons & reset_mask) != 0) {
d0008c22:       |  |      01257533              and     a0,a0,s2
d0008c26:       |  |  /-- c119                  beqz    a0,d0008c2c <rom_main+0x140>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:259
    retention_sram_init();
d0008c28:       |  |  |   70f020ef              jal     ra,d000bb36 <retention_sram_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:262
  retention_sram_get()->reset_reasons = reset_reasons;
d0008c2c:       |  |  \-> 705020ef              jal     ra,d000bb30 <retention_sram_get>
d0008c30:       |  |      01252023              sw      s2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:263
  rstmgr_reason_clear(reset_reasons);
d0008c34:       |  |      854a                  mv      a0,s2
d0008c36:       |  |      73f020ef              jal     ra,d000bb74 <rstmgr_reason_clear>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:266
  device_fpga_version_print();
d0008c3a:       |  |      6fe050ef              jal     ra,d000e338 <device_fpga_version_print>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:268
  sec_mmio_check_values(rnd_uint32());
d0008c3e:       |  |      4a3040ef              jal     ra,d000d8e0 <rnd_uint32>
d0008c42:       |  |      338050ef              jal     ra,d000df7a <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:269
  sec_mmio_check_counters(/*expected_check_count=*/1);
d0008c46:       |  |      4505                  li      a0,1
d0008c48:       |  |      3a2050ef              jal     ra,d000dfea <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:271
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 2);
d0008c4c:       |  |      004aa503              lw      a0,4(s5)
d0008c50:       |  |      6585                  lui     a1,0x1
d0008c52:       |  |      89058593              addi    a1,a1,-1904 # 890 <_epmp_reset_rx_size+0x90>
d0008c56:       |  |  /-- 00b50663              beq     a0,a1,d0008c62 <rom_main+0x176>
d0008c5a:       |  |  |   0000                  unimp
d0008c5c:       |  |  |   0000                  unimp
d0008c5e:       |  |  |   0000                  unimp
d0008c60:       |  |  |   0000                  unimp
d0008c62:       |  |  \-> 004aa503              lw      a0,4(s5)
d0008c66:       |  |      05a50513              addi    a0,a0,90
d0008c6a:       |  |      00aaa223              sw      a0,4(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008c6e:       +--|----- a011                  j       d0008c72 <rom_main+0x186>
d0008c70:       |  \----> 8a2a                  mv      s4,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008c72:       \-------> 8552                  mv      a0,s4
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:530
  SHUTDOWN_IF_ERROR(rom_init());
d0008c74:       /-------- 09351c63              bne     a0,s3,d0008d0c <rom_main+0x220>
d0008c78:       |         73900913              li      s2,1849
d0008c7c:       |     /-- 012a0663              beq     s4,s2,d0008c88 <rom_main+0x19c>
d0008c80:       |     |   0000                  unimp
d0008c82:       |     |   0000                  unimp
d0008c84:       |     |   0000                  unimp
d0008c86:       |     |   0000                  unimp
d0008c88:       |     \-> ff000537              lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:533
  if(*pad_bootmode == 0x1){
d0008c8c:       |         4948                  lw      a0,20(a0)
d0008c8e:       |         4585                  li      a1,1
d0008c90:       |     /-- 00b51963              bne     a0,a1,d0008ca2 <rom_main+0x1b6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:534
    rom_printf("Loading rom_ext from extenal SPI flash\r\n");
d0008c94:       |     |   00006517              auipc   a0,0x6
d0008c98:       |     |   ae950513              addi    a0,a0,-1303 # d000e77d <_text_end+0x1a9>
d0008c9c:       |     |   359010ef              jal     ra,d000a7f4 <rom_printf>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:535
    spi_flash_load_data();
d0008ca0:       |     |   3939                  jal     d00088be <spi_flash_load_data>
rom_bootstrap_message():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:117
  rom_printf("Bootin some fresh cochina!\r\n");
d0008ca2:       |     \-> 00006517              auipc   a0,0x6
d0008ca6:       |         b0450513              addi    a0,a0,-1276 # d000e7a6 <_text_end+0x1d2>
d0008caa:       |         34b010ef              jal     ra,d000a7f4 <rom_printf>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:540
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomMain, 3);
d0008cae:       |         000aa503              lw      a0,0(s5)
d0008cb2:       |         25900593              li      a1,601
d0008cb6:       |     /-- 00b50663              beq     a0,a1,d0008cc2 <rom_main+0x1d6>
d0008cba:       |     |   0000                  unimp
d0008cbc:       |     |   0000                  unimp
d0008cbe:       |     |   0000                  unimp
d0008cc0:       |     |   0000                  unimp
d0008cc2:       |     \-> 000aa503              lw      a0,0(s5)
d0008cc6:       |         05a50513              addi    a0,a0,90
d0008cca:       |         00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:541
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomInit, 3);
d0008cce:       |         004aa503              lw      a0,4(s5)
d0008cd2:       |         6585                  lui     a1,0x1
d0008cd4:       |         8ea58593              addi    a1,a1,-1814 # 8ea <_epmp_reset_rx_size+0xea>
d0008cd8:       |     /-- 00b50663              beq     a0,a1,d0008ce4 <rom_main+0x1f8>
d0008cdc:       |     |   0000                  unimp
d0008cde:       |     |   0000                  unimp
d0008ce0:       |     |   0000                  unimp
d0008ce2:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:543
  hardened_bool_t bootstrap_req = bootstrap_requested();
d0008ce4:       |     \-> 6c5000ef              jal     ra,d0009ba8 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008ce8:       |         85aa                  mv      a1,a0
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:544
  if (launder32(bootstrap_req) == kHardenedBoolTrue) {
d0008cea:       |  /----- 03259463              bne     a1,s2,d0008d12 <rom_main+0x226>
d0008cee:       |  |      73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:545
    HARDENED_CHECK_EQ(bootstrap_req, kHardenedBoolTrue);
d0008cf2:       |  |  /-- 00b50663              beq     a0,a1,d0008cfe <rom_main+0x212>
d0008cf6:       |  |  |   0000                  unimp
d0008cf8:       |  |  |   0000                  unimp
d0008cfa:       |  |  |   0000                  unimp
d0008cfc:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:546
    rom_bootstrap_message();
d0008cfe:       |  |  \-> 208d                  jal     d0008d60 <rom_bootstrap_message>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:547
    watchdog_disable();
d0008d00:       |  |      04a030ef              jal     ra,d000bd4a <watchdog_disable>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:548
    shutdown_finalize(bootstrap());
d0008d04:       |  |      6fb000ef              jal     ra,d0009bfe <bootstrap>
d0008d08:       |  |      634050ef              jal     ra,d000e33c <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:530
  SHUTDOWN_IF_ERROR(rom_init());
d0008d0c:       \--|----> 8552                  mv      a0,s4
d0008d0e:          |      62e050ef              jal     ra,d000e33c <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:552
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 4, kCfiRomTryBoot);
d0008d12:          \----> 000aa503              lw      a0,0(s5)
d0008d16:                 2b300593              li      a1,691
d0008d1a:             /-- 00b50663              beq     a0,a1,d0008d26 <rom_main+0x23a>
d0008d1e:             |   0000                  unimp
d0008d20:             |   0000                  unimp
d0008d22:             |   0000                  unimp
d0008d24:             |   0000                  unimp
d0008d26:             \-> 000aa503              lw      a0,0(s5)
d0008d2a:                 05a50513              addi    a0,a0,90
d0008d2e:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008d32:                 28f00513              li      a0,655
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:552
d0008d36:                 00aaa623              sw      a0,12(s5)
d0008d3a:                 000aa503              lw      a0,0(s5)
d0008d3e:                 30d00593              li      a1,781
d0008d42:             /-- 00b50663              beq     a0,a1,d0008d4e <rom_main+0x262>
d0008d46:             |   0000                  unimp
d0008d48:             |   0000                  unimp
d0008d4a:             |   0000                  unimp
d0008d4c:             |   0000                  unimp
d0008d4e:             \-> 000aa503              lw      a0,0(s5)
d0008d52:                 05a50513              addi    a0,a0,90
d0008d56:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:555
  shutdown_finalize(rom_try_boot());
d0008d5a:                 2809                  jal     d0008d6c <rom_try_boot>
d0008d5c:                 5e0050ef              jal     ra,d000e33c <shutdown_finalize>

d0008d60 <rom_bootstrap_message>:
rom_bootstrap_message():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:117
  rom_printf("Bootin some fresh cochina!\r\n");
d0008d60:       00006517                auipc   a0,0x6
d0008d64:       a4650513                addi    a0,a0,-1466 # d000e7a6 <_text_end+0x1d2>
d0008d68:       28d0106f                j       d000a7f4 <rom_printf>

d0008d6c <rom_try_boot>:
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:491
static rom_error_t rom_try_boot(void) {
d0008d6c:                    1101                       addi    sp,sp,-32
d0008d6e:                    ce06                       sw      ra,28(sp)
d0008d70:                    cc22                       sw      s0,24(sp)
d0008d72:                    ca26                       sw      s1,20(sp)
d0008d74:                    c84a                       sw      s2,16(sp)
d0008d76:                    c64e                       sw      s3,12(sp)
d0008d78:                    c452                       sw      s4,8(sp)
d0008d7a:                    c256                       sw      s5,4(sp)
d0008d7c:                    c1418413           addi    s0,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:492
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 1);
d0008d80:                    4448                       lw      a0,12(s0)
d0008d82:                    28f00593           li      a1,655
d0008d86:                /-- 00b50663           beq     a0,a1,d0008d92 <rom_try_boot+0x26>
d0008d8a:                |   0000                       unimp
d0008d8c:                |   0000                       unimp
d0008d8e:                |   0000                       unimp
d0008d90:                |   0000                       unimp
d0008d92:                \-> 4448                       lw      a0,12(s0)
d0008d94:                    05a50513           addi    a0,a0,90
d0008d98:                    c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
  HARDENED_RETURN_IF_ERROR(boot_data_read(lc_state, &boot_data));
d0008d9a:                    0fff9517           auipc   a0,0xfff9
d0008d9e:                    2ae50513           addi    a0,a0,686 # e0002048 <lc_state>
d0008da2:                    4108                       lw      a0,0(a0)
d0008da4:                    c3018593           addi    a1,gp,-976 # e0002478 <boot_data>
d0008da8:                    7e2000ef           jal     ra,d000958a <boot_data_read>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008dac:                    85aa                       mv      a1,a0
d0008dae:                    73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
d0008db2:       /----------- 1c959663           bne     a1,s1,d0008f7e <rom_try_boot+0x212>
d0008db6:       |        /-- 00950663           beq     a0,s1,d0008dc2 <rom_try_boot+0x56>
d0008dba:       |        |   0000                       unimp
d0008dbc:       |        |   0000                       unimp
d0008dbe:       |        |   0000                       unimp
d0008dc0:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:497
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008dc2:       |        \-> 25ed                       jal     d00094ac <boot_policy_manifests_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:500
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008dc4:       |            4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:498
  uint32_t flash_exec = 0;
d0008dc6:       |            c002                       sw      zero,0(sp)
d0008dc8:       |            2e900993           li      s3,745
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:500
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008dcc:       |        /-- 01360663           beq     a2,s3,d0008dd8 <rom_try_boot+0x6c>
d0008dd0:       |        |   0000                       unimp
d0008dd2:       |        |   0000                       unimp
d0008dd4:       |        |   0000                       unimp
d0008dd6:       |        |   0000                       unimp
d0008dd8:       |        \-> 4450                       lw      a2,12(s0)
d0008dda:       |            05a60613           addi    a2,a2,90
d0008dde:       |            c450                       sw      a2,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008de0:       |            60100a93           li      s5,1537
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:500
d0008de4:       |            01542423           sw      s5,8(s0)
d0008de8:       |            4450                       lw      a2,12(s0)
d0008dea:       |            34300693           li      a3,835
d0008dee:       |        /-- 00d60663           beq     a2,a3,d0008dfa <rom_try_boot+0x8e>
d0008df2:       |        |   0000                       unimp
d0008df4:       |        |   0000                       unimp
d0008df6:       |        |   0000                       unimp
d0008df8:       |        |   0000                       unimp
d0008dfa:       |        \-> 4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:497
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008dfc:       |            8a2a                       mv      s4,a0
d0008dfe:       |            892e                       mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:500
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008e00:       |            05a60513           addi    a0,a2,90
d0008e04:       |            c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:501
  rom_error_t error = rom_verify(manifests.ordered[0], &flash_exec);
d0008e06:       |            858a                       mv      a1,sp
d0008e08:       |            8552                       mv      a0,s4
d0008e0a:       |            2259                       jal     d0008f90 <rom_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:502
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 4);
d0008e0c:       |            444c                       lw      a1,12(s0)
d0008e0e:       |            39d00613           li      a2,925
d0008e12:       |        /-- 00c58663           beq     a1,a2,d0008e1e <rom_try_boot+0xb2>
d0008e16:       |        |   0000                       unimp
d0008e18:       |        |   0000                       unimp
d0008e1a:       |        |   0000                       unimp
d0008e1c:       |        |   0000                       unimp
d0008e1e:       |        \-> 444c                       lw      a1,12(s0)
d0008e20:       |            05a58593           addi    a1,a1,90
d0008e24:       |            c44c                       sw      a1,12(s0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008e26:       |            85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:504
  if (launder32(error) == kErrorOk) {
d0008e28:       |     /----- 06959c63           bne     a1,s1,d0008ea0 <rom_try_boot+0x134>
d0008e2c:       |     |      73900493           li      s1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:505
    HARDENED_CHECK_EQ(error, kErrorOk);
d0008e30:       |     |  /-- 00950663           beq     a0,s1,d0008e3c <rom_try_boot+0xd0>
d0008e34:       |     |  |   0000                       unimp
d0008e36:       |     |  |   0000                       unimp
d0008e38:       |     |  |   0000                       unimp
d0008e3a:       |     |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:506
    CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008e3c:       |     |  \-> 4408                       lw      a0,8(s0)
d0008e3e:       |     |      6b500593           li      a1,1717
d0008e42:       |     |  /-- 00b50663           beq     a0,a1,d0008e4e <rom_try_boot+0xe2>
d0008e46:       |     |  |   0000                       unimp
d0008e48:       |     |  |   0000                       unimp
d0008e4a:       |     |  |   0000                       unimp
d0008e4c:       |     |  |   0000                       unimp
d0008e4e:       |     |  \-> 28f00513           li      a0,655
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:507
    CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomTryBoot);
d0008e52:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:508
    CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 1, kCfiRomBoot);
d0008e54:       |     |      444c                       lw      a1,12(s0)
d0008e56:       |     |  /-- 00a58663           beq     a1,a0,d0008e62 <rom_try_boot+0xf6>
d0008e5a:       |     |  |   0000                       unimp
d0008e5c:       |     |  |   0000                       unimp
d0008e5e:       |     |  |   0000                       unimp
d0008e60:       |     |  |   0000                       unimp
d0008e62:       |     |  \-> 4448                       lw      a0,12(s0)
d0008e64:       |     |      05a50513           addi    a0,a0,90
d0008e68:       |     |      c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008e6a:       |     |      33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:508
d0008e6e:       |     |      c848                       sw      a0,20(s0)
d0008e70:       |     |      4448                       lw      a0,12(s0)
d0008e72:       |     |  /-- 01350663           beq     a0,s3,d0008e7e <rom_try_boot+0x112>
d0008e76:       |     |  |   0000                       unimp
d0008e78:       |     |  |   0000                       unimp
d0008e7a:       |     |  |   0000                       unimp
d0008e7c:       |     |  |   0000                       unimp
d0008e7e:       |     |  \-> 4448                       lw      a0,12(s0)
d0008e80:       |     |      05a50513           addi    a0,a0,90
d0008e84:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:509
    HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[0], flash_exec));
d0008e86:       |     |      4582                       lw      a1,0(sp)
d0008e88:       |     |      8552                       mv      a0,s4
d0008e8a:       |     |      2c91                       jal     d00090de <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008e8c:       |     |      85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:509
d0008e8e:       +-----|----- 0e959863           bne     a1,s1,d0008f7e <rom_try_boot+0x212>
d0008e92:       |     |  /-- 00950663           beq     a0,s1,d0008e9e <rom_try_boot+0x132>
d0008e96:       |     |  |   0000                       unimp
d0008e98:       |     |  |   0000                       unimp
d0008e9a:       |     |  |   0000                       unimp
d0008e9c:       |     |  |   0000                       unimp
d0008e9e:       |  /--|--\-X a8e1                       j       d0008f76 <rom_try_boot+0x20a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:512
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 5, kCfiRomVerify);
d0008ea0:       |  |  \----> 4448                       lw      a0,12(s0)
d0008ea2:       |  |         3f700593           li      a1,1015
d0008ea6:       |  |     /-- 00b50663           beq     a0,a1,d0008eb2 <rom_try_boot+0x146>
d0008eaa:       |  |     |   0000                       unimp
d0008eac:       |  |     |   0000                       unimp
d0008eae:       |  |     |   0000                       unimp
d0008eb0:       |  |     |   0000                       unimp
d0008eb2:       |  |     \-> 4448                       lw      a0,12(s0)
d0008eb4:       |  |         05a50513           addi    a0,a0,90
d0008eb8:       |  |         c448                       sw      a0,12(s0)
d0008eba:       |  |         01542423           sw      s5,8(s0)
d0008ebe:       |  |         4448                       lw      a0,12(s0)
d0008ec0:       |  |         45100593           li      a1,1105
d0008ec4:       |  |     /-- 00b50663           beq     a0,a1,d0008ed0 <rom_try_boot+0x164>
d0008ec8:       |  |     |   0000                       unimp
d0008eca:       |  |     |   0000                       unimp
d0008ecc:       |  |     |   0000                       unimp
d0008ece:       |  |     |   0000                       unimp
d0008ed0:       |  |     \-> 4448                       lw      a0,12(s0)
d0008ed2:       |  |         05a50513           addi    a0,a0,90
d0008ed6:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:513
  HARDENED_RETURN_IF_ERROR(rom_verify(manifests.ordered[1], &flash_exec));
d0008ed8:       |  |         858a                       mv      a1,sp
d0008eda:       |  |         854a                       mv      a0,s2
d0008edc:       |  |         2855                       jal     d0008f90 <rom_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008ede:       |  |         85aa                       mv      a1,a0
d0008ee0:       |  |         73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:513
d0008ee4:       +--|-------- 08959d63           bne     a1,s1,d0008f7e <rom_try_boot+0x212>
d0008ee8:       |  |     /-- 00950663           beq     a0,s1,d0008ef4 <rom_try_boot+0x188>
d0008eec:       |  |     |   0000                       unimp
d0008eee:       |  |     |   0000                       unimp
d0008ef0:       |  |     |   0000                       unimp
d0008ef2:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 7);
d0008ef4:       |  |     \-> 4448                       lw      a0,12(s0)
d0008ef6:       |  |         4ab00593           li      a1,1195
d0008efa:       |  |     /-- 00b50663           beq     a0,a1,d0008f06 <rom_try_boot+0x19a>
d0008efe:       |  |     |   0000                       unimp
d0008f00:       |  |     |   0000                       unimp
d0008f02:       |  |     |   0000                       unimp
d0008f04:       |  |     |   0000                       unimp
d0008f06:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f08:       |  |         05a50513           addi    a0,a0,90
d0008f0c:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:515
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008f0e:       |  |         4408                       lw      a0,8(s0)
d0008f10:       |  |         6b500593           li      a1,1717
d0008f14:       |  |     /-- 00b50663           beq     a0,a1,d0008f20 <rom_try_boot+0x1b4>
d0008f18:       |  |     |   0000                       unimp
d0008f1a:       |  |     |   0000                       unimp
d0008f1c:       |  |     |   0000                       unimp
d0008f1e:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:517
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 8, kCfiRomBoot);
d0008f20:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f22:       |  |         50500593           li      a1,1285
d0008f26:       |  |     /-- 00b50663           beq     a0,a1,d0008f32 <rom_try_boot+0x1c6>
d0008f2a:       |  |     |   0000                       unimp
d0008f2c:       |  |     |   0000                       unimp
d0008f2e:       |  |     |   0000                       unimp
d0008f30:       |  |     |   0000                       unimp
d0008f32:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f34:       |  |         05a50513           addi    a0,a0,90
d0008f38:       |  |         c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008f3a:       |  |         33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:517
d0008f3e:       |  |         c848                       sw      a0,20(s0)
d0008f40:       |  |         4448                       lw      a0,12(s0)
d0008f42:       |  |         55f00593           li      a1,1375
d0008f46:       |  |     /-- 00b50663           beq     a0,a1,d0008f52 <rom_try_boot+0x1e6>
d0008f4a:       |  |     |   0000                       unimp
d0008f4c:       |  |     |   0000                       unimp
d0008f4e:       |  |     |   0000                       unimp
d0008f50:       |  |     |   0000                       unimp
d0008f52:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f54:       |  |         05a50513           addi    a0,a0,90
d0008f58:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:518
  HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[1], flash_exec));
d0008f5a:       |  |         4582                       lw      a1,0(sp)
d0008f5c:       |  |         854a                       mv      a0,s2
d0008f5e:       |  |         2241                       jal     d00090de <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008f60:       |  |         85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:518
d0008f62:       +--|-------- 00959e63           bne     a1,s1,d0008f7e <rom_try_boot+0x212>
d0008f66:       |  |         73900593           li      a1,1849
d0008f6a:       |  +-------- 00b50663           beq     a0,a1,d0008f76 <rom_try_boot+0x20a>
d0008f6e:       |  |         0000                       unimp
d0008f70:       |  |         0000                       unimp
d0008f72:       |  |         0000                       unimp
d0008f74:       |  |         0000                       unimp
d0008f76:       |  \-------> 014d5537           lui     a0,0x14d5
d0008f7a:       |            20950513           addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1495209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:520
}
d0008f7e:       \----------> 4a92                       lw      s5,4(sp)
d0008f80:                    4a22                       lw      s4,8(sp)
d0008f82:                    49b2                       lw      s3,12(sp)
d0008f84:                    4942                       lw      s2,16(sp)
d0008f86:                    44d2                       lw      s1,20(sp)
d0008f88:                    4462                       lw      s0,24(sp)
d0008f8a:                    40f2                       lw      ra,28(sp)
d0008f8c:                    6105                       addi    sp,sp,32
d0008f8e:                    8082                       ret

d0008f90 <rom_verify>:
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:286
                              uint32_t *flash_exec) {
d0008f90:              7119                     addi    sp,sp,-128
d0008f92:              de86                     sw      ra,124(sp)
d0008f94:              dca2                     sw      s0,120(sp)
d0008f96:              daa6                     sw      s1,116(sp)
d0008f98:              d8ca                     sw      s2,112(sp)
d0008f9a:              d6ce                     sw      s3,108(sp)
d0008f9c:              d4d2                     sw      s4,104(sp)
d0008f9e:              d2d6                     sw      s5,100(sp)
d0008fa0:              d0da                     sw      s6,96(sp)
d0008fa2:              c1418413                 addi    s0,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:287
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 1);
d0008fa6:              4410                     lw      a2,8(s0)
d0008fa8:              60100693                 li      a3,1537
d0008fac:          /-- 00d60663                 beq     a2,a3,d0008fb8 <rom_verify+0x28>
d0008fb0:          |   0000                     unimp
d0008fb2:          |   0000                     unimp
d0008fb4:          |   0000                     unimp
d0008fb6:          |   0000                     unimp
d0008fb8:          \-> 4410                     lw      a2,8(s0)
d0008fba:              892e                     mv      s2,a1
d0008fbc:              8b2a                     mv      s6,a0
d0008fbe:              05a60513                 addi    a0,a2,90
d0008fc2:              c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:288
  *flash_exec = 0;
d0008fc4:              0005a023                 sw      zero,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:289
  HARDENED_RETURN_IF_ERROR(boot_policy_manifest_check(manifest, &boot_data));
d0008fc8:              c3018a13                 addi    s4,gp,-976 # e0002478 <boot_data>
d0008fcc:              855a                     mv      a0,s6
d0008fce:              85d2                     mv      a1,s4
d0008fd0:              2301                     jal     d00094d0 <boot_policy_manifest_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008fd2:              85aa                     mv      a1,a0
d0008fd4:              73900493                 li      s1,1849
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:289
d0008fd8:       /----- 0e959963                 bne     a1,s1,d00090ca <rom_verify+0x13a>
d0008fdc:       |  /-- 00950663                 beq     a0,s1,d0008fe8 <rom_verify+0x58>
d0008fe0:       |  |   0000                     unimp
d0008fe2:       |  |   0000                     unimp
d0008fe4:       |  |   0000                     unimp
d0008fe6:       |  |   0000                     unimp
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
 * @param key An RSA public key.
 * @return ID of the key.
 */
inline uint32_t sigverify_rsa_key_id_get(
    const sigverify_rsa_buffer_t *modulus) {
  return modulus->data[0];
d0008fe8:       |  \-> 1b0b2503                 lw      a0,432(s6)
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:292
  HARDENED_RETURN_IF_ERROR(sigverify_rsa_key_get(
d0008fec:       |      0fff9a97                 auipc   s5,0xfff9
d0008ff0:       |      05ca8a93                 addi    s5,s5,92 # e0002048 <lc_state>
d0008ff4:       |      000aa583                 lw      a1,0(s5)
d0008ff8:       |      08f0                     addi    a2,sp,92
d0008ffa:       |      188010ef                 jal     ra,d000a182 <sigverify_rsa_key_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008ffe:       |      85aa                     mv      a1,a0
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:292
d0009000:       +----- 0c959563                 bne     a1,s1,d00090ca <rom_verify+0x13a>
d0009004:       |      1b0b0993                 addi    s3,s6,432
d0009008:       |      73900593                 li      a1,1849
d000900c:       |  /-- 00b50663                 beq     a0,a1,d0009018 <rom_verify+0x88>
d0009010:       |  |   0000                     unimp
d0009012:       |  |   0000                     unimp
d0009014:       |  |   0000                     unimp
d0009016:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:294
  uint32_t clobber_value = rnd_uint32();
d0009018:       |  \-> 0c9040ef                 jal     ra,d000d8e0 <rnd_uint32>
d000901c:       |      4581                     li      a1,0
d000901e:       |      0fff7617                 auipc   a2,0xfff7
d0009022:       |      fe260613                 addi    a2,a2,-30 # e0000000 <boot_measurements>
d0009026:       |      02000693                 li      a3,32
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:296
    boot_measurements.rom_ext.data[i] = clobber_value;
d000902a:       |  /-> 00c58733                 add     a4,a1,a2
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:295
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d000902e:       |  |   0591                     addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:296
    boot_measurements.rom_ext.data[i] = clobber_value;
d0009030:       |  |   c308                     sw      a0,0(a4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:295
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0009032:       |  \-- fed59ce3                 bne     a1,a3,d000902a <rom_verify+0x9a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:298
  hmac_sha256_init();
d0009036:       |      2c5040ef                 jal     ra,d000dafa <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:301
  if (launder32(manifest->security_version) <
d000903a:       |      344b2583                 lw      a1,836(s6)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:302
      boot_data.min_security_version_rom_ext) {
d000903e:       |      030a2503                 lw      a0,48(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:301
  if (launder32(manifest->security_version) <
d0009042:       |  /-- 00a5fa63                 bgeu    a1,a0,d0009056 <rom_verify+0xc6>
d0009046:       |  |   557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:303
    uint32_t extra_word = UINT32_MAX;
d0009048:       |  |   d42a                     sw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:304
    hmac_sha256_update(&extra_word, sizeof(extra_word));
d000904a:       |  |   1028                     addi    a0,sp,40
d000904c:       |  |   4591                     li      a1,4
d000904e:       |  |   2c7040ef                 jal     ra,d000db14 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:306
  HARDENED_CHECK_GE(manifest->security_version,
d0009052:       |  |   030a2503                 lw      a0,48(s4)
d0009056:       |  \-> 344b2583                 lw      a1,836(s6)
d000905a:       |  /-- 00a5f663                 bgeu    a1,a0,d0009066 <rom_verify+0xd6>
d000905e:       |  |   0000                     unimp
d0009060:       |  |   0000                     unimp
d0009062:       |  |   0000                     unimp
d0009064:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:311
  sigverify_usage_constraints_get(manifest->usage_constraints.selector_bits,
d0009066:       |  \-> 180b2503                 lw      a0,384(s6)
d000906a:       |      102c                     addi    a1,sp,40
d000906c:       |      70b030ef                 jal     ra,d000cf76 <sigverify_usage_constraints_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:313
  hmac_sha256_update(&usage_constraints_from_hw,
d0009070:       |      1028                     addi    a0,sp,40
d0009072:       |      03000593                 li      a1,48
d0009076:       |      29f040ef                 jal     ra,d000db14 <hmac_sha256_update>
manifest_digest_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:296
    kDigestRegionOffset =
        sizeof(manifest->signature) + sizeof(manifest->usage_constraints),
  };
  return (manifest_digest_region_t){
      .start = (const char *)manifest + kDigestRegionOffset,
      .length = manifest->length - kDigestRegionOffset,
d000907a:       |      338b2503                 lw      a0,824(s6)
d000907e:       |      e5050593                 addi    a1,a0,-432
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:317
  hmac_sha256_update(digest_region.start, digest_region.length);
d0009082:       |      854e                     mv      a0,s3
d0009084:       |      291040ef                 jal     ra,d000db14 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:320
  hmac_sha256_final(&act_digest);
d0009088:       |      0028                     addi    a0,sp,8
d000908a:       |      2f9040ef                 jal     ra,d000db82 <hmac_sha256_final>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:324
  memcpy(&boot_measurements.rom_ext, &act_digest,
d000908e:       |      0fff7517                 auipc   a0,0xfff7
d0009092:       |      f7250513                 addi    a0,a0,-142 # e0000000 <boot_measurements>
d0009096:       |      002c                     addi    a1,sp,8
d0009098:       |      02000613                 li      a2,32
d000909c:       |      79b040ef                 jal     ra,d000e036 <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:326
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 2);
d00090a0:       |      4408                     lw      a0,8(s0)
d00090a2:       |      65b00593                 li      a1,1627
d00090a6:       |  /-- 00b50663                 beq     a0,a1,d00090b2 <rom_verify+0x122>
d00090aa:       |  |   0000                     unimp
d00090ac:       |  |   0000                     unimp
d00090ae:       |  |   0000                     unimp
d00090b0:       |  |   0000                     unimp
d00090b2:       |  \-> 4408                     lw      a0,8(s0)
d00090b4:       |      05a50513                 addi    a0,a0,90
d00090b8:       |      c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:327
  return sigverify_rsa_verify(&manifest->signature, key, &act_digest, lc_state,
d00090ba:       |      45f6                     lw      a1,92(sp)
d00090bc:       |      000aa683                 lw      a3,0(s5)
d00090c0:       |      0030                     addi    a2,sp,8
d00090c2:       |      855a                     mv      a0,s6
d00090c4:       |      874a                     mv      a4,s2
d00090c6:       |      423030ef                 jal     ra,d000cce8 <sigverify_rsa_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:329
}
d00090ca:       \----> 5b06                     lw      s6,96(sp)
d00090cc:              5a96                     lw      s5,100(sp)
d00090ce:              5a26                     lw      s4,104(sp)
d00090d0:              59b6                     lw      s3,108(sp)
d00090d2:              5946                     lw      s2,112(sp)
d00090d4:              54d6                     lw      s1,116(sp)
d00090d6:              5466                     lw      s0,120(sp)
d00090d8:              50f6                     lw      ra,124(sp)
d00090da:              6109                     addi    sp,sp,128
d00090dc:              8082                     ret

d00090de <rom_boot>:
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:407
static rom_error_t rom_boot(const manifest_t *manifest, uint32_t flash_exec) {
d00090de:                             7179                      addi    sp,sp,-48
d00090e0:                             d606                      sw      ra,44(sp)
d00090e2:                             d422                      sw      s0,40(sp)
d00090e4:                             d226                      sw      s1,36(sp)
d00090e6:                             d04a                      sw      s2,32(sp)
d00090e8:                             ce4e                      sw      s3,28(sp)
d00090ea:                             cc52                      sw      s4,24(sp)
d00090ec:                             ca56                      sw      s5,20(sp)
d00090ee:                             c85a                      sw      s6,16(sp)
d00090f0:                             c65e                      sw      s7,12(sp)
d00090f2:                             c462                      sw      s8,8(sp)
d00090f4:                             c266                      sw      s9,4(sp)
d00090f6:                             c1418a13                  addi    s4,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:408
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 1);
d00090fa:                             014a2603                  lw      a2,20(s4)
d00090fe:                             33c00693                  li      a3,828
d0009102:                         /-- 00d60663                  beq     a2,a3,d000910e <rom_boot+0x30>
d0009106:                         |   0000                      unimp
d0009108:                         |   0000                      unimp
d000910a:                         |   0000                      unimp
d000910c:                         |   0000                      unimp
d000910e:                         \-> 014a2603                  lw      a2,20(s4)
d0009112:                             892e                      mv      s2,a1
d0009114:                             84aa                      mv      s1,a0
d0009116:                             05a60513                  addi    a0,a2,90
d000911a:                             00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:409
  HARDENED_RETURN_IF_ERROR(keymgr_state_check(kKeymgrStateReset));
d000911e:                             4501                      li      a0,0
d0009120:                             1af020ef                  jal     ra,d000bace <keymgr_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009124:                             85aa                      mv      a1,a0
d0009126:                             73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:409
d000912a:       /-------------------- 34859263                  bne     a1,s0,d000946e <rom_boot+0x390>
d000912e:       |                 /-- 00850663                  beq     a0,s0,d000913a <rom_boot+0x5c>
d0009132:       |                 |   0000                      unimp
d0009134:       |                 |   0000                      unimp
d0009136:       |                 |   0000                      unimp
d0009138:       |                 |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:412
      &manifest->binding_value;
d000913a:       |                 \-> 35048993                  addi    s3,s1,848
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:414
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_KEYMGR_ROM_EXT_MEAS_EN_OFFSET);
d000913e:       |                     56400513                  li      a0,1380
d0009142:       |                     489040ef                  jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009146:       |                     85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:415
  if (launder32(use_rom_ext_measurement) == kHardenedBoolTrue) {
d0009148:       |           /-------- 00859f63                  bne     a1,s0,d0009166 <rom_boot+0x88>
d000914c:       |           |         73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:416
    HARDENED_CHECK_EQ(use_rom_ext_measurement, kHardenedBoolTrue);
d0009150:       |           |     /-- 00b50663                  beq     a0,a1,d000915c <rom_boot+0x7e>
d0009154:       |           |     |   0000                      unimp
d0009156:       |           |     |   0000                      unimp
d0009158:       |           |     |   0000                      unimp
d000915a:       |           |     |   0000                      unimp
d000915c:       |           |     \-> 0fff7597                  auipc   a1,0xfff7
d0009160:       |           |         ea458593                  addi    a1,a1,-348 # e0000000 <boot_measurements>
d0009164:       |           |  /----- a811                      j       d0009178 <rom_boot+0x9a>
d0009166:       |           \--|----> 73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:420
    HARDENED_CHECK_NE(use_rom_ext_measurement, kHardenedBoolTrue);
d000916a:       |              |  /-- 00b51663                  bne     a0,a1,d0009176 <rom_boot+0x98>
d000916e:       |              |  |   0000                      unimp
d0009170:       |              |  |   0000                      unimp
d0009172:       |              |  |   0000                      unimp
d0009174:       |              |  |   0000                      unimp
d0009176:       |              |  \-> 85ce                      mv      a1,s3
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:422
  keymgr_sw_binding_set(&manifest->binding_value, attestation_measurement);
d0009178:       |              \----> 854e                      mv      a0,s3
d000917a:       |                     0c3020ef                  jal     ra,d000ba3c <keymgr_sw_binding_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:423
  keymgr_creator_max_ver_set(manifest->max_key_version);
d000917e:       |                     3704a503                  lw      a0,880(s1)
d0009182:       |                     129020ef                  jal     ra,d000baaa <keymgr_creator_max_ver_set>
d0009186:       |                     0fff7a97                  auipc   s5,0xfff7
d000918a:       |                     eeea8a93                  addi    s5,s5,-274 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:424
  SEC_MMIO_WRITE_INCREMENT(kKeymgrSecMmioSwBindingSet +
d000918e:       |                     008aa503                  lw      a0,8(s5)
d0009192:       |                     054d                      addi    a0,a0,19
d0009194:       |                     00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:427
  sec_mmio_check_counters(/*expected_check_count=*/2);
d0009198:       |                     4509                      li      a0,2
d000919a:       |                     651040ef                  jal     ra,d000dfea <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:435
  switch (launder32(manifest->address_translation)) {
d000919e:       |                     3304a503                  lw      a0,816(s1)
manifest_code_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:308
 * @param manifest A manifest.
 * return Executable region of the image.
 */
inline epmp_region_t manifest_code_region_get(const manifest_t *manifest) {
  return (epmp_region_t){
      .start = (uintptr_t)manifest + manifest->code_start,
d00091a2:       |                     3744ab83                  lw      s7,884(s1)
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:309
      .end = (uintptr_t)manifest + manifest->code_end,
d00091a6:       |                     3784ac03                  lw      s8,888(s1)
manifest_entry_point_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:325
 *
 * @param manfiest A manifest.
 * return Entry point address.
 */
inline uintptr_t manifest_entry_point_get(const manifest_t *manifest) {
  return (uintptr_t)manifest + manifest->entry_point;
d00091aa:       |                     37c4ab03                  lw      s6,892(s1)
d00091ae:       |                     1d400593                  li      a1,468
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:435
d00091b2:       |              /----- 00b51c63                  bne     a0,a1,d00091ca <rom_boot+0xec>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:456
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolFalse);
d00091b6:       |              |      3304a503                  lw      a0,816(s1)
d00091ba:       |              |  /-- 00b50663                  beq     a0,a1,d00091c6 <rom_boot+0xe8>
d00091be:       |              |  |   0000                      unimp
d00091c0:       |              |  |   0000                      unimp
d00091c2:       |              |  |   0000                      unimp
d00091c4:       |              |  |   0000                      unimp
d00091c6:       |              |  \-> 89a6                      mv      s3,s1
d00091c8:       |           /--|----- a08d                      j       d000922a <rom_boot+0x14c>
d00091ca:       |           |  \----> 73900c93                  li      s9,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:435
  switch (launder32(manifest->address_translation)) {
d00091ce:       |  /--------|-------- 2b951f63                  bne     a0,s9,d000948c <rom_boot+0x3ae>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:437
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolTrue);
d00091d2:       |  |        |         3304a503                  lw      a0,816(s1)
d00091d6:       |  |        |     /-- 01950663                  beq     a0,s9,d00091e2 <rom_boot+0x104>
d00091da:       |  |        |     |   0000                      unimp
d00091dc:       |  |        |     |   0000                      unimp
d00091de:       |  |        |     |   0000                      unimp
d00091e0:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:438
      ibex_addr_remap_0_set((uintptr_t)_rom_ext_virtual_start_address,
d00091e2:       |  |        |     \-> bfff7997                  auipc   s3,0xbfff7
d00091e6:       |  |        |         e1e98993                  addi    s3,s3,-482 # 90000000 <_rom_ext_virtual_start_address>
d00091ea:       |  |        |         30037417                  auipc   s0,0x30037
d00091ee:       |  |        |         e1640413                  addi    s0,s0,-490 # 40000 <_stack_end+0x20020000>
d00091f2:       |  |        |         854e                      mv      a0,s3
d00091f4:       |  |        |         85a6                      mv      a1,s1
d00091f6:       |  |        |         8622                      mv      a2,s0
d00091f8:       |  |        |         780020ef                  jal     ra,d000b978 <ibex_addr_remap_0_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:440
      SEC_MMIO_WRITE_INCREMENT(kAddressTranslationSecMmioConfigure);
d00091fc:       |  |        |         008aa503                  lw      a0,8(s5)
d0009200:       |  |        |         0519                      addi    a0,a0,6
d0009202:       |  |        |         00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:443
      HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009206:       |  |        |         706040ef                  jal     ra,d000d90c <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000920a:       |  |        |         85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:443
d000920c:       +--|--------|-------- 27959163                  bne     a1,s9,d000946e <rom_boot+0x390>
d0009210:       |  |        |         73900593                  li      a1,1849
d0009214:       |  |        |     /-- 00b50663                  beq     a0,a1,d0009220 <rom_boot+0x142>
d0009218:       |  |        |     |   0000                      unimp
d000921a:       |  |        |     |   0000                      unimp
d000921c:       |  |        |     |   0000                      unimp
d000921e:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:444
      rom_epmp_unlock_rom_ext_r(
d0009220:       |  |        |     \-> 008985b3                  add     a1,s3,s0
d0009224:       |  |        |         854e                      mv      a0,s3
d0009226:       |  |        |         1d1030ef                  jal     ra,d000cbf6 <rom_epmp_unlock_rom_ext_r>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:463
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d000922a:       |  |        \-------> 6e2040ef                  jal     ra,d000d90c <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000922e:       |  |                  85aa                      mv      a1,a0
d0009230:       |  |                  73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:463
d0009234:       +--|----------------- 22859d63                  bne     a1,s0,d000946e <rom_boot+0x390>
d0009238:       |  |                  018985b3                  add     a1,s3,s8
d000923c:       |  |                  01798633                  add     a2,s3,s7
d0009240:       |  |              /-- 00850663                  beq     a0,s0,d000924c <rom_boot+0x16e>
d0009244:       |  |              |   0000                      unimp
d0009246:       |  |              |   0000                      unimp
d0009248:       |  |              |   0000                      unimp
d000924a:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:464
  rom_epmp_unlock_rom_ext_rx(text_region);
d000924c:       |  |              \-> 8532                      mv      a0,a2
d000924e:       |  |                  17b030ef                  jal     ra,d000cbc8 <rom_epmp_unlock_rom_ext_rx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:465
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009252:       |  |                  6ba040ef                  jal     ra,d000d90c <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009256:       |  |                  85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:465
d0009258:       +--|----------------- 20859b63                  bne     a1,s0,d000946e <rom_boot+0x390>
d000925c:       |  |                  73900413                  li      s0,1849
d0009260:       |  |              /-- 00850663                  beq     a0,s0,d000926c <rom_boot+0x18e>
d0009264:       |  |              |   0000                      unimp
d0009266:       |  |              |   0000                      unimp
d0009268:       |  |              |   0000                      unimp
d000926a:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:467
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomBoot, 2, kCfiRomPreBootCheck);
d000926c:       |  |              \-> 014a2503                  lw      a0,20(s4)
d0009270:       |  |                  39600593                  li      a1,918
d0009274:       |  |              /-- 00b50663                  beq     a0,a1,d0009280 <rom_boot+0x1a2>
d0009278:       |  |              |   0000                      unimp
d000927a:       |  |              |   0000                      unimp
d000927c:       |  |              |   0000                      unimp
d000927e:       |  |              |   0000                      unimp
d0009280:       |  |              \-> 014a2503                  lw      a0,20(s4)
d0009284:       |  |                  05a50513                  addi    a0,a0,90
d0009288:       |  |                  00aa2a23                  sw      a0,20(s4)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d000928c:       |  |                  49400513                  li      a0,1172
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:467
d0009290:       |  |                  00aa2823                  sw      a0,16(s4)
d0009294:       |  |                  014a2583                  lw      a1,20(s4)
d0009298:       |  |                  3f000613                  li      a2,1008
d000929c:       |  |              /-- 00c58663                  beq     a1,a2,d00092a8 <rom_boot+0x1ca>
d00092a0:       |  |              |   0000                      unimp
d00092a2:       |  |              |   0000                      unimp
d00092a4:       |  |              |   0000                      unimp
d00092a6:       |  |              |   0000                      unimp
d00092a8:       |  |              \-> 014a2583                  lw      a1,20(s4)
d00092ac:       |  |                  05a58593                  addi    a1,a1,90
d00092b0:       |  |                  00ba2a23                  sw      a1,20(s4)
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:357
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 1);
d00092b4:       |  |                  010a2583                  lw      a1,16(s4)
d00092b8:       |  |              /-- 00a58663                  beq     a1,a0,d00092c4 <rom_boot+0x1e6>
d00092bc:       |  |              |   0000                      unimp
d00092be:       |  |              |   0000                      unimp
d00092c0:       |  |              |   0000                      unimp
d00092c2:       |  |              |   0000                      unimp
d00092c4:       |  |              \-> 010a2503                  lw      a0,16(s4)
d00092c8:       |  |                  05a50513                  addi    a0,a0,90
d00092cc:       |  |                  00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:360
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d00092d0:       |  |                  0fff9497                  auipc   s1,0xfff9
d00092d4:       |  |                  d7848493                  addi    s1,s1,-648 # e0002048 <lc_state>
d00092d8:       |  |                  4088                      lw      a0,0(s1)
d00092da:       |  |                  19b010ef                  jal     ra,d000ac74 <alert_config_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d00092de:       |  |                  85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:360
d00092e0:       |  |  /-------------- 1a859463                  bne     a1,s0,d0009488 <rom_boot+0x3aa>
d00092e4:       |  |  |           /-- 00850663                  beq     a0,s0,d00092f0 <rom_boot+0x212>
d00092e8:       |  |  |           |   0000                      unimp
d00092ea:       |  |  |           |   0000                      unimp
d00092ec:       |  |  |           |   0000                      unimp
d00092ee:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:361
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 2);
d00092f0:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d00092f4:       |  |  |               4ee00593                  li      a1,1262
d00092f8:       |  |  |           /-- 00b50663                  beq     a0,a1,d0009304 <rom_boot+0x226>
d00092fc:       |  |  |           |   0000                      unimp
d00092fe:       |  |  |           |   0000                      unimp
d0009300:       |  |  |           |   0000                      unimp
d0009302:       |  |  |           |   0000                      unimp
d0009304:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d0009308:       |  |  |               05a50513                  addi    a0,a0,90
d000930c:       |  |  |               00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:364
  lifecycle_state_t lc_state_check = lifecycle_state_get();
d0009310:       |  |  |               0a9040ef                  jal     ra,d000dbb8 <lifecycle_state_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009314:       |  |  |               85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:365
  if (launder32(lc_state_check) != lc_state) {
d0009316:       |  |  |               4090                      lw      a2,0(s1)
d0009318:       |  |  |  /----------- 16c59e63                  bne     a1,a2,d0009494 <rom_boot+0x3b6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:368
  HARDENED_CHECK_EQ(lc_state_check, lc_state);
d000931c:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d0009328 <rom_boot+0x24a>
d0009320:       |  |  |  |        |   0000                      unimp
d0009322:       |  |  |  |        |   0000                      unimp
d0009324:       |  |  |  |        |   0000                      unimp
d0009326:       |  |  |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:369
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 3);
d0009328:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d000932c:       |  |  |  |            54800593                  li      a1,1352
d0009330:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d000933c <rom_boot+0x25e>
d0009334:       |  |  |  |        |   0000                      unimp
d0009336:       |  |  |  |        |   0000                      unimp
d0009338:       |  |  |  |        |   0000                      unimp
d000933a:       |  |  |  |        |   0000                      unimp
d000933c:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d0009340:       |  |  |  |            05a50513                  addi    a0,a0,90
d0009344:       |  |  |  |            00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:372
  rom_error_t boot_data_ok = boot_data_check(&boot_data);
d0009348:       |  |  |  |            c3018513                  addi    a0,gp,-976 # e0002478 <boot_data>
d000934c:       |  |  |  |            7b2000ef                  jal     ra,d0009afe <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009350:       |  |  |  |            862a                      mv      a2,a0
d0009352:       |  |  |  |            73900593                  li      a1,1849
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:373
  if (launder32(boot_data_ok) != kErrorOk) {
d0009356:       |  |  |  |  /-------- 14b61363                  bne     a2,a1,d000949c <rom_boot+0x3be>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:376
  HARDENED_CHECK_EQ(boot_data_ok, kErrorOk);
d000935a:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d0009366 <rom_boot+0x288>
d000935e:       |  |  |  |  |     |   0000                      unimp
d0009360:       |  |  |  |  |     |   0000                      unimp
d0009362:       |  |  |  |  |     |   0000                      unimp
d0009364:       |  |  |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:377
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 4);
d0009366:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d000936a:       |  |  |  |  |         5a200593                  li      a1,1442
d000936e:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d000937a <rom_boot+0x29c>
d0009372:       |  |  |  |  |     |   0000                      unimp
d0009374:       |  |  |  |  |     |   0000                      unimp
d0009376:       |  |  |  |  |     |   0000                      unimp
d0009378:       |  |  |  |  |     |   0000                      unimp
d000937a:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d000937e:       |  |  |  |  |         05a50513                  addi    a0,a0,90
d0009382:       |  |  |  |  |         00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:382
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET);
d0009386:       |  |  |  |  |         10c00513                  li      a0,268
d000938a:       |  |  |  |  |         241040ef                  jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:383
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d000938e:       |  |  |  |  |         7c0025f3                  csrr    a1,0x7c0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d0009392:       |  |  |  |  |         eff5f593                  andi    a1,a1,-257
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009396:       |  |  |  |  |         862e                      mv      a2,a1
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:387
  if (launder32(cpuctrl_csr) != cpuctrl_otp) {
d0009398:       |  |  |  |  |  /----- 10a61663                  bne     a2,a0,d00094a4 <rom_boot+0x3c6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:390
  HARDENED_CHECK_EQ(cpuctrl_csr, cpuctrl_otp);
d000939c:       |  |  |  |  |  |  /-- 00a58663                  beq     a1,a0,d00093a8 <rom_boot+0x2ca>
d00093a0:       |  |  |  |  |  |  |   0000                      unimp
d00093a2:       |  |  |  |  |  |  |   0000                      unimp
d00093a4:       |  |  |  |  |  |  |   0000                      unimp
d00093a6:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:391
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 5);
d00093a8:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093ac:       |  |  |  |  |  |      5fc00593                  li      a1,1532
d00093b0:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00093bc <rom_boot+0x2de>
d00093b4:       |  |  |  |  |  |  |   0000                      unimp
d00093b6:       |  |  |  |  |  |  |   0000                      unimp
d00093b8:       |  |  |  |  |  |  |   0000                      unimp
d00093ba:       |  |  |  |  |  |  |   0000                      unimp
d00093bc:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093c0:       |  |  |  |  |  |      01698433                  add     s0,s3,s6
d00093c4:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00093c8:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:393
  sec_mmio_check_counters(/*expected_check_count=*/3);
d00093cc:       |  |  |  |  |  |      450d                      li      a0,3
d00093ce:       |  |  |  |  |  |      41d040ef                  jal     ra,d000dfea <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:394
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 6);
d00093d2:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d00093d6:       |  |  |  |  |  |      65600593                  li      a1,1622
d00093da:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00093e6 <rom_boot+0x308>
d00093de:       |  |  |  |  |  |  |   0000                      unimp
d00093e0:       |  |  |  |  |  |  |   0000                      unimp
d00093e2:       |  |  |  |  |  |  |   0000                      unimp
d00093e4:       |  |  |  |  |  |  |   0000                      unimp
d00093e6:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093ea:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00093ee:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:469
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 4);
d00093f2:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d00093f6:       |  |  |  |  |  |      44a00593                  li      a1,1098
d00093fa:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009406 <rom_boot+0x328>
d00093fe:       |  |  |  |  |  |  |   0000                      unimp
d0009400:       |  |  |  |  |  |  |   0000                      unimp
d0009402:       |  |  |  |  |  |  |   0000                      unimp
d0009404:       |  |  |  |  |  |  |   0000                      unimp
d0009406:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d000940a:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d000940e:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:470
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomPreBootCheck, 7);
d0009412:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d0009416:       |  |  |  |  |  |      6b000593                  li      a1,1712
d000941a:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009426 <rom_boot+0x348>
d000941e:       |  |  |  |  |  |  |   0000                      unimp
d0009420:       |  |  |  |  |  |  |   0000                      unimp
d0009422:       |  |  |  |  |  |  |   0000                      unimp
d0009424:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:473
  flash_ctrl_exec_set(flash_exec);
d0009426:       |  |  |  |  |  |  \-> 854a                      mv      a0,s2
d0009428:       |  |  |  |  |  |      110020ef                  jal     ra,d000b538 <flash_ctrl_exec_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:474
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioExecSet);
d000942c:       |  |  |  |  |  |      008aa503                  lw      a0,8(s5)
d0009430:       |  |  |  |  |  |      0505                      addi    a0,a0,1
d0009432:       |  |  |  |  |  |      00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:476
  sec_mmio_check_values(rnd_uint32());
d0009436:       |  |  |  |  |  |      4aa040ef                  jal     ra,d000d8e0 <rnd_uint32>
d000943a:       |  |  |  |  |  |      341040ef                  jal     ra,d000df7a <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:477
  sec_mmio_check_counters(/*expected_check_count=*/5);
d000943e:       |  |  |  |  |  |      4515                      li      a0,5
d0009440:       |  |  |  |  |  |      3ab040ef                  jal     ra,d000dfea <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:480
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 5);
d0009444:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d0009448:       |  |  |  |  |  |      4a400593                  li      a1,1188
d000944c:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009458 <rom_boot+0x37a>
d0009450:       |  |  |  |  |  |  |   0000                      unimp
d0009452:       |  |  |  |  |  |  |   0000                      unimp
d0009454:       |  |  |  |  |  |  |   0000                      unimp
d0009456:       |  |  |  |  |  |  |   0000                      unimp
d0009458:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d000945c:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009460:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:481
  ((rom_ext_entry_point *)entry_point)();
d0009464:       |  |  |  |  |  |      9402                      jalr    s0
d0009466:       |  |  |  |  |  |      014d5537                  lui     a0,0x14d5
d000946a:       |  |  |  |  |  |      20950513                  addi    a0,a0,521 # 14d5209 <_rom_ext_virtual_size+0x1495209>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:484
}
d000946e:       \--|--|--|--|--|----> 4c92                      lw      s9,4(sp)
d0009470:          |  |  |  |  |      4c22                      lw      s8,8(sp)
d0009472:          |  |  |  |  |      4bb2                      lw      s7,12(sp)
d0009474:          |  |  |  |  |      4b42                      lw      s6,16(sp)
d0009476:          |  |  |  |  |      4ad2                      lw      s5,20(sp)
d0009478:          |  |  |  |  |      4a62                      lw      s4,24(sp)
d000947a:          |  |  |  |  |      49f2                      lw      s3,28(sp)
d000947c:          |  |  |  |  |      5902                      lw      s2,32(sp)
d000947e:          |  |  |  |  |      5492                      lw      s1,36(sp)
d0009480:          |  |  |  |  |      5422                      lw      s0,40(sp)
d0009482:          |  |  |  |  |      50b2                      lw      ra,44(sp)
d0009484:          |  |  |  |  |      6145                      addi    sp,sp,48
d0009486:          |  |  |  |  |      8082                      ret
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:360
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d0009488:          |  \--|--|--|----> 6b5040ef                  jal     ra,d000e33c <shutdown_finalize>
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:459
      HARDENED_UNREACHABLE();
d000948c:          \-----|--|--|----> 0000                      unimp
d000948e:                |  |  |      0000                      unimp
d0009490:                |  |  |      0000                      unimp
d0009492:                |  |  |      0000                      unimp
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:366
    HARDENED_UNREACHABLE();
d0009494:                \--|--|----> 0000                      unimp
d0009496:                   |  |      0000                      unimp
d0009498:                   |  |      0000                      unimp
d000949a:                   |  |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:374
    HARDENED_UNREACHABLE();
d000949c:                   \--|----> 0000                      unimp
d000949e:                      |      0000                      unimp
d00094a0:                      |      0000                      unimp
d00094a2:                      |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:388
    HARDENED_UNREACHABLE();
d00094a4:                      \----> 0000                      unimp
d00094a6:                             0000                      unimp
d00094a8:                             0000                      unimp
d00094aa:                             0000                      unimp

d00094ac <boot_policy_manifests_get>:
boot_policy_manifests_get():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:15
#include "sw/device/silicon_creator/lib/drivers/lifecycle.h"
#include "sw/device/silicon_creator/lib/error.h"
#include "sw/device/silicon_creator/lib/shutdown.h"
#include "sw/device/silicon_creator/rom/boot_policy_ptrs.h"

boot_policy_manifests_t boot_policy_manifests_get(void) {
d00094ac:           f0000537            lui     a0,0xf0000
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:18
  const manifest_t *slot_a = boot_policy_manifest_a_get();
  const manifest_t *slot_b = boot_policy_manifest_b_get();
  if (slot_a->security_version >= slot_b->security_version) {
d00094b0:           34452503            lw      a0,836(a0) # f0000344 <_stack_end+0xffe0344>
d00094b4:           f00405b7            lui     a1,0xf0040
d00094b8:           3445a603            lw      a2,836(a1) # f0040344 <_stack_end+0x10020344>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:26
    };
  }
  return (boot_policy_manifests_t){
      .ordered = {slot_b, slot_a},
  };
}
d00094bc:       /-- 00c56563            bltu    a0,a2,d00094c6 <boot_policy_manifests_get+0x1a>
d00094c0:       |   f0000537            lui     a0,0xf0000
d00094c4:       |   8082                        ret
d00094c6:       \-> f0040537            lui     a0,0xf0040
d00094ca:           f00005b7            lui     a1,0xf0000
d00094ce:           8082                        ret

d00094d0 <boot_policy_manifest_check>:
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:30

rom_error_t boot_policy_manifest_check(const manifest_t *manifest,
                                       const boot_data_t *boot_data) {
  if (manifest->identifier != CHIP_ROM_EXT_IDENTIFIER) {
d00094d0:                    33452603           lw      a2,820(a0)
d00094d4:                    455256b7           lui     a3,0x45525
d00094d8:                    44f68693           addi    a3,a3,1103 # 4552544f <_epmp_stack_guard_na4+0xd51e44f>
d00094dc:             /----- 00d61e63           bne     a2,a3,d00094f8 <boot_policy_manifest_check+0x28>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:33
    return kErrorBootPolicyBadIdentifier;
  }
  if (manifest->length < CHIP_ROM_EXT_SIZE_MIN ||
d00094e0:             |      33852783           lw      a5,824(a0)
d00094e4:             |      c8078613           addi    a2,a5,-896
d00094e8:             |      66c1                       lui     a3,0x10
d00094ea:             |      c8068693           addi    a3,a3,-896 # fc80 <_stack_size+0xbc80>
d00094ee:             |  /-- 00c6fb63           bgeu    a3,a2,d0009504 <boot_policy_manifest_check+0x34>
d00094f2:             |  |   02425537           lui     a0,0x2425
d00094f6:          /--|--|-- a019                       j       d00094fc <boot_policy_manifest_check+0x2c>
d00094f8:          |  \--|-> 01425537           lui     a0,0x1425
d00094fc:          >-----|-> 00d50613           addi    a2,a0,13 # 142500d <_rom_ext_virtual_size+0x13e500d>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:46
    HARDENED_CHECK_GE(manifest->security_version,
                      boot_data->min_security_version_rom_ext);
    return kErrorOk;
  }
  return kErrorBootPolicyRollback;
}
d0009500:       /--|-----|-> 8532                       mv      a0,a2
d0009502:       |  |     |   8082                       ret
manifest_check():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:260
  if (manifest->code_start >= manifest->code_end ||
d0009504:       |  |     \-> 37452683           lw      a3,884(a0)
d0009508:       |  |         37852803           lw      a6,888(a0)
d000950c:       |  |         0106b633           sltu    a2,a3,a6
d0009510:       |  |         00164613           xori    a2,a2,1
d0009514:       |  |         3806b713           sltiu   a4,a3,896
d0009518:       |  |         8f51                       or      a4,a4,a2
d000951a:       |  |         024d4637           lui     a2,0x24d4
d000951e:       |  |         10d60613           addi    a2,a2,269 # 24d410d <_rom_ext_virtual_size+0x249410d>
d0009522:       +--|-------- ff79                       bnez    a4,d0009500 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:262
      manifest->code_end > manifest->length ||
d0009524:       |  |         0107b733           sltu    a4,a5,a6
d0009528:       |  |         0036f793           andi    a5,a3,3
d000952c:       |  |         00f037b3           snez    a5,a5
d0009530:       |  |         8f5d                       or      a4,a4,a5
d0009532:       |  |         00387793           andi    a5,a6,3
d0009536:       |  |         00f037b3           snez    a5,a5
d000953a:       |  |         8f5d                       or      a4,a4,a5
d000953c:       +--|-------- f371                       bnez    a4,d0009500 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:268
  if (manifest->entry_point < manifest->code_start ||
d000953e:       |  |         37c52603           lw      a2,892(a0)
d0009542:       |  |         00d636b3           sltu    a3,a2,a3
d0009546:       |  |         01063733           sltu    a4,a2,a6
d000954a:       |  |         00174713           xori    a4,a4,1
d000954e:       |  |         8ed9                       or      a3,a3,a4
d0009550:       |  |         8a0d                       andi    a2,a2,3
d0009552:       |  |         00c03633           snez    a2,a2
d0009556:       |  |         8e55                       or      a2,a2,a3
d0009558:       |  |     /-- ea09                       bnez    a2,d000956a <boot_policy_manifest_check+0x9a>
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d000955a:       |  |     |   34452603           lw      a2,836(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:40
      boot_data->min_security_version_rom_ext) {
d000955e:       |  |     |   598c                       lw      a1,48(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d0009560:       |  |  /--|-- 00b67a63           bgeu    a2,a1,d0009574 <boot_policy_manifest_check+0xa4>
d0009564:       |  |  |  |   03425537           lui     a0,0x3425
d0009568:       |  \--|--|-- bf51                       j       d00094fc <boot_policy_manifest_check+0x2c>
d000956a:       |     |  \-> 014d4537           lui     a0,0x14d4
d000956e:       |     |      10d50613           addi    a2,a0,269 # 14d410d <_rom_ext_virtual_size+0x149410d>
d0009572:       +-----|----- b779                       j       d0009500 <boot_policy_manifest_check+0x30>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:41
    HARDENED_CHECK_GE(manifest->security_version,
d0009574:       |     \----> 34452503           lw      a0,836(a0)
d0009578:       |        /-- 00b57663           bgeu    a0,a1,d0009584 <boot_policy_manifest_check+0xb4>
d000957c:       |        |   0000                       unimp
d000957e:       |        |   0000                       unimp
d0009580:       |        |   0000                       unimp
d0009582:       |        |   0000                       unimp
d0009584:       |        \-> 73900613           li      a2,1849
d0009588:       \----------- bfa5                       j       d0009500 <boot_policy_manifest_check+0x30>

d000958a <boot_data_read>:
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:543
  boot_data_digest_compute(boot_data, &boot_data->digest);

  return res;
}

rom_error_t boot_data_read(lifecycle_state_t lc_state, boot_data_t *boot_data) {
d000958a:                                   7179                        addi    sp,sp,-48
d000958c:                                   d606                        sw      ra,44(sp)
d000958e:                                   d422                        sw      s0,40(sp)
d0009590:                                   d226                        sw      s1,36(sp)
d0009592:                                   d04a                        sw      s2,32(sp)
d0009594:                                   892e                        mv      s2,a1
d0009596:                                   842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
  active_page_info_t active_page;
  HARDENED_RETURN_IF_ERROR(boot_data_active_page_find(&active_page, boot_data));
d0009598:                                   0028                        addi    a0,sp,8
d000959a:                                   22e9                        jal     d0009764 <boot_data_active_page_find>
d000959c:                                   84aa                        mv      s1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000959e:                                   85aa                        mv      a1,a0
d00095a0:                                   73900513            li      a0,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
d00095a4:       /-------------------------- 18a59e63            bne     a1,a0,d0009740 <boot_data_read+0x1b6>
d00095a8:       |                       /-- 00a48663            beq     s1,a0,d00095b4 <boot_data_read+0x2a>
d00095ac:       |                       |   0000                        unimp
d00095ae:       |                       |   0000                        unimp
d00095b0:       |                       |   0000                        unimp
d00095b2:       |                       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d00095b4:       |                       \-> 4552                        lw      a0,20(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095b6:       |                           85aa                        mv      a1,a0
d00095b8:       |                           1d400613            li      a2,468
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
d00095bc:       |                 /-------- 04c59d63            bne     a1,a2,d0009616 <boot_data_read+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:551
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
      return kErrorOk;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolFalse);
d00095c0:       |                 |     /-- 00c50663            beq     a0,a2,d00095cc <boot_data_read+0x42>
d00095c4:       |                 |     |   0000                        unimp
d00095c6:       |                 |     |   0000                        unimp
d00095c8:       |                 |     |   0000                        unimp
d00095ca:       |                 |     |   0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:490
  uint32_t allowed_in_prod = otp_read32(
d00095cc:       |                 |     \-> 11800513            li      a0,280
d00095d0:       |                 |         7fa040ef            jal     ra,d000ddca <otp_read32>
d00095d4:       |                 |         014245b7            lui     a1,0x1424
d00095d8:       |                 |         40d58593            addi    a1,a1,1037 # 142440d <_rom_ext_virtual_size+0x13e440d>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:492
  rom_error_t res = lc_state ^ launder32(kErrorBootDataNotFound);
d00095dc:       |                 |         8da1                        xor     a1,a1,s0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095de:       |                 |         8622                        mv      a2,s0
d00095e0:       |                 |         cf8d06b7            lui     a3,0xcf8d0
d00095e4:       |                 |         aaa68713            addi    a4,a3,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00095e8:       |                 |  /----- 04c75263            bge     a4,a2,d000962c <boot_data_read+0xa2>
d00095ec:       |                 |  |      aab68693            addi    a3,a3,-1365
d00095f0:       |              /--|--|----- 06d60a63            beq     a2,a3,d0009664 <boot_data_read+0xda>
d00095f4:       |              |  |  |      0b5a76b7            lui     a3,0xb5a7
d00095f8:       |              |  |  |      5e068693            addi    a3,a3,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d00095fc:       |           /--|--|--|----- 08d61363            bne     a2,a3,d0009682 <boot_data_read+0xf8>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:500
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d0009600:       |           |  |  |  |  /-- 00d40663            beq     s0,a3,d000960c <boot_data_read+0x82>
d0009604:       |           |  |  |  |  |   0000                        unimp
d0009606:       |           |  |  |  |  |   0000                        unimp
d0009608:       |           |  |  |  |  |   0000                        unimp
d000960a:       |           |  |  |  |  |   0000                        unimp
d000960c:       |           |  |  |  |  \-> 0a183537            lui     a0,0xa183
d0009610:       |           |  |  |  |      6d450513            addi    a0,a0,1748 # a1836d4 <_rom_ext_virtual_size+0xa1436d4>
d0009614:       |        /--|--|--|--|----- a0d9                        j       d00096da <boot_data_read+0x150>
d0009616:       |        |  |  |  \--|----> 73900493            li      s1,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d000961a:       |  /-----|--|--|-----|----- 12959d63            bne     a1,s1,d0009754 <boot_data_read+0x1ca>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:548
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
d000961e:       |  |     |  |  |     |  /-- 00950663            beq     a0,s1,d000962a <boot_data_read+0xa0>
d0009622:       |  |     |  |  |     |  |   0000                        unimp
d0009624:       |  |     |  |  |     |  |   0000                        unimp
d0009626:       |  |     |  |  |     |  |   0000                        unimp
d0009628:       |  |     |  |  |     |  |   0000                        unimp
d000962a:       +--|-----|--|--|-----|--\-X aa19                        j       d0009740 <boot_data_read+0x1b6>
d000962c:       |  |     |  |  |     \----> 91b9b6b7            lui     a3,0x91b9b
d0009630:       |  |     |  |  |            68a68693            addi    a3,a3,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d0009634:       |  |     |  |  |     /----- 08d61363            bne     a2,a3,d00096ba <boot_data_read+0x130>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:512
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d0009638:       |  |     |  |  |     |  /-- 00d40663            beq     s0,a3,d0009644 <boot_data_read+0xba>
d000963c:       |  |     |  |  |     |  |   0000                        unimp
d000963e:       |  |     |  |  |     |  |   0000                        unimp
d0009640:       |  |     |  |  |     |  |   0000                        unimp
d0009642:       |  |     |  |  |     |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009644:       |  |     |  |  |     |  \-> 872a                        mv      a4,a0
d0009646:       |  |     |  |  |     |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:514
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d000964a:       |  |  /--|--|--|-----|----- 10c71263            bne     a4,a2,d000974e <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:515
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d000964e:       |  |  |  |  |  |     |  /-- 00c50663            beq     a0,a2,d000965a <boot_data_read+0xd0>
d0009652:       |  |  |  |  |  |     |  |   0000                        unimp
d0009654:       |  |  |  |  |  |     |  |   0000                        unimp
d0009656:       |  |  |  |  |  |     |  |   0000                        unimp
d0009658:       |  |  |  |  |  |     |  |   0000                        unimp
d000965a:       |  |  |  |  |  |     |  \-> 90fbf537            lui     a0,0x90fbf
d000965e:       |  |  |  |  |  |     |      5be50513            addi    a0,a0,1470 # 90fbf5be <_stack_end+0xb0f9f5be>
d0009662:       |  |  |  +--|--|-----|----- a8a5                        j       d00096da <boot_data_read+0x150>
d0009664:       |  |  |  |  |  \-----|----> cf8d0537            lui     a0,0xcf8d0
d0009668:       |  |  |  |  |        |      aab50513            addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:520
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000966c:       |  |  |  |  |        |  /-- 00a40663            beq     s0,a0,d0009678 <boot_data_read+0xee>
d0009670:       |  |  |  |  |        |  |   0000                        unimp
d0009672:       |  |  |  |  |        |  |   0000                        unimp
d0009674:       |  |  |  |  |        |  |   0000                        unimp
d0009676:       |  |  |  |  |        |  |   0000                        unimp
d0009678:       |  |  |  |  |        |  \-> cecec537            lui     a0,0xcecec
d000967c:       |  |  |  |  |        |      99f50513            addi    a0,a0,-1633 # ceceb99f <_stack_end+0xeeccb99f>
d0009680:       |  |  |  +--|--------|----- a8a9                        j       d00096da <boot_data_read+0x150>
d0009682:       |  |  |  |  \--------|----> 65f256b7            lui     a3,0x65f25
d0009686:       |  |  |  |           |      20f68693            addi    a3,a3,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000968a:       |  |  |  |        /--|----- 0cd61963            bne     a2,a3,d000975c <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:504
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000968e:       |  |  |  |        |  |  /-- 00d40663            beq     s0,a3,d000969a <boot_data_read+0x110>
d0009692:       |  |  |  |        |  |  |   0000                        unimp
d0009694:       |  |  |  |        |  |  |   0000                        unimp
d0009696:       |  |  |  |        |  |  |   0000                        unimp
d0009698:       |  |  |  |        |  |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000969a:       |  |  |  |        |  |  \-> 872a                        mv      a4,a0
d000969c:       |  |  |  |        |  |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:506
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d00096a0:       |  |  +--|--------|--|----- 0ac71763            bne     a4,a2,d000974e <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:507
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d00096a4:       |  |  |  |        |  |  /-- 00c50663            beq     a0,a2,d00096b0 <boot_data_read+0x126>
d00096a8:       |  |  |  |        |  |  |   0000                        unimp
d00096aa:       |  |  |  |        |  |  |   0000                        unimp
d00096ac:       |  |  |  |        |  |  |   0000                        unimp
d00096ae:       |  |  |  |        |  |  |   0000                        unimp
d00096b0:       |  |  |  |        |  |  \-> 64b01537            lui     a0,0x64b01
d00096b4:       |  |  |  |        |  |      13b50513            addi    a0,a0,315 # 64b0113b <_epmp_stack_guard_na4+0x2cafa13b>
d00096b8:       |  |  |  +--------|--|----- a00d                        j       d00096da <boot_data_read+0x150>
d00096ba:       |  |  |  |        |  \----> b2866537            lui     a0,0xb2866
d00096be:       |  |  |  |        |         fbb50513            addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00096c2:       |  |  |  |        +-------- 08a61d63            bne     a2,a0,d000975c <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:496
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d00096c6:       |  |  |  |        |     /-- 00a40663            beq     s0,a0,d00096d2 <boot_data_read+0x148>
d00096ca:       |  |  |  |        |     |   0000                        unimp
d00096cc:       |  |  |  |        |     |   0000                        unimp
d00096ce:       |  |  |  |        |     |   0000                        unimp
d00096d0:       |  |  |  |        |     |   0000                        unimp
d00096d2:       |  |  |  |        |     \-> b3c42537            lui     a0,0xb3c42
d00096d6:       |  |  |  |        |         c8f50513            addi    a0,a0,-881 # b3c41c8f <_stack_end+0xd3c21c8f>
d00096da:       |  |  |  \--------|-------> 00a5c4b3            xor     s1,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096de:       |  |  |           |  /----> 85a6                        mv      a1,s1
d00096e0:       |  |  |           |  |      73900513            li      a0,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:527
  HARDENED_RETURN_IF_ERROR(res);
d00096e4:       +--|--|-----------|--|----- 04a59e63            bne     a1,a0,d0009740 <boot_data_read+0x1b6>
d00096e8:       |  |  |           |  |  /-- 00a48663            beq     s1,a0,d00096f4 <boot_data_read+0x16a>
d00096ec:       |  |  |           |  |  |   0000                        unimp
d00096ee:       |  |  |           |  |  |   0000                        unimp
d00096f0:       |  |  |           |  |  |   0000                        unimp
d00096f2:       |  |  |           |  |  |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:529
  boot_data->is_valid = kBootDataValidEntry;
d00096f4:       |  |  |           |  |  \-> 02090413            addi    s0,s2,32
d00096f8:       |  |  |           |  |      557d                        li      a0,-1
d00096fa:       |  |  |           |  |      02a92223            sw      a0,36(s2)
d00096fe:       |  |  |           |  |      02a92023            sw      a0,32(s2)
d0009702:       |  |  |           |  |      41445537            lui     a0,0x41445
d0009706:       |  |  |           |  |      f4250513            addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:530
  boot_data->identifier = kBootDataIdentifier;
d000970a:       |  |  |           |  |      02a92423            sw      a0,40(s2)
d000970e:       |  |  |           |  |      4515                        li      a0,5
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:531
  boot_data->counter = kBootDataDefaultCounterVal;
d0009710:       |  |  |           |  |      02a92623            sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:533
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_ROM_EXT_OFFSET);
d0009714:       |  |  |           |  |      11000513            li      a0,272
d0009718:       |  |  |           |  |      6b2040ef            jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:532
  boot_data->min_security_version_rom_ext =
d000971c:       |  |  |           |  |      02a92823            sw      a0,48(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:535
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_BL0_OFFSET);
d0009720:       |  |  |           |  |      11400513            li      a0,276
d0009724:       |  |  |           |  |      6a6040ef            jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:534
  boot_data->min_security_version_bl0 =
d0009728:       |  |  |           |  |      02a92a23            sw      a0,52(s2)
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d000972c:       |  |  |           |  |      3ce040ef            jal     ra,d000dafa <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009730:       |  |  |           |  |      02000593            li      a1,32
d0009734:       |  |  |           |  |      8522                        mv      a0,s0
d0009736:       |  |  |           |  |      3de040ef            jal     ra,d000db14 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d000973a:       |  |  |           |  |      854a                        mv      a0,s2
d000973c:       |  |  |           |  |      446040ef            jal     ra,d000db82 <hmac_sha256_final>
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:556
      return boot_data_default_get(lc_state, boot_data);
    default:
      HARDENED_UNREACHABLE();
  }
}
d0009740:       \--|--|-----------|--|----> 8526                        mv      a0,s1
d0009742:          |  |           |  |      5902                        lw      s2,32(sp)
d0009744:          |  |           |  |      5492                        lw      s1,36(sp)
d0009746:          |  |           |  |      5422                        lw      s0,40(sp)
d0009748:          |  |           |  |      50b2                        lw      ra,44(sp)
d000974a:          |  |           |  |      6145                        addi    sp,sp,48
d000974c:          |  |           |  |      8082                        ret
d000974e:          |  \-----------|--|----> 00d5c4b3            xor     s1,a1,a3
d0009752:          |              |  \----- b771                        j       d00096de <boot_data_read+0x154>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:554
      HARDENED_UNREACHABLE();
d0009754:          \--------------|-------> 0000                        unimp
d0009756:                         |         0000                        unimp
d0009758:                         |         0000                        unimp
d000975a:                         |         0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:524
      HARDENED_UNREACHABLE();
d000975c:                         \-------> 0000                        unimp
d000975e:                                   0000                        unimp
d0009760:                                   0000                        unimp
d0009762:                                   0000                        unimp

d0009764 <boot_data_active_page_find>:
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:457
                                              boot_data_t *boot_data) {
d0009764:                                         716d                  addi    sp,sp,-272
d0009766:                                         10112623              sw      ra,268(sp)
d000976a:                                         10812423              sw      s0,264(sp)
d000976e:                                         10912223              sw      s1,260(sp)
d0009772:                                         11212023              sw      s2,256(sp)
d0009776:                                         dfce                  sw      s3,252(sp)
d0009778:                                         ddd2                  sw      s4,248(sp)
d000977a:                                         dbd6                  sw      s5,244(sp)
d000977c:                                         d9da                  sw      s6,240(sp)
d000977e:                                         d7de                  sw      s7,236(sp)
d0009780:                                         d5e2                  sw      s8,232(sp)
d0009782:                                         d3e6                  sw      s9,228(sp)
d0009784:                                         d1ea                  sw      s10,224(sp)
d0009786:                                         cfee                  sw      s11,220(sp)
d0009788:                                         8b2a                  mv      s6,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000978a:                                         4501                  li      a0,0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:458
  *page_info = (active_page_info_t){
d000978c:                                         000b2023              sw      zero,0(s6)
d0009790:                                         1d400913              li      s2,468
d0009794:                                         012b2223              sw      s2,4(s6)
d0009798:                                         02000c13              li      s8,32
d000979c:                                         018b2423              sw      s8,8(s6)
d00097a0:                                         012b2623              sw      s2,12(s6)
d00097a4:                                         018b2823              sw      s8,16(s6)
d00097a8:                                         4605                  li      a2,1
d00097aa:                                         c02e                  sw      a1,0(sp)
d00097ac:                                         4b81                  li      s7,0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d00097ae:       /-------------------------------- 30a66b63              bltu    a2,a0,d0009ac4 <boot_data_active_page_find+0x360>
d00097b2:       |                                 4b81                  li      s7,0
d00097b4:       |                                 00005517              auipc   a0,0x5
d00097b8:       |                                 07450513              addi    a0,a0,116 # d000e828 <kPages>
d00097bc:       |                                 c22a                  sw      a0,4(sp)
d00097be:       |                                 44a5                  li      s1,9
d00097c0:       |                                 73900d13              li      s10,1849
d00097c4:       |                                 4cc1                  li      s9,16
d00097c6:       |                                 41445537              lui     a0,0x41445
d00097ca:       |                                 f4250513              addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
d00097ce:       |                                 c62a                  sw      a0,12(sp)
d00097d0:       |                                 03424537              lui     a0,0x3424
d00097d4:       |                                 40d50513              addi    a0,a0,1037 # 342440d <_rom_ext_virtual_size+0x33e440d>
d00097d8:       |                                 c42a                  sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d00097da:       |  /----------------------------> 002b9513              slli    a0,s7,0x2
d00097de:       |  |                              4592                  lw      a1,4(sp)
d00097e0:       |  |                              952e                  add     a0,a0,a1
d00097e2:       |  |                              00052a03              lw      s4,0(a0)
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:429
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d00097e6:       |  |                              4519                  li      a0,6
d00097e8:       |  |                              c8aa                  sw      a0,80(sp)
d00097ea:       |  |                              caa6                  sw      s1,84(sp)
d00097ec:       |  |                              cca6                  sw      s1,88(sp)
d00097ee:       |  |                              088c                  addi    a1,sp,80
d00097f0:       |  |                              8552                  mv      a0,s4
d00097f2:       |  |                              599010ef              jal     ra,d000b58a <flash_ctrl_info_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00097f6:       |  |                              4501                  li      a0,0
d00097f8:       |  |                              4d81                  li      s11,0
d00097fa:       |  |                              1d400993              li      s3,468
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d00097fe:       |  |                              45fd                  li      a1,31
d0009800:       |  |              /-------------- 10a5e263              bltu    a1,a0,d0009904 <boot_data_active_page_find+0x1a0>
d0009804:       |  |              |               4d81                  li      s11,0
d0009806:       |  |              |               1d400993              li      s3,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d000980a:       |  |              |  /----------> 002d9513              slli    a0,s11,0x2
d000980e:       |  |              |  |            088c                  addi    a1,sp,80
d0009810:       |  |              |  |            00a584b3              add     s1,a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:126
  *masked_identifier = 0;
d0009814:       |  |              |  |            0004a023              sw      zero,0(s1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:128
  const uint32_t offset = index * sizeof(boot_data_t) + kIsValidOffset;
d0009818:       |  |              |  |            006d9a93              slli    s5,s11,0x6
d000981c:       |  |              |  |            020ae593              ori     a1,s5,32
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
  HARDENED_RETURN_IF_ERROR(flash_ctrl_info_read(page, offset, 3, buf));
d0009820:       |  |              |  |            460d                  li      a2,3
d0009822:       |  |              |  |            0994                  addi    a3,sp,208
d0009824:       |  |              |  |            8552                  mv      a0,s4
d0009826:       |  |              |  |            037010ef              jal     ra,d000b05c <flash_ctrl_info_read>
d000982a:       |  |              |  |            842a                  mv      s0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000982c:       |  |              |  |            85aa                  mv      a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
d000982e:       |  |              |  |     /----- 03a59363              bne     a1,s10,d0009854 <boot_data_active_page_find+0xf0>
d0009832:       |  |              |  |     |      73900513              li      a0,1849
d0009836:       |  |              |  |     |  /-- 00a40663              beq     s0,a0,d0009842 <boot_data_active_page_find+0xde>
d000983a:       |  |              |  |     |  |   0000                  unimp
d000983c:       |  |              |  |     |  |   0000                  unimp
d000983e:       |  |              |  |     |  |   0000                  unimp
d0009840:       |  |              |  |     |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:130
  *masked_identifier = buf[0] & buf[1] & buf[2];
d0009842:       |  |              |  |     |  \-> 454e                  lw      a0,208(sp)
d0009844:       |  |              |  |     |      45de                  lw      a1,212(sp)
d0009846:       |  |              |  |     |      466e                  lw      a2,216(sp)
d0009848:       |  |              |  |     |      8d6d                  and     a0,a0,a1
d000984a:       |  |              |  |     |      8d71                  and     a0,a0,a2
d000984c:       |  |              |  |     |      c088                  sw      a0,0(s1)
d000984e:       |  |              |  |     |      73900413              li      s0,1849
d0009852:       |  |              |  |     |  /-- a011                  j       d0009856 <boot_data_active_page_find+0xf2>
d0009854:       |  |              |  |     \--|-> 4501                  li      a0,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009856:       |  |              |  |        \-> 85a2                  mv      a1,s0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d0009858:       |  |  /-----------|--|----------- 23a59063              bne     a1,s10,d0009a78 <boot_data_active_page_find+0x314>
d000985c:       |  |  |           |  |        /-- 01a40663              beq     s0,s10,d0009868 <boot_data_active_page_find+0x104>
d0009860:       |  |  |           |  |        |   0000                  unimp
d0009862:       |  |  |           |  |        |   0000                  unimp
d0009864:       |  |  |           |  |        |   0000                  unimp
d0009866:       |  |  |           |  |        |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:335
    if (sniff_results[i] == kFlashCtrlErasedWord) {
d0009868:       |  |  |           |  |        \-> 55fd                  li      a1,-1
d000986a:       |  |  |           |  |  /-------- 08b51263              bne     a0,a1,d00098ee <boot_data_active_page_find+0x18a>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d000986e:       |  |  |           |  |  |         4641                  li      a2,16
d0009870:       |  |  |           |  |  |         0814                  addi    a3,sp,16
d0009872:       |  |  |           |  |  |         8552                  mv      a0,s4
d0009874:       |  |  |           |  |  |         85d6                  mv      a1,s5
d0009876:       |  |  |           |  |  |         7e6010ef              jal     ra,d000b05c <flash_ctrl_info_read>
d000987a:       |  |  |           |  |  |         842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d000987c:       |  |  +-----------|--|--|-------- 1fa51e63              bne     a0,s10,d0009a78 <boot_data_active_page_find+0x314>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009880:       |  |  |           |  |  |         4581                  li      a1,0
d0009882:       |  |  |           |  |  |         73900513              li      a0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
d0009886:       |  |  |           |  |  |     /-- 00a40663              beq     s0,a0,d0009892 <boot_data_active_page_find+0x12e>
d000988a:       |  |  |           |  |  |     |   0000                  unimp
d000988c:       |  |  |           |  |  |     |   0000                  unimp
d000988e:       |  |  |           |  |  |     |   0000                  unimp
d0009890:       |  |  |           |  |  |     |   0000                  unimp
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d0009892:       |  |  |           |  |  |     \-> 463d                  li      a2,15
d0009894:       |  |  |           |  |  |  /----- 00b66e63              bltu    a2,a1,d00098b0 <boot_data_active_page_find+0x14c>
d0009898:       |  |  |           |  |  |  |      4601                  li      a2,0
d000989a:       |  |  |           |  |  |  |      55fd                  li      a1,-1
d000989c:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considered a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000989e:       |  |  |           |  |  |  |  /-> 4298                  lw      a4,0(a3)
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:84
    res &= read_32(boot_data);
d00098a0:       |  |  |           |  |  |  |  |   8df9                  and     a1,a1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098a2:       |  |  |           |  |  |  |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:85
    is_empty &= read_32(boot_data);
d00098a4:       |  |  |           |  |  |  |  |   8d79                  and     a0,a0,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098a6:       |  |  |           |  |  |  |  |   8732                  mv      a4,a2
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:86
    boot_data = (char *)boot_data + sizeof(uint32_t);
d00098a8:       |  |  |           |  |  |  |  |   0691                  addi    a3,a3,4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098aa:       |  |  |           |  |  |  |  \-- ff976ae3              bltu    a4,s9,d000989e <boot_data_active_page_find+0x13a>
d00098ae:       |  |  |           |  |  |  |  /-- a019                  j       d00098b4 <boot_data_active_page_find+0x150>
d00098b0:       |  |  |           |  |  |  \--|-> 4601                  li      a2,0
d00098b2:       |  |  |           |  |  |     |   55fd                  li      a1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:88
  HARDENED_CHECK_EQ(i, kBootDataNumWords);
d00098b4:       |  |  |           |  |  |  /--\-X 01960663              beq     a2,s9,d00098c0 <boot_data_active_page_find+0x15c>
d00098b8:       |  |  |           |  |  |  |      0000                  unimp
d00098ba:       |  |  |           |  |  |  |      0000                  unimp
d00098bc:       |  |  |           |  |  |  |      0000                  unimp
d00098be:       |  |  |           |  |  |  |      0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098c0:       |  |  |           |  |  |  \----> 862e                  mv      a2,a1
d00098c2:       |  |  |           |  |  |         1d400993              li      s3,468
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:89
  if (launder32(res) == kFlashCtrlErasedWord) {
d00098c6:       |  |  |           |  |  |         56fd                  li      a3,-1
d00098c8:       |  |  |           |  |  |  /----- 00d61a63              bne     a2,a3,d00098dc <boot_data_active_page_find+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:90
    HARDENED_CHECK_EQ(res, kFlashCtrlErasedWord);
d00098cc:       |  |  |           |  |  |  |      567d                  li      a2,-1
d00098ce:       |  |  |           |  |  |  |  /-- 00c58663              beq     a1,a2,d00098da <boot_data_active_page_find+0x176>
d00098d2:       |  |  |           |  |  |  |  |   0000                  unimp
d00098d4:       |  |  |           |  |  |  |  |   0000                  unimp
d00098d6:       |  |  |           |  |  |  |  |   0000                  unimp
d00098d8:       |  |  |           |  |  |  |  |   0000                  unimp
d00098da:       |  |  |           |  |  |  |  \-> 89aa                  mv      s3,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098dc:       |  |  |           |  |  |  \----> 854e                  mv      a0,s3
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:338
      if (launder32(has_empty_entry) == kHardenedBoolTrue) {
d00098de:       |  |  |           |  |  |     /-- 01a50d63              beq     a0,s10,d00098f8 <boot_data_active_page_find+0x194>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:342
      HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolFalse);
d00098e2:       |  |  |           |  |  +-----|-- 01298663              beq     s3,s2,d00098ee <boot_data_active_page_find+0x18a>
d00098e6:       |  |  |           |  |  |     |   0000                  unimp
d00098e8:       |  |  |           |  |  |     |   0000                  unimp
d00098ea:       |  |  |           |  |  |     |   0000                  unimp
d00098ec:       |  |  |           |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d00098ee:       |  |  |           |  |  \-----|-> 0d85                  addi    s11,s11,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098f0:       |  |  |           |  |        |   856e                  mv      a0,s11
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
d00098f2:       |  |  |           |  \--------|-- f1856ce3              bltu    a0,s8,d000980a <boot_data_active_page_find+0xa6>
d00098f6:       |  |  |           +-----------|-- a039                  j       d0009904 <boot_data_active_page_find+0x1a0>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:339
        HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolTrue);
d00098f8:       |  |  |           +-----------\-X 01a98663              beq     s3,s10,d0009904 <boot_data_active_page_find+0x1a0>
d00098fc:       |  |  |           |               0000                  unimp
d00098fe:       |  |  |           |               0000                  unimp
d0009900:       |  |  |           |               0000                  unimp
d0009902:       |  |  |           |               0000                  unimp
d0009904:       |  |  |           \-------------> 895a                  mv      s2,s6
d0009906:       |  |  |                           02000513              li      a0,32
d000990a:       |  |  |                           fffd8c13              addi    s8,s11,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:347
  HARDENED_CHECK_LE(i, kBootDataEntriesPerPage);
d000990e:       |  |  |                       /-- 01b57663              bgeu    a0,s11,d000991a <boot_data_active_page_find+0x1b6>
d0009912:       |  |  |                       |   0000                  unimp
d0009914:       |  |  |                       |   0000                  unimp
d0009916:       |  |  |                       |   0000                  unimp
d0009918:       |  |  |                       |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000991a:       |  |  |                       \-> 8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d000991c:       |  |  |           /-------------- 07b57863              bgeu    a0,s11,d000998c <boot_data_active_page_find+0x228>
d0009920:       |  |  |           |               4b01                  li      s6,0
d0009922:       |  |  |           |               006d9513              slli    a0,s11,0x6
d0009926:       |  |  |           |               fc050493              addi    s1,a0,-64
d000992a:       |  |  |           |               002d9513              slli    a0,s11,0x2
d000992e:       |  |  |           |               00ec                  addi    a1,sp,76
d0009930:       |  |  |           |               00a58ab3              add     s5,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009934:       |  |  |           |     /-------> 855a                  mv      a0,s6
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
d0009936:       |  |  |           |  /--|-------- 05b57c63              bgeu    a0,s11,d000998e <boot_data_active_page_find+0x22a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:357
    if (sniff_results[i] == kBootDataIdentifier) {
d000993a:       |  |  |           |  |  |         000aa503              lw      a0,0(s5)
d000993e:       |  |  |           |  |  |         45b2                  lw      a1,12(sp)
d0009940:       |  |  |           |  |  |  /----- 02b51d63              bne     a0,a1,d000997a <boot_data_active_page_find+0x216>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d0009944:       |  |  |           |  |  |  |      4641                  li      a2,16
d0009946:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
d0009948:       |  |  |           |  |  |  |      8552                  mv      a0,s4
d000994a:       |  |  |           |  |  |  |      85a6                  mv      a1,s1
d000994c:       |  |  |           |  |  |  |      710010ef              jal     ra,d000b05c <flash_ctrl_info_read>
d0009950:       |  |  |           |  |  |  |      842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:358
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d0009952:       |  |  |        /--|--|--|--|----- 0ba51263              bne     a0,s10,d00099f6 <boot_data_active_page_find+0x292>
d0009956:       |  |  |        |  |  |  |  |  /-- 01a40663              beq     s0,s10,d0009962 <boot_data_active_page_find+0x1fe>
d000995a:       |  |  |        |  |  |  |  |  |   0000                  unimp
d000995c:       |  |  |        |  |  |  |  |  |   0000                  unimp
d000995e:       |  |  |        |  |  |  |  |  |   0000                  unimp
d0009960:       |  |  |        |  |  |  |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:359
      rom_error_t is_valid = boot_data_check(&buf);
d0009962:       |  |  |        |  |  |  |  |  \-> 0808                  addi    a0,sp,16
d0009964:       |  |  |        |  |  |  |  |      2a69                  jal     d0009afe <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009966:       |  |  |        |  |  |  |  |      85aa                  mv      a1,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:360
      if (launder32(is_valid) == kErrorOk) {
d0009968:       |  |  |  /-----|--|--|--|--|----- 15a58663              beq     a1,s10,d0009ab4 <boot_data_active_page_find+0x350>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:367
      HARDENED_CHECK_EQ(is_valid, kErrorBootDataInvalid);
d000996c:       |  |  |  |     |  |  |  |  |      45a2                  lw      a1,8(sp)
d000996e:       |  |  |  |     |  |  |  |  +----- 00b50663              beq     a0,a1,d000997a <boot_data_active_page_find+0x216>
d0009972:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009974:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009976:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009978:       |  |  |  |     |  |  |  |  |      0000                  unimp
d000997a:       |  |  |  |     |  |  |  |  \----> 1c7d                  addi    s8,s8,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:355
       --i, ++j) {
d000997c:       |  |  |  |     |  |  |  |         0b05                  addi    s6,s6,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000997e:       |  |  |  |     |  |  |  |         8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d0009980:       |  |  |  |     |  |  |  |         fc048493              addi    s1,s1,-64
d0009984:       |  |  |  |     |  |  |  |         1af1                  addi    s5,s5,-4
d0009986:       |  |  |  |     |  |  |  \-------- fbb567e3              bltu    a0,s11,d0009934 <boot_data_active_page_find+0x1d0>
d000998a:       |  |  |  |     |  |  +----------- a011                  j       d000998e <boot_data_active_page_find+0x22a>
d000998c:       |  |  |  |     |  \--|----------> 4b01                  li      s6,0
d000998e:       |  |  |  |     |     \----------> 1d400593              li      a1,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:373
  HARDENED_CHECK_LE(j, first_empty_index);
d0009992:       |  |  |  |  /--|--------------/-X 016df663              bgeu    s11,s6,d000999e <boot_data_active_page_find+0x23a>
d0009996:       |  |  |  |  |  |              |   0000                  unimp
d0009998:       |  |  |  |  |  |              |   0000                  unimp
d000999a:       |  |  |  |  |  |              |   0000                  unimp
d000999c:       |  |  |  |  |  |              |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000999e:       |  |  |  |  |  |              \-> 852e                  mv      a0,a1
d00099a0:       |  |  |  |  |  |                  73900413              li      s0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:375
  if (launder32(has_valid_entry) == kHardenedBoolTrue) {
d00099a4:       |  |  |  |  |  +----------------- 04851963              bne     a0,s0,d00099f6 <boot_data_active_page_find+0x292>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:376
    HARDENED_CHECK_EQ(has_valid_entry, kHardenedBoolTrue);
d00099a8:       |  |  |  |  |  |              /-- 01a58663              beq     a1,s10,d00099b4 <boot_data_active_page_find+0x250>
d00099ac:       |  |  |  |  |  |              |   0000                  unimp
d00099ae:       |  |  |  |  |  |              |   0000                  unimp
d00099b0:       |  |  |  |  |  |              |   0000                  unimp
d00099b2:       |  |  |  |  |  |              |   0000                  unimp
d00099b4:       |  |  |  |  |  |              \-> 8b4a                  mv      s6,s2
d00099b6:       |  |  |  |  |  |                  86ae                  mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:377
    if (launder32(page_info->has_valid_entry) == kHardenedBoolFalse) {
d00099b8:       |  |  |  |  |  |                  00c92583              lw      a1,12(s2)
d00099bc:       |  |  |  |  |  |                  00c92503              lw      a0,12(s2)
d00099c0:       |  |  |  |  |  |                  1d400913              li      s2,468
d00099c4:       |  |  |  |  |  |           /----- 03259d63              bne     a1,s2,d00099fe <boot_data_active_page_find+0x29a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:379
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolFalse);
d00099c8:       |  |  |  |  |  |           |  /-- 01250663              beq     a0,s2,d00099d4 <boot_data_active_page_find+0x270>
d00099cc:       |  |  |  |  |  |           |  |   0000                  unimp
d00099ce:       |  |  |  |  |  |           |  |   0000                  unimp
d00099d0:       |  |  |  |  |  |           |  |   0000                  unimp
d00099d2:       |  |  |  |  |  |           |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:380
      *page_info = (active_page_info_t){
d00099d4:       |  |  |  |  |  |           |  \-> 014b2023              sw      s4,0(s6)
d00099d8:       |  |  |  |  |  |           |      013b2223              sw      s3,4(s6)
d00099dc:       |  |  |  |  |  |           |      01bb2423              sw      s11,8(s6)
d00099e0:       |  |  |  |  |  |           |      00db2623              sw      a3,12(s6)
d00099e4:       |  |  |  |  |  |           |      018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:387
      *boot_data = buf;
d00099e8:       |  |  |  |  |  |           |      080c                  addi    a1,sp,16
d00099ea:       |  |  |  |  |  |           |      04000613              li      a2,64
d00099ee:       |  |  |  |  |  |           |      4502                  lw      a0,0(sp)
d00099f0:       |  |  |  |  |  |     /-----|----> 646040ef              jal     ra,d000e036 <memcpy>
d00099f4:       |  |  |  |  |  |  /--|-----|----- a041                  j       d0009a74 <boot_data_active_page_find+0x310>
d00099f6:       |  |  |  |  |  \--|--|-----|----> 8b4a                  mv      s6,s2
d00099f8:       |  |  |  |  |     |  |     |      1d400913              li      s2,468
d00099fc:       |  |  |  |  |     +--|-----|----- a8a5                  j       d0009a74 <boot_data_active_page_find+0x310>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d00099fe:       |  |  |  |  |     |  |  /--\----X 05a51863              bne     a0,s10,d0009a4e <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:389
               launder32(buf.counter) > boot_data->counter) {
d0009a02:       |  |  |  |  |     |  |  |         5572                  lw      a0,60(sp)
d0009a04:       |  |  |  |  |     |  |  |         4582                  lw      a1,0(sp)
d0009a06:       |  |  |  |  |     |  |  |         55cc                  lw      a1,44(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d0009a08:       |  |  |  |  |     |  |  +-------- 04a5f363              bgeu    a1,a0,d0009a4e <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:391
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009a0c:       |  |  |  |  |     |  |  |         00cb2503              lw      a0,12(s6)
d0009a10:       |  |  |  |  |     |  |  |         73900413              li      s0,1849
d0009a14:       |  |  |  |  |     |  |  |     /-- 00850663              beq     a0,s0,d0009a20 <boot_data_active_page_find+0x2bc>
d0009a18:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a1a:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a1c:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a1e:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:392
      HARDENED_CHECK_GT(buf.counter, boot_data->counter);
d0009a20:       |  |  |  |  |     |  |  |     \-> 5672                  lw      a2,60(sp)
d0009a22:       |  |  |  |  |     |  |  |         4502                  lw      a0,0(sp)
d0009a24:       |  |  |  |  |     |  |  |         554c                  lw      a1,44(a0)
d0009a26:       |  |  |  |  |     |  |  |     /-- 00c5e663              bltu    a1,a2,d0009a32 <boot_data_active_page_find+0x2ce>
d0009a2a:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a2c:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a2e:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a30:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:393
      *page_info = (active_page_info_t){
d0009a32:       |  |  |  |  |     |  |  |     \-> 014b2023              sw      s4,0(s6)
d0009a36:       |  |  |  |  |     |  |  |         013b2223              sw      s3,4(s6)
d0009a3a:       |  |  |  |  |     |  |  |         01bb2423              sw      s11,8(s6)
d0009a3e:       |  |  |  |  |     |  |  |         00db2623              sw      a3,12(s6)
d0009a42:       |  |  |  |  |     |  |  |         018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:400
      *boot_data = buf;
d0009a46:       |  |  |  |  |     |  |  |         080c                  addi    a1,sp,16
d0009a48:       |  |  |  |  |     |  |  |         04000613              li      a2,64
d0009a4c:       |  |  |  |  |     |  \--|-------- b755                  j       d00099f0 <boot_data_active_page_find+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:402
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009a4e:       |  |  |  |  |     |     \-------> 00cb2503              lw      a0,12(s6)
d0009a52:       |  |  |  |  |     |               73900413              li      s0,1849
d0009a56:       |  |  |  |  |     |           /-- 00850663              beq     a0,s0,d0009a62 <boot_data_active_page_find+0x2fe>
d0009a5a:       |  |  |  |  |     |           |   0000                  unimp
d0009a5c:       |  |  |  |  |     |           |   0000                  unimp
d0009a5e:       |  |  |  |  |     |           |   0000                  unimp
d0009a60:       |  |  |  |  |     |           |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:405
      HARDENED_CHECK_LT(buf.counter, boot_data->counter);
d0009a62:       |  |  |  |  |     |           \-> 5572                  lw      a0,60(sp)
d0009a64:       |  |  |  |  |     |               4582                  lw      a1,0(sp)
d0009a66:       |  |  |  |  |     |               55cc                  lw      a1,44(a1)
d0009a68:       |  |  |  |  |     +-------------- 00b56663              bltu    a0,a1,d0009a74 <boot_data_active_page_find+0x310>
d0009a6c:       |  |  |  |  |     |               0000                  unimp
d0009a6e:       |  |  |  |  |     |               0000                  unimp
d0009a70:       |  |  |  |  |     |               0000                  unimp
d0009a72:       |  |  |  |  |     |               0000                  unimp
d0009a74:       |  |  |  |  |     \-------------> 02000c13              li      s8,32
d0009a78:       |  |  \--|--|-------------------> 44a5                  li      s1,9
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:436
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d0009a7a:       |  |     |  |                     c8a6                  sw      s1,80(sp)
d0009a7c:       |  |     |  |                     caa6                  sw      s1,84(sp)
d0009a7e:       |  |     |  |                     cca6                  sw      s1,88(sp)
d0009a80:       |  |     |  |                     088c                  addi    a1,sp,80
d0009a82:       |  |     |  |                     8552                  mv      a0,s4
d0009a84:       |  |     |  |                     307010ef              jal     ra,d000b58a <flash_ctrl_info_perms_set>
d0009a88:       |  |     |  |                     0fff6517              auipc   a0,0xfff6
d0009a8c:       |  |     |  |                     5ec50513              addi    a0,a0,1516 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:441
  SEC_MMIO_WRITE_INCREMENT(2 * kFlashCtrlSecMmioInfoPermsSet);
d0009a90:       |  |     |  |                     450c                  lw      a1,8(a0)
d0009a92:       |  |     |  |                     0589                  addi    a1,a1,2
d0009a94:       |  |     |  |                     c50c                  sw      a1,8(a0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009a96:       |  |     |  |                     8522                  mv      a0,s0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009a98:       |  |     |  |              /----- 03a51f63              bne     a0,s10,d0009ad6 <boot_data_active_page_find+0x372>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009a9c:       |  |     |  |              |      0b85                  addi    s7,s7,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009a9e:       |  |     |  |              |  /-- 01a40663              beq     s0,s10,d0009aaa <boot_data_active_page_find+0x346>
d0009aa2:       |  |     |  |              |  |   0000                  unimp
d0009aa4:       |  |     |  |              |  |   0000                  unimp
d0009aa6:       |  |     |  |              |  |   0000                  unimp
d0009aa8:       |  |     |  |              |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009aaa:       |  |     |  |              |  \-> 855e                  mv      a0,s7
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009aac:       |  |     |  |              |      4589                  li      a1,2
d0009aae:       |  \-----|--|--------------|----- d2b566e3              bltu    a0,a1,d00097da <boot_data_active_page_find+0x76>
d0009ab2:       +--------|--|--------------|----- a809                  j       d0009ac4 <boot_data_active_page_find+0x360>
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:361
        HARDENED_CHECK_EQ(is_valid, kErrorOk);
d0009ab4:       |        \--|--------------|--/-X 01a50663              beq     a0,s10,d0009ac0 <boot_data_active_page_find+0x35c>
d0009ab8:       |           |              |  |   0000                  unimp
d0009aba:       |           |              |  |   0000                  unimp
d0009abc:       |           |              |  |   0000                  unimp
d0009abe:       |           |              |  |   0000                  unimp
d0009ac0:       |           |              |  \-> 85aa                  mv      a1,a0
d0009ac2:       |           \--------------|----- bdc1                  j       d0009992 <boot_data_active_page_find+0x22e>
d0009ac4:       \--------------------------|----> 4509                  li      a0,2
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:471
  HARDENED_CHECK_EQ(i, ARRAYSIZE(kPages));
d0009ac6:                                  |  /-- 00ab8663              beq     s7,a0,d0009ad2 <boot_data_active_page_find+0x36e>
d0009aca:                                  |  |   0000                  unimp
d0009acc:                                  |  |   0000                  unimp
d0009ace:                                  |  |   0000                  unimp
d0009ad0:                                  |  |   0000                  unimp
d0009ad2:                                  |  \-> 73900413              li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:474
}
d0009ad6:                                  \----> 8522                  mv      a0,s0
d0009ad8:                                         4dfe                  lw      s11,220(sp)
d0009ada:                                         5d0e                  lw      s10,224(sp)
d0009adc:                                         5c9e                  lw      s9,228(sp)
d0009ade:                                         5c2e                  lw      s8,232(sp)
d0009ae0:                                         5bbe                  lw      s7,236(sp)
d0009ae2:                                         5b4e                  lw      s6,240(sp)
d0009ae4:                                         5ade                  lw      s5,244(sp)
d0009ae6:                                         5a6e                  lw      s4,248(sp)
d0009ae8:                                         59fe                  lw      s3,252(sp)
d0009aea:                                         10012903              lw      s2,256(sp)
d0009aee:                                         10412483              lw      s1,260(sp)
d0009af2:                                         10812403              lw      s0,264(sp)
d0009af6:                                         10c12083              lw      ra,268(sp)
d0009afa:                                         6151                  addi    sp,sp,272
d0009afc:                                         8082                  ret

d0009afe <boot_data_check>:
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:627
 * Checks whether the digest of a boot data entry is valid.
 *
 * @param boot_data A buffer that holds a boot data entry.
 * @return Whether the digest of the entry is valid.
 */
rom_error_t boot_data_check(const boot_data_t *boot_data) {
d0009afe:              7179                     addi    sp,sp,-48
d0009b00:              d606                     sw      ra,44(sp)
d0009b02:              d422                     sw      s0,40(sp)
d0009b04:              d226                     sw      s1,36(sp)
d0009b06:              d04a                     sw      s2,32(sp)
d0009b08:              892a                     mv      s2,a0
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d0009b0a:              7f1030ef                 jal     ra,d000dafa <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009b0e:              02090513                 addi    a0,s2,32
d0009b12:              02000593                 li      a1,32
d0009b16:              7ff030ef                 jal     ra,d000db14 <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d0009b1a:              850a                     mv      a0,sp
d0009b1c:              848a                     mv      s1,sp
d0009b1e:              064040ef                 jal     ra,d000db82 <hmac_sha256_final>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b22:              4681                     li      a3,0
d0009b24:              03424737                 lui     a4,0x3424
d0009b28:              40d70513                 addi    a0,a4,1037 # 342440d <_rom_ext_virtual_size+0x33e440d>
d0009b2c:              479d                     li      a5,7
d0009b2e:              4581                     li      a1,0
d0009b30:              862a                     mv      a2,a0
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  rom_error_t error = kErrorBootDataInvalid;
  hmac_digest_t act_digest;
  boot_data_digest_compute(boot_data, &act_digest);

  size_t i = 0;
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b32:       /----- 02d7ea63                 bltu    a5,a3,d0009b66 <boot_data_check+0x68>
d0009b36:       |      4581                     li      a1,0
d0009b38:       |      00005697                 auipc   a3,0x5
d0009b3c:       |      cf868693                 addi    a3,a3,-776 # d000e830 <kCheckShares>
d0009b40:       |      40d70613                 addi    a2,a4,1037
d0009b44:       |      4821                     li      a6,8
d0009b46:       |      87ca                     mv      a5,s2
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:638
    error ^=
        boot_data->digest.digest[i] ^ act_digest.digest[i] ^ kCheckShares[i];
d0009b48:       |  /-> 4380                     lw      s0,0(a5)
d0009b4a:       |  |   4098                     lw      a4,0(s1)
d0009b4c:       |  |   0006a883                 lw      a7,0(a3)
d0009b50:       |  |   8e21                     xor     a2,a2,s0
d0009b52:       |  |   8e39                     xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b54:       |  |   0585                     addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:637
    error ^=
d0009b56:       |  |   01164633                 xor     a2,a2,a7
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b5a:       |  |   872e                     mv      a4,a1
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b5c:       |  |   0691                     addi    a3,a3,4
d0009b5e:       |  |   0791                     addi    a5,a5,4
d0009b60:       |  |   0491                     addi    s1,s1,4
d0009b62:       |  \-- ff0763e3                 bltu    a4,a6,d0009b48 <boot_data_check+0x4a>
d0009b66:       \----> 46a1                     li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:640
  }
  HARDENED_CHECK_EQ(i, kHmacDigestNumWords);
d0009b68:          /-- 00d58663                 beq     a1,a3,d0009b74 <boot_data_check+0x76>
d0009b6c:          |   0000                     unimp
d0009b6e:          |   0000                     unimp
d0009b70:          |   0000                     unimp
d0009b72:          |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:641
  error ^= boot_data->identifier ^ kCheckShares[kHmacDigestNumWords];
d0009b74:          \-> 02892583                 lw      a1,40(s2)
d0009b78:              8db1                     xor     a1,a1,a2
d0009b7a:              381df637                 lui     a2,0x381df
d0009b7e:              e3a60613                 addi    a2,a2,-454 # 381dee3a <_epmp_stack_guard_na4+0x1d7e3a>
d0009b82:              8db1                     xor     a1,a1,a2
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b84:              86ae                     mv      a3,a1
d0009b86:              73900613                 li      a2,1849
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:642
  if (launder32(error) == kErrorOk) {
d0009b8a:       /----- 00c69963                 bne     a3,a2,d0009b9c <boot_data_check+0x9e>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:643
    HARDENED_CHECK_EQ(error, kErrorOk);
d0009b8e:       |  /-- 00c58663                 beq     a1,a2,d0009b9a <boot_data_check+0x9c>
d0009b92:       |  |   0000                     unimp
d0009b94:       |  |   0000                     unimp
d0009b96:       |  |   0000                     unimp
d0009b98:       |  |   0000                     unimp
d0009b9a:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:648
    return error;
  }

  return kErrorBootDataInvalid;
}
d0009b9c:       \----> 5902                     lw      s2,32(sp)
d0009b9e:              5492                     lw      s1,36(sp)
d0009ba0:              5422                     lw      s0,40(sp)
d0009ba2:              50b2                     lw      ra,44(sp)
d0009ba4:              6145                     addi    sp,sp,48
d0009ba6:              8082                     ret

d0009ba8 <bootstrap_requested>:
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:335

  spi_device_flash_status_clear();
  return error;
}

hardened_bool_t bootstrap_requested(void) {
d0009ba8:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:337
  uint32_t res =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d0009baa:              c606                     sw      ra,12(sp)
d0009bac:              36400513                 li      a0,868
d0009bb0:              21a040ef                 jal     ra,d000ddca <otp_read32>
d0009bb4:              85aa                     mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bb6:              86aa                     mv      a3,a0
d0009bb8:              73900613                 li      a2,1849
d0009bbc:              1d400513                 li      a0,468
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:338
  if (launder32(res) != kHardenedBoolTrue) {
d0009bc0:       /----- 02c69c63                 bne     a3,a2,d0009bf8 <bootstrap_requested+0x50>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:341
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009bc4:       |  /-- 00c58663                 beq     a1,a2,d0009bd0 <bootstrap_requested+0x28>
d0009bc8:       |  |   0000                     unimp
d0009bca:       |  |   0000                     unimp
d0009bcc:       |  |   0000                     unimp
d0009bce:       |  |   0000                     unimp
d0009bd0:       |  \-> c00406b7                 lui     a3,0xc0040
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
 * @param addr the address to read from.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t abs_mmio_read32(uint32_t addr) {
  return *((volatile uint32_t *)addr);
d0009bd4:       |      4a94                     lw      a3,16(a3)
d0009bd6:       |      01c00737                 lui     a4,0x1c00
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:347

  // A single read is sufficient since we expect strong pull-ups on the strap
  // pins.
  res ^= SW_STRAP_BOOTSTRAP;
  res ^=
      abs_mmio_read32(TOP_EARLGREY_GPIO_BASE_ADDR + GPIO_DATA_IN_REG_OFFSET) &
d0009bda:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:346
  res ^=
d0009bdc:       |      8db5                     xor     a1,a1,a3
d0009bde:       |      8db9                     xor     a1,a1,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009be0:       |      86ae                     mv      a3,a1
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:349
      SW_STRAP_MASK;
  if (launder32(res) != kHardenedBoolTrue) {
d0009be2:       +----- 00c69b63                 bne     a3,a2,d0009bf8 <bootstrap_requested+0x50>
d0009be6:       |      73900513                 li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:352
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009bea:       |  /-- 00a58663                 beq     a1,a0,d0009bf6 <bootstrap_requested+0x4e>
d0009bee:       |  |   0000                     unimp
d0009bf0:       |  |   0000                     unimp
d0009bf2:       |  |   0000                     unimp
d0009bf4:       |  |   0000                     unimp
d0009bf6:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:354
  return res;
}
d0009bf8:       \----> 40b2                     lw      ra,12(sp)
d0009bfa:              0141                     addi    sp,sp,16
d0009bfc:              8082                     ret

d0009bfe <bootstrap>:
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:356

rom_error_t bootstrap(void) {
d0009bfe:                                                  7149                 addi    sp,sp,-368
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:357
  hardened_bool_t requested = bootstrap_requested();
d0009c00:                                                  16112623             sw      ra,364(sp)
d0009c04:                                                  16812423             sw      s0,360(sp)
d0009c08:                                                  16912223             sw      s1,356(sp)
d0009c0c:                                                  17212023             sw      s2,352(sp)
d0009c10:                                                  15312e23             sw      s3,348(sp)
d0009c14:                                                  15412c23             sw      s4,344(sp)
d0009c18:                                                  15512a23             sw      s5,340(sp)
d0009c1c:                                                  15612823             sw      s6,336(sp)
d0009c20:                                                  15712623             sw      s7,332(sp)
d0009c24:                                                  15812423             sw      s8,328(sp)
d0009c28:                                                  15912223             sw      s9,324(sp)
d0009c2c:                                                  15a12023             sw      s10,320(sp)
d0009c30:                                                  13b12e23             sw      s11,316(sp)
d0009c34:                                                  3f95                 jal     d0009ba8 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009c36:                                                  85aa                 mv      a1,a0
d0009c38:                                                  73900493             li      s1,1849
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:358
  if (launder32(requested) != kHardenedBoolTrue) {
d0009c3c:       /----------------------------------------- 30959963             bne     a1,s1,d0009f4e <bootstrap+0x350>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:361
    return kErrorBootstrapNotRequested;
  }
  HARDENED_CHECK_EQ(requested, kHardenedBoolTrue);
d0009c40:       |                                      /-- 00950663             beq     a0,s1,d0009c4c <bootstrap+0x4e>
d0009c44:       |                                      |   0000                 unimp
d0009c46:       |                                      |   0000                 unimp
d0009c48:       |                                      |   0000                 unimp
d0009c4a:       |                                      |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:363

  spi_device_init();
d0009c4c:       |                                      \-> 265d                 jal     d0009ff2 <spi_device_init>
d0009c4e:       |                                          d4576cb7             lui     s9,0xd4576
d0009c52:       |                                          543c8d93             addi    s11,s9,1347 # d4576543 <_stack_end+0xf4556543>
d0009c56:       |                                          03425537             lui     a0,0x3425
d0009c5a:       |                                          30350d13             addi    s10,a0,771 # 3425303 <_rom_ext_virtual_size+0x33e5303>
d0009c5e:       |                                          bdd8d537             lui     a0,0xbdd8d
d0009c62:       |                                          a6050993             addi    s3,a0,-1440 # bdd8ca60 <_stack_end+0xddd6ca60>
d0009c66:       |                                          09900a93             li      s5,153
d0009c6a:       |                                          fff80537             lui     a0,0xfff80
d0009c6e:       |                                          051d                 addi    a0,a0,7
d0009c70:       |                                          ce2a                 sw      a0,28(sp)
d0009c72:       |                                          02425537             lui     a0,0x2425
d0009c76:       |                                          30350513             addi    a0,a0,771 # 2425303 <_rom_ext_virtual_size+0x23e5303>
d0009c7a:       |                                          cc2a                 sw      a0,24(sp)
d0009c7c:       |                                          4919                 li      s2,6
d0009c7e:       |                                          01425537             lui     a0,0x1425
d0009c82:       |                                          30350513             addi    a0,a0,771 # 1425303 <_rom_ext_virtual_size+0x13e5303>
d0009c86:       |                                          ca2a                 sw      a0,20(sp)
d0009c88:       |                                          af0eb537             lui     a0,0xaf0eb
d0009c8c:       |                                          b8b50513             addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d0009c90:       |                                          c82a                 sw      a0,16(sp)
d0009c92:       |                                          6505                 lui     a0,0x1
d0009c94:       |                                          80050513             addi    a0,a0,-2048 # 800 <_epmp_reset_rx_size>
d0009c98:       |                                          c62a                 sw      a0,12(sp)
d0009c9a:       |                                          0c700b93             li      s7,199
d0009c9e:       |                                          f3c72537             lui     a0,0xf3c72
d0009ca2:       |                                          bac50b13             addi    s6,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
d0009ca6:       |                                          8032a537             lui     a0,0x8032a
d0009caa:       |                                          be950c13             addi    s8,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009cae:       |  /-------------------------------------> 856e                 mv      a0,s11
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:369

  // Bootstrap event loop.
  bootstrap_state_t state = kBootstrapStateErase;
  rom_error_t error = kErrorUnknown;
  while (true) {
    switch (launder32(state)) {
d0009cb0:       |  |                             /-------- 07350163             beq     a0,s3,d0009d12 <bootstrap+0x114>
d0009cb4:       |  |                    /--------|-------- 11650f63             beq     a0,s6,d0009dd2 <bootstrap+0x1d4>
d0009cb8:       |  |                    |        |         543c8593             addi    a1,s9,1347
d0009cbc:       |  |              /-----|--------|-------- 16b51a63             bne     a0,a1,d0009e30 <bootstrap+0x232>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:371
      case kBootstrapStateErase:
        HARDENED_CHECK_EQ(state, kBootstrapStateErase);
d0009cc0:       |  |              |     |        |     /-- 00bd8663             beq     s11,a1,d0009ccc <bootstrap+0xce>
d0009cc4:       |  |              |     |        |     |   0000                 unimp
d0009cc6:       |  |              |     |        |     |   0000                 unimp
d0009cc8:       |  |              |     |        |     |   0000                 unimp
d0009cca:       |  |              |     |        |     |   0000                 unimp
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:225
  HARDENED_CHECK_EQ(*state, kBootstrapStateErase);
d0009ccc:       |  |              |     |        |  /--\-X 00bd8663             beq     s11,a1,d0009cd8 <bootstrap+0xda>
d0009cd0:       |  |              |     |        |  |      0000                 unimp
d0009cd2:       |  |              |     |        |  |      0000                 unimp
d0009cd4:       |  |              |     |        |  |      0000                 unimp
d0009cd6:       |  |              |     |        |  |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:228
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009cd8:       |  |              |     |        |  \----> 1008                 addi    a0,sp,32
d0009cda:       |  |              |     |        |         2909                 jal     d000a0ec <spi_device_cmd_get>
d0009cdc:       |  |              |  /--|--------|-------- 14951c63             bne     a0,s1,d0009e34 <bootstrap+0x236>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
  if (!bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009ce0:       |  |              |  |  |        |         2969                 jal     d000a17a <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d0009ce2:       |  |              |  |  |        |         8909                 andi    a0,a0,2
d0009ce4:       |  |              |  |  |        |         73900413             li      s0,1849
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
d0009ce8:       |  |     /--------|--|--|--------|-------- 24050363             beqz    a0,d0009f2e <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:235
  switch (cmd.opcode) {
d0009cec:       |  |     |        |  |  |        |         5502                 lw      a0,32(sp)
d0009cee:       |  |     |        |  |  |        |     /-- 01750663             beq     a0,s7,d0009cfa <bootstrap+0xfc>
d0009cf2:       |  |     |        |  |  |        |     |   02000593             li      a1,32
d0009cf6:       |  |     |  /-----|--|--|--------|-----|-- 22b51b63             bne     a0,a1,d0009f2c <bootstrap+0x32e>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:238
      error = bootstrap_chip_erase();
d0009cfa:       |  |     |  |     |  |  |        |     \-> 2c69                 jal     d0009f94 <bootstrap_chip_erase>
d0009cfc:       |  |     |  |     |  |  |        |         842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:239
      HARDENED_RETURN_IF_ERROR(error);
d0009cfe:       |  |     +--|-----|--|--|--------|-------- 22951863             bne     a0,s1,d0009f2e <bootstrap+0x330>
d0009d02:       |  |     |  |     |  |  |        |     /-- 00940663             beq     s0,s1,d0009d0e <bootstrap+0x110>
d0009d06:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d08:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d0a:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d0c:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d0e:       |  |     |  |     |  |  |        |     \-> 8dda                 mv      s11,s6
d0009d10:       |  |     +--|-----|--|--|--------|-------- ac39                 j       d0009f2e <bootstrap+0x330>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:379
      case kBootstrapStateEraseVerify:
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
        error = bootstrap_handle_erase_verify(&state);
        break;
      case kBootstrapStateProgram:
        HARDENED_CHECK_EQ(state, kBootstrapStateProgram);
d0009d12:       |  |     |  |     |  |  |        \-----/-X 013d8663             beq     s11,s3,d0009d1e <bootstrap+0x120>
d0009d16:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d18:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d1a:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d1c:       |  |     |  |     |  |  |              |   0000                 unimp
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:291
  HARDENED_CHECK_EQ(*state, kBootstrapStateProgram);
d0009d1e:       |  |     |  |     |  |  |           /--\-X 013d8663             beq     s11,s3,d0009d2a <bootstrap+0x12c>
d0009d22:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d24:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d26:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d28:       |  |     |  |     |  |  |           |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:294
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009d2a:       |  |     |  |     |  |  |           \----> 1008                 addi    a0,sp,32
d0009d2c:       |  |     |  |     |  |  |                  26c1                 jal     d000a0ec <spi_device_cmd_get>
d0009d2e:       |  |     |  |     |  |  |                  842a                 mv      s0,a0
d0009d30:       |  |     +--|-----|--|--|----------------- 1e951f63             bne     a0,s1,d0009f2e <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009d34:       |  |     |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009d36:       |  |  /--|--|-----|--|--|----------------- 25550d63             beq     a0,s5,d0009f90 <bootstrap+0x392>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:297
      !bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009d3a:       |  |  |  |  |     |  |  |                  2181                 jal     d000a17a <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d0009d3c:       |  |  |  |  |     |  |  |                  8909                 andi    a0,a0,2
d0009d3e:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009d42:       |  |  |  +--|-----|--|--|----------------- 1e050663             beqz    a0,d0009f2e <bootstrap+0x330>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009d46:       |  |  |  |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009d48:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
d0009d4c:       |  |  |  |  |     |  |  |                  09800593             li      a1,152
d0009d50:       |  |  |  |  |     |  |  |     /----------- 0ea5c463             blt     a1,a0,d0009e38 <bootstrap+0x23a>
d0009d54:       |  |  |  |  |     |  |  |     |            4589                 li      a1,2
d0009d56:       |  |  |  |  |     |  |  |  /--|----------- 0eb50663             beq     a0,a1,d0009e42 <bootstrap+0x244>
d0009d5a:       |  |  |  |  |     |  |  |  |  |            02000593             li      a1,32
d0009d5e:       |  |  |  |  |  /--|--|--|--|--|----------- 1ab51e63             bne     a0,a1,d0009f1a <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:307
      error = bootstrap_sector_erase(cmd.address);
d0009d62:       |  |  |  |  |  |  |  |  |  |  |            5512                 lw      a0,36(sp)
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:103
  if (addr >= kMaxAddress) {
d0009d64:       |  |  |  |  |  |  |  |  |  |  |            01355593             srli    a1,a0,0x13
d0009d68:       |  |  |  |  |  |  |  |  |  |  |            4452                 lw      s0,20(sp)
d0009d6a:       |  |  |  |  |  +--|--|--|--|--|----------- 1a059863             bnez    a1,d0009f1a <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:106
  addr &= kPageAddrMask;
d0009d6e:       |  |  |  |  |  |  |  |  |  |  |            75fd                 lui     a1,0xfffff
d0009d70:       |  |  |  |  |  |  |  |  |  |  |            00b57a33             and     s4,a0,a1
d0009d74:       |  |  |  |  |  |  |  |  |  |  |            4519                 li      a0,6
d0009d76:       |  |  |  |  |  |  |  |  |  |  |            4925                 li      s2,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:108
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009d78:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009d7c:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009d80:       |  |  |  |  |  |  |  |  |  |  |            12a12c23             sw      a0,312(sp)
d0009d84:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009d86:       |  |  |  |  |  |  |  |  |  |  |            7c2010ef             jal     ra,d000b548 <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:113
  rom_error_t err_0 = flash_ctrl_data_erase(addr, kFlashCtrlEraseTypePage);
d0009d8a:       |  |  |  |  |  |  |  |  |  |  |            8552                 mv      a0,s4
d0009d8c:       |  |  |  |  |  |  |  |  |  |  |            4bc2                 lw      s7,16(sp)
d0009d8e:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009d90:       |  |  |  |  |  |  |  |  |  |  |            6b4010ef             jal     ra,d000b444 <flash_ctrl_data_erase>
d0009d94:       |  |  |  |  |  |  |  |  |  |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:115
      addr + FLASH_CTRL_PARAM_BYTES_PER_PAGE, kFlashCtrlEraseTypePage);
d0009d96:       |  |  |  |  |  |  |  |  |  |  |            4532                 lw      a0,12(sp)
d0009d98:       |  |  |  |  |  |  |  |  |  |  |            00aa6533             or      a0,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:114
  rom_error_t err_1 = flash_ctrl_data_erase(
d0009d9c:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009d9e:       |  |  |  |  |  |  |  |  |  |  |            6a6010ef             jal     ra,d000b444 <flash_ctrl_data_erase>
d0009da2:       |  |  |  |  |  |  |  |  |  |  |            8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:116
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009da4:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009da8:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009dac:       |  |  |  |  |  |  |  |  |  |  |            13212c23             sw      s2,312(sp)
d0009db0:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009db2:       |  |  |  |  |  |  |  |  |  |  |            796010ef             jal     ra,d000b548 <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009db6:       |  |  |  |  |  |  |  |  |  |  |            8522                 mv      a0,s0
d0009db8:       |  |  |  |  |  |  |  |  |  |  |     /----- 00951963             bne     a0,s1,d0009dca <bootstrap+0x1cc>
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:122
  HARDENED_RETURN_IF_ERROR(err_0);
d0009dbc:       |  |  |  |  |  |  |  |  |  |  |     |  /-- 00940663             beq     s0,s1,d0009dc8 <bootstrap+0x1ca>
d0009dc0:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dc2:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dc4:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dc6:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dc8:       |  |  |  |  |  |  |  |  |  |  |     |  \-> 8452                 mv      s0,s4
d0009dca:       |  |  |  |  |  |  |  |  |  |  |     \----> 4919                 li      s2,6
d0009dcc:       |  |  |  |  |  |  |  |  |  |  |            0c700b93             li      s7,199
d0009dd0:       |  |  |  |  |  +--|--|--|--|--|----------- a2a9                 j       d0009f1a <bootstrap+0x31c>
d0009dd2:       |  |  |  |  |  |  |  |  \--|--|----------> f3c72537             lui     a0,0xf3c72
d0009dd6:       |  |  |  |  |  |  |  |     |  |            bac50513             addi    a0,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:375
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
d0009dda:       |  |  |  |  |  |  |  |     |  |        /-- 00ad8663             beq     s11,a0,d0009de6 <bootstrap+0x1e8>
d0009dde:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009de0:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009de2:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009de4:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:263
  HARDENED_CHECK_EQ(*state, kBootstrapStateEraseVerify);
d0009de6:       |  |  |  |  |  |  |  |     |  |     /--\-X 00ad8663             beq     s11,a0,d0009df2 <bootstrap+0x1f4>
d0009dea:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009dec:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009dee:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009df0:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:265
  rom_error_t err_0 = flash_ctrl_data_erase_verify(0, kFlashCtrlEraseTypeBank);
d0009df2:       |  |  |  |  |  |  |  |     |  |     \----> 4501                 li      a0,0
d0009df4:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009df6:       |  |  |  |  |  |  |  |     |  |            692010ef             jal     ra,d000b488 <flash_ctrl_data_erase_verify>
d0009dfa:       |  |  |  |  |  |  |  |     |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:266
  rom_error_t err_1 = flash_ctrl_data_erase_verify(
d0009dfc:       |  |  |  |  |  |  |  |     |  |            00040537             lui     a0,0x40
d0009e00:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009e02:       |  |  |  |  |  |  |  |     |  |            686010ef             jal     ra,d000b488 <flash_ctrl_data_erase_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e06:       |  |  |  |  |  |  |  |     |  |            85a2                 mv      a1,s0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:268
  HARDENED_RETURN_IF_ERROR(err_0);
d0009e08:       |  |  |  +--|--|--|--|-----|--|----------- 12959363             bne     a1,s1,d0009f2e <bootstrap+0x330>
d0009e0c:       |  |  |  |  |  |  |  |     |  |        /-- 00940663             beq     s0,s1,d0009e18 <bootstrap+0x21a>
d0009e10:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e12:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e14:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e16:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e18:       |  |  |  |  |  |  |  |     |  |        \-> 85aa                 mv      a1,a0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:269
  HARDENED_RETURN_IF_ERROR(err_1);
d0009e1a:       |  |  |  |  |  |  |  +-----|--|----------- 00959d63             bne     a1,s1,d0009e34 <bootstrap+0x236>
d0009e1e:       |  |  |  |  |  |  |  |     |  |        /-- 00950663             beq     a0,s1,d0009e2a <bootstrap+0x22c>
d0009e22:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e24:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e26:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e28:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:272
  spi_device_flash_status_clear();
d0009e2a:       |  |  |  |  |  |  |  |     |  |        \-> 2699                 jal     d000a170 <spi_device_flash_status_clear>
d0009e2c:       |  |  |  |  |  |  |  |     |  |            8dce                 mv      s11,s3
d0009e2e:       |  |  |  +--|--|--|--|-----|--|----------- a201                 j       d0009f2e <bootstrap+0x330>
d0009e30:       |  |  |  |  |  |  \--|-----|--|----------> 846a                 mv      s0,s10
d0009e32:       |  |  |  +--|--|-----|-----|--|----------- a8f5                 j       d0009f2e <bootstrap+0x330>
d0009e34:       |  |  |  |  |  |     \-----|--|----------> 842a                 mv      s0,a0
d0009e36:       |  |  |  +--|--|-----------|--|----------- a8e5                 j       d0009f2e <bootstrap+0x330>
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009e38:       |  |  |  |  |  |           |  \--/-------X 05751063             bne     a0,s7,d0009e78 <bootstrap+0x27a>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:304
      error = bootstrap_chip_erase();
d0009e3c:       |  |  |  |  |  |           |     |         2aa1                 jal     d0009f94 <bootstrap_chip_erase>
d0009e3e:       |  |  |  |  |  |           |     |         842a                 mv      s0,a0
d0009e40:       |  |  |  |  |  +-----------|-----|-------- a8e9                 j       d0009f1a <bootstrap+0x31c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:310
      error = bootstrap_page_program(cmd.address, cmd.payload_byte_count,
d0009e42:       |  |  |  |  |  |           \-----|-------> 5a12                 lw      s4,36(sp)
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:163
  if (addr & kFlashWordMask || addr >= kMaxAddress) {
d0009e44:       |  |  |  |  |  |                 |         4572                 lw      a0,28(sp)
d0009e46:       |  |  |  |  |  |                 |         00aa7533             and     a0,s4,a0
d0009e4a:       |  |  |  |  |  |                 |         4462                 lw      s0,24(sp)
d0009e4c:       |  |  |  |  |  +-----------------|-------- e579                 bnez    a0,d0009f1a <bootstrap+0x31c>
d0009e4e:       |  |  |  |  |  |                 |         5522                 lw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:168
  size_t flash_word_misalignment = byte_count & kFlashWordMask;
d0009e50:       |  |  |  |  |  |                 |         00757593             andi    a1,a0,7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:169
  if (flash_word_misalignment > 0) {
d0009e54:       |  |  |  |  |  |                 |  /----- c58d                 beqz    a1,d0009e7e <bootstrap+0x280>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e56:       |  |  |  |  |  |                 |  |      ff85e613             ori     a2,a1,-8
d0009e5a:       |  |  |  |  |  |                 |  |      0ff00713             li      a4,255
d0009e5e:       |  |  |  |  |  |                 |  |      02c10b93             addi    s7,sp,44
d0009e62:       |  |  |  |  |  |                 |  |  /-> 86b2                 mv      a3,a2
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009e64:       |  |  |  |  |  |                 |  |  |   00150593             addi    a1,a0,1 # 40001 <_rom_ext_virtual_size+0x1>
d0009e68:       |  |  |  |  |  |                 |  |  |   955e                 add     a0,a0,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e6a:       |  |  |  |  |  |                 |  |  |   0605                 addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009e6c:       |  |  |  |  |  |                 |  |  |   00e50023             sb      a4,0(a0)
d0009e70:       |  |  |  |  |  |                 |  |  |   852e                 mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e72:       |  |  |  |  |  |                 |  |  \-- fed678e3             bgeu    a2,a3,d0009e62 <bootstrap+0x264>
d0009e76:       |  |  |  |  |  |                 |  |  /-- a039                 j       d0009e84 <bootstrap+0x286>
d0009e78:       |  |  |  |  |  +-----------------\--|--|-X 0b551163             bne     a0,s5,d0009f1a <bootstrap+0x31c>
d0009e7c:       |  |  +--|--|--|--------------------|--|-- aa11                 j       d0009f90 <bootstrap+0x392>
d0009e7e:       |  |  |  |  |  |                    \--|-> 85aa                 mv      a1,a0
d0009e80:       |  |  |  |  |  |                       |   02c10b93             addi    s7,sp,44
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:176
  size_t rem_word_count = byte_count / sizeof(uint32_t);
d0009e84:       |  |  |  |  |  |                       \-> 0025da93             srli    s5,a1,0x2
d0009e88:       |  |  |  |  |  |                           4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:178
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009e8a:       |  |  |  |  |  |                           12a12823             sw      a0,304(sp)
d0009e8e:       |  |  |  |  |  |                           13212a23             sw      s2,308(sp)
d0009e92:       |  |  |  |  |  |                           12a12c23             sw      a0,312(sp)
d0009e96:       |  |  |  |  |  |                           1a08                 addi    a0,sp,304
d0009e98:       |  |  |  |  |  |                           6b0010ef             jal     ra,d000b548 <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:186
  size_t prog_page_misalignment = addr & kFlashProgPageMask;
d0009e9c:       |  |  |  |  |  |                           0ffa7513             andi    a0,s4,255
d0009ea0:       |  |  |  |  |  |                           73900413             li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:187
  if (prog_page_misalignment > 0) {
d0009ea4:       |  |  |  |  |  |        /----------------- cd59                 beqz    a0,d0009f42 <bootstrap+0x344>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:189
        (kFlashProgPageSize - prog_page_misalignment) / sizeof(uint32_t);
d0009ea6:       |  |  |  |  |  |        |                  10000593             li      a1,256
d0009eaa:       |  |  |  |  |  |        |                  40a58533             sub     a0,a1,a0
d0009eae:       |  |  |  |  |  |        |                  8109                 srli    a0,a0,0x2
d0009eb0:       |  |  |  |  |  |        |                  8bd6                 mv      s7,s5
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:190
    if (word_count > rem_word_count) {
d0009eb2:       |  |  |  |  |  |        |              /-- 00aae363             bltu    s5,a0,d0009eb8 <bootstrap+0x2ba>
d0009eb6:       |  |  |  |  |  |        |              |   8baa                 mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:193
    err_0 = flash_ctrl_data_write(addr, word_count, data);
d0009eb8:       |  |  |  |  |  |        |              \-> 8552                 mv      a0,s4
d0009eba:       |  |  |  |  |  |        |                  85de                 mv      a1,s7
d0009ebc:       |  |  |  |  |  |        |                  1070                 addi    a2,sp,44
d0009ebe:       |  |  |  |  |  |        |                  4c8010ef             jal     ra,d000b386 <flash_ctrl_data_write>
d0009ec2:       |  |  |  |  |  |        |                  892a                 mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:194
    rem_word_count -= word_count;
d0009ec4:       |  |  |  |  |  |        |                  417a8ab3             sub     s5,s5,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:195
    data += word_count * sizeof(uint32_t);
d0009ec8:       |  |  |  |  |  |        |                  002b9513             slli    a0,s7,0x2
d0009ecc:       |  |  |  |  |  |        |                  100c                 addi    a1,sp,32
d0009ece:       |  |  |  |  |  |        |                  952e                 add     a0,a0,a1
d0009ed0:       |  |  |  |  |  |        |                  00c50613             addi    a2,a0,12
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:198
    addr &= ~kFlashProgPageMask;
d0009ed4:       |  |  |  |  |  |        |                  f00a7a13             andi    s4,s4,-256
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009ed8:       |  |  |  |  |  |        |  /-------------- 000a8763             beqz    s5,d0009ee6 <bootstrap+0x2e8>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:202
    err_1 = flash_ctrl_data_write(addr, rem_word_count, data);
d0009edc:       |  |  |  |  |  |        |  |  /----------> 8552                 mv      a0,s4
d0009ede:       |  |  |  |  |  |        |  |  |            85d6                 mv      a1,s5
d0009ee0:       |  |  |  |  |  |        |  |  |            4a6010ef             jal     ra,d000b386 <flash_ctrl_data_write>
d0009ee4:       |  |  |  |  |  |        |  |  |            842a                 mv      s0,a0
d0009ee6:       |  |  |  |  |  |        |  >--|----------> 4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:204
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009ee8:       |  |  |  |  |  |        |  |  |            12a12823             sw      a0,304(sp)
d0009eec:       |  |  |  |  |  |        |  |  |            12a12a23             sw      a0,308(sp)
d0009ef0:       |  |  |  |  |  |        |  |  |            12a12c23             sw      a0,312(sp)
d0009ef4:       |  |  |  |  |  |        |  |  |            1a08                 addi    a0,sp,304
d0009ef6:       |  |  |  |  |  |        |  |  |            652010ef             jal     ra,d000b548 <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009efa:       |  |  |  |  |  |        |  |  |            854a                 mv      a0,s2
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:210
  HARDENED_RETURN_IF_ERROR(err_0);
d0009efc:       |  |  |  |  |  |        |  |  |  /-------- 00951963             bne     a0,s1,d0009f0e <bootstrap+0x310>
d0009f00:       |  |  |  |  |  |        |  |  |  |  /----- 00990663             beq     s2,s1,d0009f0c <bootstrap+0x30e>
d0009f04:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f06:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f08:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f0a:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f0c:       |  |  |  |  |  |        |  |  |  |  \--/-X a011                 j       d0009f10 <bootstrap+0x312>
d0009f0e:       |  |  |  |  |  |        |  |  |  \-----|-> 844a                 mv      s0,s2
d0009f10:       |  |  |  |  |  |        |  |  |        \-> 09900a93             li      s5,153
d0009f14:       |  |  |  |  |  |        |  |  |            0c700b93             li      s7,199
d0009f18:       |  |  |  |  |  |        |  |  |            4919                 li      s2,6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f1a:       |  |  |  |  |  \--------|--|--|----------> 8522                 mv      a0,s0
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:329
  HARDENED_RETURN_IF_ERROR(error);
d0009f1c:       |  |  |  +--|-----------|--|--|----------- 00951963             bne     a0,s1,d0009f2e <bootstrap+0x330>
d0009f20:       |  |  |  |  +-----------|--|--|----------- 00940663             beq     s0,s1,d0009f2c <bootstrap+0x32e>
d0009f24:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f26:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f28:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f2a:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f2c:       |  |  |  |  \-----------|--|--|----------> 2491                 jal     d000a170 <spi_device_flash_status_clear>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f2e:       |  |  |  \--------------|--|--|----------> 8522                 mv      a0,s0
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:385
        error = bootstrap_handle_program(&state);
        break;
      default:
        error = kErrorBootstrapInvalidState;
    }
    HARDENED_RETURN_IF_ERROR(error);
d0009f30:       |  |  |                 |  |  |     /----- 02951363             bne     a0,s1,d0009f56 <bootstrap+0x358>
d0009f34:       |  |  |                 |  |  |     |  /-- 00940663             beq     s0,s1,d0009f40 <bootstrap+0x342>
d0009f38:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f3a:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f3c:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f3e:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f40:       |  \--|-----------------|--|--|-----|--\-X b3bd                 j       d0009cae <bootstrap+0xb0>
d0009f42:       |     |                 \--|--|-----|----> 73900913             li      s2,1849
d0009f46:       |     |                    |  |     |      865e                 mv      a2,s7
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009f48:       |     |                    |  \-----|----- f80a9ae3             bnez    s5,d0009edc <bootstrap+0x2de>
d0009f4c:       |     |                    \--------|----- bf69                 j       d0009ee6 <bootstrap+0x2e8>
d0009f4e:       \-----|-----------------------------|----> 04425537             lui     a0,0x4425
d0009f52:             |                             |      30d50413             addi    s0,a0,781 # 442530d <_rom_ext_virtual_size+0x43e530d>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:388
  }
  HARDENED_UNREACHABLE();
}
d0009f56:             |                             \----> 8522                 mv      a0,s0
d0009f58:             |                                    13c12d83             lw      s11,316(sp)
d0009f5c:             |                                    14012d03             lw      s10,320(sp)
d0009f60:             |                                    14412c83             lw      s9,324(sp)
d0009f64:             |                                    14812c03             lw      s8,328(sp)
d0009f68:             |                                    14c12b83             lw      s7,332(sp)
d0009f6c:             |                                    15012b03             lw      s6,336(sp)
d0009f70:             |                                    15412a83             lw      s5,340(sp)
d0009f74:             |                                    15812a03             lw      s4,344(sp)
d0009f78:             |                                    15c12983             lw      s3,348(sp)
d0009f7c:             |                                    16012903             lw      s2,352(sp)
d0009f80:             |                                    16412483             lw      s1,356(sp)
d0009f84:             |                                    16812403             lw      s0,360(sp)
d0009f88:             |                                    16c12083             lw      ra,364(sp)
d0009f8c:             |                                    6175                 addi    sp,sp,368
d0009f8e:             |                                    8082                 ret
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:314
      rstmgr_reset();
d0009f90:             \----------------------------------> 3ed010ef             jal     ra,d000bb7c <rstmgr_reset>

d0009f94 <bootstrap_chip_erase>:
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:72
static rom_error_t bootstrap_chip_erase(void) {
d0009f94:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:73
  flash_ctrl_bank_erase_perms_set(kHardenedBoolTrue);
d0009f96:              c606                     sw      ra,12(sp)
d0009f98:              c422                     sw      s0,8(sp)
d0009f9a:              c226                     sw      s1,4(sp)
d0009f9c:              c04a                     sw      s2,0(sp)
d0009f9e:              73900513                 li      a0,1849
d0009fa2:              73900913                 li      s2,1849
d0009fa6:              18f010ef                 jal     ra,d000b934 <flash_ctrl_bank_erase_perms_set>
d0009faa:              8032a537                 lui     a0,0x8032a
d0009fae:              be950493                 addi    s1,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:74
  rom_error_t err_0 = flash_ctrl_data_erase(0, kFlashCtrlEraseTypeBank);
d0009fb2:              4501                     li      a0,0
d0009fb4:              85a6                     mv      a1,s1
d0009fb6:              48e010ef                 jal     ra,d000b444 <flash_ctrl_data_erase>
d0009fba:              842a                     mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:75
  rom_error_t err_1 = flash_ctrl_data_erase(FLASH_CTRL_PARAM_BYTES_PER_BANK,
d0009fbc:              00040537                 lui     a0,0x40
d0009fc0:              85a6                     mv      a1,s1
d0009fc2:              482010ef                 jal     ra,d000b444 <flash_ctrl_data_erase>
d0009fc6:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:77
  flash_ctrl_bank_erase_perms_set(kHardenedBoolFalse);
d0009fc8:              1d400513                 li      a0,468
d0009fcc:              169010ef                 jal     ra,d000b934 <flash_ctrl_bank_erase_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009fd0:              8522                     mv      a0,s0
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:79
  HARDENED_RETURN_IF_ERROR(err_0);
d0009fd2:       /----- 01251963                 bne     a0,s2,d0009fe4 <bootstrap_chip_erase+0x50>
d0009fd6:       |  /-- 01240663                 beq     s0,s2,d0009fe2 <bootstrap_chip_erase+0x4e>
d0009fda:       |  |   0000                     unimp
d0009fdc:       |  |   0000                     unimp
d0009fde:       |  |   0000                     unimp
d0009fe0:       |  |   0000                     unimp
d0009fe2:       |  \-> 8426                     mv      s0,s1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:81
}
d0009fe4:       \----> 8522                     mv      a0,s0
d0009fe6:              4902                     lw      s2,0(sp)
d0009fe8:              4492                     lw      s1,4(sp)
d0009fea:              4422                     lw      s0,8(sp)
d0009fec:              40b2                     lw      ra,12(sp)
d0009fee:              0141                     addi    sp,sp,16
d0009ff0:              8082                     ret

d0009ff2 <spi_device_init>:
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:499
                             cmd_info.handled_in_sw);
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_0_VALID_0_BIT, true);
  abs_mmio_write32(kBase + cmd_info.reg_offset, reg);
}

void spi_device_init(void) {
d0009ff2:           1141                        addi    sp,sp,-16
d0009ff4:           c606                        sw      ra,12(sp)
d0009ff6:           c422                        sw      s0,8(sp)
d0009ff8:           c226                        sw      s1,4(sp)
d0009ffa:           c0052537            lui     a0,0xc0052
d0009ffe:           c0050413            addi    s0,a0,-1024 # c0051c00 <_stack_end+0xe0031c00>
d000a002:           6521                        lui     a0,0x8
d000a004:           f0050513            addi    a0,a0,-256 # 7f00 <_stack_size+0x3f00>
d000a008:           c00504b7            lui     s1,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a00c:           c8c8                        sw      a0,20(s1)
d000a00e:           6505                        lui     a0,0x1
d000a010:           c7f50513            addi    a0,a0,-897 # c7f <_epmp_reset_rx_size+0x47f>
d000a014:           c0a8                        sw      a0,64(s1)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:522
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_CC_REG_OFFSET, reg);
  // Note: The code below assumes that chip revision and generation numbers
  // from the life cycle controller (16-bits each) will fit in the revision and
  // generation fields of the device ID (3 and 4 bits, respectively).
  lifecycle_hw_rev_t hw_rev;
  lifecycle_hw_rev_get(&hw_rev);
d000a016:           850a                        mv      a0,sp
d000a018:           58d030ef            jal     ra,d000dda4 <lifecycle_hw_rev_get>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:524
  reg = bitfield_field32_write(0, SPI_DEVICE_DEV_ID_CHIP_REV_FIELD,
                               hw_rev.chip_rev);
d000a01c:           00215583            lhu     a1,2(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:527
  reg = bitfield_bit32_write(reg, SPI_DEVICE_DEV_ID_ROM_BOOTSTRAP_BIT, true);
  reg = bitfield_field32_write(reg, SPI_DEVICE_DEV_ID_CHIP_GEN_FIELD,
                               hw_rev.chip_gen);
d000a020:           00011603            lh      a2,0(sp)
d000a024:           4501                        li      a0,0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a026:           899d                        andi    a1,a1,7
d000a028:           0612                        slli    a2,a2,0x4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000a02a:           0f067613            andi    a2,a2,240
d000a02e:           8dd1                        or      a1,a1,a2
d000a030:           00ef1637            lui     a2,0xef1
d000a034:           40860613            addi    a2,a2,1032 # ef1408 <_rom_ext_virtual_size+0xeb1408>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a038:           8dd1                        or      a1,a1,a2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a03a:           c0ec                        sw      a1,68(s1)
d000a03c:           00005597            auipc   a1,0x5
d000a040:           81858593            addi    a1,a1,-2024 # d000e854 <kSpiDeviceSfdpTable>
d000a044:           06c00613            li      a2,108
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a048:       /-> 00b506b3            add     a3,a0,a1
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000a04c:       |   4294                        lw      a3,0(a3)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a04e:       |   00850733            add     a4,a0,s0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_ID_REG_OFFSET, reg);

  // Write SFDP table to the reserved region in spi_device buffer.
  uint32_t dest = kSfdpAreaStartAddr;
  const char *table = (const char *)&kSpiDeviceSfdpTable;
  for (size_t i = 0; i < kSpiDeviceSfdpTableNumWords; ++i) {
d000a052:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a054:       |   c314                        sw      a3,0(a4)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
d000a056:       \-- fec519e3            bne     a0,a2,d000a048 <spi_device_init+0x56>
d000a05a:           c0052637            lui     a2,0xc0052
d000a05e:           c6860593            addi    a1,a2,-920 # c0051c68 <_stack_end+0xe0031c68>
d000a062:           557d                        li      a0,-1
d000a064:           cfc60613            addi    a2,a2,-772
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a068:       /-> 00458693            addi    a3,a1,4
d000a06c:       |   c1c8                        sw      a0,4(a1)
d000a06e:       |   85b6                        mv      a1,a3
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:543
    abs_mmio_write32(dest, read_32(table));
    dest += sizeof(uint32_t);
    table += sizeof(uint32_t);
  }
  // Fill the remaining space with `0xff`s.
  for (; dest < kSfdpAreaEndAddr; dest += sizeof(uint32_t)) {
d000a070:       \-- fec6ece3            bltu    a3,a2,d000a068 <spi_device_init+0x76>
d000a074:           5571                        li      a0,-4
d000a076:           0fc00593            li      a1,252
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a07a:       /-> 00a40633            add     a2,s0,a0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
    abs_mmio_write32(dest, UINT32_MAX);
  }

  // Reset the payload buffer to prevent access faults when reading beyond
  // current payload depth (see #11782).
  for (size_t i = 0; i < kSpiDevicePayloadAreaNumBytes; i += sizeof(uint32_t)) {
d000a07e:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a080:       |   10062223            sw      zero,260(a2)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
d000a084:       \-- feb56be3            bltu    a0,a1,d000a07a <spi_device_init+0x88>
d000a088:           c0050537            lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a08c:           02052e23            sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
d000a090:           800005b7            lui     a1,0x80000
d000a094:           00558613            addi    a2,a1,5 # 80000005 <_stack_end+0x9ffe0005>
d000a098:           08c52823            sw      a2,144(a0)
d000a09c:           09f58613            addi    a2,a1,159
d000a0a0:           08c52e23            sw      a2,156(a0)
d000a0a4:           8000f637            lui     a2,0x8000f
d000a0a8:           25a60613            addi    a2,a2,602 # 8000f25a <_stack_end+0x9ffef25a>
d000a0ac:           0ac52023            sw      a2,160(a0)
d000a0b0:           83000637            lui     a2,0x83000
d000a0b4:           0c760693            addi    a3,a2,199 # 830000c7 <_stack_end+0xa2fe00c7>
d000a0b8:           0ad52e23            sw      a3,188(a0)
d000a0bc:           22060693            addi    a3,a2,544
d000a0c0:           0cd52023            sw      a3,192(a0)
d000a0c4:           20260693            addi    a3,a2,514
d000a0c8:           0cd52223            sw      a3,196(a0)
d000a0cc:           09960613            addi    a2,a2,153
d000a0d0:           0cc52423            sw      a2,200(a0)
d000a0d4:           00658613            addi    a2,a1,6
d000a0d8:           0ec52c23            sw      a2,248(a0)
d000a0dc:           0591                        addi    a1,a1,4
d000a0de:           0eb52e23            sw      a1,252(a0)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:622
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_WREN_VALID_BIT, true);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WREN_REG_OFFSET, reg);
  reg = bitfield_field32_write(reg, SPI_DEVICE_CMD_INFO_WRDI_OPCODE_FIELD,
                               kSpiDeviceOpcodeWriteDisable);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WRDI_REG_OFFSET, reg);
}
d000a0e2:           4492                        lw      s1,4(sp)
d000a0e4:           4422                        lw      s0,8(sp)
d000a0e6:           40b2                        lw      ra,12(sp)
d000a0e8:           0141                        addi    sp,sp,16
d000a0ea:           8082                        ret

d000a0ec <spi_device_cmd_get>:
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:624

rom_error_t spi_device_cmd_get(spi_device_cmd_t *cmd) {
d000a0ec:                 c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a0f0:             /-> 4190                  lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000a0f2:             |   04067693              andi    a3,a2,64
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:627
  uint32_t reg = 0;
  bool cmd_pending = false;
  while (!cmd_pending) {
d000a0f6:             \-- deed                  beqz    a3,d000a0f0 <spi_device_cmd_get+0x4>
d000a0f8:                 10067693              andi    a3,a2,256
d000a0fc:                 c00505b7              lui     a1,0xc0050
d000a100:                 567d                  li      a2,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a102:                 c190                  sw      a2,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:635
    reg = abs_mmio_read32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET);
    cmd_pending = bitfield_bit32_read(
        reg, SPI_DEVICE_INTR_COMMON_UPLOAD_CMDFIFO_NOT_EMPTY_BIT);
  }
  abs_mmio_write32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET, UINT32_MAX);
  if (bitfield_bit32_read(reg,
d000a104:       /-------- e2a5                  bnez    a3,d000a164 <spi_device_cmd_get+0x78>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a106:       |         4db4                  lw      a3,88(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:640
                          SPI_DEVICE_INTR_COMMON_UPLOAD_PAYLOAD_OVERFLOW_BIT)) {
    return kErrorSpiDevicePayloadOverflow;
  }

  cmd->opcode = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_CMDFIFO_REG_OFFSET);
d000a108:       |         c114                  sw      a3,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:641
  cmd->address = kSpiDeviceNoAddress;
d000a10a:       |         c150                  sw      a2,4(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a10c:       |         49ac                  lw      a1,80(a1)
d000a10e:       |         6621                  lui     a2,0x8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000a110:       |         8df1                  and     a1,a1,a2
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:643
  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS_REG_OFFSET);
  if (bitfield_bit32_read(reg,
d000a112:       |     /-- c589                  beqz    a1,d000a11c <spi_device_cmd_get+0x30>
d000a114:       |     |   c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a118:       |     |   4dec                  lw      a1,92(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:645
                          SPI_DEVICE_UPLOAD_STATUS_ADDRFIFO_NOTEMPTY_BIT)) {
    cmd->address =
d000a11a:       |     |   c14c                  sw      a1,4(a0)
d000a11c:       |     \-> c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a120:       |         49ec                  lw      a1,84(a1)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000a122:       |         1ff5f593              andi    a1,a1,511
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:650
        abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_ADDRFIFO_REG_OFFSET);
  }

  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS2_REG_OFFSET);
  cmd->payload_byte_count =
d000a126:       |         c50c                  sw      a1,8(a0)
d000a128:       |         10000613              li      a2,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:653
      bitfield_field32_read(reg, SPI_DEVICE_UPLOAD_STATUS2_PAYLOAD_DEPTH_FIELD);
  // `payload_byte_count` can be at most `kSpiDevicePayloadAreaNumBytes`.
  HARDENED_CHECK_LE(cmd->payload_byte_count, kSpiDevicePayloadAreaNumBytes);
d000a12c:       |     /-- 00b67663              bgeu    a2,a1,d000a138 <spi_device_cmd_get+0x4c>
d000a130:       |     |   0000                  unimp
d000a132:       |     |   0000                  unimp
d000a134:       |     |   0000                  unimp
d000a136:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  uint32_t src =
      kBase + SPI_DEVICE_BUFFER_REG_OFFSET + kSpiDevicePayloadAreaOffset;
  char *dest = (char *)&cmd->payload;
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a138:       |     \-> 4510                  lw      a2,8(a0)
d000a13a:       |         73900813              li      a6,1849
d000a13e:       |  /----- c61d                  beqz    a2,d000a16c <spi_device_cmd_get+0x80>
d000a140:       |  |      4601                  li      a2,0
d000a142:       |  |      00c50693              addi    a3,a0,12
d000a146:       |  |      c0052737              lui     a4,0xc0052
d000a14a:       |  |      d0070713              addi    a4,a4,-768 # c0051d00 <_stack_end+0xe0031d00>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:658
    write_32(abs_mmio_read32(src + i), dest + i);
d000a14e:       |  |  /-> 00e607b3              add     a5,a2,a4
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a152:       |  |  |   439c                  lw      a5,0(a5)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
 */
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a154:       |  |  |   00c685b3              add     a1,a3,a2
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000a158:       |  |  |   c19c                  sw      a5,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a15a:       |  |  |   450c                  lw      a1,8(a0)
d000a15c:       |  |  |   0611                  addi    a2,a2,4
d000a15e:       |  |  \-- feb668e3              bltu    a2,a1,d000a14e <spi_device_cmd_get+0x62>
d000a162:       |  +----- a029                  j       d000a16c <spi_device_cmd_get+0x80>
d000a164:       \--|----> 01535537              lui     a0,0x1535
d000a168:          |      00d50813              addi    a6,a0,13 # 153500d <_rom_ext_virtual_size+0x14f500d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:662
  }

  return kErrorOk;
}
d000a16c:          \----> 8542                  mv      a0,a6
d000a16e:                 8082                  ret

d000a170 <spi_device_flash_status_clear>:
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:664

void spi_device_flash_status_clear(void) {
d000a170:       c0050537                lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a174:       02052e23                sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:666
  abs_mmio_write32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET, 0);
}
d000a178:       8082                    ret

d000a17a <spi_device_flash_status_get>:
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:668

uint32_t spi_device_flash_status_get(void) {
d000a17a:       c0050537                lui     a0,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a17e:       5d48                    lw      a0,60(a0)
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:669
  return abs_mmio_read32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET);
d000a180:       8082                    ret

d000a182 <sigverify_rsa_key_get>:
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:183
      HARDENED_UNREACHABLE();
  }
}

rom_error_t sigverify_rsa_key_get(uint32_t key_id, lifecycle_state_t lc_state,
                                  const sigverify_rsa_key_t **key) {
d000a182:                    7179                       addi    sp,sp,-48
d000a184:                    d606                       sw      ra,44(sp)
d000a186:                    d422                       sw      s0,40(sp)
d000a188:                    d226                       sw      s1,36(sp)
d000a18a:                    d04a                       sw      s2,32(sp)
d000a18c:                    ce4e                       sw      s3,28(sp)
d000a18e:                    cc52                       sw      s4,24(sp)
d000a190:                    ca56                       sw      s5,20(sp)
d000a192:                    c85a                       sw      s6,16(sp)
d000a194:                    c65e                       sw      s7,12(sp)
d000a196:                    c462                       sw      s8,8(sp)
d000a198:                    c266                       sw      s9,4(sp)
d000a19a:                    c06a                       sw      s10,0(sp)
d000a19c:                    8932                       mv      s2,a2
d000a19e:                    89ae                       mv      s3,a1
d000a1a0:                    8aaa                       mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t cand_key_index = UINT32_MAX;
  // Random start index that is less than `kSigverifyRsaKeysCnt`.
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a1a2:                    73e030ef           jal     ra,d000d8e0 <rnd_uint32>
d000a1a6:                    00005597           auipc   a1,0x5
d000a1aa:                    a9258593           addi    a1,a1,-1390 # d000ec38 <kSigverifyRsaKeysCnt>
d000a1ae:                    0005ab83           lw      s7,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a1b2:                    4581                       li      a1,0
d000a1b4:                    00005b17           auipc   s6,0x5
d000a1b8:                    a8cb0b13           addi    s6,s6,-1396 # d000ec40 <kSigverifyRsaKeys>
d000a1bc:                    4401                       li      s0,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  size_t iter_cnt = 0;
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a1be:       /----------- 0975f163           bgeu    a1,s7,d000a240 <sigverify_rsa_key_get+0xbe>
d000a1c2:       |            00005597           auipc   a1,0x5
d000a1c6:       |            a7a58593           addi    a1,a1,-1414 # d000ec3c <kSigverifyRsaKeysStep>
d000a1ca:       |            0005ac03           lw      s8,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a1ce:       |            02abb4b3           mulhu   s1,s7,a0
d000a1d2:       |            5a7d                       li      s4,-1
d000a1d4:       |            1a400c93           li      s9,420
d000a1d8:       |            73900d13           li      s10,1849
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
d000a1dc:       |  /-------> 03948533           mul     a0,s1,s9
d000a1e0:       |  |         016505b3           add     a1,a0,s6
d000a1e4:       |  |         418c                       lw      a1,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a1e6:       |  |         862e                       mv      a2,a1
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:191
    const sigverify_rom_key_t *k = &kSigverifyRsaKeys[i];
    size_t k_id = sigverify_rsa_key_id_get(&k->key.n);
    if (launder32(k_id) == key_id) {
d000a1e8:       |  |  /----- 03561863           bne     a2,s5,d000a218 <sigverify_rsa_key_get+0x96>
d000a1ec:       |  |  |      955a                       add     a0,a0,s6
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      HARDENED_CHECK_EQ(k_id, key_id);
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a1ee:       |  |  |      1a052503           lw      a0,416(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:192
      HARDENED_CHECK_EQ(k_id, key_id);
d000a1f2:       |  |  |  /-- 01558663           beq     a1,s5,d000a1fe <sigverify_rsa_key_get+0x7c>
d000a1f6:       |  |  |  |   0000                       unimp
d000a1f8:       |  |  |  |   0000                       unimp
d000a1fa:       |  |  |  |   0000                       unimp
d000a1fc:       |  |  |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a1fe:       |  |  |  \-> 85ce                       mv      a1,s3
d000a200:       |  |  |      8626                       mv      a2,s1
d000a202:       |  |  |      207d                       jal     d000a2b0 <key_is_valid>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a204:       |  |  |      85aa                       mv      a1,a0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:194
      if (launder32(error) == kErrorOk) {
d000a206:       |  |  +----- 01a59963           bne     a1,s10,d000a218 <sigverify_rsa_key_get+0x96>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:195
        HARDENED_CHECK_EQ(error, kErrorOk);
d000a20a:       |  |  |  /-- 01a50663           beq     a0,s10,d000a216 <sigverify_rsa_key_get+0x94>
d000a20e:       |  |  |  |   0000                       unimp
d000a210:       |  |  |  |   0000                       unimp
d000a212:       |  |  |  |   0000                       unimp
d000a214:       |  |  |  |   0000                       unimp
d000a216:       |  |  |  \-> 8a26                       mv      s4,s1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:199
        cand_key_index = i;
      }
    }
    i += kSigverifyRsaKeysStep;
d000a218:       |  |  \----> 009c0533           add     a0,s8,s1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a21c:       |  |         862a                       mv      a2,a0
d000a21e:       |  |         4581                       li      a1,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:200
    if (launder32(i) >= kSigverifyRsaKeysCnt) {
d000a220:       |  |     /-- 01766363           bltu    a2,s7,d000a226 <sigverify_rsa_key_get+0xa4>
d000a224:       |  |     |   85de                       mv      a1,s7
d000a226:       |  |     \-> 40b504b3           sub     s1,a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a22a:       |  |         0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:203
      i -= kSigverifyRsaKeysCnt;
    }
    HARDENED_CHECK_LT(i, kSigverifyRsaKeysCnt);
d000a22c:       |  |     /-- 0174e663           bltu    s1,s7,d000a238 <sigverify_rsa_key_get+0xb6>
d000a230:       |  |     |   0000                       unimp
d000a232:       |  |     |   0000                       unimp
d000a234:       |  |     |   0000                       unimp
d000a236:       |  |     |   0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a238:       |  |     \-> 8522                       mv      a0,s0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a23a:       |  \-------- fb7561e3           bltu    a0,s7,d000a1dc <sigverify_rsa_key_get+0x5a>
d000a23e:       |        /-- a011                       j       d000a242 <sigverify_rsa_key_get+0xc0>
d000a240:       \--------|-> 5a7d                       li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:205
  }
  HARDENED_CHECK_EQ(iter_cnt, kSigverifyRsaKeysCnt);
d000a242:             /--\-X 01740663           beq     s0,s7,d000a24e <sigverify_rsa_key_get+0xcc>
d000a246:             |      0000                       unimp
d000a248:             |      0000                       unimp
d000a24a:             |      0000                       unimp
d000a24c:             |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a24e:             \----> 8552                       mv      a0,s4
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:207

  if (launder32(cand_key_index) < kSigverifyRsaKeysCnt) {
d000a250:             /----- 03757e63           bgeu    a0,s7,d000a28c <sigverify_rsa_key_get+0x10a>
d000a254:             |      1a400513           li      a0,420
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a258:             |      02aa0533           mul     a0,s4,a0
d000a25c:             |      01650433           add     s0,a0,s6
d000a260:             |      1a042503           lw      a0,416(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:208
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
d000a264:             |  /-- 017a6663           bltu    s4,s7,d000a270 <sigverify_rsa_key_get+0xee>
d000a268:             |  |   0000                       unimp
d000a26a:             |  |   0000                       unimp
d000a26c:             |  |   0000                       unimp
d000a26e:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a270:             |  \-> 85ce                       mv      a1,s3
d000a272:             |      8652                       mv      a2,s4
d000a274:             |      2835                       jal     d000a2b0 <key_is_valid>
d000a276:             |      73900593           li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:211
                                     lc_state, cand_key_index);
    HARDENED_CHECK_EQ(error, kErrorOk);
d000a27a:             |  /-- 00b50663           beq     a0,a1,d000a286 <sigverify_rsa_key_get+0x104>
d000a27e:             |  |   0000                       unimp
d000a280:             |  |   0000                       unimp
d000a282:             |  |   0000                       unimp
d000a284:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:212
    *key = &kSigverifyRsaKeys[cand_key_index].key;
d000a286:             |  \-> 00892023           sw      s0,0(s2)
d000a28a:             |  /-- a029                       j       d000a294 <sigverify_rsa_key_get+0x112>
d000a28c:             \--|-> 02535537           lui     a0,0x2535
d000a290:                |   60350513           addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24f5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:217
    return error;
  }

  return kErrorSigverifyBadKey;
}
d000a294:                \-> 4d02                       lw      s10,0(sp)
d000a296:                    4c92                       lw      s9,4(sp)
d000a298:                    4c22                       lw      s8,8(sp)
d000a29a:                    4bb2                       lw      s7,12(sp)
d000a29c:                    4b42                       lw      s6,16(sp)
d000a29e:                    4ad2                       lw      s5,20(sp)
d000a2a0:                    4a62                       lw      s4,24(sp)
d000a2a2:                    49f2                       lw      s3,28(sp)
d000a2a4:                    5902                       lw      s2,32(sp)
d000a2a6:                    5492                       lw      s1,36(sp)
d000a2a8:                    5422                       lw      s0,40(sp)
d000a2aa:                    50b2                       lw      ra,44(sp)
d000a2ac:                    6145                       addi    sp,sp,48
d000a2ae:                    8082                       ret

d000a2b0 <key_is_valid>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a2b0:                                         86ae                  mv      a3,a1
d000a2b2:                                         cf8d0737              lui     a4,0xcf8d0
d000a2b6:                                         aaa70793              addi    a5,a4,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a2ba:                                  /----- 04d7d663              bge     a5,a3,d000a306 <key_is_valid+0x56>
d000a2be:                                  |      aab70713              addi    a4,a4,-1365
d000a2c2:                               /--|----- 04e68f63              beq     a3,a4,d000a320 <key_is_valid+0x70>
d000a2c6:                               |  |      0b5a7737              lui     a4,0xb5a7
d000a2ca:                               |  |      5e070713              addi    a4,a4,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000a2ce:                         /-----|--|----- 08e69763              bne     a3,a4,d000a35c <key_is_valid+0xac>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a2d2:                         |     |  |  /-- 00e58663              beq     a1,a4,d000a2de <key_is_valid+0x2e>
d000a2d6:                         |     |  |  |   0000                  unimp
d000a2d8:                         |     |  |  |   0000                  unimp
d000a2da:                         |     |  |  |   0000                  unimp
d000a2dc:                         |     |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a2de:                         |     |  |  \-> 85aa                  mv      a1,a0
d000a2e0:                         |     |  |      7a01a6b7              lui     a3,0x7a01a
d000a2e4:                         |     |  |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a2e8:             /-----------|-----|--|----- 0cd58f63              beq     a1,a3,d000a3c6 <key_is_valid+0x116>
d000a2ec:             |           |     |  |      43a846b7              lui     a3,0x43a84
d000a2f0:             |           |     |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a2f4:       /-----|-----------|-----|--|----- 10d59563              bne     a1,a3,d000a3fe <key_is_valid+0x14e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:88
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a2f8:       |     |           |     |  |  /-- 00d50663              beq     a0,a3,d000a304 <key_is_valid+0x54>
d000a2fc:       |     |           |     |  |  |   0000                  unimp
d000a2fe:       |     |           |     |  |  |   0000                  unimp
d000a300:       |     |           |     |  |  |   0000                  unimp
d000a302:       |     |           |     |  |  |   0000                  unimp
d000a304:       |  /--|-----------|-----|--|--\-X a8dd                  j       d000a3fa <key_is_valid+0x14a>
d000a306:       |  |  |           |     |  \----> 91b9b737              lui     a4,0x91b9b
d000a30a:       |  |  |           |     |         68a70713              addi    a4,a4,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a30e:       |  |  |           |  /--|-------- 06e69563              bne     a3,a4,d000a378 <key_is_valid+0xc8>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:169
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a312:       |  |  |           |  |  |     /-- 00e58663              beq     a1,a4,d000a31e <key_is_valid+0x6e>
d000a316:       |  |  |           |  |  |     |   0000                  unimp
d000a318:       |  |  |           |  |  |     |   0000                  unimp
d000a31a:       |  |  |           |  |  |     |   0000                  unimp
d000a31c:       |  |  |           |  |  |     |   0000                  unimp
d000a31e:       |  |  |           |  |  |  /--\-X a899                  j       d000a374 <key_is_valid+0xc4>
d000a320:       |  |  |           |  |  \--|----> cf8d06b7              lui     a3,0xcf8d0
d000a324:       |  |  |           |  |     |      aab68693              addi    a3,a3,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:175
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a328:       |  |  |           |  |     |  /-- 00d58663              beq     a1,a3,d000a334 <key_is_valid+0x84>
d000a32c:       |  |  |           |  |     |  |   0000                  unimp
d000a32e:       |  |  |           |  |     |  |   0000                  unimp
d000a330:       |  |  |           |  |     |  |   0000                  unimp
d000a332:       |  |  |           |  |     |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a334:       |  |  |           |  |     |  \-> 85aa                  mv      a1,a0
d000a336:       |  |  |           |  |     |      7a01a6b7              lui     a3,0x7a01a
d000a33a:       |  |  |           |  |     |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a33e:       |  |  |           |  |  /--|----- 06d58d63              beq     a1,a3,d000a3b8 <key_is_valid+0x108>
d000a342:       |  |  |           |  |  |  |      43a846b7              lui     a3,0x43a84
d000a346:       |  |  |           |  |  |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a34a:       |  |  |     /-----|--|--|--|----- 08d59c63              bne     a1,a3,d000a3e2 <key_is_valid+0x132>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:61
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a34e:       |  |  |     |     |  |  |  |  /-- 00d50663              beq     a0,a3,d000a35a <key_is_valid+0xaa>
d000a352:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a354:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a356:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a358:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a35a:       |  +--|-----|-----|--|--|--|--\-X a045                  j       d000a3fa <key_is_valid+0x14a>
d000a35c:       |  |  |     |     \--|--|--|----> 65f25737              lui     a4,0x65f25
d000a360:       |  |  |     |        |  |  |      20f70713              addi    a4,a4,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a364:       |  |  |  /--|--------|--|--|----- 0ce69d63              bne     a3,a4,d000a43e <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:166
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a368:       |  |  |  |  |        |  |  +----- 00e58663              beq     a1,a4,d000a374 <key_is_valid+0xc4>
d000a36c:       |  |  |  |  |        |  |  |      0000                  unimp
d000a36e:       |  |  |  |  |        |  |  |      0000                  unimp
d000a370:       |  |  |  |  |        |  |  |      0000                  unimp
d000a372:       |  |  |  |  |        |  |  |      0000                  unimp
d000a374:       |  |  |  |  |        |  |  \----> 85b2                  mv      a1,a2
d000a376:       |  |  |  |  |        |  |         a0e5                  j       d000a45e <key_is_valid_in_lc_state_prod>
d000a378:       |  |  |  |  |        \--|-------> b2866637              lui     a2,0xb2866
d000a37c:       |  |  |  |  |           |         fbb60613              addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a380:       |  |  |  +--|-----------|-------- 0ac69f63              bne     a3,a2,d000a43e <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:163
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a384:       |  |  |  |  |           |     /-- 00c58663              beq     a1,a2,d000a390 <key_is_valid+0xe0>
d000a388:       |  |  |  |  |           |     |   0000                  unimp
d000a38a:       |  |  |  |  |           |     |   0000                  unimp
d000a38c:       |  |  |  |  |           |     |   0000                  unimp
d000a38e:       |  |  |  |  |           |     |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a390:       |  |  |  |  |           |     \-> 85aa                  mv      a1,a0
d000a392:       |  |  |  |  |           |         7a01a637              lui     a2,0x7a01a
d000a396:       |  |  |  |  |           |         47160613              addi    a2,a2,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a39a:       |  |  |  |  |           |  /----- 02c58d63              beq     a1,a2,d000a3d4 <key_is_valid+0x124>
d000a39e:       |  |  |  |  |           |  |      43a84637              lui     a2,0x43a84
d000a3a2:       |  |  |  |  |           |  |      9ad60613              addi    a2,a2,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a3a6:       |  |  |  |  |     /-----|--|----- 06c59d63              bne     a1,a2,d000a420 <key_is_valid+0x170>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:141
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a3aa:       |  |  |  |  |     |     |  |  /-- 00c50663              beq     a0,a2,d000a3b6 <key_is_valid+0x106>
d000a3ae:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3b0:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3b2:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3b4:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3b6:       |  |  |  |  |  /--|-----|--|--\-X a049                  j       d000a438 <key_is_valid+0x188>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:64
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a3b8:       |  |  |  |  |  |  |     \--|--/-X 00d50663              beq     a0,a3,d000a3c4 <key_is_valid+0x114>
d000a3bc:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3be:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3c0:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3c2:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3c4:       |  |  |  |  |  |  |     /--|--\-X a889                  j       d000a416 <key_is_valid+0x166>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:91
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a3c6:       |  |  \--|--|--|--|-----|--|--/-X 00d50663              beq     a0,a3,d000a3d2 <key_is_valid+0x122>
d000a3ca:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a3cc:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a3ce:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a3d0:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a3d2:       |  +-----|--|--|--|-----|--|--\-X a025                  j       d000a3fa <key_is_valid+0x14a>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:144
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a3d4:       |  |     |  |  |  |     |  \--/-X 00c50663              beq     a0,a2,d000a3e0 <key_is_valid+0x130>
d000a3d8:       |  |     |  |  |  |     |     |   0000                  unimp
d000a3da:       |  |     |  |  |  |     |     |   0000                  unimp
d000a3dc:       |  |     |  |  |  |     |     |   0000                  unimp
d000a3de:       |  |     |  |  |  |     |     |   0000                  unimp
d000a3e0:       |  |     |  |  |  |     +-----\-X a81d                  j       d000a416 <key_is_valid+0x166>
d000a3e2:       |  |     |  \--|--|-----|-------> 3ff0d6b7              lui     a3,0x3ff0d
d000a3e6:       |  |     |     |  |     |         81968693              addi    a3,a3,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a3ea:       |  |     |     |  |  /--|-------- 04d59e63              bne     a1,a3,d000a446 <key_is_valid+0x196>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:58
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a3ee:       |  +-----|-----|--|--|--|-------- 00d50663              beq     a0,a3,d000a3fa <key_is_valid+0x14a>
d000a3f2:       |  |     |     |  |  |  |         0000                  unimp
d000a3f4:       |  |     |     |  |  |  |         0000                  unimp
d000a3f6:       |  |     |     |  |  |  |         0000                  unimp
d000a3f8:       |  |     |     |  |  |  |         0000                  unimp
d000a3fa:       |  \-----|-----|--|--|--|-------> 8532                  mv      a0,a2
d000a3fc:       |        |     |  |  |  |         a0d1                  j       d000a4c0 <key_is_valid_in_otp>
d000a3fe:       \--------|-----|--|--|--|-------> 3ff0d637              lui     a2,0x3ff0d
d000a402:                |     |  |  |  |         81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a406:                |     |  |  |  |  /----- 04c59463              bne     a1,a2,d000a44e <key_is_valid+0x19e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:85
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a40a:                |     |  |  |  +--|----- 00c50663              beq     a0,a2,d000a416 <key_is_valid+0x166>
d000a40e:                |     |  |  |  |  |      0000                  unimp
d000a410:                |     |  |  |  |  |      0000                  unimp
d000a412:                |     |  |  |  |  |      0000                  unimp
d000a414:                |     |  |  |  |  |      0000                  unimp
d000a416:                |     |  |  |  \--|----> 02535537              lui     a0,0x2535
d000a41a:                |     |  |  |     |      60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24f5603>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a41e:                |     |  |  |     |      8082                  ret
d000a420:                |     |  \--|-----|----> 3ff0d637              lui     a2,0x3ff0d
d000a424:                |     |     |     |      81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a428:                |     |     |     |  /-- 02c59763              bne     a1,a2,d000a456 <key_is_valid+0x1a6>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:138
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a42c:                |     +-----|-----|--|-- 00c50663              beq     a0,a2,d000a438 <key_is_valid+0x188>
d000a430:                |     |     |     |  |   0000                  unimp
d000a432:                |     |     |     |  |   0000                  unimp
d000a434:                |     |     |     |  |   0000                  unimp
d000a436:                |     |     |     |  |   0000                  unimp
d000a438:                |     \-----|-----|--|-> 73900513              li      a0,1849
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a43c:                |           |     |  |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:178
      HARDENED_UNREACHABLE();
d000a43e:                \-----------|-----|--|-> 0000                  unimp
d000a440:                            |     |  |   0000                  unimp
d000a442:                            |     |  |   0000                  unimp
d000a444:                            |     |  |   0000                  unimp
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:67
      HARDENED_UNREACHABLE();
d000a446:                            \-----|--|-> 0000                  unimp
d000a448:                                  |  |   0000                  unimp
d000a44a:                                  |  |   0000                  unimp
d000a44c:                                  |  |   0000                  unimp
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:94
      HARDENED_UNREACHABLE();
d000a44e:                                  \--|-> 0000                  unimp
d000a450:                                     |   0000                  unimp
d000a452:                                     |   0000                  unimp
d000a454:                                     |   0000                  unimp
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:147
      HARDENED_UNREACHABLE();
d000a456:                                     \-> 0000                  unimp
d000a458:                                         0000                  unimp
d000a45a:                                         0000                  unimp
d000a45c:                                         0000                  unimp

d000a45e <key_is_valid_in_lc_state_prod>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a45e:                 862a                  mv      a2,a0
d000a460:                 7a01a6b7              lui     a3,0x7a01a
d000a464:                 47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_prod():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a468:          /----- 02d60063              beq     a2,a3,d000a488 <key_is_valid_in_lc_state_prod+0x2a>
d000a46c:          |      43a846b7              lui     a3,0x43a84
d000a470:          |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a474:       /--|----- 02d61163              bne     a2,a3,d000a496 <key_is_valid_in_lc_state_prod+0x38>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:115
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a478:       |  |  /-- 00d50663              beq     a0,a3,d000a484 <key_is_valid_in_lc_state_prod+0x26>
d000a47c:       |  |  |   0000                  unimp
d000a47e:       |  |  |   0000                  unimp
d000a480:       |  |  |   0000                  unimp
d000a482:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:116
      return key_is_valid_in_otp(key_index);
d000a484:       |  |  \-> 852e                  mv      a0,a1
d000a486:       |  |      a82d                  j       d000a4c0 <key_is_valid_in_otp>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:118
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a488:       |  \--/-X 00d50663              beq     a0,a3,d000a494 <key_is_valid_in_lc_state_prod+0x36>
d000a48c:       |     |   0000                  unimp
d000a48e:       |     |   0000                  unimp
d000a490:       |     |   0000                  unimp
d000a492:       |     |   0000                  unimp
d000a494:       |  /--\-X a829                  j       d000a4ae <key_is_valid_in_lc_state_prod+0x50>
d000a496:       \--|----> 3ff0d5b7              lui     a1,0x3ff0d
d000a49a:          |      81958593              addi    a1,a1,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a49e:          |  /-- 00b61d63              bne     a2,a1,d000a4b8 <key_is_valid_in_lc_state_prod+0x5a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:112
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a4a2:          +--|-- 00b50663              beq     a0,a1,d000a4ae <key_is_valid_in_lc_state_prod+0x50>
d000a4a6:          |  |   0000                  unimp
d000a4a8:          |  |   0000                  unimp
d000a4aa:          |  |   0000                  unimp
d000a4ac:          |  |   0000                  unimp
d000a4ae:          \--|-> 02535537              lui     a0,0x2535
d000a4b2:             |   60350513              addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24f5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:123
}
d000a4b6:             |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:121
      HARDENED_UNREACHABLE();
d000a4b8:             \-> 0000                  unimp
d000a4ba:                 0000                  unimp
d000a4bc:                 0000                  unimp
d000a4be:                 0000                  unimp

d000a4c0 <key_is_valid_in_otp>:
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:27
static rom_error_t key_is_valid_in_otp(size_t key_index) {
d000a4c0:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:29
      OTP_CTRL_PARAM_CREATOR_SW_CFG_KEY_IS_VALID_OFFSET +
d000a4c2:              c606                     sw      ra,12(sp)
d000a4c4:              c422                     sw      s0,8(sp)
d000a4c6:              0e850593                 addi    a1,a0,232
d000a4ca:              99f1                     andi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:33
      .index = (key_index % kSigverifyNumEntriesPerOtpWord) * 8,
d000a4cc:              00351413                 slli    s0,a0,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:36
      bitfield_field32_read(otp_read32(addr), field);
d000a4d0:              852e                     mv      a0,a1
d000a4d2:              0f9030ef                 jal     ra,d000ddca <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a4d6:              00855533                 srl     a0,a0,s0
d000a4da:              0ff57513                 andi    a0,a0,255
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a4de:              862a                     mv      a2,a0
d000a4e0:              0a500593                 li      a1,165
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:37
  if (launder32(is_valid) == kHardenedByteBoolTrue) {
d000a4e4:       /----- 00b61b63                 bne     a2,a1,d000a4fa <key_is_valid_in_otp+0x3a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:38
    HARDENED_CHECK_EQ(is_valid, kHardenedByteBoolTrue);
d000a4e8:       |  /-- 00b50663                 beq     a0,a1,d000a4f4 <key_is_valid_in_otp+0x34>
d000a4ec:       |  |   0000                     unimp
d000a4ee:       |  |   0000                     unimp
d000a4f0:       |  |   0000                     unimp
d000a4f2:       |  |   0000                     unimp
d000a4f4:       |  \-> 73900513                 li      a0,1849
d000a4f8:       |  /-- a029                     j       d000a502 <key_is_valid_in_otp+0x42>
d000a4fa:       \--|-> 02535537                 lui     a0,0x2535
d000a4fe:          |   60350513                 addi    a0,a0,1539 # 2535603 <_rom_ext_virtual_size+0x24f5603>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:42
}
d000a502:          \-> 4422                     lw      s0,8(sp)
d000a504:              40b2                     lw      ra,12(sp)
d000a506:              0141                     addi    sp,sp,16
d000a508:              8082                     ret

d000a50a <shutdown_init>:
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:78
    default:
      return 0;
  }
}

rom_error_t shutdown_init(lifecycle_state_t lc_state) {
d000a50a:                                7119                   addi    sp,sp,-128
d000a50c:                                de86                   sw      ra,124(sp)
d000a50e:                                dca2                   sw      s0,120(sp)
d000a510:                                daa6                   sw      s1,116(sp)
d000a512:                                d8ca                   sw      s2,112(sp)
d000a514:                                d6ce                   sw      s3,108(sp)
d000a516:                                d4d2                   sw      s4,104(sp)
d000a518:                                d2d6                   sw      s5,100(sp)
d000a51a:                                d0da                   sw      s6,96(sp)
d000a51c:                                cede                   sw      s7,92(sp)
d000a51e:                                cce2                   sw      s8,88(sp)
d000a520:                                cae6                   sw      s9,84(sp)
d000a522:                                c8ea                   sw      s10,80(sp)
d000a524:                                c6ee                   sw      s11,76(sp)
d000a526:                                892a                   mv      s2,a0
d000a528:                                cf8d05b7               lui     a1,0xcf8d0
d000a52c:                                aaa58613               addi    a2,a1,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  };

  // Are we in a lifecycle state which needs alert configuration?
  uint32_t lc_shift;
  uint32_t lc_shift_masked;
  switch (launder32(lc_state)) {
d000a530:                         /----- 02a65563               bge     a2,a0,d000a55a <shutdown_init+0x50>
d000a534:                         |      aab58593               addi    a1,a1,-1365
d000a538:                      /--|----- 04b50063               beq     a0,a1,d000a578 <shutdown_init+0x6e>
d000a53c:                      |  |      0b5a75b7               lui     a1,0xb5a7
d000a540:                      |  |      5e058593               addi    a1,a1,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000a544:                   /--|--|----- 04b51963               bne     a0,a1,d000a596 <shutdown_init+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:109
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      lc_shift = kLcShiftProdEnd;
      lc_shift_masked = launder32(kLcShiftProdEnd) ^ kLcStateProdEnd;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a548:                   |  |  |  /-- 00b90663               beq     s2,a1,d000a554 <shutdown_init+0x4a>
d000a54c:                   |  |  |  |   0000                   unimp
d000a54e:                   |  |  |  |   0000                   unimp
d000a550:                   |  |  |  |   0000                   unimp
d000a552:                   |  |  |  |   0000                   unimp
d000a554:                   |  |  |  \-> 49c1                   li      s3,16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a556:                   |  |  |      4541                   li      a0,16
d000a558:                /--|--|--|----- a8a9                   j       d000a5b2 <shutdown_init+0xa8>
d000a55a:                |  |  |  \----> 91b9b5b7               lui     a1,0x91b9b
d000a55e:                |  |  |         68a58593               addi    a1,a1,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a562:       /--------|--|--|-------- 24b51863               bne     a0,a1,d000a7b2 <shutdown_init+0x2a8>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:104
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a566:       |        |  |  |     /-- 00b90663               beq     s2,a1,d000a572 <shutdown_init+0x68>
d000a56a:       |        |  |  |     |   0000                   unimp
d000a56c:       |        |  |  |     |   0000                   unimp
d000a56e:       |        |  |  |     |   0000                   unimp
d000a570:       |        |  |  |     |   0000                   unimp
d000a572:       |        |  |  |     \-> 49a1                   li      s3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a574:       |        |  |  |         4521                   li      a0,8
d000a576:       |        +--|--|-------- a835                   j       d000a5b2 <shutdown_init+0xa8>
d000a578:       |        |  |  \-------> cf8d0537               lui     a0,0xcf8d0
d000a57c:       |        |  |            aab50513               addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:114
      lc_shift = kLcShiftDev;
      lc_shift_masked = launder32(kLcShiftDev) ^ kLcStateDev;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a580:       |        |  |        /-- 00a90663               beq     s2,a0,d000a58c <shutdown_init+0x82>
d000a584:       |        |  |        |   0000                   unimp
d000a586:       |        |  |        |   0000                   unimp
d000a588:       |        |  |        |   0000                   unimp
d000a58a:       |        |  |        |   0000                   unimp
d000a58c:       |        |  |        \-> 49e1                   li      s3,24
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a58e:       |        |  |            45e1                   li      a1,24
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:116
      lc_shift = kLcShiftRma;
      lc_shift_masked = launder32(kLcShiftRma) ^ kLcStateRma;
d000a590:       |        |  |            00a5ca33               xor     s4,a1,a0
d000a594:       |        |  |        /-- a00d                   j       d000a5b6 <shutdown_init+0xac>
d000a596:       |        |  \--------|-> 65f255b7               lui     a1,0x65f25
d000a59a:       |        |           |   20f58593               addi    a1,a1,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a59e:       |  /-----|-----------|-- 24b51763               bne     a0,a1,d000a7ec <shutdown_init+0x2e2>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5a2:       |  |     |           |   4501                   li      a0,0
d000a5a4:       |  |     |           |   4981                   li      s3,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:97
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a5a6:       |  |     +-----------|-- 00b90663               beq     s2,a1,d000a5b2 <shutdown_init+0xa8>
d000a5aa:       |  |     |           |   0000                   unimp
d000a5ac:       |  |     |           |   0000                   unimp
d000a5ae:       |  |     |           |   0000                   unimp
d000a5b0:       |  |     |           |   0000                   unimp
d000a5b2:       |  |     \-----------|-> 00b54a33               xor     s4,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:128
  // Each of these OTP words is composed of 4 byte enums with the enable and
  // escalate configs per alert class (a/b/c/d).
  size_t i = 0;
  rom_error_t error = kErrorOk;
  uint32_t class_enable =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASS_EN_OFFSET);
d000a5b6:       |  |                 \-> 36800513               li      a0,872
d000a5ba:       |  |                     011030ef               jal     ra,d000ddca <otp_read32>
d000a5be:       |  |                     842a                   mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:130
  uint32_t class_escalate =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ESCALATION_OFFSET);
d000a5c0:       |  |                     36c00513               li      a0,876
d000a5c4:       |  |                     007030ef               jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5c8:       |  |                     4581                   li      a1,0
d000a5ca:       |  |                     5afd                   li      s5,-1
d000a5cc:       |  |                     460d                   li      a2,3
d000a5ce:       |  |                     5b7d                   li      s6,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  alert_enable_t enable[ALERT_CLASSES];
  alert_escalate_t escalate[ALERT_CLASSES];
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a5d0:       |  |              /----- 02b66e63               bltu    a2,a1,d000a60c <shutdown_init+0x102>
d000a5d4:       |  |              |      4601                   li      a2,0
d000a5d6:       |  |              |      1874                   addi    a3,sp,60
d000a5d8:       |  |              |      1078                   addi    a4,sp,44
d000a5da:       |  |              |      4585                   li      a1,1
d000a5dc:       |  |              |      4791                   li      a5,4
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a5de:       |  |              |  /-> 00c454b3               srl     s1,s0,a2
d000a5e2:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:134
    enable[i] = (alert_enable_t)bitfield_field32_read(
d000a5e6:       |  |              |  |   c284                   sw      s1,0(a3)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a5e8:       |  |              |  |   00c554b3               srl     s1,a0,a2
d000a5ec:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:136
        class_enable, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
    escalate[i] = (alert_escalate_t)bitfield_field32_read(
d000a5f0:       |  |              |  |   c304                   sw      s1,0(a4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5f2:       |  |              |  |   84ae                   mv      s1,a1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a5f4:       |  |              |  |   0691                   addi    a3,a3,4
d000a5f6:       |  |              |  |   0711                   addi    a4,a4,4
d000a5f8:       |  |              |  |   0585                   addi    a1,a1,1
d000a5fa:       |  |              |  |   0621                   addi    a2,a2,8
d000a5fc:       |  |              |  \-- fef4e1e3               bltu    s1,a5,d000a5de <shutdown_init+0xd4>
d000a600:       |  |              |      4515                   li      a0,5
d000a602:       |  |              |      73900b13               li      s6,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:139
        class_escalate, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
  }
  if (i != ALERT_CLASSES) {
d000a606:       |  |              +----- 00a58363               beq     a1,a0,d000a60c <shutdown_init+0x102>
d000a60a:       |  |              |      5b7d                   li      s6,-1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a60c:       |  |              \----> 4501                   li      a0,0
d000a60e:       |  |                     04000593               li      a1,64
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
    error = kErrorUnknown;
  }

  // For each alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a612:       |  |  /----------------- 06a5e863               bltu    a1,a0,d000a682 <shutdown_init+0x178>
d000a616:       |  |  |                  4481                   li      s1,0
d000a618:       |  |  |                  37000413               li      s0,880
d000a61c:       |  |  |                  03200a93               li      s5,50
d000a620:       |  |  |                  03c10b93               addi    s7,sp,60
d000a624:       |  |  |                  73900c13               li      s8,1849
d000a628:       |  |  |                  04100c93               li      s9,65
d000a62c:       |  |  |                  0a700d13               li      s10,167
d000a630:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:148
       ++i) {
    uint32_t value =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION_OFFSET +
d000a634:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a636:       |  |  |  |               794030ef               jal     ra,d000ddca <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a63a:       |  |  |  |               01355533               srl     a0,a0,s3
d000a63e:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a642:       |  |  |  |  /----------- 01558a63               beq     a1,s5,d000a656 <shutdown_init+0x14c>
d000a646:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a652 <shutdown_init+0x148>
d000a64a:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a65a <shutdown_init+0x150>
d000a64e:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a650:       |  |  |  |  |  |  /--|-- a031                   j       d000a65c <shutdown_init+0x152>
d000a652:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a654:       |  |  |  |  |  |  +----- a021                   j       d000a65c <shutdown_init+0x152>
d000a656:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a658:       |  |  |  |     |  +----- a011                   j       d000a65c <shutdown_init+0x152>
d000a65a:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:152
                   i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_configure(i, cls, enable[clsindex(cls)]);
d000a65c:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a65e:       |  |  |  |               955e                   add     a0,a0,s7
d000a660:       |  |  |  |               4110                   lw      a2,0(a0)
d000a662:       |  |  |  |               8526                   mv      a0,s1
d000a664:       |  |  |  |               2cb9                   jal     d000a8c2 <alert_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:153
    if (e != kErrorOk) {
d000a666:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a66c <shutdown_init+0x162>
d000a66a:       |  |  |  |           |   8b2a                   mv      s6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:146
       ++i) {
d000a66c:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a66e:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a670:       |  |  |  |               0411                   addi    s0,s0,4
d000a672:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a634 <shutdown_init+0x12a>
d000a676:       |  |  |                  04100513               li      a0,65
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:159
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a67a:       |  |  |              /-- 00a48363               beq     s1,a0,d000a680 <shutdown_init+0x176>
d000a67e:       |  |  |              |   5b7d                   li      s6,-1
d000a680:       |  |  |              \-> 8ada                   mv      s5,s6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a682:       |  |  \----------------> 4501                   li      a0,0
d000a684:       |  |                     4619                   li      a2,6
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
    error = kErrorUnknown;
  }

  // For each local alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0;
d000a686:       |  |  /----------------- 06a66663               bltu    a2,a0,d000a6f2 <shutdown_init+0x1e8>
d000a68a:       |  |  |                  4481                   li      s1,0
d000a68c:       |  |  |                  4b000413               li      s0,1200
d000a690:       |  |  |                  03200b13               li      s6,50
d000a694:       |  |  |                  03c10b93               addi    s7,sp,60
d000a698:       |  |  |                  73900c13               li      s8,1849
d000a69c:       |  |  |                  4c9d                   li      s9,7
d000a69e:       |  |  |                  0a700d13               li      s10,167
d000a6a2:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:168
       launder32(i) < ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
       ++i) {
    uint32_t value = otp_read32(
d000a6a6:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a6a8:       |  |  |  |               722030ef               jal     ra,d000ddca <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a6ac:       |  |  |  |               01355533               srl     a0,a0,s3
d000a6b0:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a6b4:       |  |  |  |  /----------- 01658a63               beq     a1,s6,d000a6c8 <shutdown_init+0x1be>
d000a6b8:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a6c4 <shutdown_init+0x1ba>
d000a6bc:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a6cc <shutdown_init+0x1c2>
d000a6c0:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a6c2:       |  |  |  |  |  |  /--|-- a031                   j       d000a6ce <shutdown_init+0x1c4>
d000a6c4:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a6c6:       |  |  |  |  |  |  +----- a021                   j       d000a6ce <shutdown_init+0x1c4>
d000a6c8:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a6ca:       |  |  |  |     |  +----- a011                   j       d000a6ce <shutdown_init+0x1c4>
d000a6cc:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:173
        OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_LOCAL_ALERT_CLASSIFICATION_OFFSET +
        i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_local_configure(i, cls, enable[clsindex(cls)]);
d000a6ce:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a6d0:       |  |  |  |               955e                   add     a0,a0,s7
d000a6d2:       |  |  |  |               4110                   lw      a2,0(a0)
d000a6d4:       |  |  |  |               8526                   mv      a0,s1
d000a6d6:       |  |  |  |               2475                   jal     d000a982 <alert_local_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:174
    if (e != kErrorOk) {
d000a6d8:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a6de <shutdown_init+0x1d4>
d000a6dc:       |  |  |  |           |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:167
       ++i) {
d000a6de:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a6e0:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
  for (i = 0;
d000a6e2:       |  |  |  |               0411                   addi    s0,s0,4
d000a6e4:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a6a6 <shutdown_init+0x19c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:180
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a6e8:       |  |  |                  ff948513               addi    a0,s1,-7
d000a6ec:       |  |  |                  00153593               seqz    a1,a0
d000a6f0:       |  |  |              /-- a011                   j       d000a6f4 <shutdown_init+0x1ea>
d000a6f2:       |  |  \--------------|-> 4581                   li      a1,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a6f4:       |  |                 \-> 4601                   li      a2,0
d000a6f6:       |  |                     468d                   li      a3,3
d000a6f8:       |  |                     557d                   li      a0,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
      kAlertClassB,
      kAlertClassC,
      kAlertClassD,
  };
  alert_class_config_t config;
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a6fa:       |  |        /----------- 0cc6ea63               bltu    a3,a2,d000a7ce <shutdown_init+0x2c4>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:185
  if ((lc_shift_masked ^ lc_state) != lc_shift) {
d000a6fe:       |  |        |            012a4533               xor     a0,s4,s2
d000a702:       |  |        |            01354533               xor     a0,a0,s3
d000a706:       |  |        |            00153513               seqz    a0,a0
d000a70a:       |  |        |            8d6d                   and     a0,a0,a1
d000a70c:       |  |        |        /-- e111                   bnez    a0,d000a710 <shutdown_init+0x206>
d000a70e:       |  |        |        |   5afd                   li      s5,-1
d000a710:       |  |        |        \-> 4c01                   li      s8,0
d000a712:       |  |        |            51000913               li      s2,1296
d000a716:       |  |        |            03c10a13               addi    s4,sp,60
d000a71a:       |  |        |            02c10b13               addi    s6,sp,44
d000a71e:       |  |        |            4b8d                   li      s7,3
d000a720:       |  |        |            4491                   li      s1,4
d000a722:       |  |        |            00004d17               auipc   s10,0x4
d000a726:       |  |        |            19ed0d13               addi    s10,s10,414 # d000e8c0 <kSpiDeviceSfdpTable+0x6c>
d000a72a:       |  |        |            73900d93               li      s11,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a72e:       |  |        |  /-------> 002c1993               slli    s3,s8,0x2
d000a732:       |  |        |  |         013a0533               add     a0,s4,s3
d000a736:       |  |        |  |         4108                   lw      a0,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a738:       |  |        |  |         013b05b3               add     a1,s6,s3
d000a73c:       |  |        |  |         418c                   lw      a1,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a73e:       |  |        |  |         c42a                   sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a740:       |  |        |  |         c62e                   sw      a1,12(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:201
    config.accum_threshold =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH_OFFSET +
d000a742:       |  |        |  |         4f098513               addi    a0,s3,1264
d000a746:       |  |        |  |         684030ef               jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:200
    config.accum_threshold =
d000a74a:       |  |        |  |         c82a                   sw      a0,16(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:204
                   i * sizeof(uint32_t));
    config.timeout_cycles =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_TIMEOUT_CYCLES_OFFSET +
d000a74c:       |  |        |  |         50098513               addi    a0,s3,1280
d000a750:       |  |        |  |         67a030ef               jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a754:       |  |        |  |         4581                   li      a1,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:203
    config.timeout_cycles =
d000a756:       |  |        |  |         ca2a                   sw      a0,20(sp)
d000a758:       |  |        |  |         547d                   li      s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
                   i * sizeof(uint32_t));
    size_t phase = 0;
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a75a:       |  |        |  |  /----- 02bbe863               bltu    s7,a1,d000a78a <shutdown_init+0x280>
d000a75e:       |  |        |  |  |      4c85                   li      s9,1
d000a760:       |  |        |  |  |      01810a13               addi    s4,sp,24
d000a764:       |  |        |  |  |      844a                   mv      s0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:208
      config.phase_cycles[phase] = otp_read32(
d000a766:       |  |        |  |  |  /-> 8522                   mv      a0,s0
d000a768:       |  |        |  |  |  |   662030ef               jal     ra,d000ddca <otp_read32>
d000a76c:       |  |        |  |  |  |   00aa2023               sw      a0,0(s4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a770:       |  |        |  |  |  |   8566                   mv      a0,s9
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a772:       |  |        |  |  |  |   0411                   addi    s0,s0,4
d000a774:       |  |        |  |  |  |   0c85                   addi    s9,s9,1
d000a776:       |  |        |  |  |  |   0a11                   addi    s4,s4,4
d000a778:       |  |        |  |  |  \-- fe9567e3               bltu    a0,s1,d000a766 <shutdown_init+0x25c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:212
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_PHASE_CYCLES_OFFSET +
          (i * ARRAYSIZE(config.phase_cycles) + phase) * sizeof(uint32_t));
    }
    if (phase != ARRAYSIZE(config.phase_cycles)) {
d000a77c:       |  |        |  |  |      4515                   li      a0,5
d000a77e:       |  |        |  |  |  /-- 00ac8363               beq     s9,a0,d000a784 <shutdown_init+0x27a>
d000a782:       |  |        |  |  |  |   5afd                   li      s5,-1
d000a784:       |  |        |  |  |  \-> 8456                   mv      s0,s5
d000a786:       |  |        |  |  |      03c10a13               addi    s4,sp,60
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:216
      error = kErrorUnknown;
    }

    rom_error_t e = alert_class_configure(kClasses[i], &config);
d000a78a:       |  |        |  |  \----> 01a98533               add     a0,s3,s10
d000a78e:       |  |        |  |         4108                   lw      a0,0(a0)
d000a790:       |  |        |  |         002c                   addi    a1,sp,8
d000a792:       |  |        |  |         247d                   jal     d000aa40 <alert_class_configure>
d000a794:       |  |        |  |         8aa2                   mv      s5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:217
    if (e != kErrorOk) {
d000a796:       |  |        |  |     /-- 01b50363               beq     a0,s11,d000a79c <shutdown_init+0x292>
d000a79a:       |  |        |  |     |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a79c:       |  |        |  |     \-> 0c05                   addi    s8,s8,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a79e:       |  |        |  |         8562                   mv      a0,s8
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
d000a7a0:       |  |        |  |         0941                   addi    s2,s2,16
d000a7a2:       |  |        |  \-------- f89566e3               bltu    a0,s1,d000a72e <shutdown_init+0x224>
d000a7a6:       |  |        |            4511                   li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:223
      // Keep going if there is an error programming an alert class. We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_CLASSES) {
d000a7a8:       |  |        |        /-- 00ac0363               beq     s8,a0,d000a7ae <shutdown_init+0x2a4>
d000a7ac:       |  |        |        |   5afd                   li      s5,-1
d000a7ae:       |  |        |        \-> 8556                   mv      a0,s5
d000a7b0:       |  |        +----------- a839                   j       d000a7ce <shutdown_init+0x2c4>
d000a7b2:       \--|--------|----------> b28665b7               lui     a1,0xb2866
d000a7b6:          |        |            fbb58593               addi    a1,a1,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a7ba:          +--------|----------- 02b51963               bne     a0,a1,d000a7ec <shutdown_init+0x2e2>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:92
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a7be:          |        |        /-- 00b90663               beq     s2,a1,d000a7ca <shutdown_init+0x2c0>
d000a7c2:          |        |        |   0000                   unimp
d000a7c4:          |        |        |   0000                   unimp
d000a7c6:          |        |        |   0000                   unimp
d000a7c8:          |        |        |   0000                   unimp
d000a7ca:          |        |        \-> 73900513               li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:227
    error = kErrorUnknown;
  }
  return error;
}
d000a7ce:          |        \----------> 4db6                   lw      s11,76(sp)
d000a7d0:          |                     4d46                   lw      s10,80(sp)
d000a7d2:          |                     4cd6                   lw      s9,84(sp)
d000a7d4:          |                     4c66                   lw      s8,88(sp)
d000a7d6:          |                     4bf6                   lw      s7,92(sp)
d000a7d8:          |                     5b06                   lw      s6,96(sp)
d000a7da:          |                     5a96                   lw      s5,100(sp)
d000a7dc:          |                     5a26                   lw      s4,104(sp)
d000a7de:          |                     59b6                   lw      s3,108(sp)
d000a7e0:          |                     5946                   lw      s2,112(sp)
d000a7e2:          |                     54d6                   lw      s1,116(sp)
d000a7e4:          |                     5466                   lw      s0,120(sp)
d000a7e6:          |                     50f6                   lw      ra,124(sp)
d000a7e8:          |                     6109                   addi    sp,sp,128
d000a7ea:          |                     8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:119
      HARDENED_UNREACHABLE();
d000a7ec:          \-------------------> 0000                   unimp
d000a7ee:                                0000                   unimp
d000a7f0:                                0000                   unimp
d000a7f2:                                0000                   unimp

d000a7f4 <rom_printf>:
rom_printf():
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:13
#include <stdarg.h>
#include <stdint.h>

#include "sw/device/silicon_creator/lib/drivers/uart.h"

rom_error_t rom_printf(const char *format, ...) {
d000a7f4:                          715d                 addi    sp,sp,-80
d000a7f6:                          d606                 sw      ra,44(sp)
d000a7f8:                          d422                 sw      s0,40(sp)
d000a7fa:                          d226                 sw      s1,36(sp)
d000a7fc:                          d04a                 sw      s2,32(sp)
d000a7fe:                          ce4e                 sw      s3,28(sp)
d000a800:                          cc52                 sw      s4,24(sp)
d000a802:                          ca56                 sw      s5,20(sp)
d000a804:                          c85a                 sw      s6,16(sp)
d000a806:                          c65e                 sw      s7,12(sp)
d000a808:                          84aa                 mv      s1,a0
d000a80a:                          c6c6                 sw      a7,76(sp)
d000a80c:                          c4c2                 sw      a6,72(sp)
d000a80e:                          c2be                 sw      a5,68(sp)
d000a810:                          c0ba                 sw      a4,64(sp)
d000a812:                          de36                 sw      a3,60(sp)
d000a814:                          dc32                 sw      a2,56(sp)
d000a816:                          da2e                 sw      a1,52(sp)
d000a818:                          1848                 addi    a0,sp,52
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:15
  va_list args;
  va_start(args, format);
d000a81a:                          c42a                 sw      a0,8(sp)
d000a81c:                          02500a13             li      s4,37
d000a820:                          014c4537             lui     a0,0x14c4
d000a824:                          70d50913             addi    s2,a0,1805 # 14c470d <_rom_ext_virtual_size+0x148470d>
d000a828:                          07800993             li      s3,120
d000a82c:                          00004b97             auipc   s7,0x4
d000a830:                          0b4b8b93             addi    s7,s7,180 # d000e8e0 <rom_printf.kHexTable>
d000a834:                          07300a93             li      s5,115
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17

  while (*format != '\0') {
d000a838:       /----------------> 0004c503             lbu     a0,0(s1)
d000a83c:       |              /-- 01450763             beq     a0,s4,d000a84a <rom_printf+0x56>
d000a840:       |  /-----------|-- c13d                 beqz    a0,d000a8a6 <rom_printf+0xb2>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:19
    if (*format != '%') {
      uart_putchar(*format++);
d000a842:       |  |           |   0485                 addi    s1,s1,1
d000a844:       |  |           |   376010ef             jal     ra,d000bbba <uart_putchar>
d000a848:       +--|-----------|-- bfc5                 j       d000a838 <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:24
      continue;
    }

    ++format;  // Skip over the '%'.
    switch (*format++) {
d000a84a:       |  |           \-> 0014c503             lbu     a0,1(s1)
d000a84e:       |  |               00248b13             addi    s6,s1,2
d000a852:       |  |     /-------- 03350863             beq     a0,s3,d000a882 <rom_printf+0x8e>
d000a856:       |  |  /--|-------- 05551a63             bne     a0,s5,d000a8aa <rom_printf+0xb6>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:27
      case 's': {
        // Print a null-terminated string.
        const char *str = va_arg(args, const char *);
d000a85a:       |  |  |  |         4522                 lw      a0,8(sp)
d000a85c:       |  |  |  |         00450593             addi    a1,a0,4
d000a860:       |  |  |  |         c42e                 sw      a1,8(sp)
d000a862:       |  |  |  |         410c                 lw      a1,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
d000a864:       |  |  |  |         0005c503             lbu     a0,0(a1)
d000a868:       |  |  |  |         84da                 mv      s1,s6
d000a86a:       +--|--|--|-------- d579                 beqz    a0,d000a838 <rom_printf+0x44>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:17
  while (*format != '\0') {
d000a86c:       |  |  |  |         00158413             addi    s0,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:29
          uart_putchar(*str++);
d000a870:       |  |  |  |     /-> 0ff57513             andi    a0,a0,255
d000a874:       |  |  |  |     |   346010ef             jal     ra,d000bbba <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:28
        while (*str != '\0') {
d000a878:       |  |  |  |     |   00044503             lbu     a0,0(s0)
d000a87c:       |  |  |  |     |   0405                 addi    s0,s0,1
d000a87e:       |  |  |  |     \-- f96d                 bnez    a0,d000a870 <rom_printf+0x7c>
d000a880:       |  |  |  |  /----- a00d                 j       d000a8a2 <rom_printf+0xae>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:36
        break;
      }
      case 'x': {
        // Print an `unsigned int` in hexadecimal.
        static const char kHexTable[16] = "0123456789abcdef";
        unsigned int v = va_arg(args, unsigned int);
d000a882:       |  |  |  \--|----> 4522                 lw      a0,8(sp)
d000a884:       |  |  |     |      00450593             addi    a1,a0,4
d000a888:       |  |  |     |      c42e                 sw      a1,8(sp)
d000a88a:       |  |  |     |      4104                 lw      s1,0(a0)
d000a88c:       |  |  |     |      4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:39
        for (int i = 0; i < sizeof(v) * 2; ++i) {
          int shift = sizeof(v) * 8 - 4;
          uart_putchar(kHexTable[v >> shift]);
d000a88e:       |  |  |     |  /-> 01c4d513             srli    a0,s1,0x1c
d000a892:       |  |  |     |  |   955e                 add     a0,a0,s7
d000a894:       |  |  |     |  |   00054503             lbu     a0,0(a0)
d000a898:       |  |  |     |  |   322010ef             jal     ra,d000bbba <uart_putchar>
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
d000a89c:       |  |  |     |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:40
          v <<= 4;
d000a89e:       |  |  |     |  |   0492                 slli    s1,s1,0x4
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:37
        for (int i = 0; i < sizeof(v) * 2; ++i) {
d000a8a0:       |  |  |     |  \-- f47d                 bnez    s0,d000a88e <rom_printf+0x9a>
d000a8a2:       |  |  |     \----> 84da                 mv      s1,s6
d000a8a4:       \--|--|----------- bf51                 j       d000a838 <rom_printf+0x44>
d000a8a6:          \--|----------> 73900913             li      s2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/rom_print.c:52
    }
  }

  va_end(args);
  return kErrorOk;
}
d000a8aa:             \----------> 854a                 mv      a0,s2
d000a8ac:                          4bb2                 lw      s7,12(sp)
d000a8ae:                          4b42                 lw      s6,16(sp)
d000a8b0:                          4ad2                 lw      s5,20(sp)
d000a8b2:                          4a62                 lw      s4,24(sp)
d000a8b4:                          49f2                 lw      s3,28(sp)
d000a8b6:                          5902                 lw      s2,32(sp)
d000a8b8:                          5492                 lw      s1,36(sp)
d000a8ba:                          5422                 lw      s0,40(sp)
d000a8bc:                          50b2                 lw      ra,44(sp)
d000a8be:                          6161                 addi    sp,sp,80
d000a8c0:                          8082                 ret

d000a8c2 <alert_configure>:
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:22
enum {
  kBase = TOP_EARLGREY_ALERT_HANDLER_BASE_ADDR,
};

rom_error_t alert_configure(size_t index, alert_class_t cls,
                            alert_enable_t enabled) {
d000a8c2:                             04000693                  li      a3,64
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:23
  if (index >= ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a8c6:                         /-- 00a6f763                  bgeu    a3,a0,d000a8d4 <alert_configure+0x12>
d000a8ca:                         |   01415537                  lui     a0,0x1415
d000a8ce:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x13d4803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a8d2:       |                 |   8082                      ret
d000a8d4:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a8d8:       |                     22068693                  addi    a3,a3,544 # c0150220 <_stack_end+0xe0130220>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:26
  index *= 4;
d000a8dc:       |                     00251713                  slli    a4,a0,0x2
d000a8e0:       |                     09300793                  li      a5,147
d000a8e4:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a8e8:       |                 /-- 02b7d563                  bge     a5,a1,d000a912 <alert_configure+0x50>
d000a8ec:       |                 |   09400793                  li      a5,148
d000a8f0:       |  /--------------|-- 08f58563                  beq     a1,a5,d000a97a <alert_configure+0xb8>
d000a8f4:       |  |              |   0a700793                  li      a5,167
d000a8f8:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a92a <alert_configure+0x68>
d000a8fc:       |  |     |        |   0ee00793                  li      a5,238
d000a900:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000a966 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:31
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a904:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a908:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a90c:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a910:       |  |  |  |  /-----|-- a035                      j       d000a93c <alert_configure+0x7a>
d000a912:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a916:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a932 <alert_configure+0x70>
d000a91a:       |  |  |  |  |  |      06400793                  li      a5,100
d000a91e:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000a966 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:36
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a922:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a926:       |  |  |  |  |  |      4785                      li      a5,1
d000a928:       |  |  |  |  |  |  /-- a801                      j       d000a938 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:41
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a92a:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a92e:       |  |  |     |  |  |   4789                      li      a5,2
d000a930:       |  |  |     |  |  +-- a021                      j       d000a938 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:46
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a932:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a936:       |  |  |     |     |   478d                      li      a5,3
d000a938:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a93a:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a93c:       |  |  |     \-------> 459d                      li      a1,7
d000a93e:       |  |  |           /-- 02b60763                  beq     a2,a1,d000a96c <alert_configure+0xaa>
d000a942:       |  |  |           |   0a900593                  li      a1,169
d000a946:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000a97a <alert_configure+0xb8>
d000a94a:       |  |  |           |   0d200593                  li      a1,210
d000a94e:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000a97c <alert_configure+0xba>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:61
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a952:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000a956:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a958:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a95c:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a960:       |  |  |        |  |   de05ac23                  sw      zero,-520(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a964:       |  |  |        |  |   8082                      ret
d000a966:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000a96a:       +--|-----------|--|-- b795                      j       d000a8ce <alert_configure+0xc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:67
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a96c:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000a970:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a972:       |  |           |      eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a976:       |  |           |      eec5ae23                  sw      a2,-260(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a97a:       |  \-----------|----> 8082                      ret
d000a97c:       |              \----> 03415537                  lui     a0,0x3415
d000a980:       \-------------------- b7b9                      j       d000a8ce <alert_configure+0xc>

d000a982 <alert_local_configure>:
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:76

rom_error_t alert_local_configure(size_t index, alert_class_t cls,
                                  alert_enable_t enabled) {
d000a982:                             4699                      li      a3,6
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:77
  if (index >= ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a984:                         /-- 00a6f763                  bgeu    a3,a0,d000a992 <alert_local_configure+0x10>
d000a988:                         |   01415537                  lui     a0,0x1415
d000a98c:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <_rom_ext_virtual_size+0x13d4803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a990:       |                 |   8082                      ret
d000a992:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a996:       |                     46068693                  addi    a3,a3,1120 # c0150460 <_stack_end+0xe0130460>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:80
  index *= 4;
d000a99a:       |                     00251713                  slli    a4,a0,0x2
d000a99e:       |                     09300793                  li      a5,147
d000a9a2:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a9a6:       |                 /-- 02b7d563                  bge     a5,a1,d000a9d0 <alert_local_configure+0x4e>
d000a9aa:       |                 |   09400793                  li      a5,148
d000a9ae:       |  /--------------|-- 08f58563                  beq     a1,a5,d000aa38 <alert_local_configure+0xb6>
d000a9b2:       |  |              |   0a700793                  li      a5,167
d000a9b6:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a9e8 <alert_local_configure+0x66>
d000a9ba:       |  |     |        |   0ee00793                  li      a5,238
d000a9be:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000aa24 <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:85
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a9c2:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a9c6:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a9ca:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a9ce:       |  |  |  |  /-----|-- a035                      j       d000a9fa <alert_local_configure+0x78>
d000a9d0:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a9d4:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a9f0 <alert_local_configure+0x6e>
d000a9d8:       |  |  |  |  |  |      06400793                  li      a5,100
d000a9dc:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000aa24 <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:90
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a9e0:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a9e4:       |  |  |  |  |  |      4785                      li      a5,1
d000a9e6:       |  |  |  |  |  |  /-- a801                      j       d000a9f6 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:95
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a9e8:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a9ec:       |  |  |     |  |  |   4789                      li      a5,2
d000a9ee:       |  |  |     |  |  +-- a021                      j       d000a9f6 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:100
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a9f0:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a9f4:       |  |  |     |     |   478d                      li      a5,3
d000a9f6:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a9f8:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a9fa:       |  |  |     \-------> 459d                      li      a1,7
d000a9fc:       |  |  |           /-- 02b60763                  beq     a2,a1,d000aa2a <alert_local_configure+0xa8>
d000aa00:       |  |  |           |   0a900593                  li      a1,169
d000aa04:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000aa38 <alert_local_configure+0xb6>
d000aa08:       |  |  |           |   0d200593                  li      a1,210
d000aa0c:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000aa3a <alert_local_configure+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:115
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000aa10:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000aa14:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aa16:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aa1a:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000aa1e:       |  |  |        |  |   fc05a423                  sw      zero,-56(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000aa22:       |  |  |        |  |   8082                      ret
d000aa24:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000aa28:       +--|-----------|--|-- b795                      j       d000a98c <alert_local_configure+0xa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:121
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000aa2a:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000aa2e:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aa30:       |  |           |      fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aa34:       |  |           |      fec5a223                  sw      a2,-28(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000aa38:       |  \-----------|----> 8082                      ret
d000aa3a:       |              \----> 03415537                  lui     a0,0x3415
d000aa3e:       \-------------------- b7b9                      j       d000a98c <alert_local_configure+0xa>

d000aa40 <alert_class_configure>:
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:130

rom_error_t alert_class_configure(alert_class_t cls,
                                  const alert_class_config_t *config) {
d000aa40:                          862a                 mv      a2,a0
d000aa42:                          02415537             lui     a0,0x2415
d000aa46:                          0a600693             li      a3,166
d000aa4a:                          80350513             addi    a0,a0,-2045 # 2414803 <_rom_ext_virtual_size+0x23d4803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:147
      reg, ALERT_HANDLER_CLASSA_CTRL_SHADOWED_MAP_E3_FIELD, 3);

  // All of the alert class register blocks are identical but at different
  // offsets.  We'll treat everything like Class A, but add in the offset
  // to the other classes.
  switch (cls) {
d000aa4e:                      /-- 00c6cd63             blt     a3,a2,d000aa68 <alert_class_configure+0x28>
d000aa52:                      |   03200693             li      a3,50
d000aa56:                /-----|-- 02d60363             beq     a2,a3,d000aa7c <alert_class_configure+0x3c>
d000aa5a:                |     |   06400693             li      a3,100
d000aa5e:       /--------|-----|-- 08d61063             bne     a2,a3,d000aade <alert_class_configure+0x9e>
d000aa62:       |        |     |   03800813             li      a6,56
d000aa66:       |        |  /--|-- a005                 j       d000aa86 <alert_class_configure+0x46>
d000aa68:       |        |  |  \-> 0a700693             li      a3,167
d000aa6c:       |        |  |  /-- 00d60b63             beq     a2,a3,d000aa82 <alert_class_configure+0x42>
d000aa70:       |        |  |  |   0ee00693             li      a3,238
d000aa74:       +--------|--|--|-- 06d61563             bne     a2,a3,d000aade <alert_class_configure+0x9e>
d000aa78:       |        |  |  |   4801                 li      a6,0
d000aa7a:       |        |  +--|-- a031                 j       d000aa86 <alert_class_configure+0x46>
d000aa7c:       |        \--|--|-> 0a800813             li      a6,168
d000aa80:       |           +--|-- a019                 j       d000aa86 <alert_class_configure+0x46>
d000aa82:       |           |  \-> 07000813             li      a6,112
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:168
      break;
    case kAlertClassX:
    default:
      return kErrorAlertBadClass;
  }
  switch (config->enabled) {
d000aa86:       |           \----> 0005a883             lw      a7,0(a1)
d000aa8a:       |                  471d                 li      a4,7
d000aa8c:       |                  6511                 lui     a0,0x4
d000aa8e:       |        /-------- 02e88163             beq     a7,a4,d000aab0 <alert_class_configure+0x70>
d000aa92:       |        |         0a900713             li      a4,169
d000aa96:       |        |  /----- 00e88a63             beq     a7,a4,d000aaaa <alert_class_configure+0x6a>
d000aa9a:       |        |  |      0d200513             li      a0,210
d000aa9e:       |  /-----|--|----- 0aa89c63             bne     a7,a0,d000ab56 <alert_class_configure+0x116>
d000aaa2:       |  |     |  |      6511                 lui     a0,0x4
d000aaa4:       |  |     |  |      90350713             addi    a4,a0,-1789 # 3903 <_static_critical_size+0x193f>
d000aaa8:       |  |     |  |  /-- a031                 j       d000aab4 <alert_class_configure+0x74>
d000aaaa:       |  |     |  \--|-> 90050713             addi    a4,a0,-1792
d000aaae:       |  |     |     +-- a019                 j       d000aab4 <alert_class_configure+0x74>
d000aab0:       |  |     \-----|-> 90150713             addi    a4,a0,-1791
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
    case kAlertEnableNone:
      break;
    default:
      return kErrorAlertBadEnable;
  }
  switch (config->escalation) {
d000aab4:       |  |           \-> 41dc                 lw      a5,4(a1)
d000aab6:       |  |               04415537             lui     a0,0x4415
d000aaba:       |  |               0b800693             li      a3,184
d000aabe:       |  |               80350513             addi    a0,a0,-2045 # 4414803 <_rom_ext_virtual_size+0x43d4803>
d000aac2:       |  |           /-- 00f6df63             bge     a3,a5,d000aae0 <alert_class_configure+0xa0>
d000aac6:       |  |           |   0b900693             li      a3,185
d000aaca:       |  |  /--------|-- 02d78963             beq     a5,a3,d000aafc <alert_class_configure+0xbc>
d000aace:       |  |  |        |   0cb00693             li      a3,203
d000aad2:       |  |  |     /--|-- 02d78363             beq     a5,a3,d000aaf8 <alert_class_configure+0xb8>
d000aad6:       |  |  |     |  |   0d100693             li      a3,209
d000aada:       |  |  |  /--|--|-- 02d78363             beq     a5,a3,d000ab00 <alert_class_configure+0xc0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
    abs_mmio_write32(kBase + ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET + offset,
                     0);
  }

  return kErrorOk;
}
d000aade:       >--|--|--|--|--|-> 8082                 ret
d000aae0:       |  |  |  |  |  \-> 02500693             li      a3,37
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
  switch (config->escalation) {
d000aae4:       |  |  |  |  |  /-- 00d78863             beq     a5,a3,d000aaf4 <alert_class_configure+0xb4>
d000aae8:       |  |  |  |  |  |   07600693             li      a3,118
d000aaec:       +--|--|--|--|--|-- fed799e3             bne     a5,a3,d000aade <alert_class_configure+0x9e>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000aaf0:       |  |  |  |  |  |   02076713             ori     a4,a4,32
d000aaf4:       |  |  |  |  |  \-> 01076713             ori     a4,a4,16
d000aaf8:       |  |  |  |  \----> 00876713             ori     a4,a4,8
d000aafc:       |  |  \--|-------> 00476713             ori     a4,a4,4
d000ab00:       |  |     \-------> c0150537             lui     a0,0xc0150
d000ab04:       |  |               49850513             addi    a0,a0,1176 # c0150498 <_stack_end+0xe0130498>
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:206
      kBase + ALERT_HANDLER_CLASSA_CTRL_SHADOWED_REG_OFFSET + offset, reg);
d000ab08:       |  |               982a                 add     a6,a6,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ab0a:       |  |               00e82223             sw      a4,4(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ab0e:       |  |               00e82223             sw      a4,4(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:209
      config->accum_threshold);
d000ab12:       |  |               4588                 lw      a0,8(a1)
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ab14:       |  |               00a82a23             sw      a0,20(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ab18:       |  |               00a82a23             sw      a0,20(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:212
      config->timeout_cycles);
d000ab1c:       |  |               45d8                 lw      a4,12(a1)
d000ab1e:       |  |               4501                 li      a0,0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ab20:       |  |               00e82c23             sw      a4,24(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ab24:       |  |               00e82c23             sw      a4,24(a6)
d000ab28:       |  |               02080713             addi    a4,a6,32
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000ab2c:       |  |               05c1                 addi    a1,a1,16
d000ab2e:       |  |               47c1                 li      a5,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:217
        config->phase_cycles[i]);
d000ab30:       |  |           /-> 00a58633             add     a2,a1,a0
d000ab34:       |  |           |   4210                 lw      a2,0(a2)
d000ab36:       |  |           |   00a706b3             add     a3,a4,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000ab3a:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000ab3c:       |  |           |   0511                 addi    a0,a0,4
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000ab3e:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
d000ab40:       |  |           \-- fef518e3             bne     a0,a5,d000ab30 <alert_class_configure+0xf0>
d000ab44:       |  |               0d200593             li      a1,210
d000ab48:       |  |               73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:220
  if (config->enabled == kAlertEnableLocked) {
d000ab4c:       \--|-------------- f8b899e3             bne     a7,a1,d000aade <alert_class_configure+0x9e>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ab50:          |               00082023             sw      zero,0(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
}
d000ab54:          |               8082                 ret
d000ab56:          \-------------> 03415537             lui     a0,0x3415
d000ab5a:                          80350513             addi    a0,a0,-2045 # 3414803 <_rom_ext_virtual_size+0x33d4803>
d000ab5e:                          8082                 ret

d000ab60 <alert_config_crc32>:
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:260
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
    crc32_add_reg(ctx, offset);
  }
}

uint32_t alert_config_crc32(void) {
d000ab60:              7179                     addi    sp,sp,-48
d000ab62:              d606                     sw      ra,44(sp)
d000ab64:              d422                     sw      s0,40(sp)
d000ab66:              d226                     sw      s1,36(sp)
d000ab68:              d04a                     sw      s2,32(sp)
d000ab6a:              ce4e                     sw      s3,28(sp)
d000ab6c:              cc52                     sw      s4,24(sp)
d000ab6e:              ca56                     sw      s5,20(sp)
d000ab70:              c85a                     sw      s6,16(sp)
d000ab72:              c0150537                 lui     a0,0xc0150
d000ab76:              01850913                 addi    s2,a0,24 # c0150018 <_stack_end+0xe0130018>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:262
  uint32_t ctx;
  crc32_init(&ctx);
d000ab7a:              0068                     addi    a0,sp,12
d000ab7c:              22ed                     jal     d000ad66 <crc32_init>
d000ab7e:              4401                     li      s0,0
d000ab80:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000ab84:          /-> 01240533                 add     a0,s0,s2
d000ab88:          |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab8a:          |   0068                     addi    a0,sp,12
d000ab8c:          |   22c5                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab8e:          |   0411                     addi    s0,s0,4
d000ab90:          \-- fe941ae3                 bne     s0,s1,d000ab84 <alert_config_crc32+0x24>
d000ab94:              4401                     li      s0,0
d000ab96:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab9a:          /-> 00890533                 add     a0,s2,s0
d000ab9e:          |   10452583                 lw      a1,260(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000aba2:          |   0068                     addi    a0,sp,12
d000aba4:          |   22e1                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000aba6:          |   0411                     addi    s0,s0,4
d000aba8:          \-- fe9419e3                 bne     s0,s1,d000ab9a <alert_config_crc32+0x3a>
d000abac:              4401                     li      s0,0
d000abae:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000abb2:          /-> 00890533                 add     a0,s2,s0
d000abb6:          |   20852583                 lw      a1,520(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000abba:          |   0068                     addi    a0,sp,12
d000abbc:          |   2a45                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000abbe:          |   0411                     addi    s0,s0,4
d000abc0:          \-- fe9419e3                 bne     s0,s1,d000abb2 <alert_config_crc32+0x52>
d000abc4:              4401                     li      s0,0
d000abc6:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000abc8:          /-> 00890533                 add     a0,s2,s0
d000abcc:          |   41052583                 lw      a1,1040(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000abd0:          |   0068                     addi    a0,sp,12
d000abd2:          |   2a69                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000abd4:          |   0411                     addi    s0,s0,4
d000abd6:          \-- fe9419e3                 bne     s0,s1,d000abc8 <alert_config_crc32+0x68>
d000abda:              4401                     li      s0,0
d000abdc:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000abde:          /-> 00890533                 add     a0,s2,s0
d000abe2:          |   42c52583                 lw      a1,1068(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000abe6:          |   0068                     addi    a0,sp,12
d000abe8:          |   2251                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000abea:          |   0411                     addi    s0,s0,4
d000abec:          \-- fe9419e3                 bne     s0,s1,d000abde <alert_config_crc32+0x7e>
d000abf0:              4401                     li      s0,0
d000abf2:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000abf4:          /-> 00890533                 add     a0,s2,s0
d000abf8:          |   44852583                 lw      a1,1096(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000abfc:          |   0068                     addi    a0,sp,12
d000abfe:          |   22bd                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ac00:          |   0411                     addi    s0,s0,4
d000ac02:          \-- fe9419e3                 bne     s0,s1,d000abf4 <alert_config_crc32+0x94>
d000ac06:              4a01                     li      s4,0
d000ac08:              c0150537                 lui     a0,0xc0150
d000ac0c:              4b850413                 addi    s0,a0,1208 # c01504b8 <_stack_end+0xe01304b8>
d000ac10:              03800993                 li      s3,56
d000ac14:              4b41                     li      s6,16
d000ac16:              4a91                     li      s5,4
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:282
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
    enum {
      kClassStep = ALERT_HANDLER_CLASSB_REGWEN_REG_OFFSET -
                   ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET,
    };
    uint32_t classOffset = kClassStep * class;
d000ac18:       /----> 033a0533                 mul     a0,s4,s3
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ac1c:       |      00a904b3                 add     s1,s2,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ac20:       |      4804a583                 lw      a1,1152(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ac24:       |      0068                     addi    a0,sp,12
d000ac26:       |      2299                     jal     d000ad6c <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ac28:       |      4844a583                 lw      a1,1156(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ac2c:       |      0068                     addi    a0,sp,12
d000ac2e:       |      2a3d                     jal     d000ad6c <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ac30:       |      4944a583                 lw      a1,1172(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ac34:       |      0068                     addi    a0,sp,12
d000ac36:       |      2a1d                     jal     d000ad6c <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ac38:       |      4984a583                 lw      a1,1176(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ac3c:       |      0068                     addi    a0,sp,12
d000ac3e:       |      223d                     jal     d000ad6c <crc32_add32>
d000ac40:       |      4481                     li      s1,0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ac42:       |  /-> 00940533                 add     a0,s0,s1
d000ac46:       |  |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ac48:       |  |   0068                     addi    a0,sp,12
d000ac4a:       |  |   220d                     jal     d000ad6c <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ac4c:       |  |   0491                     addi    s1,s1,4
d000ac4e:       |  \-- ff649ae3                 bne     s1,s6,d000ac42 <alert_config_crc32+0xe2>
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:277
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
d000ac52:       |      0a05                     addi    s4,s4,1
d000ac54:       |      03840413                 addi    s0,s0,56
d000ac58:       \----- fd5a10e3                 bne     s4,s5,d000ac18 <alert_config_crc32+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:299
    crc32_add_regs(
        &ctx, classOffset + ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED_REG_OFFSET,
        ALERT_HANDLER_PARAM_N_PHASES);
  }

  return crc32_finish(&ctx);
d000ac5c:              0068                     addi    a0,sp,12
d000ac5e:              2a81                     jal     d000adae <crc32_finish>
d000ac60:              4b42                     lw      s6,16(sp)
d000ac62:              4ad2                     lw      s5,20(sp)
d000ac64:              4a62                     lw      s4,24(sp)
d000ac66:              49f2                     lw      s3,28(sp)
d000ac68:              5902                     lw      s2,32(sp)
d000ac6a:              5492                     lw      s1,36(sp)
d000ac6c:              5422                     lw      s0,40(sp)
d000ac6e:              50b2                     lw      ra,44(sp)
d000ac70:              6145                     addi    sp,sp,48
d000ac72:              8082                     ret

d000ac74 <alert_config_check>:
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:302
}

rom_error_t alert_config_check(lifecycle_state_t lc_state) {
d000ac74:                             1141                      addi    sp,sp,-16
d000ac76:                             c606                      sw      ra,12(sp)
d000ac78:                             c422                      sw      s0,8(sp)
d000ac7a:                             c226                      sw      s1,4(sp)
d000ac7c:                             842a                      mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
  uint32_t crc32 = alert_config_crc32();
d000ac7e:                             35cd                      jal     d000ab60 <alert_config_crc32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ac80:                             85a2                      mv      a1,s0
d000ac82:                             cf8d0637                  lui     a2,0xcf8d0
d000ac86:                             aaa60693                  addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
d000ac8a:                             84aa                      mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  rom_error_t res = lc_state ^ crc32;
  switch (launder32(lc_state)) {
d000ac8c:                      /----- 02b6d563                  bge     a3,a1,d000acb6 <alert_config_check+0x42>
d000ac90:                      |      aab60513                  addi    a0,a2,-1365
d000ac94:                   /--|----- 04a58063                  beq     a1,a0,d000acd4 <alert_config_check+0x60>
d000ac98:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000ac9c:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000aca0:                /--|--|----- 04a59763                  bne     a1,a0,d000acee <alert_config_check+0x7a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:324
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      res ^= otp_read32(
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_END_OFFSET);
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000aca4:                |  |  |  /-- 00a40663                  beq     s0,a0,d000acb0 <alert_config_check+0x3c>
d000aca8:                |  |  |  |   0000                      unimp
d000acaa:                |  |  |  |   0000                      unimp
d000acac:                |  |  |  |   0000                      unimp
d000acae:                |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:326
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_DEV_OFFSET);
d000acb0:                |  |  |  \-> 55800513                  li      a0,1368
d000acb4:             /--|--|--|----- a899                      j       d000ad0a <alert_config_check+0x96>
d000acb6:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000acba:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000acbe:       /-----|--|--|-------- 08a59063                  bne     a1,a0,d000ad3e <alert_config_check+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:319
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000acc2:       |     |  |  |     /-- 00a40663                  beq     s0,a0,d000acce <alert_config_check+0x5a>
d000acc6:       |     |  |  |     |   0000                      unimp
d000acc8:       |     |  |  |     |   0000                      unimp
d000acca:       |     |  |  |     |   0000                      unimp
d000accc:       |     |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:320
      res ^= otp_read32(
d000acce:       |     |  |  |     \-> 55400513                  li      a0,1364
d000acd2:       |     +--|--|-------- a825                      j       d000ad0a <alert_config_check+0x96>
d000acd4:       |     |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000acd8:       |     |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:329
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000acdc:       |     |  |        /-- 00a40663                  beq     s0,a0,d000ace8 <alert_config_check+0x74>
d000ace0:       |     |  |        |   0000                      unimp
d000ace2:       |     |  |        |   0000                      unimp
d000ace4:       |     |  |        |   0000                      unimp
d000ace6:       |     |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:331
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_RMA_OFFSET);
d000ace8:       |     |  |        \-> 55c00513                  li      a0,1372
d000acec:       |     +--|----------- a839                      j       d000ad0a <alert_config_check+0x96>
d000acee:       |     |  \----------> 65f25537                  lui     a0,0x65f25
d000acf2:       |     |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000acf6:       |  /--|-------------- 06a59463                  bne     a1,a0,d000ad5e <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:314
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000acfa:       |  |  |           /-- 00a40663                  beq     s0,a0,d000ad06 <alert_config_check+0x92>
d000acfe:       |  |  |           |   0000                      unimp
d000ad00:       |  |  |           |   0000                      unimp
d000ad02:       |  |  |           |   0000                      unimp
d000ad04:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:316
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_OFFSET);
d000ad06:       |  |  |           \-> 55000513                  li      a0,1360
d000ad0a:       |  |  \-------------> 0c0030ef                  jal     ra,d000ddca <otp_read32>
d000ad0e:       |  |     /----------> 0084c5b3                  xor     a1,s1,s0
d000ad12:       |  |     |            8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ad14:       |  |     |            862a                      mv      a2,a0
d000ad16:       |  |     |            73900593                  li      a1,1849
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:336
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  if (launder32(res) != kErrorOk) {
d000ad1a:       |  |     |  /-------- 00b61963                  bne     a2,a1,d000ad2c <alert_config_check+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:339
    return kErrorAlertBadCrc32;
  }
  HARDENED_CHECK_EQ(res, kErrorOk);
d000ad1e:       |  |     |  |  /----- 00b50663                  beq     a0,a1,d000ad2a <alert_config_check+0xb6>
d000ad22:       |  |     |  |  |      0000                      unimp
d000ad24:       |  |     |  |  |      0000                      unimp
d000ad26:       |  |     |  |  |      0000                      unimp
d000ad28:       |  |     |  |  |      0000                      unimp
d000ad2a:       |  |     |  |  \--/-X a029                      j       d000ad34 <alert_config_check+0xc0>
d000ad2c:       |  |     |  \-----|-> 05415537                  lui     a0,0x5415
d000ad30:       |  |     |        |   80350513                  addi    a0,a0,-2045 # 5414803 <_rom_ext_virtual_size+0x53d4803>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:341
  return res;
}
d000ad34:       |  |     |        \-> 4492                      lw      s1,4(sp)
d000ad36:       |  |     |            4422                      lw      s0,8(sp)
d000ad38:       |  |     |            40b2                      lw      ra,12(sp)
d000ad3a:       |  |     |            0141                      addi    sp,sp,16
d000ad3c:       |  |     |            8082                      ret
d000ad3e:       \--|-----|----------> b2866537                  lui     a0,0xb2866
d000ad42:          |     |            fbb50613                  addi    a2,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000ad46:          +-----|----------- 00c59c63                  bne     a1,a2,d000ad5e <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:307
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000ad4a:          |     |        /-- 00c40663                  beq     s0,a2,d000ad56 <alert_config_check+0xe2>
d000ad4e:          |     |        |   0000                      unimp
d000ad50:          |     |        |   0000                      unimp
d000ad52:          |     |        |   0000                      unimp
d000ad54:          |     |        |   0000                      unimp
d000ad56:          |     |        \-> 88250513                  addi    a0,a0,-1918
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:311
      res ^= crc32 ^ kMask;
d000ad5a:          |     |            8d25                      xor     a0,a0,s1
d000ad5c:          |     \----------- bf4d                      j       d000ad0e <alert_config_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:334
      HARDENED_UNREACHABLE();
d000ad5e:          \----------------> 0000                      unimp
d000ad60:                             0000                      unimp
d000ad62:                             0000                      unimp
d000ad64:                             0000                      unimp

d000ad66 <crc32_init>:
crc32_init():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:18
   * CRC32 polynomial.
   */
  kCrc32Poly = 0xedb88320,
};

void crc32_init(uint32_t *ctx) { *ctx = UINT32_MAX; }
d000ad66:       55fd                    li      a1,-1
d000ad68:       c10c                    sw      a1,0(a0)
d000ad6a:       8082                    ret

d000ad6c <crc32_add32>:
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:39
      *ctx ^= kCrc32Poly;
    }
  }
}

void crc32_add32(uint32_t *ctx, uint32_t word) {
d000ad6c:                 1141                  addi    sp,sp,-16
d000ad6e:                 4681                  li      a3,0
d000ad70:                 c62e                  sw      a1,12(sp)
d000ad72:                 4110                  lw      a2,0(a0)
d000ad74:                 edb88737              lui     a4,0xedb88
d000ad78:                 32070713              addi    a4,a4,800 # edb88320 <_stack_end+0xdb68320>
d000ad7c:                 4891                  li      a7,4
d000ad7e:                 00c10813              addi    a6,sp,12
crc32_add8():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:29
  *ctx ^= byte;
d000ad82:       /-------> 0ff5f593              andi    a1,a1,255
d000ad86:       |         8e2d                  xor     a2,a2,a1
d000ad88:       |         45a1                  li      a1,8
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:31
    bool lsb = *ctx & 1;
d000ad8a:       |  /----> 00167793              andi    a5,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:32
    *ctx >>= 1;
d000ad8e:       |  |      8205                  srli    a2,a2,0x1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:33
    if (lsb) {
d000ad90:       |  |  /-- c391                  beqz    a5,d000ad94 <crc32_add32+0x28>
d000ad92:       |  |  |   8e39                  xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:30
  for (size_t i = 0; i < 8; ++i) {
d000ad94:       |  |  \-> 15fd                  addi    a1,a1,-1
d000ad96:       |  \----- f9f5                  bnez    a1,d000ad8a <crc32_add32+0x1e>
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:41
  char *bytes = (char *)&word;
  for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000ad98:       |         0685                  addi    a3,a3,1
d000ad9a:       |     /-- 01168763              beq     a3,a7,d000ada8 <crc32_add32+0x3c>
d000ad9e:       |     |   00d805b3              add     a1,a6,a3
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:42
    crc32_add8(ctx, bytes[i]);
d000ada2:       |     |   0005c583              lbu     a1,0(a1)
d000ada6:       \-----|-- bff1                  j       d000ad82 <crc32_add32+0x16>
d000ada8:             \-> c110                  sw      a2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:44
  }
}
d000adaa:                 0141                  addi    sp,sp,16
d000adac:                 8082                  ret

d000adae <crc32_finish>:
crc32_finish():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:64
  for (; len > 0; --len, ++data) {
    crc32_add8(ctx, *data);
  }
}

uint32_t crc32_finish(const uint32_t *ctx) { return *ctx ^ UINT32_MAX; }
d000adae:       4108                    lw      a0,0(a0)
d000adb0:       fff54513                not     a0,a0
d000adb4:       8082                    ret

d000adb6 <ast_check>:
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:26

enum {
  kBase = TOP_EARLGREY_SENSOR_CTRL_BASE_ADDR,
};

rom_error_t ast_check(lifecycle_state_t lc_state) {
d000adb6:                          1141                 addi    sp,sp,-16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000adb8:                          c606                 sw      ra,12(sp)
d000adba:                          85aa                 mv      a1,a0
d000adbc:                          cf8d0637             lui     a2,0xcf8d0
d000adc0:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  // In some lifecycle states we want to continue the boot process even if the
  // AST is not initialized. Note that in these states OTP may not have been
  // configured.
  switch (launder32(lc_state)) {
d000adc4:                   /----- 02b6d363             bge     a3,a1,d000adea <ast_check+0x34>
d000adc8:                   |      aab60613             addi    a2,a2,-1365
d000adcc:                /--|----- 02c58c63             beq     a1,a2,d000ae04 <ast_check+0x4e>
d000add0:                |  |      0b5a7637             lui     a2,0xb5a7
d000add4:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000add8:             /--|--|----- 04c59163             bne     a1,a2,d000ae1a <ast_check+0x64>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:38
      return kErrorOk;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
      return kErrorOk;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000addc:             |  |  |  /-- 00c50663             beq     a0,a2,d000ade8 <ast_check+0x32>
d000ade0:             |  |  |  |   0000                 unimp
d000ade2:             |  |  |  |   0000                 unimp
d000ade4:             |  |  |  |   0000                 unimp
d000ade6:             |  |  |  |   0000                 unimp
d000ade8:          /--|--|--|--\-X a0a9                 j       d000ae32 <ast_check+0x7c>
d000adea:          |  |  |  \----> 91b9b637             lui     a2,0x91b9b
d000adee:          |  |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000adf2:       /--|--|--|-------- 0ac59c63             bne     a1,a2,d000aeaa <ast_check+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:44
      break;
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000adf6:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000ae02 <ast_check+0x4c>
d000adfa:       |  |  |  |     |   0000                 unimp
d000adfc:       |  |  |  |     |   0000                 unimp
d000adfe:       |  |  |  |     |   0000                 unimp
d000ae00:       |  |  |  |     |   0000                 unimp
d000ae02:       |  +--|--|-----\-X a805                 j       d000ae32 <ast_check+0x7c>
d000ae04:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000ae08:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:35
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ae0c:       |  |  |        /-- 00b50663             beq     a0,a1,d000ae18 <ast_check+0x62>
d000ae10:       |  |  |        |   0000                 unimp
d000ae12:       |  |  |        |   0000                 unimp
d000ae14:       |  |  |        |   0000                 unimp
d000ae16:       |  |  |        |   0000                 unimp
d000ae18:       |  |  |  /-----\-X a06d                 j       d000aec2 <ast_check+0x10c>
d000ae1a:       |  |  \--|-------> 65f25637             lui     a2,0x65f25
d000ae1e:       |  |     |         20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000ae22:       |  |  /--|-------- 0ac59563             bne     a1,a2,d000aecc <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:41
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000ae26:       |  +--|--|-------- 00c50663             beq     a0,a2,d000ae32 <ast_check+0x7c>
d000ae2a:       |  |  |  |         0000                 unimp
d000ae2c:       |  |  |  |         0000                 unimp
d000ae2e:       |  |  |  |         0000                 unimp
d000ae30:       |  |  |  |         0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:52
      HARDENED_UNREACHABLE();
  }

  // OTP can be configured to skip AST initialization. In this situation we do
  // not check that AST_INIT_DONE is set.
  uint32_t en = otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_AST_INIT_EN_OFFSET);
d000ae32:       |  \--|--|-------> 0dc00513             li      a0,220
d000ae36:       |     |  |         795020ef             jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ae3a:       |     |  |         862a                 mv      a2,a0
d000ae3c:       |     |  |         45a5                 li      a1,9
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:53
  if (launder32(en) == kMultiBitBool4False) {
d000ae3e:       |     |  |  /----- 00b61963             bne     a2,a1,d000ae50 <ast_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:54
    HARDENED_CHECK_EQ(en, kMultiBitBool4False);
d000ae42:       |     |  |  |  /-- 00b50663             beq     a0,a1,d000ae4e <ast_check+0x98>
d000ae46:       |     |  |  |  |   0000                 unimp
d000ae48:       |     |  |  |  |   0000                 unimp
d000ae4a:       |     |  |  |  |   0000                 unimp
d000ae4c:       |     |  |  |  |   0000                 unimp
d000ae4e:       |     |  +--|--\-X a895                 j       d000aec2 <ast_check+0x10c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:62

  // AST initialization may take up to 100us. It is most likely already complete
  // at this point but for resilience poll for up to 100us.
  uint32_t mcycle;
  rom_error_t res = kErrorAstInitNotDone;
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000ae50:       |     |  |  \----> b0001073             csrw    mcycle,zero
d000ae54:       |     |  |         00005517             auipc   a0,0x5
d000ae58:       |     |  |         83450513             addi    a0,a0,-1996 # d000f688 <kAstCheckPollCpuCycles>
d000ae5c:       |     |  |         00052803             lw      a6,0(a0)
d000ae60:       |     |  |         01415537             lui     a0,0x1415
d000ae64:       |     |  |         30d50693             addi    a3,a0,781 # 141530d <_rom_ext_virtual_size+0x13d530d>
d000ae68:       |     |  |         c0490637             lui     a2,0xc0490
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:64
  do {
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000ae6c:       |     |  |  /----> b0002773             csrr    a4,mcycle
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ae70:       |     |  |  |      5248                 lw      a0,36(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000ae72:       |     |  |  |      00157793             andi    a5,a0,1
d000ae76:       |     |  |  |      63100513             li      a0,1585
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:90

  // The code below reads the AST_INIT_DONE bit twice and modifies `res` with
  // the result of each attempt. `res` should be `kHardenedBoolTrue` if all
  // attempts return true.
  hardened_bool_t res = 0x631;
  res |= done_bit_get() << 3;
d000ae7a:       |     |  |  |  /-- c399                 beqz    a5,d000ae80 <ast_check+0xca>
d000ae7c:       |     |  |  |  |   63900513             li      a0,1593
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ae80:       |     |  |  |  \-> 525c                 lw      a5,36(a2)
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:91
  res |= done_bit_get() << 8;
d000ae82:       |     |  |  |      07a2                 slli    a5,a5,0x8
d000ae84:       |     |  |  |      1007f793             andi    a5,a5,256
d000ae88:       |     |  |  |      00f565b3             or      a1,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:93

  if (res != kHardenedBoolTrue) {
d000ae8c:       |     |  |  |      8c758793             addi    a5,a1,-1849
d000ae90:       |     |  |  |      73900513             li      a0,1849
d000ae94:       |     |  |  |      00f037b3             snez    a5,a5
d000ae98:       |     |  |  |  /-- 00a58363             beq     a1,a0,d000ae9e <ast_check+0xe8>
d000ae9c:       |     |  |  |  |   8536                 mv      a0,a3
d000ae9e:       |     |  |  |  \-> 010735b3             sltu    a1,a4,a6
d000aea2:       |     |  |  |      8dfd                 and     a1,a1,a5
d000aea4:       |     |  |  |      86aa                 mv      a3,a0
d000aea6:       |     |  |  \----- f1f9                 bnez    a1,d000ae6c <ast_check+0xb6>
d000aea8:       |     |  |     /-- a839                 j       d000aec6 <ast_check+0x110>
d000aeaa:       \-----|--|-----|-> b2866637             lui     a2,0xb2866
d000aeae:             |  |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000aeb2:             +--|-----|-- 00c59d63             bne     a1,a2,d000aecc <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000aeb6:             |  +-----|-- 00c50663             beq     a0,a2,d000aec2 <ast_check+0x10c>
d000aeba:             |  |     |   0000                 unimp
d000aebc:             |  |     |   0000                 unimp
d000aebe:             |  |     |   0000                 unimp
d000aec0:             |  |     |   0000                 unimp
d000aec2:             |  \-----|-> 73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:75
}
d000aec6:             |        \-> 40b2                 lw      ra,12(sp)
d000aec8:             |            0141                 addi    sp,sp,16
d000aeca:             |            8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:47
      HARDENED_UNREACHABLE();
d000aecc:             \----------> 0000                 unimp
d000aece:                          0000                 unimp
d000aed0:                          0000                 unimp
d000aed2:                          0000                 unimp

d000aed4 <flash_ctrl_init>:
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:295
  const info_cfg_regs_t regs = info_cfg_regs(info_page);
  sec_mmio_write32(regs.cfg_addr, 0);
  sec_mmio_write32(regs.cfg_wen_addr, 0);
}

void flash_ctrl_init(void) {
d000aed4:       1101                    addi    sp,sp,-32
d000aed6:       ce06                    sw      ra,28(sp)
d000aed8:       cc22                    sw      s0,24(sp)
d000aeda:       ca26                    sw      s1,20(sp)
d000aedc:       c84a                    sw      s2,16(sp)
d000aede:       c1000537                lui     a0,0xc1000
d000aee2:       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000aee4:       cd0c                    sw      a1,24(a0)
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:305
  // Initialize the flash controller.
  abs_mmio_write32(kBase + FLASH_CTRL_INIT_REG_OFFSET,
                   bitfield_bit32_write(0, FLASH_CTRL_INIT_VAL_BIT, true));
  // Configure default scrambling, ECC, and HE settings for the data partition.
  uint32_t otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_DATA_DEFAULT_CFG_OFFSET);
d000aee6:       0f000513                li      a0,240
d000aeea:       6e1020ef                jal     ra,d000ddca <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000aeee:       0ff57593                andi    a1,a0,255
d000aef2:       00855613                srli    a2,a0,0x8
d000aef6:       0ff67613                andi    a2,a2,255
d000aefa:       8141                    srli    a0,a0,0x10
d000aefc:       0ff57513                andi    a0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:312
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_data_default_cfg_set(data_default_cfg);
d000af00:       c02e                    sw      a1,0(sp)
d000af02:       c232                    sw      a2,4(sp)
d000af04:       c42a                    sw      a0,8(sp)
d000af06:       850a                    mv      a0,sp
d000af08:       20b1                    jal     d000af54 <flash_ctrl_data_default_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:315
  // Configure scrambling, ECC, and HE for `boot_data` pages.
  otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_INFO_BOOT_DATA_CFG_OFFSET);
d000af0a:       0f400513                li      a0,244
d000af0e:       6bd020ef                jal     ra,d000ddca <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000af12:       0ff57913                andi    s2,a0,255
d000af16:       00855593                srli    a1,a0,0x8
d000af1a:       0ff5f493                andi    s1,a1,255
d000af1e:       8141                    srli    a0,a0,0x10
d000af20:       0ff57413                andi    s0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:322
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData0, boot_data_cfg);
d000af24:       c04a                    sw      s2,0(sp)
d000af26:       c226                    sw      s1,4(sp)
d000af28:       c422                    sw      s0,8(sp)
d000af2a:       fa38d537                lui     a0,0xfa38d
d000af2e:       9f650513                addi    a0,a0,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000af32:       858a                    mv      a1,sp
d000af34:       209d                    jal     d000af9a <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:323
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData1, boot_data_cfg);
d000af36:       c04a                    sw      s2,0(sp)
d000af38:       c226                    sw      s1,4(sp)
d000af3a:       c422                    sw      s0,8(sp)
d000af3c:       389c4537                lui     a0,0x389c4
d000af40:       49e50513                addi    a0,a0,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
d000af44:       858a                    mv      a1,sp
d000af46:       2891                    jal     d000af9a <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:324
}
d000af48:       4942                    lw      s2,16(sp)
d000af4a:       44d2                    lw      s1,20(sp)
d000af4c:       4462                    lw      s0,24(sp)
d000af4e:       40f2                    lw      ra,28(sp)
d000af50:       6105                    addi    sp,sp,32
d000af52:       8082                    ret

d000af54 <flash_ctrl_data_default_cfg_set>:
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:495
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
  sec_mmio_write32(cfg_addr, reg);
}

void flash_ctrl_data_default_cfg_set(flash_ctrl_cfg_t cfg) {
d000af54:       1141                    addi    sp,sp,-16
d000af56:       c606                    sw      ra,12(sp)
d000af58:       c422                    sw      s0,8(sp)
d000af5a:       c226                    sw      s1,4(sp)
d000af5c:       842a                    mv      s0,a0
d000af5e:       c1000537                lui     a0,0xc1000
d000af62:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:499
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioDataDefaultCfgSet, 1);

  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000af66:       8526                    mv      a0,s1
d000af68:       6c5020ef                jal     ra,d000de2c <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:501
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_SCRAMBLE_EN_FIELD,
                               cfg.scrambling);
d000af6c:       400c                    lw      a1,0(s0)
d000af6e:       ff001637                lui     a2,0xff001
d000af72:       167d                    addi    a2,a2,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000af74:       8d71                    and     a0,a0,a2
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000af76:       05f2                    slli    a1,a1,0x1c
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:503
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_ECC_EN_FIELD,
                               cfg.ecc);
d000af78:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000af7a:       81c1                    srli    a1,a1,0x10
d000af7c:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:505
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_HE_EN_FIELD,
                               cfg.he);
d000af7e:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000af80:       0672                    slli    a2,a2,0x1c
d000af82:       8231                    srli    a2,a2,0xc
d000af84:       8d51                    or      a0,a0,a2
d000af86:       05f2                    slli    a1,a1,0x1c
d000af88:       81a1                    srli    a1,a1,0x8
d000af8a:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:506
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000af8c:       8526                    mv      a0,s1
d000af8e:       4492                    lw      s1,4(sp)
d000af90:       4422                    lw      s0,8(sp)
d000af92:       40b2                    lw      ra,12(sp)
d000af94:       0141                    addi    sp,sp,16
d000af96:       74b0206f                j       d000dee0 <sec_mmio_write32>

d000af9a <flash_ctrl_info_cfg_set>:
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:510
}

void flash_ctrl_info_cfg_set(flash_ctrl_info_page_t info_page,
                             flash_ctrl_cfg_t cfg) {
d000af9a:       1141                    addi    sp,sp,-16
d000af9c:       c606                    sw      ra,12(sp)
d000af9e:       c422                    sw      s0,8(sp)
d000afa0:       c226                    sw      s1,4(sp)
d000afa2:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:513
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioInfoCfgSet, 1);

  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000afa4:       252d                    jal     d000b5ce <info_cfg_regs>
d000afa6:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:515
  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000afa8:       852e                    mv      a0,a1
d000afaa:       683020ef                jal     ra,d000de2c <sec_mmio_read32>
d000afae:       f00105b7                lui     a1,0xf0010
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:520
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_EN_0_FIELD, kMultiBitBool4True);
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_SCRAMBLE_EN_0_FIELD,
      cfg.scrambling);
d000afb2:       4010                    lw      a2,0(s0)
d000afb4:       15c1                    addi    a1,a1,-16
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000afb6:       8d6d                    and     a0,a0,a1
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:522
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ECC_EN_0_FIELD, cfg.ecc);
d000afb8:       404c                    lw      a1,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000afba:       0672                    slli    a2,a2,0x1c
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:524
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_HE_EN_0_FIELD, cfg.he);
d000afbc:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000afbe:       8231                    srli    a2,a2,0xc
d000afc0:       05f2                    slli    a1,a1,0x1c
d000afc2:       81a1                    srli    a1,a1,0x8
d000afc4:       06f2                    slli    a3,a3,0x1c
d000afc6:       8291                    srli    a3,a3,0x4
d000afc8:       8d51                    or      a0,a0,a2
d000afca:       8d4d                    or      a0,a0,a1
d000afcc:       8d55                    or      a0,a0,a3
d000afce:       00656593                ori     a1,a0,6
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:525
  sec_mmio_write32(cfg_addr, reg);
d000afd2:       8526                    mv      a0,s1
d000afd4:       4492                    lw      s1,4(sp)
d000afd6:       4422                    lw      s0,8(sp)
d000afd8:       40b2                    lw      ra,12(sp)
d000afda:       0141                    addi    sp,sp,16
d000afdc:       7050206f                j       d000dee0 <sec_mmio_write32>

d000afe0 <transaction_start>:
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:87
  abs_mmio_write32(kBase + FLASH_CTRL_ADDR_REG_OFFSET, params.addr);
d000afe0:                 410c                  lw      a1,0(a0)
d000afe2:                 c1000637              lui     a2,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000afe6:                 d24c                  sw      a1,36(a2)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000afe8:                 4510                  lw      a2,8(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:90
      bitfield_bit32_read(params.partition, FLASH_CTRL_PARTITION_BIT_IS_INFO);
d000afea:                 454c                  lw      a1,12(a0)
d000afec:                 af0eb6b7              lui     a3,0xaf0eb
d000aff0:                 b8b68693              addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000aff4:          /----- 00d61b63              bne     a2,a3,d000b00a <transaction_start+0x2a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:100
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypePage);
d000aff8:          |      4518                  lw      a4,8(a0)
d000affa:          |      4601                  li      a2,0
d000affc:          |  /-- 00d70663              beq     a4,a3,d000b008 <transaction_start+0x28>
d000b000:          |  |   0000                  unimp
d000b002:          |  |   0000                  unimp
d000b004:          |  |   0000                  unimp
d000b006:          |  |   0000                  unimp
d000b008:       /--|--\-X a005                  j       d000b028 <transaction_start+0x48>
d000b00a:       |  \----> 8032a6b7              lui     a3,0x8032a
d000b00e:       |         be968693              addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000b012:       |  /----- 04d61163              bne     a2,a3,d000b054 <transaction_start+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:96
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypeBank);
d000b016:       |  |      4510                  lw      a2,8(a0)
d000b018:       |  |  /-- 00d60663              beq     a2,a3,d000b024 <transaction_start+0x44>
d000b01c:       |  |  |   0000                  unimp
d000b01e:       |  |  |   0000                  unimp
d000b020:       |  |  |   0000                  unimp
d000b022:       |  |  |   0000                  unimp
d000b024:       |  |  \-> 08000613              li      a2,128
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:108
      bitfield_field32_write(reg, FLASH_CTRL_CONTROL_OP_FIELD, params.op_type);
d000b028:       \--|----> 4154                  lw      a3,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:115
                               params.word_count - 1);
d000b02a:          |      4908                  lw      a0,16(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b02c:          |      0692                  slli    a3,a3,0x4
d000b02e:          |      0306f693              andi    a3,a3,48
d000b032:          |      05a2                  slli    a1,a1,0x8
d000b034:          |      0542                  slli    a0,a0,0x10
d000b036:          |      0fff0737              lui     a4,0xfff0
d000b03a:          |      953a                  add     a0,a0,a4
d000b03c:          |      8d79                  and     a0,a0,a4
d000b03e:          |      7005f593              andi    a1,a1,1792
d000b042:          |      8dd1                  or      a1,a1,a2
d000b044:          |      8dd5                  or      a1,a1,a3
d000b046:          |      8d4d                  or      a0,a0,a1
d000b048:          |      00156513              ori     a0,a0,1
d000b04c:          |      c10005b7              lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b050:          |      d188                  sw      a0,32(a1)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:117
}
d000b052:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:104
      HARDENED_UNREACHABLE();
d000b054:          \----> 0000                  unimp
d000b056:                 0000                  unimp
d000b058:                 0000                  unimp
d000b05a:                 0000                  unimp

d000b05c <flash_ctrl_info_read>:
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:359
                                 void *data) {
d000b05c:              7179                     addi    sp,sp,-48
d000b05e:              d606                     sw      ra,44(sp)
d000b060:              d422                     sw      s0,40(sp)
d000b062:              d226                     sw      s1,36(sp)
d000b064:              d04a                     sw      s2,32(sp)
d000b066:              8436                     mv      s0,a3
d000b068:              84b2                     mv      s1,a2
d000b06a:              892e                     mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:360
  const uint32_t addr = info_page_addr(info_page) + offset;
d000b06c:              208d                     jal     d000b0ce <info_page_addr>
d000b06e:              954a                     add     a0,a0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:361
  transaction_start((transaction_params_t){
d000b070:              c42a                     sw      a0,8(sp)
d000b072:              c602                     sw      zero,12(sp)
d000b074:              af0eb537                 lui     a0,0xaf0eb
d000b078:              b8b50513                 addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b07c:              c82a                     sw      a0,16(sp)
d000b07e:              4505                     li      a0,1
d000b080:              ca2a                     sw      a0,20(sp)
d000b082:              cc26                     sw      s1,24(sp)
d000b084:              0028                     addi    a0,sp,8
d000b086:              3fa9                     jal     d000afe0 <transaction_start>
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000b088:       /----- c889                     beqz    s1,d000b09a <flash_ctrl_info_read+0x3e>
d000b08a:       |      c1000537                 lui     a0,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b08e:       |  /-> 1b052583                 lw      a1,432(a0) # c10001b0 <_stack_end+0xe0fe01b0>
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000b092:       |  |   c00c                     sw      a1,0(s0)
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
d000b094:       |  |   14fd                     addi    s1,s1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:130
    data = (char *)data + sizeof(uint32_t);
d000b096:       |  |   0411                     addi    s0,s0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000b098:       |  \-- f8fd                     bnez    s1,d000b08e <flash_ctrl_info_read+0x32>
d000b09a:       \----> c10005b7                 lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b09e:          /-> 16c5a503                 lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000b0a2:          |   00157613                 andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b0a6:          \-- de65                     beqz    a2,d000b09e <flash_ctrl_info_read+0x42>
d000b0a8:              c10005b7                 lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b0ac:              1605a623                 sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b0b0:              00257593                 andi    a1,a0,2
d000b0b4:              73900513                 li      a0,1849
d000b0b8:          /-- c589                     beqz    a1,d000b0c2 <flash_ctrl_info_read+0x66>
d000b0ba:          |   02464537                 lui     a0,0x2464
d000b0be:          |   30d50513                 addi    a0,a0,781 # 246430d <_rom_ext_virtual_size+0x242430d>
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:370
  return wait_for_done(kErrorFlashCtrlInfoRead);
d000b0c2:          \-> 5902                     lw      s2,32(sp)
d000b0c4:              5492                     lw      s1,36(sp)
d000b0c6:              5422                     lw      s0,40(sp)
d000b0c8:              50b2                     lw      ra,44(sp)
d000b0ca:              6145                     addi    sp,sp,48
d000b0cc:              8082                     ret

d000b0ce <info_page_addr>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b0ce:                                                        85aa                   mv      a1,a0
d000b0d0:                                                        f56af637               lui     a2,0xf56af
d000b0d4:                                                        4ba60613               addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_page_addr():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b0d8:                                                 /----- 04b64063               blt     a2,a1,d000b118 <info_page_addr+0x4a>
d000b0dc:                                                 |      ad887637               lui     a2,0xad887
d000b0e0:                                                 |      d3a60613               addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b0e4:                                              /--|----- 06b64863               blt     a2,a1,d000b154 <info_page_addr+0x86>
d000b0e8:                                              |  |      a4f6f637               lui     a2,0xa4f6f
d000b0ec:                                              |  |      6c260693               addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b0f0:                                        /-----|--|----- 0cb6d363               bge     a3,a1,d000b1b6 <info_page_addr+0xe8>
d000b0f4:                                        |     |  |      6c360613               addi    a2,a2,1731
d000b0f8:                            /-----------|-----|--|----- 12c58963               beq     a1,a2,d000b22a <info_page_addr+0x15c>
d000b0fc:                            |           |     |  |      ad3b6637               lui     a2,0xad3b6
d000b100:                            |           |     |  |      bee60613               addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b104:             /--------------|-----------|-----|--|----- 18c59563               bne     a1,a2,d000b28e <info_page_addr+0x1c0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b108:             |              |           |     |  |  /-- 00c50663               beq     a0,a2,d000b114 <info_page_addr+0x46>
d000b10c:             |              |           |     |  |  |   0000                   unimp
d000b10e:             |              |           |     |  |  |   0000                   unimp
d000b110:             |              |           |     |  |  |   0000                   unimp
d000b112:             |              |           |     |  |  |   0000                   unimp
d000b114:             |              |           |     |  |  \-> 6589                   lui     a1,0x2
d000b116:       /-----|--------------|-----------|-----|--|----- a495                   j       d000b37a <info_page_addr+0x2ac>
d000b118:       |     |              |           |     |  \----> 238cf637               lui     a2,0x238cf
d000b11c:       |     |              |           |     |         15b60613               addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2388f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b120:       |     |              |           |     |  /----- 06b64363               blt     a2,a1,d000b186 <info_page_addr+0xb8>
d000b124:       |     |              |           |     |  |      fa38d637               lui     a2,0xfa38d
d000b128:       |     |              |           |     |  |      9f560693               addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b12c:       |     |              |           |  /--|--|----- 0ab6d363               bge     a3,a1,d000b1d2 <info_page_addr+0x104>
d000b130:       |     |              |           |  |  |  |      9f660613               addi    a2,a2,-1546
d000b134:       |     |              |  /--------|--|--|--|----- 10c58763               beq     a1,a2,d000b242 <info_page_addr+0x174>
d000b138:       |     |              |  |        |  |  |  |      10adc637               lui     a2,0x10adc
d000b13c:       |     |              |  |        |  |  |  |      6aa60613               addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a9c6aa>
d000b140:       |     |  /-----------|--|--------|--|--|--|----- 16c59663               bne     a1,a2,d000b2ac <info_page_addr+0x1de>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b144:       |     |  |           |  |        |  |  |  |  /-- 00c50663               beq     a0,a2,d000b150 <info_page_addr+0x82>
d000b148:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b14a:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b14c:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b14e:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b150:       |     |  |           |  |        |  |  |  |  \-> 6585                   lui     a1,0x1
d000b152:       +-----|--|-----------|--|--------|--|--|--|----- a425                   j       d000b37a <info_page_addr+0x2ac>
d000b154:       |     |  |           |  |        |  |  \--|----> e3ffb637               lui     a2,0xe3ffb
d000b158:       |     |  |           |  |        |  |     |      c8560693               addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b15c:       |     |  |           |  |        |  |  /--|----- 08b6d963               bge     a3,a1,d000b1ee <info_page_addr+0x120>
d000b160:       |     |  |           |  |        |  |  |  |      c8660613               addi    a2,a2,-890
d000b164:       |     |  |           |  |  /-----|--|--|--|----- 0ec58c63               beq     a1,a2,d000b25c <info_page_addr+0x18e>
d000b168:       |     |  |           |  |  |     |  |  |  |      ec309637               lui     a2,0xec309
d000b16c:       |     |  |           |  |  |     |  |  |  |      46160613               addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b170:       |     |  |  /--------|--|--|-----|--|--|--|----- 14c59c63               bne     a1,a2,d000b2c8 <info_page_addr+0x1fa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b174:       |     |  |  |        |  |  |     |  |  |  |  /-- 00c50663               beq     a0,a2,d000b180 <info_page_addr+0xb2>
d000b178:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b17a:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b17c:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b17e:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b180:       |     |  |  |        |  |  |     |  |  |  |  \-> 00045537               lui     a0,0x45
d000b184:       |  /--|--|--|--------|--|--|-----|--|--|--|----- aacd                   j       d000b376 <info_page_addr+0x2a8>
d000b186:       |  |  |  |  |        |  |  |     |  |  |  \----> 5f072637               lui     a2,0x5f072
d000b18a:       |  |  |  |  |        |  |  |     |  |  |         77d60693               addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b18e:       |  |  |  |  |        |  |  |     |  |  |  /----- 06b6df63               bge     a3,a1,d000b20c <info_page_addr+0x13e>
d000b192:       |  |  |  |  |        |  |  |     |  |  |  |      77e60613               addi    a2,a2,1918
d000b196:       |  |  |  |  |        |  |  |  /--|--|--|--|----- 0ec58063               beq     a1,a2,d000b276 <info_page_addr+0x1a8>
d000b19a:       |  |  |  |  |        |  |  |  |  |  |  |  |      6c86e637               lui     a2,0x6c86e
d000b19e:       |  |  |  |  |        |  |  |  |  |  |  |  |      98060613               addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b1a2:       |  |  |  |  |     /--|--|--|--|--|--|--|--|----- 14c59263               bne     a1,a2,d000b2e6 <info_page_addr+0x218>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b1a6:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b1b2 <info_page_addr+0xe4>
d000b1aa:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1ac:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1ae:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1b0:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1b2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6511                   lui     a0,0x4
d000b1b4:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a2c9                   j       d000b376 <info_page_addr+0x2a8>
d000b1b6:       |  |  |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637               lui     a2,0x9dc42
d000b1ba:       |  |  |  |  |     |  |  |  |  |     |  |  |      c3360613               addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b1be:       |  |  |  |  |     |  |  |  |  |  /--|--|--|----- 14c59363               bne     a1,a2,d000b304 <info_page_addr+0x236>
d000b1c2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |      4581                   li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b1c4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b1d0 <info_page_addr+0x102>
d000b1c8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1ca:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1cc:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1ce:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1d0:       +--|--|--|--|-----|--|--|--|--|--|--|--|--|--\-X a26d                   j       d000b37a <info_page_addr+0x2ac>
d000b1d2:       |  |  |  |  |     |  |  |  |  |  |  \--|--|----> f56af637               lui     a2,0xf56af
d000b1d6:       |  |  |  |  |     |  |  |  |  |  |     |  |      4bb60613               addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b1da:       |  |  |  |  |     |  |  |  |  |  |  /--|--|----- 14c59463               bne     a1,a2,d000b322 <info_page_addr+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b1de:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b1ea <info_page_addr+0x11c>
d000b1e2:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1e4:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1e6:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1e8:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b1ea:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6505                   lui     a0,0x1
d000b1ec:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- a269                   j       d000b376 <info_page_addr+0x2a8>
d000b1ee:       |  |  |  |  |     |  |  |  |  |  |  |  \--|----> ad887637               lui     a2,0xad887
d000b1f2:       |  |  |  |  |     |  |  |  |  |  |  |     |      d3b60613               addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b1f6:       |  |  |  |  |  /--|--|--|--|--|--|--|-----|----- 14c59463               bne     a1,a2,d000b33e <info_page_addr+0x270>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b1fa:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  /-- 00c50663               beq     a0,a2,d000b206 <info_page_addr+0x138>
d000b1fe:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b200:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b202:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b204:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  |   0000                   unimp
d000b206:       |  |  |  |  |  |  |  |  |  |  |  |  |     |  \-> 00042537               lui     a0,0x42
d000b20a:       |  +--|--|--|--|--|--|--|--|--|--|--|-----|----- a2b5                   j       d000b376 <info_page_addr+0x2a8>
d000b20c:       |  |  |  |  |  |  |  |  |  |  |  |  |     \----> 238cf637               lui     a2,0x238cf
d000b210:       |  |  |  |  |  |  |  |  |  |  |  |  |            15c60613               addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2388f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b214:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------- 14c59363               bne     a1,a2,d000b35a <info_page_addr+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b218:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663               beq     a0,a2,d000b224 <info_page_addr+0x156>
d000b21c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b21e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b220:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b222:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b224:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     \-> 000415b7               lui     a1,0x41
d000b228:       +--|--|--|--|--|--|--|--|--|--|--|--|--|-------- aa89                   j       d000b37a <info_page_addr+0x2ac>
d000b22a:       |  |  |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7               lui     a1,0xa4f6f
d000b22e:       |  |  |  |  |  |  |     |  |  |  |  |  |         6c358593               addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
d000b232:       |  |  |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b23e <info_page_addr+0x170>
d000b236:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b238:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b23a:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b23c:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b23e:       |  |  |  |  |  |  |     |  |  |  |  |  |     \-> 650d                   lui     a0,0x3
d000b240:       |  +--|--|--|--|--|-----|--|--|--|--|--|-------- aa1d                   j       d000b376 <info_page_addr+0x2a8>
d000b242:       |  |  |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7               lui     a1,0xfa38d
d000b246:       |  |  |  |  |  |  |        |  |  |  |  |         9f658593               addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000b24a:       |  |  |  |  |  |  |        |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b256 <info_page_addr+0x188>
d000b24e:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b250:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b252:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b254:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b256:       |  |  |  |  |  |  |        |  |  |  |  |     \-> 000405b7               lui     a1,0x40
d000b25a:       +--|--|--|--|--|--|--------|--|--|--|--|-------- a205                   j       d000b37a <info_page_addr+0x2ac>
d000b25c:       |  |  |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7               lui     a1,0xe3ffb
d000b260:       |  |  |  |  |  |  |           |  |  |  |         c8658593               addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
d000b264:       |  |  |  |  |  |  |           |  |  |  |     /-- 00b50663               beq     a0,a1,d000b270 <info_page_addr+0x1a2>
d000b268:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b26a:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b26c:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b26e:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b270:       |  |  |  |  |  |  |           |  |  |  |     \-> 000435b7               lui     a1,0x43
d000b274:       +--|--|--|--|--|--|-----------|--|--|--|-------- a219                   j       d000b37a <info_page_addr+0x2ac>
d000b276:       |  |  |  |  |  |  |           \--|--|--|-------> 5f0725b7               lui     a1,0x5f072
d000b27a:       |  |  |  |  |  |  |              |  |  |         77e58593               addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
d000b27e:       |  |  |  |  |  |  |              |  |  |     /-- 00b50663               beq     a0,a1,d000b28a <info_page_addr+0x1bc>
d000b282:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b284:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b286:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b288:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b28a:       |  |  |  |  |  |  |              |  |  |     \-> 6515                   lui     a0,0x5
d000b28c:       |  +--|--|--|--|--|--------------|--|--|-------- a0ed                   j       d000b376 <info_page_addr+0x2a8>
d000b28e:       |  |  \--|--|--|--|--------------|--|--|-------> ad5dd637               lui     a2,0xad5dd
d000b292:       |  |     |  |  |  |              |  |  |         31d60613               addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b296:       |  |     |  |  |  |              |  |  |  /----- 0ec59463               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b29a:       |  |     |  |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b2a6 <info_page_addr+0x1d8>
d000b29e:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b2a0:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b2a2:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b2a4:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b2a6:       |  |     |  |  |  |              |  |  |  |  \-> 00043537               lui     a0,0x43
d000b2aa:       |  +-----|--|--|--|--------------|--|--|--|----- a0f1                   j       d000b376 <info_page_addr+0x2a8>
d000b2ac:       |  |     \--|--|--|--------------|--|--|--|----> 118b6637               lui     a2,0x118b6
d000b2b0:       |  |        |  |  |              |  |  |  |      dbb60613               addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11875dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b2b4:       |  |        |  |  |              |  |  |  +----- 0cc59563               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b2b8:       |  |        |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b2c4 <info_page_addr+0x1f6>
d000b2bc:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b2be:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b2c0:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b2c2:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b2c4:       |  |        |  |  |              |  |  |  |  \-> 6509                   lui     a0,0x2
d000b2c6:       |  +--------|--|--|--------------|--|--|--|----- a845                   j       d000b376 <info_page_addr+0x2a8>
d000b2c8:       |  |        \--|--|--------------|--|--|--|----> f4f49637               lui     a2,0xf4f49
d000b2cc:       |  |           |  |              |  |  |  |      c3d60613               addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b2d0:       |  |           |  |              |  |  |  +----- 0ac59763               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b2d4:       |  |           |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b2e0 <info_page_addr+0x212>
d000b2d8:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b2da:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b2dc:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b2de:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b2e0:       |  |           |  |              |  |  |  |  \-> 00044537               lui     a0,0x44
d000b2e4:       |  +-----------|--|--------------|--|--|--|----- a849                   j       d000b376 <info_page_addr+0x2a8>
d000b2e6:       |  |           |  \--------------|--|--|--|----> 7dfbe637               lui     a2,0x7dfbe
d000b2ea:       |  |           |                 |  |  |  |      f9b60613               addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b2ee:       |  |           |                 |  |  |  +----- 08c59863               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b2f2:       |  |           |                 |  |  |  |  /-- 00c50663               beq     a0,a2,d000b2fe <info_page_addr+0x230>
d000b2f6:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b2f8:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b2fa:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b2fc:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b2fe:       |  |           |                 |  |  |  |  \-> 000425b7               lui     a1,0x42
d000b302:       +--|-----------|-----------------|--|--|--|----- a8a5                   j       d000b37a <info_page_addr+0x2ac>
d000b304:       |  |           |                 \--|--|--|----> 9fbb8637               lui     a2,0x9fbb8
d000b308:       |  |           |                    |  |  |      40e60613               addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b30c:       |  |           |                    |  |  +----- 06c59963               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b310:       |  |           |                    |  |  |  /-- 00c50663               beq     a0,a2,d000b31c <info_page_addr+0x24e>
d000b314:       |  |           |                    |  |  |  |   0000                   unimp
d000b316:       |  |           |                    |  |  |  |   0000                   unimp
d000b318:       |  |           |                    |  |  |  |   0000                   unimp
d000b31a:       |  |           |                    |  |  |  |   0000                   unimp
d000b31c:       |  |           |                    |  |  |  \-> 000445b7               lui     a1,0x44
d000b320:       +--|-----------|--------------------|--|--|----- a8a9                   j       d000b37a <info_page_addr+0x2ac>
d000b322:       |  |           |                    \--|--|----> f646f637               lui     a2,0xf646f
d000b326:       |  |           |                       |  |      11b60613               addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b32a:       |  |           |                       |  +----- 04c59a63               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b32e:       |  |           |                       |  |  /-- 00c50663               beq     a0,a2,d000b33a <info_page_addr+0x26c>
d000b332:       |  |           |                       |  |  |   0000                   unimp
d000b334:       |  |           |                       |  |  |   0000                   unimp
d000b336:       |  |           |                       |  |  |   0000                   unimp
d000b338:       |  |           |                       |  |  |   0000                   unimp
d000b33a:       |  |           |                       |  |  \-> 658d                   lui     a1,0x3
d000b33c:       +--|-----------|-----------------------|--|----- a83d                   j       d000b37a <info_page_addr+0x2ac>
d000b33e:       |  |           \-----------------------|--|----> dd7f3637               lui     a2,0xdd7f3
d000b342:       |  |                                   |  |      4dc60613               addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b346:       |  |                                   |  +----- 02c59c63               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b34a:       |  |                                   |  |  /-- 00c50663               beq     a0,a2,d000b356 <info_page_addr+0x288>
d000b34e:       |  |                                   |  |  |   0000                   unimp
d000b350:       |  |                                   |  |  |   0000                   unimp
d000b352:       |  |                                   |  |  |   0000                   unimp
d000b354:       |  |                                   |  |  |   0000                   unimp
d000b356:       |  |                                   |  |  \-> 6591                   lui     a1,0x4
d000b358:       +--|-----------------------------------|--|----- a00d                   j       d000b37a <info_page_addr+0x2ac>
d000b35a:       |  |                                   \--|----> 389c4637               lui     a2,0x389c4
d000b35e:       |  |                                      |      49e60613               addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b362:       |  |                                      +----- 00c59e63               bne     a1,a2,d000b37e <info_page_addr+0x2b0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b366:       |  |                                      |  /-- 00c50663               beq     a0,a2,d000b372 <info_page_addr+0x2a4>
d000b36a:       |  |                                      |  |   0000                   unimp
d000b36c:       |  |                                      |  |   0000                   unimp
d000b36e:       |  |                                      |  |   0000                   unimp
d000b370:       |  |                                      |  |   0000                   unimp
d000b372:       |  |                                      |  \-> 00041537               lui     a0,0x41
d000b376:       |  \--------------------------------------|----> 80050593               addi    a1,a0,-2048 # 40800 <_rom_ext_virtual_size+0x800>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:234
}
d000b37a:       \-----------------------------------------|----> 852e                   mv      a0,a1
d000b37c:                                                 |      8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:230
      HARDENED_UNREACHABLE();
d000b37e:                                                 \----> 0000                   unimp
d000b380:                                                        0000                   unimp
d000b382:                                                        0000                   unimp
d000b384:                                                        0000                   unimp

d000b386 <flash_ctrl_data_write>:
flash_ctrl_data_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:374
                                  const void *data) {
d000b386:       034646b7                lui     a3,0x3464
d000b38a:       30d68713                addi    a4,a3,781 # 346430d <_rom_ext_virtual_size+0x342430d>
d000b38e:       86b2                    mv      a3,a2
d000b390:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:375
  return write(addr, kFlashCtrlPartitionData, word_count, data,
d000b392:       4581                    li      a1,0
d000b394:       a009                    j       d000b396 <write>

d000b396 <write>:
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:180
                         rom_error_t error) {
d000b396:                    7139                       addi    sp,sp,-64
d000b398:                    de06                       sw      ra,60(sp)
d000b39a:                    dc22                       sw      s0,56(sp)
d000b39c:                    da26                       sw      s1,52(sp)
d000b39e:                    d84a                       sw      s2,48(sp)
d000b3a0:                    d64e                       sw      s3,44(sp)
d000b3a2:                    d452                       sw      s4,40(sp)
d000b3a4:                    d256                       sw      s5,36(sp)
d000b3a6:                    d05a                       sw      s6,32(sp)
d000b3a8:                    ce5e                       sw      s7,28(sp)
d000b3aa:                    cc62                       sw      s8,24(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b3ac:       /----------- ce35                       beqz    a2,d000b428 <write+0x92>
d000b3ae:       |            893a                       mv      s2,a4
d000b3b0:       |            8a36                       mv      s4,a3
d000b3b2:       |            8432                       mv      s0,a2
d000b3b4:       |            89ae                       mv      s3,a1
d000b3b6:       |            8baa                       mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:187
      kWindowWordCount - ((addr / sizeof(uint32_t)) % kWindowWordCount);
d000b3b8:       |            8109                       srli    a0,a0,0x2
d000b3ba:       |            893d                       andi    a0,a0,15
d000b3bc:       |            45c1                       li      a1,16
d000b3be:       |            40a58533           sub     a0,a1,a0
d000b3c2:       |            4a85                       li      s5,1
d000b3c4:       |            af0eb5b7           lui     a1,0xaf0eb
d000b3c8:       |            b8b58b13           addi    s6,a1,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b3cc:       |            c10004b7           lui     s1,0xc1000
d000b3d0:       |  /-------> 8c22                       mv      s8,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:191
        word_count < window_word_count ? word_count : window_word_count;
d000b3d2:       |  |     /-- 00a46363           bltu    s0,a0,d000b3d8 <write+0x42>
d000b3d6:       |  |     |   8c2a                       mv      s8,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:193
    transaction_start((transaction_params_t){
d000b3d8:       |  |     \-> c05e                       sw      s7,0(sp)
d000b3da:       |  |         c256                       sw      s5,4(sp)
d000b3dc:       |  |         c45a                       sw      s6,8(sp)
d000b3de:       |  |         c64e                       sw      s3,12(sp)
d000b3e0:       |  |         c862                       sw      s8,16(sp)
d000b3e2:       |  |         850a                       mv      a0,sp
d000b3e4:       |  |         3ef5                       jal     d000afe0 <transaction_start>
d000b3e6:       |  |         8562                       mv      a0,s8
d000b3e8:       |  |         85d2                       mv      a1,s4
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000b3ea:       |  |     /-> 4190                       lw      a2,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b3ec:       |  |     |   1ac4a623           sw      a2,428(s1) # c10001ac <_stack_end+0xe0fe01ac>
fifo_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b3f0:       |  |     |   157d                       addi    a0,a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:145
    data = (const char *)data + sizeof(uint32_t);
d000b3f2:       |  |     |   0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b3f4:       |  |     \-- f97d                       bnez    a0,d000b3ea <write+0x54>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b3f6:       |  |     /-> 16c4a503           lw      a0,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b3fa:       |  |     |   00157593           andi    a1,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b3fe:       |  |     \-- dde5                       beqz    a1,d000b3f6 <write+0x60>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b400:       |  |         1604a623           sw      zero,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b404:       |  |         00257613           andi    a2,a0,2
d000b408:       |  |         73900593           li      a1,1849
d000b40c:       |  |         73900513           li      a0,1849
d000b410:       |  |     /-- c211                       beqz    a2,d000b414 <write+0x7e>
d000b412:       |  |     |   854a                       mv      a0,s2
d000b414:       |  |  /--\-X 00b51c63           bne     a0,a1,d000b42c <write+0x96>
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:205
    addr += window_word_count * sizeof(uint32_t);
d000b418:       |  |  |      002c1513           slli    a0,s8,0x2
d000b41c:       |  |  |      9baa                       add     s7,s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:206
    data = (const char *)data + window_word_count * sizeof(uint32_t);
d000b41e:       |  |  |      9a2a                       add     s4,s4,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:207
    word_count -= window_word_count;
d000b420:       |  |  |      41840433           sub     s0,s0,s8
d000b424:       |  |  |      4541                       li      a0,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b426:       |  \--|----- f44d                       bnez    s0,d000b3d0 <write+0x3a>
d000b428:       \-----|----> 73900513           li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:212
}
d000b42c:             \----> 4c62                       lw      s8,24(sp)
d000b42e:                    4bf2                       lw      s7,28(sp)
d000b430:                    5b02                       lw      s6,32(sp)
d000b432:                    5a92                       lw      s5,36(sp)
d000b434:                    5a22                       lw      s4,40(sp)
d000b436:                    59b2                       lw      s3,44(sp)
d000b438:                    5942                       lw      s2,48(sp)
d000b43a:                    54d2                       lw      s1,52(sp)
d000b43c:                    5462                       lw      s0,56(sp)
d000b43e:                    50f2                       lw      ra,60(sp)
d000b440:                    6121                       addi    sp,sp,64
d000b442:                    8082                       ret

d000b444 <flash_ctrl_data_erase>:
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:388
                                  flash_ctrl_erase_type_t erase_type) {
d000b444:           1101                        addi    sp,sp,-32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:389
  transaction_start((transaction_params_t){
d000b446:           ce06                        sw      ra,28(sp)
d000b448:           c42a                        sw      a0,8(sp)
d000b44a:           4509                        li      a0,2
d000b44c:           c62a                        sw      a0,12(sp)
d000b44e:           c82e                        sw      a1,16(sp)
d000b450:           ca02                        sw      zero,20(sp)
d000b452:           4505                        li      a0,1
d000b454:           cc2a                        sw      a0,24(sp)
d000b456:           0028                        addi    a0,sp,8
d000b458:           3661                        jal     d000afe0 <transaction_start>
d000b45a:           c10005b7            lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b45e:       /-> 16c5a503            lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b462:       |   00157613            andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b466:       \-- de65                        beqz    a2,d000b45e <flash_ctrl_data_erase+0x1a>
d000b468:           c10005b7            lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b46c:           1605a623            sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b470:           00257593            andi    a1,a0,2
d000b474:           73900513            li      a0,1849
d000b478:       /-- c589                        beqz    a1,d000b482 <flash_ctrl_data_erase+0x3e>
d000b47a:       |   05464537            lui     a0,0x5464
d000b47e:       |   30d50513            addi    a0,a0,781 # 546430d <_rom_ext_virtual_size+0x542430d>
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:397
  return wait_for_done(kErrorFlashCtrlDataErase);
d000b482:       \-> 40f2                        lw      ra,28(sp)
d000b484:           6105                        addi    sp,sp,32
d000b486:           8082                        ret

d000b488 <flash_ctrl_data_erase_verify>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b488:                    862e                       mv      a2,a1
d000b48a:                    af0eb6b7           lui     a3,0xaf0eb
d000b48e:                    b8b68693           addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b492:             /----- 00d61e63           bne     a2,a3,d000b4ae <flash_ctrl_data_erase_verify+0x26>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:416
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypePage);
d000b496:             |  /-- 00d58663           beq     a1,a3,d000b4a2 <flash_ctrl_data_erase_verify+0x1a>
d000b49a:             |  |   0000                       unimp
d000b49c:             |  |   0000                       unimp
d000b49e:             |  |   0000                       unimp
d000b4a0:             |  |   0000                       unimp
d000b4a2:             |  \-> 0c600593           li      a1,198
d000b4a6:             |      6605                       lui     a2,0x1
d000b4a8:             |      80060893           addi    a7,a2,-2048 # 800 <_epmp_reset_rx_size>
d000b4ac:          /--|----- a00d                       j       d000b4ce <flash_ctrl_data_erase_verify+0x46>
d000b4ae:          |  \----> 8032a6b7           lui     a3,0x8032a
d000b4b2:          |         be968693           addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b4b6:       /--|-------- 06d61d63           bne     a2,a3,d000b530 <flash_ctrl_data_erase_verify+0xa8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:411
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypeBank);
d000b4ba:       |  |     /-- 00d58663           beq     a1,a3,d000b4c6 <flash_ctrl_data_erase_verify+0x3e>
d000b4be:       |  |     |   0000                       unimp
d000b4c0:       |  |     |   0000                       unimp
d000b4c2:       |  |     |   0000                       unimp
d000b4c4:       |  |     |   0000                       unimp
d000b4c6:       |  |     \-> 000408b7           lui     a7,0x40
d000b4ca:       |  |         8c688593           addi    a1,a7,-1850 # 3f8c6 <WDOG_BARK_THOLD+0x89de>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b4ce:       |  \-------> 4701                       li      a4,0
d000b4d0:       |            587d                       li      a6,-1
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b4d2:       |     /----- 03177463           bgeu    a4,a7,d000b4fa <flash_ctrl_data_erase_verify+0x72>
d000b4d6:       |     |      4701                       li      a4,0
d000b4d8:       |     |      411007b3           neg     a5,a7
d000b4dc:       |     |      8d7d                       and     a0,a0,a5
d000b4de:       |     |      f00007b7           lui     a5,0xf0000
d000b4e2:       |     |      97aa                       add     a5,a5,a0
d000b4e4:       |     |      557d                       li      a0,-1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b4e6:       |     |  /-> 00e786b3           add     a3,a5,a4
d000b4ea:       |     |  |   4294                       lw      a3,0(a3)
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
d000b4ec:       |     |  |   0711                       addi    a4,a4,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:431
    mask &= word;
d000b4ee:       |     |  |   8d75                       and     a0,a0,a3
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b4f0:       |     |  |   863a                       mv      a2,a4
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:432
    error &= word;
d000b4f2:       |     |  |   8df5                       and     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b4f4:       |     |  \-- ff1669e3           bltu    a2,a7,d000b4e6 <flash_ctrl_data_erase_verify+0x5e>
d000b4f8:       |     |  /-- a019                       j       d000b4fe <flash_ctrl_data_erase_verify+0x76>
d000b4fa:       |     \--|-> 4701                       li      a4,0
d000b4fc:       |        |   557d                       li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:434
  HARDENED_CHECK_EQ(i, byte_count);
d000b4fe:       |     /--\-X 01170663           beq     a4,a7,d000b50a <flash_ctrl_data_erase_verify+0x82>
d000b502:       |     |      0000                       unimp
d000b504:       |     |      0000                       unimp
d000b506:       |     |      0000                       unimp
d000b508:       |     |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b50a:       |     \----> 862a                       mv      a2,a0
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:436
  if (launder32(mask) == kFlashCtrlErasedWord) {
d000b50c:       |        /-- 01060763           beq     a2,a6,d000b51a <flash_ctrl_data_erase_verify+0x92>
d000b510:       |        |   07464537           lui     a0,0x7464
d000b514:       |        |   30d50513           addi    a0,a0,781 # 746430d <_rom_ext_virtual_size+0x742430d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b518:       |        |   8082                       ret
d000b51a:       |        \-> 567d                       li      a2,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:437
    HARDENED_CHECK_EQ(mask, kFlashCtrlErasedWord);
d000b51c:       |        /-- 00c50663           beq     a0,a2,d000b528 <flash_ctrl_data_erase_verify+0xa0>
d000b520:       |        |   0000                       unimp
d000b522:       |        |   0000                       unimp
d000b524:       |        |   0000                       unimp
d000b526:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:438
    return error ^ (byte_count - 1);
d000b528:       |        \-> fff88513           addi    a0,a7,-1
d000b52c:       |            8d2d                       xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b52e:       |            8082                       ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:421
      HARDENED_UNREACHABLE();
d000b530:       \----------> 0000                       unimp
d000b532:                    0000                       unimp
d000b534:                    0000                       unimp
d000b536:                    0000                       unimp

d000b538 <flash_ctrl_exec_set>:
flash_ctrl_exec_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:458
void flash_ctrl_exec_set(uint32_t exec_val) {
d000b538:       c10005b7                lui     a1,0xc1000
d000b53c:       05d1                    addi    a1,a1,20
d000b53e:       862a                    mv      a2,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:460
  sec_mmio_write32(kBase + FLASH_CTRL_EXEC_REG_OFFSET, exec_val);
d000b540:       852e                    mv      a0,a1
d000b542:       85b2                    mv      a1,a2
d000b544:       19d0206f                j       d000dee0 <sec_mmio_write32>

d000b548 <flash_ctrl_data_default_perms_set>:
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:463
void flash_ctrl_data_default_perms_set(flash_ctrl_perms_t perms) {
d000b548:       1141                    addi    sp,sp,-16
d000b54a:       c606                    sw      ra,12(sp)
d000b54c:       c422                    sw      s0,8(sp)
d000b54e:       c226                    sw      s1,4(sp)
d000b550:       842a                    mv      s0,a0
d000b552:       c1000537                lui     a0,0xc1000
d000b556:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:467
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000b55a:       8526                    mv      a0,s1
d000b55c:       0d1020ef                jal     ra,d000de2c <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:469
                               perms.read);
d000b560:       400c                    lw      a1,0(s0)
d000b562:       767d                    lui     a2,0xfffff
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b564:       8d71                    and     a0,a0,a2
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:471
                               perms.write);
d000b566:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b568:       89bd                    andi    a1,a1,15
d000b56a:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:473
                               perms.erase);
d000b56c:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b56e:       0612                    slli    a2,a2,0x4
d000b570:       0f067613                andi    a2,a2,240
d000b574:       8d51                    or      a0,a0,a2
d000b576:       05f2                    slli    a1,a1,0x1c
d000b578:       81d1                    srli    a1,a1,0x14
d000b57a:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:474
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000b57c:       8526                    mv      a0,s1
d000b57e:       4492                    lw      s1,4(sp)
d000b580:       4422                    lw      s0,8(sp)
d000b582:       40b2                    lw      ra,12(sp)
d000b584:       0141                    addi    sp,sp,16
d000b586:       15b0206f                j       d000dee0 <sec_mmio_write32>

d000b58a <flash_ctrl_info_perms_set>:
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:478
                               flash_ctrl_perms_t perms) {
d000b58a:       1141                    addi    sp,sp,-16
d000b58c:       c606                    sw      ra,12(sp)
d000b58e:       c422                    sw      s0,8(sp)
d000b590:       c226                    sw      s1,4(sp)
d000b592:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:481
  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000b594:       282d                    jal     d000b5ce <info_cfg_regs>
d000b596:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:483
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000b598:       852e                    mv      a0,a1
d000b59a:       093020ef                jal     ra,d000de2c <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:487
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_RD_EN_0_FIELD, perms.read);
d000b59e:       400c                    lw      a1,0(s0)
d000b5a0:       7641                    lui     a2,0xffff0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b5a2:       8d71                    and     a0,a0,a2
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:489
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_PROG_EN_0_FIELD, perms.write);
d000b5a4:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b5a6:       0592                    slli    a1,a1,0x4
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:491
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
d000b5a8:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b5aa:       0f05f593                andi    a1,a1,240
d000b5ae:       0672                    slli    a2,a2,0x1c
d000b5b0:       8251                    srli    a2,a2,0x14
d000b5b2:       06f2                    slli    a3,a3,0x1c
d000b5b4:       82c1                    srli    a3,a3,0x10
d000b5b6:       8d4d                    or      a0,a0,a1
d000b5b8:       8d51                    or      a0,a0,a2
d000b5ba:       8d55                    or      a0,a0,a3
d000b5bc:       00656593                ori     a1,a0,6
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:492
  sec_mmio_write32(cfg_addr, reg);
d000b5c0:       8526                    mv      a0,s1
d000b5c2:       4492                    lw      s1,4(sp)
d000b5c4:       4422                    lw      s0,8(sp)
d000b5c6:       40b2                    lw      ra,12(sp)
d000b5c8:       0141                    addi    sp,sp,16
d000b5ca:       1170206f                j       d000dee0 <sec_mmio_write32>

d000b5ce <info_cfg_regs>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b5ce:                                                  85aa                 mv      a1,a0
d000b5d0:                                                  f56af637             lui     a2,0xf56af
d000b5d4:                                                  4ba60613             addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_cfg_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5d8:                                           /----- 04b64563             blt     a2,a1,d000b622 <info_cfg_regs+0x54>
d000b5dc:                                           |      ad887637             lui     a2,0xad887
d000b5e0:                                           |      d3a60613             addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b5e4:                                        /--|----- 08b64263             blt     a2,a1,d000b668 <info_cfg_regs+0x9a>
d000b5e8:                                        |  |      a4f6f637             lui     a2,0xa4f6f
d000b5ec:                                        |  |      6c260693             addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b5f0:                                  /-----|--|----- 0eb6d663             bge     a3,a1,d000b6dc <info_cfg_regs+0x10e>
d000b5f4:                                  |     |  |      6c360613             addi    a2,a2,1731
d000b5f8:                      /-----------|-----|--|----- 16c58e63             beq     a1,a2,d000b774 <info_cfg_regs+0x1a6>
d000b5fc:                      |           |     |  |      ad3b6637             lui     a2,0xad3b6
d000b600:                      |           |     |  |      bee60613             addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b604:       /--------------|-----------|-----|--|----- 1ec59c63             bne     a1,a2,d000b7fc <info_cfg_regs+0x22e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b608:       |              |           |     |  |  /-- 00c50663             beq     a0,a2,d000b614 <info_cfg_regs+0x46>
d000b60c:       |              |           |     |  |  |   0000                 unimp
d000b60e:       |              |           |     |  |  |   0000                 unimp
d000b610:       |              |           |     |  |  |   0000                 unimp
d000b612:       |              |           |     |  |  |   0000                 unimp
d000b614:       |              |           |     |  |  \-> c1000537             lui     a0,0xc1000
d000b618:       |              |           |     |  |      0cc50593             addi    a1,a0,204 # c10000cc <_stack_end+0xe0fe00cc>
d000b61c:       |              |           |     |  |      0a450513             addi    a0,a0,164
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b620:       |              |           |     |  |      8082                 ret
d000b622:       |              |           |     |  \----> 238cf637             lui     a2,0x238cf
d000b626:       |              |           |     |         15b60613             addi    a2,a2,347 # 238cf15b <_rom_ext_virtual_size+0x2388f15b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b62a:       |              |           |     |  /----- 06b64c63             blt     a2,a1,d000b6a2 <info_cfg_regs+0xd4>
d000b62e:       |              |           |     |  |      fa38d637             lui     a2,0xfa38d
d000b632:       |              |           |     |  |      9f560693             addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b636:       |              |           |  /--|--|----- 0cb6d663             bge     a3,a1,d000b702 <info_cfg_regs+0x134>
d000b63a:       |              |           |  |  |  |      9f660613             addi    a2,a2,-1546
d000b63e:       |              |  /--------|--|--|--|----- 14c58c63             beq     a1,a2,d000b796 <info_cfg_regs+0x1c8>
d000b642:       |              |  |        |  |  |  |      10adc637             lui     a2,0x10adc
d000b646:       |              |  |        |  |  |  |      6aa60613             addi    a2,a2,1706 # 10adc6aa <_rom_ext_virtual_size+0x10a9c6aa>
d000b64a:       |  /-----------|--|--------|--|--|--|----- 1cc59c63             bne     a1,a2,d000b822 <info_cfg_regs+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b64e:       |  |           |  |        |  |  |  |  /-- 00c50663             beq     a0,a2,d000b65a <info_cfg_regs+0x8c>
d000b652:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b654:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b656:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b658:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b65a:       |  |           |  |        |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b65e:       |  |           |  |        |  |  |  |      0c450593             addi    a1,a0,196 # c10000c4 <_stack_end+0xe0fe00c4>
d000b662:       |  |           |  |        |  |  |  |      09c50513             addi    a0,a0,156
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b666:       |  |           |  |        |  |  |  |      8082                 ret
d000b668:       |  |           |  |        |  |  \--|----> e3ffb637             lui     a2,0xe3ffb
d000b66c:       |  |           |  |        |  |     |      c8560693             addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b670:       |  |           |  |        |  |  /--|----- 0ab6dc63             bge     a3,a1,d000b728 <info_cfg_regs+0x15a>
d000b674:       |  |           |  |        |  |  |  |      c8660613             addi    a2,a2,-890
d000b678:       |  |           |  |  /-----|--|--|--|----- 14c58063             beq     a1,a2,d000b7b8 <info_cfg_regs+0x1ea>
d000b67c:       |  |           |  |  |     |  |  |  |      ec309637             lui     a2,0xec309
d000b680:       |  |           |  |  |     |  |  |  |      46160613             addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b684:       |  |  /--------|--|--|-----|--|--|--|----- 1cc59263             bne     a1,a2,d000b848 <info_cfg_regs+0x27a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b688:       |  |  |        |  |  |     |  |  |  |  /-- 00c50663             beq     a0,a2,d000b694 <info_cfg_regs+0xc6>
d000b68c:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b68e:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b690:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b692:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b694:       |  |  |        |  |  |     |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b698:       |  |  |        |  |  |     |  |  |  |      14850593             addi    a1,a0,328 # c1000148 <_stack_end+0xe0fe0148>
d000b69c:       |  |  |        |  |  |     |  |  |  |      12050513             addi    a0,a0,288
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b6a0:       |  |  |        |  |  |     |  |  |  |      8082                 ret
d000b6a2:       |  |  |        |  |  |     |  |  |  \----> 5f072637             lui     a2,0x5f072
d000b6a6:       |  |  |        |  |  |     |  |  |         77d60693             addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b6aa:       |  |  |        |  |  |     |  |  |  /----- 0ab6d263             bge     a3,a1,d000b74e <info_cfg_regs+0x180>
d000b6ae:       |  |  |        |  |  |     |  |  |  |      77e60613             addi    a2,a2,1918
d000b6b2:       |  |  |        |  |  |  /--|--|--|--|----- 12c58463             beq     a1,a2,d000b7da <info_cfg_regs+0x20c>
d000b6b6:       |  |  |        |  |  |  |  |  |  |  |      6c86e637             lui     a2,0x6c86e
d000b6ba:       |  |  |        |  |  |  |  |  |  |  |      98060613             addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b6be:       |  |  |     /--|--|--|--|--|--|--|--|----- 1ac59863             bne     a1,a2,d000b86e <info_cfg_regs+0x2a0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b6c2:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b6ce <info_cfg_regs+0x100>
d000b6c6:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6c8:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6ca:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6cc:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6ce:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b6d2:       |  |  |     |  |  |  |  |  |  |  |  |      0d850593             addi    a1,a0,216 # c10000d8 <_stack_end+0xe0fe00d8>
d000b6d6:       |  |  |     |  |  |  |  |  |  |  |  |      0b050513             addi    a0,a0,176
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b6da:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b6dc:       |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637             lui     a2,0x9dc42
d000b6e0:       |  |  |     |  |  |  |  |     |  |  |      c3360613             addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b6e4:       |  |  |     |  |  |  |  |  /--|--|--|----- 1ac59863             bne     a1,a2,d000b894 <info_cfg_regs+0x2c6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b6e8:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b6f4 <info_cfg_regs+0x126>
d000b6ec:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6ee:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6f0:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6f2:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b6f4:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b6f8:       |  |  |     |  |  |  |  |  |  |  |  |      0bc50593             addi    a1,a0,188 # c10000bc <_stack_end+0xe0fe00bc>
d000b6fc:       |  |  |     |  |  |  |  |  |  |  |  |      09450513             addi    a0,a0,148
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b700:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b702:       |  |  |     |  |  |  |  |  |  \--|--|----> f56af637             lui     a2,0xf56af
d000b706:       |  |  |     |  |  |  |  |  |     |  |      4bb60613             addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b70a:       |  |  |     |  |  |  |  |  |  /--|--|----- 1ac59863             bne     a1,a2,d000b8ba <info_cfg_regs+0x2ec>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b70e:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b71a <info_cfg_regs+0x14c>
d000b712:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b714:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b716:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b718:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b71a:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b71e:       |  |  |     |  |  |  |  |  |  |  |  |      0c050593             addi    a1,a0,192 # c10000c0 <_stack_end+0xe0fe00c0>
d000b722:       |  |  |     |  |  |  |  |  |  |  |  |      09850513             addi    a0,a0,152
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b726:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b728:       |  |  |     |  |  |  |  |  |  |  \--|----> ad887637             lui     a2,0xad887
d000b72c:       |  |  |     |  |  |  |  |  |  |     |      d3b60613             addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b730:       |  |  |     |  |  |  |  |  |  |  /--|----- 1ac59863             bne     a1,a2,d000b8e0 <info_cfg_regs+0x312>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b734:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b740 <info_cfg_regs+0x172>
d000b738:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b73a:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b73c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b73e:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b740:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b744:       |  |  |     |  |  |  |  |  |  |  |  |      13050593             addi    a1,a0,304 # c1000130 <_stack_end+0xe0fe0130>
d000b748:       |  |  |     |  |  |  |  |  |  |  |  |      10850513             addi    a0,a0,264
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b74c:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b74e:       |  |  |     |  |  |  |  |  |  |  |  \----> 238cf637             lui     a2,0x238cf
d000b752:       |  |  |     |  |  |  |  |  |  |  |         15c60613             addi    a2,a2,348 # 238cf15c <_rom_ext_virtual_size+0x2388f15c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b756:       |  |  |  /--|--|--|--|--|--|--|--|-------- 1ac59863             bne     a1,a2,d000b906 <info_cfg_regs+0x338>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b75a:       |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663             beq     a0,a2,d000b766 <info_cfg_regs+0x198>
d000b75e:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b760:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b762:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b764:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b766:       |  |  |  |  |  |  |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b76a:       |  |  |  |  |  |  |  |  |  |  |  |         12c50593             addi    a1,a0,300 # c100012c <_stack_end+0xe0fe012c>
d000b76e:       |  |  |  |  |  |  |  |  |  |  |  |         10450513             addi    a0,a0,260
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b772:       |  |  |  |  |  |  |  |  |  |  |  |         8082                 ret
d000b774:       |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7             lui     a1,0xa4f6f
d000b778:       |  |  |  |  |     |  |  |  |  |  |         6c358593             addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b77c:       |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b788 <info_cfg_regs+0x1ba>
d000b780:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b782:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b784:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b786:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b788:       |  |  |  |  |     |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b78c:       |  |  |  |  |     |  |  |  |  |  |         0d050593             addi    a1,a0,208 # c10000d0 <_stack_end+0xe0fe00d0>
d000b790:       |  |  |  |  |     |  |  |  |  |  |         0a850513             addi    a0,a0,168
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b794:       |  |  |  |  |     |  |  |  |  |  |         8082                 ret
d000b796:       |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7             lui     a1,0xfa38d
d000b79a:       |  |  |  |  |        |  |  |  |  |         9f658593             addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b79e:       |  |  |  |  |        |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b7aa <info_cfg_regs+0x1dc>
d000b7a2:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b7a4:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b7a6:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b7a8:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b7aa:       |  |  |  |  |        |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b7ae:       |  |  |  |  |        |  |  |  |  |         12450593             addi    a1,a0,292 # c1000124 <_stack_end+0xe0fe0124>
d000b7b2:       |  |  |  |  |        |  |  |  |  |         0fc50513             addi    a0,a0,252
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b7b6:       |  |  |  |  |        |  |  |  |  |         8082                 ret
d000b7b8:       |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7             lui     a1,0xe3ffb
d000b7bc:       |  |  |  |  |           |  |  |  |         c8658593             addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b7c0:       |  |  |  |  |           |  |  |  |     /-- 00b50663             beq     a0,a1,d000b7cc <info_cfg_regs+0x1fe>
d000b7c4:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b7c6:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b7c8:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b7ca:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b7cc:       |  |  |  |  |           |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b7d0:       |  |  |  |  |           |  |  |  |         13c50593             addi    a1,a0,316 # c100013c <_stack_end+0xe0fe013c>
d000b7d4:       |  |  |  |  |           |  |  |  |         11450513             addi    a0,a0,276
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b7d8:       |  |  |  |  |           |  |  |  |         8082                 ret
d000b7da:       |  |  |  |  |           \--|--|--|-------> 5f0725b7             lui     a1,0x5f072
d000b7de:       |  |  |  |  |              |  |  |         77e58593             addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b7e2:       |  |  |  |  |              |  |  |     /-- 00b50663             beq     a0,a1,d000b7ee <info_cfg_regs+0x220>
d000b7e6:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b7e8:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b7ea:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b7ec:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b7ee:       |  |  |  |  |              |  |  |     \-> c1000537             lui     a0,0xc1000
d000b7f2:       |  |  |  |  |              |  |  |         0e050593             addi    a1,a0,224 # c10000e0 <_stack_end+0xe0fe00e0>
d000b7f6:       |  |  |  |  |              |  |  |         0b850513             addi    a0,a0,184
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b7fa:       |  |  |  |  |              |  |  |         8082                 ret
d000b7fc:       \--|--|--|--|--------------|--|--|-------> ad5dd637             lui     a2,0xad5dd
d000b800:          |  |  |  |              |  |  |         31d60613             addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b804:          |  |  |  |              |  |  |  /----- 12c59463             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b808:          |  |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b814 <info_cfg_regs+0x246>
d000b80c:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b80e:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b810:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b812:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b814:          |  |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b818:          |  |  |  |              |  |  |  |      13850593             addi    a1,a0,312 # c1000138 <_stack_end+0xe0fe0138>
d000b81c:          |  |  |  |              |  |  |  |      11050513             addi    a0,a0,272
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b820:          |  |  |  |              |  |  |  |      8082                 ret
d000b822:          \--|--|--|--------------|--|--|--|----> 118b6637             lui     a2,0x118b6
d000b826:             |  |  |              |  |  |  |      dbb60613             addi    a2,a2,-581 # 118b5dbb <_rom_ext_virtual_size+0x11875dbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b82a:             |  |  |              |  |  |  +----- 10c59163             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b82e:             |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b83a <info_cfg_regs+0x26c>
d000b832:             |  |  |              |  |  |  |  |   0000                 unimp
d000b834:             |  |  |              |  |  |  |  |   0000                 unimp
d000b836:             |  |  |              |  |  |  |  |   0000                 unimp
d000b838:             |  |  |              |  |  |  |  |   0000                 unimp
d000b83a:             |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b83e:             |  |  |              |  |  |  |      0c850593             addi    a1,a0,200 # c10000c8 <_stack_end+0xe0fe00c8>
d000b842:             |  |  |              |  |  |  |      0a050513             addi    a0,a0,160
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b846:             |  |  |              |  |  |  |      8082                 ret
d000b848:             \--|--|--------------|--|--|--|----> f4f49637             lui     a2,0xf4f49
d000b84c:                |  |              |  |  |  |      c3d60613             addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b850:                |  |              |  |  |  +----- 0cc59e63             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b854:                |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b860 <info_cfg_regs+0x292>
d000b858:                |  |              |  |  |  |  |   0000                 unimp
d000b85a:                |  |              |  |  |  |  |   0000                 unimp
d000b85c:                |  |              |  |  |  |  |   0000                 unimp
d000b85e:                |  |              |  |  |  |  |   0000                 unimp
d000b860:                |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b864:                |  |              |  |  |  |      14050593             addi    a1,a0,320 # c1000140 <_stack_end+0xe0fe0140>
d000b868:                |  |              |  |  |  |      11850513             addi    a0,a0,280
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b86c:                |  |              |  |  |  |      8082                 ret
d000b86e:                |  \--------------|--|--|--|----> 7dfbe637             lui     a2,0x7dfbe
d000b872:                |                 |  |  |  |      f9b60613             addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b876:                |                 |  |  |  +----- 0ac59b63             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b87a:                |                 |  |  |  |  /-- 00c50663             beq     a0,a2,d000b886 <info_cfg_regs+0x2b8>
d000b87e:                |                 |  |  |  |  |   0000                 unimp
d000b880:                |                 |  |  |  |  |   0000                 unimp
d000b882:                |                 |  |  |  |  |   0000                 unimp
d000b884:                |                 |  |  |  |  |   0000                 unimp
d000b886:                |                 |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b88a:                |                 |  |  |  |      13450593             addi    a1,a0,308 # c1000134 <_stack_end+0xe0fe0134>
d000b88e:                |                 |  |  |  |      10c50513             addi    a0,a0,268
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b892:                |                 |  |  |  |      8082                 ret
d000b894:                |                 \--|--|--|----> 9fbb8637             lui     a2,0x9fbb8
d000b898:                |                    |  |  |      40e60613             addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b89c:                |                    |  |  +----- 08c59863             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b8a0:                |                    |  |  |  /-- 00c50663             beq     a0,a2,d000b8ac <info_cfg_regs+0x2de>
d000b8a4:                |                    |  |  |  |   0000                 unimp
d000b8a6:                |                    |  |  |  |   0000                 unimp
d000b8a8:                |                    |  |  |  |   0000                 unimp
d000b8aa:                |                    |  |  |  |   0000                 unimp
d000b8ac:                |                    |  |  |  \-> c1000537             lui     a0,0xc1000
d000b8b0:                |                    |  |  |      14450593             addi    a1,a0,324 # c1000144 <_stack_end+0xe0fe0144>
d000b8b4:                |                    |  |  |      11c50513             addi    a0,a0,284
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b8b8:                |                    |  |  |      8082                 ret
d000b8ba:                |                    \--|--|----> f646f637             lui     a2,0xf646f
d000b8be:                |                       |  |      11b60613             addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b8c2:                |                       |  +----- 06c59563             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b8c6:                |                       |  |  /-- 00c50663             beq     a0,a2,d000b8d2 <info_cfg_regs+0x304>
d000b8ca:                |                       |  |  |   0000                 unimp
d000b8cc:                |                       |  |  |   0000                 unimp
d000b8ce:                |                       |  |  |   0000                 unimp
d000b8d0:                |                       |  |  |   0000                 unimp
d000b8d2:                |                       |  |  \-> c1000537             lui     a0,0xc1000
d000b8d6:                |                       |  |      0d450593             addi    a1,a0,212 # c10000d4 <_stack_end+0xe0fe00d4>
d000b8da:                |                       |  |      0ac50513             addi    a0,a0,172
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b8de:                |                       |  |      8082                 ret
d000b8e0:                |                       \--|----> dd7f3637             lui     a2,0xdd7f3
d000b8e4:                |                          |      4dc60613             addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b8e8:                |                          +----- 04c59263             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b8ec:                |                          |  /-- 00c50663             beq     a0,a2,d000b8f8 <info_cfg_regs+0x32a>
d000b8f0:                |                          |  |   0000                 unimp
d000b8f2:                |                          |  |   0000                 unimp
d000b8f4:                |                          |  |   0000                 unimp
d000b8f6:                |                          |  |   0000                 unimp
d000b8f8:                |                          |  \-> c1000537             lui     a0,0xc1000
d000b8fc:                |                          |      0dc50593             addi    a1,a0,220 # c10000dc <_stack_end+0xe0fe00dc>
d000b900:                |                          |      0b450513             addi    a0,a0,180
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b904:                |                          |      8082                 ret
d000b906:                \--------------------------|----> 389c4637             lui     a2,0x389c4
d000b90a:                                           |      49e60613             addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b90e:                                           +----- 00c59f63             bne     a1,a2,d000b92c <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b912:                                           |  /-- 00c50663             beq     a0,a2,d000b91e <info_cfg_regs+0x350>
d000b916:                                           |  |   0000                 unimp
d000b918:                                           |  |   0000                 unimp
d000b91a:                                           |  |   0000                 unimp
d000b91c:                                           |  |   0000                 unimp
d000b91e:                                           |  \-> c1000537             lui     a0,0xc1000
d000b922:                                           |      12850593             addi    a1,a0,296 # c1000128 <_stack_end+0xe0fe0128>
d000b926:                                           |      10050513             addi    a0,a0,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b92a:                                           |      8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:275
      HARDENED_UNREACHABLE();
d000b92c:                                           \----> 0000                 unimp
d000b92e:                                                  0000                 unimp
d000b930:                                                  0000                 unimp
d000b932:                                                  0000                 unimp

d000b934 <flash_ctrl_bank_erase_perms_set>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b934:                 85aa                  mv      a1,a0
d000b936:                 1d400613              li      a2,468
flash_ctrl_bank_erase_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
}

void flash_ctrl_bank_erase_perms_set(hardened_bool_t enable) {
  uint32_t reg;
  switch (launder32(enable)) {
d000b93a:          /----- 00c59a63              bne     a1,a2,d000b94e <flash_ctrl_bank_erase_perms_set+0x1a>
d000b93e:          |      4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:539
          0, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_0_BIT, true);
      reg = bitfield_bit32_write(
          reg, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_1_BIT, true);
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(enable, kHardenedBoolFalse);
d000b940:          |  /-- 00c50663              beq     a0,a2,d000b94c <flash_ctrl_bank_erase_perms_set+0x18>
d000b944:          |  |   0000                  unimp
d000b946:          |  |   0000                  unimp
d000b948:          |  |   0000                  unimp
d000b94a:          |  |   0000                  unimp
d000b94c:       /--|--\-X a821                  j       d000b964 <flash_ctrl_bank_erase_perms_set+0x30>
d000b94e:       |  \----> 73900613              li      a2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
  switch (launder32(enable)) {
d000b952:       |  /----- 00c59f63              bne     a1,a2,d000b970 <flash_ctrl_bank_erase_perms_set+0x3c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:532
      HARDENED_CHECK_EQ(enable, kHardenedBoolTrue);
d000b956:       |  |  /-- 00c50663              beq     a0,a2,d000b962 <flash_ctrl_bank_erase_perms_set+0x2e>
d000b95a:       |  |  |   0000                  unimp
d000b95c:       |  |  |   0000                  unimp
d000b95e:       |  |  |   0000                  unimp
d000b960:       |  |  |   0000                  unimp
d000b962:       |  |  \-> 458d                  li      a1,3
d000b964:       \--|----> c1000537              lui     a0,0xc1000
d000b968:          |      16850513              addi    a0,a0,360 # c1000168 <_stack_end+0xe0fe0168>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:545
      reg = 0;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32_shadowed(kBase + FLASH_CTRL_MP_BANK_CFG_SHADOWED_REG_OFFSET,
d000b96c:          |      5c00206f              j       d000df2c <sec_mmio_write32_shadowed>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:543
      HARDENED_UNREACHABLE();
d000b970:          \----> 0000                  unimp
d000b972:                 0000                  unimp
d000b974:                 0000                  unimp
d000b976:                 0000                  unimp

d000b978 <ibex_addr_remap_0_set>:
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:23
uint32_t ibex_fpga_version(void) {
  return abs_mmio_read32(kBase + RV_CORE_IBEX_FPGA_INFO_REG_OFFSET);
}

void ibex_addr_remap_0_set(uint32_t matching_addr, uint32_t remap_addr,
                           size_t size) {
d000b978:       1141                    addi    sp,sp,-16
d000b97a:       c606                    sw      ra,12(sp)
d000b97c:       c422                    sw      s0,8(sp)
d000b97e:       c226                    sw      s1,4(sp)
d000b980:       c04a                    sw      s2,0(sp)
d000b982:       892e                    mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:24
  uint32_t mask = matching_addr | ((size - 1) >> 1);
d000b984:       fff60593                addi    a1,a2,-1
d000b988:       8185                    srli    a1,a1,0x1
d000b98a:       00a5e4b3                or      s1,a1,a0
d000b98e:       c11f0437                lui     s0,0xc11f0
d000b992:       01c40513                addi    a0,s0,28 # c11f001c <_stack_end+0xe11d001c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:25
  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b996:       85a6                    mv      a1,s1
d000b998:       548020ef                jal     ra,d000dee0 <sec_mmio_write32>
d000b99c:       03c40513                addi    a0,s0,60
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:26
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b9a0:       85a6                    mv      a1,s1
d000b9a2:       53e020ef                jal     ra,d000dee0 <sec_mmio_write32>
d000b9a6:       02440513                addi    a0,s0,36
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:28

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_REMAP_ADDR_0_REG_OFFSET,
d000b9aa:       85ca                    mv      a1,s2
d000b9ac:       534020ef                jal     ra,d000dee0 <sec_mmio_write32>
d000b9b0:       04440513                addi    a0,s0,68
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:30
                   remap_addr);
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_REMAP_ADDR_0_REG_OFFSET,
d000b9b4:       85ca                    mv      a1,s2
d000b9b6:       52a020ef                jal     ra,d000dee0 <sec_mmio_write32>
d000b9ba:       01440513                addi    a0,s0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:33
                   remap_addr);

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b9be:       4585                    li      a1,1
d000b9c0:       520020ef                jal     ra,d000dee0 <sec_mmio_write32>
d000b9c4:       03440513                addi    a0,s0,52
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:34
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b9c8:       4585                    li      a1,1
d000b9ca:       516020ef                jal     ra,d000dee0 <sec_mmio_write32>
icache_invalidate():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:38
/**
 * Invalidates the instruction cache.
 */
inline void icache_invalidate(void) {
#ifdef OT_PLATFORM_RV32
  asm volatile("fence.i");
d000b9ce:       0000100f                fence.i
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:36
  icache_invalidate();
}
d000b9d2:       4902                    lw      s2,0(sp)
d000b9d4:       4492                    lw      s1,4(sp)
d000b9d6:       4422                    lw      s0,8(sp)
d000b9d8:       40b2                    lw      ra,12(sp)
d000b9da:       0141                    addi    sp,sp,16
d000b9dc:       8082                    ret

d000b9de <expected_state_check>:
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:39
 * This function reads and clears the status and error code registers.
 *
 * @return `kErrorOk` if the key manager is at the `expected_state` and the
 * status is idle or success.
 */
static rom_error_t expected_state_check(uint32_t expected_state) {
d000b9de:           1141                        addi    sp,sp,-16
d000b9e0:           c606                        sw      ra,12(sp)
d000b9e2:           c422                        sw      s0,8(sp)
d000b9e4:           c226                        sw      s1,4(sp)
d000b9e6:           c04a                        sw      s2,0(sp)
d000b9e8:           892a                        mv      s2,a0
d000b9ea:           c1140537            lui     a0,0xc1140
d000b9ee:           4589                        li      a1,2
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b9f0:       /-> 0ec52603            lw      a2,236(a0) # c11400ec <_stack_end+0xe11200ec>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000b9f4:       |   00367493            andi    s1,a2,3
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
  do {
    op_status = abs_mmio_read32(kBase + KEYMGR_OP_STATUS_REG_OFFSET);
    abs_mmio_write32(kBase + KEYMGR_OP_STATUS_REG_OFFSET, op_status);
    op_status_field =
        bitfield_field32_read(op_status, KEYMGR_OP_STATUS_STATUS_FIELD);
  } while (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_WIP ||
d000b9f8:       |   fff48693            addi    a3,s1,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b9fc:       |   0ec52623            sw      a2,236(a0)
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
d000ba00:       \-- feb6e8e3            bltu    a3,a1,d000b9f0 <expected_state_check+0x12>
d000ba04:           c1140537            lui     a0,0xc1140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000ba08:           0f052403            lw      s0,240(a0) # c11400f0 <_stack_end+0xe11200f0>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ba0c:           0e852823            sw      s0,240(a0)
d000ba10:           0e850513            addi    a0,a0,232
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:58
  uint32_t error_code = abs_mmio_read32(kBase + KEYMGR_ERR_CODE_REG_OFFSET);
  abs_mmio_write32(kBase + KEYMGR_ERR_CODE_REG_OFFSET, error_code);

  // Read the working state with sec_mmio so that we can check the expected
  // value periodically.
  uint32_t got_state = sec_mmio_read32(kBase + KEYMGR_WORKING_STATE_REG_OFFSET);
d000ba14:           418020ef            jal     ra,d000de2c <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:59
  if (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_IDLE &&
d000ba18:           0084e5b3            or      a1,s1,s0
d000ba1c:           01254533            xor     a0,a0,s2
d000ba20:           8dc9                        or      a1,a1,a0
d000ba22:           73900513            li      a0,1849
d000ba26:       /-- c589                        beqz    a1,d000ba30 <expected_state_check+0x52>
d000ba28:       |   014b5537            lui     a0,0x14b5
d000ba2c:       |   d0d50513            addi    a0,a0,-755 # 14b4d0d <_rom_ext_virtual_size+0x1474d0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:64
      error_code == 0u && got_state == expected_state) {
    return kErrorOk;
  }
  return kErrorKeymgrInternal;
}
d000ba30:       \-> 4902                        lw      s2,0(sp)
d000ba32:           4492                        lw      s1,4(sp)
d000ba34:           4422                        lw      s0,8(sp)
d000ba36:           40b2                        lw      ra,12(sp)
d000ba38:           0141                        addi    sp,sp,16
d000ba3a:           8082                        ret

d000ba3c <keymgr_sw_binding_set>:
keymgr_sw_binding_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:78
  return kErrorOk;
}

void keymgr_sw_binding_set(
    const keymgr_binding_value_t *binding_value_sealing,
    const keymgr_binding_value_t *binding_value_attestation) {
d000ba3c:           1101                        addi    sp,sp,-32
d000ba3e:           ce06                        sw      ra,28(sp)
d000ba40:           cc22                        sw      s0,24(sp)
d000ba42:           ca26                        sw      s1,20(sp)
d000ba44:           c84a                        sw      s2,16(sp)
d000ba46:           c64e                        sw      s3,12(sp)
d000ba48:           c452                        sw      s4,8(sp)
d000ba4a:           892e                        mv      s2,a1
d000ba4c:           89aa                        mv      s3,a0
d000ba4e:           4481                        li      s1,0
d000ba50:           c1140537            lui     a0,0xc1140
d000ba54:           02c50413            addi    s0,a0,44 # c114002c <_stack_end+0xe112002c>
d000ba58:           02000a13            li      s4,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:86
  // Write and lock (rw0c) the software binding value. This register is unlocked
  // by hardware upon a successful state transition.
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_SEALING_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_sealing->data[i]);
d000ba5c:       /-> 00998533            add     a0,s3,s1
d000ba60:       |   410c                        lw      a1,0(a0)
d000ba62:       |   00848533            add     a0,s1,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:84
    sec_mmio_write32(
d000ba66:       |   47a020ef            jal     ra,d000dee0 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:83
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
d000ba6a:       |   0491                        addi    s1,s1,4
d000ba6c:       \-- ff4498e3            bne     s1,s4,d000ba5c <keymgr_sw_binding_set+0x20>
d000ba70:           4481                        li      s1,0
d000ba72:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:91
  }
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_ATTEST_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_attestation->data[i]);
d000ba76:       /-> 00990533            add     a0,s2,s1
d000ba7a:       |   410c                        lw      a1,0(a0)
d000ba7c:       |   00940533            add     a0,s0,s1
d000ba80:       |   02050513            addi    a0,a0,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:89
    sec_mmio_write32(
d000ba84:       |   45c020ef            jal     ra,d000dee0 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:88
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
d000ba88:       |   0491                        addi    s1,s1,4
d000ba8a:       \-- ff3496e3            bne     s1,s3,d000ba76 <keymgr_sw_binding_set+0x3a>
d000ba8e:           c1140537            lui     a0,0xc1140
d000ba92:           02850513            addi    a0,a0,40 # c1140028 <_stack_end+0xe1120028>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:93
  }
  sec_mmio_write32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET, 0);
d000ba96:           4581                        li      a1,0
d000ba98:           4a22                        lw      s4,8(sp)
d000ba9a:           49b2                        lw      s3,12(sp)
d000ba9c:           4942                        lw      s2,16(sp)
d000ba9e:           44d2                        lw      s1,20(sp)
d000baa0:           4462                        lw      s0,24(sp)
d000baa2:           40f2                        lw      ra,28(sp)
d000baa4:           6105                        addi    sp,sp,32
d000baa6:           43a0206f            j       d000dee0 <sec_mmio_write32>

d000baaa <keymgr_creator_max_ver_set>:
keymgr_creator_max_ver_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:102
  while (!abs_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET)) {
  }
  sec_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET);
}

void keymgr_creator_max_ver_set(uint32_t max_key_ver) {
d000baaa:       1141                    addi    sp,sp,-16
d000baac:       c606                    sw      ra,12(sp)
d000baae:       c422                    sw      s0,8(sp)
d000bab0:       85aa                    mv      a1,a0
d000bab2:       c1140437                lui     s0,0xc1140
d000bab6:       09440513                addi    a0,s0,148 # c1140094 <_stack_end+0xe1120094>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:105
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kKeymgrSecMmioCreatorMaxVerSet, 2);
  // Write and lock (rw0c) the max key version.
  sec_mmio_write32_shadowed(
d000baba:       472020ef                jal     ra,d000df2c <sec_mmio_write32_shadowed>
d000babe:       09040513                addi    a0,s0,144
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:107
      kBase + KEYMGR_MAX_CREATOR_KEY_VER_SHADOWED_REG_OFFSET, max_key_ver);
  sec_mmio_write32(kBase + KEYMGR_MAX_CREATOR_KEY_VER_REGWEN_REG_OFFSET, 0);
d000bac2:       4581                    li      a1,0
d000bac4:       4422                    lw      s0,8(sp)
d000bac6:       40b2                    lw      ra,12(sp)
d000bac8:       0141                    addi    sp,sp,16
d000baca:       4160206f                j       d000dee0 <sec_mmio_write32>

d000bace <keymgr_state_check>:
keymgr_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:130

  abs_mmio_write32(kBase + KEYMGR_START_REG_OFFSET, 1);
}

rom_error_t keymgr_state_check(keymgr_state_t expected_state) {
  return expected_state_check(expected_state);
d000bace:       bf01                    j       d000b9de <expected_state_check>

d000bad0 <pinmux_init>:
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:127
  abs_mmio_write32(
      kBase + PINMUX_MIO_OUTSEL_0_REG_OFFSET + output.mio * sizeof(uint32_t),
      output.outsel);
}

void pinmux_init(void) {
d000bad0:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:129
  uint32_t bootstrap_en =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d000bad2:              c606                     sw      ra,12(sp)
d000bad4:              36400513                 li      a0,868
d000bad8:              2f2020ef                 jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000badc:              862a                     mv      a2,a0
d000bade:              73900593                 li      a1,1849
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:130
  if (launder32(bootstrap_en) == kHardenedBoolTrue) {
d000bae2:       /----- 02b61b63                 bne     a2,a1,d000bb18 <pinmux_init+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:131
    HARDENED_CHECK_EQ(bootstrap_en, kHardenedBoolTrue);
d000bae6:       |  /-- 00b50663                 beq     a0,a1,d000baf2 <pinmux_init+0x22>
d000baea:       |  |   0000                     unimp
d000baec:       |  |   0000                     unimp
d000baee:       |  |   0000                     unimp
d000baf0:       |  |   0000                     unimp
d000baf2:       |  \-> c0460537                 lui     a0,0xc0460
d000baf6:       |      4591                     li      a1,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000baf8:       |      44b52c23                 sw      a1,1112(a0) # c0460458 <_stack_end+0xe0440458>
d000bafc:       |      44b52e23                 sw      a1,1116(a0)
d000bb00:       |      46b52023                 sw      a1,1120(a0)
d000bb04:       |      45e1                     li      a1,24
d000bb06:       |      14b52023                 sw      a1,320(a0)
d000bb0a:       |      45e5                     li      a1,25
d000bb0c:       |      14b52223                 sw      a1,324(a0)
d000bb10:       |      14850513                 addi    a0,a0,328
d000bb14:       |      45e9                     li      a1,26
d000bb16:       |      c10c                     sw      a1,0(a0)
d000bb18:       \----> c0460537                 lui     a0,0xc0460
d000bb1c:              45ed                     li      a1,27
d000bb1e:              18b52823                 sw      a1,400(a0) # c0460190 <_stack_end+0xe0440190>
d000bb22:              02d00593                 li      a1,45
d000bb26:              2eb52823                 sw      a1,752(a0)
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:144
    configure_input(kInputSwStrap2);
  }

  configure_input(kInputUart0);
  configure_output(kOutputUart0);
}
d000bb2a:              40b2                     lw      ra,12(sp)
d000bb2c:              0141                     addi    sp,sp,16
d000bb2e:              8082                     ret

d000bb30 <retention_sram_get>:
retention_sram_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:25
};

retention_sram_t *retention_sram_get(void) {
  static_assert(sizeof(retention_sram_t) == TOP_EARLGREY_RAM_RET_AON_SIZE_BYTES,
                "Unexpected retention SRAM size.");
  return (retention_sram_t *)TOP_EARLGREY_RAM_RET_AON_BASE_ADDR;
d000bb30:       c0600537                lui     a0,0xc0600
d000bb34:       8082                    ret

d000bb36 <retention_sram_init>:
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:32

void retention_sram_clear(void) {
  memset(retention_sram_get(), 0, sizeof(retention_sram_t));
}

void retention_sram_init(void) {
d000bb36:       c0500537                lui     a0,0xc0500
d000bb3a:       4589                    li      a1,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bb3c:       c94c                    sw      a1,20(a0)
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:35
  uint32_t reg = bitfield_bit32_write(0, SRAM_CTRL_CTRL_INIT_BIT, true);
  abs_mmio_write32(kBase + SRAM_CTRL_CTRL_REG_OFFSET, reg);
}
d000bb3e:       8082                    ret

d000bb40 <rstmgr_reason_get>:
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:41
    rstmgr_alert_info.info[i] =
        abs_mmio_read32(kBase + RSTMGR_ALERT_INFO_REG_OFFSET);
  }
}

uint32_t rstmgr_reason_get(void) {
d000bb40:              c0410537                 lui     a0,0xc0410
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bb44:              494c                     lw      a1,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000bb46:              00f5f613                 andi    a2,a1,15
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:29
  rstmgr_alert_info.length = bitfield_field32_read(
d000bb4a:              c7018593                 addi    a1,gp,-912 # e00024b8 <rstmgr_alert_info>
d000bb4e:              c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000bb50:       /----- c205                     beqz    a2,d000bb70 <rstmgr_reason_get+0x30>
d000bb52:       |      4601                     li      a2,0
d000bb54:       |      4681                     li      a3,0
d000bb56:       |      00458713                 addi    a4,a1,4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bb5a:       |  /-> 0f067793                 andi    a5,a2,240
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bb5e:       |  |   c91c                     sw      a5,16(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bb60:       |  |   4d1c                     lw      a5,24(a0)
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:36
    rstmgr_alert_info.info[i] =
d000bb62:       |  |   c31c                     sw      a5,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000bb64:       |  |   419c                     lw      a5,0(a1)
d000bb66:       |  |   0685                     addi    a3,a3,1
d000bb68:       |  |   0711                     addi    a4,a4,4
d000bb6a:       |  |   0641                     addi    a2,a2,16
d000bb6c:       |  \-- fef6e7e3                 bltu    a3,a5,d000bb5a <rstmgr_reason_get+0x1a>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000bb70:       \----> 4508                     lw      a0,8(a0)
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:72
      "kRstmgrReasonLast value incorrect.");

#undef REASON_ASSERT

  rstmgr_alert_info_collect();
  return abs_mmio_read32(kBase + RSTMGR_RESET_INFO_REG_OFFSET);
d000bb72:              8082                     ret

d000bb74 <rstmgr_reason_clear>:
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:75
}

void rstmgr_reason_clear(uint32_t reasons) {
d000bb74:       c04105b7                lui     a1,0xc0410
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bb78:       c588                    sw      a0,8(a1)
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:77
  abs_mmio_write32(kBase + RSTMGR_RESET_INFO_REG_OFFSET, reasons);
}
d000bb7a:       8082                    ret

d000bb7c <rstmgr_reset>:
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:83

void rstmgr_alert_info_enable(void) {
  abs_mmio_write32(kBase + RSTMGR_ALERT_INFO_CTRL_REG_OFFSET, 1);
}

void rstmgr_reset(void) {
d000bb7c:           c0410537            lui     a0,0xc0410
d000bb80:           0511                        addi    a0,a0,4
d000bb82:           4599                        li      a1,6
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bb84:           c10c                        sw      a1,0(a0)
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
  asm volatile("wfi");
d000bb86:       /-> 10500073            wfi
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:87
  abs_mmio_write32(kBase + RSTMGR_RESET_REQ_REG_OFFSET, kMultiBitBool4True);
#ifdef OT_PLATFORM_RV32
  // Wait until the chip resets.
  while (true) {
d000bb8a:       \-- bff5                        j       d000bb86 <rstmgr_reset+0xa>

d000bb8c <uart_init>:
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:37
                   0u);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_STATE_REG_OFFSET,
                   UINT32_MAX);
}

rom_error_t uart_init(uint32_t precalculated_nco) {
d000bb8c:       c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bb90:       0005a823                sw      zero,16(a1) # c0000010 <_stack_end+0xdffe0010>
d000bb94:       460d                    li      a2,3
d000bb96:       d190                    sw      a2,32(a1)
d000bb98:       0205a423                sw      zero,40(a1)
d000bb9c:       0205a823                sw      zero,48(a1)
d000bba0:       0005a223                sw      zero,4(a1)
d000bba4:       567d                    li      a2,-1
d000bba6:       c190                    sw      a2,0(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000bba8:       0542                    slli    a0,a0,0x10
d000bbaa:       00156513                ori     a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bbae:       c988                    sw      a0,16(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_CTRL_REG_OFFSET, reg);

  // Disable interrupts.
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_ENABLE_REG_OFFSET,
                   0u);
  return kErrorOk;
d000bbb0:       73900513                li      a0,1849
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bbb4:       0005a223                sw      zero,4(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
d000bbb8:       8082                    ret

d000bbba <uart_putchar>:
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:66
  uint32_t reg =
      abs_mmio_read32(TOP_EARLGREY_UART0_BASE_ADDR + UART_STATUS_REG_OFFSET);
  return bitfield_bit32_read(reg, UART_STATUS_TXIDLE_BIT);
}

void uart_putchar(uint8_t byte) {
d000bbba:           c00005b7            lui     a1,0xc0000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bbbe:       /-> 49d0                        lw      a2,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000bbc0:       |   8a05                        andi    a2,a2,1
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:68
  // If the transmit FIFO is full, wait.
  while (uart_tx_full()) {
d000bbc2:       \-- fe75                        bnez    a2,d000bbbe <uart_putchar+0x4>
d000bbc4:           c00005b7            lui     a1,0xc0000
d000bbc8:           01c58613            addi    a2,a1,28 # c000001c <_stack_end+0xdffe001c>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bbcc:           c208                        sw      a0,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bbce:       /-> 49c8                        lw      a0,20(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000bbd0:       |   8921                        andi    a0,a0,8
uart_putchar():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:74
  }
  uint32_t reg = bitfield_field32_write(0, UART_WDATA_WDATA_FIELD, byte);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_WDATA_REG_OFFSET, reg);

  // If the transmitter is active, wait.
  while (!uart_tx_idle()) {
d000bbd2:       \-- dd75                        beqz    a0,d000bbce <uart_putchar+0x14>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:76
  }
}
d000bbd4:           8082                        ret

d000bbd6 <watchdog_init>:
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:25

  kCtrlEnable = 1 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
  kCtrlDisable = 0 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
};

void watchdog_init(lifecycle_state_t lc_state) {
d000bbd6:                          1101                 addi    sp,sp,-32
d000bbd8:                          ce06                 sw      ra,28(sp)
d000bbda:                          cc22                 sw      s0,24(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bbdc:                          85aa                 mv      a1,a0
d000bbde:                          cf8d0637             lui     a2,0xcf8d0
d000bbe2:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioInit,
                                  kWatchdogSecMmioConfigure);
  // Disable the watchdog bite when in test and RMA lifecycle states.
  hardened_bool_t enable = kHardenedBoolTrue;
  switch (launder32(lc_state)) {
d000bbe6:                   /----- 02b6d363             bge     a3,a1,d000bc0c <watchdog_init+0x36>
d000bbea:                   |      aab60613             addi    a2,a2,-1365
d000bbee:                /--|----- 02c58c63             beq     a1,a2,d000bc26 <watchdog_init+0x50>
d000bbf2:                |  |      0b5a7637             lui     a2,0xb5a7
d000bbf6:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000bbfa:             /--|--|----- 04c59163             bne     a1,a2,d000bc3c <watchdog_init+0x66>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:36
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      enable = kHardenedBoolFalse;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000bbfe:             |  |  |  /-- 00c50663             beq     a0,a2,d000bc0a <watchdog_init+0x34>
d000bc02:             |  |  |  |   0000                 unimp
d000bc04:             |  |  |  |   0000                 unimp
d000bc06:             |  |  |  |   0000                 unimp
d000bc08:             |  |  |  |   0000                 unimp
d000bc0a:       /-----|--|--|--\-X a0a9                 j       d000bc54 <watchdog_init+0x7e>
d000bc0c:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000bc10:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bc14:       |  /--|--|-------- 04c59363             bne     a1,a2,d000bc5a <watchdog_init+0x84>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:44
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      enable = kHardenedBoolTrue;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000bc18:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000bc24 <watchdog_init+0x4e>
d000bc1c:       |  |  |  |     |   0000                 unimp
d000bc1e:       |  |  |  |     |   0000                 unimp
d000bc20:       |  |  |  |     |   0000                 unimp
d000bc22:       |  |  |  |     |   0000                 unimp
d000bc24:       +--|--|--|-----\-X a805                 j       d000bc54 <watchdog_init+0x7e>
d000bc26:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000bc2a:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:48
      enable = kHardenedBoolTrue;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000bc2e:       |  |  |        /-- 00b50663             beq     a0,a1,d000bc3a <watchdog_init+0x64>
d000bc32:       |  |  |        |   0000                 unimp
d000bc34:       |  |  |        |   0000                 unimp
d000bc36:       |  |  |        |   0000                 unimp
d000bc38:       |  |  |        |   0000                 unimp
d000bc3a:       |  |  |     /--\-X a825                 j       d000bc72 <watchdog_init+0x9c>
d000bc3c:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000bc40:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bc44:       |  |     /--|----- 06c59563             bne     a1,a2,d000bcae <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:40
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000bc48:       +--|-----|--|----- 00c50663             beq     a0,a2,d000bc54 <watchdog_init+0x7e>
d000bc4c:       |  |     |  |      0000                 unimp
d000bc4e:       |  |     |  |      0000                 unimp
d000bc50:       |  |     |  |      0000                 unimp
d000bc52:       |  |     |  |      0000                 unimp
d000bc54:       \--|-----|--|----> 73900413             li      s0,1849
d000bc58:          |     |  |  /-- a839                 j       d000bc76 <watchdog_init+0xa0>
d000bc5a:          \-----|--|--|-> b2866637             lui     a2,0xb2866
d000bc5e:                |  |  |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bc62:                +--|--|-- 04c59663             bne     a1,a2,d000bcae <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000bc66:                |  +--|-- 00c50663             beq     a0,a2,d000bc72 <watchdog_init+0x9c>
d000bc6a:                |  |  |   0000                 unimp
d000bc6c:                |  |  |   0000                 unimp
d000bc6e:                |  |  |   0000                 unimp
d000bc70:                |  |  |   0000                 unimp
d000bc72:                |  \--|-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:55
      break;
    default:
      HARDENED_UNREACHABLE();
  }

  uint32_t threshold = otp_read32(
d000bc76:                |     \-> 56000513             li      a0,1376
d000bc7a:                |         150020ef             jal     ra,d000ddca <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bc7e:                |         85aa                 mv      a1,a0
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:59
      OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_WATCHDOG_BITE_THRESHOLD_CYCLES_OFFSET);

  // Disable watchdog if `threshold` is less than minimum.
  if (launder32(threshold) < kWatchdogMinThreshold) {
d000bc80:                |  /----- e991                 bnez    a1,d000bc94 <watchdog_init+0xbe>
d000bc82:                |  |      4585                 li      a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:60
    HARDENED_CHECK_LT(threshold, kWatchdogMinThreshold);
d000bc84:                |  |  /-- 00b56663             bltu    a0,a1,d000bc90 <watchdog_init+0xba>
d000bc88:                |  |  |   0000                 unimp
d000bc8a:                |  |  |   0000                 unimp
d000bc8c:                |  |  |   0000                 unimp
d000bc8e:                |  |  |   0000                 unimp
d000bc90:                |  |  \-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:66
    enable = kHardenedBoolFalse;
  }

  watchdog_configure((watchdog_config_t){
      // 1.125 x bite_threshold
      .bark_threshold = (9 * threshold) / 8,
d000bc94:                |  \----> 00351593             slli    a1,a0,0x3
d000bc98:                |         95aa                 add     a1,a1,a0
d000bc9a:                |         818d                 srli    a1,a1,0x3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:64
  watchdog_configure((watchdog_config_t){
d000bc9c:                |         c42e                 sw      a1,8(sp)
d000bc9e:                |         c62a                 sw      a0,12(sp)
d000bca0:                |         c822                 sw      s0,16(sp)
d000bca2:                |         0028                 addi    a0,sp,8
d000bca4:                |         2809                 jal     d000bcb6 <watchdog_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:70
      .bite_threshold = threshold,
      .enable = enable,
  });
}
d000bca6:                |         4462                 lw      s0,24(sp)
d000bca8:                |         40f2                 lw      ra,28(sp)
d000bcaa:                |         6105                 addi    sp,sp,32
d000bcac:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:52
      HARDENED_UNREACHABLE();
d000bcae:                \-------> 0000                 unimp
d000bcb0:                          0000                 unimp
d000bcb2:                          0000                 unimp
d000bcb4:                          0000                 unimp

d000bcb6 <watchdog_configure>:
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:72

void watchdog_configure(watchdog_config_t config) {
d000bcb6:                 1141                  addi    sp,sp,-16
d000bcb8:                 c606                  sw      ra,12(sp)
d000bcba:                 c422                  sw      s0,8(sp)
d000bcbc:                 c226                  sw      s1,4(sp)
d000bcbe:                 842a                  mv      s0,a0
d000bcc0:                 c04004b7              lui     s1,0xc0400
d000bcc4:                 02c48513              addi    a0,s1,44 # c040002c <_stack_end+0xe03e002c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:75
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioConfigure, 4);
  // Tell pwrmgr we want watchdog reset events to reset the chip.
  sec_mmio_write32(
d000bcc8:                 4589                  li      a1,2
d000bcca:                 216020ef              jal     ra,d000dee0 <sec_mmio_write32>
d000bcce:                 4505                  li      a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bcd0:                 cc88                  sw      a0,24(s1)
d000bcd2:                 c04704b7              lui     s1,0xc0470
d000bcd6:                 01448513              addi    a0,s1,20 # c0470014 <_stack_end+0xe0450014>
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:83
          0, kTopEarlgreyPowerManagerResetRequestsAonTimerAonAonTimerRstReq,
          true));
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);

  // Set the watchdog bite and bark thresholds.
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000bcda:                 4581                  li      a1,0
d000bcdc:                 204020ef              jal     ra,d000dee0 <sec_mmio_write32>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bce0:                 0204a023              sw      zero,32(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:86
  abs_mmio_write32(kBase + AON_TIMER_WDOG_COUNT_REG_OFFSET, 0);
  abs_mmio_write32(kBase + AON_TIMER_WDOG_BARK_THOLD_REG_OFFSET,
                   config.bark_threshold);
d000bce4:                 4008                  lw      a0,0(s0)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bce6:                 cc88                  sw      a0,24(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:88
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
                   config.bite_threshold);
d000bce8:                 404c                  lw      a1,4(s0)
d000bcea:                 01c48513              addi    a0,s1,28
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:87
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
d000bcee:                 1f2020ef              jal     ra,d000dee0 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92

  // Enable or disable the watchdog as requested.
  uint32_t ctrl = kCtrlEnable;
  switch (launder32(config.enable)) {
d000bcf2:                 4408                  lw      a0,8(s0)
d000bcf4:                 1d400613              li      a2,468
d000bcf8:          /----- 00c51b63              bne     a0,a2,d000bd0e <watchdog_configure+0x58>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:98
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
      ctrl = kCtrlEnable;
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolFalse);
d000bcfc:          |      4408                  lw      a0,8(s0)
d000bcfe:          |      4581                  li      a1,0
d000bd00:          |  /-- 00c50663              beq     a0,a2,d000bd0c <watchdog_configure+0x56>
d000bd04:          |  |   0000                  unimp
d000bd06:          |  |   0000                  unimp
d000bd08:          |  |   0000                  unimp
d000bd0a:          |  |   0000                  unimp
d000bd0c:       /--|--\-X a829                  j       d000bd26 <watchdog_configure+0x70>
d000bd0e:       |  \----> 73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92
  switch (launder32(config.enable)) {
d000bd12:       |  /----- 02b51863              bne     a0,a1,d000bd42 <watchdog_configure+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:94
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
d000bd16:       |  |      4408                  lw      a0,8(s0)
d000bd18:       |  |  /-- 00b50663              beq     a0,a1,d000bd24 <watchdog_configure+0x6e>
d000bd1c:       |  |  |   0000                  unimp
d000bd1e:       |  |  |   0000                  unimp
d000bd20:       |  |  |   0000                  unimp
d000bd22:       |  |  |   0000                  unimp
d000bd24:       |  |  \-> 4585                  li      a1,1
d000bd26:       \--|----> c0470537              lui     a0,0xc0470
d000bd2a:          |      0551                  addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:104
      ctrl = kCtrlDisable;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, ctrl);
d000bd2c:          |      1b4020ef              jal     ra,d000dee0 <sec_mmio_write32>
d000bd30:          |      c0400537              lui     a0,0xc0400
d000bd34:          |      4585                  li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bd36:          |      cd0c                  sw      a1,24(a0)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:109

  // Redundantly re-request the pwrmgr configuration sync since it isn't
  // possible to use sec_mmio for it.
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);
}
d000bd38:          |      4492                  lw      s1,4(sp)
d000bd3a:          |      4422                  lw      s0,8(sp)
d000bd3c:          |      40b2                  lw      ra,12(sp)
d000bd3e:          |      0141                  addi    sp,sp,16
d000bd40:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:102
      HARDENED_UNREACHABLE();
d000bd42:          \----> 0000                  unimp
d000bd44:                 0000                  unimp
d000bd46:                 0000                  unimp
d000bd48:                 0000                  unimp

d000bd4a <watchdog_disable>:
watchdog_disable():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:111

void watchdog_disable(void) {
d000bd4a:       c0470537                lui     a0,0xc0470
d000bd4e:       0551                    addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:113
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioDisable, 1);
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000bd50:       4581                    li      a1,0
d000bd52:       18e0206f                j       d000dee0 <sec_mmio_write32>

d000bd56 <dif_spi_host_init>:
dif_spi_host_init():
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:19
#include "spi_host_regs.h"  // Generated.

OT_WARN_UNUSED_RESULT
dif_result_t dif_spi_host_init(mmio_region_t base_addr,
                               dif_spi_host_t *spi_host) {
  if (spi_host == NULL) {
d000bd56:       /----- c581                     beqz    a1,d000bd5e <dif_spi_host_init+0x8>
d000bd58:       |      4601                     li      a2,0
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:23
    return kDifBadArg;
  }

  spi_host->base_addr = base_addr;
d000bd5a:       |      c188                     sw      a0,0(a1)
d000bd5c:       |  /-- a011                     j       d000bd60 <dif_spi_host_init+0xa>
d000bd5e:       \--|-> 460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:26

  return kDifOk;
}
d000bd60:          \-> 8532                     mv      a0,a2
d000bd62:              8082                     ret

d000bd64 <dif_spi_host_fifo_write>:
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:156
  uint32_t val = read_32((const void *)srcaddr);
  mmio_region_write32(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, val);
}

dif_result_t dif_spi_host_fifo_write(const dif_spi_host_t *spi_host,
                                     const void *src, uint16_t len) {
d000bd64:                    468d                       li      a3,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:158
  uintptr_t ptr = (uintptr_t)src;
  if (spi_host == NULL || (src == NULL && len > 0)) {
d000bd66:       /----------- cd45                       beqz    a0,d000be1e <dif_spi_host_fifo_write+0xba>
d000bd68:       |            00b03733           snez    a4,a1
d000bd6c:       |            00163793           seqz    a5,a2
d000bd70:       |            8f5d                       or      a4,a4,a5
d000bd72:       +----------- c755                       beqz    a4,d000be1e <dif_spi_host_fifo_write+0xba>
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000bd74:       |            0035f693           andi    a3,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
    return kDifBadArg;
  }

  // If the pointer starts mis-aligned, write until we are aligned.
  while (misalignment32_of(ptr) && len > 0) {
d000bd78:       |            00d036b3           snez    a3,a3
d000bd7c:       |            00c03733           snez    a4,a2
d000bd80:       |            8ef9                       and     a3,a3,a4
d000bd82:       |  /-------- ce8d                       beqz    a3,d000bdbc <dif_spi_host_fifo_write+0x58>
d000bd84:       |  |         04800693           li      a3,72
d000bd88:       |  |         6741                       lui     a4,0x10
d000bd8a:       |  |         fff70813           addi    a6,a4,-1 # ffff <_stack_size+0xbfff>
d000bd8e:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
 * @param offset the offset to read at, in bytes.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t mmio_region_read32(mmio_region_t base, ptrdiff_t offset) {
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bd90:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000bd92:       |  |  |  |   0ff77713           andi    a4,a4,255
d000bd96:       |  |  |  \-- fed70de3           beq     a4,a3,d000bd90 <dif_spi_host_fifo_write+0x2c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000bd9a:       |  |  |      00058883           lb      a7,0(a1)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:165
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
d000bd9e:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:166
    len -= 1;
d000bda0:       |  |  |      167d                       addi    a2,a2,-1
d000bda2:       |  |  |      010672b3           and     t0,a2,a6
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
d000bda6:       |  |  |      0035f713           andi    a4,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
  while (misalignment32_of(ptr) && len > 0) {
d000bdaa:       |  |  |      00e03333           snez    t1,a4
d000bdae:       |  |  |      00503733           snez    a4,t0
d000bdb2:       |  |  |      00e37733           and     a4,t1,a4
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write8(mmio_region_t base, ptrdiff_t offset,
                               uint8_t value) {
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000bdb6:       |  |  |      03178423           sb      a7,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
d000bdba:       |  |  \----- fb71                       bnez    a4,d000bd8e <dif_spi_host_fifo_write+0x2a>
d000bdbc:       |  \-------> 66c1                       lui     a3,0x10
d000bdbe:       |            fff68893           addi    a7,a3,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  }

  // Write complete 32-bit words to the fifo.
  while (len > 3) {
d000bdc2:       |            01167733           and     a4,a2,a7
d000bdc6:       |            4791                       li      a5,4
d000bdc8:       |  /-------- 02f76363           bltu    a4,a5,d000bdee <dif_spi_host_fifo_write+0x8a>
d000bdcc:       |  |         04800713           li      a4,72
d000bdd0:       |  |         480d                       li      a6,3
d000bdd2:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bdd4:       |  |  |  /-> 4bd4                       lw      a3,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000bdd6:       |  |  |  |   0ff6f693           andi    a3,a3,255
d000bdda:       |  |  |  \-- fee68de3           beq     a3,a4,d000bdd4 <dif_spi_host_fifo_write+0x70>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000bdde:       |  |  |      4194                       lw      a3,0(a1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bde0:       |  |  |      d794                       sw      a3,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:173
    tx_fifo_write32(spi_host, ptr);
    ptr += 4;
    len -= 4;
d000bde2:       |  |  |      1671                       addi    a2,a2,-4
d000bde4:       |  |  |      011676b3           and     a3,a2,a7
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:172
    ptr += 4;
d000bde8:       |  |  |      0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  while (len > 3) {
d000bdea:       |  |  \----- fed864e3           bltu    a6,a3,d000bdd2 <dif_spi_host_fifo_write+0x6e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  }

  // Clean up any leftover bytes.
  while (len > 0) {
d000bdee:       |  \-------> 011676b3           and     a3,a2,a7
d000bdf2:       |  /-------- c68d                       beqz    a3,d000be1c <dif_spi_host_fifo_write+0xb8>
d000bdf4:       |  |         04800693           li      a3,72
d000bdf8:       |  |         6741                       lui     a4,0x10
d000bdfa:       |  |         fff70813           addi    a6,a4,-1 # ffff <_stack_size+0xbfff>
d000bdfe:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000be00:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000be02:       |  |  |  |   0ff77713           andi    a4,a4,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000be06:       |  |  |  \-- fed70de3           beq     a4,a3,d000be00 <dif_spi_host_fifo_write+0x9c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000be0a:       |  |  |      00058703           lb      a4,0(a1)
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000be0e:       |  |  |      02e78423           sb      a4,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:180
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
    len -= 1;
d000be12:       |  |  |      167d                       addi    a2,a2,-1
d000be14:       |  |  |      01067733           and     a4,a2,a6
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:179
    ptr += 1;
d000be18:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  while (len > 0) {
d000be1a:       |  |  \----- f375                       bnez    a4,d000bdfe <dif_spi_host_fifo_write+0x9a>
d000be1c:       |  \-------> 4681                       li      a3,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:184
  }

  return kDifOk;
}
d000be1e:       \----------> 8536                       mv      a0,a3
d000be20:                    8082                       ret

d000be22 <dif_spi_host_fifo_read>:
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:223
  queue->length -= 4;
  return val;
}

dif_result_t dif_spi_host_fifo_read(const dif_spi_host_t *spi_host, void *dst,
                                    uint16_t len) {
d000be22:                       7179                    addi    sp,sp,-48
d000be24:                       d606                    sw      ra,44(sp)
d000be26:                       d422                    sw      s0,40(sp)
d000be28:                       d226                    sw      s1,36(sp)
d000be2a:                       d04a                    sw      s2,32(sp)
d000be2c:                       ce4e                    sw      s3,28(sp)
d000be2e:                       cc52                    sw      s4,24(sp)
d000be30:                       ca56                    sw      s5,20(sp)
d000be32:                       892a                    mv      s2,a0
d000be34:                       450d                    li      a0,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:224
  if (spi_host == NULL || (dst == NULL && len > 0)) {
d000be36:       /-------------- 12090963                beqz    s2,d000bf68 <dif_spi_host_fifo_read+0x146>
d000be3a:       |               89b2                    mv      s3,a2
d000be3c:       |               84ae                    mv      s1,a1
d000be3e:       |               00b035b3                snez    a1,a1
d000be42:       |               00163613                seqz    a2,a2
d000be46:       |               8dd1                    or      a1,a1,a2
d000be48:       +-------------- 12058063                beqz    a1,d000bf68 <dif_spi_host_fifo_read+0x146>
d000be4c:       |               00003517                auipc   a0,0x3
d000be50:       |               abc50513                addi    a0,a0,-1348 # d000e908 <rom_printf.kHexTable+0x28>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  }

  uintptr_t ptr = (uintptr_t)dst;
  // We always have to read from the RXFIFO as a 32-bit word.  We use a
  // two-word queue to handle destination and length mis-alignments.
  queue_t queue = {0};
d000be54:       |               454c                    lw      a1,12(a0)
d000be56:       |               4510                    lw      a2,8(a0)
d000be58:       |               4154                    lw      a3,4(a0)
d000be5a:       |               c62e                    sw      a1,12(sp)
d000be5c:       |               6a41                    lui     s4,0x10
d000be5e:       |               c432                    sw      a2,8(sp)
d000be60:       |               c236                    sw      a3,4(sp)
d000be62:       |               4108                    lw      a0,0(a0)
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000be64:       |               0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235

  // If the buffer is misaligned, write a byte at a time until we reach
  // alignment.
  while (misalignment32_of(ptr) && len > 0) {
d000be68:       |               00b035b3                snez    a1,a1
d000be6c:       |               01303633                snez    a2,s3
d000be70:       |               8df1                    and     a1,a1,a2
d000be72:       |               f00a0413                addi    s0,s4,-256 # ff00 <_stack_size+0xbf00>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  queue_t queue = {0};
d000be76:       |               c02a                    sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000be78:       |  /----------- cdb1                    beqz    a1,d000bed4 <dif_spi_host_fifo_read+0xb2>
d000be7a:       |  |            4501                    li      a0,0
d000be7c:       |  |            fffa0a93                addi    s5,s4,-1
d000be80:       |  |     /----- 00a04b63                bgtz    a0,d000be96 <dif_spi_host_fifo_read+0x74>
d000be84:       |  |  /--|----> 00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000be88:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000be8a:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000be8c:       |  |  |  |  \-- ddf5                    beqz    a1,d000be88 <dif_spi_host_fifo_read+0x66>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000be8e:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:238
    if (queue.length < 1) {
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000be90:       |  |  |  |      850a                    mv      a0,sp
d000be92:       |  |  |  |      2259                    jal     d000c018 <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000be94:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000be96:       |  |  |  >----> 45b2                    lw      a1,12(sp)
d000be98:       |  |  |  |      4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000be9a:       |  |  |  |      00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000be9e:       |  |  |  |      01859713                slli    a4,a1,0x18
d000bea2:       |  |  |  |      8221                    srli    a2,a2,0x8
d000bea4:       |  |  |  |      8e59                    or      a2,a2,a4
d000bea6:       |  |  |  |      81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
inline void write_64(uint64_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_64()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint64_t));
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000bea8:       |  |  |  |      c62e                    sw      a1,12(sp)
d000beaa:       |  |  |  |      c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000beac:       |  |  |  |      157d                    addi    a0,a0,-1
d000beae:       |  |  |  |      c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:242
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000beb0:       |  |  |  |      00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:243
    ptr += 1;
d000beb4:       |  |  |  |      0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:244
    len -= 1;
d000beb6:       |  |  |  |      19fd                    addi    s3,s3,-1
d000beb8:       |  |  |  |      0159f533                and     a0,s3,s5
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000bebc:       |  |  |  |      0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000bec0:       |  |  |  |      00b035b3                snez    a1,a1
d000bec4:       |  |  |  |      00a03533                snez    a0,a0
d000bec8:       |  |  |  |      8d6d                    and     a0,a0,a1
d000beca:       |  +--|--|----- c509                    beqz    a0,d000bed4 <dif_spi_host_fifo_read+0xb2>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:236
    if (queue.length < 1) {
d000becc:       |  |  |  |      4502                    lw      a0,0(sp)
d000bece:       |  |  |  \----- fca044e3                bgtz    a0,d000be96 <dif_spi_host_fifo_read+0x74>
d000bed2:       |  |  \-------- bf4d                    j       d000be84 <dif_spi_host_fifo_read+0x62>
d000bed4:       |  \----------> fffa0513                addi    a0,s4,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  }

  // While we can write complete words to memory, operate on 4 bytes at a time.
  while (len > 3) {
d000bed8:       |               00a9f533                and     a0,s3,a0
d000bedc:       |               4591                    li      a1,4
d000bede:       |  /----------- 02b56e63                bltu    a0,a1,d000bf1a <dif_spi_host_fifo_read+0xf8>
d000bee2:       |  |            4a0d                    li      s4,3
d000bee4:       |  |            6541                    lui     a0,0x10
d000bee6:       |  |            fff50a93                addi    s5,a0,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:249
    if (queue.length < 4) {
d000beea:       |  |  /-------> 4502                    lw      a0,0(sp)
d000beec:       |  |  |  /----- 00aa4b63                blt     s4,a0,d000bf02 <dif_spi_host_fifo_read+0xe0>
d000bef0:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bef4:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000bef6:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000bef8:       |  |  |  |  \-- ddf5                    beqz    a1,d000bef4 <dif_spi_host_fifo_read+0xd2>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000befa:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:251
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000befc:       |  |  |  |      850a                    mv      a0,sp
d000befe:       |  |  |  |      2a29                    jal     d000c018 <enqueue_word>
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
  queue->length -= 4;
d000bf00:       |  |  |  |      4502                    lw      a0,0(sp)
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000bf02:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000bf04:       |  |  |         4622                    lw      a2,8(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000bf06:       |  |  |         c42e                    sw      a1,8(sp)
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
d000bf08:       |  |  |         1571                    addi    a0,a0,-4
d000bf0a:       |  |  |         c02a                    sw      a0,0(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000bf0c:       |  |  |         c090                    sw      a2,0(s1)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:256
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    write_32(dequeue_word(&queue), (void *)ptr);
    ptr += 4;
    len -= 4;
d000bf0e:       |  |  |         19f1                    addi    s3,s3,-4
d000bf10:       |  |  |         0159f533                and     a0,s3,s5
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:255
    ptr += 4;
d000bf14:       |  |  |         0491                    addi    s1,s1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  while (len > 3) {
d000bf16:       |  |  \-------- fcaa6ae3                bltu    s4,a0,d000beea <dif_spi_host_fifo_read+0xc8>
d000bf1a:       |  \----------> 6541                    lui     a0,0x10
d000bf1c:       |               fff50a13                addi    s4,a0,-1 # ffff <_stack_size+0xbfff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  }

  // Finish up any left over buffer a byte at a time.
  while (len > 0) {
d000bf20:       |               0149f533                and     a0,s3,s4
d000bf24:       |  /----------- c129                    beqz    a0,d000bf66 <dif_spi_host_fifo_read+0x144>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:261
    if (queue.length < 1) {
d000bf26:       |  |  /-------> 4502                    lw      a0,0(sp)
d000bf28:       |  |  |  /----- 00a04b63                bgtz    a0,d000bf3e <dif_spi_host_fifo_read+0x11c>
d000bf2c:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bf30:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000bf32:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000bf34:       |  |  |  |  \-- ddf5                    beqz    a1,d000bf30 <dif_spi_host_fifo_read+0x10e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bf36:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:263
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000bf38:       |  |  |  |      850a                    mv      a0,sp
d000bf3a:       |  |  |  |      28f9                    jal     d000c018 <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000bf3c:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000bf3e:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000bf40:       |  |  |         4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000bf42:       |  |  |         00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000bf46:       |  |  |         01859713                slli    a4,a1,0x18
d000bf4a:       |  |  |         8221                    srli    a2,a2,0x8
d000bf4c:       |  |  |         8e59                    or      a2,a2,a4
d000bf4e:       |  |  |         81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000bf50:       |  |  |         c62e                    sw      a1,12(sp)
d000bf52:       |  |  |         c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000bf54:       |  |  |         157d                    addi    a0,a0,-1
d000bf56:       |  |  |         c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:267
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000bf58:       |  |  |         00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:269
    ptr += 1;
    len -= 1;
d000bf5c:       |  |  |         19fd                    addi    s3,s3,-1
d000bf5e:       |  |  |         0149f533                and     a0,s3,s4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:268
    ptr += 1;
d000bf62:       |  |  |         0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  while (len > 0) {
d000bf64:       |  |  \-------- f169                    bnez    a0,d000bf26 <dif_spi_host_fifo_read+0x104>
d000bf66:       |  \----------> 4501                    li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:273
  }

  return kDifOk;
}
d000bf68:       \-------------> 4ad2                    lw      s5,20(sp)
d000bf6a:                       4a62                    lw      s4,24(sp)
d000bf6c:                       49f2                    lw      s3,28(sp)
d000bf6e:                       5902                    lw      s2,32(sp)
d000bf70:                       5492                    lw      s1,36(sp)
d000bf72:                       5422                    lw      s0,40(sp)
d000bf74:                       50b2                    lw      ra,44(sp)
d000bf76:                       6145                    addi    sp,sp,48
d000bf78:                       8082                    ret

d000bf7a <dif_spi_host_configure>:
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:66
                                    dif_spi_host_config_t config) {
d000bf7a:              460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:67
  if (spi_host == NULL) {
d000bf7c:       /----- cd35                     beqz    a0,d000bff8 <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:70
  if (config.peripheral_clock_freq_hz == 0 || config.spi_clock == 0) {
d000bf7e:       |      41d4                     lw      a3,4(a1)
d000bf80:       +----- cea5                     beqz    a3,d000bff8 <dif_spi_host_configure+0x7e>
d000bf82:       |      4198                     lw      a4,0(a1)
d000bf84:       +----- cb35                     beqz    a4,d000bff8 <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:75
      ((config.peripheral_clock_freq_hz / config.spi_clock) / 2) - 1;
d000bf86:       |      02e6d6b3                 divu    a3,a3,a4
d000bf8a:       |      8285                     srli    a3,a3,0x1
d000bf8c:       |      16fd                     addi    a3,a3,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:76
  if (divider & ~SPI_HOST_CONFIGOPTS_CLKDIV_0_MASK) {
d000bf8e:       |      0106d713                 srli    a4,a3,0x10
d000bf92:       +----- e33d                     bnez    a4,d000bff8 <dif_spi_host_configure+0x7e>
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:32
  mmio_region_write32(
d000bf94:       |      4110                     lw      a2,0(a0)
d000bf96:       |      40000737                 lui     a4,0x40000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bf9a:       |      ca18                     sw      a4,16(a2)
d000bf9c:       |      4110                     lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bf9e:       |  /-> 4a5c                     lw      a5,20(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000bfa0:       |  |   8ff9                     and     a5,a5,a4
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:42
  } while (active);
d000bfa2:       |  \-- fff5                     bnez    a5,d000bf9e <dif_spi_host_configure+0x24>
d000bfa4:       |      6741                     lui     a4,0x10
d000bfa6:       |      177d                     addi    a4,a4,-1
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bfa8:       |  /-> 4a5c                     lw      a5,20(a2)
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:51
  } while (txqd != 0 || rxqd != 0);
d000bfaa:       |  |   8ff9                     and     a5,a5,a4
d000bfac:       |  \-- fff5                     bnez    a5,d000bfa8 <dif_spi_host_configure+0x2e>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bfae:       |      00062823                 sw      zero,16(a2)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfb2:       |      00858603                 lb      a2,8(a1) # 80000008 <_stack_end+0x9ffe0008>
d000bfb6:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bfb8:       |      0672                     slli    a2,a2,0x1c
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfba:       |      00958703                 lb      a4,9(a1)
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bfbe:       |      8231                     srli    a2,a2,0xc
d000bfc0:       |      8e55                     or      a2,a2,a3
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:89
                               config.chip_select.lead);
d000bfc2:       |      00a5c683                 lbu     a3,10(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
d000bfc6:       |      0772                     slli    a4,a4,0x1c
d000bfc8:       |      8321                     srli    a4,a4,0x8
d000bfca:       |      8e59                     or      a2,a2,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfcc:       |      8abd                     andi    a3,a3,15
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bfce:       |      00b58703                 lb      a4,11(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfd2:       |      06e2                     slli    a3,a3,0x18
d000bfd4:       |      8e55                     or      a2,a2,a3
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bfd6:       |      00c58683                 lb      a3,12(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfda:       |      0776                     slli    a4,a4,0x1d
d000bfdc:       |      8e59                     or      a2,a2,a4
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bfde:       |      00d58583                 lb      a1,13(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfe2:       |      06fa                     slli    a3,a3,0x1e
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:94
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CONFIGOPTS_REG_OFFSET, reg);
d000bfe4:       |      4118                     lw      a4,0(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bfe6:       |      8e55                     or      a2,a2,a3
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bfe8:       |      05fe                     slli    a1,a1,0x1f
d000bfea:       |      8dd1                     or      a1,a1,a2
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000bfec:       |      cf0c                     sw      a1,24(a4)
spi_host_enable():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:60
  mmio_region_write32(
d000bfee:       |      4108                     lw      a0,0(a0)
d000bff0:       |      4601                     li      a2,0
d000bff2:       |      800005b7                 lui     a1,0x80000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000bff6:       |      c90c                     sw      a1,16(a0)
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:97
}
d000bff8:       \----> 8532                     mv      a0,a2
d000bffa:              8082                     ret

d000bffc <dif_spi_host_output_set_enabled>:
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:101
  if (spi_host == NULL) {
d000bffc:       /-- cd01                        beqz    a0,d000c014 <dif_spi_host_output_set_enabled+0x18>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:106
      mmio_region_read32(spi_host->base_addr, SPI_HOST_CONTROL_REG_OFFSET);
d000bffe:       |   4110                        lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c000:       |   4a14                        lw      a3,16(a2)
d000c002:       |   4501                        li      a0,0
d000c004:       |   e0000737            lui     a4,0xe0000
d000c008:       |   177d                        addi    a4,a4,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000c00a:       |   8ef9                        and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c00c:       |   05f6                        slli    a1,a1,0x1d
d000c00e:       |   8dd5                        or      a1,a1,a3
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c010:       |   ca0c                        sw      a1,16(a2)
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:112
}
d000c012:       |   8082                        ret
d000c014:       \-> 450d                        li      a0,3
d000c016:           8082                        ret

d000c018 <enqueue_word>:
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:196
  if (queue->length % sizeof(uint32_t) == 0) {
d000c018:              4110                     lw      a2,0(a0)
d000c01a:              00367693                 andi    a3,a2,3
d000c01e:       /----- c29d                     beqz    a3,d000c044 <enqueue_word+0x2c>
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c020:       |      00160693                 addi    a3,a2,1
d000c024:       |      c114                     sw      a3,0(a0)
d000c026:       |      962a                     add     a2,a2,a0
d000c028:       |      00b60423                 sb      a1,8(a2)
d000c02c:       |      460d                     li      a2,3
d000c02e:       |  /-> 4114                     lw      a3,0(a0)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:202
      data >>= 8;
d000c030:       |  |   81a1                     srli    a1,a1,0x8
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c032:       |  |   00168713                 addi    a4,a3,1
d000c036:       |  |   c118                     sw      a4,0(a0)
d000c038:       |  |   96aa                     add     a3,a3,a0
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000c03a:       |  |   167d                     addi    a2,a2,-1
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000c03c:       |  |   00b68423                 sb      a1,8(a3)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000c040:       |  \-- f67d                     bnez    a2,d000c02e <enqueue_word+0x16>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000c042:       |      8082                     ret
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:197
    write_32(data, queue->data + queue->length);
d000c044:       \----> 962a                     add     a2,a2,a0
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000c046:              c60c                     sw      a1,8(a2)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:198
    queue->length += 4;
d000c048:              410c                     lw      a1,0(a0)
d000c04a:              0591                     addi    a1,a1,4
d000c04c:              c10c                     sw      a1,0(a0)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000c04e:              8082                     ret

d000c050 <dif_spi_host_transaction>:
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:362
}

dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
                                      uint32_t csid,
                                      dif_spi_host_segment_t *segments,
                                      size_t length) {
d000c050:                          7139                 addi    sp,sp,-64
d000c052:                          de06                 sw      ra,60(sp)
d000c054:                          dc22                 sw      s0,56(sp)
d000c056:                          da26                 sw      s1,52(sp)
d000c058:                          d84a                 sw      s2,48(sp)
d000c05a:                          d64e                 sw      s3,44(sp)
d000c05c:                          d452                 sw      s4,40(sp)
d000c05e:                          d256                 sw      s5,36(sp)
d000c060:                          d05a                 sw      s6,32(sp)
d000c062:                          ce5e                 sw      s7,28(sp)
d000c064:                          cc62                 sw      s8,24(sp)
d000c066:                          ca66                 sw      s9,20(sp)
d000c068:                          c86a                 sw      s10,16(sp)
d000c06a:                          c66e                 sw      s11,12(sp)
d000c06c:                          8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:364
  // Write to chip select ID.
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CSID_REG_OFFSET, csid);
d000c06e:                          4108                 lw      a0,0(a0)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c070:                          cd4c                 sw      a1,28(a0)
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368

  // For each segment, write the segment information to the
  // COMMAND register and transmit FIFO.
  for (size_t i = 0; i < length; ++i) {
d000c072:       /----------------- 1a068463             beqz    a3,d000c21a <dif_spi_host_transaction+0x1ca>
d000c076:       |                  8d36                 mv      s10,a3
d000c078:       |                  8932                 mv      s2,a2
d000c07a:       |                  4401                 li      s0,0
d000c07c:       |                  fff68a93             addi    s5,a3,-1
d000c080:       |                  0016b513             seqz    a0,a3
d000c084:       |                  c02a                 sw      a0,0(sp)
d000c086:       |                  6505                 lui     a0,0x1
d000c088:       |                  c0050b13             addi    s6,a0,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000c08c:       |                  4851                 li      a6,20
d000c08e:       |                  4c15                 li      s8,5
d000c090:       |                  00003c97             auipc   s9,0x3
d000c094:       |                  860c8c93             addi    s9,s9,-1952 # d000e8f0 <rom_printf.kHexTable+0x10>
d000c098:       |                  04800493             li      s1,72
d000c09c:       |                  6541                 lui     a0,0x10
d000c09e:       |                  f0050593             addi    a1,a0,-256 # ff00 <_stack_size+0xbf00>
d000c0a2:       |                  c22e                 sw      a1,4(sp)
d000c0a4:       |                  157d                 addi    a0,a0,-1
d000c0a6:       |                  c42a                 sw      a0,8(sp)
d000c0a8:       |        /-------> 000a2503             lw      a0,0(s4)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c0ac:       |        |     /-> 494c                 lw      a1,20(a0)
wait_ready():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:120
  } while (!ready);
d000c0ae:       |        |     \-- fe05dfe3             bgez    a1,d000c0ac <dif_spi_host_transaction+0x5c>
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:372
    bool last_segment = i == length - 1;
    wait_ready(spi_host);
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000c0b2:       |        |         030405b3             mul     a1,s0,a6
d000c0b6:       |        |         95ca                 add     a1,a1,s2
d000c0b8:       |        |         4190                 lw      a2,0(a1)
d000c0ba:       |  /-----|-------- 18cc6063             bltu    s8,a2,d000c23a <dif_spi_host_transaction+0x1ea>
d000c0be:       |  |     |         060a                 slli    a2,a2,0x2
d000c0c0:       |  |     |         9666                 add     a2,a2,s9
d000c0c2:       |  |     |         4210                 lw      a2,0(a2)
d000c0c4:       |  |     |         015446b3             xor     a3,s0,s5
d000c0c8:       |  |     |         0016bd93             seqz    s11,a3
d000c0cc:       |  |     |         8602                 jr      a2
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c0ce:       |  |     |     /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c0d0:       |  |     |     |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c0d4:       |  |     |     \-- fe960de3             beq     a2,s1,d000c0ce <dif_spi_host_transaction+0x7e>
issue_opcode():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:292
                     segment->opcode);
d000c0d8:       |  |     |         00458583             lb      a1,4(a1) # 3004 <_static_critical_size+0x1040>
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000c0dc:       |  |     |         02b50423             sb      a1,40(a0)
d000c0e0:       |  |     |         6589                 lui     a1,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c0e2:       |  |     |     /-- 000d9463             bnez    s11,d000c0ea <dif_spi_host_transaction+0x9a>
d000c0e6:       |  |     |     |   20058593             addi    a1,a1,512 # 2200 <_static_critical_size+0x23c>
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c0ea:       |  |     |     \-> 000a2503             lw      a0,0(s4)
d000c0ee:       |  |     |  /----- a0c5                 j       d000c1ce <dif_spi_host_transaction+0x17e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c0f0:       |  |     |  |  /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c0f2:       |  |     |  |  |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c0f6:       |  |     |  |  \-- fe960de3             beq     a2,s1,d000c0f0 <dif_spi_host_transaction+0xa0>
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:301
  uint32_t address = bitfield_byteswap32(segment->address.address);
d000c0fa:       |  |     |  |      45d4                 lw      a3,12(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
  return __builtin_bswap32(bitfield);
d000c0fc:       |  |     |  |      0086d613             srli    a2,a3,0x8
d000c100:       |  |     |  |      4712                 lw      a4,4(sp)
d000c102:       |  |     |  |      8e79                 and     a2,a2,a4
d000c104:       |  |     |  |      0186d713             srli    a4,a3,0x18
d000c108:       |  |     |  |      8f51                 or      a4,a4,a2
d000c10a:       |  |     |  |      00869793             slli    a5,a3,0x8
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c10e:       |  |     |  |      0085a883             lw      a7,8(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
d000c112:       |  |     |  |      00ff0637             lui     a2,0xff0
d000c116:       |  |     |  |      8ff1                 and     a5,a5,a2
d000c118:       |  |     |  |      06e2                 slli    a3,a3,0x18
d000c11a:       |  |     |  |      8edd                 or      a3,a3,a5
d000c11c:       |  |     |  |      8ed9                 or      a3,a3,a4
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
d000c11e:       |  |     |  |      4605                 li      a2,1
d000c120:       |  |     |  |  /-- 00c88363             beq     a7,a2,d000c126 <dif_spi_host_transaction+0xd6>
d000c124:       |  |     |  |  |   82a1                 srli    a3,a3,0x8
d000c126:       |  |     |  |  \-> 6709                 lui     a4,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c128:       |  |     |  |  /-- 000d9463             bnez    s11,d000c130 <dif_spi_host_transaction+0xe0>
d000c12c:       |  |     |  |  |   20070713             addi    a4,a4,512 # 2200 <_static_critical_size+0x23c>
d000c130:       |  |     |  |  \-> d514                 sw      a3,40(a0)
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:313
  write_command_reg(spi_host, length, segment->address.width,
d000c132:       |  |     |  |      41c8                 lw      a0,4(a1)
d000c134:       |  |     |  |      fff88593             addi    a1,a7,-1
d000c138:       |  |     |  |      0015b593             seqz    a1,a1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c13c:       |  |     |  |      8dd9                 or      a1,a1,a4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c13e:       |  |     |  |      00a51613             slli    a2,a0,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c142:       |  |     |  |      000a2503             lw      a0,0(s4)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c146:       |  |     |  |      01667633             and     a2,a2,s6
d000c14a:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c14c:       |  |     |  |      0025e593             ori     a1,a1,2
d000c150:       |  |     |  +----- a8bd                 j       d000c1ce <dif_spi_host_transaction+0x17e>
issue_dummy():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:319
  write_command_reg(spi_host, segment->dummy.length, segment->dummy.width,
d000c152:       |  |     |  |      4590                 lw      a2,8(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c154:       |  |     |  |      167d                 addi    a2,a2,-1
d000c156:       |  |     |  |      1ff67613             andi    a2,a2,511
d000c15a:       |  |     |  |  /-- 000d9463             bnez    s11,d000c162 <dif_spi_host_transaction+0x112>
d000c15e:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c162:       |  |     |  |  \-> 41cc                 lw      a1,4(a1)
d000c164:       |  |     |  |      05aa                 slli    a1,a1,0xa
d000c166:       |  |     |  |      0165f5b3             and     a1,a1,s6
d000c16a:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c16c:       |  |     |  +----- a08d                 j       d000c1ce <dif_spi_host_transaction+0x17e>
issue_data_phase():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:332
      width = segment->tx.width;
d000c16e:       |  |     |  |      0045a983             lw      s3,4(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:333
      length = segment->tx.length;
d000c172:       |  |     |  |      00c5ab83             lw      s7,12(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:335
      spi_host_fifo_write_alias(spi_host, segment->tx.buf, segment->tx.length);
d000c176:       |  |     |  |      458c                 lw      a1,8(a1)
d000c178:       |  |     |  |      4522                 lw      a0,8(sp)
d000c17a:       |  |     |  |      00abf633             and     a2,s7,a0
d000c17e:       |  |     |  |      8552                 mv      a0,s4
d000c180:       |  |     |  |      be5ff0ef             jal     ra,d000bd64 <dif_spi_host_fifo_write>
d000c184:       |  |     |  |      6589                 lui     a1,0x2
d000c186:       |  |     |  |  /-- a01d                 j       d000c1ac <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:345
      width = segment->rx.width;
d000c188:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 2004 <_static_critical_size+0x40>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:346
      length = segment->rx.length;
d000c18c:       |  |     |  |  |   00c5ab83             lw      s7,12(a1)
d000c190:       |  |     |  |  |   6585                 lui     a1,0x1
d000c192:       |  |     |  |  +-- a829                 j       d000c1ac <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:338
      width = segment->bidir.width;
d000c194:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 1004 <_epmp_reset_rx_size+0x804>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:339
      length = segment->bidir.length;
d000c198:       |  |     |  |  |   0105ab83             lw      s7,16(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:341
      spi_host_fifo_write_alias(spi_host, segment->bidir.txbuf,
d000c19c:       |  |     |  |  |   458c                 lw      a1,8(a1)
d000c19e:       |  |     |  |  |   4522                 lw      a0,8(sp)
d000c1a0:       |  |     |  |  |   00abf633             and     a2,s7,a0
d000c1a4:       |  |     |  |  |   8552                 mv      a0,s4
d000c1a6:       |  |     |  |  |   bbfff0ef             jal     ra,d000bd64 <dif_spi_host_fifo_write>
d000c1aa:       |  |     |  |  |   658d                 lui     a1,0x3
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c1ac:       |  |     |  |  \-> fffb8513             addi    a0,s7,-1
d000c1b0:       |  |     |  |      1ff57613             andi    a2,a0,511
d000c1b4:       |  |     |  |  /-- 000d9463             bnez    s11,d000c1bc <dif_spi_host_transaction+0x16c>
d000c1b8:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c1bc:       |  |     |  |  \-> 4851                 li      a6,20
d000c1be:       |  |     |  |      00a99693             slli    a3,s3,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c1c2:       |  |     |  |      000a2503             lw      a0,0(s4)
d000c1c6:       |  |     |  |      0166f6b3             and     a3,a3,s6
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c1ca:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c1cc:       |  |     |  |      8dd5                 or      a1,a1,a3
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368
  for (size_t i = 0; i < length; ++i) {
d000c1ce:       |  |     |  \----> 0405                 addi    s0,s0,1
d000c1d0:       |  |     |         d10c                 sw      a1,32(a0)
d000c1d2:       |  |     \-------- eda41be3             bne     s0,s10,d000c0a8 <dif_spi_host_transaction+0x58>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
        return kDifBadArg;
    }
  }

  // For each segment which receives data, read from the receive FIFO.
  for (size_t i = 0; i < length; ++i) {
d000c1d6:       |  |               4502                 lw      a0,0(sp)
d000c1d8:       +--|-------------- e129                 bnez    a0,d000c21a <dif_spi_host_transaction+0x1ca>
d000c1da:       |  |               4401                 li      s0,0
d000c1dc:       |  |               00c90493             addi    s1,s2,12
d000c1e0:       |  |               4995                 li      s3,5
d000c1e2:       |  |               4a91                 li      s5,4
d000c1e4:       |  |               4b51                 li      s6,20
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:399
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000c1e6:       |  |  /----------> ff44a503             lw      a0,-12(s1)
d000c1ea:       |  |  |     /----- 01350b63             beq     a0,s3,d000c200 <dif_spi_host_transaction+0x1b0>
d000c1ee:       |  |  |  /--|----- 03551163             bne     a0,s5,d000c210 <dif_spi_host_transaction+0x1c0>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:401
      case kDifSpiHostSegmentTypeRx:
        spi_host_fifo_read_alias(spi_host, segment->rx.buf, segment->rx.length);
d000c1f2:       |  |  |  |  |      03640533             mul     a0,s0,s6
d000c1f6:       |  |  |  |  |      954a                 add     a0,a0,s2
d000c1f8:       |  |  |  |  |      00850593             addi    a1,a0,8
d000c1fc:       |  |  |  |  |      0531                 addi    a0,a0,12
d000c1fe:       |  |  |  |  |  /-- a021                 j       d000c206 <dif_spi_host_transaction+0x1b6>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:406
        break;
      case kDifSpiHostSegmentTypeBidirectional:
        spi_host_fifo_read_alias(spi_host, segment->bidir.rxbuf,
                                 segment->bidir.length);
        break;
d000c200:       |  |  |  |  \--|-> 00448513             addi    a0,s1,4
d000c204:       |  |  |  |     |   85a6                 mv      a1,s1
d000c206:       |  |  |  |     \-> 418c                 lw      a1,0(a1)
d000c208:       |  |  |  |         00055603             lhu     a2,0(a0)
d000c20c:       |  |  |  |         8552                 mv      a0,s4
d000c20e:       |  |  |  |         3911                 jal     d000be22 <dif_spi_host_fifo_read>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
  for (size_t i = 0; i < length; ++i) {
d000c210:       |  |  |  \-------> 0405                 addi    s0,s0,1
d000c212:       |  |  |            1d7d                 addi    s10,s10,-1
d000c214:       |  |  |            04d1                 addi    s1,s1,20
d000c216:       |  |  \----------- fc0d18e3             bnez    s10,d000c1e6 <dif_spi_host_transaction+0x196>
d000c21a:       \--|-------------> 4501                 li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:412
      default:
          /* do nothing */;
    }
  }
  return kDifOk;
}
d000c21c:          |           /-> 4db2                 lw      s11,12(sp)
d000c21e:          |           |   4d42                 lw      s10,16(sp)
d000c220:          |           |   4cd2                 lw      s9,20(sp)
d000c222:          |           |   4c62                 lw      s8,24(sp)
d000c224:          |           |   4bf2                 lw      s7,28(sp)
d000c226:          |           |   5b02                 lw      s6,32(sp)
d000c228:          |           |   5a92                 lw      s5,36(sp)
d000c22a:          |           |   5a22                 lw      s4,40(sp)
d000c22c:          |           |   59b2                 lw      s3,44(sp)
d000c22e:          |           |   5942                 lw      s2,48(sp)
d000c230:          |           |   54d2                 lw      s1,52(sp)
d000c232:          |           |   5462                 lw      s0,56(sp)
d000c234:          |           |   50f2                 lw      ra,60(sp)
d000c236:          |           |   6121                 addi    sp,sp,64
d000c238:          |           |   8082                 ret
d000c23a:          \-----------|-> 450d                 li      a0,3
d000c23c:                      \-- b7c5                 j       d000c21c <dif_spi_host_transaction+0x1cc>

d000c23e <test_status_set>:
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
d000c23e:                    1101                       addi    sp,sp,-32
d000c240:                    ce06                       sw      ra,28(sp)
d000c242:                    65b1                       lui     a1,0xc
d000c244:                    aad58593           addi    a1,a1,-1363 # baad <_stack_size+0x7aad>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:26
  switch (test_status) {
d000c248:             /----- 02b50063           beq     a0,a1,d000c268 <test_status_set+0x2a>
d000c24c:             |      65a5                       lui     a1,0x9
d000c24e:             |      05b5                       addi    a1,a1,13
d000c250:          /--|----- 02b50d63           beq     a0,a1,d000c28a <test_status_set+0x4c>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c254:          |  |      00003597           auipc   a1,0x3
d000c258:          |  |      43858593           addi    a1,a1,1080 # d000f68c <kDeviceTestStatusAddress>
d000c25c:          |  |      418c                       lw      a1,0(a1)
d000c25e:          |  |  /-- c191                       beqz    a1,d000c262 <test_status_set+0x24>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c260:          |  |  |   c188                       sw      a0,0(a1)
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
d000c262:          |  |  \-> 40f2                       lw      ra,28(sp)
d000c264:          |  |      6105                       addi    sp,sp,32
d000c266:          |  |      8082                       ret
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c268:          |  \----> 00003517           auipc   a0,0x3
d000c26c:          |         42850513           addi    a0,a0,1064 # d000f690 <kDeviceLogBypassUartAddress>
d000c270:          |         4108                       lw      a0,0(a0)
d000c272:          |  /----- ed0d                       bnez    a0,d000c2ac <test_status_set+0x6e>
d000c274:          |  |      00002597           auipc   a1,0x2
d000c278:          |  |      6f458593           addi    a1,a1,1780 # d000e968 <rom_printf.kHexTable+0x88>
d000c27c:          |  |      0028                       addi    a0,sp,8
d000c27e:          |  |      4651                       li      a2,20
d000c280:          |  |      5b7010ef           jal     ra,d000e036 <memcpy>
d000c284:          |  |      0028                       addi    a0,sp,8
d000c286:          |  |      2095                       jal     d000c2ea <base_log_internal_core>
d000c288:          |  |  /-- a035                       j       d000c2b4 <test_status_set+0x76>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c28a:          \--|--|-> 00003517           auipc   a0,0x3
d000c28e:             |  |   40650513           addi    a0,a0,1030 # d000f690 <kDeviceLogBypassUartAddress>
d000c292:             |  |   4108                       lw      a0,0(a0)
d000c294:       /-----|--|-- e915                       bnez    a0,d000c2c8 <test_status_set+0x8a>
d000c296:       |     |  |   00002597           auipc   a1,0x2
d000c29a:       |     |  |   6be58593           addi    a1,a1,1726 # d000e954 <rom_printf.kHexTable+0x74>
d000c29e:       |     |  |   0028                       addi    a0,sp,8
d000c2a0:       |     |  |   4651                       li      a2,20
d000c2a2:       |     |  |   595010ef           jal     ra,d000e036 <memcpy>
d000c2a6:       |     |  |   0028                       addi    a0,sp,8
d000c2a8:       |     |  |   2089                       jal     d000c2ea <base_log_internal_core>
d000c2aa:       |  /--|--|-- a01d                       j       d000c2d0 <test_status_set+0x92>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c2ac:       |  |  \--|-> 07800513           li      a0,120
d000c2b0:       |  |     |   4581                       li      a1,0
d000c2b2:       |  |     |   28e9                       jal     d000c38c <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c2b4:       |  |     \-> 00003517           auipc   a0,0x3
d000c2b8:       |  |         3d850513           addi    a0,a0,984 # d000f68c <kDeviceTestStatusAddress>
d000c2bc:       |  |         4108                       lw      a0,0(a0)
d000c2be:       |  |  /----- c115                       beqz    a0,d000c2e2 <test_status_set+0xa4>
d000c2c0:       |  |  |      65b1                       lui     a1,0xc
d000c2c2:       |  |  |      aad58593           addi    a1,a1,-1363 # baad <_stack_size+0x7aad>
d000c2c6:       |  |  |  /-- a829                       j       d000c2e0 <test_status_set+0xa2>
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c2c8:       \--|--|--|-> 06400513           li      a0,100
d000c2cc:          |  |  |   4581                       li      a1,0
d000c2ce:          |  |  |   287d                       jal     d000c38c <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c2d0:          \--|--|-> 00003517           auipc   a0,0x3
d000c2d4:             |  |   3bc50513           addi    a0,a0,956 # d000f68c <kDeviceTestStatusAddress>
d000c2d8:             |  |   4108                       lw      a0,0(a0)
d000c2da:             +--|-- c501                       beqz    a0,d000c2e2 <test_status_set+0xa4>
d000c2dc:             |  |   65a5                       lui     a1,0x9
d000c2de:             |  |   05b5                       addi    a1,a1,13
d000c2e0:             |  \-> c10c                       sw      a1,0(a0)
d000c2e2:             \----> 2009                       jal     d000c2e4 <abort>

d000c2e4 <abort>:
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
d000c2e4:       /-> 10500073            wfi
abort():
/proc/self/cwd/sw/device/lib/runtime/hart.c:21
  while ((ibex_mcycle_read() - start) < cycles) {
  }
}

noreturn void abort(void) {
  while (true) {
d000c2e8:       \-- bff5                        j       d000c2e4 <abort>

d000c2ea <base_log_internal_core>:
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
d000c2ea:              7179                     addi    sp,sp,-48
d000c2ec:              c606                     sw      ra,12(sp)
d000c2ee:              c422                     sw      s0,8(sp)
d000c2f0:              c226                     sw      s1,4(sp)
d000c2f2:              842a                     mv      s0,a0
d000c2f4:              d646                     sw      a7,44(sp)
d000c2f6:              d442                     sw      a6,40(sp)
d000c2f8:              d23e                     sw      a5,36(sp)
d000c2fa:              d03a                     sw      a4,32(sp)
d000c2fc:              ce36                     sw      a3,28(sp)
d000c2fe:              cc32                     sw      a2,24(sp)
d000c300:              ca2e                     sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
d000c302:              4148                     lw      a0,4(a0)
d000c304:              800005b7                 lui     a1,0x80000
d000c308:              fff58613                 addi    a2,a1,-1 # 7fffffff <_stack_end+0x9ffdffff>
d000c30c:              4581                     li      a1,0
d000c30e:              6bd010ef                 jal     ra,d000e1ca <memchr>
d000c312:              4054                     lw      a3,4(s0)
d000c314:              40d50633                 sub     a2,a0,a3
/proc/self/cwd/sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
d000c318:              02f00593                 li      a1,47
d000c31c:              8536                     mv      a0,a3
d000c31e:              75b010ef                 jal     ra,d000e278 <memrchr>
/proc/self/cwd/sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
d000c322:       /----- c501                     beqz    a0,d000c32a <base_log_internal_core+0x40>
/proc/self/cwd/sw/device/lib/runtime/log.c:54
    base_name = log.file_name;
  } else {
    ++base_name;  // Remove the final '/'.
d000c324:       |      00150693                 addi    a3,a0,1
d000c328:       |  /-- a011                     j       d000c32c <base_log_internal_core+0x42>
/proc/self/cwd/sw/device/lib/runtime/log.c:52
    base_name = log.file_name;
d000c32a:       \--|-> 4054                     lw      a3,4(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c32c:          \-> 4008                     lw      a0,0(s0)
d000c32e:              458d                     li      a1,3
stringify_severity():
/proc/self/cwd/sw/device/lib/runtime/log.c:27
  switch (severity) {
d000c330:       /----- 00a5ea63                 bltu    a1,a0,d000c344 <base_log_internal_core+0x5a>
d000c334:       |      050a                     slli    a0,a0,0x2
d000c336:       |      00002597                 auipc   a1,0x2
d000c33a:       |      66258593                 addi    a1,a1,1634 # d000e998 <rom_printf.kHexTable+0xb8>
d000c33e:       |      952e                     add     a0,a0,a1
d000c340:       |      410c                     lw      a1,0(a0)
d000c342:       |  /-- a029                     j       d000c34c <base_log_internal_core+0x62>
d000c344:       \--|-> 00002597                 auipc   a1,0x2
d000c348:          |   64f58593                 addi    a1,a1,1615 # d000e993 <rom_printf.kHexTable+0xb3>
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
d000c34c:          \-> 0fff6497                 auipc   s1,0xfff6
d000c350:              d0448493                 addi    s1,s1,-764 # e0002050 <base_log_internal_core.global_log_counter>
d000c354:              0004d603                 lhu     a2,0(s1)
d000c358:              4418                     lw      a4,8(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c35a:              00002517                 auipc   a0,0x2
d000c35e:              62250513                 addi    a0,a0,1570 # d000e97c <rom_printf.kHexTable+0x9c>
d000c362:              208d                     jal     d000c3c4 <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:64
  ++global_log_counter;
d000c364:              00049503                 lh      a0,0(s1)
d000c368:              0505                     addi    a0,a0,1
d000c36a:              00a49023                 sh      a0,0(s1)
d000c36e:              0848                     addi    a0,sp,20
/proc/self/cwd/sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
d000c370:              c02a                     sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
d000c372:              4808                     lw      a0,16(s0)
d000c374:              084c                     addi    a1,sp,20
d000c376:              2041                     jal     d000c3f6 <base_vprintf>
/proc/self/cwd/sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
d000c378:              00002517                 auipc   a0,0x2
d000c37c:              44850513                 addi    a0,a0,1096 # d000e7c0 <_text_end+0x1ec>
d000c380:              2091                     jal     d000c3c4 <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:72
}
d000c382:              4492                     lw      s1,4(sp)
d000c384:              4422                     lw      s0,8(sp)
d000c386:              40b2                     lw      ra,12(sp)
d000c388:              6145                     addi    sp,sp,48
d000c38a:              8082                     ret

d000c38c <base_log_internal_dv>:
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
d000c38c:              1101                     addi    sp,sp,-32
d000c38e:              ce46                     sw      a7,28(sp)
d000c390:              cc42                     sw      a6,24(sp)
d000c392:              ca3e                     sw      a5,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
d000c394:              00003797                 auipc   a5,0x3
d000c398:              2fc78793                 addi    a5,a5,764 # d000f690 <kDeviceLogBypassUartAddress>
d000c39c:              439c                     lw      a5,0(a5)
d000c39e:              c83a                     sw      a4,16(sp)
d000c3a0:              c636                     sw      a3,12(sp)
d000c3a2:              c432                     sw      a2,8(sp)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c3a4:              c388                     sw      a0,0(a5)
d000c3a6:              0028                     addi    a0,sp,8
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
d000c3a8:              c22a                     sw      a0,4(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c3aa:       /----- c989                     beqz    a1,d000c3bc <base_log_internal_dv+0x30>
/proc/self/cwd/sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
d000c3ac:       |  /-> 4512                     lw      a0,4(sp)
d000c3ae:       |  |   00450613                 addi    a2,a0,4
d000c3b2:       |  |   c232                     sw      a2,4(sp)
d000c3b4:       |  |   4108                     lw      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c3b6:       |  |   15fd                     addi    a1,a1,-1
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c3b8:       |  |   c388                     sw      a0,0(a5)
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:90
d000c3ba:       |  \-- f9ed                     bnez    a1,d000c3ac <base_log_internal_dv+0x20>
/proc/self/cwd/sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
d000c3bc:       \----> 6105                     addi    sp,sp,32
d000c3be:              8082                     ret

d000c3c0 <base_dev_null>:
base_dev_null():
/proc/self/cwd/sw/device/lib/runtime/print.c:52

static const char kErrorNul[17] = "%<unexpected nul>";
static const char kUnknownSpec[15] = "%<unknown spec>";
static const char kErrorTooWide[12] = "%<bad width>";

static size_t base_dev_null(void *data, const char *buf, size_t len) {
d000c3c0:       8532                    mv      a0,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:53
  return len;
d000c3c2:       8082                    ret

d000c3c4 <base_printf>:
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:84
void base_uart_stdout(const dif_uart_t *uart) {
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}

size_t base_printf(const char *format, ...) {
d000c3c4:       7179                    addi    sp,sp,-48
d000c3c6:       c606                    sw      ra,12(sp)
d000c3c8:       d646                    sw      a7,44(sp)
d000c3ca:       d442                    sw      a6,40(sp)
d000c3cc:       d23e                    sw      a5,36(sp)
d000c3ce:       d03a                    sw      a4,32(sp)
d000c3d0:       ce36                    sw      a3,28(sp)
d000c3d2:       cc32                    sw      a2,24(sp)
d000c3d4:       ca2e                    sw      a1,20(sp)
d000c3d6:       0fff6597                auipc   a1,0xfff6
d000c3da:       c7e58593                addi    a1,a1,-898 # e0002054 <base_stdout>
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
d000c3de:       4190                    lw      a2,0(a1)
d000c3e0:       41cc                    lw      a1,4(a1)
d000c3e2:       872a                    mv      a4,a0
d000c3e4:       0848                    addi    a0,sp,20
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:86
  va_start(args, format);
d000c3e6:       c42a                    sw      a0,8(sp)
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c3e8:       0854                    addi    a3,sp,20
d000c3ea:       8532                    mv      a0,a2
d000c3ec:       863a                    mv      a2,a4
d000c3ee:       200d                    jal     d000c410 <base_vfprintf>
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:89
  return bytes_left;
d000c3f0:       40b2                    lw      ra,12(sp)
d000c3f2:       6145                    addi    sp,sp,48
d000c3f4:       8082                    ret

d000c3f6 <base_vprintf>:
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:92
size_t base_vprintf(const char *format, va_list args) {
d000c3f6:       0fff6697                auipc   a3,0xfff6
d000c3fa:       c5e68693                addi    a3,a3,-930 # e0002054 <base_stdout>
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c3fe:       4290                    lw      a2,0(a3)
d000c400:       42d4                    lw      a3,4(a3)
d000c402:       872e                    mv      a4,a1
d000c404:       87aa                    mv      a5,a0
d000c406:       8532                    mv      a0,a2
d000c408:       85b6                    mv      a1,a3
d000c40a:       863e                    mv      a2,a5
d000c40c:       86ba                    mv      a3,a4
d000c40e:       a009                    j       d000c410 <base_vfprintf>

d000c410 <base_vfprintf>:
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:532
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
d000c410:                                                                    715d                       addi    sp,sp,-80
d000c412:                                                                    c686                       sw      ra,76(sp)
d000c414:                                                                    c4a2                       sw      s0,72(sp)
d000c416:                                                                    c2a6                       sw      s1,68(sp)
d000c418:                                                                    c0ca                       sw      s2,64(sp)
d000c41a:                                                                    de4e                       sw      s3,60(sp)
d000c41c:                                                                    dc52                       sw      s4,56(sp)
d000c41e:                                                                    da56                       sw      s5,52(sp)
d000c420:                                                                    d85a                       sw      s6,48(sp)
d000c422:                                                                    d65e                       sw      s7,44(sp)
d000c424:                                                                    d462                       sw      s8,40(sp)
d000c426:                                                                    d266                       sw      s9,36(sp)
d000c428:                                                                    d06a                       sw      s10,32(sp)
d000c42a:                                                                    ce6e                       sw      s11,28(sp)
d000c42c:                                                                    8cb2                       mv      s9,a2
d000c42e:                                                                    892a                       mv      s2,a0
d000c430:                                                                    c436                       sw      a3,8(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:533
  if (out.sink == NULL) {
d000c432:                                                                /-- c199                       beqz    a1,d000c438 <base_vfprintf+0x28>
d000c434:                                                                |   89ae                       mv      s3,a1
d000c436:                                                             /--|-- a029                       j       d000c440 <base_vfprintf+0x30>
d000c438:                                                             |  \-> 00000997           auipc   s3,0x0
d000c43c:                                                             |      f8898993           addi    s3,s3,-120 # d000c3c0 <base_dev_null>
/proc/self/cwd/sw/device/lib/runtime/print.c:542
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
d000c440:                                                             \----> c236                       sw      a3,4(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:545

  size_t bytes_written = 0;
  while (format[0] != '\0') {
d000c442:                                                                    000cc503           lbu     a0,0(s9)
d000c446:       /----------------------------------------------------------- 42050563           beqz    a0,d000c870 <base_vfprintf+0x460>
d000c44a:       |                                                            4a81                       li      s5,0
d000c44c:       |                                                            02500c13           li      s8,37
d000c450:       |                                                            4d25                       li      s10,9
d000c452:       |                                                            4a29                       li      s4,10
d000c454:       |                                                            658d                       lui     a1,0x3
d000c456:       |                                                            c2258593           addi    a1,a1,-990 # 2c22 <_static_critical_size+0xc5e>
d000c45a:       |                                                            c02e                       sw      a1,0(sp)
d000c45c:       |        /-------------------------------------------------> 4481                       li      s1,0
consume_until_percent():
/proc/self/cwd/sw/device/lib/runtime/print.c:155
    if (c == '\0' || c == kPercent) {
d000c45e:       |        |                                               /-> 0ff57413           andi    s0,a0,255
d000c462:       |        |                                            /--|-- 01840963           beq     s0,s8,d000c474 <base_vfprintf+0x64>
d000c466:       |        |                                            +--|-- c419                       beqz    s0,d000c474 <base_vfprintf+0x64>
/proc/self/cwd/sw/device/lib/runtime/print.c:154
    char c = (*format)[text_len];
d000c468:       |        |                                            |  |   009c8533           add     a0,s9,s1
d000c46c:       |        |                                            |  |   00154503           lbu     a0,1(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:162
    ++text_len;
d000c470:       |        |                                            |  |   0485                       addi    s1,s1,1
d000c472:       |        |                                            |  \-- b7f5                       j       d000c45e <base_vfprintf+0x4e>
/proc/self/cwd/sw/device/lib/runtime/print.c:156
      if (text_len > 0) {
d000c474:       |        |                                            \--/-X c491                       beqz    s1,d000c480 <base_vfprintf+0x70>
/proc/self/cwd/sw/device/lib/runtime/print.c:157
        *bytes_written += out.sink(out.data, *format, text_len);
d000c476:       |        |                                               |   854a                       mv      a0,s2
d000c478:       |        |                                               |   85e6                       mv      a1,s9
d000c47a:       |        |                                               |   8626                       mv      a2,s1
d000c47c:       |        |                                               |   9982                       jalr    s3
d000c47e:       |        |                                               |   9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:546
    if (!consume_until_percent(out, &format, &bytes_written)) {
d000c480:       |  /-----|-----------------------------------------------\-X 3e040963           beqz    s0,d000c872 <base_vfprintf+0x462>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:195
  if ((*format)[0] == '!') {
d000c484:       |  |     |                                                   009c8533           add     a0,s9,s1
d000c488:       |  |     |                                                   00154603           lbu     a2,1(a0)
d000c48c:       |  |     |                                                   02100713           li      a4,33
d000c490:       |  |     |                                            /----- 00e61863           bne     a2,a4,d000c4a0 <base_vfprintf+0x90>
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c494:       |  |     |                                            |      00254583           lbu     a1,2(a0)
d000c498:       |  |     |                                            |      00250693           addi    a3,a0,2
d000c49c:       |  |     |                                            |      4b05                       li      s6,1
d000c49e:       |  |     |                                            |  /-- a029                       j       d000c4a8 <base_vfprintf+0x98>
d000c4a0:       |  |     |                                            \--|-> 4b01                       li      s6,0
d000c4a2:       |  |     |                                               |   00150693           addi    a3,a0,1
d000c4a6:       |  |     |                                               |   85b2                       mv      a1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c4a8:       |  |  /--|-----------------------------------------------\-X 3a058b63           beqz    a1,d000c85e <base_vfprintf+0x44e>
d000c4ac:       |  |  |  |                                                   4481                       li      s1,0
d000c4ae:       |  |  |  |                                                   4b81                       li      s7,0
d000c4b0:       |  |  |  |                                                   4501                       li      a0,0
d000c4b2:       |  |  |  |                                                   fdf60613           addi    a2,a2,-33
d000c4b6:       |  |  |  |                                                   00163d93           seqz    s11,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:213
    if (c < '0' || c > '9') {
d000c4ba:       |  |  |  |                                                   00168c93           addi    s9,a3,1
d000c4be:       |  |  |  |                                      /----------> fd058613           addi    a2,a1,-48
d000c4c2:       |  |  |  |                                      |            0ff67613           andi    a2,a2,255
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c4c6:       |  |  |  |                                      |            0ff5f593           andi    a1,a1,255
d000c4ca:       |  |  |  |                                   /--|----------- 02cd6b63           bltu    s10,a2,d000c500 <base_vfprintf+0xf0>
/proc/self/cwd/sw/device/lib/runtime/print.c:216
    if (spec->padding == 0) {
d000c4ce:       |  |  |  |                                   |  |            0ff57613           andi    a2,a0,255
d000c4d2:       |  |  |  |                                   |  |        /-- ca19                       beqz    a2,d000c4e8 <base_vfprintf+0xd8>
/proc/self/cwd/sw/device/lib/runtime/print.c:224
    spec->width *= 10;
d000c4d4:       |  |  |  |                                   |  |     /--|-> 03448633           mul     a2,s1,s4
/proc/self/cwd/sw/device/lib/runtime/print.c:225
    spec->width += (c - '0');
d000c4d8:       |  |  |  |                                   |  |     |  |   95b2                       add     a1,a1,a2
d000c4da:       |  |  |  |                                   |  |     |  |   fd058493           addi    s1,a1,-48
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c4de:       |  |  |  |                                   |  |  /--|--|-> 000cc583           lbu     a1,0(s9)
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c4e2:       |  |  |  |                                   |  |  |  |  |   0c85                       addi    s9,s9,1
d000c4e4:       |  |  |  |                                   |  \--|--|--|-- fde9                       bnez    a1,d000c4be <base_vfprintf+0xae>
d000c4e6:       |  |  +--|-----------------------------------|-----|--|--|-- aea5                       j       d000c85e <base_vfprintf+0x44e>
d000c4e8:       |  |  |  |                                   |     |  |  \-> 02000b93           li      s7,32
d000c4ec:       |  |  |  |                                   |     |  |      03000613           li      a2,48
d000c4f0:       |  |  |  |                                   |     |  |      02000513           li      a0,32
d000c4f4:       |  |  |  |                                   |     |  \----- fec590e3           bne     a1,a2,d000c4d4 <base_vfprintf+0xc4>
d000c4f8:       |  |  |  |                                   |     |         03000513           li      a0,48
d000c4fc:       |  |  |  |                                   |     |         8bb2                       mv      s7,a2
d000c4fe:       |  |  |  |                                   |     \-------- b7c5                       j       d000c4de <base_vfprintf+0xce>
/proc/self/cwd/sw/device/lib/runtime/print.c:229
  if ((spec->width == 0 && spec->padding != 0) || spec->width > 32) {
d000c500:       |  |  |  |                                   \-----------/-X c481                       beqz    s1,d000c508 <base_vfprintf+0xf8>
d000c502:       |  |  |  |                                            /--|-- 00e4e763           bltu    s1,a4,d000c510 <base_vfprintf+0x100>
d000c506:       |  |  |  |  /-----------------------------------------|--|-- a671                       j       d000c892 <base_vfprintf+0x482>
d000c508:       |  |  |  |  |                                         |  \-> 0ff57513           andi    a0,a0,255
d000c50c:       |  |  |  |  +-----------------------------------------|----- 38051363           bnez    a0,d000c892 <base_vfprintf+0x482>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c510:       |  |  |  |  |                                         \----> fa858513           addi    a0,a1,-88
d000c514:       |  |  |  |  |                                         /----- 04a76963           bltu    a4,a0,d000c566 <base_vfprintf+0x156>
d000c518:       |  |  |  |  |                                         |      050a                       slli    a0,a0,0x2
d000c51a:       |  |  |  |  |                                         |      00002597           auipc   a1,0x2
d000c51e:       |  |  |  |  |                                         |      48e58593           addi    a1,a1,1166 # d000e9a8 <rom_printf.kHexTable+0xc8>
d000c522:       |  |  |  |  |                                         |      952e                       add     a0,a0,a1
d000c524:       |  |  |  |  |                                         |      4108                       lw      a0,0(a0)
d000c526:       |  |  |  |  |                                         |      8502                       jr      a0
/proc/self/cwd/sw/device/lib/runtime/print.c:408
      if (spec.is_nonstd) {
d000c528:       |  |  |  |  |  /--------------------------------------|----- 2a0d9c63           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:411
      uint32_t value = va_arg(*args, uint32_t);
d000c52c:       |  |  |  |  |  |                                      |      4512                       lw      a0,4(sp)
d000c52e:       |  |  |  |  |  |                                      |      00450593           addi    a1,a0,4
d000c532:       |  |  |  |  |  |                                      |      c22e                       sw      a1,4(sp)
d000c534:       |  |  |  |  |  |                                      |      00052b03           lw      s6,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:412
      if (((int32_t)value) < 0) {
d000c538:       |  |  |  |  |  |                                      |  /-- 000b5c63           bgez    s6,d000c550 <base_vfprintf+0x140>
/proc/self/cwd/sw/device/lib/runtime/print.c:413
        *bytes_written += out.sink(out.data, "-", 1);
d000c53c:       |  |  |  |  |  |                                      |  |   00002597           auipc   a1,0x2
d000c540:       |  |  |  |  |  |                                      |  |   50358593           addi    a1,a1,1283 # d000ea3f <rom_printf.kHexTable+0x15f>
d000c544:       |  |  |  |  |  |                                      |  |   4605                       li      a2,1
d000c546:       |  |  |  |  |  |                                      |  |   854a                       mv      a0,s2
d000c548:       |  |  |  |  |  |                                      |  |   9982                       jalr    s3
d000c54a:       |  |  |  |  |  |                                      |  |   9aaa                       add     s5,s5,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:414
        value = -value;
d000c54c:       |  |  |  |  |  |                                      |  |   41600b33           neg     s6,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:417
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000c550:       |  |  |  |  |  |                                      |  \-> 0ffbf713           andi    a4,s7,255
d000c554:       |  |  |  |  |  |                                      |      00002817           auipc   a6,0x2
d000c558:       |  |  |  |  |  |                                      |      50480813           addi    a6,a6,1284 # d000ea58 <kDigitsLow>
d000c55c:       |  |  |  |  |  |                                      |      47a9                       li      a5,10
d000c55e:       |  |  |  |  |  |                                      |      854a                       mv      a0,s2
d000c560:       |  |  |  |  |  |                                      |      85ce                       mv      a1,s3
d000c562:       |  |  |  |  |  |                                      |      865a                       mv      a2,s6
d000c564:       |  |  |  |  |  |        /-----------------------------|----- a4a1                       j       d000c7ac <base_vfprintf+0x39c>
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c566:       |  |  |  |  |  |        |                             \----> 04800513           li      a0,72
d000c56a:       |  |  |  |  |  |        |                                /-- 02a58d63           beq     a1,a0,d000c5a4 <base_vfprintf+0x194>
d000c56e:       |  |  |  |  |  +--------|--------------------------------|-- 27859963           bne     a1,s8,d000c7e0 <base_vfprintf+0x3d0>
d000c572:       |  |  |  |  |  +--------|--------------------------------|-- 260d9763           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:379
      *bytes_written += out.sink(out.data, "%", 1);
d000c576:       |  |  |  |  |  |        |                                |   00002597           auipc   a1,0x2
d000c57a:       |  |  |  |  |  |        |                                |   4c758593           addi    a1,a1,1223 # d000ea3d <rom_printf.kHexTable+0x15d>
d000c57e:       |  |  |  |  |  |        |                             /--|-- a851                       j       d000c612 <base_vfprintf+0x202>
/proc/self/cwd/sw/device/lib/runtime/print.c:461
      if (spec.is_nonstd) {
d000c580:       |  |  |  |  |  |        |                             |  +-- 020d8263           beqz    s11,d000c5a4 <base_vfprintf+0x194>
/proc/self/cwd/sw/device/lib/runtime/print.c:462
        size_t len = va_arg(*args, size_t);
d000c584:       |  |  |  |  |  |        |                             |  |   4512                       lw      a0,4(sp)
d000c586:       |  |  |  |  |  |        |                             |  |   00450593           addi    a1,a0,4
d000c58a:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c58c:       |  |  |  |  |  |        |                             |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:463
        char *value = va_arg(*args, char *);
d000c58e:       |  |  |  |  |  |        |                             |  |   00850593           addi    a1,a0,8
d000c592:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c594:       |  |  |  |  |  |        |                             |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:464
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c596:       |  |  |  |  |  |        |                             |  |   0ffbf793           andi    a5,s7,255
d000c59a:       |  |  |  |  |  |        |                             |  |   00002897           auipc   a7,0x2
d000c59e:       |  |  |  |  |  |        |                             |  |   4eb88893           addi    a7,a7,1259 # d000ea85 <kDigitsHigh>
d000c5a2:       |  |  |  |  |  |        |           /-----------------|--|-- a2d5                       j       d000c786 <base_vfprintf+0x376>
/proc/self/cwd/sw/device/lib/runtime/print.c:470
      uint32_t value = va_arg(*args, uint32_t);
d000c5a4:       |  |  |  |  |  |        |           |                 |  \-> 4512                       lw      a0,4(sp)
d000c5a6:       |  |  |  |  |  |        |           |                 |      00450593           addi    a1,a0,4
d000c5aa:       |  |  |  |  |  |        |           |                 |      c22e                       sw      a1,4(sp)
d000c5ac:       |  |  |  |  |  |        |           |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:472
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsHigh);
d000c5ae:       |  |  |  |  |  |        |           |                 |      0ffbf713           andi    a4,s7,255
d000c5b2:       |  |  |  |  |  |        |           |                 |      00002817           auipc   a6,0x2
d000c5b6:       |  |  |  |  |  |        |           |                 |      4d380813           addi    a6,a6,1235 # d000ea85 <kDigitsHigh>
d000c5ba:       |  |  |  |  |  |        |        /--|-----------------|----- a2f5                       j       d000c7a6 <base_vfprintf+0x396>
/proc/self/cwd/sw/device/lib/runtime/print.c:486
      if (!spec.is_nonstd) {
d000c5bc:       |  |  |  |  |  +--------|--------|--|-----------------|----- 220d8263           beqz    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:489
      size_t len = va_arg(*args, size_t);
d000c5c0:       |  |  |  |  |  |        |        |  |                 |      4512                       lw      a0,4(sp)
d000c5c2:       |  |  |  |  |  |        |        |  |                 |      00450593           addi    a1,a0,4
d000c5c6:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000c5c8:       |  |  |  |  |  |        |        |  |                 |      4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:490
      char *value = va_arg(*args, char *);
d000c5ca:       |  |  |  |  |  |        |        |  |                 |      00850593           addi    a1,a0,8
d000c5ce:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000c5d0:       |  |  |  |  |  |        |        |  |                 |      4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:491
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c5d2:       |  |  |  |  |  |        |        |  |                 |      0ffbf793           andi    a5,s7,255
d000c5d6:       |  |  |  |  |  |        |        |  |                 |      00002897           auipc   a7,0x2
d000c5da:       |  |  |  |  |  |        |        |  |                 |      4af88893           addi    a7,a7,1199 # d000ea85 <kDigitsHigh>
d000c5de:       |  |  |  |  |  |        |     /--|--|-----------------|----- aadd                       j       d000c7d4 <base_vfprintf+0x3c4>
d000c5e0:       |  |  |  |  |  |        |     |  |  |                 |      4512                       lw      a0,4(sp)
d000c5e2:       |  |  |  |  |  |        |     |  |  |                 |      00450593           addi    a1,a0,4
d000c5e6:       |  |  |  |  |  |        |     |  |  |                 |      c22e                       sw      a1,4(sp)
d000c5e8:       |  |  |  |  |  |        |     |  |  |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:505
      if (spec.is_nonstd) {
d000c5ea:       |  |  |  |  |  |        |  /--|--|--|-----------------|----- 200d8863           beqz    s11,d000c7fa <base_vfprintf+0x3ea>
/proc/self/cwd/sw/device/lib/runtime/print.c:508
        if (va_arg(*args, int) != 0) {
d000c5ee:       |  |  |  |  |  |  /-----|--|--|--|--|-----------------|----- 26060263           beqz    a2,d000c852 <base_vfprintf+0x442>
/proc/self/cwd/sw/device/lib/runtime/print.c:509
          *bytes_written += out.sink(out.data, "true", 4);
d000c5f2:       |  |  |  |  |  |  |     |  |  |  |  |                 |      00002597           auipc   a1,0x2
d000c5f6:       |  |  |  |  |  |  |     |  |  |  |  |                 |      45258593           addi    a1,a1,1106 # d000ea44 <rom_printf.kHexTable+0x164>
d000c5fa:       |  |  |  |  |  |  |     |  |  |  |  |                 |      4611                       li      a2,4
d000c5fc:       |  |  |  |  |  |  |  /--|--|--|--|--|-----------------|----- a2fd                       j       d000c7ea <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:383
      if (spec.is_nonstd) {
d000c5fe:       |  |  |  |  |  +--|--|--|--|--|--|--|-----------------|----- 1e0d9163           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:386
      char value = (char)va_arg(*args, uint32_t);
d000c602:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4512                       lw      a0,4(sp)
d000c604:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00450593           addi    a1,a0,4
d000c608:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      c22e                       sw      a1,4(sp)
d000c60a:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4108                       lw      a0,0(a0)
d000c60c:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00a10a23           sb      a0,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:387
      *bytes_written += out.sink(out.data, &value, 1);
d000c610:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      084c                       addi    a1,sp,20
d000c612:       |  |  |  |  |  |  |  |  |  |  |  |  |                 \----> 4605                       li      a2,1
d000c614:       |  |  |  |  |  |  |  +--|--|--|--|--|----------------------- aad9                       j       d000c7ea <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:421
      if (spec.is_nonstd) {
d000c616:       |  |  |  |  |  +--|--|--|--|--|--|--|----------------------- 1c0d9563           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:424
      uint32_t value = va_arg(*args, uint32_t);
d000c61a:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4512                       lw      a0,4(sp)
d000c61c:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00450593           addi    a1,a0,4
d000c620:       |  |  |  |  |  |  |  |  |  |  |  |  |                        c22e                       sw      a1,4(sp)
d000c622:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:426
          write_digits(out, value, spec.width, spec.padding, 8, kDigitsLow);
d000c624:       |  |  |  |  |  |  |  |  |  |  |  |  |                        0ffbf713           andi    a4,s7,255
d000c628:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00002817           auipc   a6,0x2
d000c62c:       |  |  |  |  |  |  |  |  |  |  |  |  |                        43080813           addi    a6,a6,1072 # d000ea58 <kDigitsLow>
d000c630:       |  |  |  |  |  |  |  |  |  |  |  |  |                        47a1                       li      a5,8
d000c632:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------------- aa9d                       j       d000c7a8 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:430
      if (spec.is_nonstd) {
d000c634:       |  |  |  |  |  +--|--|--|--|--|--|--|--|-------------------- 1a0d9663           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000c638:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002597           auipc   a1,0x2
d000c63c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     40958593           addi    a1,a1,1033 # d000ea41 <rom_printf.kHexTable+0x161>
d000c640:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4609                       li      a2,2
d000c642:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000c644:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:440
      uintptr_t value = va_arg(*args, uintptr_t);
d000c646:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4592                       lw      a1,4(sp)
d000c648:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00458613           addi    a2,a1,4
d000c64c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     c232                       sw      a2,4(sp)
d000c64e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4190                       lw      a2,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000c650:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     01550433           add     s0,a0,s5
/proc/self/cwd/sw/device/lib/runtime/print.c:442
          write_digits(out, value, sizeof(uintptr_t) * 2, '0', 16, kDigitsLow);
d000c654:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002817           auipc   a6,0x2
d000c658:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     40480813           addi    a6,a6,1028 # d000ea58 <kDigitsLow>
d000c65c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     46a1                       li      a3,8
d000c65e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     03000713           li      a4,48
d000c662:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     47c1                       li      a5,16
d000c664:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000c666:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     85ce                       mv      a1,s3
d000c668:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     2e31                       jal     d000c984 <write_digits>
/proc/self/cwd/sw/device/lib/runtime/print.c:441
      *bytes_written +=
d000c66a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00a40ab3           add     s5,s0,a0
d000c66e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  /----------------- a249                       j       d000c7f0 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:521
      status_t value = va_arg(*args, status_t);
d000c670:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4512                       lw      a0,4(sp)
d000c672:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00450593           addi    a1,a0,4
d000c676:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  c22e                       sw      a1,4(sp)
d000c678:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4108                       lw      a0,0(a0)
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:280
  char mod[] = {'"', 0, 0, 0, '"', ','};
d000c67a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4582                       lw      a1,0(sp)
d000c67c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00b11c23           sh      a1,24(sp)
d000c680:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  02200593           li      a1,34
d000c684:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  ca2e                       sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000c686:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  006c                       addi    a1,sp,12
d000c688:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  0810                       addi    a2,sp,16
d000c68a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  01510693           addi    a3,sp,21
d000c68e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  2e95                       jal     d000ca02 <status_extract>
/proc/self/cwd/sw/device/lib/runtime/print.c:286
  const char *end = start;
d000c690:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000c692:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  8baa                       mv      s7,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000c694:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  fff58413           addi    s0,a1,-1
d000c698:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              /-> 0005c503           lbu     a0,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:288
    end++;
d000c69c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000c69e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0405                       addi    s0,s0,1
d000c6a0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              \-- fd65                       bnez    a0,d000c698 <base_vfprintf+0x288>
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000c6a2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  001d9613           slli    a2,s11,0x1
d000c6a6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c6aa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  3a958593           addi    a1,a1,937 # d000ea4f <rom_printf.kHexTable+0x16f>
d000c6ae:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c6b0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000c6b2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000c6b4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  84aa                       mv      s1,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000c6b6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  40b40633           sub     a2,s0,a1
d000c6ba:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c6bc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c6be:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:293
  len += out.sink(out.data, "\"", as_json ? 1 : 0);
d000c6c2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c6c6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  38e58593           addi    a1,a1,910 # d000ea50 <rom_printf.kHexTable+0x170>
d000c6ca:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c6cc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  865a                       mv      a2,s6
d000c6ce:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c6d0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:295
  len += out.sink(out.data, ":", 1);
d000c6d2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c6d6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  36258593           addi    a1,a1,866 # d000ea34 <rom_printf.kHexTable+0x154>
d000c6da:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4605                       li      a2,1
d000c6dc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c6de:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c6e0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00a404b3           add     s1,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:296
  if (err) {
d000c6e4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------- 120b8363           beqz    s7,d000c80a <base_vfprintf+0x3fa>
/proc/self/cwd/sw/device/lib/runtime/print.c:298
    len += out.sink(out.data, "[", 1);
d000c6e8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000c6ec:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               36a58593           addi    a1,a1,874 # d000ea52 <rom_printf.kHexTable+0x172>
d000c6f0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000c6f2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c6f4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000c6f6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000c6fa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               084c                       addi    a1,sp,20
d000c6fc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4619                       li      a2,6
d000c6fe:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c700:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c702:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4642                       lw      a2,16(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000c704:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c706:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002817           auipc   a6,0x2
d000c70a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               35280813           addi    a6,a6,850 # d000ea58 <kDigitsLow>
d000c70e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               47a9                       li      a5,10
d000c710:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c712:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               85ce                       mv      a1,s3
d000c714:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4681                       li      a3,0
d000c716:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4701                       li      a4,0
d000c718:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               24b5                       jal     d000c984 <write_digits>
d000c71a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:301
    len += out.sink(out.data, "]", 1);
d000c71c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000c720:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               33858593           addi    a1,a1,824 # d000ea54 <rom_printf.kHexTable+0x174>
d000c724:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000c726:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c728:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000c72a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
d000c72c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-------- a8e5                       j       d000c824 <base_vfprintf+0x414>
d000c72e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         4512                       lw      a0,4(sp)
d000c730:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         00450593           addi    a1,a0,4
d000c734:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         c22e                       sw      a1,4(sp)
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:392
      if (spec.is_nonstd) {
d000c736:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /--|-------- 100d8363           beqz    s11,d000c83c <base_vfprintf+0x42c>
/proc/self/cwd/sw/device/lib/runtime/print.c:394
        len = va_arg(*args, size_t);
d000c73a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000c73c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00850593           addi    a1,a0,8
d000c740:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000c742:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         414c                       lw      a1,4(a0)
d000c744:       |  |  |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|-------- a05d                       j       d000c7ea <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:496
      if (spec.is_nonstd) {
d000c746:       |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|--|--|-------- 080d9d63           bnez    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:499
      uint32_t value = va_arg(*args, uint32_t);
d000c74a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4512                       lw      a0,4(sp)
d000c74c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00450593           addi    a1,a0,4
d000c750:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000c752:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:501
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000c754:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         0ffbf713           andi    a4,s7,255
d000c758:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00002817           auipc   a6,0x2
d000c75c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         30080813           addi    a6,a6,768 # d000ea58 <kDigitsLow>
d000c760:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         47a9                       li      a5,10
d000c762:       |  |  |  |  |  |  |  |  |  |  |  |  |  +--|--|--|--|-------- a099                       j       d000c7a8 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:446
      if (spec.is_nonstd) {
d000c764:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 020d8663           beqz    s11,d000c790 <base_vfprintf+0x380>
/proc/self/cwd/sw/device/lib/runtime/print.c:447
        size_t len = va_arg(*args, size_t);
d000c768:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4512                       lw      a0,4(sp)
d000c76a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00450593           addi    a1,a0,4
d000c76e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000c770:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:448
        char *value = va_arg(*args, char *);
d000c772:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00850593           addi    a1,a0,8
d000c776:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000c778:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:449
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c77a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0ffbf793           andi    a5,s7,255
d000c77e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00002897           auipc   a7,0x2
d000c782:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   2da88893           addi    a7,a7,730 # d000ea58 <kDigitsLow>
d000c786:       |  |  |  |  |  |  |  |  |  |  |  |  \--|--|--|--|--|-----|-> 4805                       li      a6,1
d000c788:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   854a                       mv      a0,s2
d000c78a:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   85ce                       mv      a1,s3
d000c78c:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   8726                       mv      a4,s1
d000c78e:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  /--|-- a0b9                       j       d000c7dc <base_vfprintf+0x3cc>
/proc/self/cwd/sw/device/lib/runtime/print.c:455
      uint32_t value = va_arg(*args, uint32_t);
d000c790:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |  \-> 4512                       lw      a0,4(sp)
d000c792:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00450593           addi    a1,a0,4
d000c796:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      c22e                       sw      a1,4(sp)
d000c798:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:457
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsLow);
d000c79a:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      0ffbf713           andi    a4,s7,255
d000c79e:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00002817           auipc   a6,0x2
d000c7a2:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      2ba80813           addi    a6,a6,698 # d000ea58 <kDigitsLow>
d000c7a6:       |  |  |  |  |  |  |  |  |  |  |  \-----|--|--|--|--|--|----> 47c1                       li      a5,16
d000c7a8:       |  |  |  |  |  |  |  |  |  |  |        >--|--|--|--|--|----> 854a                       mv      a0,s2
d000c7aa:       |  |  |  |  |  |  |  |  |  |  |        |  |  |  |  |  |      85ce                       mv      a1,s3
d000c7ac:       |  |  |  |  |  |  |  |  \--|--|--------|--|--|--|--|--|----> 86a6                       mv      a3,s1
d000c7ae:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |      2ad9                       jal     d000c984 <write_digits>
d000c7b0:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  /-- a83d                       j       d000c7ee <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:476
      if (!spec.is_nonstd) {
d000c7b2:       |  |  |  |  |  +--|--|-----|--|--------|--|--|--|--|--|--|-- 020d8763           beqz    s11,d000c7e0 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:479
      size_t len = va_arg(*args, size_t);
d000c7b6:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4512                       lw      a0,4(sp)
d000c7b8:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00450593           addi    a1,a0,4
d000c7bc:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000c7be:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:480
      char *value = va_arg(*args, char *);
d000c7c0:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00850593           addi    a1,a0,8
d000c7c4:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000c7c6:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:481
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c7c8:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   0ffbf793           andi    a5,s7,255
d000c7cc:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00002897           auipc   a7,0x2
d000c7d0:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   28c88893           addi    a7,a7,652 # d000ea58 <kDigitsLow>
d000c7d4:       |  |  |  |  |  |  |  |     |  \--------|--|--|--|--|--|--|-> 854a                       mv      a0,s2
d000c7d6:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   85ce                       mv      a1,s3
d000c7d8:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   8726                       mv      a4,s1
d000c7da:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   4801                       li      a6,0
d000c7dc:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  \--|-> 20c9                       jal     d000c89e <hex_dump>
d000c7de:       |  |  |  |  |  |  |  |     |           |  |  |  |  |     +-- a801                       j       d000c7ee <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:527
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
d000c7e0:       |  |  |  |  |  \--|--|-----|-----------|--|--|--|--|-----|-> 00002597           auipc   a1,0x2
d000c7e4:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   2b558593           addi    a1,a1,693 # d000ea95 <kUnknownSpec>
d000c7e8:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   463d                       li      a2,15
d000c7ea:       |  |  |  |  |     |  >-----|-----------|--|--|--|--|-----|-> 854a                       mv      a0,s2
d000c7ec:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   9982                       jalr    s3
d000c7ee:       |  |  |  |  |     |  |     |           |  |  |  |  |     \-> 9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:545
  while (format[0] != '\0') {
d000c7f0:       |  |  |  |  |     |  |     |           |  >--|--|--|-------> 000cc503           lbu     a0,0(s9)
d000c7f4:       |  |  |  \--|-----|--|-----|-----------|--|--|--|--|-------- c60514e3           bnez    a0,d000c45c <base_vfprintf+0x4c>
d000c7f8:       |  +--|-----|-----|--|-----|-----------|--|--|--|--|-------- a8ad                       j       d000c872 <base_vfprintf+0x462>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:517
          write_digits(out, value, spec.width, spec.padding, 2, kDigitsLow);
d000c7fa:       |  |  |     |     |  |     \-----------|--|--|--|--|-------> 0ffbf713           andi    a4,s7,255
d000c7fe:       |  |  |     |     |  |                 |  |  |  |  |         00002817           auipc   a6,0x2
d000c802:       |  |  |     |     |  |                 |  |  |  |  |         25a80813           addi    a6,a6,602 # d000ea58 <kDigitsLow>
d000c806:       |  |  |     |     |  |                 |  |  |  |  |         4789                       li      a5,2
d000c808:       |  |  |     |     |  |                 \--|--|--|--|-------- b745                       j       d000c7a8 <base_vfprintf+0x398>
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:304
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c80a:       |  |  |     |     |  |                    |  \--|--|-------> 4642                       lw      a2,16(sp)
d000c80c:       |  |  |     |     |  |                    |     |  |         00002817           auipc   a6,0x2
d000c810:       |  |  |     |     |  |                    |     |  |         24c80813           addi    a6,a6,588 # d000ea58 <kDigitsLow>
d000c814:       |  |  |     |     |  |                    |     |  |         47a9                       li      a5,10
d000c816:       |  |  |     |     |  |                    |     |  |         854a                       mv      a0,s2
d000c818:       |  |  |     |     |  |                    |     |  |         85ce                       mv      a1,s3
d000c81a:       |  |  |     |     |  |                    |     |  |         4681                       li      a3,0
d000c81c:       |  |  |     |     |  |                    |     |  |         4701                       li      a4,0
d000c81e:       |  |  |     |     |  |                    |     |  |         229d                       jal     d000c984 <write_digits>
d000c820:       |  |  |     |     |  |                    |     |  |         00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:306
  len += out.sink(out.data, "}", as_json ? 1 : 0);
d000c824:       |  |  |     |     |  |                    |     |  \-------> 00002597           auipc   a1,0x2
d000c828:       |  |  |     |     |  |                    |     |            23258593           addi    a1,a1,562 # d000ea56 <rom_printf.kHexTable+0x176>
d000c82c:       |  |  |     |     |  |                    |     |            854a                       mv      a0,s2
d000c82e:       |  |  |     |     |  |                    |     |            865a                       mv      a2,s6
d000c830:       |  |  |     |     |  |                    |     |            9982                       jalr    s3
d000c832:       |  |  |     |     |  |                    |     |            015405b3           add     a1,s0,s5
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:522
      *bytes_written += write_status(out, value, spec.is_nonstd);
d000c836:       |  |  |     |     |  |                    |     |            00a58ab3           add     s5,a1,a0
d000c83a:       |  |  |     |     |  |                    \-----|----------- bf5d                       j       d000c7f0 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000c83c:       |  |  |     |     |  |                          \----------> 410c                       lw      a1,0(a0)
d000c83e:       |  |  |     |     |  |                                       4501                       li      a0,0
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000c840:       |  |  |     |     |  |                                   /-> 00a58633           add     a2,a1,a0
d000c844:       |  |  |     |     |  |                                   |   00064603           lbu     a2,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:400
        ++len;
d000c848:       |  |  |     |     |  |                                   |   0505                       addi    a0,a0,1
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000c84a:       |  |  |     |     |  |                                   \-- fa7d                       bnez    a2,d000c840 <base_vfprintf+0x430>
/proc/self/cwd/sw/device/lib/runtime/print.c:403
      *bytes_written += out.sink(out.data, value, len);
d000c84c:       |  |  |     |     |  |                                       fff50613           addi    a2,a0,-1
d000c850:       |  |  |     |     |  +-------------------------------------- bf69                       j       d000c7ea <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:511
          *bytes_written += out.sink(out.data, "false", 5);
d000c852:       |  |  |     |     \--|-------------------------------------> 00002597           auipc   a1,0x2
d000c856:       |  |  |     |        |                                       1f758593           addi    a1,a1,503 # d000ea49 <rom_printf.kHexTable+0x169>
d000c85a:       |  |  |     |        |                                       4615                       li      a2,5
d000c85c:       |  |  |     |        \-------------------------------------- b779                       j       d000c7ea <base_vfprintf+0x3da>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:210
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
d000c85e:       |  |  \-----|----------------------------------------------> 00002597           auipc   a1,0x2
d000c862:       |  |        |                                                20a58593           addi    a1,a1,522 # d000ea68 <kErrorNul>
d000c866:       |  |        |                                                4645                       li      a2,17
d000c868:       |  |        |                                            /-> 854a                       mv      a0,s2
d000c86a:       |  |        |                                            |   9982                       jalr    s3
d000c86c:       |  |        |                                            |   9aaa                       add     s5,s5,a0
d000c86e:       |  +--------|--------------------------------------------|-- a011                       j       d000c872 <base_vfprintf+0x462>
d000c870:       \--|--------|--------------------------------------------|-> 4a81                       li      s5,0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:558

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
d000c872:          \--------|--------------------------------------------|-> 8556                       mv      a0,s5
d000c874:                   |                                            |   4df2                       lw      s11,28(sp)
d000c876:                   |                                            |   5d02                       lw      s10,32(sp)
d000c878:                   |                                            |   5c92                       lw      s9,36(sp)
d000c87a:                   |                                            |   5c22                       lw      s8,40(sp)
d000c87c:                   |                                            |   5bb2                       lw      s7,44(sp)
d000c87e:                   |                                            |   5b42                       lw      s6,48(sp)
d000c880:                   |                                            |   5ad2                       lw      s5,52(sp)
d000c882:                   |                                            |   5a62                       lw      s4,56(sp)
d000c884:                   |                                            |   59f2                       lw      s3,60(sp)
d000c886:                   |                                            |   4906                       lw      s2,64(sp)
d000c888:                   |                                            |   4496                       lw      s1,68(sp)
d000c88a:                   |                                            |   4426                       lw      s0,72(sp)
d000c88c:                   |                                            |   40b6                       lw      ra,76(sp)
d000c88e:                   |                                            |   6161                       addi    sp,sp,80
d000c890:                   |                                            |   8082                       ret
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:230
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
d000c892:                   \--------------------------------------------|-> 00002597           auipc   a1,0x2
d000c896:                                                                |   1e758593           addi    a1,a1,487 # d000ea79 <kErrorTooWide>
d000c89a:                                                                |   4631                       li      a2,12
d000c89c:                                                                \-- b7f1                       j       d000c868 <base_vfprintf+0x458>

d000c89e <hex_dump>:
hex_dump():
/proc/self/cwd/sw/device/lib/runtime/print.c:326
                       const char *glyphs) {
d000c89e:                    715d                       addi    sp,sp,-80
d000c8a0:                    c686                       sw      ra,76(sp)
d000c8a2:                    c4a2                       sw      s0,72(sp)
d000c8a4:                    c2a6                       sw      s1,68(sp)
d000c8a6:                    c0ca                       sw      s2,64(sp)
d000c8a8:                    de4e                       sw      s3,60(sp)
d000c8aa:                    dc52                       sw      s4,56(sp)
d000c8ac:                    da56                       sw      s5,52(sp)
d000c8ae:                    d85a                       sw      s6,48(sp)
d000c8b0:                    d65e                       sw      s7,44(sp)
d000c8b2:                    d462                       sw      s8,40(sp)
d000c8b4:                    d266                       sw      s9,36(sp)
d000c8b6:                    d06a                       sw      s10,32(sp)
d000c8b8:                    8bc6                       mv      s7,a7
d000c8ba:                    8a42                       mv      s4,a6
d000c8bc:                    8b36                       mv      s6,a3
d000c8be:                    8ab2                       mv      s5,a2
d000c8c0:                    892e                       mv      s2,a1
d000c8c2:                    89aa                       mv      s3,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:330
  if (len < width) {
d000c8c4:          /-------- 02e6fd63           bgeu    a3,a4,d000c8fe <hex_dump+0x60>
/proc/self/cwd/sw/device/lib/runtime/print.c:331
    width -= len;
d000c8c8:          |         416704b3           sub     s1,a4,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:332
    memset(buf, padding, sizeof(buf));
d000c8cc:          |         850a                       mv      a0,sp
d000c8ce:          |         02000613           li      a2,32
d000c8d2:          |         85be                       mv      a1,a5
d000c8d4:          |         7ea010ef           jal     ra,d000e0be <memset>
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000c8d8:          +-------- c09d                       beqz    s1,d000c8fe <hex_dump+0x60>
d000c8da:          |         4c01                       li      s8,0
d000c8dc:          |  /----> 02000513           li      a0,32
d000c8e0:          |  |      8426                       mv      s0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:334
      size_t to_write = width > ARRAYSIZE(buf) ? 32 : width;
d000c8e2:          |  |  /-- 00a4e463           bltu    s1,a0,d000c8ea <hex_dump+0x4c>
d000c8e6:          |  |  |   02000413           li      s0,32
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000c8ea:          |  |  \-> 858a                       mv      a1,sp
d000c8ec:          |  |      854e                       mv      a0,s3
d000c8ee:          |  |      8622                       mv      a2,s0
d000c8f0:          |  |      9902                       jalr    s2
/proc/self/cwd/sw/device/lib/runtime/print.c:336
      width -= to_write;
d000c8f2:          |  |      8c81                       sub     s1,s1,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000c8f4:          |  |      9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000c8f6:          |  \----- f0fd                       bnez    s1,d000c8dc <hex_dump+0x3e>
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000c8f8:          |     /-- 000b1663           bnez    s6,d000c904 <hex_dump+0x66>
d000c8fc:       /--|-----|-- a0ad                       j       d000c966 <hex_dump+0xc8>
d000c8fe:       |  \-----|-> 4c01                       li      s8,0
d000c900:       +--------|-- 060b0363           beqz    s6,d000c966 <hex_dump+0xc8>
d000c904:       |        \-> 4401                       li      s0,0
d000c906:       |            4601                       li      a2,0
d000c908:       |            fffb0493           addi    s1,s6,-1
d000c90c:       |            8b0a                       mv      s6,sp
d000c90e:       |            02000c93           li      s9,32
d000c912:       |            5d7d                       li      s10,-1
d000c914:       |     /----> 8526                       mv      a0,s1
d000c916:       |     |  /-- 000a1363           bnez    s4,d000c91c <hex_dump+0x7e>
d000c91a:       |     |  |   8522                       mv      a0,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:342
    buf[buffered] = glyphs[(bytes[idx] >> 4) & 0xf];
d000c91c:       |     |  \-> 9556                       add     a0,a0,s5
d000c91e:       |     |      00054503           lbu     a0,0(a0)
d000c922:       |     |      00455593           srli    a1,a0,0x4
d000c926:       |     |      95de                       add     a1,a1,s7
d000c928:       |     |      00058583           lb      a1,0(a1)
d000c92c:       |     |      00cb06b3           add     a3,s6,a2
d000c930:       |     |      00b68023           sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000c934:       |     |      893d                       andi    a0,a0,15
d000c936:       |     |      955e                       add     a0,a0,s7
d000c938:       |     |      00050503           lb      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:344
    buffered += 2;
d000c93c:       |     |      0609                       addi    a2,a2,2
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000c93e:       |     |      00a680a3           sb      a0,1(a3)
d000c942:       |     |  /-- 01961963           bne     a2,s9,d000c954 <hex_dump+0xb6>
/proc/self/cwd/sw/device/lib/runtime/print.c:347
      bytes_written += out.sink(out.data, buf, buffered);
d000c946:       |     |  |   858a                       mv      a1,sp
d000c948:       |     |  |   02000613           li      a2,32
d000c94c:       |     |  |   854e                       mv      a0,s3
d000c94e:       |     |  |   9902                       jalr    s2
d000c950:       |     |  |   4601                       li      a2,0
d000c952:       |     |  |   9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000c954:       |     |  \-> 14fd                       addi    s1,s1,-1
d000c956:       |     |      0405                       addi    s0,s0,1
d000c958:       |     \----- fba49ee3           bne     s1,s10,d000c914 <hex_dump+0x76>
/proc/self/cwd/sw/device/lib/runtime/print.c:352
  if (buffered != 0) {
d000c95c:       +----------- c609                       beqz    a2,d000c966 <hex_dump+0xc8>
/proc/self/cwd/sw/device/lib/runtime/print.c:353
    bytes_written += out.sink(out.data, buf, buffered);
d000c95e:       |            858a                       mv      a1,sp
d000c960:       |            854e                       mv      a0,s3
d000c962:       |            9902                       jalr    s2
d000c964:       |            9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:355
  return bytes_written;
d000c966:       \----------> 8562                       mv      a0,s8
d000c968:                    5d02                       lw      s10,32(sp)
d000c96a:                    5c92                       lw      s9,36(sp)
d000c96c:                    5c22                       lw      s8,40(sp)
d000c96e:                    5bb2                       lw      s7,44(sp)
d000c970:                    5b42                       lw      s6,48(sp)
d000c972:                    5ad2                       lw      s5,52(sp)
d000c974:                    5a62                       lw      s4,56(sp)
d000c976:                    59f2                       lw      s3,60(sp)
d000c978:                    4906                       lw      s2,64(sp)
d000c97a:                    4496                       lw      s1,68(sp)
d000c97c:                    4426                       lw      s0,72(sp)
d000c97e:                    40b6                       lw      ra,76(sp)
d000c980:                    6161                       addi    sp,sp,80
d000c982:                    8082                       ret

d000c984 <write_digits>:
write_digits():
/proc/self/cwd/sw/device/lib/runtime/print.c:252
                           char padding, uint32_t base, const char *glyphs) {
d000c984:              7179                     addi    sp,sp,-48
d000c986:              d606                     sw      ra,44(sp)
d000c988:              88ae                     mv      a7,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:259
  if (value == 0) {
d000c98a:       /----- ca05                     beqz    a2,d000c9ba <write_digits+0x36>
d000c98c:       |      4381                     li      t2,0
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000c98e:       |      02b10293                 addi    t0,sp,43
d000c992:       |  /-> 8332                     mv      t1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:265
    value /= base;
d000c994:       |  |   02f65633                 divu    a2,a2,a5
d000c998:       |  |   02f605b3                 mul     a1,a2,a5
d000c99c:       |  |   40b305b3                 sub     a1,t1,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:266
    buffer[kWordBits - 1 - len] = glyphs[digit];
d000c9a0:       |  |   95c2                     add     a1,a1,a6
d000c9a2:       |  |   00058e03                 lb      t3,0(a1)
d000c9a6:       |  |   007285b3                 add     a1,t0,t2
d000c9aa:       |  |   01c58023                 sb      t3,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000c9ae:       |  |   13fd                     addi    t2,t2,-1
d000c9b0:       |  \-- fef371e3                 bgeu    t1,a5,d000c992 <write_digits+0xe>
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000c9b4:       |      40700633                 neg     a2,t2
d000c9b8:       |  /-- a031                     j       d000c9c4 <write_digits+0x40>
/proc/self/cwd/sw/device/lib/runtime/print.c:260
    buffer[kWordBits - 1] = glyphs[0];
d000c9ba:       \--|-> 00080583                 lb      a1,0(a6)
d000c9be:          |   02b105a3                 sb      a1,43(sp)
d000c9c2:          |   4605                     li      a2,1
d000c9c4:          \-> 4585                     li      a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000c9c6:          /-- c291                     beqz    a3,d000c9ca <write_digits+0x46>
d000c9c8:          |   85b6                     mv      a1,a3
d000c9ca:          \-> 02000693                 li      a3,32
/proc/self/cwd/sw/device/lib/runtime/print.c:270
  width = width > kWordBits ? kWordBits : width;
d000c9ce:          /-- 00d5e463                 bltu    a1,a3,d000c9d6 <write_digits+0x52>
d000c9d2:          |   02000593                 li      a1,32
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000c9d6:       /--\-X 00b67e63                 bgeu    a2,a1,d000c9f2 <write_digits+0x6e>
d000c9da:       |      40c586b3                 sub     a3,a1,a2
d000c9de:       |      007c                     addi    a5,sp,12
d000c9e0:       |      40c78633                 sub     a2,a5,a2
d000c9e4:       |      067d                     addi    a2,a2,31
/proc/self/cwd/sw/device/lib/runtime/print.c:272
    buffer[kWordBits - len - 1] = padding;
d000c9e6:       |  /-> 00e60023                 sb      a4,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000c9ea:       |  |   16fd                     addi    a3,a3,-1
d000c9ec:       |  |   167d                     addi    a2,a2,-1
d000c9ee:       |  \-- fee5                     bnez    a3,d000c9e6 <write_digits+0x62>
d000c9f0:       |      862e                     mv      a2,a1
d000c9f2:       \----> 006c                     addi    a1,sp,12
/proc/self/cwd/sw/device/lib/runtime/print.c:275
  return out.sink(out.data, buffer + (kWordBits - len), len);
d000c9f4:              8d91                     sub     a1,a1,a2
d000c9f6:              02058593                 addi    a1,a1,32
d000c9fa:              9882                     jalr    a7
/proc/self/cwd/sw/device/lib/runtime/print.c:276
}
d000c9fc:              50b2                     lw      ra,44(sp)
d000c9fe:              6145                     addi    sp,sp,48
d000ca00:              8082                     ret

d000ca02 <status_extract>:
status_err():
/proc/self/cwd/./sw/device/lib/base/status.h:150
 *
 * @param s The status code.
 * @return `absl_status_t` contained within the status_t.
 */
OT_ALWAYS_INLINE absl_status_t status_err(status_t s) {
  return s.value < 0
d000ca02:              00052813                 slti    a6,a0,0
d000ca06:              41f55793                 srai    a5,a0,0x1f
d000ca0a:              8fe9                     and     a5,a5,a0
d000ca0c:              8bfd                     andi    a5,a5,31
d000ca0e:              0017b713                 seqz    a4,a5
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:103
    "ErrorError",
};

bool status_extract(status_t s, const char **code, int32_t *arg, char *mod_id) {
  size_t err = (size_t)status_err(s);
  if (s.value < 0 && err == 0) {
d000ca12:              00e87833                 and     a6,a6,a4
d000ca16:              02000713                 li      a4,32
d000ca1a:          /-- 00081363                 bnez    a6,d000ca20 <status_extract+0x1e>
d000ca1e:          |   873e                     mv      a4,a5
/proc/self/cwd/sw/device/lib/base/status.c:106
    err = sizeof(status_codes) / sizeof(status_codes[0]) - 1;
  }
  *code = status_codes[err];
d000ca20:          \-> 00271813                 slli    a6,a4,0x2
d000ca24:              0fff5797                 auipc   a5,0xfff5
d000ca28:              5a078793                 addi    a5,a5,1440 # e0001fc4 <status_codes>
d000ca2c:              97c2                     add     a5,a5,a6
d000ca2e:              439c                     lw      a5,0(a5)
d000ca30:              c19c                     sw      a5,0(a1)
/proc/self/cwd/sw/device/lib/base/status.c:107
  if (err) {
d000ca32:              00173593                 seqz    a1,a4
d000ca36:       /----- cb1d                     beqz    a4,d000ca6c <status_extract+0x6a>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000ca38:       |      00555713                 srli    a4,a0,0x5
d000ca3c:       |      7ff77713                 andi    a4,a4,2047
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:108
    *arg = (int32_t)bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_ARG);
d000ca40:       |      c218                     sw      a4,0(a2)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ca42:       |      01055613                 srli    a2,a0,0x10
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:111
    uint32_t module_id =
        bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_MODULE_ID);
    *mod_id++ = '@' + ((module_id >> 0) & 0x1F);
d000ca46:       |      8a7d                     andi    a2,a2,31
d000ca48:       |      04066613                 ori     a2,a2,64
d000ca4c:       |      00c68023                 sb      a2,0(a3)
/proc/self/cwd/sw/device/lib/base/status.c:112
    *mod_id++ = '@' + ((module_id >> 5) & 0x1F);
d000ca50:       |      01555613                 srli    a2,a0,0x15
d000ca54:       |      8a7d                     andi    a2,a2,31
d000ca56:       |      04066613                 ori     a2,a2,64
d000ca5a:       |      00c680a3                 sb      a2,1(a3)
/proc/self/cwd/sw/device/lib/base/status.c:113
    *mod_id++ = '@' + ((module_id >> 10) & 0x1F);
d000ca5e:       |      8169                     srli    a0,a0,0x1a
d000ca60:       |      897d                     andi    a0,a0,31
d000ca62:       |      04056513                 ori     a0,a0,64
d000ca66:       |      00a68123                 sb      a0,2(a3)
d000ca6a:       |  /-- a011                     j       d000ca6e <status_extract+0x6c>
/proc/self/cwd/sw/device/lib/base/status.c:116
    return true;
  } else {
    *arg = s.value;
d000ca6c:       \--|-> c208                     sw      a0,0(a2)
/proc/self/cwd/sw/device/lib/base/status.c:119
    return false;
  }
}
d000ca6e:          \-> 0015c513                 xori    a0,a1,1
d000ca72:              8082                     ret

d000ca74 <rom_epmp_state_init>:
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:33
                          TOP_EARLGREY_SRAM_CTRL_RET_AON_RAM_SIZE_BYTES <
                      TOP_EARLGREY_MMIO_BASE_ADDR +
                          TOP_EARLGREY_MMIO_SIZE_BYTES,
              "Retention SRAM must be in the MMIO address space.");

void rom_epmp_state_init(lifecycle_state_t lc_state) {
d000ca74:                          1141                 addi    sp,sp,-16
d000ca76:                          c606                 sw      ra,12(sp)
d000ca78:                          c422                 sw      s0,8(sp)
d000ca7a:                          c226                 sw      s1,4(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ca7c:                          85aa                 mv      a1,a0
d000ca7e:                          cf8d0637             lui     a2,0xcf8d0
d000ca82:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  const epmp_region_t ram = {.start = TOP_EARLGREY_RAM_MAIN_BASE_ADDR,
                             .end = TOP_EARLGREY_RAM_MAIN_BASE_ADDR +
                                    TOP_EARLGREY_RAM_MAIN_SIZE_BYTES};

  epmp_perm_t debug_rom_access = kEpmpPermLockedNoAccess;
  switch (launder32(lc_state)) {
d000ca86:                   /----- 02b6d363             bge     a3,a1,d000caac <rom_epmp_state_init+0x38>
d000ca8a:                   |      aab60613             addi    a2,a2,-1365
d000ca8e:                /--|----- 02c58c63             beq     a1,a2,d000cac6 <rom_epmp_state_init+0x52>
d000ca92:                |  |      0b5a7637             lui     a2,0xb5a7
d000ca96:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000ca9a:             /--|--|----- 04c59163             bne     a1,a2,d000cadc <rom_epmp_state_init+0x68>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:65
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      debug_rom_access = kEpmpPermLockedReadWriteExecute;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ca9e:             |  |  |  /-- 00c50663             beq     a0,a2,d000caaa <rom_epmp_state_init+0x36>
d000caa2:             |  |  |  |   0000                 unimp
d000caa4:             |  |  |  |   0000                 unimp
d000caa6:             |  |  |  |   0000                 unimp
d000caa8:             |  |  |  |   0000                 unimp
d000caaa:       /-----|--|--|--\-X a0ad                 j       d000cb14 <rom_epmp_state_init+0xa0>
d000caac:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000cab0:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000cab4:       |  /--|--|-------- 04c59463             bne     a1,a2,d000cafc <rom_epmp_state_init+0x88>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:73
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000cab8:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000cac4 <rom_epmp_state_init+0x50>
d000cabc:       |  |  |  |     |   0000                 unimp
d000cabe:       |  |  |  |     |   0000                 unimp
d000cac0:       |  |  |  |     |   0000                 unimp
d000cac2:       |  |  |  |     |   0000                 unimp
d000cac4:       |  |  |  |  /--\-X a805                 j       d000caf4 <rom_epmp_state_init+0x80>
d000cac6:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000caca:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:77
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000cace:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000cada <rom_epmp_state_init+0x66>
d000cad2:       |  |  |     |  |   0000                 unimp
d000cad4:       |  |  |     |  |   0000                 unimp
d000cad6:       |  |  |     |  |   0000                 unimp
d000cad8:       |  |  |     |  |   0000                 unimp
d000cada:       +--|--|-----|--\-X a82d                 j       d000cb14 <rom_epmp_state_init+0xa0>
d000cadc:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000cae0:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000cae4:       |  |     /--|----- 0cc59e63             bne     a1,a2,d000cbc0 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:69
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cae8:       |  |     |  +----- 00c50663             beq     a0,a2,d000caf4 <rom_epmp_state_init+0x80>
d000caec:       |  |     |  |      0000                 unimp
d000caee:       |  |     |  |      0000                 unimp
d000caf0:       |  |     |  |      0000                 unimp
d000caf2:       |  |     |  |      0000                 unimp
d000caf4:       |  |     |  \----> 6529                 lui     a0,0xa
d000caf6:       |  |     |         80050493             addi    s1,a0,-2048 # 9800 <_stack_size+0x5800>
d000cafa:       |  |     |     /-- a005                 j       d000cb1a <rom_epmp_state_init+0xa6>
d000cafc:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000cb00:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000cb04:       |        +-----|-- 0ac59e63             bne     a1,a2,d000cbc0 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:61
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000cb08:       +--------|-----|-- 00c50663             beq     a0,a2,d000cb14 <rom_epmp_state_init+0xa0>
d000cb0c:       |        |     |   0000                 unimp
d000cb0e:       |        |     |   0000                 unimp
d000cb10:       |        |     |   0000                 unimp
d000cb12:       |        |     |   0000                 unimp
d000cb14:       \--------|-----|-> 6529                 lui     a0,0xa
d000cb16:                |     |   f0050493             addi    s1,a0,-256 # 9f00 <_stack_size+0x5f00>
d000cb1a:                |     \-> 0fff3417             auipc   s0,0xfff3
d000cb1e:                |         50640413             addi    s0,s0,1286 # e0000020 <epmp_state>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:89
  // Initialize in-memory copy of ePMP register state.
  //
  // The actual hardware configuration is performed separately, either by reset
  // logic or in assembly. This code must be kept in sync with any changes
  // to the hardware configuration.
  memset(&epmp_state, 0, sizeof(epmp_state));
d000cb22:                |         05400613             li      a2,84
d000cb26:                |         8522                 mv      a0,s0
d000cb28:                |         4581                 li      a1,0
d000cb2a:                |         594010ef             jal     ra,d000e0be <memset>
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
 */
inline void epmp_state_configure_tor(uint32_t entry, epmp_region_t region,
                                     epmp_perm_t perm) {
  // Set address registers.
  if (entry > 0) {
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cb2e:                |         ffffb517             auipc   a0,0xffffb
d000cb32:                |         4d250513             addi    a0,a0,1234 # d0008000 <_rom_interrupt_vector_asm>
d000cb36:                |         8109                 srli    a0,a0,0x2
d000cb38:                |         c808                 sw      a0,16(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  }
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cb3a:                |         00002517             auipc   a0,0x2
d000cb3e:                |         a9a50513             addi    a0,a0,-1382 # d000e5d4 <_text_end>
d000cb42:                |         8109                 srli    a0,a0,0x2
d000cb44:                |         c848                 sw      a0,20(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:167

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeTor | perm);
d000cb46:                |         4008                 lw      a0,0(s0)
d000cb48:                |         340035b7             lui     a1,0x34003
d000cb4c:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
 */
inline void epmp_state_configure_napot(uint32_t entry, epmp_region_t region,
                                       epmp_perm_t perm) {
  // Set address register.
  uint32_t len = (region.end - region.start - 1) >> 3;
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cb4e:                |         cc0c                 sw      a1,24(s0)
d000cb50:                |         ff0005b7             lui     a1,0xff000
d000cb54:                |         0ff58593             addi    a1,a1,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000cb58:                |         8d6d                 and     a0,a0,a1
d000cb5a:                |         009995b7             lui     a1,0x999
d000cb5e:                |         d0058593             addi    a1,a1,-768 # 998d00 <_rom_ext_virtual_size+0x958d00>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000cb62:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb64:                |         c008                 sw      a0,0(s0)
d000cb66:                |         3c010537             lui     a0,0x3c010
d000cb6a:                |         157d                 addi    a0,a0,-1
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cb6c:                |         d048                 sw      a0,36(s0)
d000cb6e:                |         09900513             li      a0,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb72:                |         00a402a3             sb      a0,5(s0)
d000cb76:                |         6511                 lui     a0,0x4
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cb78:                |         dc08                 sw      a0,56(s0)
d000cb7a:                |         34000537             lui     a0,0x34000
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cb7e:                |         dc48                 sw      a0,60(s0)
d000cb80:                |         08b00513             li      a0,139
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:208
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeNapot | perm);
d000cb84:                |         00c44583             lbu     a1,12(s0)
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb88:                |         00a405a3             sb      a0,11(s0)
d000cb8c:                |         1ff00513             li      a0,511
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cb90:                |         c068                 sw      a0,68(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cb92:                |         0095e533             or      a0,a1,s1
epmp_state_configure_na4():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:182
  epmp_state.pmpaddr[entry] = region.start >> 2;
d000cb96:                |         1000f597             auipc   a1,0x1000f
d000cb9a:                |         46a58593             addi    a1,a1,1130 # e001c000 <_stack_start>
d000cb9e:                |         8189                 srli    a1,a1,0x2
d000cba0:                |         c42c                 sw      a1,72(s0)
d000cba2:                |         380045b7             lui     a1,0x38004
d000cba6:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cba8:                |         c46c                 sw      a1,76(s0)
d000cbaa:                |         9b9005b7             lui     a1,0x9b900
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cbae:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cbb0:                |         c448                 sw      a0,12(s0)
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:97
  epmp_state_configure_napot(5, eflash, kEpmpPermLockedReadOnly);
  epmp_state_configure_tor(11, mmio, kEpmpPermLockedReadWrite);
  epmp_state_configure_napot(13, debug_rom, debug_rom_access);
  epmp_state_configure_na4(14, stack_guard, kEpmpPermLockedNoAccess);
  epmp_state_configure_napot(15, ram, kEpmpPermLockedReadWrite);
  epmp_state.mseccfg = 0x0; //EPMP_MSECCFG_MMWP | EPMP_MSECCFG_RLB;
d000cbb2:                |         04042823             sw      zero,80(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:98
}
d000cbb6:                |         4492                 lw      s1,4(sp)
d000cbb8:                |         4422                 lw      s0,8(sp)
d000cbba:                |         40b2                 lw      ra,12(sp)
d000cbbc:                |         0141                 addi    sp,sp,16
d000cbbe:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:81
      HARDENED_UNREACHABLE();
d000cbc0:                \-------> 0000                 unimp
d000cbc2:                          0000                 unimp
d000cbc4:                          0000                 unimp
d000cbc6:                          0000                 unimp

d000cbc8 <rom_epmp_unlock_rom_ext_rx>:
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cbc8:       8109                    srli    a0,a0,0x2
d000cbca:       0fff3617                auipc   a2,0xfff3
d000cbce:       45660613                addi    a2,a2,1110 # e0000020 <epmp_state>
d000cbd2:       ce48                    sw      a0,28(a2)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cbd4:       8189                    srli    a1,a1,0x2
d000cbd6:       d20c                    sw      a1,32(a2)
d000cbd8:       08d00693                li      a3,141
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cbdc:       00d60223                sb      a3,4(a2)
rom_epmp_unlock_rom_ext_rx():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:116
  //
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+
  CSR_WRITE(CSR_REG_PMPADDR3, region.start >> 2);
d000cbe0:       3b351073                csrw    pmpaddr3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:117
  CSR_WRITE(CSR_REG_PMPADDR4, region.end >> 2);
d000cbe4:       3b459073                csrw    pmpaddr4,a1
d000cbe8:       0ff00513                li      a0,255
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:118
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff);
d000cbec:       3a153073                csrc    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:119
  CSR_SET_BITS(CSR_REG_PMPCFG1, kEpmpModeTor | kEpmpPermLockedReadExecute);
d000cbf0:       3a16a073                csrs    pmpcfg1,a3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:120
}
d000cbf4:       8082                    ret

d000cbf6 <rom_epmp_unlock_rom_ext_r>:
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:202
  uint32_t len = (region.end - region.start - 1) >> 3;
d000cbf6:       fff54613                not     a2,a0
d000cbfa:       95b2                    add     a1,a1,a2
d000cbfc:       818d                    srli    a1,a1,0x3
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cbfe:       8109                    srli    a0,a0,0x2
d000cc00:       8d4d                    or      a0,a0,a1
d000cc02:       0fff3597                auipc   a1,0xfff3
d000cc06:       41e58593                addi    a1,a1,1054 # e0000020 <epmp_state>
d000cc0a:       d588                    sw      a0,40(a1)
d000cc0c:       09900613                li      a2,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cc10:       00c58323                sb      a2,6(a1)
rom_epmp_unlock_rom_ext_r():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:138
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+

  CSR_WRITE(CSR_REG_PMPADDR6,
d000cc14:       3b651073                csrw    pmpaddr6,a0
d000cc18:       00ff0537                lui     a0,0xff0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:140
            region.start >> 2 | (region.end - region.start - 1) >> 3);
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff << 16);
d000cc1c:       3a153073                csrc    pmpcfg1,a0
d000cc20:       00990537                lui     a0,0x990
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:141
  CSR_SET_BITS(CSR_REG_PMPCFG1,
d000cc24:       3a152073                csrs    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:143
               ((kEpmpModeNapot | kEpmpPermLockedReadOnly) << 16));
}
d000cc28:       8082                    ret

d000cc2a <rom_epmp_config_debug_rom>:
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:145

void rom_epmp_config_debug_rom(lifecycle_state_t lc_state) {
d000cc2a:                          1ff00593             li      a1,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:159
  //
  //            32          24          16           8           0
  //             +------------+------------+------------+------------+
  // `pmpcfg3` = | `pmp15cfg` | `pmp14cfg` | `pmp13cfg` | `pmp12cfg` |
  //             +------------+------------+------------+------------+
  CSR_WRITE(CSR_REG_PMPADDR13, pmpaddr);
d000cc2e:                          3bd59073             csrw    pmpaddr13,a1
d000cc32:                          65c1                 lui     a1,0x10
d000cc34:                          f0058593             addi    a1,a1,-256 # ff00 <_stack_size+0xbf00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:160
  CSR_CLEAR_BITS(CSR_REG_PMPCFG3, 0xff00);
d000cc38:                          3a35b073             csrc    pmpcfg3,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cc3c:                          85aa                 mv      a1,a0
d000cc3e:                          cf8d0637             lui     a2,0xcf8d0
d000cc42:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  uint32_t pmpcfg;
  switch (launder32(lc_state)) {
d000cc46:                   /----- 02b6d363             bge     a3,a1,d000cc6c <rom_epmp_config_debug_rom+0x42>
d000cc4a:                   |      aab60613             addi    a2,a2,-1365
d000cc4e:                /--|----- 02c58c63             beq     a1,a2,d000cc86 <rom_epmp_config_debug_rom+0x5c>
d000cc52:                |  |      0b5a7637             lui     a2,0xb5a7
d000cc56:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000cc5a:             /--|--|----- 04c59163             bne     a1,a2,d000cc9c <rom_epmp_config_debug_rom+0x72>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:168
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000cc5e:             |  |  |  /-- 00c50663             beq     a0,a2,d000cc6a <rom_epmp_config_debug_rom+0x40>
d000cc62:             |  |  |  |   0000                 unimp
d000cc64:             |  |  |  |   0000                 unimp
d000cc66:             |  |  |  |   0000                 unimp
d000cc68:             |  |  |  |   0000                 unimp
d000cc6a:       /-----|--|--|--\-X a0ad                 j       d000ccd4 <rom_epmp_config_debug_rom+0xaa>
d000cc6c:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000cc70:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000cc74:       |  /--|--|-------- 04c59463             bne     a1,a2,d000ccbc <rom_epmp_config_debug_rom+0x92>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:176
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000cc78:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000cc84 <rom_epmp_config_debug_rom+0x5a>
d000cc7c:       |  |  |  |     |   0000                 unimp
d000cc7e:       |  |  |  |     |   0000                 unimp
d000cc80:       |  |  |  |     |   0000                 unimp
d000cc82:       |  |  |  |     |   0000                 unimp
d000cc84:       |  |  |  |  /--\-X a805                 j       d000ccb4 <rom_epmp_config_debug_rom+0x8a>
d000cc86:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000cc8a:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:180
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000cc8e:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000cc9a <rom_epmp_config_debug_rom+0x70>
d000cc92:       |  |  |     |  |   0000                 unimp
d000cc94:       |  |  |     |  |   0000                 unimp
d000cc96:       |  |  |     |  |   0000                 unimp
d000cc98:       |  |  |     |  |   0000                 unimp
d000cc9a:       +--|--|-----|--\-X a82d                 j       d000ccd4 <rom_epmp_config_debug_rom+0xaa>
d000cc9c:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000cca0:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000cca4:       |  |     /--|----- 02c59e63             bne     a1,a2,d000cce0 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cca8:       |  |     |  +----- 00c50663             beq     a0,a2,d000ccb4 <rom_epmp_config_debug_rom+0x8a>
d000ccac:       |  |     |  |      0000                 unimp
d000ccae:       |  |     |  |      0000                 unimp
d000ccb0:       |  |     |  |      0000                 unimp
d000ccb2:       |  |     |  |      0000                 unimp
d000ccb4:       |  |     |  \----> 6529                 lui     a0,0xa
d000ccb6:       |  |     |         80050513             addi    a0,a0,-2048 # 9800 <_stack_size+0x5800>
d000ccba:       |  |     |     /-- a005                 j       d000ccda <rom_epmp_config_debug_rom+0xb0>
d000ccbc:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000ccc0:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000ccc4:       |        +-----|-- 00c59e63             bne     a1,a2,d000cce0 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:164
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000ccc8:       +--------|-----|-- 00c50663             beq     a0,a2,d000ccd4 <rom_epmp_config_debug_rom+0xaa>
d000cccc:       |        |     |   0000                 unimp
d000ccce:       |        |     |   0000                 unimp
d000ccd0:       |        |     |   0000                 unimp
d000ccd2:       |        |     |   0000                 unimp
d000ccd4:       \--------|-----|-> 6529                 lui     a0,0xa
d000ccd6:                |     |   f0050513             addi    a0,a0,-256 # 9f00 <_stack_size+0x5f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:186
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  CSR_SET_BITS(CSR_REG_PMPCFG3, pmpcfg);
d000ccda:                |     \-> 3a352073             csrs    pmpcfg3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:187
}
d000ccde:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:184
      HARDENED_UNREACHABLE();
d000cce0:                \-------> 0000                 unimp
d000cce2:                          0000                 unimp
d000cce4:                          0000                 unimp
d000cce6:                          0000                 unimp

d000cce8 <sigverify_rsa_verify>:
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:199

rom_error_t sigverify_rsa_verify(const sigverify_rsa_buffer_t *signature,
                                 const sigverify_rsa_key_t *key,
                                 const hmac_digest_t *act_digest,
                                 lifecycle_state_t lc_state,
                                 uint32_t *flash_exec) {
d000cce8:                             7125                      addi    sp,sp,-416
d000ccea:                             18112e23                  sw      ra,412(sp)
d000ccee:                             18812c23                  sw      s0,408(sp)
d000ccf2:                             18912a23                  sw      s1,404(sp)
d000ccf6:                             19212823                  sw      s2,400(sp)
d000ccfa:                             19312623                  sw      s3,396(sp)
d000ccfe:                             19412423                  sw      s4,392(sp)
d000cd02:                             19512223                  sw      s5,388(sp)
d000cd06:                             8aba                      mv      s5,a4
d000cd08:                             577d                      li      a4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:200
  *flash_exec = UINT32_MAX;
d000cd0a:                             00eaa023                  sw      a4,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cd0e:                             8736                      mv      a4,a3
d000cd10:                             cf8d0837                  lui     a6,0xcf8d0
d000cd14:                             aaa80793                  addi    a5,a6,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
d000cd18:                             84b2                      mv      s1,a2
d000cd1a:                             89ae                      mv      s3,a1
d000cd1c:                             892a                      mv      s2,a0
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cd1e:                      /----- 02e7d363                  bge     a5,a4,d000cd44 <sigverify_rsa_verify+0x5c>
d000cd22:                      |      aab80513                  addi    a0,a6,-1365
d000cd26:                   /--|----- 02a70c63                  beq     a4,a0,d000cd5e <sigverify_rsa_verify+0x76>
d000cd2a:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000cd2e:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000cd32:                /--|--|----- 04a71163                  bne     a4,a0,d000cd74 <sigverify_rsa_verify+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:179
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000cd36:                |  |  |  /-- 00a68663                  beq     a3,a0,d000cd42 <sigverify_rsa_verify+0x5a>
d000cd3a:                |  |  |  |   0000                      unimp
d000cd3c:                |  |  |  |   0000                      unimp
d000cd3e:                |  |  |  |   0000                      unimp
d000cd40:                |  |  |  |   0000                      unimp
d000cd42:             /--|--|--|--\-X a0a9                      j       d000cd8c <sigverify_rsa_verify+0xa4>
d000cd44:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000cd48:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cd4c:          /--|--|--|-------- 06a71363                  bne     a4,a0,d000cdb2 <sigverify_rsa_verify+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:185
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000cd50:          |  |  |  |     /-- 00a68663                  beq     a3,a0,d000cd5c <sigverify_rsa_verify+0x74>
d000cd54:          |  |  |  |     |   0000                      unimp
d000cd56:          |  |  |  |     |   0000                      unimp
d000cd58:          |  |  |  |     |   0000                      unimp
d000cd5a:          |  |  |  |     |   0000                      unimp
d000cd5c:          |  +--|--|-----\-X a805                      j       d000cd8c <sigverify_rsa_verify+0xa4>
d000cd5e:          |  |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000cd62:          |  |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:188
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000cd66:          |  |  |        /-- 00a68663                  beq     a3,a0,d000cd72 <sigverify_rsa_verify+0x8a>
d000cd6a:          |  |  |        |   0000                      unimp
d000cd6c:          |  |  |        |   0000                      unimp
d000cd6e:          |  |  |        |   0000                      unimp
d000cd70:          |  |  |        |   0000                      unimp
d000cd72:          |  +--|--------\-X a829                      j       d000cd8c <sigverify_rsa_verify+0xa4>
d000cd74:          |  |  \----------> 65f25537                  lui     a0,0x65f25
d000cd78:          |  |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cd7c:       /--|--|-------------- 1ea71963                  bne     a4,a0,d000cf6e <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:182
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cd80:       |  |  +-------------- 00a68663                  beq     a3,a0,d000cd8c <sigverify_rsa_verify+0xa4>
d000cd84:       |  |  |               0000                      unimp
d000cd86:       |  |  |               0000                      unimp
d000cd88:       |  |  |               0000                      unimp
d000cd8a:       |  |  |               0000                      unimp
d000cd8c:       |  |  \-------------> 0e400513                  li      a0,228
d000cd90:       |  |                  03a010ef                  jal     ra,d000ddca <otp_read32>
d000cd94:       |  |                  1d400593                  li      a1,468
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:203
  hardened_bool_t use_sw = sigverify_use_sw_rsa_verify(lc_state);
  sigverify_rsa_buffer_t enc_msg;
  switch (use_sw) {
d000cd98:       |  |           /----- 02b50963                  beq     a0,a1,d000cdca <sigverify_rsa_verify+0xe2>
d000cd9c:       |  |           |      73900a13                  li      s4,1849
d000cda0:       |  |     /-----|----- 1d451363                  bne     a0,s4,d000cf66 <sigverify_rsa_verify+0x27e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:205
    case kHardenedBoolTrue:
      RETURN_IF_ERROR(sigverify_mod_exp_ibex(key, signature, &enc_msg));
d000cda4:       |  |     |     |      860a                      mv      a2,sp
d000cda6:       |  |     |     |      854e                      mv      a0,s3
d000cda8:       |  |     |     |      85ca                      mv      a1,s2
d000cdaa:       |  |     |     |      249d                      jal     d000d010 <sigverify_mod_exp_ibex>
d000cdac:       |  |     |     |  /-- 03450763                  beq     a0,s4,d000cdda <sigverify_rsa_verify+0xf2>
d000cdb0:       |  |     |  /--|--|-- aa59                      j       d000cf46 <sigverify_rsa_verify+0x25e>
d000cdb2:       |  \-----|--|--|--|-> b2866537                  lui     a0,0xb2866
d000cdb6:       |        |  |  |  |   fbb50513                  addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cdba:       +--------|--|--|--|-- 1aa71a63                  bne     a4,a0,d000cf6e <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:174
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000cdbe:       |        |  |  +--|-- 00a68663                  beq     a3,a0,d000cdca <sigverify_rsa_verify+0xe2>
d000cdc2:       |        |  |  |  |   0000                      unimp
d000cdc4:       |        |  |  |  |   0000                      unimp
d000cdc6:       |        |  |  |  |   0000                      unimp
d000cdc8:       |        |  |  |  |   0000                      unimp
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:208
      break;
    case kHardenedBoolFalse:
      RETURN_IF_ERROR(sigverify_mod_exp_otbn(key, signature, &enc_msg));
d000cdca:       |        |  |  \--|-> 860a                      mv      a2,sp
d000cdcc:       |        |  |     |   854e                      mv      a0,s3
d000cdce:       |        |  |     |   85ca                      mv      a1,s2
d000cdd0:       |        |  |     |   2d7d                      jal     d000d48e <sigverify_mod_exp_otbn>
d000cdd2:       |        |  |     |   73900593                  li      a1,1849
d000cdd6:       |        |  +-----|-- 16b51863                  bne     a0,a1,d000cf46 <sigverify_rsa_verify+0x25e>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cdda:       |        |  |     \-> 4581                      li      a1,0
d000cddc:       |        |  |         461d                      li      a2,7
d000cdde:       |        |  |         4501                      li      a0,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000cde0:       |        |  |  /----- 02b66663                  bltu    a2,a1,d000ce0c <sigverify_rsa_verify+0x124>
d000cde4:       |        |  |  |      4501                      li      a0,0
d000cde6:       |        |  |  |      858a                      mv      a1,sp
d000cde8:       |        |  |  |      00002617                  auipc   a2,0x2
d000cdec:       |        |  |  |      34460613                  addi    a2,a2,836 # d000f12c <kSigverifyShares>
d000cdf0:       |        |  |  |      46a1                      li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000cdf2:       |        |  |  |  /-> 4098                      lw      a4,0(s1)
d000cdf4:       |        |  |  |  |   421c                      lw      a5,0(a2)
d000cdf6:       |        |  |  |  |   4180                      lw      s0,0(a1)
d000cdf8:       |        |  |  |  |   8f3d                      xor     a4,a4,a5
d000cdfa:       |        |  |  |  |   8f21                      xor     a4,a4,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000cdfc:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000cdfe:       |        |  |  |  |   c198                      sw      a4,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce00:       |        |  |  |  |   872a                      mv      a4,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000ce02:       |        |  |  |  |   0591                      addi    a1,a1,4
d000ce04:       |        |  |  |  |   0611                      addi    a2,a2,4
d000ce06:       |        |  |  |  |   0491                      addi    s1,s1,4
d000ce08:       |        |  |  |  \-- fed765e3                  bltu    a4,a3,d000cdf2 <sigverify_rsa_verify+0x10a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce0c:       |        |  |  \----> 4581                      li      a1,0
d000ce0e:       |        |  |         4611                      li      a2,4
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000ce10:       |        |  |  /----- 04b66063                  bltu    a2,a1,d000ce50 <sigverify_rsa_verify+0x168>
d000ce14:       |        |  |  |      00251613                  slli    a2,a0,0x2
d000ce18:       |        |  |  |      858a                      mv      a1,sp
d000ce1a:       |        |  |  |      95b2                      add     a1,a1,a2
d000ce1c:       |        |  |  |      00002697                  auipc   a3,0x2
d000ce20:       |        |  |  |      31068693                  addi    a3,a3,784 # d000f12c <kSigverifyShares>
d000ce24:       |        |  |  |      96b2                      add     a3,a3,a2
d000ce26:       |        |  |  |      4605                      li      a2,1
d000ce28:       |        |  |  |      00002717                  auipc   a4,0x2
d000ce2c:       |        |  |  |      48470713                  addi    a4,a4,1156 # d000f2ac <sigverify_encoded_message_check.kEncodedSha256>
d000ce30:       |        |  |  |      4815                      li      a6,5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:116
    enc_msg_ptr[i] ^= kEncodedSha256[j] ^ kSigverifyShares[i];
d000ce32:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000ce34:       |        |  |  |  |   4280                      lw      s0,0(a3)
d000ce36:       |        |  |  |  |   419c                      lw      a5,0(a1)
d000ce38:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000ce3a:       |        |  |  |  |   8fa5                      xor     a5,a5,s1
d000ce3c:       |        |  |  |  |   c19c                      sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce3e:       |        |  |  |  |   87b2                      mv      a5,a2
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000ce40:       |        |  |  |  |   0605                      addi    a2,a2,1
d000ce42:       |        |  |  |  |   0711                      addi    a4,a4,4
d000ce44:       |        |  |  |  |   0591                      addi    a1,a1,4
d000ce46:       |        |  |  |  |   0691                      addi    a3,a3,4
d000ce48:       |        |  |  |  \-- ff07e5e3                  bltu    a5,a6,d000ce32 <sigverify_rsa_verify+0x14a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce4c:       |        |  |  |      9532                      add     a0,a0,a2
d000ce4e:       |        |  |  |      157d                      addi    a0,a0,-1
d000ce50:       |        |  |  \----> 4601                      li      a2,0
d000ce52:       |        |  |         05100693                  li      a3,81
d000ce56:       |        |  |         00002597                  auipc   a1,0x2
d000ce5a:       |        |  |         2d658593                  addi    a1,a1,726 # d000f12c <kSigverifyShares>
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000ce5e:       |        |  |  /----- 02c6ec63                  bltu    a3,a2,d000ce96 <sigverify_rsa_verify+0x1ae>
d000ce62:       |        |  |  |      00251693                  slli    a3,a0,0x2
d000ce66:       |        |  |  |      860a                      mv      a2,sp
d000ce68:       |        |  |  |      9636                      add     a2,a2,a3
d000ce6a:       |        |  |  |      00002717                  auipc   a4,0x2
d000ce6e:       |        |  |  |      2c270713                  addi    a4,a4,706 # d000f12c <kSigverifyShares>
d000ce72:       |        |  |  |      9736                      add     a4,a4,a3
d000ce74:       |        |  |  |      4685                      li      a3,1
d000ce76:       |        |  |  |      05200793                  li      a5,82
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:124
    enc_msg_ptr[i] ^= 0xffffffff ^ kSigverifyShares[i];
d000ce7a:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000ce7c:       |        |  |  |  |   4200                      lw      s0,0(a2)
d000ce7e:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000ce80:       |        |  |  |  |   fff4c493                  not     s1,s1
d000ce84:       |        |  |  |  |   c204                      sw      s1,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce86:       |        |  |  |  |   84b6                      mv      s1,a3
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000ce88:       |        |  |  |  |   0685                      addi    a3,a3,1
d000ce8a:       |        |  |  |  |   0611                      addi    a2,a2,4
d000ce8c:       |        |  |  |  |   0711                      addi    a4,a4,4
d000ce8e:       |        |  |  |  \-- fef4e6e3                  bltu    s1,a5,d000ce7a <sigverify_rsa_verify+0x192>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
  enc_msg_ptr[i] ^= 0x0001ffff ^ kSigverifyShares[i];
d000ce92:       |        |  |  |      9536                      add     a0,a0,a3
d000ce94:       |        |  |  |      157d                      addi    a0,a0,-1
d000ce96:       |        |  |  \----> 00251693                  slli    a3,a0,0x2
d000ce9a:       |        |  |         00b68633                  add     a2,a3,a1
d000ce9e:       |        |  |         4218                      lw      a4,0(a2)
d000cea0:       |        |  |         860a                      mv      a2,sp
d000cea2:       |        |  |         96b2                      add     a3,a3,a2
d000cea4:       |        |  |         429c                      lw      a5,0(a3)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cea6:       |        |  |         4481                      li      s1,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
d000cea8:       |        |  |         8f3d                      xor     a4,a4,a5
d000ceaa:       |        |  |         000207b7                  lui     a5,0x20
d000ceae:       |        |  |         17fd                      addi    a5,a5,-1
d000ceb0:       |        |  |         8f3d                      xor     a4,a4,a5
d000ceb2:       |        |  |         c298                      sw      a4,0(a3)
d000ceb4:       |        |  |         05f00693                  li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:128
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords - 1);
d000ceb8:       |        |  |     /-- 00d50663                  beq     a0,a3,d000cec4 <sigverify_rsa_verify+0x1dc>
d000cebc:       |        |  |     |   0000                      unimp
d000cebe:       |        |  |     |   0000                      unimp
d000cec0:       |        |  |     |   0000                      unimp
d000cec2:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:132
  *flash_exec = 0;
d000cec4:       |        |  |     \-> 000aa023                  sw      zero,0(s5)
d000cec8:       |        |  |         4501                      li      a0,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000ceca:       |        |  |  /----- 0296ec63                  bltu    a3,s1,d000cf02 <sigverify_rsa_verify+0x21a>
d000cece:       |        |  |  |      4701                      li      a4,0
d000ced0:       |        |  |  |      4501                      li      a0,0
d000ced2:       |        |  |  |      06000693                  li      a3,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:137
    diff |= enc_msg_ptr[i] ^ kSigverifyShares[i];
d000ced6:       |        |  |  |  /-> 421c                      lw      a5,0(a2)
d000ced8:       |        |  |  |  |   4184                      lw      s1,0(a1)
d000ceda:       |        |  |  |  |   8cbd                      xor     s1,s1,a5
d000cedc:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000cede:       |        |  |  |  |   40e004b3                  neg     s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000cee2:       |        |  |  |  |   000aa403                  lw      s0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000cee6:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:139
    diff |= ~(diff >> 31) + 1;  // Set to all 1s if MSB is set, no change o/w.
d000cee8:       |        |  |  |  |   41f75493                  srai    s1,a4,0x1f
d000ceec:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000ceee:       |        |  |  |  |   8fa1                      xor     a5,a5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000cef0:       |        |  |  |  |   8fd9                      or      a5,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000cef2:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000cef4:       |        |  |  |  |   00faa023                  sw      a5,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cef8:       |        |  |  |  |   87aa                      mv      a5,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000cefa:       |        |  |  |  |   0591                      addi    a1,a1,4
d000cefc:       |        |  |  |  |   0611                      addi    a2,a2,4
d000cefe:       |        |  |  |  \-- fcd7ece3                  bltu    a5,a3,d000ced6 <sigverify_rsa_verify+0x1ee>
d000cf02:       |        |  |  \----> 06000593                  li      a1,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:145
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords);
d000cf06:       |        |  |     /-- 00b50663                  beq     a0,a1,d000cf12 <sigverify_rsa_verify+0x22a>
d000cf0a:       |        |  |     |   0000                      unimp
d000cf0c:       |        |  |     |   0000                      unimp
d000cf0e:       |        |  |     |   0000                      unimp
d000cf10:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:150
      (*flash_exec << 21 ^ *flash_exec << 10 ^ *flash_exec >> 1) >> 21;
d000cf12:       |        |  |     \-> 000aa503                  lw      a0,0(s5)
d000cf16:       |        |  |         01551593                  slli    a1,a0,0x15
d000cf1a:       |        |  |         00a51613                  slli    a2,a0,0xa
d000cf1e:       |        |  |         8db1                      xor     a1,a1,a2
d000cf20:       |        |  |         8159                      srli    a0,a0,0x16
d000cf22:       |        |  |         81d5                      srli    a1,a1,0x15
d000cf24:       |        |  |         8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cf26:       |        |  |         862a                      mv      a2,a0
d000cf28:       |        |  |         73900593                  li      a1,1849
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:151
  if (launder32(result) == kErrorOk) {
d000cf2c:       |        |  |  /----- 00b61963                  bne     a2,a1,d000cf3e <sigverify_rsa_verify+0x256>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:152
    HARDENED_CHECK_EQ(result, kErrorOk);
d000cf30:       |        |  |  |  /-- 00b50663                  beq     a0,a1,d000cf3c <sigverify_rsa_verify+0x254>
d000cf34:       |        |  |  |  |   0000                      unimp
d000cf36:       |        |  |  |  |   0000                      unimp
d000cf38:       |        |  |  |  |   0000                      unimp
d000cf3a:       |        |  |  |  |   0000                      unimp
d000cf3c:       |        |  +--|--\-X a029                      j       d000cf46 <sigverify_rsa_verify+0x25e>
d000cf3e:       |        |  |  \----> 01535537                  lui     a0,0x1535
d000cf42:       |        |  |         60350513                  addi    a0,a0,1539 # 1535603 <_rom_ext_virtual_size+0x14f5603>
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:214
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  return sigverify_encoded_message_check(&enc_msg, act_digest, flash_exec);
}
d000cf46:       |        |  \-------> 18412a83                  lw      s5,388(sp)
d000cf4a:       |        |            18812a03                  lw      s4,392(sp)
d000cf4e:       |        |            18c12983                  lw      s3,396(sp)
d000cf52:       |        |            19012903                  lw      s2,400(sp)
d000cf56:       |        |            19412483                  lw      s1,404(sp)
d000cf5a:       |        |            19812403                  lw      s0,408(sp)
d000cf5e:       |        |            19c12083                  lw      ra,412(sp)
d000cf62:       |        |            611d                      addi    sp,sp,416
d000cf64:       |        |            8082                      ret
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:211
      HARDENED_UNREACHABLE();
d000cf66:       |        \----------> 0000                      unimp
d000cf68:       |                     0000                      unimp
d000cf6a:       |                     0000                      unimp
d000cf6c:       |                     0000                      unimp
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:191
      HARDENED_UNREACHABLE();
d000cf6e:       \-------------------> 0000                      unimp
d000cf70:                             0000                      unimp
d000cf72:                             0000                      unimp
d000cf74:                             0000                      unimp

d000cf76 <sigverify_usage_constraints_get>:
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:217

void sigverify_usage_constraints_get(
    uint32_t selector_bits, manifest_usage_constraints_t *usage_constraints) {
d000cf76:              1141                     addi    sp,sp,-16
d000cf78:              c606                     sw      ra,12(sp)
d000cf7a:              c422                     sw      s0,8(sp)
d000cf7c:              c226                     sw      s1,4(sp)
d000cf7e:              c04a                     sw      s2,0(sp)
d000cf80:              892e                     mv      s2,a1
d000cf82:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:218
  usage_constraints->selector_bits = selector_bits;
d000cf84:              c188                     sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:219
  lifecycle_device_id_get(&usage_constraints->device_id);
d000cf86:              00458413                 addi    s0,a1,4
d000cf8a:              8522                     mv      a0,s0
d000cf8c:              5dd000ef                 jal     ra,d000dd68 <lifecycle_device_id_get>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:222

  usage_constraints->manuf_state_creator =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MANUF_STATE_OFFSET);
d000cf90:              10400513                 li      a0,260
d000cf94:              637000ef                 jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:221
  usage_constraints->manuf_state_creator =
d000cf98:              02a92223                 sw      a0,36(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:224
  usage_constraints->manuf_state_owner =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_MANUF_STATE_OFFSET);
d000cf9c:              56800513                 li      a0,1384
d000cfa0:              62b000ef                 jal     ra,d000ddca <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:223
  usage_constraints->manuf_state_owner =
d000cfa4:              02a92423                 sw      a0,40(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:225
  usage_constraints->life_cycle_state = lifecycle_state_get();
d000cfa8:              411000ef                 jal     ra,d000dbb8 <lifecycle_state_get>
d000cfac:              4581                     li      a1,0
d000cfae:              02a92623                 sw      a0,44(s2)
d000cfb2:              a5a5a537                 lui     a0,0xa5a5a
d000cfb6:              5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
d000cfba:              4621                     li      a2,8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000cfbc:       /----> 00b4d6b3                 srl     a3,s1,a1
d000cfc0:       |      8a85                     andi    a3,a3,1
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:232
  static_assert(
      kManifestSelectorBitDeviceIdFirst == 0 &&
          kManifestSelectorBitDeviceIdLast == kLifecycleDeviceIdNumWords - 1,
      "mapping from selector_bits to device_id changed, loop must be updated");
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    if (!bitfield_bit32_read(selector_bits, i)) {
d000cfc2:       |  /-- e291                     bnez    a3,d000cfc6 <sigverify_usage_constraints_get+0x50>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:233
      usage_constraints->device_id.device_id[i] =
d000cfc4:       |  |   c008                     sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:231
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000cfc6:       |  \-> 0585                     addi    a1,a1,1
d000cfc8:       |      0411                     addi    s0,s0,4
d000cfca:       \----- fec599e3                 bne     a1,a2,d000cfbc <sigverify_usage_constraints_get+0x46>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cfce:              1004f513                 andi    a0,s1,256
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:237
          MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
    }
  }
  if (!bitfield_bit32_read(selector_bits,
d000cfd2:          /-- e519                     bnez    a0,d000cfe0 <sigverify_usage_constraints_get+0x6a>
d000cfd4:          |   a5a5a537                 lui     a0,0xa5a5a
d000cfd8:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:239
                           kManifestSelectorBitManufStateCreator)) {
    usage_constraints->manuf_state_creator =
d000cfdc:          |   02a92223                 sw      a0,36(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cfe0:          \-> 2004f513                 andi    a0,s1,512
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:242
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits,
d000cfe4:          /-- e519                     bnez    a0,d000cff2 <sigverify_usage_constraints_get+0x7c>
d000cfe6:          |   a5a5a537                 lui     a0,0xa5a5a
d000cfea:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:244
                           kManifestSelectorBitManufStateOwner)) {
    usage_constraints->manuf_state_owner =
d000cfee:          |   02a92423                 sw      a0,40(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cff2:          \-> 4004f513                 andi    a0,s1,1024
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:247
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits, kManifestSelectorBitLifeCycleState)) {
d000cff6:          /-- e519                     bnez    a0,d000d004 <sigverify_usage_constraints_get+0x8e>
d000cff8:          |   a5a5a537                 lui     a0,0xa5a5a
d000cffc:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:248
    usage_constraints->life_cycle_state =
d000d000:          |   02a92623                 sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:251
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
}
d000d004:          \-> 4902                     lw      s2,0(sp)
d000d006:              4492                     lw      s1,4(sp)
d000d008:              4422                     lw      s0,8(sp)
d000d00a:              40b2                     lw      ra,12(sp)
d000d00c:              0141                     addi    sp,sp,16
d000d00e:              8082                     ret

d000d010 <sigverify_mod_exp_ibex>:
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:169
  }
}

rom_error_t sigverify_mod_exp_ibex(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000d010:                          7125                 addi    sp,sp,-416
d000d012:                          18112e23             sw      ra,412(sp)
d000d016:                          18812c23             sw      s0,408(sp)
d000d01a:                          18912a23             sw      s1,404(sp)
d000d01e:                          19212823             sw      s2,400(sp)
d000d022:                          19312623             sw      s3,396(sp)
d000d026:                          19412423             sw      s4,392(sp)
d000d02a:                          19512223             sw      s5,388(sp)
d000d02e:                          8a32                 mv      s4,a2
d000d030:                          892e                 mv      s2,a1
d000d032:                          8aaa                 mv      s5,a0
d000d034:                          05f00593             li      a1,95
d000d038:                          17c00613             li      a2,380
d000d03c:                          03535537             lui     a0,0x3535
d000d040:                          60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34f5603>
d000d044:                          05f00693             li      a3,95
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d048:                   /----> 00c90733             add     a4,s2,a2
d000d04c:                   |      4318                 lw      a4,0(a4)
d000d04e:                   |      00ca87b3             add     a5,s5,a2
d000d052:                   |      439c                 lw      a5,0(a5)
d000d054:                   |  /-- 00f71763             bne     a4,a5,d000d062 <sigverify_mod_exp_ibex+0x52>
d000d058:                   |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d05a:                   |  |   1671                 addi    a2,a2,-4
d000d05c:                   \--|-- fed5f6e3             bgeu    a1,a3,d000d048 <sigverify_mod_exp_ibex+0x38>
d000d060:       /--------------|-- a275                 j       d000d20c <sigverify_mod_exp_ibex+0x1fc>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:172
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (greater_equal_modulus(key, sig)) {
d000d062:       |           /--\-X 00e7f763             bgeu    a5,a4,d000d070 <sigverify_mod_exp_ibex+0x60>
d000d066:       |           |      03535537             lui     a0,0x3535
d000d06a:       |           |      60350513             addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34f5603>
d000d06e:       +-----------|----- aa79                 j       d000d20c <sigverify_mod_exp_ibex+0x1fc>
d000d070:       |           \----> 898a                 mv      s3,sp
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:142
  memset(buf.data, 0, sizeof(result->data));
d000d072:       |                  850a                 mv      a0,sp
d000d074:       |                  18000613             li      a2,384
d000d078:       |                  18000413             li      s0,384
d000d07c:       |                  4581                 li      a1,0
d000d07e:       |                  040010ef             jal     ra,d000e0be <memset>
d000d082:       |                  4501                 li      a0,0
d000d084:       |                  4581                 li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d086:       |              /-> 00a98633             add     a2,s3,a0
d000d08a:       |              |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d08c:       |              |   00aa8733             add     a4,s5,a0
d000d090:       |              |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d092:       |              |   40b687b3             sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d096:       |              |   00b6b5b3             sltu    a1,a3,a1
d000d09a:       |              |   00e7b6b3             sltu    a3,a5,a4
d000d09e:       |              |   95b6                 add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d0a0:       |              |   40e786b3             sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d0a4:       |              |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d0a6:       |              |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d0a8:       |              \-- fc851fe3             bne     a0,s0,d000d086 <sigverify_mod_exp_ibex+0x76>
d000d0ac:       |                  4881                 li      a7,0
d000d0ae:       |                  858a                 mv      a1,sp
d000d0b0:       |                  e8400293             li      t0,-380
d000d0b4:       |                  05f00313             li      t1,95
d000d0b8:       |                  06000813             li      a6,96
d000d0bc:       |                  18000793             li      a5,384
shift_left():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d0c0:       |  /-------------> 17c12383             lw      t2,380(sp)
d000d0c4:       |  |               4701                 li      a4,0
d000d0c6:       |  |               851e                 mv      a0,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d0c8:       |  |           /-> 00e58633             add     a2,a1,a4
d000d0cc:       |  |           |   17862683             lw      a3,376(a2)
d000d0d0:       |  |           |   0506                 slli    a0,a0,0x1
d000d0d2:       |  |           |   01f6d413             srli    s0,a3,0x1f
d000d0d6:       |  |           |   8d41                 or      a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d0d8:       |  |           |   1771                 addi    a4,a4,-4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d0da:       |  |           |   16a62e23             sw      a0,380(a2)
d000d0de:       |  |           |   8536                 mv      a0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d0e0:       |  |           \-- fe5714e3             bne     a4,t0,d000d0c8 <sigverify_mod_exp_ibex+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d0e4:       |  |               4502                 lw      a0,0(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d0e6:       |  |               01f3d393             srli    t2,t2,0x1f
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d0ea:       |  |               0506                 slli    a0,a0,0x1
d000d0ec:       |  |               c02a                 sw      a0,0(sp)
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d0ee:       |  |     /-------- 02039563             bnez    t2,d000d118 <sigverify_mod_exp_ibex+0x108>
d000d0f2:       |  |  /--|-------> 05f00413             li      s0,95
d000d0f6:       |  |  |  |         17c00513             li      a0,380
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d0fa:       |  |  |  |  /----> 00a58633             add     a2,a1,a0
d000d0fe:       |  |  |  |  |      4210                 lw      a2,0(a2)
d000d100:       |  |  |  |  |      00aa86b3             add     a3,s5,a0
d000d104:       |  |  |  |  |      4294                 lw      a3,0(a3)
d000d106:       |  |  |  |  |  /-- 00d61763             bne     a2,a3,d000d114 <sigverify_mod_exp_ibex+0x104>
d000d10a:       |  |  |  |  |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d10c:       |  |  |  |  |  |   1571                 addi    a0,a0,-4
d000d10e:       |  |  |  |  \--|-- fe8376e3             bgeu    t1,s0,d000d0fa <sigverify_mod_exp_ibex+0xea>
d000d112:       |  |  |  +-----|-- a019                 j       d000d118 <sigverify_mod_exp_ibex+0x108>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d114:       |  |  |  |  /--\-X 02c6fc63             bgeu    a3,a2,d000d14c <sigverify_mod_exp_ibex+0x13c>
d000d118:       |  |  |  >--|----> 4501                 li      a0,0
d000d11a:       |  |  |  |  |      4401                 li      s0,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d11c:       |  |  |  |  |  /-> 00a58633             add     a2,a1,a0
d000d120:       |  |  |  |  |  |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d122:       |  |  |  |  |  |   00aa8733             add     a4,s5,a0
d000d126:       |  |  |  |  |  |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d128:       |  |  |  |  |  |   408684b3             sub     s1,a3,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d12c:       |  |  |  |  |  |   0086b6b3             sltu    a3,a3,s0
d000d130:       |  |  |  |  |  |   00e4b433             sltu    s0,s1,a4
d000d134:       |  |  |  |  |  |   9436                 add     s0,s0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d136:       |  |  |  |  |  |   40e486b3             sub     a3,s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d13a:       |  |  |  |  |  |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d13c:       |  |  |  |  |  |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d13e:       |  |  |  |  |  \-- fcf51fe3             bne     a0,a5,d000d11c <sigverify_mod_exp_ibex+0x10c>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:155
      msb -= subtract_modulus(key, &buf);
d000d142:       |  |  |  |  |      408383b3             sub     t2,t2,s0
d000d146:       |  |  |  \--|----- fc0399e3             bnez    t2,d000d118 <sigverify_mod_exp_ibex+0x108>
d000d14a:       |  |  \-----|----- b765                 j       d000d0f2 <sigverify_mod_exp_ibex+0xe2>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:150
  for (size_t i = 0; i < 96; ++i) {
d000d14c:       |  |        \----> 0885                 addi    a7,a7,1
d000d14e:       |  \-------------- f70899e3             bne     a7,a6,d000d0c0 <sigverify_mod_exp_ibex+0xb0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:160
  mont_mul(key, &buf, &buf, result);
d000d152:       |                  858a                 mv      a1,sp
d000d154:       |                  860a                 mv      a2,sp
d000d156:       |                  8556                 mv      a0,s5
d000d158:       |                  86d2                 mv      a3,s4
d000d15a:       |                  28c9                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d15c:       |                  868a                 mv      a3,sp
d000d15e:       |                  8556                 mv      a0,s5
d000d160:       |                  85d2                 mv      a1,s4
d000d162:       |                  8652                 mv      a2,s4
d000d164:       |                  20e1                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d166:       |                  858a                 mv      a1,sp
d000d168:       |                  860a                 mv      a2,sp
d000d16a:       |                  8556                 mv      a0,s5
d000d16c:       |                  86d2                 mv      a3,s4
d000d16e:       |                  287d                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d170:       |                  868a                 mv      a3,sp
d000d172:       |                  8556                 mv      a0,s5
d000d174:       |                  85d2                 mv      a1,s4
d000d176:       |                  8652                 mv      a2,s4
d000d178:       |                  2855                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d17a:       |                  858a                 mv      a1,sp
d000d17c:       |                  860a                 mv      a2,sp
d000d17e:       |                  8556                 mv      a0,s5
d000d180:       |                  86d2                 mv      a3,s4
d000d182:       |                  206d                 jal     d000d22c <mont_mul>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:181
  sigverify_rsa_buffer_t buf;

  // result = R^2 mod n
  calc_r_square(key, result);
  // buf = sig * R mod n
  mont_mul(key, sig, result, &buf);
d000d184:       |                  868a                 mv      a3,sp
d000d186:       |                  8556                 mv      a0,s5
d000d188:       |                  85ca                 mv      a1,s2
d000d18a:       |                  8652                 mv      a2,s4
d000d18c:       |                  2045                 jal     d000d22c <mont_mul>
d000d18e:       |                  4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:184
  for (size_t i = 0; i < 8; ++i) {
    // result = sig^{2*4^i} * R mod n (sig's exponent: 2, 8, 32, ..., 32768)
    mont_mul(key, &buf, &buf, result);
d000d190:       |              /-> 858a                 mv      a1,sp
d000d192:       |              |   860a                 mv      a2,sp
d000d194:       |              |   8556                 mv      a0,s5
d000d196:       |              |   86d2                 mv      a3,s4
d000d198:       |              |   2851                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:186
    // buf = sig^{4^{i+1}} * R mod n (sig's exponent: 4, 16, 64, ..., 65536)
    mont_mul(key, result, result, &buf);
d000d19a:       |              |   868a                 mv      a3,sp
d000d19c:       |              |   8556                 mv      a0,s5
d000d19e:       |              |   85d2                 mv      a1,s4
d000d1a0:       |              |   8652                 mv      a2,s4
d000d1a2:       |              |   2069                 jal     d000d22c <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:182
  for (size_t i = 0; i < 8; ++i) {
d000d1a4:       |              |   147d                 addi    s0,s0,-1
d000d1a6:       |              \-- f46d                 bnez    s0,d000d190 <sigverify_mod_exp_ibex+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:189
  }
  // result = sig^65537 mod n
  mont_mul(key, &buf, sig, result);
d000d1a8:       |                  858a                 mv      a1,sp
d000d1aa:       |                  8556                 mv      a0,s5
d000d1ac:       |                  864a                 mv      a2,s2
d000d1ae:       |                  86d2                 mv      a3,s4
d000d1b0:       |                  28b5                 jal     d000d22c <mont_mul>
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d1b2:       |                  17ca8513             addi    a0,s5,380
d000d1b6:       |                  17ca0593             addi    a1,s4,380
d000d1ba:       |                  05f00613             li      a2,95
d000d1be:       |                  05f00693             li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d1c2:       |              /-> 4198                 lw      a4,0(a1)
d000d1c4:       |              |   411c                 lw      a5,0(a0)
d000d1c6:       |           /--|-- 00f71863             bne     a4,a5,d000d1d6 <sigverify_mod_exp_ibex+0x1c6>
d000d1ca:       |           |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d1cc:       |           |  |   1571                 addi    a0,a0,-4
d000d1ce:       |           |  |   15f1                 addi    a1,a1,-4
d000d1d0:       |           |  \-- fed679e3             bgeu    a2,a3,d000d1c2 <sigverify_mod_exp_ibex+0x1b2>
d000d1d4:       |           |  /-- a019                 j       d000d1da <sigverify_mod_exp_ibex+0x1ca>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:194

  // We need this check because the result of `mont_mul` is not guaranteed to be
  // the least non-negative residue. We need to subtract the modulus n from
  // `result` at most once because R/2 < n < R.
  if (greater_equal_modulus(key, result)) {
d000d1d6:       |        /--\--|-X 02e7f963             bgeu    a5,a4,d000d208 <sigverify_mod_exp_ibex+0x1f8>
d000d1da:       |        |     \-> 4501                 li      a0,0
d000d1dc:       |        |         4601                 li      a2,0
d000d1de:       |        |         18000593             li      a1,384
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d1e2:       |        |     /-> 00aa06b3             add     a3,s4,a0
d000d1e6:       |        |     |   4298                 lw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d1e8:       |        |     |   00aa87b3             add     a5,s5,a0
d000d1ec:       |        |     |   439c                 lw      a5,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d1ee:       |        |     |   40c704b3             sub     s1,a4,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d1f2:       |        |     |   00c73633             sltu    a2,a4,a2
d000d1f6:       |        |     |   00f4b733             sltu    a4,s1,a5
d000d1fa:       |        |     |   963a                 add     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d1fc:       |        |     |   40f48733             sub     a4,s1,a5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d200:       |        |     |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d202:       |        |     |   c298                 sw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d204:       |        |     \-- fcb51fe3             bne     a0,a1,d000d1e2 <sigverify_mod_exp_ibex+0x1d2>
d000d208:       |        \-------> 73900513             li      a0,1849
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:199
    subtract_modulus(key, result);
  }

  return kErrorOk;
}
d000d20c:       \----------------> 18412a83             lw      s5,388(sp)
d000d210:                          18812a03             lw      s4,392(sp)
d000d214:                          18c12983             lw      s3,396(sp)
d000d218:                          19012903             lw      s2,400(sp)
d000d21c:                          19412483             lw      s1,404(sp)
d000d220:                          19812403             lw      s0,408(sp)
d000d224:                          19c12083             lw      ra,412(sp)
d000d228:                          611d                 addi    sp,sp,416
d000d22a:                          8082                 ret

d000d22c <mont_mul>:
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:90
                     sigverify_rsa_buffer_t *result) {
d000d22c:                 7179                  addi    sp,sp,-48
d000d22e:                 d606                  sw      ra,44(sp)
d000d230:                 d422                  sw      s0,40(sp)
d000d232:                 d226                  sw      s1,36(sp)
d000d234:                 d04a                  sw      s2,32(sp)
d000d236:                 ce4e                  sw      s3,28(sp)
d000d238:                 cc52                  sw      s4,24(sp)
d000d23a:                 ca56                  sw      s5,20(sp)
d000d23c:                 c85a                  sw      s6,16(sp)
d000d23e:                 c65e                  sw      s7,12(sp)
d000d240:                 8bb6                  mv      s7,a3
d000d242:                 89b2                  mv      s3,a2
d000d244:                 892e                  mv      s2,a1
d000d246:                 8b2a                  mv      s6,a0
d000d248:                 5a7d                  li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:91
  memset(result->data, 0, sizeof(result->data));
d000d24a:                 18000613              li      a2,384
d000d24e:                 18000a93              li      s5,384
d000d252:                 8536                  mv      a0,a3
d000d254:                 4581                  li      a1,0
d000d256:                 669000ef              jal     ra,d000e0be <memset>
d000d25a:                 4881                  li      a7,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d25c:                 00498313              addi    t1,s3,4
d000d260:                 004b0e93              addi    t4,s6,4
d000d264:                 17800293              li      t0,376
d000d268:                 06000813              li      a6,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d26c:       /-------> 00289513              slli    a0,a7,0x2
d000d270:       |         00a90f33              add     t5,s2,a0
d000d274:       |         000f2503              lw      a0,0(t5)
d000d278:       |         0009a583              lw      a1,0(s3)
d000d27c:       |         000ba483              lw      s1,0(s7)
d000d280:       |         4701                  li      a4,0
d000d282:       |         02a5b3b3              mulhu   t2,a1,a0
d000d286:       |         02a585b3              mul     a1,a1,a0
d000d28a:       |         94ae                  add     s1,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d28c:       |         180b2683              lw      a3,384(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d290:       |         000b2e03              lw      t3,0(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d294:       |         00b4b5b3              sltu    a1,s1,a1
d000d298:       |         959e                  add     a1,a1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d29a:       |         02968fb3              mul     t6,a3,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d29e:       |         03cf83b3              mul     t2,t6,t3
d000d2a2:       |         0144f4b3              and     s1,s1,s4
d000d2a6:       |         949e                  add     s1,s1,t2
d000d2a8:       |         0074b3b3              sltu    t2,s1,t2
d000d2ac:       |         03cfb4b3              mulhu   s1,t6,t3
d000d2b0:       |         949e                  add     s1,s1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d2b2:       |  /----> 00e30633              add     a2,t1,a4
d000d2b6:       |  |      4210                  lw      a2,0(a2)
d000d2b8:       |  |      00eb8433              add     s0,s7,a4
d000d2bc:       |  |      405c                  lw      a5,4(s0)
d000d2be:       |  |      02a636b3              mulhu   a3,a2,a0
d000d2c2:       |  |      02a60533              mul     a0,a2,a0
d000d2c6:       |  |      00f58633              add     a2,a1,a5
d000d2ca:       |  |      00b635b3              sltu    a1,a2,a1
d000d2ce:       |  |      95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d2d0:       |  |      00ee86b3              add     a3,t4,a4
d000d2d4:       |  |      4294                  lw      a3,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d2d6:       |  |      9532                  add     a0,a0,a2
d000d2d8:       |  |      00c53633              sltu    a2,a0,a2
d000d2dc:       |  |      95b2                  add     a1,a1,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d2de:       |  |      03f6b633              mulhu   a2,a3,t6
d000d2e2:       |  |      03f686b3              mul     a3,a3,t6
d000d2e6:       |  |      01457533              and     a0,a0,s4
d000d2ea:       |  |      009687b3              add     a5,a3,s1
d000d2ee:       |  |      00d7b6b3              sltu    a3,a5,a3
d000d2f2:       |  |      9636                  add     a2,a2,a3
d000d2f4:       |  |      953e                  add     a0,a0,a5
d000d2f6:       |  |      00f536b3              sltu    a3,a0,a5
d000d2fa:       |  |      00d604b3              add     s1,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:113
      result->data[j - 1] = (uint32_t)acc1;
d000d2fe:       |  |      c008                  sw      a0,0(s0)
d000d300:       |  |  /-- 00570663              beq     a4,t0,d000d30c <mont_mul+0xe0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d304:       |  |  |   000f2503              lw      a0,0(t5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:110
    for (size_t j = 1; j < ARRAYSIZE(result->data); ++j) {
d000d308:       |  |  |   0711                  addi    a4,a4,4
d000d30a:       |  \--|-- b765                  j       d000d2b2 <mont_mul+0x86>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:115
    acc0 = (acc0 >> 32) + (acc1 >> 32);
d000d30c:       |     \-> 00b48533              add     a0,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:116
    result->data[ARRAYSIZE(result->data) - 1] = (uint32_t)acc0;
d000d310:       |         16abae23              sw      a0,380(s7)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:127
    if (acc0 >> 32) {
d000d314:       |  /----- 02957763              bgeu    a0,s1,d000d342 <mont_mul+0x116>
d000d318:       |  |      4501                  li      a0,0
d000d31a:       |  |      4581                  li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d31c:       |  |  /-> 00ab8633              add     a2,s7,a0
d000d320:       |  |  |   4214                  lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d322:       |  |  |   00ab0733              add     a4,s6,a0
d000d326:       |  |  |   4318                  lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d328:       |  |  |   40b687b3              sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d32c:       |  |  |   00b6b5b3              sltu    a1,a3,a1
d000d330:       |  |  |   00e7b6b3              sltu    a3,a5,a4
d000d334:       |  |  |   95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d336:       |  |  |   40e786b3              sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d33a:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d33c:       |  |  |   c214                  sw      a3,0(a2)
d000d33e:       |  |  \-- fd551fe3              bne     a0,s5,d000d31c <mont_mul+0xf0>
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d342:       |  \----> 0885                  addi    a7,a7,1
d000d344:       \-------- f30894e3              bne     a7,a6,d000d26c <mont_mul+0x40>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:131
}
d000d348:                 4bb2                  lw      s7,12(sp)
d000d34a:                 4b42                  lw      s6,16(sp)
d000d34c:                 4ad2                  lw      s5,20(sp)
d000d34e:                 4a62                  lw      s4,24(sp)
d000d350:                 49f2                  lw      s3,28(sp)
d000d352:                 5902                  lw      s2,32(sp)
d000d354:                 5492                  lw      s1,36(sp)
d000d356:                 5422                  lw      s0,40(sp)
d000d358:                 50b2                  lw      ra,44(sp)
d000d35a:                 6145                  addi    sp,sp,48
d000d35c:                 8082                  ret

d000d35e <run_otbn_rsa_3072_modexp>:
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:69
}

rom_error_t run_otbn_rsa_3072_modexp(
    const sigverify_rsa_key_t *public_key,
    const sigverify_rsa_buffer_t *signature,
    sigverify_rsa_buffer_t *recovered_message) {
d000d35e:                 7139                  addi    sp,sp,-64
d000d360:                 de06                  sw      ra,60(sp)
d000d362:                 dc22                  sw      s0,56(sp)
d000d364:                 da26                  sw      s1,52(sp)
d000d366:                 d84a                  sw      s2,48(sp)
d000d368:                 d64e                  sw      s3,44(sp)
d000d36a:                 d452                  sw      s4,40(sp)
d000d36c:                 8932                  mv      s2,a2
d000d36e:                 8a2e                  mv      s4,a1
d000d370:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:73
  otbn_t otbn;

  // Initialize OTBN and load the RSA app.
  otbn_init(&otbn);
d000d372:                 0808                  addi    a0,sp,16
d000d374:                 2ab1                  jal     d000d4d0 <otbn_init>
d000d376:                 00002517              auipc   a0,0x2
d000d37a:                 f4a50513              addi    a0,a0,-182 # d000f2c0 <kOtbnAppRsa>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
  HARDENED_RETURN_IF_ERROR(otbn_load_app(&otbn, kOtbnAppRsa));
d000d37e:                 454c                  lw      a1,12(a0)
d000d380:                 4510                  lw      a2,8(a0)
d000d382:                 4154                  lw      a3,4(a0)
d000d384:                 4108                  lw      a0,0(a0)
d000d386:                 c62e                  sw      a1,12(sp)
d000d388:                 c432                  sw      a2,8(sp)
d000d38a:                 c236                  sw      a3,4(sp)
d000d38c:                 c02a                  sw      a0,0(sp)
d000d38e:                 0808                  addi    a0,sp,16
d000d390:                 858a                  mv      a1,sp
d000d392:                 2aa9                  jal     d000d4ec <otbn_load_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d394:                 85aa                  mv      a1,a0
d000d396:                 73900413              li      s0,1849
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
d000d39a:       /-------- 0e859263              bne     a1,s0,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d39e:       |     /-- 00850663              beq     a0,s0,d000d3aa <run_otbn_rsa_3072_modexp+0x4c>
d000d3a2:       |     |   0000                  unimp
d000d3a4:       |     |   0000                  unimp
d000d3a6:       |     |   0000                  unimp
d000d3a8:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d3aa:       |     \-> 00000693              li      a3,0
d000d3ae:       |         0808                  addi    a0,sp,16
d000d3b0:       |         06000593              li      a1,96
d000d3b4:       |         8626                  mv      a2,s1
d000d3b6:       |         2cbd                  jal     d000d634 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d3b8:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:77

  // Set the modulus (n).
  HARDENED_RETURN_IF_ERROR(
d000d3ba:       +-------- 0c859263              bne     a1,s0,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d3be:       |         73900993              li      s3,1849
d000d3c2:       |     /-- 01350663              beq     a0,s3,d000d3ce <run_otbn_rsa_3072_modexp+0x70>
d000d3c6:       |     |   0000                  unimp
d000d3c8:       |     |   0000                  unimp
d000d3ca:       |     |   0000                  unimp
d000d3cc:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d3ce:       |     \-> 32000693              li      a3,800
d000d3d2:       |         0808                  addi    a0,sp,16
d000d3d4:       |         06000593              li      a1,96
d000d3d8:       |         8652                  mv      a2,s4
d000d3da:       |         2ca9                  jal     d000d634 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d3dc:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:81
      write_rsa_3072_int_to_otbn(&otbn, &public_key->n, kOtbnVarRsaInMod));

  // Set the signature.
  HARDENED_RETURN_IF_ERROR(
d000d3de:       +-------- 0b359063              bne     a1,s3,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d3e2:       |     /-- 01350663              beq     a0,s3,d000d3ee <run_otbn_rsa_3072_modexp+0x90>
d000d3e6:       |     |   0000                  unimp
d000d3e8:       |     |   0000                  unimp
d000d3ea:       |     |   0000                  unimp
d000d3ec:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
      write_rsa_3072_int_to_otbn(&otbn, signature, kOtbnVarRsaInBuf));

  // Set the precomputed constant m0_inv.
  HARDENED_RETURN_IF_ERROR(otbn_copy_data_to_otbn(
d000d3ee:       |     \-> 18048613              addi    a2,s1,384
d000d3f2:       |         18000693              li      a3,384
d000d3f6:       |         0808                  addi    a0,sp,16
d000d3f8:       |         45a1                  li      a1,8
d000d3fa:       |         2c2d                  jal     d000d634 <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d3fc:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
d000d3fe:       +-------- 09359063              bne     a1,s3,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d402:       |         73900413              li      s0,1849
d000d406:       |     /-- 00850663              beq     a0,s0,d000d412 <run_otbn_rsa_3072_modexp+0xb4>
d000d40a:       |     |   0000                  unimp
d000d40c:       |     |   0000                  unimp
d000d40e:       |     |   0000                  unimp
d000d410:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
      &otbn, kOtbnWideWordNumWords, public_key->n0_inv, kOtbnVarRsaM0Inv));

  // Start the OTBN routine.
  HARDENED_RETURN_IF_ERROR(otbn_execute_app(&otbn));
d000d412:       |     \-> 0808                  addi    a0,sp,16
d000d414:       |         22d5                  jal     d000d5f8 <otbn_execute_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d416:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
d000d418:       +-------- 06859363              bne     a1,s0,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d41c:       |     /-- 00850663              beq     a0,s0,d000d428 <run_otbn_rsa_3072_modexp+0xca>
d000d420:       |     |   0000                  unimp
d000d422:       |     |   0000                  unimp
d000d424:       |     |   0000                  unimp
d000d426:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:94

  // Check that the instruction count falls within the expected range. If the
  // instruction count falls outside this range, it indicates that there was a
  // fault injection attack of some kind during OTBN execution.
  uint32_t count = otbn_instruction_count_get();
d000d428:       |     \-> 2621                  jal     d000d730 <otbn_instruction_count_get>
d000d42a:       |         85aa                  mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d42c:       |         862a                  mv      a2,a0
d000d42e:       |         06425537              lui     a0,0x6425
d000d432:       |         0002c6b7              lui     a3,0x2c
d000d436:       |         39b68693              addi    a3,a3,923 # 2c39b <_stack_size+0x2839b>
d000d43a:       |         e0d50513              addi    a0,a0,-499 # 6424e0d <_rom_ext_virtual_size+0x63e4e0d>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
  if (launder32(count) < kModExpOtbnInsnCountMin ||
d000d43e:       +-------- 04d66063              bltu    a2,a3,d000d47e <run_otbn_rsa_3072_modexp+0x120>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d442:       |         86ae                  mv      a3,a1
d000d444:       |         00030637              lui     a2,0x30
d000d448:       |         6fd60613              addi    a2,a2,1789 # 306fd <_stack_size+0x2c6fd>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
d000d44c:       +-------- 02d66963              bltu    a2,a3,d000d47e <run_otbn_rsa_3072_modexp+0x120>
d000d450:       |         0002c537              lui     a0,0x2c
d000d454:       |         39b50513              addi    a0,a0,923 # 2c39b <_stack_size+0x2839b>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:99
      launder32(count) > kModExpOtbnInsnCountMax) {
    return kErrorOtbnBadInsnCount;
  }
  HARDENED_CHECK_GE(count, kModExpOtbnInsnCountMin);
d000d458:       |     /-- 00a5f663              bgeu    a1,a0,d000d464 <run_otbn_rsa_3072_modexp+0x106>
d000d45c:       |     |   0000                  unimp
d000d45e:       |     |   0000                  unimp
d000d460:       |     |   0000                  unimp
d000d462:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:100
  HARDENED_CHECK_LE(count, kModExpOtbnInsnCountMax);
d000d464:       |  /--\-X 00b67663              bgeu    a2,a1,d000d470 <run_otbn_rsa_3072_modexp+0x112>
d000d468:       |  |      0000                  unimp
d000d46a:       |  |      0000                  unimp
d000d46c:       |  |      0000                  unimp
d000d46e:       |  |      0000                  unimp
read_rsa_3072_int_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:63
  return otbn_copy_data_from_otbn(otbn, kSigVerifyRsaNumWords, src, dst->data);
d000d470:       |  \----> 4a000613              li      a2,1184
d000d474:       |         0808                  addi    a0,sp,16
d000d476:       |         06000593              li      a1,96
d000d47a:       |         86ca                  mv      a3,s2
d000d47c:       |         22c9                  jal     d000d63e <otbn_copy_data_from_otbn>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:105

  // Read recovered message out of OTBN dmem.
  return read_rsa_3072_int_from_otbn(&otbn, kOtbnVarRsaOutBuf,
                                     recovered_message);
}
d000d47e:       \-------> 5a22                  lw      s4,40(sp)
d000d480:                 59b2                  lw      s3,44(sp)
d000d482:                 5942                  lw      s2,48(sp)
d000d484:                 54d2                  lw      s1,52(sp)
d000d486:                 5462                  lw      s0,56(sp)
d000d488:                 50f2                  lw      ra,60(sp)
d000d48a:                 6121                  addi    sp,sp,64
d000d48c:                 8082                  ret

d000d48e <sigverify_mod_exp_otbn>:
sigverify_mod_exp_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:109

rom_error_t sigverify_mod_exp_otbn(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000d48e:           1141                        addi    sp,sp,-16
d000d490:           c606                        sw      ra,12(sp)
d000d492:           c422                        sw      s0,8(sp)
d000d494:           c226                        sw      s1,4(sp)
d000d496:           c04a                        sw      s2,0(sp)
d000d498:           8932                        mv      s2,a2
d000d49a:           84ae                        mv      s1,a1
d000d49c:           842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:112
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (memrcmp(key->n.data, sig->data, kSigVerifyRsaNumBytes) <= 0) {
d000d49e:           18000613            li      a2,384
d000d4a2:           47f000ef            jal     ra,d000e120 <memrcmp>
d000d4a6:       /-- 00a05b63            blez    a0,d000d4bc <sigverify_mod_exp_otbn+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:117
    return kErrorSigverifyBadSignature;
  }

  // Run OTBN application.
  return run_otbn_rsa_3072_modexp(key, sig, result);
d000d4aa:       |   8522                        mv      a0,s0
d000d4ac:       |   85a6                        mv      a1,s1
d000d4ae:       |   864a                        mv      a2,s2
d000d4b0:       |   4902                        lw      s2,0(sp)
d000d4b2:       |   4492                        lw      s1,4(sp)
d000d4b4:       |   4422                        lw      s0,8(sp)
d000d4b6:       |   40b2                        lw      ra,12(sp)
d000d4b8:       |   0141                        addi    sp,sp,16
d000d4ba:       |   b555                        j       d000d35e <run_otbn_rsa_3072_modexp>
d000d4bc:       \-> 03535537            lui     a0,0x3535
d000d4c0:           60350513            addi    a0,a0,1539 # 3535603 <_rom_ext_virtual_size+0x34f5603>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:118
}
d000d4c4:           4902                        lw      s2,0(sp)
d000d4c6:           4492                        lw      s1,4(sp)
d000d4c8:           4422                        lw      s0,8(sp)
d000d4ca:           40b2                        lw      ra,12(sp)
d000d4cc:           0141                        addi    sp,sp,16
d000d4ce:           8082                        ret

d000d4d0 <otbn_init>:
otbn_init():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:17
#include "sw/device/silicon_creator/lib/drivers/otbn.h"

#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void otbn_init(otbn_t *ctx) {
  *ctx = (otbn_t){
d000d4d0:       00052023                sw      zero,0(a0)
d000d4d4:       00052223                sw      zero,4(a0)
d000d4d8:       00052423                sw      zero,8(a0)
d000d4dc:       00052623                sw      zero,12(a0)
d000d4e0:       1d400593                li      a1,468
d000d4e4:       c90c                    sw      a1,16(a0)
d000d4e6:       00052a23                sw      zero,20(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:22
      .app = {0},
      .app_is_loaded = kHardenedBoolFalse,
      .error_bits = kOtbnErrBitsNoError,
  };
}
d000d4ea:       8082                    ret

d000d4ec <otbn_load_app>:
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:47
    return false;
  }
  return true;
}

rom_error_t otbn_load_app(otbn_t *ctx, const otbn_app_t app) {
d000d4ec:                    7179                       addi    sp,sp,-48
d000d4ee:                    d606                       sw      ra,44(sp)
d000d4f0:                    d422                       sw      s0,40(sp)
d000d4f2:                    d226                       sw      s1,36(sp)
d000d4f4:                    d04a                       sw      s2,32(sp)
d000d4f6:                    ce4e                       sw      s3,28(sp)
d000d4f8:                    cc52                       sw      s4,24(sp)
d000d4fa:                    ca56                       sw      s5,20(sp)
d000d4fc:                    c85a                       sw      s6,16(sp)
d000d4fe:                    c65e                       sw      s7,12(sp)
d000d500:                    842e                       mv      s0,a1
check_app_address_ranges():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:37
  if (app->imem_end <= app->imem_start) {
d000d502:                    41cc                       lw      a1,4(a1)
d000d504:                    4010                       lw      a2,0(s0)
d000d506:                    892a                       mv      s2,a0
d000d508:                    01425537           lui     a0,0x1425
d000d50c:                    e0350493           addi    s1,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13e4e03>
d000d510:       /----------- 0cb67863           bgeu    a2,a1,d000d5e0 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:41
  if (app->dmem_data_end < app->dmem_data_start) {
d000d514:       |            4448                       lw      a0,12(s0)
d000d516:       |            440c                       lw      a1,8(s0)
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:48
  if (!check_app_address_ranges(&app)) {
d000d518:       +----------- 0cb56463           bltu    a0,a1,d000d5e0 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:53
    return kErrorOtbnInvalidArgument;
  }

  // If OTBN is busy, wait for it to be done.
  HARDENED_RETURN_IF_ERROR(otbn_busy_wait_for_done());
d000d51c:       |            222d                       jal     d000d646 <otbn_busy_wait_for_done>
d000d51e:       |            84aa                       mv      s1,a0
d000d520:       |            73900a93           li      s5,1849
d000d524:       +----------- 0b551e63           bne     a0,s5,d000d5e0 <otbn_load_app+0xf4>
d000d528:       |        /-- 01548663           beq     s1,s5,d000d534 <otbn_load_app+0x48>
d000d52c:       |        |   0000                       unimp
d000d52e:       |        |   0000                       unimp
d000d530:       |        |   0000                       unimp
d000d532:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55

  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d534:       |        \-> 00442b03           lw      s6,4(s0)
d000d538:       |            00042b83           lw      s7,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:56
  const size_t data_num_words = app.dmem_data_end - app.dmem_data_start;
d000d53c:       |            00c42983           lw      s3,12(s0)
d000d540:       |            00842a03           lw      s4,8(s0)
d000d544:       |            1d400513           li      a0,468
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:58

  ctx->app_is_loaded = kHardenedBoolFalse;
d000d548:       |            00a92823           sw      a0,16(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:60

  HARDENED_RETURN_IF_ERROR(otbn_imem_sec_wipe());
d000d54c:       |            22f5                       jal     d000d738 <otbn_imem_sec_wipe>
d000d54e:       |            84aa                       mv      s1,a0
d000d550:       +----------- 09551863           bne     a0,s5,d000d5e0 <otbn_load_app+0xf4>
d000d554:       |            73900a93           li      s5,1849
d000d558:       |        /-- 01548663           beq     s1,s5,d000d564 <otbn_load_app+0x78>
d000d55c:       |        |   0000                       unimp
d000d55e:       |        |   0000                       unimp
d000d560:       |        |   0000                       unimp
d000d562:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d564:       |        \-> 400c                       lw      a1,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55
  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d566:       |            417b0533           sub     a0,s6,s7
d000d56a:       |            40255613           srai    a2,a0,0x2
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d56e:       |            4501                       li      a0,0
d000d570:       |            2ad1                       jal     d000d744 <otbn_imem_write>
d000d572:       |            84aa                       mv      s1,a0
d000d574:       +----------- 07551663           bne     a0,s5,d000d5e0 <otbn_load_app+0xf4>
d000d578:       |        /-- 01548663           beq     s1,s5,d000d584 <otbn_load_app+0x98>
d000d57c:       |        |   0000                       unimp
d000d57e:       |        |   0000                       unimp
d000d580:       |        |   0000                       unimp
d000d582:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63

  HARDENED_RETURN_IF_ERROR(otbn_dmem_sec_wipe());
d000d584:       |        \-> 2cbd                       jal     d000d802 <otbn_dmem_sec_wipe>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d586:       |            85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63
d000d588:       |  /-------- 05559b63           bne     a1,s5,d000d5de <otbn_load_app+0xf2>
d000d58c:       |  |         41498633           sub     a2,s3,s4
d000d590:       |  |         73900493           li      s1,1849
d000d594:       |  |     /-- 00950663           beq     a0,s1,d000d5a0 <otbn_load_app+0xb4>
d000d598:       |  |     |   0000                       unimp
d000d59a:       |  |     |   0000                       unimp
d000d59c:       |  |     |   0000                       unimp
d000d59e:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:64
  if (data_num_words > 0) {
d000d5a0:       |  |  /--\-X c205                       beqz    a2,d000d5c0 <otbn_load_app+0xd4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
    HARDENED_RETURN_IF_ERROR(
d000d5a2:       |  |  |      440c                       lw      a1,8(s0)
d000d5a4:       |  |  |      8609                       srai    a2,a2,0x2
d000d5a6:       |  |  |      4501                       li      a0,0
d000d5a8:       |  |  |      24a5                       jal     d000d810 <otbn_dmem_write>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d5aa:       |  |  |      85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
d000d5ac:       |  +--|----- 02959963           bne     a1,s1,d000d5de <otbn_load_app+0xf2>
d000d5b0:       |  |  |      73900593           li      a1,1849
d000d5b4:       |  |  +----- 00b50663           beq     a0,a1,d000d5c0 <otbn_load_app+0xd4>
d000d5b8:       |  |  |      0000                       unimp
d000d5ba:       |  |  |      0000                       unimp
d000d5bc:       |  |  |      0000                       unimp
d000d5be:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:69
        otbn_dmem_write(0, app.dmem_data_start, data_num_words));
  }

  ctx->app = app;
d000d5c0:       |  |  \----> 4448                       lw      a0,12(s0)
d000d5c2:       |  |         00a92623           sw      a0,12(s2)
d000d5c6:       |  |         4408                       lw      a0,8(s0)
d000d5c8:       |  |         00a92423           sw      a0,8(s2)
d000d5cc:       |  |         4048                       lw      a0,4(s0)
d000d5ce:       |  |         00a92223           sw      a0,4(s2)
d000d5d2:       |  |         4008                       lw      a0,0(s0)
d000d5d4:       |  |         00a92023           sw      a0,0(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:70
  ctx->app_is_loaded = kHardenedBoolTrue;
d000d5d8:       |  |         00992823           sw      s1,16(s2)
d000d5dc:       +--|-------- a011                       j       d000d5e0 <otbn_load_app+0xf4>
d000d5de:       |  \-------> 84aa                       mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:72
  return kErrorOk;
}
d000d5e0:       \----------> 8526                       mv      a0,s1
d000d5e2:                    4bb2                       lw      s7,12(sp)
d000d5e4:                    4b42                       lw      s6,16(sp)
d000d5e6:                    4ad2                       lw      s5,20(sp)
d000d5e8:                    4a62                       lw      s4,24(sp)
d000d5ea:                    49f2                       lw      s3,28(sp)
d000d5ec:                    5902                       lw      s2,32(sp)
d000d5ee:                    5492                       lw      s1,36(sp)
d000d5f0:                    5422                       lw      s0,40(sp)
d000d5f2:                    50b2                       lw      ra,44(sp)
d000d5f4:                    6145                       addi    sp,sp,48
d000d5f6:                    8082                       ret

d000d5f8 <otbn_execute_app>:
otbn_execute_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:74

rom_error_t otbn_execute_app(otbn_t *ctx) {
d000d5f8:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:75
  if (launder32(ctx->app_is_loaded) != kHardenedBoolTrue) {
d000d5fa:              c606                     sw      ra,12(sp)
d000d5fc:              4910                     lw      a2,16(a0)
d000d5fe:              73900593                 li      a1,1849
d000d602:       /----- 02b61263                 bne     a2,a1,d000d626 <otbn_execute_app+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:78
    return kErrorOtbnInvalidArgument;
  }
  HARDENED_CHECK_EQ(ctx->app_is_loaded, kHardenedBoolTrue);
d000d606:       |      4908                     lw      a0,16(a0)
d000d608:       |  /-- 00b50663                 beq     a0,a1,d000d614 <otbn_execute_app+0x1c>
d000d60c:       |  |   0000                     unimp
d000d60e:       |  |   0000                     unimp
d000d610:       |  |   0000                     unimp
d000d612:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:80

  rom_error_t err = otbn_execute();
d000d614:       |  \-> 2051                     jal     d000d698 <otbn_execute>
d000d616:       |      0fff3597                 auipc   a1,0xfff3
d000d61a:       |      a5e58593                 addi    a1,a1,-1442 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:81
  SEC_MMIO_WRITE_INCREMENT(kOtbnSecMmioExecute);
d000d61e:       |      4590                     lw      a2,8(a1)
d000d620:       |      0605                     addi    a2,a2,1
d000d622:       |      c590                     sw      a2,8(a1)
d000d624:       |  /-- a029                     j       d000d62e <otbn_execute_app+0x36>
d000d626:       \--|-> 01425537                 lui     a0,0x1425
d000d62a:          |   e0350513                 addi    a0,a0,-509 # 1424e03 <_rom_ext_virtual_size+0x13e4e03>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:83
  return err;
}
d000d62e:          \-> 40b2                     lw      ra,12(sp)
d000d630:              0141                     addi    sp,sp,16
d000d632:              8082                     ret

d000d634 <otbn_copy_data_to_otbn>:
otbn_copy_data_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:86

rom_error_t otbn_copy_data_to_otbn(otbn_t *ctx, size_t len, const uint32_t *src,
                                   otbn_addr_t dest) {
d000d634:       8536                    mv      a0,a3
d000d636:       86ae                    mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:87
  return otbn_dmem_write(dest, src, len);
d000d638:       85b2                    mv      a1,a2
d000d63a:       8636                    mv      a2,a3
d000d63c:       aad1                    j       d000d810 <otbn_dmem_write>

d000d63e <otbn_copy_data_from_otbn>:
otbn_copy_data_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:91
}

rom_error_t otbn_copy_data_from_otbn(otbn_t *ctx, size_t len_bytes,
                                     otbn_addr_t src, uint32_t *dest) {
d000d63e:       8532                    mv      a0,a2
d000d640:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:92
  return otbn_dmem_read(src, dest, len_bytes);
d000d642:       85b6                    mv      a1,a3
d000d644:       a41d                    j       d000d86a <otbn_dmem_read>

d000d646 <otbn_busy_wait_for_done>:
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:62
    return kErrorOtbnBadOffsetLen;
  }
  return kErrorOk;
}

rom_error_t otbn_busy_wait_for_done(void) {
d000d646:              557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:64
  uint32_t status = launder32(UINT32_MAX);
  rom_error_t res = launder32(kErrorOk ^ status);
d000d648:              73954513                 xori    a0,a0,1849
d000d64c:              c11305b7                 lui     a1,0xc1130
d000d650:              0ff00613                 li      a2,255
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d654:          /-> 4d94                     lw      a3,24(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d656:          |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
  do {
    status = abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET);
  } while (launder32(status) != kOtbnStatusIdle &&
d000d658:       /--|-- c701                     beqz    a4,d000d660 <otbn_busy_wait_for_done+0x1a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d65a:       |  |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
d000d65c:       |  \-- fec71ce3                 bne     a4,a2,d000d654 <otbn_busy_wait_for_done+0xe>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:69
           launder32(status) != kOtbnStatusLocked);
  res ^= ~status;
d000d660:       \----> 8d35                     xor     a0,a0,a3
d000d662:              fff54513                 not     a0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d666:              862a                     mv      a2,a0
d000d668:              73900593                 li      a1,1849
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:70
  if (launder32(res) == kErrorOk) {
d000d66c:       /----- 02b61163                 bne     a2,a1,d000d68e <otbn_busy_wait_for_done+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:71
    HARDENED_CHECK_EQ(res, kErrorOk);
d000d670:       |  /-- 00b50663                 beq     a0,a1,d000d67c <otbn_busy_wait_for_done+0x36>
d000d674:       |  |   0000                     unimp
d000d676:       |  |   0000                     unimp
d000d678:       |  |   0000                     unimp
d000d67a:       |  |   0000                     unimp
d000d67c:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d680:       |      4d8c                     lw      a1,24(a1)
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:72
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000d682:       |  /-- c589                     beqz    a1,d000d68c <otbn_busy_wait_for_done+0x46>
d000d684:       |  |   0000                     unimp
d000d686:       |  |   0000                     unimp
d000d688:       |  |   0000                     unimp
d000d68a:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:77
                      kOtbnStatusIdle);
    return res;
  }
  return kErrorOtbnUnavailable;
}
d000d68c:       |  \-> 8082                     ret
d000d68e:       \----> 07425537                 lui     a0,0x7425
d000d692:              e0d50513                 addi    a0,a0,-499 # 7424e0d <_rom_ext_virtual_size+0x73e4e0d>
d000d696:              8082                     ret

d000d698 <otbn_execute>:
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:151
    return res;
  }
  return error;
}

rom_error_t otbn_execute(void) {
d000d698:       1141                    addi    sp,sp,-16
d000d69a:       c606                    sw      ra,12(sp)
d000d69c:       c1130537                lui     a0,0xc1130
d000d6a0:       0551                    addi    a0,a0,20
otbn_set_ctrl_software_errs_fatal():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:221
    new_ctrl = 1;
  } else {
    new_ctrl = 0;
  }

  sec_mmio_write32(kBase + OTBN_CTRL_REG_OFFSET, new_ctrl);
d000d6a2:       4585                    li      a1,1
d000d6a4:       03d000ef                jal     ra,d000dee0 <sec_mmio_write32>
d000d6a8:       03425537                lui     a0,0x3425
d000d6ac:       e0d50593                addi    a1,a0,-499 # 3424e0d <_rom_ext_virtual_size+0x33e4e0d>
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:153
  return otbn_cmd_run(kOtbnCmdExecute, kErrorOtbnExecutionFailed);
d000d6b0:       0d800513                li      a0,216
d000d6b4:       40b2                    lw      ra,12(sp)
d000d6b6:       0141                    addi    sp,sp,16
d000d6b8:       a009                    j       d000d6ba <otbn_cmd_run>

d000d6ba <otbn_cmd_run>:
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:112
static rom_error_t otbn_cmd_run(otbn_cmd_t cmd, rom_error_t error) {
d000d6ba:              882e                     mv      a6,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d6bc:              4701                     li      a4,0
d000d6be:              c1130637                 lui     a2,0xc1130
d000d6c2:              4685                     li      a3,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d6c4:              c214                     sw      a3,0(a2)
d000d6c6:              ca08                     sw      a0,16(a2)
d000d6c8:              80000537                 lui     a0,0x80000
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000d6cc:          /-- 00d71663                 bne     a4,a3,d000d6d8 <otbn_cmd_run+0x1e>
d000d6d0:          |   4581                     li      a1,0
d000d6d2:          |   73950513                 addi    a0,a0,1849 # 80000739 <_stack_end+0x9ffe0739>
d000d6d6:       /--|-- a811                     j       d000d6ea <otbn_cmd_run+0x30>
d000d6d8:       |  \-> 73950513                 addi    a0,a0,1849
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d6dc:       |  /-> 420c                     lw      a1,0(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
    res ^= bitfield_bit32_read(reg, OTBN_INTR_COMMON_DONE_BIT) << kResDoneBit;
d000d6de:       |  |   01f59793                 slli    a5,a1,0x1f
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d6e2:       |  |   872e                     mv      a4,a1
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
d000d6e4:       |  |   8d3d                     xor     a0,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000d6e6:       |  \-- fed71be3                 bne     a4,a3,d000d6dc <otbn_cmd_run+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:130
  HARDENED_CHECK_EQ(reg, kIntrStateDone);
d000d6ea:       \--/-X 00d58663                 beq     a1,a3,d000d6f6 <otbn_cmd_run+0x3c>
d000d6ee:          |   0000                     unimp
d000d6f0:          |   0000                     unimp
d000d6f2:          |   0000                     unimp
d000d6f4:          |   0000                     unimp
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d6f6:          \-> c214                     sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d6f8:              4e4c                     lw      a1,28(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:135
  res ^= err_bits;
d000d6fa:              8d2d                     xor     a0,a0,a1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d6fc:              4e10                     lw      a2,24(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d6fe:              85aa                     mv      a1,a0
d000d700:              73900693                 li      a3,1849
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:142
  if (launder32(res) == kErrorOk && launder32(status) == kOtbnStatusIdle) {
d000d704:       /----- 02d59463                 bne     a1,a3,d000d72c <otbn_cmd_run+0x72>
d000d708:       +----- e215                     bnez    a2,d000d72c <otbn_cmd_run+0x72>
d000d70a:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:143
    HARDENED_CHECK_EQ(res, kErrorOk);
d000d70e:       |  /-- 00b50663                 beq     a0,a1,d000d71a <otbn_cmd_run+0x60>
d000d712:       |  |   0000                     unimp
d000d714:       |  |   0000                     unimp
d000d716:       |  |   0000                     unimp
d000d718:       |  |   0000                     unimp
d000d71a:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d71e:       |      4d8c                     lw      a1,24(a1)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:144
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000d720:       |  /-- c589                     beqz    a1,d000d72a <otbn_cmd_run+0x70>
d000d722:       |  |   0000                     unimp
d000d724:       |  |   0000                     unimp
d000d726:       |  |   0000                     unimp
d000d728:       |  |   0000                     unimp
d000d72a:       |  \-> 882a                     mv      a6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:149
}
d000d72c:       \----> 8542                     mv      a0,a6
d000d72e:              8082                     ret

d000d730 <otbn_instruction_count_get>:
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:160
uint32_t otbn_instruction_count_get(void) {
d000d730:       c1130537                lui     a0,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d734:       5148                    lw      a0,36(a0)
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:161
  return abs_mmio_read32(kBase + OTBN_INSN_CNT_REG_OFFSET);
d000d736:       8082                    ret

d000d738 <otbn_imem_sec_wipe>:
otbn_imem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:164
rom_error_t otbn_imem_sec_wipe(void) {
d000d738:       04425537                lui     a0,0x4425
d000d73c:       e0d50593                addi    a1,a0,-499 # 4424e0d <_rom_ext_virtual_size+0x43e4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:165
  return otbn_cmd_run(kOtbnCmdSecWipeImem, kErrorOtbnSecWipeImemFailed);
d000d740:       4579                    li      a0,30
d000d742:       bfa5                    j       d000d6ba <otbn_cmd_run>

d000d744 <otbn_imem_write>:
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:169
                            size_t num_words) {
d000d744:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d746:              c606                     sw      ra,12(sp)
d000d748:              00261693                 slli    a3,a2,0x2
d000d74c:              00a68733                 add     a4,a3,a0
d000d750:              00d736b3                 sltu    a3,a4,a3
d000d754:              6785                     lui     a5,0x1
d000d756:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d75a:              8ed9                     or      a3,a3,a4
d000d75c:              73900713                 li      a4,1849
d000d760:          /-- e681                     bnez    a3,d000d768 <otbn_imem_write+0x24>
d000d762:          |   73900693                 li      a3,1849
d000d766:       /--|-- a029                     j       d000d770 <otbn_imem_write+0x2c>
d000d768:       |  \-> 024256b7                 lui     a3,0x2425
d000d76c:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23e4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d770:       \----> 87b6                     mv      a5,a3
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:170
  HARDENED_RETURN_IF_ERROR(
d000d772:       /----- 02e79063                 bne     a5,a4,d000d792 <otbn_imem_write+0x4e>
d000d776:       |      73900713                 li      a4,1849
d000d77a:       |  /-- 00e68663                 beq     a3,a4,d000d786 <otbn_imem_write+0x42>
d000d77e:       |  |   0000                     unimp
d000d780:       |  |   0000                     unimp
d000d782:       |  |   0000                     unimp
d000d784:       |  |   0000                     unimp
d000d786:       |  \-> c11346b7                 lui     a3,0xc1134
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:172
  otbn_write(kBase + OTBN_IMEM_REG_OFFSET + offset_bytes, src, num_words);
d000d78a:       |      9536                     add     a0,a0,a3
d000d78c:       |      2039                     jal     d000d79a <otbn_write>
d000d78e:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:174
}
d000d792:       \----> 8536                     mv      a0,a3
d000d794:              40b2                     lw      ra,12(sp)
d000d796:              0141                     addi    sp,sp,16
d000d798:              8082                     ret

d000d79a <otbn_write>:
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:87
                       size_t num_words) {
d000d79a:                 1141                  addi    sp,sp,-16
d000d79c:                 c606                  sw      ra,12(sp)
d000d79e:                 c422                  sw      s0,8(sp)
d000d7a0:                 c226                  sw      s1,4(sp)
d000d7a2:                 c04a                  sw      s2,0(sp)
d000d7a4:                 8432                  mv      s0,a2
d000d7a6:                 892e                  mv      s2,a1
d000d7a8:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000d7aa:                 2a1d                  jal     d000d8e0 <rnd_uint32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7ac:                 4601                  li      a2,0
d000d7ae:                 4581                  li      a1,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d7b0:       /-------- 02867d63              bgeu    a2,s0,d000d7ea <otbn_write+0x50>
d000d7b4:       |         4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000d7b6:       |         02853533              mulhu   a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:93
    abs_mmio_write32(dest_addr + i * sizeof(uint32_t), src[i]);
d000d7ba:       |  /----> 00251613              slli    a2,a0,0x2
d000d7be:       |  |      00c906b3              add     a3,s2,a2
d000d7c2:       |  |      4294                  lw      a3,0(a3)
d000d7c4:       |  |      9626                  add     a2,a2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:94
    i += kStep;
d000d7c6:       |  |      0505                  addi    a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d7c8:       |  |      c214                  sw      a3,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7ca:       |  |      86aa                  mv      a3,a0
d000d7cc:       |  |      4601                  li      a2,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:95
    if (launder32(i) >= num_words) {
d000d7ce:       |  |  /-- 0086e363              bltu    a3,s0,d000d7d4 <otbn_write+0x3a>
d000d7d2:       |  |  |   8622                  mv      a2,s0
d000d7d4:       |  |  \-> 8d11                  sub     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d7d6:       |  |      0585                  addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:98
    HARDENED_CHECK_LT(i, num_words);
d000d7d8:       |  |  /-- 00856663              bltu    a0,s0,d000d7e4 <otbn_write+0x4a>
d000d7dc:       |  |  |   0000                  unimp
d000d7de:       |  |  |   0000                  unimp
d000d7e0:       |  |  |   0000                  unimp
d000d7e2:       |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7e4:       |  |  \-> 862e                  mv      a2,a1
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d7e6:       |  \----- fc866ae3              bltu    a2,s0,d000d7ba <otbn_write+0x20>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:100
  HARDENED_CHECK_EQ(iter_cnt, num_words);
d000d7ea:       \-----/-X 00858663              beq     a1,s0,d000d7f6 <otbn_write+0x5c>
d000d7ee:             |   0000                  unimp
d000d7f0:             |   0000                  unimp
d000d7f2:             |   0000                  unimp
d000d7f4:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:101
}
d000d7f6:             \-> 4902                  lw      s2,0(sp)
d000d7f8:                 4492                  lw      s1,4(sp)
d000d7fa:                 4422                  lw      s0,8(sp)
d000d7fc:                 40b2                  lw      ra,12(sp)
d000d7fe:                 0141                  addi    sp,sp,16
d000d800:                 8082                  ret

d000d802 <otbn_dmem_sec_wipe>:
otbn_dmem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:176
rom_error_t otbn_dmem_sec_wipe(void) {
d000d802:       05425537                lui     a0,0x5425
d000d806:       e0d50593                addi    a1,a0,-499 # 5424e0d <_rom_ext_virtual_size+0x53e4e0d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:177
  return otbn_cmd_run(kOtbnCmdSecWipeDmem, kErrorOtbnSecWipeDmemFailed);
d000d80a:       0c300513                li      a0,195
d000d80e:       b575                    j       d000d6ba <otbn_cmd_run>

d000d810 <otbn_dmem_write>:
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:181
                            size_t num_words) {
d000d810:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d812:              c606                     sw      ra,12(sp)
d000d814:              00261693                 slli    a3,a2,0x2
d000d818:              00a68733                 add     a4,a3,a0
d000d81c:              00d736b3                 sltu    a3,a4,a3
d000d820:              6785                     lui     a5,0x1
d000d822:              c0078793                 addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000d826:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d82a:              8ed9                     or      a3,a3,a4
d000d82c:              73900713                 li      a4,1849
d000d830:          /-- e681                     bnez    a3,d000d838 <otbn_dmem_write+0x28>
d000d832:          |   73900693                 li      a3,1849
d000d836:       /--|-- a029                     j       d000d840 <otbn_dmem_write+0x30>
d000d838:       |  \-> 024256b7                 lui     a3,0x2425
d000d83c:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <_rom_ext_virtual_size+0x23e4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d840:       \----> 87b6                     mv      a5,a3
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:182
  HARDENED_RETURN_IF_ERROR(
d000d842:       /----- 02e79063                 bne     a5,a4,d000d862 <otbn_dmem_write+0x52>
d000d846:       |      73900713                 li      a4,1849
d000d84a:       |  /-- 00e68663                 beq     a3,a4,d000d856 <otbn_dmem_write+0x46>
d000d84e:       |  |   0000                     unimp
d000d850:       |  |   0000                     unimp
d000d852:       |  |   0000                     unimp
d000d854:       |  |   0000                     unimp
d000d856:       |  \-> c11386b7                 lui     a3,0xc1138
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:184
  otbn_write(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes, src, num_words);
d000d85a:       |      9536                     add     a0,a0,a3
d000d85c:       |      3f3d                     jal     d000d79a <otbn_write>
d000d85e:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:186
}
d000d862:       \----> 8536                     mv      a0,a3
d000d864:              40b2                     lw      ra,12(sp)
d000d866:              0141                     addi    sp,sp,16
d000d868:              8082                     ret

d000d86a <otbn_dmem_read>:
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d86a:                    00261693           slli    a3,a2,0x2
d000d86e:                    00a68733           add     a4,a3,a0
d000d872:                    00d736b3           sltu    a3,a4,a3
d000d876:                    6785                       lui     a5,0x1
d000d878:                    c0078793           addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000d87c:                    00e7b733           sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d880:                    8f55                       or      a4,a4,a3
d000d882:                    73900693           li      a3,1849
d000d886:                /-- e701                       bnez    a4,d000d88e <otbn_dmem_read+0x24>
d000d888:                |   73900713           li      a4,1849
d000d88c:             /--|-- a029                       j       d000d896 <otbn_dmem_read+0x2c>
d000d88e:             |  \-> 02425737           lui     a4,0x2425
d000d892:             |      e0370713           addi    a4,a4,-509 # 2424e03 <_rom_ext_virtual_size+0x23e4e03>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d896:             \----> 87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
  HARDENED_RETURN_IF_ERROR(
d000d898:       /----------- 04d79163           bne     a5,a3,d000d8da <otbn_dmem_read+0x70>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d89c:       |            4781                       li      a5,0
d000d89e:       |            73900693           li      a3,1849
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
d000d8a2:       |        /-- 00d70663           beq     a4,a3,d000d8ae <otbn_dmem_read+0x44>
d000d8a6:       |        |   0000                       unimp
d000d8a8:       |        |   0000                       unimp
d000d8aa:       |        |   0000                       unimp
d000d8ac:       |        |   0000                       unimp
d000d8ae:       |        \-> 4701                       li      a4,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000d8b0:       |  /-------- 00c7fe63           bgeu    a5,a2,d000d8cc <otbn_dmem_read+0x62>
d000d8b4:       |  |         4701                       li      a4,0
d000d8b6:       |  |         c11387b7           lui     a5,0xc1138
d000d8ba:       |  |         953e                       add     a0,a0,a5
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d8bc:       |  |     /-> 411c                       lw      a5,0(a0)
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
d000d8be:       |  |     |   0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:195
    dest[i] = abs_mmio_read32(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes +
d000d8c0:       |  |     |   c19c                       sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d8c2:       |  |     |   87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000d8c4:       |  |     |   0511                       addi    a0,a0,4
d000d8c6:       |  |     |   0591                       addi    a1,a1,4
d000d8c8:       |  |     \-- fec7eae3           bltu    a5,a2,d000d8bc <otbn_dmem_read+0x52>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:198
  HARDENED_CHECK_EQ(i, num_words);
d000d8cc:       |  \--/----X 00c70663           beq     a4,a2,d000d8d8 <otbn_dmem_read+0x6e>
d000d8d0:       |     |      0000                       unimp
d000d8d2:       |     |      0000                       unimp
d000d8d4:       |     |      0000                       unimp
d000d8d6:       |     |      0000                       unimp
d000d8d8:       |     \--/-X a011                       j       d000d8dc <otbn_dmem_read+0x72>
d000d8da:       \--------|-> 86ba                       mv      a3,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:201
}
d000d8dc:                \-> 8536                       mv      a0,a3
d000d8de:                    8082                       ret

d000d8e0 <rnd_uint32>:
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:20

enum {
  kBase = TOP_EARLGREY_RV_CORE_IBEX_CFG_BASE_ADDR,
};

uint32_t rnd_uint32(void) {
d000d8e0:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:21
  if (otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RNG_EN_OFFSET) ==
d000d8e2:              c606                     sw      ra,12(sp)
d000d8e4:              0f800513                 li      a0,248
d000d8e8:              21cd                     jal     d000ddca <otp_read32>
d000d8ea:              73900593                 li      a1,1849
d000d8ee:       /----- 00b51663                 bne     a0,a1,d000d8fa <rnd_uint32+0x1a>
d000d8f2:       |      c11f0537                 lui     a0,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d8f6:       |  /-> 4d6c                     lw      a1,92(a0)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:24
      kHardenedBoolTrue) {
    // When bit-0 is clear an EDN request for new data for RND_DATA is pending.
    while (!abs_mmio_read32(kBase + RV_CORE_IBEX_RND_STATUS_REG_OFFSET)) {
d000d8f8:       |  \-- ddfd                     beqz    a1,d000d8f6 <rnd_uint32+0x16>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:28
    }
  }
  uint32_t mcycle;
  CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000d8fa:       \----> b0002573                 csrr    a0,mcycle
d000d8fe:              c11f05b7                 lui     a1,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d902:              4dac                     lw      a1,88(a1)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:29
  return mcycle + abs_mmio_read32(kBase + RV_CORE_IBEX_RND_DATA_REG_OFFSET);
d000d904:              952e                     add     a0,a0,a1
d000d906:              40b2                     lw      ra,12(sp)
d000d908:              0141                     addi    sp,sp,16
d000d90a:              8082                     ret

d000d90c <epmp_state_check>:
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:40
    else                      \
       *fail=0x1;             \
} while (false)
    
  // Check address registers.
  CHECK_CSR(CSR_REG_PMPADDR0, s->pmpaddr[0]);   //ok
d000d90c:              3b002673                 csrr    a2,pmpaddr0
d000d910:              0fff2597                 auipc   a1,0xfff2
d000d914:              71058593                 addi    a1,a1,1808 # e0000020 <epmp_state>
d000d918:              4994                     lw      a3,16(a1)
d000d91a:              4505                     li      a0,1
d000d91c:          /-- 00d60663                 beq     a2,a3,d000d928 <epmp_state_check+0x1c>
d000d920:          |   4501                     li      a0,0
d000d922:          |   4605                     li      a2,1
d000d924:          |   fec02fa3                 sw      a2,-1(zero)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:41
  CHECK_CSR(CSR_REG_PMPADDR1, s->pmpaddr[1]);
d000d928:          \-> 3b102673                 csrr    a2,pmpaddr1
d000d92c:              49d4                     lw      a3,20(a1)
d000d92e:          /-- 00d61463                 bne     a2,a3,d000d936 <epmp_state_check+0x2a>
d000d932:          |   0505                     addi    a0,a0,1
d000d934:       /--|-- a021                     j       d000d93c <epmp_state_check+0x30>
d000d936:       |  \-> 567d                     li      a2,-1
d000d938:       |      4685                     li      a3,1
d000d93a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:42
  CHECK_CSR(CSR_REG_PMPADDR2, s->pmpaddr[2]);
d000d93c:       \----> 3b202673                 csrr    a2,pmpaddr2
d000d940:              4d94                     lw      a3,24(a1)
d000d942:          /-- 00d61463                 bne     a2,a3,d000d94a <epmp_state_check+0x3e>
d000d946:          |   0505                     addi    a0,a0,1
d000d948:       /--|-- a021                     j       d000d950 <epmp_state_check+0x44>
d000d94a:       |  \-> 567d                     li      a2,-1
d000d94c:       |      4685                     li      a3,1
d000d94e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:43
  CHECK_CSR(CSR_REG_PMPADDR3, s->pmpaddr[3]);
d000d950:       \----> 3b302673                 csrr    a2,pmpaddr3
d000d954:              4dd4                     lw      a3,28(a1)
d000d956:          /-- 00d61463                 bne     a2,a3,d000d95e <epmp_state_check+0x52>
d000d95a:          |   0505                     addi    a0,a0,1
d000d95c:       /--|-- a021                     j       d000d964 <epmp_state_check+0x58>
d000d95e:       |  \-> 567d                     li      a2,-1
d000d960:       |      4685                     li      a3,1
d000d962:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:44
  CHECK_CSR(CSR_REG_PMPADDR4, s->pmpaddr[4]);
d000d964:       \----> 3b402673                 csrr    a2,pmpaddr4
d000d968:              5194                     lw      a3,32(a1)
d000d96a:          /-- 00d61463                 bne     a2,a3,d000d972 <epmp_state_check+0x66>
d000d96e:          |   0505                     addi    a0,a0,1
d000d970:       /--|-- a021                     j       d000d978 <epmp_state_check+0x6c>
d000d972:       |  \-> 567d                     li      a2,-1
d000d974:       |      4685                     li      a3,1
d000d976:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:45
  CHECK_CSR(CSR_REG_PMPADDR5, s->pmpaddr[5]);
d000d978:       \----> 3b502673                 csrr    a2,pmpaddr5
d000d97c:              51d4                     lw      a3,36(a1)
d000d97e:          /-- 00d61463                 bne     a2,a3,d000d986 <epmp_state_check+0x7a>
d000d982:          |   0505                     addi    a0,a0,1
d000d984:       /--|-- a021                     j       d000d98c <epmp_state_check+0x80>
d000d986:       |  \-> 567d                     li      a2,-1
d000d988:       |      4685                     li      a3,1
d000d98a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:46
  CHECK_CSR(CSR_REG_PMPADDR6, s->pmpaddr[6]);
d000d98c:       \----> 3b602673                 csrr    a2,pmpaddr6
d000d990:              5594                     lw      a3,40(a1)
d000d992:          /-- 00d61463                 bne     a2,a3,d000d99a <epmp_state_check+0x8e>
d000d996:          |   0505                     addi    a0,a0,1
d000d998:       /--|-- a021                     j       d000d9a0 <epmp_state_check+0x94>
d000d99a:       |  \-> 567d                     li      a2,-1
d000d99c:       |      4685                     li      a3,1
d000d99e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:47
  CHECK_CSR(CSR_REG_PMPADDR7, s->pmpaddr[7]);
d000d9a0:       \----> 3b702673                 csrr    a2,pmpaddr7
d000d9a4:              55d4                     lw      a3,44(a1)
d000d9a6:          /-- 00d61463                 bne     a2,a3,d000d9ae <epmp_state_check+0xa2>
d000d9aa:          |   0505                     addi    a0,a0,1
d000d9ac:       /--|-- a021                     j       d000d9b4 <epmp_state_check+0xa8>
d000d9ae:       |  \-> 567d                     li      a2,-1
d000d9b0:       |      4685                     li      a3,1
d000d9b2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:48
  CHECK_CSR(CSR_REG_PMPADDR8, s->pmpaddr[8]);
d000d9b4:       \----> 3b802673                 csrr    a2,pmpaddr8
d000d9b8:              5994                     lw      a3,48(a1)
d000d9ba:          /-- 00d61463                 bne     a2,a3,d000d9c2 <epmp_state_check+0xb6>
d000d9be:          |   0505                     addi    a0,a0,1
d000d9c0:       /--|-- a021                     j       d000d9c8 <epmp_state_check+0xbc>
d000d9c2:       |  \-> 567d                     li      a2,-1
d000d9c4:       |      4685                     li      a3,1
d000d9c6:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:49
  CHECK_CSR(CSR_REG_PMPADDR9, s->pmpaddr[9]);
d000d9c8:       \----> 3b902673                 csrr    a2,pmpaddr9
d000d9cc:              59d4                     lw      a3,52(a1)
d000d9ce:          /-- 00d61463                 bne     a2,a3,d000d9d6 <epmp_state_check+0xca>
d000d9d2:          |   0505                     addi    a0,a0,1
d000d9d4:       /--|-- a021                     j       d000d9dc <epmp_state_check+0xd0>
d000d9d6:       |  \-> 567d                     li      a2,-1
d000d9d8:       |      4685                     li      a3,1
d000d9da:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:50
  CHECK_CSR(CSR_REG_PMPADDR10, s->pmpaddr[10]);
d000d9dc:       \----> 3ba02673                 csrr    a2,pmpaddr10
d000d9e0:              5d94                     lw      a3,56(a1)
d000d9e2:          /-- 00d61463                 bne     a2,a3,d000d9ea <epmp_state_check+0xde>
d000d9e6:          |   0505                     addi    a0,a0,1
d000d9e8:       /--|-- a021                     j       d000d9f0 <epmp_state_check+0xe4>
d000d9ea:       |  \-> 567d                     li      a2,-1
d000d9ec:       |      4685                     li      a3,1
d000d9ee:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:51
  CHECK_CSR(CSR_REG_PMPADDR11, s->pmpaddr[11]);
d000d9f0:       \----> 3bb02673                 csrr    a2,pmpaddr11
d000d9f4:              5dd4                     lw      a3,60(a1)
d000d9f6:          /-- 00d61463                 bne     a2,a3,d000d9fe <epmp_state_check+0xf2>
d000d9fa:          |   0505                     addi    a0,a0,1
d000d9fc:       /--|-- a021                     j       d000da04 <epmp_state_check+0xf8>
d000d9fe:       |  \-> 567d                     li      a2,-1
d000da00:       |      4685                     li      a3,1
d000da02:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:52
  CHECK_CSR(CSR_REG_PMPADDR12, s->pmpaddr[12]);
d000da04:       \----> 3bc02673                 csrr    a2,pmpaddr12
d000da08:              41b4                     lw      a3,64(a1)
d000da0a:          /-- 00d61463                 bne     a2,a3,d000da12 <epmp_state_check+0x106>
d000da0e:          |   0505                     addi    a0,a0,1
d000da10:       /--|-- a021                     j       d000da18 <epmp_state_check+0x10c>
d000da12:       |  \-> 567d                     li      a2,-1
d000da14:       |      4685                     li      a3,1
d000da16:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:53
  CHECK_CSR(CSR_REG_PMPADDR13, s->pmpaddr[13]);
d000da18:       \----> 3bd02673                 csrr    a2,pmpaddr13
d000da1c:              41f4                     lw      a3,68(a1)
d000da1e:          /-- 00d61463                 bne     a2,a3,d000da26 <epmp_state_check+0x11a>
d000da22:          |   0505                     addi    a0,a0,1
d000da24:       /--|-- a021                     j       d000da2c <epmp_state_check+0x120>
d000da26:       |  \-> 567d                     li      a2,-1
d000da28:       |      4685                     li      a3,1
d000da2a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:54
  CHECK_CSR(CSR_REG_PMPADDR14, s->pmpaddr[14]);
d000da2c:       \----> 3be02673                 csrr    a2,pmpaddr14
d000da30:              45b4                     lw      a3,72(a1)
d000da32:          /-- 00d61463                 bne     a2,a3,d000da3a <epmp_state_check+0x12e>
d000da36:          |   0505                     addi    a0,a0,1
d000da38:       /--|-- a021                     j       d000da40 <epmp_state_check+0x134>
d000da3a:       |  \-> 567d                     li      a2,-1
d000da3c:       |      4685                     li      a3,1
d000da3e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:55
  CHECK_CSR(CSR_REG_PMPADDR15, s->pmpaddr[15]);
d000da40:       \----> 3bf02673                 csrr    a2,pmpaddr15
d000da44:              45f4                     lw      a3,76(a1)
d000da46:          /-- 00d61463                 bne     a2,a3,d000da4e <epmp_state_check+0x142>
d000da4a:          |   0505                     addi    a0,a0,1
d000da4c:       /--|-- a021                     j       d000da54 <epmp_state_check+0x148>
d000da4e:       |  \-> 567d                     li      a2,-1
d000da50:       |      4685                     li      a3,1
d000da52:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:58

  // Check configuration registers.
  CHECK_CSR(CSR_REG_PMPCFG0, s->pmpcfg[0]);
d000da54:       \----> 3a002673                 csrr    a2,pmpcfg0
d000da58:              4194                     lw      a3,0(a1)
d000da5a:          /-- 00d61463                 bne     a2,a3,d000da62 <epmp_state_check+0x156>
d000da5e:          |   0505                     addi    a0,a0,1
d000da60:       /--|-- a021                     j       d000da68 <epmp_state_check+0x15c>
d000da62:       |  \-> 567d                     li      a2,-1
d000da64:       |      4685                     li      a3,1
d000da66:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:59
  CHECK_CSR(CSR_REG_PMPCFG1, s->pmpcfg[1]);
d000da68:       \----> 3a102673                 csrr    a2,pmpcfg1
d000da6c:              41d4                     lw      a3,4(a1)
d000da6e:          /-- 00d61463                 bne     a2,a3,d000da76 <epmp_state_check+0x16a>
d000da72:          |   0505                     addi    a0,a0,1
d000da74:       /--|-- a021                     j       d000da7c <epmp_state_check+0x170>
d000da76:       |  \-> 567d                     li      a2,-1
d000da78:       |      4685                     li      a3,1
d000da7a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:60
  CHECK_CSR(CSR_REG_PMPCFG2, s->pmpcfg[2]);   
d000da7c:       \----> 3a202673                 csrr    a2,pmpcfg2
d000da80:              4594                     lw      a3,8(a1)
d000da82:          /-- 00d61463                 bne     a2,a3,d000da8a <epmp_state_check+0x17e>
d000da86:          |   0505                     addi    a0,a0,1
d000da88:       /--|-- a021                     j       d000da90 <epmp_state_check+0x184>
d000da8a:       |  \-> 567d                     li      a2,-1
d000da8c:       |      4685                     li      a3,1
d000da8e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:61
  CHECK_CSR(CSR_REG_PMPCFG3, s->pmpcfg[3]);
d000da90:       \----> 3a302673                 csrr    a2,pmpcfg3
d000da94:              45d4                     lw      a3,12(a1)
d000da96:          /-- 00d61463                 bne     a2,a3,d000da9e <epmp_state_check+0x192>
d000da9a:          |   0505                     addi    a0,a0,1
d000da9c:       /--|-- a021                     j       d000daa4 <epmp_state_check+0x198>
d000da9e:       |  \-> 567d                     li      a2,-1
d000daa0:       |      4685                     li      a3,1
d000daa2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:65

  // Check Machine Security Configuration (MSECCFG) register.
  // High bits are hardcoded to 0.
  CHECK_CSR(CSR_REG_MSECCFG, s->mseccfg);
d000daa4:       \----> 74702673                 csrr    a2,0x747
d000daa8:              49ac                     lw      a1,80(a1)
d000daaa:          /-- 00b61463                 bne     a2,a1,d000dab2 <epmp_state_check+0x1a6>
d000daae:          |   0505                     addi    a0,a0,1
d000dab0:       /--|-- a021                     j       d000dab8 <epmp_state_check+0x1ac>
d000dab2:       |  \-> 55fd                     li      a1,-1
d000dab4:       |      4605                     li      a2,1
d000dab6:       |      c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:66
  CHECK_CSR(CSR_REG_MSECCFGH, 0);           //ok
d000dab8:       \----> 757025f3                 csrr    a1,0x757
d000dabc:       /----- c589                     beqz    a1,d000dac6 <epmp_state_check+0x1ba>
d000dabe:       |      55fd                     li      a1,-1
d000dac0:       |      4605                     li      a2,1
d000dac2:       |      c190                     sw      a2,0(a1)
d000dac4:       |  /-- a011                     j       d000dac8 <epmp_state_check+0x1bc>
d000dac6:       \--|-> 0505                     addi    a0,a0,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dac8:          \-> 862a                     mv      a2,a0
d000daca:              45d9                     li      a1,22
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:73
#undef CHECK_CSR

  enum { kTotalChecks = 22 }; //should be 22
  // Hamming distance of 3, error = 0x72f, kErrorOk = 0x739.
  rom_error_t error = kErrorOk ^ kTotalChecks;
  if (launder32(checks) == kTotalChecks) {
d000dacc:       /----- 02b61363                 bne     a2,a1,d000daf2 <epmp_state_check+0x1e6>
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:74
    HARDENED_CHECK_EQ(checks, kTotalChecks);
d000dad0:       |  /-- 00b50663                 beq     a0,a1,d000dadc <epmp_state_check+0x1d0>
d000dad4:       |  |   0000                     unimp
d000dad6:       |  |   0000                     unimp
d000dad8:       |  |   0000                     unimp
d000dada:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:75
    error ^= checks;
d000dadc:       |  \-> 72f54513                 xori    a0,a0,1839
d000dae0:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:76
    HARDENED_CHECK_EQ(error, kErrorOk);
d000dae4:       |  /-- 00b50663                 beq     a0,a1,d000daf0 <epmp_state_check+0x1e4>
d000dae8:       |  |   0000                     unimp
d000daea:       |  |   0000                     unimp
d000daec:       |  |   0000                     unimp
d000daee:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:80
    return error;
  }
  return kErrorEpmpBadCheck;
}
d000daf0:       |  \-> 8082                     ret
d000daf2:       \----> 01455537                 lui     a0,0x1455
d000daf6:              0535                     addi    a0,a0,13
d000daf8:              8082                     ret

d000dafa <hmac_sha256_init>:
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:16
#include "sw/device/silicon_creator/lib/error.h"

#include "hmac_regs.h"  // Generated.
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void hmac_sha256_init(void) {
d000dafa:       c1110537                lui     a0,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dafe:       00052823                sw      zero,16(a0) # c1110010 <_stack_end+0xe10f0010>
d000db02:       00052223                sw      zero,4(a0)
d000db06:       55fd                    li      a1,-1
d000db08:       c10c                    sw      a1,0(a0)
d000db0a:       4589                    li      a1,2
d000db0c:       c90c                    sw      a1,16(a0)
d000db0e:       4585                    li      a1,1
d000db10:       c94c                    sw      a1,20(a0)
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:36
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CFG_REG_OFFSET, reg);

  reg = 0;
  reg = bitfield_bit32_write(reg, HMAC_CMD_HASH_START_BIT, true);
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);
}
d000db12:       8082                    ret

d000db14 <hmac_sha256_update>:
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42

void hmac_sha256_update(const void *data, size_t len) {
  const uint8_t *data_sent = (const uint8_t *)data;

  // Individual byte writes are needed if the buffer isn't word aligned.
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000db14:                 00b03633              snez    a2,a1
d000db18:                 00357693              andi    a3,a0,3
d000db1c:                 00d036b3              snez    a3,a3
d000db20:                 8e75                  and     a2,a2,a3
d000db22:          /----- c61d                  beqz    a2,d000db50 <hmac_sha256_update+0x3c>
d000db24:          |      00150693              addi    a3,a0,1
d000db28:          |      c1111737              lui     a4,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:44
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000db2c:          |  /-> 00050783              lb      a5,0(a0)
d000db30:          |  |   00150613              addi    a2,a0,1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000db34:          |  |   80f70023              sb      a5,-2048(a4) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000db38:          |  |   15fd                  addi    a1,a1,-1
d000db3a:          |  |   00b03533              snez    a0,a1
d000db3e:          |  |   0036f793              andi    a5,a3,3
d000db42:          |  |   00f037b3              snez    a5,a5
d000db46:          |  |   8fe9                  and     a5,a5,a0
d000db48:          |  |   0685                  addi    a3,a3,1
d000db4a:          |  |   8532                  mv      a0,a2
d000db4c:          |  \-- f3e5                  bnez    a5,d000db2c <hmac_sha256_update+0x18>
d000db4e:          |  /-- a011                  j       d000db52 <hmac_sha256_update+0x3e>
d000db50:          \--|-> 862a                  mv      a2,a0
d000db52:             \-> 4511                  li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  }

  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000db54:       /-------- 00a5ec63              bltu    a1,a0,d000db6c <hmac_sha256_update+0x58>
d000db58:       |         c1111537              lui     a0,0xc1111
d000db5c:       |         468d                  li      a3,3
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000db5e:       |     /-> 4218                  lw      a4,0(a2)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000db60:       |     |   80e52023              sw      a4,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
d000db64:       |     |   15f1                  addi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:51
    uint32_t data_aligned = read_32(data_sent);
    abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                     data_aligned);
    data_sent += sizeof(uint32_t);
d000db66:       |     |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000db68:       |     \-- feb6ebe3              bltu    a3,a1,d000db5e <hmac_sha256_update+0x4a>
d000db6c:       \--/----X c991                  beqz    a1,d000db80 <hmac_sha256_update+0x6c>
d000db6e:          |      c1111537              lui     a0,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:57
  }

  // Handle non-32bit aligned bytes at the end of the buffer.
  for (; len != 0; --len) {
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000db72:          |  /-> 00060683              lb      a3,0(a2)
d000db76:          |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:55
  for (; len != 0; --len) {
d000db78:          |  |   15fd                  addi    a1,a1,-1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000db7a:          |  |   80d50023              sb      a3,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
d000db7e:          |  \-- f9f5                  bnez    a1,d000db72 <hmac_sha256_update+0x5e>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:59
  }
}
d000db80:          \----> 8082                  ret

d000db82 <hmac_sha256_final>:
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:61

void hmac_sha256_final(hmac_digest_t *digest) {
d000db82:           c11105b7            lui     a1,0xc1110
d000db86:           01458613            addi    a2,a1,20 # c1110014 <_stack_end+0xe10f0014>
d000db8a:           4689                        li      a3,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000db8c:           c214                        sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000db8e:       /-> 4190                        lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000db90:       |   00167693            andi    a3,a2,1
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:69
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);

  do {
    reg = abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR +
                          HMAC_INTR_STATE_REG_OFFSET);
  } while (!bitfield_bit32_read(reg, HMAC_INTR_STATE_HMAC_DONE_BIT));
d000db94:       \-- deed                        beqz    a3,d000db8e <hmac_sha256_final+0xc>
d000db96:           4581                        li      a1,0
d000db98:           c11106b7            lui     a3,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000db9c:           c290                        sw      a2,0(a3)
d000db9e:           06068613            addi    a2,a3,96 # c1110060 <_stack_end+0xe10f0060>
d000dba2:           02000693            li      a3,32
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000dba6:       /-> 4218                        lw      a4,0(a2)
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:76
                   reg);

  // Read the digest in reverse to preserve the numerical value.
  // The least significant word is at HMAC_DIGEST_7_REG_OFFSET.
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
    digest->digest[i] =
d000dba8:       |   00b507b3            add     a5,a0,a1
d000dbac:       |   c398                        sw      a4,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:75
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
d000dbae:       |   0591                        addi    a1,a1,4
d000dbb0:       |   1671                        addi    a2,a2,-4
d000dbb2:       \-- fed59ae3            bne     a1,a3,d000dba6 <hmac_sha256_final+0x24>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:80
        abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_DIGEST_7_REG_OFFSET -
                        (i * sizeof(uint32_t)));
  }
}
d000dbb6:           8082                        ret

d000dbb8 <lifecycle_state_get>:
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:22

enum {
  kBase = TOP_EARLGREY_LC_CTRL_BASE_ADDR,
};

lifecycle_state_t lifecycle_state_get(void) {
d000dbb8:                                         1141                  addi    sp,sp,-16
d000dbba:                                         c606                  sw      ra,12(sp)
d000dbbc:                                         c0140537              lui     a0,0xc0140
d000dbc0:                                         03450513              addi    a0,a0,52 # c0140034 <_stack_end+0xe0120034>
lifecycle_raw_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:69
  }
}

uint32_t lifecycle_raw_state_get(void) {
  uint32_t value = bitfield_field32_read(
      sec_mmio_read32(kBase + LC_CTRL_LC_STATE_REG_OFFSET),
d000dbc4:                                         24a5                  jal     d000de2c <sec_mmio_read32>
d000dbc6:                                         400005b7              lui     a1,0x40000
d000dbca:                                         15fd                  addi    a1,a1,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000dbcc:                                         8d6d                  and     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dbce:                                         85aa                  mv      a1,a0
d000dbd0:                                         1ad6b637              lui     a2,0x1ad6b
d000dbd4:                                         5ac60613              addi    a2,a2,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1ad2b5ac>
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dbd8:                                  /----- 02b64b63              blt     a2,a1,d000dc0e <lifecycle_state_get+0x56>
d000dbdc:                                  |      0e73a637              lui     a2,0xe73a
d000dbe0:                                  |      ce660693              addi    a3,a2,-794 # e739ce6 <_rom_ext_virtual_size+0xe6f9ce6>
d000dbe4:                               /--|----- 04b6ce63              blt     a3,a1,d000dc40 <lifecycle_state_get+0x88>
d000dbe8:                               |  |      02108637              lui     a2,0x2108
d000dbec:                               |  |      42160613              addi    a2,a2,1057 # 2108421 <_rom_ext_virtual_size+0x20c8421>
d000dbf0:                         /-----|--|----- 08c58e63              beq     a1,a2,d000dc8c <lifecycle_state_get+0xd4>
d000dbf4:                         |     |  |      06319637              lui     a2,0x6319
d000dbf8:                         |     |  |      c6360613              addi    a2,a2,-925 # 6318c63 <_rom_ext_virtual_size+0x62d8c63>
d000dbfc:          /--------------|-----|--|----- 0ec59063              bne     a1,a2,d000dcdc <lifecycle_state_get+0x124>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:30
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED1);
d000dc00:          |              |     |  |  /-- 00c50663              beq     a0,a2,d000dc0c <lifecycle_state_get+0x54>
d000dc04:          |              |     |  |  |   0000                  unimp
d000dc06:          |              |     |  |  |   0000                  unimp
d000dc08:          |              |     |  |  |   0000                  unimp
d000dc0a:          |              |     |  |  |   0000                  unimp
d000dc0c:       /--|--------------|-----|--|--\-X a215                  j       d000dd30 <lifecycle_state_get+0x178>
d000dc0e:       |  |              |     |  \----> 2318c637              lui     a2,0x2318c
d000dc12:       |  |              |     |         63060693              addi    a3,a2,1584 # 2318c630 <_rom_ext_virtual_size+0x2314c630>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc16:       |  |              |     |  /----- 04b6c663              blt     a3,a1,d000dc62 <lifecycle_state_get+0xaa>
d000dc1a:       |  |              |     |  |      1ad6b637              lui     a2,0x1ad6b
d000dc1e:       |  |              |     |  |      5ad60613              addi    a2,a2,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1ad2b5ad>
d000dc22:       |  |              |  /--|--|----- 06c58c63              beq     a1,a2,d000dc9a <lifecycle_state_get+0xe2>
d000dc26:       |  |              |  |  |  |      1ef7c637              lui     a2,0x1ef7c
d000dc2a:       |  |              |  |  |  |      def60613              addi    a2,a2,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1ef3bdef>
d000dc2e:       |  |           /--|--|--|--|----- 0cc59463              bne     a1,a2,d000dcf6 <lifecycle_state_get+0x13e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:48
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED7);
d000dc32:       |  |           |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dc3e <lifecycle_state_get+0x86>
d000dc36:       |  |           |  |  |  |  |  |   0000                  unimp
d000dc38:       |  |           |  |  |  |  |  |   0000                  unimp
d000dc3a:       |  |           |  |  |  |  |  |   0000                  unimp
d000dc3c:       |  |           |  |  |  |  |  |   0000                  unimp
d000dc3e:       +--|-----------|--|--|--|--|--\-X a8cd                  j       d000dd30 <lifecycle_state_get+0x178>
d000dc40:       |  |           |  |  |  \--|----> ce760613              addi    a2,a2,-793
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc44:       |  |           |  |  |  /--|----- 06c58263              beq     a1,a2,d000dca8 <lifecycle_state_get+0xf0>
d000dc48:       |  |           |  |  |  |  |      1294a637              lui     a2,0x1294a
d000dc4c:       |  |           |  |  |  |  |      52960613              addi    a2,a2,1321 # 1294a529 <_rom_ext_virtual_size+0x1290a529>
d000dc50:       |  |        /--|--|--|--|--|----- 0cc59463              bne     a1,a2,d000dd18 <lifecycle_state_get+0x160>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:39
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED4);
d000dc54:       |  |        |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dc60 <lifecycle_state_get+0xa8>
d000dc58:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dc5a:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dc5c:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dc5e:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dc60:       +--|--------|--|--|--|--|--|--\-X a8c1                  j       d000dd30 <lifecycle_state_get+0x178>
d000dc62:       |  |        |  |  |  |  |  \----> 63160613              addi    a2,a2,1585
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc66:       |  |        |  |  |  |  |  /----- 04c58c63              beq     a1,a2,d000dcbe <lifecycle_state_get+0x106>
d000dc6a:       |  |        |  |  |  |  |  |      25295637              lui     a2,0x25295
d000dc6e:       |  |        |  |  |  |  |  |      a5260613              addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25254a52>
d000dc72:       |  |     /--|--|--|--|--|--|----- 0cc59663              bne     a1,a2,d000dd3e <lifecycle_state_get+0x186>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:57
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD_END);
d000dc76:       |  |     |  |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dc82 <lifecycle_state_get+0xca>
d000dc7a:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dc7c:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dc7e:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dc80:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dc82:       |  |     |  |  |  |  |  |  |  \-> 91b9b537              lui     a0,0x91b9b
d000dc86:       |  |     |  |  |  |  |  |  |      68a50513              addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
d000dc8a:       |  |  /--|--|--|--|--|--|--|----- a07d                  j       d000dd38 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:27
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED0);
d000dc8c:       |  |  |  |  |  |  \--|--|--|--/-X 00c50663              beq     a0,a2,d000dc98 <lifecycle_state_get+0xe0>
d000dc90:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dc92:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dc94:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dc96:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dc98:       +--|--|--|--|--|-----|--|--|--\-X a861                  j       d000dd30 <lifecycle_state_get+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:45
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED6);
d000dc9a:       |  |  |  |  |  |     \--|--|--/-X 00c50663              beq     a0,a2,d000dca6 <lifecycle_state_get+0xee>
d000dc9e:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dca0:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dca2:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dca4:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dca6:       +--|--|--|--|--|--------|--|--\-X a069                  j       d000dd30 <lifecycle_state_get+0x178>
d000dca8:       |  |  |  |  |  |        \--|----> 0e73a5b7              lui     a1,0xe73a
d000dcac:       |  |  |  |  |  |           |      ce758593              addi    a1,a1,-793 # e739ce7 <_rom_ext_virtual_size+0xe6f9ce7>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:36
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED3);
d000dcb0:       |  |  |  |  |  |           |  /-- 00b50663              beq     a0,a1,d000dcbc <lifecycle_state_get+0x104>
d000dcb4:       |  |  |  |  |  |           |  |   0000                  unimp
d000dcb6:       |  |  |  |  |  |           |  |   0000                  unimp
d000dcb8:       |  |  |  |  |  |           |  |   0000                  unimp
d000dcba:       |  |  |  |  |  |           |  |   0000                  unimp
d000dcbc:       +--|--|--|--|--|-----------|--\-X a895                  j       d000dd30 <lifecycle_state_get+0x178>
d000dcbe:       |  |  |  |  |  |           \----> 2318c5b7              lui     a1,0x2318c
d000dcc2:       |  |  |  |  |  |                  63158593              addi    a1,a1,1585 # 2318c631 <_rom_ext_virtual_size+0x2314c631>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:54
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD);
d000dcc6:       |  |  |  |  |  |              /-- 00b50663              beq     a0,a1,d000dcd2 <lifecycle_state_get+0x11a>
d000dcca:       |  |  |  |  |  |              |   0000                  unimp
d000dccc:       |  |  |  |  |  |              |   0000                  unimp
d000dcce:       |  |  |  |  |  |              |   0000                  unimp
d000dcd0:       |  |  |  |  |  |              |   0000                  unimp
d000dcd2:       |  |  |  |  |  |              \-> 65f25537              lui     a0,0x65f25
d000dcd6:       |  |  |  |  |  |                  20f50513              addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
d000dcda:       |  |  +--|--|--|----------------- a8b9                  j       d000dd38 <lifecycle_state_get+0x180>
d000dcdc:       |  \--|--|--|--|----------------> 0a529637              lui     a2,0xa529
d000dce0:       |     |  |  |  |                  4a560613              addi    a2,a2,1189 # a5294a5 <_rom_ext_virtual_size+0xa4e94a5>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dce4:       |     |  |  |  |           /----- 06c59e63              bne     a1,a2,d000dd60 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:33
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED2);
d000dce8:       |     |  |  |  |           |  /-- 00c50663              beq     a0,a2,d000dcf4 <lifecycle_state_get+0x13c>
d000dcec:       |     |  |  |  |           |  |   0000                  unimp
d000dcee:       |     |  |  |  |           |  |   0000                  unimp
d000dcf0:       |     |  |  |  |           |  |   0000                  unimp
d000dcf2:       |     |  |  |  |           |  |   0000                  unimp
d000dcf4:       +-----|--|--|--|-----------|--\-X a835                  j       d000dd30 <lifecycle_state_get+0x178>
d000dcf6:       |     |  |  |  \-----------|----> 21084637              lui     a2,0x21084
d000dcfa:       |     |  |  |              |      21060613              addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21044210>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dcfe:       |     |  |  |              +----- 06c59163              bne     a1,a2,d000dd60 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:51
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_DEV);
d000dd02:       |     |  |  |              |  /-- 00c50663              beq     a0,a2,d000dd0e <lifecycle_state_get+0x156>
d000dd06:       |     |  |  |              |  |   0000                  unimp
d000dd08:       |     |  |  |              |  |   0000                  unimp
d000dd0a:       |     |  |  |              |  |   0000                  unimp
d000dd0c:       |     |  |  |              |  |   0000                  unimp
d000dd0e:       |     |  |  |              |  \-> 0b5a7537              lui     a0,0xb5a7
d000dd12:       |     |  |  |              |      5e050513              addi    a0,a0,1504 # b5a75e0 <_rom_ext_virtual_size+0xb5675e0>
d000dd16:       |     +--|--|--------------|----- a00d                  j       d000dd38 <lifecycle_state_get+0x180>
d000dd18:       |     |  |  \--------------|----> 16b5b637              lui     a2,0x16b5b
d000dd1c:       |     |  |                 |      d6b60613              addi    a2,a2,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16b1ad6b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dd20:       |     |  |                 +----- 04c59063              bne     a1,a2,d000dd60 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:42
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED5);
d000dd24:       +-----|--|-----------------|----- 00c50663              beq     a0,a2,d000dd30 <lifecycle_state_get+0x178>
d000dd28:       |     |  |                 |      0000                  unimp
d000dd2a:       |     |  |                 |      0000                  unimp
d000dd2c:       |     |  |                 |      0000                  unimp
d000dd2e:       |     |  |                 |      0000                  unimp
d000dd30:       \-----|--|-----------------|----> b2866537              lui     a0,0xb2866
d000dd34:             |  |                 |      fbb50513              addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:65
}
d000dd38:             >--|-----------------|----> 40b2                  lw      ra,12(sp)
d000dd3a:             |  |                 |      0141                  addi    sp,sp,16
d000dd3c:             |  |                 |      8082                  ret
d000dd3e:             |  \-----------------|----> 2739d637              lui     a2,0x2739d
d000dd42:             |                    |      e7360613              addi    a2,a2,-397 # 2739ce73 <_rom_ext_virtual_size+0x2735ce73>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dd46:             |                    +----- 00c59d63              bne     a1,a2,d000dd60 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:60
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_RMA);
d000dd4a:             |                    |  /-- 00c50663              beq     a0,a2,d000dd56 <lifecycle_state_get+0x19e>
d000dd4e:             |                    |  |   0000                  unimp
d000dd50:             |                    |  |   0000                  unimp
d000dd52:             |                    |  |   0000                  unimp
d000dd54:             |                    |  |   0000                  unimp
d000dd56:             |                    |  \-> cf8d0537              lui     a0,0xcf8d0
d000dd5a:             |                    |      aab50513              addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
d000dd5e:             \--------------------|----- bfe9                  j       d000dd38 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:63
      HARDENED_UNREACHABLE();
d000dd60:                                  \----> 0000                  unimp
d000dd62:                                         0000                  unimp
d000dd64:                                         0000                  unimp
d000dd66:                                         0000                  unimp

d000dd68 <lifecycle_device_id_get>:
lifecycle_device_id_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:74
      LC_CTRL_LC_STATE_STATE_FIELD);
  return value;
}

void lifecycle_device_id_get(lifecycle_device_id_t *device_id) {
d000dd68:           1101                        addi    sp,sp,-32
d000dd6a:           ce06                        sw      ra,28(sp)
d000dd6c:           cc22                        sw      s0,24(sp)
d000dd6e:           ca26                        sw      s1,20(sp)
d000dd70:           c84a                        sw      s2,16(sp)
d000dd72:           c64e                        sw      s3,12(sp)
d000dd74:           892a                        mv      s2,a0
d000dd76:           4481                        li      s1,0
d000dd78:           c0140537            lui     a0,0xc0140
d000dd7c:           04450413            addi    s0,a0,68 # c0140044 <_stack_end+0xe0120044>
d000dd80:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
  static_assert(
      kLifecycleDeviceIdNumWords == LC_CTRL_PARAM_NUM_DEVICE_ID_WORDS,
      "length of the device_id array does not match the length in hardware");

  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    device_id->device_id[i] = sec_mmio_read32(
d000dd84:       /-> 00848533            add     a0,s1,s0
d000dd88:       |   2055                        jal     d000de2c <sec_mmio_read32>
d000dd8a:       |   009905b3            add     a1,s2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000dd8e:       |   0491                        addi    s1,s1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
    device_id->device_id[i] = sec_mmio_read32(
d000dd90:       |   c188                        sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000dd92:       \-- ff3499e3            bne     s1,s3,d000dd84 <lifecycle_device_id_get+0x1c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:83
        kBase + LC_CTRL_DEVICE_ID_0_REG_OFFSET + i * sizeof(uint32_t));
  }
}
d000dd96:           49b2                        lw      s3,12(sp)
d000dd98:           4942                        lw      s2,16(sp)
d000dd9a:           44d2                        lw      s1,20(sp)
d000dd9c:           4462                        lw      s0,24(sp)
d000dd9e:           40f2                        lw      ra,28(sp)
d000dda0:           6105                        addi    sp,sp,32
d000dda2:           8082                        ret

d000dda4 <lifecycle_hw_rev_get>:
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:85

void lifecycle_hw_rev_get(lifecycle_hw_rev_t *hw_rev) {
d000dda4:       1141                    addi    sp,sp,-16
d000dda6:       c606                    sw      ra,12(sp)
d000dda8:       c422                    sw      s0,8(sp)
d000ddaa:       842a                    mv      s0,a0
d000ddac:       c0140537                lui     a0,0xc0140
d000ddb0:       04050513                addi    a0,a0,64 # c0140040 <_stack_end+0xe0120040>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:86
  uint32_t reg = sec_mmio_read32(kBase + LC_CTRL_HW_REV_REG_OFFSET);
d000ddb4:       28a5                    jal     d000de2c <sec_mmio_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ddb6:       01055593                srli    a1,a0,0x10
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:87
  *hw_rev = (lifecycle_hw_rev_t){
d000ddba:       00b41023                sh      a1,0(s0)
d000ddbe:       00a41123                sh      a0,2(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:91
      .chip_gen = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_GEN_FIELD),
      .chip_rev = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_REV_FIELD),
  };
}
d000ddc2:       4422                    lw      s0,8(sp)
d000ddc4:       40b2                    lw      ra,12(sp)
d000ddc6:       0141                    addi    sp,sp,16
d000ddc8:       8082                    ret

d000ddca <otp_read32>:
otp_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:18
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"
#include "otp_ctrl_regs.h"  // Generated.

enum { kBase = TOP_EARLGREY_OTP_CTRL_CORE_BASE_ADDR };

uint32_t otp_read32(uint32_t address) {
d000ddca:       c01315b7                lui     a1,0xc0131
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:19
  return sec_mmio_read32(kBase + OTP_CTRL_SW_CFG_WINDOW_REG_OFFSET + address);
d000ddce:       952e                    add     a0,a0,a1
d000ddd0:       a8b1                    j       d000de2c <sec_mmio_read32>

d000ddd2 <sec_mmio_init>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ddd2:           4601                        li      a2,0
d000ddd4:           4681                        li      a3,0
d000ddd6:           4701                        li      a4,0
d000ddd8:           4501                        li      a0,0
d000ddda:           0fff2597            auipc   a1,0xfff2
d000ddde:           29a58593            addi    a1,a1,666 # e0000074 <sec_mmio_ctx>
sec_mmio_init():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:53
  // mechanism.
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
}

void sec_mmio_init(void) {
  sec_mmio_ctx.last_index = launder32(0);
d000dde2:           c190                        sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:54
  sec_mmio_ctx.write_count = launder32(0);
d000dde4:           c1d4                        sw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:55
  sec_mmio_ctx.check_count = launder32(0);
d000dde6:           c5d8                        sw      a4,12(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:56
  sec_mmio_ctx.expected_write_count = launder32(0);
d000dde8:           c588                        sw      a0,8(a1)
d000ddea:           3e800613            li      a2,1000
d000ddee:           56fd                        li      a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:58
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
    sec_mmio_ctx.addrs[i] = UINT32_MAX;
d000ddf0:       /-> 7d858713            addi    a4,a1,2008
d000ddf4:       |   7cd72c23            sw      a3,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:59
    sec_mmio_ctx.values[i] = UINT32_MAX;
d000ddf8:       |   c994                        sw      a3,16(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:57
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
d000ddfa:       |   167d                        addi    a2,a2,-1
d000ddfc:       |   0591                        addi    a1,a1,4
d000ddfe:       \-- fa6d                        bnez    a2,d000ddf0 <sec_mmio_init+0x1e>
d000de00:           0fff2597            auipc   a1,0xfff2
d000de04:           27458593            addi    a1,a1,628 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:61
  }
  uint32_t check = kSecMmioValZero ^ sec_mmio_ctx.last_index;
d000de08:           4190                        lw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:62
  check ^= sec_mmio_ctx.write_count;
d000de0a:           41d4                        lw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:63
  check ^= sec_mmio_ctx.check_count;
d000de0c:           45cc                        lw      a1,12(a1)
d000de0e:           8e35                        xor     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:64
  check ^= sec_mmio_ctx.expected_write_count;
d000de10:           8db1                        xor     a1,a1,a2
d000de12:           8d2d                        xor     a0,a0,a1
d000de14:           3ca595b7            lui     a1,0x3ca59
d000de18:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
d000de1c:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:65
  HARDENED_CHECK_EQ(check, kSecMmioValZero);
d000de1e:       /-- 00b50663            beq     a0,a1,d000de2a <sec_mmio_init+0x58>
d000de22:       |   0000                        unimp
d000de24:       |   0000                        unimp
d000de26:       |   0000                        unimp
d000de28:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:66
}
d000de2a:       \-> 8082                        ret

d000de2c <sec_mmio_read32>:
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:78
    sec_mmio_ctx.values[i] = UINT32_MAX;
  }
  HARDENED_CHECK_EQ(sec_mmio_ctx.check_count, 0);
}

uint32_t sec_mmio_read32(uint32_t addr) {
d000de2c:           1101                        addi    sp,sp,-32
d000de2e:           ce06                        sw      ra,28(sp)
d000de30:           cc22                        sw      s0,24(sp)
d000de32:           ca26                        sw      s1,20(sp)
d000de34:           c84a                        sw      s2,16(sp)
d000de36:           c64e                        sw      s3,12(sp)
d000de38:           842a                        mv      s0,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000de3a:           00052903            lw      s2,0(a0)
d000de3e:           21692537            lui     a0,0x21692
d000de42:           43650993            addi    s3,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21652436>
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:80
  uint32_t value = abs_mmio_read32(addr);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000de46:           013944b3            xor     s1,s2,s3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:82
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000de4a:           8522                        mv      a0,s0
d000de4c:           85a6                        mv      a1,s1
d000de4e:           2015                        jal     d000de72 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000de50:           4008                        lw      a0,0(s0)
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:83
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000de52:           01354533            xor     a0,a0,s3
d000de56:       /-- 00950663            beq     a0,s1,d000de62 <sec_mmio_read32+0x36>
d000de5a:       |   0000                        unimp
d000de5c:       |   0000                        unimp
d000de5e:       |   0000                        unimp
d000de60:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:85

  return value;
d000de62:       \-> 854a                        mv      a0,s2
d000de64:           49b2                        lw      s3,12(sp)
d000de66:           4942                        lw      s2,16(sp)
d000de68:           44d2                        lw      s1,20(sp)
d000de6a:           4462                        lw      s0,24(sp)
d000de6c:           40f2                        lw      ra,28(sp)
d000de6e:           6105                        addi    sp,sp,32
d000de70:           8082                        ret

d000de72 <upsert_register>:
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:34
  const size_t last_index = sec_mmio_ctx.last_index;
d000de72:                 0fff2817              auipc   a6,0xfff2
d000de76:                 20280813              addi    a6,a6,514 # e0000074 <sec_mmio_ctx>
d000de7a:                 00082703              lw      a4,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000de7e:                 4781                  li      a5,0
d000de80:                 4681                  li      a3,0
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000de82:       /-------- 02e7f163              bgeu    a5,a4,d000dea4 <upsert_register+0x32>
d000de86:       |         4681                  li      a3,0
d000de88:       |         87c2                  mv      a5,a6
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:37
    if (sec_mmio_ctx.addrs[i] == addr) {
d000de8a:       |  /----> 7d878613              addi    a2,a5,2008
d000de8e:       |  |      7d862603              lw      a2,2008(a2)
d000de92:       |  |  /-- 00a60863              beq     a2,a0,d000dea2 <upsert_register+0x30>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000de96:       |  |  |   0685                  addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000de98:       |  |  |   8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
d000de9a:       |  |  |   0791                  addi    a5,a5,4
d000de9c:       |  \--|-- fee667e3              bltu    a2,a4,d000de8a <upsert_register+0x18>
d000dea0:       +-----|-- a011                  j       d000dea4 <upsert_register+0x32>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:38
      sec_mmio_ctx.values[i] = value;
d000dea2:       |     \-> cb8c                  sw      a1,16(a5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dea4:       \-------> 8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
  if (launder32(i) == last_index && launder32(i) < kSecMmioRegFileSize) {
d000dea6:             /-- 02e61463              bne     a2,a4,d000dece <upsert_register+0x5c>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000deaa:             |   8636                  mv      a2,a3
d000deac:             |   3e700713              li      a4,999
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
d000deb0:             +-- 00c76f63              bltu    a4,a2,d000dece <upsert_register+0x5c>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:43
    sec_mmio_ctx.addrs[i] = addr;
d000deb4:             |   00269613              slli    a2,a3,0x2
d000deb8:             |   9642                  add     a2,a2,a6
d000deba:             |   7d860713              addi    a4,a2,2008
d000debe:             |   7ca72c23              sw      a0,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:44
    sec_mmio_ctx.values[i] = value;
d000dec2:             |   ca0c                  sw      a1,16(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:45
    ++sec_mmio_ctx.last_index;
d000dec4:             |   00082503              lw      a0,0(a6)
d000dec8:             |   0505                  addi    a0,a0,1
d000deca:             |   00a82023              sw      a0,0(a6)
d000dece:             \-> 3e800513              li      a0,1000
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:49
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
d000ded2:             /-- 00a6e663              bltu    a3,a0,d000dede <upsert_register+0x6c>
d000ded6:             |   0000                  unimp
d000ded8:             |   0000                  unimp
d000deda:             |   0000                  unimp
d000dedc:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:50
}
d000dede:             \-> 8082                  ret

d000dee0 <sec_mmio_write32>:
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:88
}

void sec_mmio_write32(uint32_t addr, uint32_t value) {
d000dee0:           1141                        addi    sp,sp,-16
d000dee2:           c606                        sw      ra,12(sp)
d000dee4:           c422                        sw      s0,8(sp)
d000dee6:           c226                        sw      s1,4(sp)
d000dee8:           c04a                        sw      s2,0(sp)
d000deea:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000deec:           c10c                        sw      a1,0(a0)
d000deee:           21692537            lui     a0,0x21692
d000def2:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21652436>
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:90
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000def6:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:92
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000defa:           8522                        mv      a0,s0
d000defc:           85a6                        mv      a1,s1
d000defe:           3f95                        jal     d000de72 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000df00:           4008                        lw      a0,0(s0)
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:93
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000df02:           01254533            xor     a0,a0,s2
d000df06:       /-- 00950663            beq     a0,s1,d000df12 <sec_mmio_write32+0x32>
d000df0a:       |   0000                        unimp
d000df0c:       |   0000                        unimp
d000df0e:       |   0000                        unimp
d000df10:       |   0000                        unimp
d000df12:       \-> 0fff2517            auipc   a0,0xfff2
d000df16:           16250513            addi    a0,a0,354 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:95

  ++sec_mmio_ctx.write_count;
d000df1a:           414c                        lw      a1,4(a0)
d000df1c:           0585                        addi    a1,a1,1
d000df1e:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:96
}
d000df20:           4902                        lw      s2,0(sp)
d000df22:           4492                        lw      s1,4(sp)
d000df24:           4422                        lw      s0,8(sp)
d000df26:           40b2                        lw      ra,12(sp)
d000df28:           0141                        addi    sp,sp,16
d000df2a:           8082                        ret

d000df2c <sec_mmio_write32_shadowed>:
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:98

void sec_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
d000df2c:           1141                        addi    sp,sp,-16
d000df2e:           c606                        sw      ra,12(sp)
d000df30:           c422                        sw      s0,8(sp)
d000df32:           c226                        sw      s1,4(sp)
d000df34:           c04a                        sw      s2,0(sp)
d000df36:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000df38:           c10c                        sw      a1,0(a0)
d000df3a:           c10c                        sw      a1,0(a0)
d000df3c:           21692537            lui     a0,0x21692
d000df40:           43650913            addi    s2,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21652436>
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:102
  // Shadowed registers require two writes.
  abs_mmio_write32(addr, value);
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000df44:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:104
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000df48:           8522                        mv      a0,s0
d000df4a:           85a6                        mv      a1,s1
d000df4c:           371d                        jal     d000de72 <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000df4e:           4008                        lw      a0,0(s0)
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:105
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000df50:           01254533            xor     a0,a0,s2
d000df54:       /-- 00950663            beq     a0,s1,d000df60 <sec_mmio_write32_shadowed+0x34>
d000df58:       |   0000                        unimp
d000df5a:       |   0000                        unimp
d000df5c:       |   0000                        unimp
d000df5e:       |   0000                        unimp
d000df60:       \-> 0fff2517            auipc   a0,0xfff2
d000df64:           11450513            addi    a0,a0,276 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:107

  ++sec_mmio_ctx.write_count;
d000df68:           414c                        lw      a1,4(a0)
d000df6a:           0585                        addi    a1,a1,1
d000df6c:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:108
}
d000df6e:           4902                        lw      s2,0(sp)
d000df70:           4492                        lw      s1,4(sp)
d000df72:           4422                        lw      s0,8(sp)
d000df74:           40b2                        lw      ra,12(sp)
d000df76:           0141                        addi    sp,sp,16
d000df78:           8082                        ret

d000df7a <sec_mmio_check_values>:
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:111

void sec_mmio_check_values(uint32_t rnd_offset) {
  const uint32_t last_index = sec_mmio_ctx.last_index;
d000df7a:                    0fff2817           auipc   a6,0xfff2
d000df7e:                    0fa80813           addi    a6,a6,250 # e0000074 <sec_mmio_ctx>
d000df82:                    00082603           lw      a2,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000df86:                    4701                       li      a4,0
d000df88:                    4681                       li      a3,0
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  // Pick a random starting offset.
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
  enum { kStep = 1 };
  size_t i;
  for (i = 0; launder32(i) < last_index; ++i) {
d000df8a:       /----------- 04c77463           bgeu    a4,a2,d000dfd2 <sec_mmio_check_values+0x58>
d000df8e:       |            4681                       li      a3,0
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:113
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
d000df90:       |            02a63733           mulhu   a4,a2,a0
d000df94:       |            21692537           lui     a0,0x21692
d000df98:       |            43650893           addi    a7,a0,1078 # 21692436 <_rom_ext_virtual_size+0x21652436>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:117
    uint32_t read_value = abs_mmio_read32(sec_mmio_ctx.addrs[offset]);
d000df9c:       |  /-------> 00271793           slli    a5,a4,0x2
d000dfa0:       |  |         97c2                       add     a5,a5,a6
d000dfa2:       |  |         7d878593           addi    a1,a5,2008
d000dfa6:       |  |         7d85a583           lw      a1,2008(a1)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000dfaa:       |  |         418c                       lw      a1,0(a1)
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000dfac:       |  |         4b88                       lw      a0,16(a5)
d000dfae:       |  |         4781                       li      a5,0
d000dfb0:       |  |         0115c5b3           xor     a1,a1,a7
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:120
                      sec_mmio_ctx.values[offset]);
    offset += kStep;
d000dfb4:       |  |         0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000dfb6:       |  |  /----- 00a58663           beq     a1,a0,d000dfc2 <sec_mmio_check_values+0x48>
d000dfba:       |  |  |      0000                       unimp
d000dfbc:       |  |  |      0000                       unimp
d000dfbe:       |  |  |      0000                       unimp
d000dfc0:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000dfc2:       |  |  \--/-X 00c76363           bltu    a4,a2,d000dfc8 <sec_mmio_check_values+0x4e>
d000dfc6:       |  |     |   87b2                       mv      a5,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000dfc8:       |  |     \-> 0685                       addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dfca:       |  |         8536                       mv      a0,a3
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000dfcc:       |  |         8f1d                       sub     a4,a4,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000dfce:       |  \-------- fcc567e3           bltu    a0,a2,d000df9c <sec_mmio_check_values+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:126
      offset -= last_index;
    }
  }
  // Check for loop completion.
  HARDENED_CHECK_EQ(i, last_index);
d000dfd2:       \--------/-X 00c68663           beq     a3,a2,d000dfde <sec_mmio_check_values+0x64>
d000dfd6:                |   0000                       unimp
d000dfd8:                |   0000                       unimp
d000dfda:                |   0000                       unimp
d000dfdc:                |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:127
  ++sec_mmio_ctx.check_count;
d000dfde:                \-> 00c82503           lw      a0,12(a6)
d000dfe2:                    0505                       addi    a0,a0,1
d000dfe4:                    00a82623           sw      a0,12(a6)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:128
}
d000dfe8:                    8082                       ret

d000dfea <sec_mmio_check_counters>:
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:130

void sec_mmio_check_counters(uint32_t expected_check_count) {
d000dfea:           3ca595b7            lui     a1,0x3ca59
d000dfee:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dff2:           862e                        mv      a2,a1
d000dff4:           0fff2697            auipc   a3,0xfff2
d000dff8:           08068693            addi    a3,a3,128 # e0000074 <sec_mmio_ctx>
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000dffc:           42d8                        lw      a4,4(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000dffe:           469c                        lw      a5,8(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000e000:           8e39                        xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000e002:           8e3d                        xor     a2,a2,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:136

  // Check the expected write count. This is equivalent to
  // sec_mmio_ctx.write_count == sec_mmio_ctx.expected_write_count
  HARDENED_CHECK_EQ(result, kSecMmioValZero);
d000e004:       /-- 00b60663            beq     a2,a1,d000e010 <sec_mmio_check_counters+0x26>
d000e008:       |   0000                        unimp
d000e00a:       |   0000                        unimp
d000e00c:       |   0000                        unimp
d000e00e:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:141

  // Check the expected check counts. This is equivalent to
  // sec_mmio_ctx.check_count == expected_check_count. This check is expected to
  // fail if the previous check failed.
  result ^= sec_mmio_ctx.check_count;
d000e010:       \-> 46cc                        lw      a1,12(a3)
d000e012:           8d31                        xor     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:142
  result ^= expected_check_count;
d000e014:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:143
  HARDENED_CHECK_EQ(~launder32(result), kSecMmioValOne);
d000e016:           fff54513            not     a0,a0
d000e01a:           c35a75b7            lui     a1,0xc35a7
d000e01e:           9a558593            addi    a1,a1,-1627 # c35a69a5 <_stack_end+0xe35869a5>
d000e022:       /-- 00b50663            beq     a0,a1,d000e02e <sec_mmio_check_counters+0x44>
d000e026:       |   0000                        unimp
d000e028:       |   0000                        unimp
d000e02a:       |   0000                        unimp
d000e02c:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:145

  ++sec_mmio_ctx.check_count;
d000e02e:       \-> 46c8                        lw      a0,12(a3)
d000e030:           0505                        addi    a0,a0,1
d000e032:           c6c8                        sw      a0,12(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:146
}
d000e034:           8082                        ret

d000e036 <memcpy>:
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:61
  return byte << 24 | byte << 16 | byte << 8 | byte;
}

void *OT_PREFIX_IF_NOT_RV32(memcpy)(void *restrict dest,
                                    const void *restrict src, size_t len) {
  if (dest == NULL || src == NULL) {
d000e036:                       00153693                seqz    a3,a0
d000e03a:                       0015b713                seqz    a4,a1
d000e03e:                       8ed9                    or      a3,a3,a4
d000e040:       /-------------- eab5                    bnez    a3,d000e0b4 <memcpy+0x7e>
d000e042:       |               4711                    li      a4,4
d000e044:       |               86b2                    mv      a3,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e046:       |        /----- 00e66c63                bltu    a2,a4,d000e05e <memcpy+0x28>
d000e04a:       |        |      00a5c6b3                xor     a3,a1,a0
d000e04e:       |        |      0036f793                andi    a5,a3,3
d000e052:       |        |      8832                    mv      a6,a2
d000e054:       |        |      86b2                    mv      a3,a2
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000e056:       |        |  /-- eb91                    bnez    a5,d000e06a <memcpy+0x34>
d000e058:       |        |  |   40a006b3                neg     a3,a0
d000e05c:       |        |  |   8a8d                    andi    a3,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e05e:       |        \--|-> 40d60733                sub     a4,a2,a3
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e062:       |           |   9b71                    andi    a4,a4,-4
d000e064:       |           |   00d70833                add     a6,a4,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:69
  unsigned char *dest8 = (unsigned char *)dest;
  const unsigned char *src8 = (const unsigned char *)src;
  size_t body_offset, tail_offset;
  compute_alignment(dest, src, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e068:       |  /--------|-- c6b9                    beqz    a3,d000e0b6 <memcpy+0x80>
d000e06a:       |  |        \-> 4781                    li      a5,0
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000e06c:       |  |        /-> 00f58733                add     a4,a1,a5
d000e070:       |  |        |   00070883                lb      a7,0(a4)
d000e074:       |  |        |   00f50733                add     a4,a0,a5
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000e078:       |  |        |   0785                    addi    a5,a5,1
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000e07a:       |  |        |   01170023                sb      a7,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000e07e:       |  |        \-- fef697e3                bne     a3,a5,d000e06c <memcpy+0x36>
/proc/self/cwd/sw/device/lib/base/memory.c:72
  }
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e082:       |  |  /-------- 0106fb63                bgeu    a3,a6,d000e098 <memcpy+0x62>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e086:       |  |  |  /----> 00d58733                add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e08a:       |  |  |  |      4318                    lw      a4,0(a4)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e08c:       |  |  |  |      00d507b3                add     a5,a0,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000e090:       |  |  |  |      0691                    addi    a3,a3,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000e092:       |  |  |  |      c398                    sw      a4,0(a5)
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000e094:       |  |  |  +----- ff06e9e3                bltu    a3,a6,d000e086 <memcpy+0x50>
d000e098:       +--|-->--|----X 00c6fe63                bgeu    a3,a2,d000e0b4 <memcpy+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:76
    uint32_t word = read_32(&src8[i]);
    write_32(word, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e09c:       |  |  |  |      8e15                    sub     a2,a2,a3
d000e09e:       |  |  |  |      00d50733                add     a4,a0,a3
d000e0a2:       |  |  |  |      95b6                    add     a1,a1,a3
/proc/self/cwd/sw/device/lib/base/memory.c:77
    dest8[i] = src8[i];
d000e0a4:       |  |  |  |  /-> 00058683                lb      a3,0(a1)
d000e0a8:       |  |  |  |  |   00d70023                sb      a3,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:76
  for (; i < len; ++i) {
d000e0ac:       |  |  |  |  |   167d                    addi    a2,a2,-1
d000e0ae:       |  |  |  |  |   0705                    addi    a4,a4,1
d000e0b0:       |  |  |  |  |   0585                    addi    a1,a1,1
d000e0b2:       |  |  |  |  \-- fa6d                    bnez    a2,d000e0a4 <memcpy+0x6e>
/proc/self/cwd/sw/device/lib/base/memory.c:80
  }
  return dest;
}
d000e0b4:       \--|--|--|----> 8082                    ret
d000e0b6:          \--|--|----> 4681                    li      a3,0
/proc/self/cwd/sw/device/lib/base/memory.c:72
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e0b8:             |  \----- fd06e7e3                bltu    a3,a6,d000e086 <memcpy+0x50>
d000e0bc:             \-------- bff1                    j       d000e098 <memcpy+0x62>

d000e0be <memset>:
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:82

void *OT_PREFIX_IF_NOT_RV32(memset)(void *dest, int value, size_t len) {
d000e0be:                 4691                  li      a3,4
d000e0c0:                 8732                  mv      a4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e0c2:             /-- 00d66663              bltu    a2,a3,d000e0ce <memset+0x10>
d000e0c6:             |   40a006b3              neg     a3,a0
d000e0ca:             |   0036f713              andi    a4,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e0ce:             \-> 40e606b3              sub     a3,a2,a4
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e0d2:                 ffc6f813              andi    a6,a3,-4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:89
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(dest, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e0d6:          /----- cb01                  beqz    a4,d000e0e6 <memset+0x28>
d000e0d8:          |      87aa                  mv      a5,a0
d000e0da:          |      86ba                  mv      a3,a4
/proc/self/cwd/sw/device/lib/base/memory.c:90
    dest8[i] = value8;
d000e0dc:          |  /-> 00b78023              sb      a1,0(a5)
/proc/self/cwd/sw/device/lib/base/memory.c:89
  for (; i < body_offset; ++i) {
d000e0e0:          |  |   16fd                  addi    a3,a3,-1
d000e0e2:          |  |   0785                  addi    a5,a5,1
d000e0e4:          |  \-- fee5                  bnez    a3,d000e0dc <memset+0x1e>
/proc/self/cwd/sw/device/lib/base/memory.c:93
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e0e6:       /--\----X 02080263              beqz    a6,d000e10a <memset+0x4c>
d000e0ea:       |         00e808b3              add     a7,a6,a4
d000e0ee:       |         0ff5f813              andi    a6,a1,255
d000e0f2:       |         010107b7              lui     a5,0x1010
d000e0f6:       |         10178793              addi    a5,a5,257 # 1010101 <_rom_ext_virtual_size+0xfd0101>
d000e0fa:       |         02f807b3              mul     a5,a6,a5
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e0fe:       |     /-> 00e506b3              add     a3,a0,a4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e102:       |     |   0711                  addi    a4,a4,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000e104:       |     |   c29c                  sw      a5,0(a3)
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e106:       |     \-- ff176ce3              bltu    a4,a7,d000e0fe <memset+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:96
    write_32(value32, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e10a:       \--/----X 00c77a63              bgeu    a4,a2,d000e11e <memset+0x60>
d000e10e:          |      8e19                  sub     a2,a2,a4
d000e110:          |      00e506b3              add     a3,a0,a4
/proc/self/cwd/sw/device/lib/base/memory.c:97
    dest8[i] = value8;
d000e114:          |  /-> 00b68023              sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/base/memory.c:96
  for (; i < len; ++i) {
d000e118:          |  |   167d                  addi    a2,a2,-1
d000e11a:          |  |   0685                  addi    a3,a3,1
d000e11c:          |  \-- fe65                  bnez    a2,d000e114 <memset+0x56>
/proc/self/cwd/sw/device/lib/base/memory.c:99
  }
  return dest;
d000e11e:          \----> 8082                  ret

d000e120 <memrcmp>:
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:143
    }
  }
  return kMemCmpEq;
}

int memrcmp(const void *lhs, const void *rhs, size_t len) {
d000e120:                    4691                       li      a3,4
d000e122:                    8832                       mv      a6,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e124:             /----- 02d66163           bltu    a2,a3,d000e146 <memrcmp+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000e128:             |      0015b693           seqz    a3,a1
d000e12c:             |      00a5c733           xor     a4,a1,a0
d000e130:             |      8b0d                       andi    a4,a4,3
d000e132:             |      00173713           seqz    a4,a4
d000e136:             |      8ed9                       or      a3,a3,a4
d000e138:             |  /-- e299                       bnez    a3,d000e13e <memrcmp+0x1e>
d000e13a:             |  |   8832                       mv      a6,a2
d000e13c:             +--|-- a029                       j       d000e146 <memrcmp+0x26>
d000e13e:             |  \-> 40a006b3           neg     a3,a0
d000e142:             |      0036f813           andi    a6,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e146:             \----> 410606b3           sub     a3,a2,a6
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e14a:                    9af1                       andi    a3,a3,-4
d000e14c:                    01068333           add     t1,a3,a6
d000e150:                    86b2                       mv      a3,a2
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:149
  const unsigned char *lhs8 = (const unsigned char *)lhs;
  const unsigned char *rhs8 = (const unsigned char *)rhs;
  size_t body_offset, tail_offset;
  compute_alignment(lhs, rhs, len, &body_offset, &tail_offset);
  size_t end = len;
  for (; end > tail_offset; --end) {
d000e152:                /-- 00666363           bltu    a2,t1,d000e158 <memrcmp+0x38>
d000e156:                |   869a                       mv      a3,t1
d000e158:                \-> fff58893           addi    a7,a1,-1
d000e15c:                    fff50293           addi    t0,a0,-1
d000e160:             /--/-X 02c37063           bgeu    t1,a2,d000e180 <memrcmp+0x60>
/proc/self/cwd/sw/device/lib/base/memory.c:151
    const size_t i = end - 1;
    if (lhs8[i] < rhs8[i]) {
d000e164:             |  |   00c28733           add     a4,t0,a2
d000e168:             |  |   00074703           lbu     a4,0(a4)
d000e16c:             |  |   00c887b3           add     a5,a7,a2
d000e170:             |  |   0007c783           lbu     a5,0(a5)
d000e174:       /-----|--|-- 04f76863           bltu    a4,a5,d000e1c4 <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:150
    const size_t i = end - 1;
d000e178:       |     |  |   167d                       addi    a2,a2,-1
d000e17a:       |     |  \-- fee7f3e3           bgeu    a5,a4,d000e160 <memrcmp+0x40>
d000e17e:       |  /--|----- a005                       j       d000e19e <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:157
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e180:       |  |  \----> 15f1                       addi    a1,a1,-4
d000e182:       |  |         1571                       addi    a0,a0,-4
d000e184:       |  |  /--/-X 02d87d63           bgeu    a6,a3,d000e1be <memrcmp+0x9e>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e188:       |  |  |  |   00d50633           add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e18c:       |  |  |  |   4210                       lw      a2,0(a2)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e18e:       |  |  |  |   00d58733           add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e192:       |  |  |  |   4318                       lw      a4,0(a4)
d000e194:       +--|--|--|-- 02e66863           bltu    a2,a4,d000e1c4 <memrcmp+0xa4>
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:158
    const size_t i = end - sizeof(uint32_t);
d000e198:       |  |  |  |   16f1                       addi    a3,a3,-4
d000e19a:       |  |  |  \-- fec775e3           bgeu    a4,a2,d000e184 <memrcmp+0x64>
d000e19e:       |  >--|----> 02a00513           li      a0,42
/proc/self/cwd/sw/device/lib/base/memory.c:178
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
d000e1a2:       |  |  |      8082                       ret
/proc/self/cwd/sw/device/lib/base/memory.c:171
    if (lhs8[i] < rhs8[i]) {
d000e1a4:       |  |  |  /-> 00d28533           add     a0,t0,a3
d000e1a8:       |  |  |  |   00054503           lbu     a0,0(a0)
d000e1ac:       |  |  |  |   00d885b3           add     a1,a7,a3
d000e1b0:       |  |  |  |   0005c583           lbu     a1,0(a1)
d000e1b4:       +--|--|--|-- 00b56863           bltu    a0,a1,d000e1c4 <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:170
    const size_t i = end - 1;
d000e1b8:       |  |  |  |   16fd                       addi    a3,a3,-1
d000e1ba:       |  \--|--|-- fea5e2e3           bltu    a1,a0,d000e19e <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:169
  for (; end > 0; --end) {
d000e1be:       |     \--\-X f2fd                       bnez    a3,d000e1a4 <memrcmp+0x84>
d000e1c0:       |            4501                       li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:178
}
d000e1c2:       |            8082                       ret
d000e1c4:       \----------> fd600513           li      a0,-42
d000e1c8:                    8082                       ret

d000e1ca <memchr>:
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:180

void *OT_PREFIX_IF_NOT_RV32(memchr)(const void *ptr, int value, size_t len) {
d000e1ca:                             4691                      li      a3,4
d000e1cc:                             8eb2                      mv      t4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e1ce:                         /-- 00d66663                  bltu    a2,a3,d000e1da <memchr+0x10>
d000e1d2:                         |   40a006b3                  neg     a3,a0
d000e1d6:                         |   0036fe93                  andi    t4,a3,3
d000e1da:                         \-> 0ff5fe13                  andi    t3,a1,255
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:187
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e1de:                      /----- 000e8b63                  beqz    t4,d000e1f4 <memchr+0x2a>
d000e1e2:                      |      85aa                      mv      a1,a0
d000e1e4:                      |      87f6                      mv      a5,t4
/proc/self/cwd/sw/device/lib/base/memory.c:188
    if (ptr8[i] == value8) {
d000e1e6:                      |  /-> 0005c683                  lbu     a3,0(a1)
d000e1ea:       /--------------|--|-- 09c68563                  beq     a3,t3,d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:187
  for (; i < body_offset; ++i) {
d000e1ee:       |              |  |   17fd                      addi    a5,a5,-1
d000e1f0:       |              |  |   0585                      addi    a1,a1,1
d000e1f2:       |              |  \-- fbf5                      bnez    a5,d000e1e6 <memchr+0x1c>
d000e1f4:       |              \----> 41d605b3                  sub     a1,a2,t4
d000e1f8:       |                     99f1                      andi    a1,a1,-4
/proc/self/cwd/sw/device/lib/base/memory.c:193
      return (void *)&ptr8[i];
    }
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e1fa:       |  /----------------- c9a9                      beqz    a1,d000e24c <memchr+0x82>
d000e1fc:       |  |                  01d58833                  add     a6,a1,t4
d000e200:       |  |                  010105b7                  lui     a1,0x1010
d000e204:       |  |                  10158593                  addi    a1,a1,257 # 1010101 <_rom_ext_virtual_size+0xfd0101>
d000e208:       |  |                  02be02b3                  mul     t0,t3,a1
d000e20c:       |  |                  0ff00893                  li      a7,255
d000e210:       |  |                  65c1                      lui     a1,0x10
d000e212:       |  |                  f0058393                  addi    t2,a1,-256 # ff00 <_stack_size+0xbf00>
d000e216:       |  |                  00ff0337                  lui     t1,0xff0
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e21a:       |  |              /-> 01d505b3                  add     a1,a0,t4
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e21e:       |  |              |   4194                      lw      a3,0(a1)
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:195
    uint32_t word = read_32(&ptr8[i]);
    uint32_t bits_eq = ~(word ^ value32);
d000e220:       |  |              |   0056c7b3                  xor     a5,a3,t0
d000e224:       |  |              |   fff7c693                  not     a3,a5
/proc/self/cwd/sw/device/lib/base/memory.c:198
    static_assert(__BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__,
                  "memchr assumes that the system is little endian.");
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e228:       |  |              |   0ff6f713                  andi    a4,a3,255
d000e22c:       +--|--------------|-- 05170463                  beq     a4,a7,d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:201
      return (void *)&ptr8[i];
    }
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e230:       |  |              |   0076f733                  and     a4,a3,t2
d000e234:       |  |  /-----------|-- 02770b63                  beq     a4,t2,d000e26a <memchr+0xa0>
/proc/self/cwd/sw/device/lib/base/memory.c:204
      return (void *)&ptr8[i + 1];
    }
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e238:       |  |  |           |   0066f6b3                  and     a3,a3,t1
d000e23c:       |  |  |  /--------|-- 02668963                  beq     a3,t1,d000e26e <memchr+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:207
      return (void *)&ptr8[i + 2];
    }
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e240:       |  |  |  |        |   0187d693                  srli    a3,a5,0x18
d000e244:       |  |  |  |  /-----|-- c69d                      beqz    a3,d000e272 <memchr+0xa8>
/proc/self/cwd/sw/device/lib/base/memory.c:193
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e246:       |  |  |  |  |     |   0e91                      addi    t4,t4,4
d000e248:       |  |  |  |  |     \-- fd0ee9e3                  bltu    t4,a6,d000e21a <memchr+0x50>
/proc/self/cwd/sw/device/lib/base/memory.c:211
      return (void *)&ptr8[i + 3];
    }
  }
  for (; i < len; ++i) {
d000e24c:       |  \--|--|--|--/----X 00cefd63                  bgeu    t4,a2,d000e266 <memchr+0x9c>
d000e250:       |     |  |  |  |      41d60633                  sub     a2,a2,t4
d000e254:       |     |  |  |  |      01d505b3                  add     a1,a0,t4
/proc/self/cwd/sw/device/lib/base/memory.c:212
    if (ptr8[i] == value8) {
d000e258:       |     |  |  |  |  /-> 0005c503                  lbu     a0,0(a1)
d000e25c:       +-----|--|--|--|--|-- 01c50c63                  beq     a0,t3,d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:211
  for (; i < len; ++i) {
d000e260:       |     |  |  |  |  |   167d                      addi    a2,a2,-1
d000e262:       |     |  |  |  |  |   0585                      addi    a1,a1,1
d000e264:       |     |  |  |  |  \-- fa75                      bnez    a2,d000e258 <memchr+0x8e>
d000e266:       |     |  |  |  \----> 4581                      li      a1,0
d000e268:       +-----|--|--|-------- a031                      j       d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:202
      return (void *)&ptr8[i + 1];
d000e26a:       |     \--|--|-------> 0585                      addi    a1,a1,1
d000e26c:       +--------|--|-------- a021                      j       d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:205
      return (void *)&ptr8[i + 2];
d000e26e:       |        \--|-------> 0589                      addi    a1,a1,2
d000e270:       +-----------|-------- a011                      j       d000e274 <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:208
      return (void *)&ptr8[i + 3];
d000e272:       |           \-------> 058d                      addi    a1,a1,3
/proc/self/cwd/sw/device/lib/base/memory.c:217
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e274:       \-------------------> 852e                      mv      a0,a1
d000e276:                             8082                      ret

d000e278 <memrchr>:
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:219

void *OT_PREFIX_IF_NOT_RV32(memrchr)(const void *ptr, int value, size_t len) {
d000e278:                          4691                 li      a3,4
d000e27a:                          8332                 mv      t1,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e27c:                      /-- 00d66663             bltu    a2,a3,d000e288 <memrchr+0x10>
d000e280:                      |   40a006b3             neg     a3,a0
d000e284:                      |   0036f313             andi    t1,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e288:                      \-> 406606b3             sub     a3,a2,t1
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e28c:                          9af1                 andi    a3,a3,-4
d000e28e:                          006687b3             add     a5,a3,t1
d000e292:                          86b2                 mv      a3,a2
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:227

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);

  size_t end = len;
  for (; end > tail_offset; --end) {
d000e294:                      /-- 00f66363             bltu    a2,a5,d000e29a <memrchr+0x22>
d000e298:                      |   86be                 mv      a3,a5
d000e29a:                      \-> 0ff5f393             andi    t2,a1,255
d000e29e:                   /--/-X 00c7fd63             bgeu    a5,a2,d000e2b8 <memrchr+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:229
    const size_t i = end - 1;
    if (ptr8[i] == value8) {
d000e2a2:                   |  |   00c50733             add     a4,a0,a2
d000e2a6:                   |  |   fff74583             lbu     a1,-1(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:228
    const size_t i = end - 1;
d000e2aa:                   |  |   fff60713             addi    a4,a2,-1
d000e2ae:                   |  |   863a                 mv      a2,a4
d000e2b0:                   |  \-- fe7597e3             bne     a1,t2,d000e29e <memrchr+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:260
    if (ptr8[i] == value8) {
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e2b4:                   |      953a                 add     a0,a0,a4
d000e2b6:                   |      8082                 ret
d000e2b8:                   \----> 010105b7             lui     a1,0x1010
d000e2bc:                          10158593             addi    a1,a1,257 # 1010101 <_rom_ext_virtual_size+0xfd0101>
repeat_byte_to_u32():
/proc/self/cwd/sw/device/lib/base/memory.c:56
  return byte << 24 | byte << 16 | byte << 8 | byte;
d000e2c0:                          02b382b3             mul     t0,t2,a1
d000e2c4:                          00ff0837             lui     a6,0xff0
d000e2c8:                          65c1                 lui     a1,0x10
d000e2ca:                          f0058793             addi    a5,a1,-256 # ff00 <_stack_size+0xbf00>
d000e2ce:                          0ff00893             li      a7,255
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:234
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e2d2:       /--------------/-X 04d37563             bgeu    t1,a3,d000e31c <memrchr+0xa4>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e2d6:       |              |   00d50633             add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e2da:       |              |   ffc62583             lw      a1,-4(a2)
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:237
    uint32_t bits_eq = ~(word ^ value32);
d000e2de:       |              |   0055c733             xor     a4,a1,t0
/proc/self/cwd/sw/device/lib/base/memory.c:240
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e2e2:       |              |   01875593             srli    a1,a4,0x18
d000e2e6:       |  /-----------|-- cd95                 beqz    a1,d000e322 <memrchr+0xaa>
d000e2e8:       |  |           |   fff74713             not     a4,a4
/proc/self/cwd/sw/device/lib/base/memory.c:243
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e2ec:       |  |           |   010775b3             and     a1,a4,a6
d000e2f0:       |  |  /--------|-- 03058c63             beq     a1,a6,d000e328 <memrchr+0xb0>
/proc/self/cwd/sw/device/lib/base/memory.c:246
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e2f4:       |  |  |        |   00f775b3             and     a1,a4,a5
d000e2f8:       |  |  |  /-----|-- 02f58b63             beq     a1,a5,d000e32e <memrchr+0xb6>
/proc/self/cwd/sw/device/lib/base/memory.c:249
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e2fc:       |  |  |  |     |   0ff77593             andi    a1,a4,255
/proc/self/cwd/sw/device/lib/base/memory.c:235
    const size_t i = end - sizeof(uint32_t);
d000e300:       |  |  |  |     |   16f1                 addi    a3,a3,-4
d000e302:       |  |  |  |     \-- fd1598e3             bne     a1,a7,d000e2d2 <memrchr+0x5a>
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e306:       |  |  |  |         9536                 add     a0,a0,a3
d000e308:       |  |  |  |         8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:255
    if (ptr8[i] == value8) {
d000e30a:       |  |  |  |     /-> 00d505b3             add     a1,a0,a3
d000e30e:       |  |  |  |     |   fff5c583             lbu     a1,-1(a1)
/proc/self/cwd/sw/device/lib/base/memory.c:254
    const size_t i = end - 1;
d000e312:       |  |  |  |     |   fff68613             addi    a2,a3,-1
d000e316:       |  |  |  |     |   86b2                 mv      a3,a2
d000e318:       |  |  |  |  /--|-- 00758e63             beq     a1,t2,d000e334 <memrchr+0xbc>
/proc/self/cwd/sw/device/lib/base/memory.c:253
  for (; end > 0; --end) {
d000e31c:       \--|--|--|--|--\-X f6fd                 bnez    a3,d000e30a <memrchr+0x92>
d000e31e:          |  |  |  |      4501                 li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e320:          |  |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:241
      return (void *)&ptr8[i + 3];
d000e322:          \--|--|--|----> fff60513             addi    a0,a2,-1
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e326:             |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:244
      return (void *)&ptr8[i + 2];
d000e328:             \--|--|----> ffe60513             addi    a0,a2,-2
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e32c:                |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:247
      return (void *)&ptr8[i + 1];
d000e32e:                \--|----> ffd60513             addi    a0,a2,-3
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e332:                   |      8082                 ret
d000e334:                   \----> 9532                 add     a0,a0,a2
d000e336:                          8082                 ret

d000e338 <device_fpga_version_print>:
device_fpga_version_print():
/proc/self/cwd/sw/device/lib/arch/device_sim_verilator.c:57

const uintptr_t kDeviceLogBypassUartAddress = 0;

const bool kJitterEnabled = false;

void device_fpga_version_print(void) {}
d000e338:       8082                    ret
d000e33a:       0000                    unimp

Disassembly of section .shutdown:

d000e33c <shutdown_finalize>:
shutdown_finalize():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:504
 * The shutdown_finalize function goes into the .shutdown section which is
 * placed by the linker script after all other executable code.
 */
__attribute__((section(".shutdown")))
#endif
void shutdown_finalize(rom_error_t reason) {
d000e33c:                       c01405b7                lui     a1,0xc0140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e340:                       59cc                    lw      a1,52(a1)
d000e342:                       40000637                lui     a2,0x40000
d000e346:                       167d                    addi    a2,a2,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e348:                       00c5feb3                and     t4,a1,a2
d000e34c:                       e2291637                lui     a2,0xe2291
d000e350:                       1ad6b6b7                lui     a3,0x1ad6b
d000e354:                       5ac68693                addi    a3,a3,1452 # 1ad6b5ac <_rom_ext_virtual_size+0x1ad2b5ac>
d000e358:                       aa560613                addi    a2,a2,-1371 # e2290aa5 <_stack_end+0x2270aa5>
shutdown_redact_policy_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:270
  switch (raw_state) {
d000e35c:                   /-- 03d6cb63                blt     a3,t4,d000e392 <shutdown_finalize+0x56>
d000e360:                   |   0e73a6b7                lui     a3,0xe73a
d000e364:                   |   ce668713                addi    a4,a3,-794 # e739ce6 <_rom_ext_virtual_size+0xe6f9ce6>
d000e368:             /-----|-- 05d74e63                blt     a4,t4,d000e3c4 <shutdown_finalize+0x88>
d000e36c:             |     |   021086b7                lui     a3,0x2108
d000e370:             |     |   42168693                addi    a3,a3,1057 # 2108421 <_rom_ext_virtual_size+0x20c8421>
d000e374:       /-----|-----|-- 0ade8263                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e378:       |     |     |   063196b7                lui     a3,0x6319
d000e37c:       |     |     |   c6368693                addi    a3,a3,-925 # 6318c63 <_rom_ext_virtual_size+0x62d8c63>
d000e380:       +-----|-----|-- 08de8c63                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e384:       |     |     |   0a5296b7                lui     a3,0xa529
d000e388:       |     |     |   4a568693                addi    a3,a3,1189 # a5294a5 <_rom_ext_virtual_size+0xa4e94a5>
d000e38c:       +-----|-----|-- 08de8663                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e390:       |  /--|-----|-- a041                    j       d000e410 <shutdown_finalize+0xd4>
d000e392:       |  |  |     \-> 2318c6b7                lui     a3,0x2318c
d000e396:       |  |  |         63068713                addi    a4,a3,1584 # 2318c630 <_rom_ext_virtual_size+0x2314c630>
d000e39a:       |  |  |  /----- 05d74663                blt     a4,t4,d000e3e6 <shutdown_finalize+0xaa>
d000e39e:       |  |  |  |      1ad6b6b7                lui     a3,0x1ad6b
d000e3a2:       |  |  |  |      5ad68693                addi    a3,a3,1453 # 1ad6b5ad <_rom_ext_virtual_size+0x1ad2b5ad>
d000e3a6:       +--|--|--|----- 06de8963                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3aa:       |  |  |  |      1ef7c6b7                lui     a3,0x1ef7c
d000e3ae:       |  |  |  |      def68693                addi    a3,a3,-529 # 1ef7bdef <_rom_ext_virtual_size+0x1ef3bdef>
d000e3b2:       +--|--|--|----- 06de8363                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3b6:       |  |  |  |      21084637                lui     a2,0x21084
d000e3ba:       |  |  |  |      21060613                addi    a2,a2,528 # 21084210 <_rom_ext_virtual_size+0x21044210>
d000e3be:       |  |  |  |  /-- 04ce8463                beq     t4,a2,d000e406 <shutdown_finalize+0xca>
d000e3c2:       |  +--|--|--|-- a0b9                    j       d000e410 <shutdown_finalize+0xd4>
d000e3c4:       |  |  \--|--|-> ce768693                addi    a3,a3,-793
d000e3c8:       +--|-----|--|-- 04de8863                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3cc:       |  |     |  |   1294a6b7                lui     a3,0x1294a
d000e3d0:       |  |     |  |   52968693                addi    a3,a3,1321 # 1294a529 <_rom_ext_virtual_size+0x1290a529>
d000e3d4:       +--|-----|--|-- 04de8263                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3d8:       |  |     |  |   16b5b6b7                lui     a3,0x16b5b
d000e3dc:       |  |     |  |   d6b68693                addi    a3,a3,-661 # 16b5ad6b <_rom_ext_virtual_size+0x16b1ad6b>
d000e3e0:       +--|-----|--|-- 02de8c63                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3e4:       |  +-----|--|-- a035                    j       d000e410 <shutdown_finalize+0xd4>
d000e3e6:       |  |     \--|-> 63168693                addi    a3,a3,1585
d000e3ea:       |  |        +-- 00de8e63                beq     t4,a3,d000e406 <shutdown_finalize+0xca>
d000e3ee:       |  |        |   2739d6b7                lui     a3,0x2739d
d000e3f2:       |  |        |   e7368693                addi    a3,a3,-397 # 2739ce73 <_rom_ext_virtual_size+0x2735ce73>
d000e3f6:       +--|--------|-- 02de8163                beq     t4,a3,d000e418 <shutdown_finalize+0xdc>
d000e3fa:       |  |        |   25295637                lui     a2,0x25295
d000e3fe:       |  |        |   a5260613                addi    a2,a2,-1454 # 25294a52 <_rom_ext_virtual_size+0x25254a52>
d000e402:       |  +--------|-- 00ce9763                bne     t4,a2,d000e410 <shutdown_finalize+0xd4>
d000e406:       |  |        \-> c0131637                lui     a2,0xc0131
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e40a:       |  |            36062603                lw      a2,864(a2) # c0131360 <_stack_end+0xe0111360>
d000e40e:       +--|----------- a029                    j       d000e418 <shutdown_finalize+0xdc>
d000e410:       |  \----------> 48eb5637                lui     a2,0x48eb5
d000e414:       |               bd960613                addi    a2,a2,-1063 # 48eb4bd9 <_epmp_stack_guard_na4+0x10eadbd9>
d000e418:       \-------------> 73900693                li      a3,1849
shutdown_redact_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:238
  if (reason == kErrorOk) {
d000e41c:                   /-- 00d51463                bne     a0,a3,d000e424 <shutdown_finalize+0xe8>
d000e420:                   |   4501                    li      a0,0
d000e422:             /-----|-- a835                    j       d000e45e <shutdown_finalize+0x122>
d000e424:             |     \-> e22916b7                lui     a3,0xe2291
d000e428:             |         aa568693                addi    a3,a3,-1371 # e2290aa5 <_stack_end+0x2270aa5>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:241
  switch (severity) {
d000e42c:             +-------- 02d60963                beq     a2,a3,d000e45e <shutdown_finalize+0x122>
d000e430:             |         3367d6b7                lui     a3,0x3367d
d000e434:             |         3d468693                addi    a3,a3,980 # 3367d3d4 <_rom_ext_virtual_size+0x3363d3d4>
d000e438:             |  /----- 00d60d63                beq     a2,a3,d000e452 <shutdown_finalize+0x116>
d000e43c:             |  |      1e7916b7                lui     a3,0x1e791
d000e440:             |  |      12368693                addi    a3,a3,291 # 1e791123 <_rom_ext_virtual_size+0x1e751123>
d000e444:             |  |  /-- 00d61c63                bne     a2,a3,d000e45c <shutdown_finalize+0x120>
d000e448:             |  |  |   ff000637                lui     a2,0xff000
d000e44c:             |  |  |   0ff60613                addi    a2,a2,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000e450:             |  |  |   8d71                    and     a0,a0,a2
d000e452:             |  \--|-> 01000637                lui     a2,0x1000
d000e456:             |     |   167d                    addi    a2,a2,-1
d000e458:             |     |   8d71                    and     a0,a0,a2
d000e45a:             +-----|-- a011                    j       d000e45e <shutdown_finalize+0x122>
d000e45c:             |     \-> 557d                    li      a0,-1
d000e45e:             \-------> c00006b7                lui     a3,0xc0000
d000e462:                       4609                    li      a2,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e464:                       d290                    sw      a2,32(a3)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e466:                       4a90                    lw      a2,16(a3)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000e468:                       00166613                ori     a2,a2,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e46c:                       ca90                    sw      a2,16(a3)
d000e46e:                       3a564837                lui     a6,0x3a564
d000e472:                       64280613                addi    a2,a6,1602 # 3a564642 <_epmp_stack_guard_na4+0x255d642>
d000e476:                       ced0                    sw      a2,28(a3)
d000e478:                       003a58b7                lui     a7,0x3a5
d000e47c:                       64688613                addi    a2,a7,1606 # 3a5646 <_rom_ext_virtual_size+0x365646>
d000e480:                       ced0                    sw      a2,28(a3)
d000e482:                       6611                    lui     a2,0x4
d000e484:                       a5660393                addi    t2,a2,-1450 # 3a56 <_static_critical_size+0x1a92>
d000e488:                       0076ae23                sw      t2,28(a3) # c000001c <_stack_end+0xdffe001c>
d000e48c:                       03a00293                li      t0,58
d000e490:                       0056ae23                sw      t0,28(a3)
d000e494:                       4e21                    li      t3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e496:                       4721                    li      a4,8
d000e498:                       00000617                auipc   a2,0x0
d000e49c:                       43860613                addi    a2,a2,1080 # d000e8d0 <kSpiDeviceSfdpTable+0x7c>
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e4a0:                /----- cf19                    beqz    a4,d000e4be <shutdown_finalize+0x182>
d000e4a2:                |      4781                    li      a5,0
d000e4a4:                |      4771                    li      a4,28
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000e4a6:                |  /-> 00e555b3                srl     a1,a0,a4
d000e4aa:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e4ac:                |  |   95b2                    add     a1,a1,a2
d000e4ae:                |  |   0005c583                lbu     a1,0(a1) # c0140000 <_stack_end+0xe0120000>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e4b2:                |  |   cecc                    sw      a1,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e4b4:                |  |   0785                    addi    a5,a5,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e4b6:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e4b8:                |  |   1771                    addi    a4,a4,-4
d000e4ba:                |  \-- feb7e6e3                bltu    a5,a1,d000e4a6 <shutdown_finalize+0x16a>
d000e4be:                \----> 4335                    li      t1,13
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e4c0:                       0066ae23                sw      t1,28(a3)
d000e4c4:                       4529                    li      a0,10
d000e4c6:                       cec8                    sw      a0,28(a3)
d000e4c8:                       34c80593                addi    a1,a6,844
d000e4cc:                       cecc                    sw      a1,28(a3)
d000e4ce:                       64388593                addi    a1,a7,1603
d000e4d2:                       cecc                    sw      a1,28(a3)
d000e4d4:                       0076ae23                sw      t2,28(a3)
d000e4d8:                       0056ae23                sw      t0,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e4dc:                /----- 020e0263                beqz    t3,d000e500 <shutdown_finalize+0x1c4>
d000e4e0:                |      4681                    li      a3,0
d000e4e2:                |      4771                    li      a4,28
d000e4e4:                |      c00007b7                lui     a5,0xc0000
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e4e8:                |  /-> 00eed5b3                srl     a1,t4,a4
d000e4ec:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e4ee:                |  |   95b2                    add     a1,a1,a2
d000e4f0:                |  |   0005c583                lbu     a1,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e4f4:                |  |   cfcc                    sw      a1,28(a5)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e4f6:                |  |   0685                    addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e4f8:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e4fa:                |  |   1771                    addi    a4,a4,-4
d000e4fc:                |  \-- feb6e6e3                bltu    a3,a1,d000e4e8 <shutdown_finalize+0x1ac>
d000e500:                \----> c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e504:                       0065ae23                sw      t1,28(a1) # c000001c <_stack_end+0xdffe001c>
d000e508:                       cdc8                    sw      a0,28(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:391
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000e50a:                       b0001073                csrw    mcycle,zero
d000e50e:                       00001517                auipc   a0,0x1
d000e512:                       17650513                addi    a0,a0,374 # d000f684 <kUartTxFifoCpuCycles>
d000e516:                       4108                    lw      a0,0(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e518:                   /-> 49d0                    lw      a2,20(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:398
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000e51a:                   |   b00026f3                csrr    a3,mcycle
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000e51e:                   |   8a21                    andi    a2,a2,8
d000e520:                   |   00163613                seqz    a2,a2
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:399
  } while (mcycle < kUartTxFifoCpuCycles && !tx_idle);
d000e524:                   |   00a6b6b3                sltu    a3,a3,a0
d000e528:                   |   8e75                    and     a2,a2,a3
d000e52a:                   \-- f67d                    bnez    a2,d000e518 <shutdown_finalize+0x1dc>
d000e52c:                       c11f0537                lui     a0,0xc11f0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e530:                       00052423                sw      zero,8(a0) # c11f0008 <_stack_end+0xe11d0008>
d000e534:                       c1140537                lui     a0,0xc1140
d000e538:                       04000593                li      a1,64
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000e53c:                       cd0c                    sw      a1,24(a0)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000e53e:                       cd0c                    sw      a1,24(a0)
d000e540:                       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e542:                       c94c                    sw      a1,20(a0)
d000e544:                       cd4c                    sw      a1,28(a0)
d000e546:                       c0410837                lui     a6,0xc0410
d000e54a:                       4619                    li      a2,6
d000e54c:                       00c82223                sw      a2,4(a6) # c0410004 <_stack_end+0xe03f0004>
d000e550:                       c10006b7                lui     a3,0xc1000
d000e554:                       0006a823                sw      zero,16(a3) # c1000010 <_stack_end+0xe0fe0010>
d000e558:                       c11c06b7                lui     a3,0xc11c0
d000e55c:                       0006a023                sw      zero,0(a3) # c11c0000 <_stack_end+0xe11a0000>
d000e560:                       0006a423                sw      zero,8(a3)
d000e564:                       80000737                lui     a4,0x80000
d000e568:                       177d                    addi    a4,a4,-1
d000e56a:                       009897b7                lui     a5,0x989
d000e56e:                       d0078793                addi    a5,a5,-768 # 988d00 <_rom_ext_virtual_size+0x948d00>
d000e572:                       4509                    li      a0,2
shutdown_hang():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:452
  asm volatile(
d000e574:                   /-> cacc                    sw      a1,20(a3)
d000e576:                   |   00c82223                sw      a2,4(a6)
d000e57a:                   |   00000297                auipc   t0,0x0
d000e57e:                   |   ffa28293                addi    t0,t0,-6 # d000e574 <shutdown_finalize+0x238>
d000e582:                   |   0022d293                srli    t0,t0,0x2
d000e586:                   |   3b029073                csrw    pmpaddr0,t0
d000e58a:                   |   00000297                auipc   t0,0x0
d000e58e:                   |   04a28293                addi    t0,t0,74 # d000e5d4 <_text_end>
d000e592:                   |   0022d293                srli    t0,t0,0x2
d000e596:                   |   3b129073                csrw    pmpaddr1,t0
d000e59a:                   |   3b271073                csrw    pmpaddr2,a4
d000e59e:                   |   3a079073                csrw    pmpcfg0,a5
d000e5a2:                   |   3a101073                csrw    pmpcfg1,zero
d000e5a6:                   |   3a201073                csrw    pmpcfg2,zero
d000e5aa:                   |   3a301073                csrw    pmpcfg3,zero
d000e5ae:                   |   74751073                csrw    0x747,a0
d000e5b2:                   |   10500073                wfi
d000e5b6:                   |   10500073                wfi
d000e5ba:                   |   10500073                wfi
d000e5be:                   |   10500073                wfi
d000e5c2:                   +-- bf4d                    j       d000e574 <shutdown_finalize+0x238>
d000e5c4:                   |   10500073                wfi
d000e5c8:                   |   10500073                wfi
d000e5cc:                   +-- b765                    j       d000e574 <shutdown_finalize+0x238>
d000e5ce:                   |   10500073                wfi
d000e5d2:                   \-- b74d                    j       d000e574 <shutdown_finalize+0x238>
